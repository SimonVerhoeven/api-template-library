{
  "mappings" : [ {
    "id" : "2b32d121-f0d1-432b-bb35-60db9e350e96",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b32d121-f0d1-432b-bb35-60db9e350e96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.888263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b0469c5d-6088-4959-a948-a2bd9ccffe9c",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0469c5d-6088-4959-a948-a2bd9ccffe9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.888181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4279a38e-525d-41e0-beed-aec61765c63d",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4279a38e-525d-41e0-beed-aec61765c63d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.888084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "42e3b2b2-195b-413b-87b1-fdc9777d7aed",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42e3b2b2-195b-413b-87b1-fdc9777d7aed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f0fb784a-60e3-405f-bbf1-9e8e627af9b0",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0fb784a-60e3-405f-bbf1-9e8e627af9b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b165f671-7100-4c94-906f-4917dc7d0cd8",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b165f671-7100-4c94-906f-4917dc7d0cd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "199b3b79-b918-4489-8462-d195bf9ce04b",
    "name" : "SC/ST  Certificate (application/json)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "199b3b79-b918-4489-8462-d195bf9ce04b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "cb861da3-a6c4-4dae-a1cf-020c144d55c9",
    "name" : "SC/ST  Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/shcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "cb861da3-a6c4-4dae-a1cf-020c144d55c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.88755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "shcer"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "95a68a91-1afc-4418-9921-638a6931d83f",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95a68a91-1afc-4418-9921-638a6931d83f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "c4508434-86f7-44c5-805d-9284404c8237",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4508434-86f7-44c5-805d-9284404c8237",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.88735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "165f2704-babf-42e3-ac14-c4615ce19e82",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "165f2704-babf-42e3-ac14-c4615ce19e82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "acdd8524-277e-4c3b-989b-232a3e7b93a1",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acdd8524-277e-4c3b-989b-232a3e7b93a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.887089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d8370865-5b3b-4851-9829-61d795d1ff34",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8370865-5b3b-4851-9829-61d795d1ff34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.88699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "6272de39-5366-40de-b001-5860782ddb37",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6272de39-5366-40de-b001-5860782ddb37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.8869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "05bc0c75-ff12-4524-a294-3b2c3e1a037a",
    "name" : "Residence Certificate (application/json)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05bc0c75-ff12-4524-a294-3b2c3e1a037a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "ec081e9f-5deb-4af8-a46f-c71bb184dc56",
    "name" : "Residence Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/rscer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "ec081e9f-5deb-4af8-a46f-c71bb184dc56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rscer"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "4b52c54b-caf4-4d26-94e5-cf85d92b8339",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b52c54b-caf4-4d26-94e5-cf85d92b8339",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e1f42be3-7208-4a70-8391-6e85763178d9",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1f42be3-7208-4a70-8391-6e85763178d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e3928ac5-bb1c-4cae-be2c-6ac4c0d15ad0",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3928ac5-bb1c-4cae-be2c-6ac4c0d15ad0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "831ea260-8178-41ae-9593-0995901533e7",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "831ea260-8178-41ae-9593-0995901533e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "65f6dd29-a37f-4da1-a2d7-3660800542c1",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65f6dd29-a37f-4da1-a2d7-3660800542c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886185Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b8277975-3520-4ac5-8454-f98e7bffc13e",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8277975-3520-4ac5-8454-f98e7bffc13e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d0890ce0-2466-49bf-9106-7bfedb2d5e7b",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0890ce0-2466-49bf-9106-7bfedb2d5e7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.886012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "db189829-f951-4af3-9e0a-5fac218fe873",
    "name" : "Income Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "db189829-f951-4af3-9e0a-5fac218fe873",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "9cab7cc7-7898-4e13-9c3d-b7d5dc08250c",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cab7cc7-7898-4e13-9c3d-b7d5dc08250c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "71bf3869-6259-4973-a1fc-a62d690f398d",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71bf3869-6259-4973-a1fc-a62d690f398d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "763c9f97-7417-4436-a71b-90064b83c725",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "763c9f97-7417-4436-a71b-90064b83c725",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "ad57fd6d-4af7-4c85-b10d-6fc718fe6d7f",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad57fd6d-4af7-4c85-b10d-6fc718fe6d7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f2eedcfb-c656-442e-8c3a-81567b97f0da",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2eedcfb-c656-442e-8c3a-81567b97f0da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "caf15b09-cce4-4b03-a093-65793bf98b28",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "caf15b09-cce4-4b03-a093-65793bf98b28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.88537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "7f88ca8c-e77c-4cd1-895e-020b896bae79",
    "name" : "Dependency Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f88ca8c-e77c-4cd1-895e-020b896bae79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "58209de6-5604-46ec-a981-2eebdbbc1de2",
    "name" : "Dependency Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "58209de6-5604-46ec-a981-2eebdbbc1de2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpcer"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "9e4a5bdd-114e-4430-9e6f-04c4aa87e333",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e4a5bdd-114e-4430-9e6f-04c4aa87e333",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.885019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "3f6619ab-1ded-4c62-88f7-97286d64c825",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f6619ab-1ded-4c62-88f7-97286d64c825",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.88486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "a5d4f462-62e6-4f0e-a9e3-1c568026dc84",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5d4f462-62e6-4f0e-a9e3-1c568026dc84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.884704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "d1fdf5e1-9619-414c-b102-4c5c00742e7b",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1fdf5e1-9619-414c-b102-4c5c00742e7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.88461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "e583bbba-ef0f-47a9-bb28-15bdfc16eace",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e583bbba-ef0f-47a9-bb28-15bdfc16eace",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.884515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "46111178-4e01-4617-b2ce-6be42464e35e",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46111178-4e01-4617-b2ce-6be42464e35e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.884405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "17ad95e8-f56d-4de0-b3f5-34207473a433",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17ad95e8-f56d-4de0-b3f5-34207473a433",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.884201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "6318c650-981a-4af7-8486-92f23f29259b",
    "name" : "Domicile Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "6318c650-981a-4af7-8486-92f23f29259b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.884042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "a6328e3e-7f22-46b4-bf63-edfdd92c2922",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6328e3e-7f22-46b4-bf63-edfdd92c2922",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "a31796ec-1d70-459a-b7e8-2495b86e626d",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a31796ec-1d70-459a-b7e8-2495b86e626d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "9040c4b4-d22c-4822-865c-2a1edf3d262c",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9040c4b4-d22c-4822-865c-2a1edf3d262c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "7e808874-ab8c-442c-ae2c-1b19f081d0c4",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e808874-ab8c-442c-ae2c-1b19f081d0c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "a0269230-6002-4d60-94cc-3ad91afd45dd",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0269230-6002-4d60-94cc-3ad91afd45dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "cedca834-ca68-440e-8655-52c98d61c160",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cedca834-ca68-440e-8655-52c98d61c160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "c8c4369e-b175-4379-9ba8-4bd1f95719df",
    "name" : "Character Certificate (application/json)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8c4369e-b175-4379-9ba8-4bd1f95719df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883397Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "2d2ce4bb-635f-4e11-bd82-ff927ae1e511",
    "name" : "Character Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/chcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "2d2ce4bb-635f-4e11-bd82-ff927ae1e511",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:46.883249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "chcer"
        }
      }
    },
    "insertionIndex" : 47
  } ]
}