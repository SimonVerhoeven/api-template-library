{
  "mappings" : [ {
    "id" : "3e3935bb-5619-37f7-a200-4190f2a10eb1",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/ujarqc954jr1rycldvnzbbg0unmi73gw24xl1uso2b4jvsgx55virrbz4vrwlu1felia9mdpwsepg9rlemqgqgevsact32b11ir4htnxvvn2mhh551bjom5wbdtt3gxog0qztrj0b61f6y0o96w97hf:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"1ft68x66dlvbw6myn3bkl7xyxz6u6csf3a2t8b2\", \"s9u00xjo7wqe5hswlnpm87rxjhi6jiay9kvw160waaevft19yjxbmgvvcfu1yxiwb28d8lrs9pc24wg4irsibhivh770alx0rm20t50o93c30mtjylq1p\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e3935bb-5619-37f7-a200-4190f2a10eb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "85da6a50-28e6-393d-885c-e135c733d27f",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/fq27h7q09c6lkw4xq43kumlqlkia6qyeuumwh8j01ppx42c7a66jhexbo9u4er70c3li78n6ti:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"063av2imye55wo4z5k7xhm84z0ygofavqv9qsaejw7cuo5bi4b3z4y13utuubd\",\n      \"description\" : \"Soluta officia qui et. Voluptatem asperiores sint est ab sunt doloribus. Nemo magni minima nulla architecto itaque culpa. Explicabo accusamus impedit nisi alias.\",\n      \"location\" : \"3skr47ccyovhjo79a77zz5ondw72hhjm\",\n      \"title\" : \"Velit est soluta omnis consequatur soluta repudiandae.\"\n    },\n    \"role\" : \"cfymdme9aphfovqom32wtoqlaq7gwomv4dvdjd6qf5lvirdm998qhxw10yngeiilyvbd95\",\n    \"members\" : [ \"1dbzoy2ebbzghfxahr2emcg7riu5kjaerdolx41tyk3esowdcfu6rk24b524v09yh72kzmwtp3gzsadydja626vbi9icx\", \"iuq7n3i885\", \"38xbuaqegoeajcu95yu03goei4abo\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ihgrmpkcbuflu05643ubqvdpzmbjzh78lhxal5srpstsvk2bxi79w20tls7px5qf5sm0kcj1xylv8934cy2w7n12b8cdysrstedmhk6u7dj5\",\n      \"description\" : \"Omnis distinctio libero reiciendis. Eos dolores eum dolorum quia. Amet sequi repellendus adipisci et. Explicabo maiores at. Et quis dolorum.\",\n      \"location\" : \"ikymu5un1f6a1wpdb2j6u476tvj6znwbb7xuukx2tjtn0x87ttlaj\",\n      \"title\" : \"Enim velit velit sed et non ullam dignissimos.\"\n    },\n    \"role\" : \"anxtc61z93bs6np0d94rjyn81eewsa4kjfvsxpc80511qlct2dztv7w42sg8ljjkpngt8h47k0ox5ssm6n6ywbd3m2olgbmyrcvc3px4pdu4tiv9j7qj1d07dmhutihkh1dcgb0gwi0h4p\",\n    \"members\" : [ \"ize38xx09nnqgg8ef7brt68hwkjyauz26yd\", \"85ltxj4ynw\" ]\n  } ],\n  \"etag\" : \"qui\",\n  \"version\" : 885500244,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"71tuszd8mk9nfkok173gvyse9cliv42xpxzxu4chvfyi0bf5\", \"2msdbcuau6ra00zzez768ok2ueczf9i5alsku0ygdcli5xy6krq0m1vy9gt0lc6raazkzv5wp1dx1axk7urv4bfjfhgmw\", \"zt797orwuq3algtsh3jx0vvcn80sq5yngeq614raxkh3y2hubqrhdk\", \"hqoje0d2kplulaejkjj9q8kvz5b5ynur30dt7sjbhq96jqfebdksdsdj0bp6atgdg4m5pur3mvqpwfv4vwym15ynnb\", \"qzuurjmgrug1y6o4b4fs5wwdk9zcot817cq8e3o9gnyl3chjhowj88muwbazxda2kglk13cnzge8lo1bqkliun1j2v1oeidkluoge96ffsh4eu8v5x97mx7z4cw7yz1ye4iu7suw4ge3on\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"2492agae5kuqq7ey23ryx14ludodq0n1r3ooiprm620an89uggfnh1komsm5h7o1r9vxyhzq2jorq\", \"6xjh2hro1s2k8k21suudqg1qmx793tvgmdp5dvmd3j9t6sv8wil0quo0m56dx36oji82on1xfgjwx1i3req1wxwlvek8iydx5ql9utzialsus45o1if2wwl687bl9zif40rs8mdwq9etkvioir8atg10xabhfejmwg3eyq49lgf79uby2j8\", \"gx3mehbvfwm1ppn01kr5ysa4b\", \"m4tn5grd3l0andbgrl7fjx96pt97tqe4gkqj5gd5\", \"7jrrddjce71zggxobfrmhw1enjq8gvlwgdd7j2flufy5rxk0k51yxixir538l7pun74pqvsirxepsdms4ibm06y0q4ahzi6eefaw3f5em11n4nveviltr4vo2n2udfx625u4lb462oew1h9gh9875jxlxargwr6smrntg39jpxbnhfp4eg25m47xom9hylsm8ajtg2xf\", \"clwl043k2mcj1o4tj9omx91uwgnaahs8gf4quybg8jgfou0qzdi58xee52sbs00dlpd27k37k7mevpsotq7ocz5uxmsisz\", \"bdoxg45wl0t6we5135dfmtu42bp96135c8xh28bwf3kswatg39f7fup24mfqew0xhfa7erv0dv65widxcbmvo40qncycnhnorxubq8yyuovmcwzgmr8w35r53leorbvfl4j513bs\", \"epzlzo34mtdwqd21ab0uzopn9ksqzo93jzh0c7z6mh1ml9646xyvzv0aqeszgil1o9ms4ktudhmg6r\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kunlbl4jgg08b3cvi96i8etknql83uzqe1ijdqptdlt64konyk05zdi27adpprjtey8k60udxtyrju05jr7geewskg470vh74wdztu3uch\", \"vscku\", \"zefr9qnt3ll7nbgaas4t14031om27jwy7dczakpvcwpkchk23diunbi0w4vne47b6x0qf9mwdakldfn91hd1of4xdke6z8lwkmrogl763d8nwdrz9oh0mtct1cmrwu8b6olq5tz5y2v4w0kvm56p7wxpvbd20iiig7lfq4275xmm0vgity3z5g3dcj\", \"og2qohluxkvd0pj0gd8g4uw5nws5\", \"kb05hj3gkzqo97u5fjkyunuo2uc6zsxh5tew0jd8l4em7lvgxz7518i\", \"9nefuinpgmobrn02heujot4gpmbsxiy\", \"dz9ot9l0xfw42yuj2vtuj8tgr77qx8plqzw1y8z2d7kivs1ng3ps8uoj7n1pxdvuyct1g\", \"tb0sufyggj8vu7vwav21bz5y1gcd8jp48h6ihfms11ulrg30cvv2svxhw0zqiuroi96mtnl3fs9m3gzc6vqiphishclwwkvtrtuoqp8wt9niducsyl4fwkg88\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xxiep2hni7i9u513o9rioprmj0lhjshxbyr6x104anbikxnxzxyehjb8ohppa873dhd6tlpl9a826awg0dtkc3gcbn04s4czhz230amkt80fp6tqtixh9it0gjzcck2143qkfo\", \"0fr10llskr0zuxkuqx5oyye6c6pmuch5pjilgrnbjqtlaqp4zy8k4qlggkriehgtrlab81fy4je9t462q6vo5bsdfyun99of6l8i3ajw63tfmei25567tuw32ob8576h19c6e087n9c0piy7v7duh20vxq06lslayyb8jwktxg57rhy0ndnk8k9srl30dkl\", \"iklwo9c7omvv3gqcjk984mf03dky0m406d51yez1820csdjvt4dr4bmjkt20h5aajlu6xap3fim5qqhwfcwbr60l6m1a6t9evv0v90u9adt7r2rmil1xeduk6wzqjfv2tnajqpijcjb\", \"3kinf6sj62ol0igg4581gzlb7vxa4r0jvrpwe5kb8tkih1qvj8ka3twchna5xzlf6ajqxe0wvgg64b0g0we6oyqoy9hqroq9hc4plwb033n81drp31c6szduyqrrb35rgmlfld75wm41z5zo7c4ay4mq563g4uzco3ly6fyye3c8n40ki1dd6189b8pv\", \"j2nxhhfrri7uv96mg8tah24p6p4pq82f0g8dmnx873fvghf9o623i0428a7f99c2vr5hc579gyl8sk8pteceus7g4y7kiqco29qkktkao1it2fv6vcca3vqlndb3fq8s4gqu\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"rwmrng87ww6j6mvajpxdl1yee2mhktcy8vp267qk6fws3zx8yq7b\" ]\n    } ],\n    \"service\" : \"4vuc0pwh8lb05m238mdgkql4ha5bjcglcykk3xl5nmrx\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"gc24zp5ybgh65iswkvn1lc13hll9npbt88ch3ryafges9wcipimpcd45m3csyitse7tgehbb6kg840tudinc4lrqs59ompaneklt84n4satdz5zoh9sxbcltn9g9o1pxwng1fb\", \"8veb1td2d4ioil5cjhbh4lsbey3ugofx9nq2j0vvqf9mqymuhumh1dejnnswly6jueif0vlif61udnbjiozs2nk69xkbwzehr31erll7ddud8ksoo6b\", \"c8xj2phm3si3jv5c9ojjpj0kvzgivt0pphozz4bjdn3tphjpfonspmsthota7smqajznithhc911vyawc8e4xykx6wt6g4enzda8o4l7cp9alq0dzvzu18yw\", \"k4w9z28uxgezikqle59b1tuogrt2odacawtx6vcya7gyjuysqndp0hc14qx1alp7x\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kpkb7l4ichtz5cymywtewid00nkqd94lus6wng9svhl9m68ghnzezmuvoyhdq32vj1kwp732d473we0bpr7ajh\" ]\n    } ],\n    \"service\" : \"68pty0z1gnv13ztop3i8hjud9oet76ceuduo2bnmu7\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0ebcinrh00biyldgjmu4c\", \"epg960bk5nbdjrkldrp4cu3afwpt3i66lo4bn82mgtlppaom65u5zph8vswrz2yi0basnfgheoitko\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"9pxnrkxdlippawtghgs09evr93dmd9jp5xpopjutevw93901tmplrbzch70jsorsqfpbs5tgijnk2yub5wczvnjmm3har80d5ygpikeqkxwjtxbkk58qdqrdzo56wsmtt6bx09us9l4ih\", \"j5s44acwuvwif8mr2og3nclia0ox8mds9ho2es1l1bp3jzsqdc0ob8jjcnih0dkcdiq1xe0e1a6qn79pq3xumhp\", \"xjpnnfbehlcvy7yyv9hj8ozw1uy3uaifyjqatp38hgw0jdaqgvcxqrwiuhctbgndk8vwk6o0zcpheb8n031cfbzo67tdxjfizpp0l\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"xeium3lxdvazmswpbryhtvz9h96fpqemrxg5v7ue\", \"f95cf\", \"2xpm3sxg1u4bf2i0tdbyy08zllcfzzbshmqgwytqd9ljinxtnmgqqsqz0xt9kvmhlnpvjdatvli1m2mikeudivbbxzf82amytxnw5t8q6vv613dlsvxg30nnv9frbxehl3kqbhju6tbpwtb067xvtgibrq\", \"xh0x9o0tdez34wlyq9i0d1094nbwt3y3y8s9vobbuugfnh857nf9x9raoa45p8jdsqxvx0zku11q0rwcsdjuvahk5jlrnjom172kkfsf9k81m1er52s7sl6i4mwreslobzc70muyrkcne7amm\", \"ie0rvbsc6nxtwnkcqswr1b7g6j6b0zzxms2onsg8koikzquaf6t212m5m2ojba9yd9zm398z6cmyopek9xh0qrhwd\", \"cjxoh54j5ax9kkszvbzjn7epwqlv6nsl49blnjzahouuzofex914eoub8lviy6vw1wtis8scogvxgyyxie45zd2l2n0fhxb9r83p6yw4\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"n7yshjdcw7cy8bm0abm28u373m3tb8lqdh9lvy5d6p9ttnxcuezkhqkipob8bmpzybl080wvkgt09dfj80jlav5g\", \"eey880b0a934kn2zzcw4r9dzy73wbs588m2w9wles2tz1ui37xvv291kiapx9g2ngaofih1u701wlol25941gcrho9jor0i0o7av6zaodwrhycy1b85k1e7q4fmfd8426pq2262mjmbwy67jzul7634odl54kl96zsnysaxlh5pjl71tr786qw3y1zc6vydv\", \"k0wjqxp2rtrgxfb07xxffiy9dunq8qquqbjrpbk2l35mt0sh5h636v0spcx537wuz92v80qb6zl2bitndxt0bhoq0s7al29654ee9gz3ura1zjmhoe3q3kci311dn2nljqztiaof6bl2tkjhsyz\", \"zdk5qku17d3rnpdqiirwvaclkyfffocl30w7jsk8a7tb34kofc\", \"twx87ruoj6tw8pv02scldustpvdoubkm7tfkcgfaxkru619ex5g8uawfmeeunno9wv5g\", \"y5z2pi4bn1p0tx5lpdihqb9dy2ed0mlarb04svro056zux7t8s8coy8uk0yivh1j6t4qz1ehsamacrrrk3e9l3dguu7pxo5vz42w6z6nudu2b4byjz8pwoolpvx3a70qlgtddvuh\", \"719xspcr2cyce\", \"xm1rjp447u7cc3dup3242ttmtw8d4xr6h3w723e7ajbrt3sqrk5l5f3kmy48vn8tntp5dulo5nzvn3a0ngmcaloco95mrm70kcdviclhwarpkaqtbkr23w1w8llx7yhrwhtqkwbozfrd0csk3st7baxnioe3m7sfzovaj6echqbvxt511es7ig5t6xa5udwmw8nf3ab\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"oqob2xa57gppppsd5io6dr3ikyv03hd990fi8fu33pmq3s8lezhvs6lh5knip8x8qqcif883ihidcvc8ibzp4dxsqgpmrkicpbfhwrmybj\", \"57ay866da0lfh1pxx0otmlg7dih3dn3ifoz62zlyqj8zu5sdp9tyqxmqjavfsw0valw4aq6w86c\", \"0zib5jo19xr3\", \"ci102dq6gmsl70yqo55femf6vrek1vjjn975sa4hhw5cas30jpf4xc9\", \"itcdxrdrt50ingydrcnrwocs5sa0vhniz00p3ve4glww6pxlj71ifnu90rxnv74or4zwue77ojjb2i5nshh23fdiyh1xp48bn00v55ej03l\", \"jal5p0fcp69wglae6emr5slnmbzbv414u9ct2hq289by5qt4zccwhod8t5iap1koa\", \"7hhcs3n4fhxqpyu708mawueai5oyl98429gdfcpy0oo1o9t0ro68h2onesa280iln9ig7xk3xj3co1mpf9z6sgh474ic6ac7q8uyn5ojs3x29m6nmqfc33srubb7wquofpdal0thf2e35jrzqllnw43eyn1zuhjyymioigqr91rb6l2c2hii\", \"kibal5z0oo6knmr9vlzrfbnc19ikxcjsf4yn4oxx5zth4prqrdmb73v4hzlh94nlpsfnhp49u1kv0j0wxlq83juttahsnmigwi2r99081muczxjmhtp7br38k\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xkn91cbov7ffcze0558llaa6f17udhi9m04j8ag4fxqhvx10481wrvzyp8w84ueksyfgrg32cuh7ndm3mvew4sdqm15nv2e7\", \"npcv9bboq58hkafirzkr7sdocpcnk0o9jn5kiijqp2ikvfs2884bi609hcfr82ofygvb375f17o6akgjujpnynnwkawk722cbijofi9ebi8fdckh44drnluu8y1u0v0dbfd86osdal77kfnyvy5j5wtrdqaymq86u846w818n6cnnaho2z9bf7d70gpyfe26j1\", \"58v26q6d1z8m6kzacegrhom5q1i2bt8glwsiy3iqv8frx8w4lwuga6x4tyr28p035lnep7cg5uis59xhwhcmcl1ubzdd84vzw3iskm2o7ipymzj0gp3idl2gnjtibhofu1bh85caqgr7sw8667fuofgiaoz9i8fcs5mavzcti\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"p3wes4v32le6718poahl08k4ym02e8k17e4o7qc8bt8736eh649w7fz77re7ndcz9zoebbmvlsatxhy56ezp58trjp6nze8esr8c4xsxde\", \"yyk929557mr9yum0527eedykqjw44u91sa7tn05gz0311bocmk0qenj6egx1ybjw0s874e0dlhuktgy2tz6m4aefrauml10k58n1p2cspxrw9d2gcpadsdzgbavnchnc6i2hddnkvcavrt2xy4yvuo6p86x45ehap6kalve24eks\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"c3g4fi7rjsj5eawjkai6a24kgg03y9pxc64w3v91kjsfnoroopqzbgdmzxbc7ku08me4efrpimiz1yvlf034aydo6ryxzaur\", \"lhc26jynilh0yfo3mpbj2xcqylh7kqn3c8p3c5n1a6oo8qjzemzjui7458iherewhww6ni08ph863rkimnch5bhil1d0wmq9i6b1nhk5oj7qc\", \"d6hsvasssxjmnw7q530sfks4ojiby73c3yqvxx35k31d4l5bu76cbdge74q29rokwnye7g5aj3g6lh\" ]\n    } ],\n    \"service\" : \"wpbcq8cc8m3g0rrq04i4rh0tqjnuwi008n8tn98knqrn5wtwoih4fdpox1et5hzg0abw7tn5ezqlfr3ghehsdn3beurz9jllwuxaox13emi325an4uaiway2ycunckabrii04civez9ayp5lwto4uijxclv1ino2hs55g2ndna0d7so5qqfgj\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"65fewy6e5mid7gmndnjsykcy944izthivp60zhsi3s227j60nadq38akhwca1gr34vcrqwg1iv24k339ep3rkraq\", \"d9uh1xy2xiasipeqk177qvk8utjk4cyb4cq4ag9pa4kkdotyo9b4bnerex7bjr2o9uosq2w5iacqd6ote93lj3jmm9k11xpeetny9zyr8nj2eo77j1bsckd8ajmsynvxsvw515dyoa8h3lkw\", \"cooo0eptjjesm38icvwalwyicy2vy4qmma1fcpztvpxcedpzqkt4zsd5276z4j2v\", \"v0hdg8kwotk5p3lkaspzraxxpq8e2xwv9s0azhev7iamu2pgh2xyd3upsxygh2158d2ee8rldx1edwgxm\", \"j7vzt1scvk7\", \"3xeucui0owaz8azv8q3mqnhhgcroj22tmq1rj5l4193jixf9zaxuagbk44bt1fbptdzgd5y975q93620k495zkl96se58pu518idiu7wrmmk9pll\", \"1k7o45xdfegv2\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"n3vmc70bgav4unrbuzdtjbrvhee628tp097g5n5fqnp9w6j345fx3k03vz9uuohl\", \"irmcyaj49a5glr3b2bukzc3cl8khfu31suoj03m2bwatgs1ah673nqs9m7v77qmcb7e3bawftecdn62lju3jzkr6moha572wwr8ih40ewvnnowmra34xon5spnap7uopma6655u78875llqlzgogsjoeuf2ubfz4334k4qmfc0w91rmihixj5l\", \"qfoxfzvupte74kri9olpkdhs7vgxix4h6bqdw21gdvukkpzdd565sbam5qpzrlzu25q7ccj51kct81hkyt2bo6ib5uzrt2p5nxspi9i1bo6ymkgwi53x511k4iaed4qa7q597r215ejn9bllchwpakbc6guafw4jbanl68aso0v0q10ezpd5gzzsse3h6pl1nbovzn4k\", \"v344j\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"5qie768mhca42yn6c19wfm6vxjto77d3w1yh7maion8syv5hsrrw677bb9u1hcgb1jayitfwl45snei0fo2kek4cx75sbmpu0l1ydw1550g7m06mul7w1cty4p8pn9uyop880eidouzud1mtwltqhsbefvhjawc4p6nh72dd5u38h4o72453\", \"dynyviz6yfhnsmshzwllsiecrj1japmp4lz1qtrr5oy6cdmyw8hftzzip07nt0z1son3348g3v2x3tne9woyodh5kapa1zluvpdsrvzq8kbcdnj8nf2vzui808cf74o80j95uaza48kdndayoxja60r7h237m0zbbf9u3p6x7iq64rc45jcia8werdimymovo0fvf8\", \"m2hck8b1149uggtoo7covzdpttoktth1siqnb4vl1lq8anr1u07nlw0yzkkbhws\", \"rz0\", \"37kkfdsjtu371d8t0l6txa9\", \"8t5mzwxcqjaz9ugmbf09whg7q6apf8rhlrjmpzle7qomayexkaqt0hlvnjtb339pnfmrda47dcu7mnvcvwg98nyu09m1jiqk1kfd2kp4tbar4gvsix6vjvk6tfjsgnzmszbdsqhxbp2pwqf13dgp1svdxqu3gzznlikqzwrpn49m6xbjbcmnjby56siypacrxjwt8p06\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"7ooz6gve83dt61dhcd\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ry2ism0gs4l24lh31xkde4s64psqclbihc2mbf0o0vc9myyauwzs\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ykwtha9k73udvvektuwkleo5\", \"92q1rdea3eu22qop37bgx5764hw4y70t833wf0lnx5vqhp\", \"10dobw7hjitmpjx5dwm513h65vo\", \"3ddffqrxekfdoi\", \"6w6v3h9o9ktab8so0jjlx8l99zb6oyw006muu1ggy3by9j0t84j5d5en37uukt3x7iogog59785asbgg2o5m7fl9wuf0vv50h3leqyys4zmq0jsb9bb1f3xibiub5rpjmt565kuwil4mp8xcygq\" ]\n    } ],\n    \"service\" : \"ow882o229azbzposdn2nau818pd2hu1xe0kfu52iiq6pokqpi6v4xymnkl74jfrpcwibxwrboug3pghum8059w71y8ra0kxz38v9f39bc9iu6irph8u9y5zj42c9a0g2elzw0f\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"y3fu\", \"0a4j5pxbju1y2ns61rgoaiqc26ny4rvamufk5b45i01zci7c6ytf7p2jc6toghcsaeajcb7bg3fnvge7mg3xx00wkqbvqx3g83\", \"arw8f2jbins25ceivy4spge9lq3s9azuaaq158sev8kmaobcza6dvyxgr302f5jzok5j8460vh67dm02zrfe107mt10cx0gz7lhjmdlhp6u3crqc7pjxz69tctgexn994t\", \"azh9kpbcc6oeoiolw6zbs\", \"k1qca38ttp6woua9igjz744zxbavwbg0yon6he53rlzu553vpgordkd6dumaktyygpmhohjdugh8ukfqyrgnm79s7xvm4n0gc0h3z113d1kcxlt6b6fvoc88sli7u4i0wcsm505241xjw2p0u\", \"uw47yyi78ileustw1quv51hoppc4w\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"klrf0cy9gicb6tnwi06gaka5qrwzpw7842usnzrgu9nmd1el6ds7dt2uedr78xqmykpyijkwjf00kj04s257xcudfru86927kw87lb7oi0euduztjqg6jukjvzdiu8yc1ystcb7tcn2mivtzfqilnpagdv7hp2i4h1dyivf6v5n1ogsq06u3t\", \"vp383lt73qc1saqvz72bi6wwtw78dhtezco9m4d1dv71oinlilfe9viwohhlp4o13etitsaxx66yu356g3hr3zimm0z8h4v24q5oydzo78b511lf9lhy85ts87rnaahsx7e5s9s2uqcxnp6z4j3rghqe\", \"yzcwcazs8l2md9myi1miq03pj20r\", \"0v8llrxzkirm04wgzzjihohmij7diw7kd6yvyljjkfna87l1n6wp617bs1dmfq6fqinwv1y3\", \"cdvkkjetu1m3lcmozjmclbrj72l2qjyt82u\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"t3u5nf130qd29ph7gnq5d1n0qtfotaw6djnrt18atfrh3xz4nltu8bl45fgo0h1bu4h4lcu1kq9b3ykeoaby5q8zh8ygz2nvoy11ax7ololzy8dlkuimqzz7wyu9a1z2ndrskj22ff1ljr2wex5\", \"b16fapniiw6a0zcogrw611abqwona5ftvsxc3bbq4826b8\", \"px2xhnck3k5i1665n5nk4nbwigbuajbsij1jbkg7fiwjcp597ceal31ngfxjt5jdu056flg4jku65keskwcfht1u3h74m2hypsjytxh1z3u65s08b52md9zz9yuhjqr743iewliw0qds58aun7csdm7cyg2ppk4k\", \"5dgc9mnt5rsfuicdw282ikqfx61zggzag503ddevaxii19ap321zrow2d91dfwj3sqa79r5r\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"f63iefu9dr9utjw3rqekemr7ntg9f4d8qzko5bb49ogkj24n90tib8m332tkjcxe937a9chw\", \"7lmeta8ps6ierx0s4qtugexdbzj30odzp4gldgxzn7m4r97on4970j05p8pz4qzrscs8aa0doa9x92a6iclnzi9n92pr\", \"3zsoy68\", \"23sx7fx7s09g3v82ili6wble5yoh2zrrkic833y36u15ecaspsspl0k4685uxsdbgeywjpgcsycemz1ezd66lv\", \"a0gk0f5kjt1gljb7avhvtztareqwjukor1epsxcn82975st4zro8swe3kt8ujcmxjk7vj617ewaw7gj91wdselyq06t57ni0\" ]\n    } ],\n    \"service\" : \"towacdvp2yp1tzx5j177axpjb6zuf5odpyst76ncgbnf4tqxaxbzs7rt1918zqby0dt4qjreg0y65vsbg8xxpozkjhudrvh4pq1r2pvrp4aykfny8oteewxbkdqxuzqo25hekz\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"wtukxgpccu547kezx8zgipx5xydra7e9bpx6pf5o5tnj1xyv5kkc\", \"2hv7stn1hu28skxrwdtz7xs3fccilzrfx1d0it0cbp7b135lsc8q1h6xyec4qn3gzup32vpqm32uisif96abgq3g3ch1sfrgd6jm5jmwjfdtqdhxhs14bj\", \"r8yc3q7rrpjyf2tnxmoqnsl7d5yk3yrz1t\", \"n1y8gdc30amnh1cea9aumpz7qnzk35iv2cwk5qifwh55g3nujhncl8izzy40a9w3zoid3fre6z\", \"qyyh3bwhmm68xmyf0sbv00k3wswuprlcqljbusq1ez0ocjlfrcicqqtyrh3ucm\", \"sseghyuacwt7z5coqll8htj9a6i5yeq0w700469xz8owc7farf6ey0c70pylcnib6g9m9cl0xujvc88r8033v30lwnkgm2myjb8gflndvmxodp4qa1m3fagydzgk0hv6vzr26jm\" ]\n    } ],\n    \"service\" : \"3ez8icijdrc81mid3nist49ago0r9ict9h34653037majscejbxjrnztvsg4jfcdoqzumze3z5x8ewhbeyzaiy9u65rbgc2so9rjlbguexxt6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85da6a50-28e6-393d-885c-e135c733d27f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f010bfa8-5fd1-30a5-85e6-5a703ea2d8ed",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/vke9fa0ti59mm1jalfkdp3birenozns7cqv3gnkuzxv96j:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"up7dg79bu9qm2u2meu3zvgl5vpja79vqptu9osv7oo6mmkhquf79xslfetnnbg7k88ct4x68hmmbz77z1904paxztjcgyck6cmipw0rx7xbo9ajib4fqx\",\n      \"description\" : \"Ipsum ut commodi nemo fugiat dolorum natus. Labore sed quidem et repudiandae. Omnis esse pariatur iusto tenetur ut. Ab velit eligendi voluptatum et similique architecto. Iure impedit quis autem possim\",\n      \"location\" : \"oxwguy52y4k9jn2bz51bs8j3acoctyicpz7meuyc76ri30r7qvbeifispkngstyw31y74mskysbi9l7t0bsesg8vkapuveqspcuaz8vw2wcffeo54u8m51cy8lnizlehx3yoz1im123rmzzj4vlv2\",\n      \"title\" : \"Omnis minima et sed.\"\n    },\n    \"role\" : \"6tqsgrxlihz9vpfm229ye7f8dqw9ywv3b2h6qwvzo2mu116krfuzwn6mn8r03mkgxcuj1chbrgmkj5xt1fgpxdf4wz8eoy3m5rurk0i8y81qu2959qvwbgp17yet7wk0e3kqzr2rq2okvj87fze478lmk4bbuprf9vq4hiafyynng10oe4392\",\n    \"members\" : [ \"zrvaqzf7sdy3r3lvw4ry0erd05dwlkvk0m2zufrwcqd7bj1bp6ajwq3e39i8uhuoekxxm5s9qyd1rn8wgohqhkalp6tbachzckaua3friawjofdrr0\", \"fou37xabckp4kmw0n8uque1sycywldn24i4kif81lganrh8g4orxr7dirz1eomxrfuplbjb8ib7lke7ealpakrxrt3x80puv4wpc8ts0i9wwn6wqoc8fjokssrzmvsoc1jofv5ey691t060xwcc66dqbeg8jrse5obmbr3et2\", \"6fduv5qx9yuir8u8yhgxr5xr2bqwaetvckjqayqdnj5h\", \"n39qb7ilkf9b7780jkb82mnrszn3a2pvkxdiz35mup9hhccz78kj99ub8bpho4l84h50lpuzmkn1fbhnim18cfh5pxknyy184hq2qckk9mjnf91ct8st34r52xa6as\", \"fs7yd6k9x1sui7rqr5e88lczk3wnsdf1cpy759nn4548t56akutn91fumb70vfr\", \"oqmpkwd0ym6qjgpeovmth1pwn0gf9aub93sskdux3g544col2asvs5xc2bqfx3e0ptdvmcfpk8vkp1whwoapvtnxi9ak3n8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"itnw7yzw4ded2fq92g65plrmk35rbmukz6xtcedjabdgwvopqw5c479s4ia3tv0qnik0jrsdm01aumommcgjf8efpzn3wwb74hrcflsexmzhvnmo9ah1zl6kzir2sd6aeir1m96rjbn6zaqe0khiqhqbdrkycjtpebs\",\n      \"description\" : \"Et vel amet et velit optio. Blanditiis beatae aliquam asperiores porro qui illum. Ut qui molestiae est. Aspernatur ducimus aspernatur et quaerat cum omnis qui. Non molestiae placeat labore laborum.\",\n      \"location\" : \"2eou8so9ciplef6nb5f49vjgl6xkf6zc7f40b2cn6sz53jfabni81vcqgopj9hredlvguu70qjt8edvg9jvsknd83y3od7la5p7ed001wp0rdxm\",\n      \"title\" : \"Sunt ipsam voluptas ex labore quidem.\"\n    },\n    \"role\" : \"h4orf9b383h9yxp8rj4pb6os31k5aru5mts4031whz3dhjcpntiqb82r45ywt4fa65t3sbgevtp8t4wgr1sogrl9aggs6yijsd8lfqrpbnhmkkqgsmy2ye7ienrxtdx0t2p8ebfpv2s\",\n    \"members\" : [ \"50n96o6n4i3ujc8vidlwl01pc8xntawoxlnwxi6houajdp5mb1lojs60jhsliy9x0v7t81lec5dmh57l5dc3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ee5lv7mfywr98p8oo67zmwd4bo6su03vk8we9o9e3z6awbs570ktwjb81r85625bxh8fbmuwr2v08odtz54dvq3wwr8lgue0pp0711rfz14q5vkzj6trc8pf2mcfwqr135cb1j0oek\",\n      \"description\" : \"Repellendus numquam cupiditate fugiat. Est molestiae exercitationem inventore qui mollitia quis dolores. Qui alias consequatur eius ut et aut debitis. Expedita ut sequi ut sit neque qui voluptatibus.\",\n      \"location\" : \"lmogj1o5c8n93byi0i3tzsrgkz6cthp8j0q07z80ypqr5jtdfumyhvia3x269ls4dvzvg4jhggc2codfcamclsnctaw7kfx42kzhh1eofc6qkstje0f0nq1pxv86qzhdet6zhtkxyfp16uhqaxd4zt0q4k9m0u3nbrbjaltba\",\n      \"title\" : \"Saepe deserunt possimus dolorem est.\"\n    },\n    \"role\" : \"f7e3a84aw3ny38xl8i6xxudea1j6zopz3wibkcefqik6teber\",\n    \"members\" : [ \"9fph7gseaa8g19jog7b0p93\", \"1ldmfjddeih2wmj7pk5dwk99ejg986hs4deovdit2163zwjkbfesmvcqjdz0zmd81481kmft80psfmcv4j5cr7v2l1m1u43z4tmmy1\", \"5ftnzquantljzj81080ppcenzquxwuszmkif9n1blbcm5j77wg2muf829iwfjvixvgrh7jghotonty3jf2amejdnmgzpllcnw0r1dorek4db2gfgn5zy5vr6ltlcmrpkdbiy032gs4lall12ei5uxaonwglgc70cuy050ot6ev20y0j9b7khl\", \"mlqdcdzpy3wzoxcg9ar36c7xdhvwlv4gawcoae1hng26tbx0xx11p8ttjvuw3y1vwv0e\", \"kwbiiuyjurmpcz00uncedyllv1yhc3z3mron9q78lkyuf3g7rdhij8di1bmoun2lbvak22q7rk7nakj5wt11p7kgjliuqyadhlmcih7\", \"v88w6129z9g6rwxu33a8n66cao77q2gnm9ahjq0o4rpbe5rfj5rw\", \"h3ez3cz5xwtdgn2y8ic8t6ws4n9e3ut6owv51u9zhryugpdjgcg04c7mi6xgp6epn444vl32jq7qtlcpfcm3nyl7sfw6jrlry48cen1dailkk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"h1cuhvu31yi15mgo9u06dgkcrclp9pf808qnnvbetn8vjvd8nogg05cv0sygj4dl2qk9dju3toek6p5nd06g2xkemffbcikmyd35vo\",\n      \"description\" : \"Nemo labore sed quidem. Repudiandae voluptas nisi ullam officiis voluptatem quisquam. Ipsam aut esse quasi voluptatem. Cupiditate eos voluptatem accusantium. Ab illo id voluptatem et sunt aut.\",\n      \"location\" : \"6j83f0rhq7sr1f3xtngcqve3jgf8t9cgam4u12jmg2qc53hdjuqa2y1xyzl6xfvtr1opobmsl9k\",\n      \"title\" : \"Earum voluptatibus cum doloribus facere est ut voluptates.\"\n    },\n    \"role\" : \"nr1f60xggjr6akbk8ei4rolb21bqlwq2yr5atisgj9asuf357cdpce7cmlh0s694zy4i9naflj4fkkuvydoc81z5j715j1aetxiyy1g44e23dlesob914cffvnugq1eisb6hipcwbprkcamk1v6sgfg1ka13vm3f8x0p3kcyjtkhfleryo7p0bzolwl18d2aa3yo\",\n    \"members\" : [ \"dlhy3x0xr3m7el7rbz3nrjb5uxctq2q6p71knfvce7e0pmv9zw0p1w6bohwfm\", \"9d3ctbdl4ndwuukwl6h2d3qsp3wd3jtc2etk4rphqb6xc8z61eavg1cyj8lultazzlr487pj5p4csofv9il7f1s2dqxnov2wt284d06c6jzzu14kyhahozey6gkz2oy64ldhn93wwsbgur317p4l8kfm6wp9td9ene2aqz828f4q0nfphg\" ]\n  } ],\n  \"etag\" : \"fugit\",\n  \"version\" : 1763927329,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"gvyg0s3prtfo66h0f4thexers1hxk83wij9nclutr7ku144h1jcm5vec62yvzpa2qcugn1zc3cmyirlod7iburwoi0inlahf3rn6qe1sj\", \"qwr9i5eqag460r2xi775jxixi6hl0yy7tsmkmfw9ba4i1o6kbavrz3r77n8s8h2ecukngmcveuba51041lvbbpa7rwoamhasri84cl81dt1axm3lynvwkcgk2el167q4ikdlzxlv5z7ylxcagyodqbgnw14fy5tj00lhkgmwp4zyok7rw\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hed4kh5cis0lumjrp3w18doar41py0d356g22duq0olaoagorx8penybi7klc19rdq3wo7ellj7vmkwo1rbuhl292suk4exgk4ep52nyqbl055p61bgw539ec7ilyj8yh6xq2b9\", \"igwf1io0yzczu0z3pffxol5lgdrmuvg79lw328mw1ah8gk3pxrzcl1rh8eylldrw3tl1ic857jhxakzhidims2x367lxbbksfywixujups85sj2rv5ahsnr0du9u74t06qpoifhcabq12hom5\", \"yoummvaxypdj92nuldmdovxp9tdcdjgl4dve85jbgyobenvn9fun2xrhy02z49f55u0r2jndl4ot5pjj43lsi4ukcaudvl06cmxi11tup3qth9mdjki84exvzfhktxzjgmyl47iogz0viqdeiw1s5q5pjqsvy07smesxraizivcztwnyl9q2dkt3kp69bvl7fap3fpws\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"cx3c94lm9u69pu761xzr70rdrkrq5eyof2i89tvqaac2rqpwkird9mpdfxrijwqbv14atse01dkpbtrx643vcol1avoexzkavef54ukjyzubn4j0zpacoi256i5eh72fxtjdf6yo2wq7gnz67jsoa52paqunol6o5qwm5x8fj1haih0fmwysq1gov\", \"s7u2dehxiwp23ii3v2jz2nrscx02mmtwza8gu0gybpfb0eqgec2yhshg4umsb9g4rcd5g9kjbzobt38otz9meiv62xwbnr2229ssylhyj4hu9g05tvh1eqkgwmg8n0xej1d1pl28te9ky12tkwppd7ji0htpuzvzighd9tp0jzo6df6doy9haqmmhyokll5f\", \"z63hvq41ih5c3poxzxjk5lrom37d95zp843udoxe1l3oi34r6hbpbp9ee00jpk8ego2gy7t2floh9nrtp2axro01pjuo4uaycjv26eb2i8gk99ajdz6nx9ni5o1pi5j3qbb9mzpg9b4425x5rhe44eozj5q6ab9zwnchhctpwpfifvnwdjesxt1m\", \"hmkrdtcbfpjastvj8sf4cilln60qqwlqdsnsxx409p061ye3yi56gwu7pqrrroo8xym7iv4ngyw9h6xfkevjbelh9anhro9ifubohen1uet73fdyseshubh7ue3oko939mdbleq1c3\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"2nvy4lwcqt1ek34vwhy35wm8l5ckyhyl5sakjpp09843cs2cz7yndhr9r1a0q4fztjr8mwy3z5qbhtaz5pdjnfqq0x8os\", \"y3a6zwg5gpi48kjotrp1tgkhozboii8w9lruqx73hczy6oaqeta03pe49lxpzmnoeflxkju4ofhjl5c1ywy8ysa0aywjhl22vtsid0414bhosfvwh550ztnuf270y7qf4ajbmi5liw4swee3ubua8g5hnguyt8pmmugalbycph05bemrb\", \"dq0a3cfq8gsej3o40zmeexttmfwp22z4fpat8pfpr0o0ph6ei5si3gy1qjfojf148c9qqnhqj6bpe9lkeyx2ge45zz2klby9gjt5iiwqfxrqivk1zxd9sjoi6jdebkdjesqv8iudqea\", \"i1pmlf29hf8t9jr4lkexaagkst2t7j5p\", \"874n2z26dokrx07914f8hvtfybhgehxdyvyc73tud6zoyaia26ilpxc566a076tyezpqu6iyh5o8z0kp31mmd2bxq3pp9568t7i7lnxbodg7455hwau73cbsx708m9hoibxqj36daanhpduz2et5dn7h95z3wfsl262z3t27\" ]\n    } ],\n    \"service\" : \"9689i07s\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"voozaih6v29ez18eksxhz64ffvxvo1abx5wseqtt3hr6qktq0ywyvusrfw9k39d87ubatqryl99lqaca2jsv50s3b1qqw88j67leqcdqsbr2dp5k6tdcr1mrmwx3voc65sis7m1z0y8m4mw2pa3cvd47oc6iobj3sadvqpd6pmx4b1xiymh7f8liqq4teq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"zwt1r6ixfowlx4no6iwt8bdx91vwnpfbuwxj3ovfnmvof6dpgrc3y5gffx4gxn5t0n3qoewu\", \"hvke08zzggohiwih014ol2chca75p970sllpiv2y2572tn5of2vwvhm2t2pbylzwcsfr578lbtui64w6mpzdvj0n66mub5tbm1rr3h4aqy9lnld54o11la66keajuubj93kpaxiz06ygi4y092pf4sd53rc558zdq2wucjyikkred92\", \"w9ove6evt5y26wo4uwhcez4x77pgjgyv82u0u5xg3a8rr3iibebtqq9vb0v722rh6y8eg6ywpbz6j0ytexrhrx5fju4z9ogh11owc8j5pkg7z\", \"jk8x93oq3mdeyxpqnfndtmej6jeum1rtkwv1gzecl4gyw5gwx055zczgkerfebb2pcl3djipct8liuidpec65rglge75r6cwx16q0qp4bi93360yv9yaqvdjvwqc1wnfdhsoek623mfvwmgdes1d\", \"l7g6kc9ha21k3bab1gpfkuftflul9acj2j\", \"svc1wr7hvazzgg2biv0yunzffb8t9quhfbucyzb7v8kn08wspsqxynh9p7gh2e8uaaqc1zoekjfl0lnm1z4neta5mlzh415bchjhrn15d6osam7ruehvaoshp6g9fqhgyj9yybii3i01ng41l066yh98ex9w3q4tbwqvweb7xdjjzjn6d6r3igclyney4teq71\", \"1olyjq7uvrpcosg3b11ngdt2vq8jc5o4456c3y4uz2ewz03tph4xaogm2psd179j2ogsr6yezbx2e1kbwomwtlbw8lfh043qn8feza6fj35r3fzjkvjiapk\", \"f7linnyitnew0st9pvgj3i8qwlcho0fwoyk5rsbc519whvcvtrh9tpcqlb1ikk27hkkut\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"yiswyjiixom1eq2mqviygxb\", \"wdk3335cbvmgjmf8fyro6sfegj4sr9koof6my9l3k0zux494q244\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"4e00bl5gan51sg7oi939f13q6fv47l9wkmgpqnk7d7oa154lnwux0jbqowe83a20yqua2unrqhlv2cewnjcz2dmp68vrrbvbhn6a5mr6q5adxtyt7nnfz5gv9kd5ih7uel0q\", \"245\", \"bkv8rjf74sbqb21j5wa2rin7qffgeq\", \"28pwirfepfk72g452lkhd0898u1we2bj1gc8kyf26b5hegygi5q93028zd1wuq38vltt7g0psh9cs4ebs76g4hj0p6ls6nkq6tvb65zz7ja5ejpqgqqxum0x\", \"hrnbdkw2qqwd6kto6n9ifgvch1mvg6m5oknvimi6t8nsf95e3c2p5fbtylcjqzcqte3h5bdpev7lvu6sl\", \"mw6giqkg6zrzg26vrn1zhvpmgji6ng1pye18uxcqfa8s13l727zmd5kqknmo0i3ivt26fwbw60tzvsb033hzxprbv7411cq\", \"8lrub1i9khoikbbelr4xseq10bnc5erek9mez11f7gpw8zw45jogco2zda0xo1g9h5dw0wvyei34vjd1m7z74cnt\", \"4g87bf4rd7q1fnvmc6om3t9gbuz8gxc\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"uihd3yp0dokt9316lakwxahayhe5z649v9gb6qacz2nl7qtxv14pm5y7aaek9f9vbeml2i8jvgvjgn804hu9qcll6lip6kln5tk4m7pw484hzlz6v4tboc6z5sg5ndpt29xecxn1m\", \"7znw7yysxapjywsvwid0wqwnrbcky72nw1o3hg1ri5vekpmeym5darwcvpl121j8k88rsyizm2n7fg3z08wm6rowo9p7ietu1bt5n4u4trw6kbwuhcgp6pp\", \"7rxk3j060b24eavlm1ulqz8qbeft3xqmu5pafz5ulsqkvw5vmxldxfm5b9xzafr7brldvv189x4qhn3sp634jxozw6zi08uwalptfk7zvr26dnkbd17uzh886a70igni3ue68cwo5uuc14phgy\", \"48mjqbpqskvcrrrqkbffmk0pfffpltang38y5mw6y8tzv1fftdx1hu5lya0cgkfkpwf1im0ap3u3jet11qnt1l0yrquxllbjdnda51s615zzezobm3atxlu17jqw43flpv52nyhtip6yls9yeokq\", \"lms4bee2ocipzq540lhf6265hhnels4umct9186p3yjhycw40ke85p09xi45akap0xf6y3ofdc201oao881v47ma5ddh89h8ncxx49rh6i6m3j2holoefkjymfmdvz3ww3x193fz03wh4ckz7y1o24wjc2m82w2825lqnft4\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"34sxrt1ssrdx84h9t9kjhvani930vwbiiuioxsr2pbyuyijmlrz6trltngabhee1auv5078k4qbhv6osjcqew\", \"y4rlh20aydcpfryhct\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"9ke8r8t7eeke5x1wpnwaxhznzzq473nw214gvuymy2v3yhwzxtplj2fs76rqmwp8esff8u92rhbc0jqpjbxt8mutvuo3dhw0fr5p636k60qlxgb5rucefplhpladcycl8nvmom9b6n0ev2zoedb4ds5039hxq3lnhrf6fpyzfl4u7jm93utmitwv0yfrl\", \"3usbdygyddxkvg4qw1i25u40qfbwb4k3i2al8niodh0mr86xr4zj8hzas70mpm4etiyyrkvnj50pg5y9sgluk5i2rgoza2lx2obkd99q2o419ypjc9hcqn4x1v9stt7r31aqb491colr7re2obdbdqurfbhfitl99tgrc\", \"ty4leiu2zk2804riscniao43s5snyf6rvgwdjqe9gc54f29pf\", \"vi42ham3yxcu0fuypedi83cdb036w7bz1a9i1exjdyl9npmjig3f8b92dw\", \"qugzf6lw3ix0cfuzhiw9egn276nh1jyn3zhbop9hipdov185ojoyvxmj1k2s9tgr1pdavpkq4o4nx9utj0d7wkiywzbtyrsghaoj49md2l0yqj57xqfhai8hcciv95vh752ifacht2rc7a9r7r2703rz9h72k345uufook6lsq32evp\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ge34wp2q0u09a1q1op1yfvqyc2y1ilr2zpzbop7ool7n5y1gwfvw\", \"4mwk5ucq678qva5w36kcg6e5l0wnz6olycja5tj3t5hyn0wdl6op8k8v3oru8x\", \"z3k\", \"quu5cc7ttz86tklzq5qb6r7bkfdhuvwa5kabsfzpwpkm5w5szzxhk1o51n50s47ohzzvpl71p0xiwbc7fffs10516i0ysbuh\" ]\n    } ],\n    \"service\" : \"mit88f\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"r6k9i3g910alss20uxdw8yd87839wmiixfh0bxhxb9apm893o6ii1ao73km0s8x0p806rdvzybdj0xpk5h1jeieyywnfh9ciw5uomhyofu4wuc89omokgsjtev9vlrrm0f71gmrml27jc945mt4ljtg48i5v60u2hl7udcc3loetuc\", \"p0j\", \"5myhhypacrx83hdj9420dondqgtvb8zooxnmozer3yjm018r1lssvrx7i1qa4zplmo8yhh5nzx45\", \"k0molfn4v2r9p6corhxgtd50ai9iafy05ehf3vcll2f4kob6mpmk6fsvdyuhjzdg7qaj5geyu9ladlbesi7u16w5lyidkewlftoh2xre8k9puq58izrs6djz4nb2nm9jr1f4rggs15o3gen267ipg939nht6sbx5lfsgrpor8xpkrmm6qc1631aqntrfpych4r\", \"l0qv342ierds0nnz7y6fh6vss1xmsh2w6e8hk7hpjcwpk2pejhbsl2wcypxi714hms19sytcf625uhkejyc0ssk5lavw54z0rw\", \"l6bhe8nycebt2azq630w2vmwf1be8ys44w5nafqnl4hfm15vpggwafkeo18cjv5scyhhxthjo3iqw2asjvcl80c9y4ahq2sudv\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"5z524horwn7dvczhs105zj6x1vdqdde7w374405sppge1etkkm9542cavt2s5rl0ei5f8tlp\", \"mgf3vu8ohowz5igguim192x37329n2lkjssiv67p224gb51ugq1vttsvn1jurtsebxm0o5pijaa6elvhaumn8d3mx5fuvd9jd9s36mb7r6q978kwhm7o6e4\", \"91nq4uj5i6o4xzko68hoomozjiqmmd51j10otpxrcqw2dnhlx33\", \"vxx5r8a06qmtkit1lkg5sw3bddymwa7an08q69g5vpcvw46duganjx930qzslyeg5x92zqvwj2sa0bihqfqfnv36vo40wp9vxb6afiotvmapbfyonl20wfsav3ln1bhbcb1e6b30lw7tyfre4zxz5hdm1pyxbf6woodivss6v1yhk\", \"f54ky0fh6tfs4yw3uehmdzhf0ebme87c9xwge741d2tssbjh0cr0xrhvsb6bboadkxty3pielbj7v44q908nsg16jrpltmlm8u2jl6wdgzf99p2s5uajrmbpiuj9c6zf5rwimm3oxjwzxdmhcz3zdh8aap8z\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"cuty8oxb9y6wmgkb2hm6swb9gw1u3rfuq9y5i11oaubwibvytt6er5vtui\", \"pzin5b1klvy1a3fmyijyjwyif8zu2e8qruk7ahl03kp70r7xl6ublfhkypbg6qnu9hhqq2419jragfb3ele1p8yhkyt59o172990vbj0cfm60k73o8vd0qn74o1k0kxo63ci0fgs3iwl1pby09914lev3o641zz2nxmu0jyueq\", \"k8gvcq14q20hs9xomqb9st1qk498qyktwbvdl\", \"mzywo\", \"pkg7dgqcy9wsgjpbin\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"48e8z72bxymx6juvjpylfltnwdcxatsmpcysml3s7owfwg03jq9ftcpz6txgmbx3ybjenz363tg2k7tdmoy2lvutckyev8fzjtubs71mwlz\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7p01tocj4eh1n3jqnicl5x0grw9h0c2xmhr9fu61g9uxfwe\", \"lz7o0gs6um9s9xt4n8tdbivsxla5srfen5nyxlbgm89jy4s610fpx\", \"82ombirrlbhtiqp0oqh0r\", \"odgb7yogomjvdi8cvz3xqa6u7q850ol947z8fwk8aldu7xhpsf3v4opn4weyhd3kez1bqv67avr270yv\" ]\n    } ],\n    \"service\" : \"spddbw6l1eulfnx84dt6ssu56674rkrul0wodbs191jrvls64jyhwsqxrw4q3zkl12840rreh4xvt8evg31rizv0\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"td14kvydd2b4syrkagnzfl3e98pj0iz625bai04g42j5ztw54wzx2lzmctr8nxchpe7sbtryqtncbqar4bwwwcisu6lolxk3t30p1nbhnp9vw6d\", \"pzgh65xf3za5x2lud2rw1de4ds50vgf3p7s7t8st7oksr32glr77hg1rtxg0zr5ginh9ougxgy5ulcm5jjm5cjvawtbkurvmurjvzrlhalc861dqbcwxx6xjuhvrgpf\", \"8ms0ydbbbxwd1zjcqq1sju8kfgf2uxqawp4p651b60zycfceyklb2ubir4jxkzaxpuytsdvgty9jvdj361nvtso7oodpc98j05n2kacuaboss41lhr9kwp3buqiy9fwu12su\", \"rzhlbyz1x257l2vaj0\", \"oq4re5natfzn0tcoc8qcyonjl0805h8osmjy6fvkw75b5sifepgaojdsx0w9rusatt1qg3ggx6v2aj8xmro8fy743v2bz0sqdyzjkr8uy0jcmao\", \"fwuk4omzgkfxystorswzpg39vf9wroa0jbodt9pndaxblsmr8wo24aabcjz66jqdi538zqx7mp1xq61ijn2njjhfby46656sxc0c7ggn4qks11bf3j8yabok8h3o3nfjrbdupmoql\", \"zqbx6s21qu3n2glrnsbk5nbfzxmr0c12mxq39ozdmbp4mqejeujf81wg3upadyqe1r5z5dcgbbfg0z75yap12mazmn7ftymm05rha0d\", \"yrg4zzch1p6l0la1pp5nz4ww5gznc99i8fig0c47js7f6xgo4m1mwkvxqcw51lpwli5c140l95qyvmiczjjvo\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"421v64eebxnmmjyyg6ma8rn20p03fpizm8fwuzup3nz4zjf8z7xfz\", \"rvu5gu82d4gu7hfvarh3a7sqcq3dn7829zr40o6vvkly6alttnuey2vohb3a\", \"1zud6zap5f\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"j6ck1oq4g9u7wx25pjpu4dqaf6zf869fg5n3yljrb20nnavki29x0oo5i1iu9nbf6o1f9vza\", \"tmqnvs9xxp7d74nwb8jbfqai5t9cnafxsb6xslk5sua5iqtxonaafgs\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"55j152qjtrujskyu7z3pf6h7\", \"er1vn7u9j7lenitf1ozx038smd21tl6ovi9dw7xeqypnxwqlldix99\", \"j08wze3pnrqrlg28xud6hrm7fu4l3j6w9wlprkz3vjgwv7w1by7nk05bscrl1n46jhh7b8yu\" ]\n    } ],\n    \"service\" : \"8b9adk5ub9i7lsytx7clpndcbofdkbzjfppjrl0r69kpixze9qcfu3w98vrl7ikoyx45ylgq6kvg0w5scgn69at8kie46uobybfgra4t3pm48px1urfgo20vc73fcgg0u\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"qsx6c1gkkv1ojnf3x5bx7b1c4h5wxwmu9vnkeb8kx3s5v4dvkuulw5i2x2ypg3xb9ng\", \"b3m40s4sh55djv\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"azti1vz2a5pd4zvfkud3jlyzqajvxvahj5bso706x2u0hy7uskvpgywndxl1wesqd1bzc2kmph2if\", \"3g6fb9y0ug7m33cw74wy63u47kti2bhxsbcid1sxhyuajwnb6a8h72r6igmkrtgxslyuvb52go1s984wsp183cvyo6hfbcbgovwgdvf6lj5\", \"1ao581i9tjcyoe12m6yisulwg4do3ojog7kce9dgnojrp41r69ga0wafwajvbqk5r6jtji4pqptgvdwpfpvsxhzgan7hxl79kcva14tidlfw63wzi971r1ximo8f\", \"o2t8i3zk42um5ckbyluggz1e3hfirnqndwj3mt71s14sit7dnzvirosvy6tsq0q1nfmiyjz2oojq5jl8hxtutudqnoro9bwu91as7\", \"4ml2tfeg7d2jtt0mf7nq5123wluyn5owr0a8lb2mdxer0x4tmbe7pmudn18wvb15fabd2tj1eybvd8610wb1tzui2chrbct6o81t5e21ghaid7mol0ijsps3kfmsw3pgz3nribcyo1ta7ec\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"bkw424x75347j2gr3ghh806gtteczkgbho37bi5q86ok6ivzjuk\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yh8o09vyctw3\", \"23zdx20csnlsuu5qgczobhvu285so6g5c9fmifsy7mz72sailt5n7lrsrw9vf4xrojxp96ucw96840wv6cihj0f3t79f6nvbaj78fy1es17rajp497eb2e6bw\", \"mcetdcv59hyh6f8ze6n7yolltoylk229q3wvk2ndo10iy25fqdlwjf420tasc71yy40yg3j83hch0xjrhh3rummjfor0c5n50\", \"nnu8i0he9qkyj0plm1mrjeyywdz6r7vdrp86mvbdmrmtycer2p7qwi55xqdtagukcgmn8a9vxi4hzm0bw5i0ztonqxx7etx81mchml0gcc7iyu845t7ndis720ch5x2e2ytw1dfrmand3fpk19qp6tzjx4y5lgjxx3a651rdty8sf53gf\", \"447bq7b2g8n1y8p1ofc64wr742wzlm5ne119azt49vvq325n33f\", \"3500gkp3cxo4mgfqbnhv5ikv0mpq2rsrj7za4ps617303xn75hmp3nzy06z0desovfy8arcvxjkdhqvoh8sgdfpub03200v2clgro9tq9rhk9qx00qwi94le2a2art5yhdru475xfx74oi5klo6fdsf7xqce26mzrv9koyqefa1588x8p2tt77zhvyc9tbbieqnz\", \"timb33epjxr8bspzdvfw3egtlfoyy7tojjv4bqe096qrzoy06qm5foiegv494t1lnih2zwygd3kc4nj5pak\", \"4741jul5rav25qmoii5wad8zifxqywijt3pyl80vsqok4k0yomm6ojty0r3qm4nlsajtxgksbt74ecshewmafxh3iw0e\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"iurew9u9v596z36nte5b5nunb4t5yp2zw24yfkutdf82y8c58h8d0i9s0rfm64ghywnr8r5\", \"99vsse6ibtnl98a79nq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"3t344ap4tekzn9xiabwou8fm42ki6lqsrfsksvggcz81b7cxw3sklp3po6h1ci12gakxksju2ojt0d4jynjs6qpjgwu4olf4f08kbz51aoskqm1zyzaix3y99bgff9o0akmsq4gjki0x8j2nmrwsplozubiixffw3xa114zmk\", \"x7fuon8jpsxl3hkc2r4hm998w4buz3c5w7mqzoy4r4uykayv3gonqmtfauouf7ib8agmx9eyuxgd94fwja5fb4e9g24l2z6ododreiv8k1mx2t6ai53l6nyx6j57j8i8v95nnl3rbdsqsjjys4a1qs98wa5obsq8us0zg8jrs4y86e0bhwebfikddnbkpy\", \"xcly1x3jd65iz9ri8evn00qgw7y2tz7myexzctf5k3qurcdul2hmr6yl65xsuluwh4lb11c7wv8j1mdwev1be4pih2rk7xcn4299jnqfvjbffsrc93zcscrmw381pyqeldeqrch4rlzi6m6m4m4qmwcpbnd4rm013o7qsccql51m1sn7dfms0dzreb1tu0qs1wdc3w4\", \"7d2seuyq4j634nyd4gzxkrori2canac5o786beiayirqrib57e6mgds4i85p9m4xdvfy0u62tjeju3tyvxeum5ycoqi6ach5xt7gw3gq34m4m5a8wv9qu3wygybzimm8hhvkk0qn6z47u3ssflfu3j47a53tojjibq\", \"syf3kwq3zosqsmbtrb8x3rhoaozs2ofx1l1jhh0qyijq1oarwi89skgdue586v0qld3nbcp69qlrphm7sd87smi69yp727qnc7zgm128bh7qvax92f18n70lo1q2yd3ch2u2q5drqe92yl72oh7kald8udyyyje9xbcl8u\", \"2obegpdv9d61bvlqvpkky5op2n4l4zcz22xwn9cre8p6hmwuemvho4dsp2epz8jr2siph6pq5h8peng6oymd3kuff9q9dq2suiyraoiyweqjopjlk7b5bsh2tvct0vy9r4c2yy55594keusmyjg1sbcergz7l0mg4mtfcu5h8miz3043ryq89s21f004ckl0q5\", \"4e60gns5hrh8mkrsn6yz6nym8s96aharzodkk7fcrar43b3d03xcvfdxotctb77oz4irq30kv64sd2q6bksyy6pbr4nmky1xrgs98p8dzhfbxy1s1qq4ss5c2076c052re3qrctjd4ojr8i5l1sgp9wl\" ]\n    } ],\n    \"service\" : \"s9e0mmkvnjalkn\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"tu7m3tzzmqhrgj1bxcc3xjwqtyk5gou5vqcx90hi6pmiunigihyqmq1jergcclu1g8o9ghsalnzvuyp04dd475fvdnfglfm6gor2o0g7swoaw0v269tpvlj6e1fj6urjqldbdl69zvdixl7btxe5asr5kb9dr238awai3r\", \"9mhkfbenjs7cyqderdyvv6gdtc3unzfsm0wz8ph9ha8hlesn1kjv9nb10t3q41fyh10qp3m8i6hyga7v663uw7ntc28x198tuq1xwd9m6tz7y7wiw8vpgdu994te10q5x5kbhfu9lnsdvard2xyvgoxtj27ymql322chxt\", \"n97lqnz7ycp4w5sq9etjlb7pyzxpx9dqdkjop5q1dngv5bodkdd8ff66blgqmjl9ygvl8wfog486uhu1x7fe4t4chwjfusi7riok73wcv1efl5ufje0\", \"440oxie8hz2lida3uky1qhl13vbapy00s1vfxva7l65u2t6f\", \"f9yquhb2hjyaxtjxzxukc1k8e9d12ioqsrltlink4g9udy85c141p1001e003gdtylw5khh58iq3ha35yrd53ts0en4b0fbfjc05nnwt4ql\", \"t4liow4wab4l1aff2jwmt0m70ylf7bwn3s4tadpwj27i3ffa8202i1l\", \"6qm6rv7p4z85biau4m1bnstmx4agtlunfxumbuh3s90s0mmd3ac36hohrks38qa327oh42zwoclrxa7z3rjm1sa56y\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"h8b51e1eps8wqu89vzdw09p29am0ho\", \"ktqxw57nv26nnl71hsqxek19ry2ubedif4ea6kequuoir8w6nbmqg446nqjluepplgpwkeynpcx3h6vkupghlc\", \"sgwd9cknolz9srs8vygf9mfr5x5kygdv7sibhv6s3uhausis6gpljv5x29t8i6288ivx36u63rjwtwsec7bsn17gvbe8s2wk50k3d\", \"yvaamw8o5udmrgg4rq3qv1ncrd530r6mpdzuiq7geeptbrukcw8d7rya5m1u7zzo64udc\", \"0mhqkyqhbwjyk0rvvnj7km0j1omlmo9j2t40zf2wrkmqlfkizc3564q689dbb7tteuc9x4kde20a67wsgthr8t0x911bdxa5g8qep98zo638jozho\", \"t1effo5gjrp26sic0i4bm1litah8yypbv\", \"j2yp274b9a7lwiv383m5nbofepms2m9k64h2ti4yoa6c6r6hz7uwwqgep89bj4x6xuxfllubzuak10bs7hg141ofi6cpal12rcb0d2xsrf4eqpj66cygxx0sn83z5fqoef16d15fl21hs1205e6e9dff2su53i4zkxh5mkwabarmfprnfnem8edqncdql\", \"peoxjluxt50o2ar335cqbsdtx4gk16v37yrowwe9dow5gpzvymmg0rovsjz60rfnhil0dbc17prdltnsoro8of7arjm53v0iwo52shehzk14jeiqlfj5vdz0d738ed3ccnfy0oplhlm89bhddyts9wk73zxnqevpsnbm6pjtkhmb8hghn8vr7q9c9vkr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"0osazh994jn26clfk5i4b7c8rt3bw5ae8kcjdczxt5ixecicvouui2wbowspvelhbb37ff757emvb4wubv28vrwl3cl04f8f1b3cwn8dxi4cxm5ex9k62ait5pp3jejxz0gbtixefg78vs4vgvk7if4jxiwsyhizw\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wf278xxs7krgkjch2jc2176w5e9sh2\", \"lfdhbi5bzyxhffsp2tswcme9ppwizx0kdab1g6pl6ltre396743kxqkyeuiuy5xatt62yx6elp3h7fyiekiyccarhmk5xuius4pfoex1luma5rdzb3cz2mbq6du7fmoov328baesutob8j6z97li2cf5nrs58eafuq4epsg9ro4akqe7iqdkww0muh32c591h\", \"oq859nixihbkih0kunxf3bjswka9p\", \"29rw6ffiepbvbyefeeqo8epjo\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"aebc50k4vnv8eph7nnaa2jl6auzrpswf3nqtwrmzfp5j8x0tijg4oyxkraej2jj8tv33iutgludccxbqsj588hjxg8pzp8w68d9no77f2q0w8sku2fu4xtva5j9wz2dko45ghm5wt9dis39x2wewg\", \"bmjp8a2khy5nikw092zva93xq5xhrmk5q9580393rfzmsev6b8otr\", \"on6bk2wdeizo72mks0j30tq4cea7sjyyh8dqqrjsvufjoa9skdt61s7kd\", \"w9j6mvza3d57wctht0u9rr5cxbwaaffg95v3zh92e9peni0lgmk0oxiijrvairwkemx9m6magns8dh9i18b2t489lfr2qh8bkpxh27t9viakpgfvxwxshkim27cffj8pjwju3ojl\", \"1duexb2im1exvbfa5stzjdyn8nsfn5jniwiiue0qj2fqpy55zlu3wknw7nhpkxmw9814fjg5b64ywo64g9x06jvi7so5r2ij99198afjw062sp27s86u6\", \"2934ruoh2ekkxg1qetk6e1duprmnsndo8qv8feke7pl1vtchauu1l852tfd9ex69jrrapk5e3b7hl0yha4quk6coih704zmd3ag1in3bi27vtiu1s6tvffuobli2k92zxteok8e3zwxbtecaz9vb2gfy1agpscz45eh\", \"ec8fm55miyp98e3vzwte39d7tj1mfhz71896b8ufrx8mv91xgn98i5ydc73u4xb0oje6kgtnksn1f68r6n2mylk4xlrtswd7a08i9wfq1a8an5ahdbv\", \"6evhmo2oogeylvw8yj14p098yoeus5rxwakqcbhcd95erig8ihqd6zxoxuvpan44awa5qj6yv6ku6j73scv8vdsl0r4vvdq7dkyz90p2bjpmr3lw1ov3yew95oerlz97cs7dt627rjgq9lfvfgvrvnnky0swm26vn6y\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"qhao4lydevp6aobwa9jgni\", \"rok0laxgh13tr5ge1jgvc8w4v1g6r0ih0476bdl65\", \"rul19fkqbrmc5c1ko3lq21mfbt731845wn0qtlvqwshbctpyykske\", \"s97w5eqqq3rntm5muybxuaqx0psoy7f5xuk99c5djaj16mmo8x\", \"tbozplofmlmezcm79euthgr74ezadcg25tn6skzchjpter3xpql87sjuwwagyi08znficlq1y6t7gga09jqu26j644lrr3slecfsanfy24v3yb48ds205c2c55s\", \"0eir4859ntvcnkqxpja6p6oku41iwq51ej5g0i4cps71nlq7oeojr59mwc74512jgj8run9q9e1p2u1atdx0qtrt2qovrewbp6z86v5ntono88g3\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"zan3emyr1ej455ep5sncdpc7322y7ycg68yqq4c2huplvmr7ddktojax7ysqfgdb96qpxbct6c09tttv8pos8wt2ezxhwmg1gdn9jwch0kt1q7exgdap5de2xrms7cw4vxj176i23i\", \"zn6z91494giu2uqr97hv9smwpu5bzbdzf0saywebedq7ixcvpc6cfpi4f70ehiuozjg38d6e5alk062qjmu6da70g\", \"lzz3utvctotfr1vm534e5rkf4e6uoqet1ecum6h1v2mohjmut4dv5gzih9dd8tgnw5dyb7ycz4of87wv6moc8\", \"ko0aojck83d9n2xswj31b4n7l9it23ug98n2vz156ku7493y94n9hcopswfs1fekyr1bipr6zpbzn7vayhg4r543szt6857sxnaxbxqtg8wwo8ejcpmm7qkprrqbcr1t2\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9luakwl1upfwhx8ijcdhnhstdvvfpy2rsth0w5jvzeakrhvhea7rb1n2hl9dhgrkvals7x55cqbe6mw9m4j5evpykkeoni5ppimdud8421qntxbrrmtrenjcx33w5z7lze3kc2hnsmq76pcuany4o5nx1bfptnsscxd5jzuuqmn9vuzrmz12wiqsbcbvoiyzc97h\", \"gudmsjepub7eb7zesrvgjfrqhdbe5ecsrx3637onku9lfnalcely9u2eyatho0p8agtlxe2mhpw8pkqjkngbupsifaeheolpe873fz1b73s2dg8jezm63e5tj6uqa6upo1qvff1ls5d0c8vtkdzpov1es01aut6aqqty13u0ilzyuw9eg9x\", \"a5r76ims8ag4x4fud3htzb4ds1t45tii6mljgtveu8kjt6y71npwo1z4drebd3tlkv5u31osk3cb69mh5qhtq7wq7s1d1t\", \"oskfpiedp8opj532g1tuwbmvng1w7er003j1jl8ygrgsvmq35rod9s7kmyz1ghqarsq7rt8dr9t05lnjr03fs1zd61f50ya857nyjrx1p2921g31etgobu2pbhta53fitj4u9\", \"ao2ildsjvfb7z0fgyibr0bq6zxelamjkdmguk37v1zzh89gmjh67j2t82p9fx8zr2mx2sb0pzxj00lb19rt110si76aharn32090pxa09yzplc0f3tabmyfneoaea37s838qfxhwm9qwpaov73cjjx07ni3cesg09g51b3i9rzi5fzjln8rijfqrx4qdbix11mat0bl\", \"wkablzl8vschpgltbfwft8pe3vkq2tw53yi1iebr3whcw7zt6g34r3tnl0uhmxuf34wm7ddq5mptlleqd8dkn9rigslclhk1xuwsveg25ucav1bxffg1yirgfcspbx9atmipgof68jx8eih89gurup2f\", \"pyh17w36tb27p8gnp8ky3ji7ojrkyury4zt8oky118u6yk12s228ol3b19gitwxzafbqh76fbsqsdw0au5d3nb2wmhz5s7aya6jr3u7gtdpm54tdl9sqx49apf7une4rwh6tudwb6lsezl8srqf1xla5xvl05r998eru\" ]\n    } ],\n    \"service\" : \"miaz9vc0nzhzsmcy5f0o5ta79kvni7xjjgfmunidtnn8x1zuh2a1ttbjvg2wrl31rtbbic2hj6gq36ybuaklbkcgqctt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f010bfa8-5fd1-30a5-85e6-5a703ea2d8ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "aca43ad7-cd8b-320c-8c20-3fad6c15a155",
    "name" : "Creates a new ServerTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/0w3cgjqcg3s9hu6yc2eaypitldsc1m9553ndntcdy4wg3lrj4lokmrqx5tede1qxg7d9csnq0h8ksmm5hqsbdj2orgycbkshrfb4frpzbz9z7kc7q5hcc2a4jr126a7j5yobgjonizjw5noa1vwqvw/serverTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bryant Auer\",\n  \"error\" : {\n    \"code\" : 2132387598,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Eum provident deserunt ut. Mollitia tempore et. Est consectetur recusandae maiores similique. Facere labore eos quidem excepturi. Ipsa et quos mollitia ut ut voluptatem voluptatem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aca43ad7-cd8b-320c-8c20-3fad6c15a155",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "6c529e5f-0e2d-3249-bf4b-5bec4947699d",
    "name" : "Lists ServerTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/c0mg4cecit386nprlje8by8dp70k6kida09vuu363tuaztr9l58520swkbimkkz7gpi7u87k9z116wkkczhxg3pyv7q95ry04kd1kxaxlr20rotgdovxy82l18egjg2kkov42a7vb9u4vo5lxgh5i28qcxfb6orjxlu92rad72urw91yo7yn6uepmy2rgj6hvbjfb/serverTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"cpbs5wh98enxxmc1gwh9lat\",\n  \"serverTlsPolicies\" : [ {\n    \"createTime\" : \"2022-05-21T14:08:14.05642Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"huqk3p1j4vdhjvtol8zxkym4cfonrkq9ojh91nh0tuhv9q9yfagfdtan0jf81rynd4hx1f2xp2fh3poepjhhv7ecu12vkup1l57f1leb5c0px32zjxdvdajc9uiiu84vjibio6xixps4z8jym6pip28n2pvvlad8g31kxht5c4jbxtwj24hw6l1s8gl0z\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/478364\"\n      }\n    },\n    \"name\" : \"Elodia Koss\",\n    \"allowOpen\" : false,\n    \"description\" : \"A velit eum sunt deleniti iste est reiciendis. Libero rerum cum nostrum a. Nobis esse molestias.\",\n    \"updateTime\" : \"2023-02-24T13:51:14.056694Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-29T15:46:14.056736Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"4xq4tb7d9qzkag62v0nvykjq9bnqihkuejojm909iw4e16kjpk51rf384jup5p3xpezhdfsqnwfigh1tp7dpliode3ty12o47qygeo6oim8a60jujewwvtx1qw4vjfjb6bisr5c6e2hk88sc33phvr0zalev6hsa11anu5s\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/209577\"\n      }\n    },\n    \"name\" : \"Miss Barney Murphy\",\n    \"allowOpen\" : false,\n    \"description\" : \"Ea facilis molestias fugiat molestiae. Qui non laborum incidunt. Aut voluptates ullam voluptatem ut sunt neque saepe. Dolores ut nisi laudantium alias fugit et itaque. Voluptatem amet aliquid aut dese\",\n    \"updateTime\" : \"2022-09-05T13:41:14.05704Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-25T16:19:14.057076Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"eeidrv7vljklsa1aotu6zxyq7dw9boiktu6kyrwta3lqoptk9d40p4b2qk\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/480399\"\n      }\n    },\n    \"name\" : \"Brian Simonis\",\n    \"allowOpen\" : true,\n    \"description\" : \"Quasi odit quos et quae. Rerum iusto commodi aliquid. Sint deleniti praesentium. Possimus quibusdam enim vitae veniam reprehenderit animi possimus.\",\n    \"updateTime\" : \"2022-08-23T15:22:14.057353Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-10T15:27:14.057391Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"28vhiz4hf556u86m47jl8kron5md0sn163ygreepewzyxca36zmok4bqj1my02p12l1wrbqjve2lokeb9w6r18g1p61sqtsiid45pk1wvjqj9sub655p16m81trj0zt1hcr5t\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/384059\"\n      }\n    },\n    \"name\" : \"Celina Stoltenberg\",\n    \"allowOpen\" : false,\n    \"description\" : \"Quia veniam dolore quia voluptatem eaque eum expedita. Ut neque perspiciatis. Aut aliquam sunt est unde voluptas nam.\",\n    \"updateTime\" : \"2022-07-25T13:04:14.05766Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-10-16T14:06:14.057701Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"whvb323reeeitg5yufvwaycqo4yyeen9ogs2bfq3za5601lduj0s8cqoh1juig9zndyjhb4dk6osb9131z33rv1rk8r3wwcuu5nalehpyhpkghgp1zoa9r4eqk1dby0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/948215\"\n      }\n    },\n    \"name\" : \"Eloy Harvey\",\n    \"allowOpen\" : true,\n    \"description\" : \"Iusto quia quidem. Unde magnam quisquam tempora ea tenetur alias ut. Laborum quidem aliquam quod sit. Eius sequi error.\",\n    \"updateTime\" : \"2023-01-14T16:10:14.057931Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-22T13:37:14.05798Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"dg8417dgernpjcdwnwy6dcrxgicjaapt95m16f812m3zicxi699qitectpvuc6s28sr2oy8ghq67f2gu53xx2y1noh0gukwblliorj63pey1jou86z5otwfxt1nfwrkwhflnr59084hxwtp1zr3ozds67u31afdp8aub4qaiigw641\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/523681\"\n      }\n    },\n    \"name\" : \"Gilbert Wilkinson\",\n    \"allowOpen\" : true,\n    \"description\" : \"Itaque aut illum in. Quis atque praesentium iusto libero. Repudiandae assumenda tenetur repudiandae. Magni beatae ut commodi ex omnis id beatae.\",\n    \"updateTime\" : \"2023-03-08T16:11:14.05825Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c529e5f-0e2d-3249-bf4b-5bec4947699d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListServerTlsPolicies method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              },
              "serverTlsPolicies" : {
                "description" : "List of ServerTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ServerTlsPolicy"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "5c557b37-335b-3b14-9e82-a59d69a6ec5c",
    "name" : "Creates a new ClientTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/pd5dii1cpwgdcdafvl7r5aul6qxapfwlvr4zjt8o5saj6rc2tj3c4em83psna939imh9pcx3bn0sum22msj9a02hnwlpe6456uphkupfzngkoajmqtnl/clientTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jennine Huels\",\n  \"error\" : {\n    \"code\" : 1239417717,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ducimus doloremque autem quis possimus fugit porro. Temporibus nihil neque et dolor. Id ad distinctio velit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c557b37-335b-3b14-9e82-a59d69a6ec5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "2066bd76-4402-3d63-b839-981a448796de",
    "name" : "Lists ClientTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/tmwlq9c8eh1nroxmd4o4du5ww37scwyxbo894yz101jn2xk1quqpffq0zgf2yg2vkm2c0sfqiza03uis/clientTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"qb0j8o1hjlbq5kktetrgwaq3yxgu3g45mj6zzoi81cyj8m2xva48itv5a0f55v631j2vlbsmz4ye689t0rufthp4eb558xbaq8v\",\n  \"clientTlsPolicies\" : [ {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"vxbd7884472cbhzq3o8h3qb39zdqk63ge6zo812gg8ykume4v3ab2axcsqghwme4gkzqf060kyqg3h1s8c0q1w37hsvbop189x67kqw8v5z\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/188803\"\n      }\n    },\n    \"createTime\" : \"2022-08-29T16:48:14.048964Z\",\n    \"name\" : \"Lizzette Dickinson\",\n    \"description\" : \"A aut aut placeat necessitatibus quod aut necessitatibus. Aperiam et repudiandae sint. Reprehenderit error aliquid animi rerum et id.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"7yy0alizcb9n875h42jdt4b6kdm1ywg009y65lmf0yti6jfvt1v3lf5vs0d5jr9vn9fyq7yihz87j8h8kb2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/477224\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"a1pkmrod14xwboh7ugrfjokhuiek88pbdymd34k6ukhs999euj2a5pcqt9meck74tnqgnqvjwo6op0m61jgymqzgn70gozfwcot5pm60vw6iuucbah24tygs\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/017171\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"11ov3h03ukqr43y26qj753mx0axwu6yz43fr3ljx3mms3n708vnjdehheaj3u4m8r5yl8nlb6onwv\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/207612\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"bcwhm68jlw5emyokgo5ixm8nzz8v5m9jchkfybzhgk81b16m9lrligm8rxyezrsln2dl4df1luhsc5grbltmn35gb0wfr31p5ec69nhfdb1lw6sf9ki8l84tskizpaaecunb9tlc\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/947640\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"tmx3smuv0zexna3plmj80644oexl1j77uiouuo\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/081560\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5fhe0nloos57is7e7b0uowbb8ho8auifnzwwgd3gp0dp0qfd5ys10419tutld5yi9rvn4wl4r71exrzxpbpaakgwlpp34p0tweso5dj02r166nh7zxkcrzp2kjiqdyyaugd\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/506826\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5wk1gzhaqza94vrcizwb82vm6td1octjh6e8rykl9c3r1rgp7tp\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/969392\"\n      }\n    } ],\n    \"updateTime\" : \"2022-09-07T13:47:14.050492Z\",\n    \"labels\" : { },\n    \"sni\" : \"59rlt5rrasujei18rc3emu2s9do9zqwh1w1k2os1zij5ltdu4fevqafy6z59vak\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"fjiuulv76xqbbdxzup4t839wbklt8ux1mgwvtf3bb7ny7pvoslxu1az0zrj7cqq4jsype152j476ki70egy9bgmtgjtr6l317kmpxy9arzwz4cq3fryhdfgu32wh9m0jsqr6zczpl08lzrr9hp2joc2vmffn2jfvzaaeg9q5qsj7uecv7fsyb\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/737495\"\n      }\n    },\n    \"createTime\" : \"2022-12-28T13:22:14.050687Z\",\n    \"name\" : \"Nelson Toy\",\n    \"description\" : \"Maiores veniam labore delectus facere. Tempore magni tenetur blanditiis magni. Alias esse quod iusto vitae.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"b4klveg6kyb975gcxmzrygpb27840gput8n3jnvs42hd2nf7cob7jor1a1wem3626vnmzrpfebj12ckzo5tryk1lhn85h39zd2uv55tu9mr1209c0z4niwgw8n1ij5dfr9q7rxnqjxani8isg8zvi9yiuqn3ywbm8j\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/999983\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"xcstxgu8z0omw30zc836lqshnnfhver55cseg27l098xv6hnypdgxdg2anfvzlwzi2fmhg8zztk7hyf14hp6s3qm38pvs8w2tqdwwqslt8ktz4m1eaeh8c58wag8qqa0a0p0lqz12mtezwx\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/441132\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"x1ygdv0a80mfxj9fsmdn4al3nsos1p32dgyz2gdahpta5wnl4et6gqbme3u9au1t5u0nlh6enaqcnlu5dzdb713dws7ov\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/876765\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"rdxarjcdls3q48kng4e06yg49yzhsbunlv4t1tfbntkzsbg0822pbwmnuiyquyoxkpx2u0po56w59b00uhdspc23jqyhis49brvijyrgycp2xwltgaqzpuv8w7e2o92jv0ihitogs7csp72hj0vix\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/076671\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"6zs9pw0ikcvbjs5f46crpsdqo7n2gpdfqpds9o0a2qoxkwtev9338n9jr6oqy0ws2pcefvs54frscjjedvb8zmzqtyjg\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/579255\"\n      }\n    } ],\n    \"updateTime\" : \"2022-12-23T14:16:14.051483Z\",\n    \"labels\" : { },\n    \"sni\" : \"z1y2okf4s60lq6vpdwjz4vnj3qqwymu4qzzabpe76p4bc72qvr6ifhouynitu1ybgsvxz8jdi1bc3pkv9fjx9wcnt69jibizww9207056x205gjwkknxakfsqo9adkuiict9ii69s0wvz3stqvks\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ihtdh74e7pwfln5gnq8irqkyg6nepn2jrodoxpgzaiauu0neqb9cen9jh9wy5whm1ahh416hboigybzkxilleb0ug2omd2g95y640yhtzhc\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/857446\"\n      }\n    },\n    \"createTime\" : \"2022-12-08T15:50:14.051673Z\",\n    \"name\" : \"Berniece Breitenberg\",\n    \"description\" : \"Magni neque eaque. Ipsum repellat quaerat magnam animi et. Reprehenderit eveniet aut repudiandae consectetur reprehenderit animi sit. Et vitae est fugit suscipit. Qui fuga sit rerum autem eius delenit\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"7qpqcdejr2jk3ep1xdt768tazbfzxsiu203dq3rxu0oh53l45mg9dnfnd8kjauq1dowraspiasou237pff0kwalp391up57ojej8hzrabbssbqzybzfcsidhc7wrh1yciy8of0uy\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/625872\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"upfkm8to0d8l1gfgjl10rdhuklqhbh5b02ri1m0n81el3u0uv6iv8tulcgpx1cc0mejbymf4mdcldiqnn6arb21gzqsalf2mil\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/026587\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"h6c0igafals68pesasm7mh87nv54ltwoeb5ov9o3vkh1g5a5ofc3el89592kmwpwf9jwwh2xv5wj7p4y2mq68mq8wr89ukw5u1m2dcxxpmhrkoehyc8o8o6u6q2dw3nfa4maltvf69q5xmx2a3kp9yj\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/205270\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ajuxdsov6f4l5kxkbphs5tk8x7cvll5rl64mq4qex4aq9n4bfde94x4yhplhia0lnspxdamki8q1h6uxpidu03dgnlx3xsi8lcnh6kt3v0zwwpveknm7b\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/889128\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"7w11cdcqg8mdrdqn6dkj5r3p4ruv9ojt0ubjrwfwt1jg3wla\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/162685\"\n      }\n    } ],\n    \"updateTime\" : \"2023-01-07T14:53:14.052361Z\",\n    \"labels\" : { },\n    \"sni\" : \"tg55n58tw1lwru7dqgc8ywvk62l1jxv4ylmp\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"nkqcyn9czeh8x7dl4ea1crqqcg2tj89m1cn1h9zootb1en2rheno9a7kwnxi7iu1am9reobi\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/956034\"\n      }\n    },\n    \"createTime\" : \"2023-01-26T14:48:14.052581Z\",\n    \"name\" : \"Bunny Leannon\",\n    \"description\" : \"Dignissimos nihil amet laborum. Inventore quia et qui voluptatum a debitis. In tenetur modi.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"zbijdkvbauelbmap92yx0s3sz28bqk5cgisqwttoq3md6z1laj6wuqwy6mvsrygm6eaim4a3tbi8n7i17334yzx9\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/140461\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"9gxywio48pfx5j6ul\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/223714\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ndaebn6o4yykas7wkt5qhyl8f4nzphhvr9tq4v369vilx9wcb8a085bdyi140nu5pwtundh87zb4nlrxtzyo83nsdis2jlkes1e0wo51\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/726618\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"3rooe2yky2p6rshzznzzc27gjigrkjm2fj31xc6bfbclxlsibvnv7ad5mkrh8zuobnkssonsm2zj716x91fqi6m35tg0mrqwo0g0lchjqu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/115360\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"bkjv18gzgq3uvtl10eiy1his9abho7sfj92rvjka8qsvxntiv747wkwev2awt91wm7rzzumts36476g036va6iuvip3okbkodtdiga5gspcx7v6nx7vagtk6go7bv0fymq5snznf5pjb\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/301862\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"gg38hw9v4gcvelhdr8rqhtrfpkdtxe1evw1fxjun2vxc79wys\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/022591\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"l7ngbutaritkylhenm1g9fkcna4xhij5cb8r1pdfy7r384gijver5tkdk8\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/963576\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"9pyr5ec7u06bx26ne2bs8ynakrp7mgikks45b63urxw532ttflc0kqj8y8t0c3r9cou1dxphfsra2o2i03b81g\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/145012\"\n      }\n    } ],\n    \"updateTime\" : \"2022-10-19T15:14:14.053866Z\",\n    \"labels\" : { },\n    \"sni\" : \"cpt615y4v7wqaj7uwastvz0h\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"1tryox8sorsct9ht3o\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/167819\"\n      }\n    },\n    \"createTime\" : \"2022-04-10T15:43:14.054063Z\",\n    \"name\" : \"Lezlie Schneider\",\n    \"description\" : \"Veritatis sequi molestiae ipsa doloribus quia. Ab assumenda molestias non. Qui ratione soluta vitae. Odit omnis quis quasi occaecati repellendus consectetur.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"hzusdyqzh3e08mt9bzncq88v4pzdeq96lfbp5fzu3bub0whwcude7fmt6sfmpuf04bdf0wlbdj5zjmalnf8w83pl9ihzts463ix541z444ydx5kxet2rt5bdoujjih4wdombrl2vv9mc2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/352330\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"eoeph9cxhk9wwa1mnbjufu9oqwqu2lbt36ftamt320ow2bju6kr4w5yfnrusnrfr73itpovtkn9t8nqn92aseihye8aimc603v2uplp5drh0g1efmasnnsvz4cu7xwgaufwn0ajp03csfwn0l7j4416soqsrhudsxa8dguh7mwd6l3\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/097395\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"vz3j8sqb2ibvkgio1tta\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/308586\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"b3thru98apxiesq75m8o1fr1zcghe52a4f4isfzqk4mtvlikwbhahifzbnznzicid2zq9iq5uf3080nwk9jtvat5oj0sl5xbk4malbxn8quvejewg9wuude7vmt0mkuteh5l0pcmpxpv8zmm19q8v39pwjwliof8j20\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/183069\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"8fwo7jowwase6u8a4emk1bnnorrxnmz6q0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/650966\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"55pn4m59uastw92gb1mc63bst52a8w28doech37tulkqu236wh6sgcji5kaezoxac6n9w6ih4kaorlmcchdoltvyy0f53\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/025281\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"31z3x67807d26gbrv36oyewdee0h35oe2tcse6y3duyc3xixts0xb2ga8683boxivbcrbkbr98nj6x7tf7r22nbrzee1afjbsan22cthlkg87t3073fx1spyljrmqn9cbupyaexs\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/384347\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"v28p8ntzrz58d49owrohxkcbcao754qqza5qi13blhm7n5p8pyyqtly6lb5vn04x94txdyehre3h25mal9ogsw7po3bgsye19tnup3ejk8ryr65525zy5wvegcqrtno7z94x1jjjj6qvpc3jrnf8hxif9n6jentfgdjbibdm7gpj93uy41r3k0nw3ssk2xr\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/944714\"\n      }\n    } ],\n    \"updateTime\" : \"2022-10-31T13:47:14.055249Z\",\n    \"labels\" : { },\n    \"sni\" : \"cj8pxig38h86o12jj5r42qdxtq8ghcu5cwvgh3ibpdst2zfh6tmpkw4qz6ypsb3xj87ghn036hxdao88660gonoynn0lm7dzsq8ajpojqtcpbhd46i9czeio4uhvwte9sn1pd7kkdrlqf2rpqn8pinkgjp6r6uxeq5ji0ru0strvp2k\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"1br36qzgearopiu37f265hecu8z97pxk7puaq71jp62dihxf9asbsq5p86hkax7smumy6tm7bbe3spbz77p32xdxzvdfh7b8fsdyzrmlct80s768x14xyf1ebnlevxh5jxg0vdoonf33dqwtnupblvy58yo1gmsych8jh0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/119295\"\n      }\n    },\n    \"createTime\" : \"2022-06-21T13:57:14.05542Z\",\n    \"name\" : \"Ms. Martine Welch\",\n    \"description\" : \"Molestias occaecati rerum dolorum. Dolorem quis repudiandae. Voluptatem eum maiores odit aliquam autem possimus.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"2xkq0aqcyqkvgh26msr1d6w333tkei53sdsai8hk13\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/946380\"\n      }\n    } ],\n    \"updateTime\" : \"2022-05-24T14:02:14.055679Z\",\n    \"labels\" : { },\n    \"sni\" : \"9qnbuquler9wtu2l1ijjhxhit7pb7gq801hed3khqkrw4upo0ix47yhplobzyflp7ztxs90s6d4t4x78r34jviexiqb8wmhhd7zdywcze5sd91qpc8yx0psr6ttzg17n1u7m3wdcawjei38h9xd2rffd3lk3v3y397ev4lqhqfyo4gymsrxxjoz\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2066bd76-4402-3d63-b839-981a448796de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListClientTlsPolicies method.",
            "properties" : {
              "clientTlsPolicies" : {
                "description" : "List of ClientTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientTlsPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1381032f-e9e8-3365-99a9-579d647d53c3",
    "name" : "Creates a new AuthorizationPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/nkmnhsjd35lcdppp93cykx7d1wtdoi5ocsgzoqne986b17rz1ieqcjv5v5qhdnob0vy63mzlzcgmxwn85eemt5h129algp2j6t1tsz4fttbe181kf70dwautfyd6uwo43ebz9mya65rvxzwn1/authorizationPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Clemmie Ziemann III\",\n  \"error\" : {\n    \"code\" : 1012746630,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quam ea mollitia sint non et ratione. Sed nostrum ipsa optio reprehenderit omnis. Quia officia qui dolore suscipit pariatur quis. At veritatis dignissimos.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1381032f-e9e8-3365-99a9-579d647d53c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "a9f8c571-f4e7-3962-b3f4-c8a055dc2953",
    "name" : "Lists AuthorizationPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/n077v64p3zt7u122fyhgdvm5102z7rkzeudvw74d9nhutij8uvlhp46ek29x9rs8/authorizationPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"phxojdi62zvdd5z30quvza200ncgms3kc4c39i58advazn78n3su2vrrx4xnoti1lr3b2lxip6tmjsd5igxopwbwb3pfondc41nkwor36c5n7j5s5nxt4ov\",\n  \"authorizationPolicies\" : [ {\n    \"createTime\" : \"2023-02-16T14:34:14.044669Z\",\n    \"name\" : \"Patti Gulgowski\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Beatae nemo facilis. Ipsam earum illo et quia et beatae. Accusantium quibusdam facere in quaerat et tempora explicabo. Eveniet libero dolores assumenda ea et nulla ab.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-03-04T15:11:14.044975Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-24T17:02:14.045024Z\",\n    \"name\" : \"Zenaida Johnston MD\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Expedita velit ad. Dolor est voluptas alias placeat repellat et. Id ea ea repudiandae ea laboriosam. Sint molestias et ullam fuga sed aut nulla. Est quis libero in.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-11-21T14:20:14.045399Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-11-29T14:15:14.045449Z\",\n    \"name\" : \"Aleta Wisoky MD\",\n    \"action\" : \"ACTION_UNSPECIFIED\",\n    \"description\" : \"Voluptates quidem ipsum maxime quis ut qui expedita. Velit qui eius ducimus et velit itaque ut. Ducimus qui sit esse consectetur architecto. Qui assumenda doloribus.\",\n    \"rules\" : [ {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-01-10T14:07:14.045799Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-01-02T15:27:14.045845Z\",\n    \"name\" : \"Jesusita Price\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Quidem ab illum enim iusto aut mollitia aut. Dignissimos debitis tempora ipsam rerum perspiciatis aperiam ex. Eum quia nesciunt veniam tempore possimus.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-03-23T16:45:14.046624Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-06-06T13:37:14.046672Z\",\n    \"name\" : \"Mr. Ariel Kuhlman\",\n    \"action\" : \"ACTION_UNSPECIFIED\",\n    \"description\" : \"Consequatur aut aut. Quo corrupti sunt est nisi ducimus. Et numquam omnis animi atque fugiat minus. Quo ipsam eius accusantium vitae. Aliquam consequuntur voluptatem animi qui.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-02-16T14:32:14.047053Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-04T15:53:14.047101Z\",\n    \"name\" : \"Enoch Reinger\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Debitis repellat odit ea esse et maxime. Sequi et architecto eum. Laudantium blanditiis autem nam est molestiae exercitationem. Numquam autem saepe et facilis animi odit debitis.\",\n    \"rules\" : [ {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-08-14T14:58:14.047257Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-10-17T15:47:14.047299Z\",\n    \"name\" : \"Blake Trantow\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Eius quaerat aperiam. Vel dolorum non corporis et repellat. Distinctio eum soluta totam. Consequatur alias recusandae ullam.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-02-10T14:52:14.047535Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-03-31T13:50:14.047576Z\",\n    \"name\" : \"Doloris Hettinger\",\n    \"action\" : \"ACTION_UNSPECIFIED\",\n    \"description\" : \"Voluptates assumenda aspernatur est deleniti perspiciatis. Deleniti consectetur labore voluptates. Sint molestiae debitis et. Perspiciatis ab enim eius.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    } ],\n    \"updateTime\" : \"2022-04-14T14:21:14.04785Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9f8c571-f4e7-3962-b3f4-c8a055dc2953",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListAuthorizationPolicies method.",
            "properties" : {
              "authorizationPolicies" : {
                "description" : "List of AuthorizationPolicies resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5f0d6f0b-5e63-3aaf-8cf4-888ed0ffe046",
    "name" : "Creates a new address group in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/qlfbzjn4o9q78fyner7epb2wlrvwtzxwuuxs4y2a0kk9jdg0iekj/addressGroups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Sterling Gerhold\",\n  \"error\" : {\n    \"code\" : 124730600,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aliquam repellendus ullam odit veritatis officiis odit qui. Voluptatem praesentium sed quidem. Id cupiditate quibusdam nostrum. Eos explicabo eveniet sed sit ut eum et. Omnis quos odit tempora commodi\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f0d6f0b-5e63-3aaf-8cf4-888ed0ffe046",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a3f8d6ef-8ca8-354d-80c1-1188195419fa",
    "name" : "Lists address groups in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/a4cuiqxb1h96d10gg24lv4rsmn0nrghslnk71r41buymripjglzizsz4de3my6o45bt76p59o0pucrmm7n0m2b3ptizxjn/addressGroups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroups\" : [ {\n    \"createTime\" : \"2023-02-10T15:44:14.043158Z\",\n    \"name\" : \"Dorathy Kilback\",\n    \"description\" : \"Vel qui pariatur. Facere ex dolor dolores maxime explicabo. Consequatur rem est. Fuga delectus exercitationem et fugit aut.\",\n    \"updateTime\" : \"2022-04-26T15:52:14.043311Z\",\n    \"type\" : \"IPV6\",\n    \"items\" : [ \"chult9m88wwij17g77jawjqd6g9mzpwfyeqv61ua14fjbr4hxb09e\", \"0rgohwr4jden561ixgeldg5b9rldw8dhiy7kbqozvllliyy24eudpl6ig2z7nxvdtccbvn19wg6rzwr53d0p71czw0k6440glu1e39yib58s1ywsgvdyqao6r89yw3j\", \"g7mxwq2mkgf3uq5x0yrsydwnf55j7j4526fzwy3amq5lixgqf9166ofvl8leq930jhu2evhsw75qh2837y63u98dwjy6lfswblazdiy5q9b71uwjk2\", \"38vl6xsbejye2dcgokjwhau5kmuh849w\", \"4bhgiv7mmrx2ynxkm5dc7bet3nr5m3wdwomzb1aob4q14kop5jp8wwtwqau1p7igbnq1rx59coj3ycsvagpx88ex081fm0vqbkkeur1ebrnavf7mpymre9yfs46rcjzna2wymoajut5ko22lqyzbrbcjk9wpk7rdinz1e6fr71rr0kwglrb3lo9cqqz9tk3n\", \"0sarzc8w5uttxsqx8a8bqh2jms5psxkupc6f7nuyw6rk6sthdvrph0i42yzy9h1l6owqlwyqawjpp1402o8kz3o4op15b1hm1t6msaz4501m7pd\", \"jclzm6pgzuttu8tud04699vvg5uxgwgxytwgj3gckyhv8w5kmb14l73at09yu61fb6gbs3ym82j8uiwowzq6fqwr6a8ohi7\", \"7iktc5bjhqi3qm6v46a5lprh3bj7w1zo8awwb817b9fw7974ito75xu6vjnefw1lphd7m7aqen37s6n95g7croh5to41zr4s8yhro35l592rq03z1g986e2tt36z7ma1298ne80n3aw4soiobog6rrj5orydphp4vjkgb6d0q2mkf22q14wn2b\" ],\n    \"capacity\" : 1188828801,\n    \"labels\" : { },\n    \"selfLink\" : \"gfuiz60gtndhfeprzi9tjf0hap0o4a6lhp0enls41if9cux5i59ruzpujkfkxu0ymueqqxd25xu6ypqul9z9n3eq24uawo6z1e4d5eqywcxf4up5926y53l3jv47eezm2x2nn24g3zuoja20y5kj8767h3tqigr17rw9o6ave206hgc5nsgewe6bqilo4k\"\n  }, {\n    \"createTime\" : \"2022-11-30T14:47:14.043461Z\",\n    \"name\" : \"Jacinto Barrows\",\n    \"description\" : \"Soluta ex fugiat officia voluptas et. Autem sequi aspernatur necessitatibus voluptas reiciendis quia. Iure cum et voluptate in omnis qui consequuntur. Id voluptatem qui. Ea pariatur delectus quaerat t\",\n    \"updateTime\" : \"2022-04-25T13:56:14.044079Z\",\n    \"type\" : \"IPV6\",\n    \"items\" : [ \"b9i7mjpoarba4kos91tiw0vs3d8ln92md0wlpnzl942ojjrxg1flukw4tv9pfmbte1n6790dcvf6lq2g8xrgpeeki6atpg4arl5cvi8yg7cur50jfi9qbkc4uvlm78cwv4c0lrxakujtcjd5644dqsy10xosbv0jvdqql21xxsin3yifsyy\", \"qmjezytgg6tpsgorm\" ],\n    \"capacity\" : 1748081592,\n    \"labels\" : { },\n    \"selfLink\" : \"x066i7s9oqyx95s1lfbz8h95bnx9z8j8lhyusttoy4oe16ccbkq4w6wbws32yvtvzmbhkunsekznwny98fgawoivtb0oh3rftgz72exa0gzjeot4t8ktobu7hup42h0asiwr1txtx7pv25uh4nj03b5mq4o1mhaapopi\"\n  } ],\n  \"nextPageToken\" : \"m4zklpzzcgxam2k6nf98whmh8kaicnkp1uybj5dl68fapc6na\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3f8d6ef-8ca8-354d-80c1-1188195419fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.list",
          "schema" : {
            "description" : "Response returned by the ListAddressGroups method.",
            "properties" : {
              "addressGroups" : {
                "description" : "List of AddressGroups resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AddressGroup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e10ed845-4f7a-31bc-acb0-5a867ea83216",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Claud+Stroman:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e10ed845-4f7a-31bc-acb0-5a867ea83216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "1fb58ee6-1708-3d90-bce5-b83908cde795",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Mauro+Buckridge/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Maxwell Kuvalis\",\n    \"error\" : {\n      \"code\" : 1238451388,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ad eum assumenda similique nulla. Et soluta in ut unde cumque minus. Sint ut eveniet sit exercitationem voluptatibus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sean Corwin\",\n    \"error\" : {\n      \"code\" : 974437258,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quasi omnis voluptate omnis sit dolore rerum. Eius et eum qui quis est et omnis. Dolor dolores at qui voluptatem commodi.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Kristyn Conroy\",\n    \"error\" : {\n      \"code\" : 125006536,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nobis harum magni expedita aut alias id. Harum impedit beatae eum autem ut et mollitia. Ut qui molestiae qui ipsa maxime aut. Repellendus sit ut. Numquam excepturi minus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Refugia Dare\",\n    \"error\" : {\n      \"code\" : 2011554684,\n      \"details\" : [ { } ],\n      \"message\" : \"Repellendus debitis quasi sint. Asperiores occaecati et vitae. Illum sequi cum error.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"ixatvf6nv0q38dndpklj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fb58ee6-1708-3d90-bce5-b83908cde795",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "373be4dc-7c34-360c-b1bc-c19515f73005",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Chet+MacGyver/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"77nfpto17pqihbczkd29u\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Zoe Emmerich\",\n    \"locationId\" : \"0t54\",\n    \"name\" : \"Enrique Abbott\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Wynona O'Reilly IV\",\n    \"locationId\" : \"lup2\",\n    \"name\" : \"Shasta McClure\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jorge Kuphal\",\n    \"locationId\" : \"3j0u\",\n    \"name\" : \"Olinda Rippin\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ms. Oscar Schimmel\",\n    \"locationId\" : \"b9fk\",\n    \"name\" : \"Miss Georgetta Predovic\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Arnulfo Prohaska\",\n    \"locationId\" : \"lcm5\",\n    \"name\" : \"Joshua Thompson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Malissa Kemmer Sr.\",\n    \"locationId\" : \"22z2\",\n    \"name\" : \"China Lynch PhD\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Arie Goodwin\",\n    \"locationId\" : \"rn1n\",\n    \"name\" : \"Evie Kris\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tona Prohaska\",\n    \"locationId\" : \"1s56\",\n    \"name\" : \"Alonso McKenzie\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "373be4dc-7c34-360c-b1bc-c19515f73005",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "475f2c14-56bc-3226-8299-c291854b7fba",
    "name" : "Updates the parameters of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Dario+Windler",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Gretchen Franecki Sr.\",\n  \"error\" : {\n    \"code\" : 1917649973,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et a ducimus minus. Sequi non ipsum a omnis sit numquam. Est aperiam autem at totam ab.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "475f2c14-56bc-3226-8299-c291854b7fba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "120bbe0f-2c00-315f-b285-7657c8113d2c",
    "name" : "Gets details of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Kareem+Schulist",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-06-18T13:12:14.038734Z\",\n  \"mtlsPolicy\" : {\n    \"clientValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"g8qnmtza2jn0jxfo2p7359zaoi\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/660418\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"vdsjsd1spmf8xk6plfrbu8x6cdac5n6wwzyyljxkjgdmplxwusu0r857nj8c7atwx08mscfz12dubd0doqskty5ctad1vcl59fm4xg30z79t51az4n78ad3e2qhjcsiv20k7s3e3fwy7yd3vtqp4s\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/344240\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"sjqtk6v90wfi71\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/225090\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"cfay\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/240199\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"qp1iphsjn9b6hics2otp5ioiguf4jcv9sm60ve78volg4sldv0np7bwoicpu5e7b5pujjb83frlex2dx5k35a8w5d4ro4xcat3zhdrcsg12yqsdo1c1sh3kzsp88onz\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/911873\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"77g4bdm1kt2rfy125ia9y34lakjlgm7sjezciqi0rdkhz436m3l63mmjw\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/529294\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"wj1rccbwve8rdfggqpylktpcjqoqlwel84w8hcsjw122yly7ug2o129fe65c6ea1hk1ptzkg6z7wgecxiecxx4fql36qy74q7mukw4pjnz283rsxgcqbae7p4p09opxnn551bohrujcau7ct2mrn0d0sfwvgh9eyfb22ej117m4jinp3uo0nh486box\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/255372\"\n      }\n    } ]\n  },\n  \"serverCertificate\" : {\n    \"certificateProviderInstance\" : {\n      \"pluginInstance\" : \"gllfkt3mrqrhe3h0w1o80uu7ujozeebxkg2gr2oxt8x39n5kwtdrkzvqv6koczlu913zm5ddth9w8ju83s5u6dt98updpqqtv0b\"\n    },\n    \"grpcEndpoint\" : {\n      \"targetUri\" : \"https://web.example.mocklab.io/306173\"\n    }\n  },\n  \"name\" : \"Ethel Von\",\n  \"allowOpen\" : false,\n  \"description\" : \"Aut debitis perferendis odit qui doloremque voluptatum eum. Maxime incidunt animi perferendis voluptatem qui. Laboriosam sed et nostrum molestiae reprehenderit. Qui quas laboriosam aliquam blanditiis \",\n  \"updateTime\" : \"2023-02-24T15:28:14.039743Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "120bbe0f-2c00-315f-b285-7657c8113d2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.get",
          "schema" : {
            "description" : "ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource.",
            "properties" : {
              "allowOpen" : {
                "description" : " Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                "type" : "boolean"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Free-text description of the resource.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Set of label tags associated with the resource.",
                "type" : "object"
              },
              "mtlsPolicy" : {
                "$ref" : "#/components/schemas/MTLSPolicy"
              },
              "name" : {
                "description" : "Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`",
                "type" : "string"
              },
              "serverCertificate" : {
                "$ref" : "#/components/schemas/GoogleCloudNetworksecurityV1beta1CertificateProvider"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the resource was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "b28f57db-35d4-385a-9f21-1cd93d059967",
    "name" : "Deletes a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Sol+O%27Connell+PhD",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dierdre Cremin\",\n  \"error\" : {\n    \"code\" : 1449953236,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Ducimus ad deleniti voluptatem fuga. Rerum aut fugit libero et. Error dolor asperiores occaecati dolorem debitis quia. Temporibus excepturi blanditiis natus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b28f57db-35d4-385a-9f21-1cd93d059967",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "3e413b99-5360-399a-bda5-8e6e1c2d4cdf",
    "name" : "Removes items from an address group.",
    "request" : {
      "urlPath" : "/v1beta1/tmehugpf5u6aebq3rhe1jid5bfa70igcpdh1hjfqifm47gbtna58jz6q1e1dkujgppklsns:removeItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jerrell Emmerich\",\n  \"error\" : {\n    \"code\" : 2028356960,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et necessitatibus corporis. Fuga qui in sint aut tempore quae sunt. Sunt ullam occaecati error ut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e413b99-5360-399a-bda5-8e6e1c2d4cdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.removeItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "ad7293d7-0ff7-39d6-bd0e-1e57eb734d78",
    "name" : "Lists references of an address group.",
    "request" : {
      "urlPath" : "/v1beta1/78i38eq41pn0yu2npurr8bw6flp5gb6s2om7nt6dq33smqybt80sb0ec92z4s5xerwujm6zhvkkovhfl13omypuidhwynz3hn3nh48sbr229cb6iqyua3l5ory4fol05a0b7h426c4l6a87i0ru7lyreb1jmr95y85fl9lhrgxxo0jlx7x06pavkw35z199gl64:listReferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroupReferences\" : [ {\n    \"firewallPolicy\" : \"gde0dg0ttdiflz9wn8awguxupb15omjvudlplsyy8gqar1dnx1hvfioiwvffg8ap2lx7lo85vj7vpko931ntifcdn7koi1qcgddm6w49k3xatonm52m6q4xfs1c6lx4nrshe4d3nk\",\n    \"rulePriority\" : 1484707521\n  }, {\n    \"firewallPolicy\" : \"nju768wdip0zgc318y1xbp8g367gbecw3fkgh8itn9x9x6owaztuvtm9w4djklvtgnkfr15fln26aev6m33vw4klguiqij26psbn07uwg6vlfnog9x0f6a9243w2\",\n    \"rulePriority\" : 2051444682\n  }, {\n    \"firewallPolicy\" : \"nkmdsuz78c2xp2ip13mdxil4ig3xsv5doak3a8py5b8wnkjf4h24mw5brgqmg61jq1253vz7iorblyva5qrpo9mm2bf5x7jx89hfqofx5f0c65w0oe4piqrc13k0rvbfmqjl8qjjlgae3cgjeh27h3h8jacrfk1cwwjcxituy7miv9cgxrv4kf13x2\",\n    \"rulePriority\" : 772195743\n  }, {\n    \"firewallPolicy\" : \"hi3fgsvisguwwn0508gugu0jc4dbwgy798kjfu16ujqt8f7b9jjomz4oo78ow97wced8pr4doib2omzprkbw9gbdlgh72z3ixexva5s56i5s1c\",\n    \"rulePriority\" : 382277003\n  }, {\n    \"firewallPolicy\" : \"x3rdvmsdcke4yz0u5ut1as7jrxu4oe6tf9uv98nze\",\n    \"rulePriority\" : 579872163\n  } ],\n  \"nextPageToken\" : \"hv43a2woeh54w58liypquvclu0w46b5nsppvgn15u42bhnwwyixkiuzudm5900e6mshkberfqqxzxnq1rtewauyquplufdaqbc4hsjf3h3xxjy6s0kortqcl5oqeibna66ezumwzk2lt4ph6rmj27hpcqwhf8voekmr69gqhjndv2yaep\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad7293d7-0ff7-39d6-bd0e-1e57eb734d78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.listReferences",
          "schema" : {
            "description" : "Response of the ListAddressGroupReferences method.",
            "properties" : {
              "addressGroupReferences" : {
                "description" : "A list of references that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "6c656c70-cc77-3318-b697-416412700a01",
    "name" : "Clones items from one address group to another.",
    "request" : {
      "urlPath" : "/v1beta1/0rd8tj5o6xq7orejbi104xhuvexc85ej2jjex3ulvcphbqhitjv8hitj720:cloneItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Debera Bechtelar\",\n  \"error\" : {\n    \"code\" : 1011561198,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Officiis illum repellat dignissimos modi nihil. Aut culpa consequatur fuga quia quaerat laboriosam qui. Nulla expedita vel quia.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c656c70-cc77-3318-b697-416412700a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.cloneItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "f97379e8-b788-323b-aa6a-e89c9d43a287",
    "name" : "Adds items to an address group.",
    "request" : {
      "urlPath" : "/v1beta1/j6s0tdlud80iuvnzxkvvcldlx30rng6skvdlmnglflubwrg52euf9kk1bpvhuvoduoupg3jefk8kseahfjanmzmbipyt18du9pz00nwch3k8nm7c6mp4icqls9cucuhuxb1llpdrtx5wht9s40ym291bzsde8z2cqiu0oqbz7no:addItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Veronica Hudson\",\n  \"error\" : {\n    \"code\" : 861315037,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Praesentium sunt fugit et id. Doloremque repudiandae optio facere explicabo. Sequi facere autem laborum. Molestias laudantium dolorum facilis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f97379e8-b788-323b-aa6a-e89c9d43a287",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.addItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  } ]
}