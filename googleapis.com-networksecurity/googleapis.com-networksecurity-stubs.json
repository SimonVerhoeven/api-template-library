{
  "mappings" : [ {
    "id" : "dd56fd20-2210-4370-b012-b5f54c0a77b3",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/z2j5oblbzajq0qsyfi3dd15saklx0g5io9nk9gmlypv41w4mntwr646cagc3b4kdom6bvkfwlyzk5a3xjlag2eyjkwuunl70bt83daf8np3y:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"s4w1drt9i9adz2goaepxvkwyx8d1waif1bit3c5qgo93xzgyr9eofpe5hew6q0y77ra12ihkgkadkbl9kfy9u8dneo5jf6irn8c1ldy6ypb4gpkdkffk6boazyn2ngx1t5swo4n0z4ispg0fwib\", \"u96mhpnd89jehqdhtc9lkvzidk5qi4h2zci4iaqk4surf9moby76i0jg0ks7g4qbz7fdv8llf53167kk9nlp3ves0j9risufwzfukfwptg836zk1rm4xqmry\", \"5t39w131xoibatrjqmmqiuvtbignlo1r02dorzyqpnyvp\", \"c4208arbasjs5j42o9kqdtkue721hgc89jmxf0wzgykj3tqif9t1zivm2x6cgj9ahd2hmk19tgfm2lacuq8k7i0yisoh0q1qcuhpnajce3qahdz9act9wvfyhip8vn\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd56fd20-2210-4370-b012-b5f54c0a77b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.773611Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "354956f5-1863-41f5-ad0b-5f1978847407",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/r2spiy7khstxm06bm4t60of5oyi8jp7getffhgdj14xv5mkdmcgsmrvmh45nr7y8dzb6zts4adnskrl6tx56gzfgbjyjh4jb8je8utin4cdoxoaylqc830s1poe7r7dqyu9784r4yggu2t6qykpmtxdrtjtcrc9fgc4osyew5yszt3qtpu7r0orusn0i4zp:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"bjtt0vaig4ygbkn2jo0u8kvg55trktd9qd1dxjxm6f6urtaqu08dspyl68o92k3hy660521wr2vpo2h7w6liy4dkzg0qagy5v5\",\n      \"description\" : \"Exercitationem itaque quia impedit quia tempore. Officiis quaerat quidem iure eos a. Vel et eius labore nesciunt.\",\n      \"location\" : \"s490o2jq5dlbu2up8vmn3u1snr3vhkniz8ylkvzzg8i2l1mkm18uxm693\",\n      \"title\" : \"Possimus omnis velit sint eum.\"\n    },\n    \"role\" : \"us4ouq4bp9rsr5nf0e8yotkz7pdqewutgdeuku4p0jtjf2o7xwgxj1xlm4p9g7mj6f8utfdwsfpec0osrujzozah7jdht2qkeyw4z4qbguibe72y3w0dbgag3bkx5vj1monb\",\n    \"members\" : [ \"ujztsu0i5qutxihmlvjxorxawsuwxg8ec3sfujubo8en71x411fl6378ie9sglkkowfv5rf75nk8fse7wbix0d43vwwrrwahnvs7efyvw950yo90q7awp0m58q4cmuppk6vigrgn8phmf5kxq7yj16l8919syjdk1316zip7nfpmqbf32hpt88wly\", \"xu6e9ry3bwgd1npxnk0zh4tacxv5upbmeprn0fue59hukvewd9kp3h8k2nvkq6awjoz3ynl1sybe2ja3p2eqpgfvyvdvz1hsvhn39xydz6zd76qkv8lr8vvmy8aj9uqxwwr2fq908q3r0yd1j2rcuzrykb2z1t83bav3najhc50srtflwdq980w9cs\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1r8veblx3lspidzb51a2t27sx3g4urkpf3fxaxk36fkvo7llltfay9j\",\n      \"description\" : \"Voluptatum vero rerum architecto alias nihil maiores officia. Et eum accusamus. Rerum aspernatur quis rerum sit quae quis tempore. Quaerat laborum modi. Ipsa consequatur consequatur quibusdam mollitia\",\n      \"location\" : \"smar\",\n      \"title\" : \"Porro assumenda accusantium rerum.\"\n    },\n    \"role\" : \"nkf49plcxjwaxh636yyzr2sp9e\",\n    \"members\" : [ \"2kq2xbpj1lmsa7mdzcs7qh2223ldu06rie26s82jyfoozx3an1t7be8925e6nme3wf84ktlepep0l4yj8fa0fs8db1kd7y9asj1xlqgzg0xehn7skibyh4wdczgxvpl6ev886atwuvp8qmih9yh76tajzcxqjvs\", \"z0ug27le8xv2s9ccpb9xrlmiix859wj77lwfykcveh4t7smx70mixlaarrow859dsmrjwfsz62v9mzdi5yl6jwg8cbrjnyvurhngr7if9q4oggfwi8vxxvu3e1\", \"nqorkey7ii2hgxgbevoh2r3t2mfa1ttj8r0g1inkww42b95t8utm5eppnnvw0eoxw7abzey\", \"nx4p5z7wdsibri48cs2iln3uybxo224iponls\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"31zxx2ilwgidcb1tbrjmhi9h9bj5kr7nda2qcqmkhl41mxdyh535cyofl7t22fqqby0cj79nep0bkow30bbqrx3jcxdyee7vgkvydx3x3dkrr1vpr2fnt2knk8u6gah23ctpnk3lgoj4a02iwxf5srdp74ka9uhfmj51g33dlf17114cudkr43n0om\",\n      \"description\" : \"Ab blanditiis aut aut odio natus sunt. Consequatur qui aperiam eligendi quam pariatur vitae in. Quis odio molestias.\",\n      \"location\" : \"ym83v60u\",\n      \"title\" : \"Corporis amet consequuntur ut eum facere distinctio.\"\n    },\n    \"role\" : \"nr9qgudzsypqybr8x02eohlkptw29br8nyxkgdunfa9pz62eif81bz35kh4377eib9dmwkuhz3nh7w1y6hckzxiwm90f6japoi2txiln5rebrxws3tj8cjuygxgjr0g7kb40mgbh78bxab7rnhknlwredhveuutpsee31pwhj0\",\n    \"members\" : [ \"f30096asisoknwgnah48azd83jauuh0clasbv4phr1henfzry64x313354hn3g\", \"7sizts1a2195yjgbwvd9qt57b372hohw6rvmcthoayc8fhix22vf36hmpjw7xt36fk\", \"lwpekzn9mecvq5wah7390now6t\", \"oi7aw62l01lsogahc6tki16z6r9jt7mkjrokx9pini8vsbg6o8pwv0u70iikn1fkxbw0akzlanofh75nkv0cucimvrm5tzyhk2as0\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"9puqgge8dgnkxwfil3ikepz8mhtm8v4smxt2xmzssjknamcckd48cnw1ie7ushcyfevn58crh74cjtzw5t70\",\n      \"description\" : \"Autem optio ipsa. Eum aut quisquam. Ipsa adipisci nulla et.\",\n      \"location\" : \"n36097fnj21ae36d86qsk85tf5x7nqvtyflxitmplezn46vt3umbs8myw\",\n      \"title\" : \"Voluptatem tenetur eum aut.\"\n    },\n    \"role\" : \"0so5o5uu17xwj6tu3vr4jzi40v8nivlanr3hwtdfdq2sstnj2q9be56s7d2w481cvx01z9mk7ca69cju80n17npf90e3eejh3lxhmgdxbm7lf3my487otng0cao2hbpmt11i1qh41k7oan0o08w6sszk6t84jjri033a6bvmhls\",\n    \"members\" : [ \"zpk86l3k67qap83ec97ty352qi390sxgyt2w029gr3ohj30ygsy797yaopm9ejijw4eh9mexvllv885xxwg99z8x02tqv48mlbkdxcxfb70xx991232ryk2uxn2h2y3s0jjzgtydin7tmp1u0csy3tz6nmjsr94a56g398aot7op\", \"tka4cgwpj7pqs1i0x4f7gif068zuf6u4sm0ix9xhyt5iau333kz1511etxkziujilb31us2ybjoo7q99g1b2b52093t3wjnoml4xqhvquvdceq89ju6vjhk98fb4gmq41167bhwjvit3dx\", \"tpsr0wxwapf7hxrkc412my09c\", \"rny54n0hkcqzt6zqdk6gm48dt7ra43ft735bda8lmoz4cyqsc9d423r0w2pvjdphjqu9p1ex5v378g9m4yhac8m9oro41wiml6i0tucbsybfxck0ao9f7lj2mc195ak2fyb8sjwofcixqeqj46pv8cspzkz2v14cbrz9z\", \"u2rtwmdwfdck59xxk1r34csafymmw7z7n4qix53kr5dxtdm52cv3b9rnefjedpkx35tbzozjzxeuw3qmhxx1u75qsvu0mndqi76evksybu83hbawe4wowhrmvej1k9fi9lnh844ark2cxko7jhoguhp1dlz0zi\", \"mq2tdyt3f6egj68ktlq9clo7e3aoc0wdqzsxr8p6ekljbjit9jmjuv4l6kwv6zi7wuclfpu48afbg4mi68au9asjvmqxaxav8mpl6b2chpeggf51mc1zxzw5dhsan2yjikf0vxzxhrk1fbjf3sn65enbkrf9mtv9unevz\", \"sdnod28ura7ebi0lq95kke3b9wpmq3m1t3fgbzwwq80ajp4d6p5mxnu9gxcimctsxwc1c5cehihvrxf2jc9nr86\", \"bzdt9zdobr5sswzrfpfzuppqnohwsvypefpzehdnbopu9ea274\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"iomylc9li817lxanqthlf555mjvtdpf5zlrv4mblsqi8g642enpgxlnqad0bq1k7o1ewxm95nipwv\",\n      \"description\" : \"Quaerat vel odio id quasi. Quas necessitatibus sapiente. Et reiciendis aut rerum amet alias quod.\",\n      \"location\" : \"pw2k9hd3jih3uvliai4jbhq8x3l1ce3rdkg3se\",\n      \"title\" : \"Est rerum cum adipisci magni.\"\n    },\n    \"role\" : \"2p3ph71jp861h1xi1nyukl1g\",\n    \"members\" : [ \"gzkknm2yk\", \"2bruy526o0npogsmi\", \"ek7lt4dzxjtozgrh9pq1prox7oiaebxqu62u1jgxztofx369zrjke4q1if1frs0oft9nol9ks2jnrx7qsy9958bb57xzbpou9ovprynjqf6kqordk5oj8golravm9nd4sqsagvgb6ktegj2ujac4xq\", \"98oin7oqfjyfar8qiam71bud5w6193xvzedt9p8qy68sut9v7q6fzkvcgstle39ardw7yf4qiw30\", \"95mb5yyj26im45j91gf4jrd1gpiq11u2v9h42dc5r4vo2riphn5nlm9zjf11qn\", \"2f5q8hew36zmz5p3irfvlnw1t96d1obt4lonw2\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lef3neoms3a0q9i0cb4n4whkhceq1w4pjphn5dni9dkaaiy9ejt721j4qqw5c1jyv2p3l6puitcpwobixfwgkr2\",\n      \"description\" : \"Reiciendis rerum nobis. Non a magni sunt magni ut molestiae autem. Aut maxime voluptates iste mollitia qui explicabo. Delectus sed sed et expedita repellendus occaecati odio.\",\n      \"location\" : \"lgtpkt4ryp7z0287vu3s5b24d8c2a0mevmrq06k56cgru3aepj98zwap84ob10x1lc16hs4tp6e7fjq37mdtmhs5py4zqlryhdbu4gdbtpgk\",\n      \"title\" : \"Et deleniti facilis rem ab veritatis sed in.\"\n    },\n    \"role\" : \"dld8dojkxqc0\",\n    \"members\" : [ \"z0hkv30s2oo9hbvzpvfajwxeog8wot7w1831sxkz7k88qylnosklmuylnk8wg03223xg250rdgsdxl989bzkgcqzyuysvf77w62p5jkbxxlp56huc77vhnz23zq994pzldrfgjnj9meczey9ph1izpmcvykarhm\", \"2ih9eohobl0mll86snu45jxoq7nn1gzvwbnomqagzaffdvoqb9lujddik8omks8mmvhb4uz0oymls3qt637vh2wxadb\", \"8wzxot1am0bo\", \"1rftjg928gww7mp92q1nngrx9ljgpyvkwkf3aa6cu4reloysld95ccvlx4s2ay2dkhcd9pub1v8tfpskmm31548j0s2j\", \"wt14xg3yxzjwi4f3ir81facho4meg6qzirio2glygwfmvimlfl8vkip0kwb5cx950dqxwoxhiq3bzmfvatxy5019m0jqtre5lze0497tho499w8m\", \"r7ulgr6myev4a6h5j7un5pdfhw9xo1mldxraqhj6n9pqxl0g2p5ruktek92hznkxz41ok5uh8kiii3yf7xziqj7mddztai6g0ms\", \"yoefavb5fnj9il\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"64n1l8umfknxhxngohs9l80cmfoziwc9v89mlcqj46utzju5n3v32dyr1a0iely6gh2f1ap5aqcetgl8ogmn6vmi6t9d1kv8tv9exdvykodaprtu1874gijhyzx53yrbd5o95igojkzbi9pa5q02b7uj9qljb7oeh5xbq3x7mqo404h5q8y9lqmxy0kg3\",\n      \"description\" : \"Soluta aut dolorum et aut. Architecto amet accusantium perferendis est. Consequuntur distinctio accusantium distinctio. Repellendus sit sunt non molestias ipsa. Atque dolor nostrum sint quam et eaque \",\n      \"location\" : \"73itmerv75ums4bp3968ktod0qejm0kr8tt4fys6kngfbrqreczzz92d0gnr0eppz7ix6v46xqpgep5j2xlfkugp6cx116ewth8c1jpepedbxn2hvo226nazt03zz7ly1ap9r2d\",\n      \"title\" : \"Et sapiente expedita.\"\n    },\n    \"role\" : \"q6n8nvxywof3h3pe7uvb4hdrcbj5u9a3yfazt0wtst3cz92mdo9swaht6zvezqpgbf0zgaqddebvz2keprcdbnqyn25cf0rt3flm8bbkwrgw0m20j48lcw6xz09qv7rh46x18dpo3l5lz11fr22hc977rvkuabuglklzhl3kzwag4n\",\n    \"members\" : [ \"giyqdclj770a2w2l6otgh10lm18qyt2ueonvlolewiiy98yusdq1ca0ry47evb9g1wwsd325csbmk5h98iwvp4sc1sggujtp5jwpjx59t3hkjm318\", \"ggx2gab0xongh77epg1sq6m3p2pl722bda1ah9jedaw7eru55a1op50uia179etqa7z63bze613qi4ejnblpw9kbvc1h8yraizeizmja74tst6kyy01q7vdg54mfkzhrx6r4uo8c4n17fhu83z8o2mx7z7zglsiz8dupi6of2mtzol6rlbre0s72u4\", \"a11j4q4txau57mkwjsg1rgotkp77j628cbkofabfrnwmws5y5j56zmw6p45pspv\", \"tviqww5wasdbd4izcvxx6mqwcdau1mqxjuze4urftr6msqyh9wdvdlspu8u9zo3v4pfxc73jjne5j05d36psth7lliek3mhaoso2aaxsdc8m5x4jhedmjxqbmnfpt6pk6n7er4ahyidjchmzw5gc5ld85jdny4mqmqcn84wn7xpvzdb4bxfesyogpaky8743p4r7\", \"2xmk8dztiqfub7altkgirbklmxn5ewp8plvegrm0hev88bkbpts04lr1trl0rcuz0xy1mifxlsv1y4g4gsgp51e47h5wq\", \"67sv7tlk7sqom59aqjfpxk8x8h4gu7zzmxy11m\", \"l6sq3gxdhqwoamlugbbb40vl3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"or87hgdm76r2xc3mx746x5on0qumvmewe96s261\",\n      \"description\" : \"Et autem at autem ex impedit sed reiciendis. Veritatis quas voluptatem quasi hic quisquam ex. Quidem omnis dolores natus et rerum exercitationem. Eligendi ipsam dolorem ut error iusto. Rem eos volupta\",\n      \"location\" : \"sbhjwlbv2duhrjp41l64caik7qi2qnqxosqvgeurd9s2ex9z5qlswt0mmomtc2b48lvwswhfgyfpp1fjig5w5kkhs5ktipeq0hwkk1bvhnt37g5cuz7kymqv8z\",\n      \"title\" : \"Asperiores odio vero quidem.\"\n    },\n    \"role\" : \"v5f3l9mcxtc9p22a64z32i3u8yd5g6lla163mp7of6lc5m579fdp75ckri8t5zdb8qrzi9dl4irt4y3b56i9i39ab2zz4olin4d3k5ed94o9cjsbtdqawmad56vnc7f38s5rs5orc0nf25zukz990gbjf3vzaslpn916nlck2n59\",\n    \"members\" : [ \"mxtv266zu2oex2gh3jcplbw7ww58m2ua81\", \"6umz6dwsygwhilif22hw52jr0jfl15k1nfaw6wo0\", \"irfvicoz4g1oqr0fdpl27z81q669o8n824t69rscb113q9gcpruwcw\" ]\n  } ],\n  \"etag\" : \"odio\",\n  \"version\" : 161983439,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"f035bbx5upfzfmcefwd6c0vjuoebsz97o9xyf4xo4cp3ti7sjm84bqgdg7kp5upnhshu9ssuc65olem6a63xhetl7eof1lbpzgs61wd027p0nv9qgmaa2znzhccuqufullw4po5y59nr\", \"hycgkidqxzj06mh0kaywcotq0p1duozwempxl8bqs8ps4xjos1abuw4kzrrqtnrdm5df7fd8c9c1gd7fy0zouvaoxv4t7tj7bdl0munx28ggbeoyvfri982fwvsc6rugp4dxruypum\", \"jtu8gfrpnture3n091vcnb9e1enmb2bh0wt8p7439em1s98cydxafrq7eh4jzwb0iix12zbnec2p3c9bv2y36lgz\", \"epom5fab4todb9nnju1giavoj21xlgm8evktb6uqvshclakwcww0n9cmy9eekpvly5efsjtdvlrkrliic4paggmkccv7\", \"q5tmnig9kqck4t6en\", \"5bl4hgvvw84kmvgpo2z0idv8vzjyxbe46kbgrt1o1sqlmicqxtfnm4or8v4gjr2aexafaw1uaoahz\", \"w9jmnh6zok88q41a47z0intr8nsgzj\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jcgtzwoz0fhd8kvkwfmp6ixdsir8gvggrf8l9atbacjg\", \"okwetgr0gnyvj8udhhfiwuburky6q8ec1xjlbolurwpfsnziuldr0v9sr7wml231o2lph7ft0agk26c3ub3ibw4vnospt666jrgdqwnvck2x00liyf9c6efqrxyf1malka7hsj7g2ncw5gyyp\", \"6ozv4oml4kt6mvtwyi3qrhir9yeh0639sbfwebcsxkaelk1j5fgtozk8j4h2aq8wdtibez5oc8z0gvsk89ipo11jt75gypfwf0ks\", \"uiis4f8fat20vs2rj77skdgczcdwlozs20eehx5jxhzbz3tqc25bcsy4rgudn0t26onwg118i2lvbpsm4n9l\", \"qdqcpx77kq29h03o6ou3y7o8rntc9nevfsijgft9n363gcq1vevjs0ltuot683vw2r6g81raqxy7cpjfty1jk6pnuceizuwmfcnkt\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"wezr7f4qaesacfkmkgg3yicx3b3lhz9raflaiv8d480icb5mr5t8ocp6jzna5f3iveic4kyh20x0xs8ymqdu\", \"3i599agmkelv4qrww94zlvctz1xpyhcq3olf19314j7ktci67yuqbypc2n6q1ou720ioyl797rmdfera8tr0rntmzyykvj7vdtkm60kxfyg9d22s1tyi4egdv9t27dhfas2xeom9z7b3dnba4ospk3y0xmgubyuyjk0764pegbv11l2b4fg3l3z0xivy\", \"afs0qzkszrs7xfbcfys4abxyz7blwh9svovnk2u836tx7oae1ikf4zd7tw50raefu3xx2rajc2r3l01fesdobe153ldp11nojvvhcxzd8pug8zvpv3wo1xect3nky1afs0032x4naja5con3jwlywzj9g9lsqtes4f\", \"5iwffc66h4xl4i6eaxv7r6x57futlqn1q75yi4tn0560px2diwtmzdx84fot4yohppd23vu952an53ukhg7rqhhn6bvoj287a6nlttbns4dj4c2ujz2apx37k9k7mgpares0uc22a\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"mh77d385kkregd3v47zx32w9njf4q0q1fd2tdwxp96x6t9e02vsuu2c0vudsxnzhv36nikl9dblbghhd8szoh6uucz8i91m0s3mn3ek8ksn9lt8vzl9s\", \"7w9zoyb4be3zvdpj5oiqrh0anmv8u7jf5j8bbmei9531rzmct81jier8o3wu9ayh7mfpgkpyk5e17z\", \"k2jus99pfunm5834u2vq0pjjjegpyavea4d5jxbaju328hpma90dyutduebvgjqsbtyyp77vv2x8rr2lvytph7c2zt6n126m9jgt6cxc64naqfm2h5mxctu5dubocybnv\", \"rtvrgeckylgwuzp1mft64fp4278uezn2wfqlevwqkxose1w3bcz\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"bvzvqacxm8plj6mxwczn2xcsuus03iesfbxj2k9g2vjpz6phslsu8ufh611jirs0n3lev0sh4bfa2837mz4mgu7ixamj907k89io9dkmq26b7d4b3azzg5aak485od3tduspfkvmaks45ro11u6lu0t1ywnh2asu35llejsazmckhsrqmyso719cbyuoxga\", \"jtkm5rwahu2ox0vw0u6o6hvd1r5\", \"dui85zppxw4m5y\", \"9m2sopnl65fitn8tq9npss1h0ba7u7yzbim\", \"dzdn7mjozlk6z2cre8lcqcwc1can8y823whyu0c9yjka911qy4ut08y0mftrd9q7jglprfujnpvdtxt2bhe1xgnvgwzg2ocvtja238ajizm9skrbiahsn2nrmjx1cciysdkl8icgg08wbuvh2xjm1x6d\", \"p0qahj083fd6tqh1yerlcoa0betyq5118hrzsgpyyjts7pd5tpzvv79hfue3kdnug0kk0an3cx7nfqatestj9sinunxlr4cpk0kpqgszjnhf9tdhizp22s2m\" ]\n    } ],\n    \"service\" : \"mp2adbdwnym4vb7cqrfogo6k6yw1tufa41ppgwvaww3wxlo6g9ci0q4y38kz47hjfhceghm9076oe20f6pqczu079ymmfqr4cubi3k1mhoxslw52m7n71noc7f0r7f\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"vngnojyzef8m7lka74w725m3e1mqgq0okmskqb05z1ilhufxsvbzrduzvj09a4v5z93t9cn8v4xo9hiahouadsg204v7rdguz17q4e5zi\", \"zx5kmlewt9fuy6zi5ij4uya46ieisi\", \"go8ko32vfrlwhn2hot3rdfdwwqwx5frqrifghaimqhpv3ar3nlxcqk2iqkkg0nyy0p5sf5y\", \"buxb8570vcgg5a7tb50t08veyv6a73qxvz5anrkp4r8nigp1tbg2dv6iaqdmu7dmgr98rjyijq1p9wgp8vhw0dzhpjbjphk7w7dz74er3uta9fbyu4gtfnxe3a4kr3tywi370gn5kyq12anxyinufhd9wgie92yd01d9568yin8r5ng9seozmfbyfdndjy1fxb\", \"75gywlvbvm4esfyvh1whq8l15iwb5pwg0gztoie25v7ixrz2tlg11d78u2ozi879o100wwjl23dfzh7mvps3f8msxvmbp2hgn1grw60vo6ry1dbihp4ltzq8y2d639ktpz6rn588dlsezr6d0atdm8qr9u1lf3phu4a0qaq0rco06vux831osp7qysf7yxoimfsicrzv\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"n5jsbcxnf31v9i6oeo5ifgtuct8077ma0hw6poopn2j8qlzaemc4qtf99ffhcjw0v\", \"pq8ckvxsfwoc4p4s5cz3pfrjx4xr96k52g885sdj6a6lyyu6jlpvh0i1ig2uoih1755du7eyupuvyjmkvguhke3kz7a55wmm0rf5vp9nz0bvrodyd9q11598d0ubv\", \"zoww6bkrzz1z17etuf5ia62y8kqn8qlz54brc55aihwuxeselv2vex1gx1orfzh2ybpkbevtqn2zuvzgtmqxpsypg9k71xw0jeurjwwcfup763zf8l6a6bkr7na\", \"40izu99cglgavfh2a\", \"0i39a5g7bpl2o6tdfxcgm69mo\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"8lemjssz53tv1fa76efq0wo2fa5bf9x1o9yq0ad969nh6lernghw0s05gzgwwi1u8zg67m7\", \"iyu3zt7oejywbi6n41xo34toxzec0903asvxgrmpx10m7l68\", \"oaumvuqm1qro4toifi8lspx3q6pf92257l6vr1q9dt0botc\", \"6lidhvd1q8ojhac9286g1t6ngeib0era20andpoh0xgit96x5nh5lracqxpotz64d0codjaczwfez\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"zpoqnaj61mr84ssy9nea5rrtl90xz8xepoz9nc5b5lf2nd0z6qqpgukyzkwrez7nlka84maattp9z20qez1nwka8t63509ecfbtxicm7b5rrd2vnmpe0vkh8xzeb2qf33ihngj5pknmb463rvxdg5i0pxmz6kudhw9geequgl5fos026rs23p7swq004\", \"nq33kg17cyrkq5xr5loberxrw2p8c4ctv28uus65tip3nwrca5cye0sgp89cvh7ln8tfqrqwaz8p0j8ktq75je8ooo4gzc0um8aio9fvdrsagzgw5bv841lxa9iyst5l1bvuti43sellc20avd9jxxayf3jty\", \"ssujtsybi1c9yafjvce1r9eeaetzijvz3j6pny92\", \"csoep2nidqep0fhwicdxrdq5u0tb05rxqo1hdi0vz3muqe08re8w9ibj89cz9gz9mxctsckkhxd6t9fm4y0btvtcj50sh49d19pgidleq7r9fox9esziio0czngf7a8la5j0u4xpfu8f522ak46dk2v79gquqt4gmx7fil4wn7zx777lvtsx7ci0hsofky2nh62kt\", \"bv8lxvnb13x3ppqghbawoy6c64kt7ezfp4ovixwzilmnsijs73dsvq1h20nyj110lbjyh5y125m4xtr7iix7a7\", \"z58ukp4h2840a82n75rdmb8pi3\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"58s3rgaf7dv9rzhmgk3857ar6ka8uicof18u5d6uqh9lx8emph0cdhtzev9ptmdpznwazi5241h7pzh4xwsuvuthnhfyz1wi58gw67vchdf02795e45f7tpsgqo2s790h94uh1now3lakx4luvpwmr2ynxgns9fermsq9fu5bdwq8wbrbffjfmc\", \"youqxk7ron0y4bkdtnbswlimmgqj7lgo92xo8\", \"savwkfxkhb\", \"xpcdlajqnp2ech72vlvs5gul7i5levy7rujowcx4y530w8ceee6oostjqqscxgjk7c6iorerqiiyi52ed67zbb\", \"84z07lw2exio686tspweqybqus92sh3nzkafrj3rugtqoa50ek7yc8sdv5je3cy4c15xsm6ct26xxz0sgukbpbyi6docqg24sa9jqpkikr0wno71b5ki16tg9pdmcf4vyset1bxb509cfxuf5cbfor5pini1bn11bpoux7\", \"383amy9q8l2ihvy0u783xbfoz92i\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"bev3qr2117g9opn2dzxty0ypplxlj010new47ol4ebb50oa802ihftmz6goges4aod6shz8b8dxk4e2j0obq8eacivn9v96e95j72whazyrbefv6qvd4q84xdbswt8gltye1u72siqgzswmtulqfwatluc910jtuqqvmrszdztvyaz7hcr\", \"wrq1c75w1xr5qoneyv4a247c11cg7acklg3t1f1hisjhkengeu0jcnx9r4xyodm36gb4k7qefsaikies78phltr38ixexb0chc22l8izhlzbochgekot6ytjnj7tfxjkk0tkrujjujr01vqtua3\" ]\n    } ],\n    \"service\" : \"m6q9zqsojno561uwu9rtuq1zvm81c3a5xwwp8q3lls7wdiizajc4tyqlpnq3wofu8i674\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"pya5j0l542ljx7juxpke5ugz95rp9wuc7y4tvtpyt2lkytae0cc14s66oz\", \"bffyaajdw4xmbcoitte\", \"7emwh282qysvv9lf5l9ug21v02n267b84126506ropny35u4fblnb7i5b9qosbmudn4j1hoigd11v6kxxag5omhj9mwtcbjb0x2zf3dhd1044tuax7uw1w63nq6gmpr6ey915ha\", \"4od9thfo940kohmqrh58uk585vlz40xs8x1afq5gpil5xqi1jiwj4c4vtrpvqaejmn73brprfe1mmf9ac6ibgneiyoaqyb04iaqs2oqgstrsm5z3hxrpjj8i9\", \"tx66rw150vjt61d9pjvvvvz2z1zhwetgo55npd8j70kafhfv10e2x4n694jszv6y5pgmn22vg9ilub5gonj526kvz1lwim58gkwtqr39tbev62283wiqgj9vflvk522i54by2kysoe76wevmvzb31jjmr80cuswxnnnj2yshy2t770c\", \"4tklsvsf3vvm1flfslyf8zgz78u49l71e2ecdurhlv22ab74zpiz0z5t03dt0yu06pc61035dehmxaktmjz09zydtvadqzqgcl5e57dxcquu4n4y\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jk5879dwmc44pk88vcpklawtala31g7j5g\", \"34ts6b1skjwvqcztm43ucybfcj2f6idl0zebdfokryqjehsgl7ep6zoaq9v1bup91q0uoi5nsyn48dcf9j8tbdhxat86rgpj113xw3ngd8a23yeuvip0mba2toe3usu8adfdbnqlfy3y0tzsr7lmzuysv3bvl1sq2scdzuk1peu8dlu686\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"yofmqbhfep3p528t89wpqn5m16gu09pp0g12icxorlnezgypg0kgapoa4o2tmeqym0c2i438grp8a6b01af\", \"vjzm8lzbt2cx7r3bs355sw744jxx1z3vlgcybenaxh3hrdytmbqi3j1svpjig7qha5ix3s3v\", \"8qjfmav22jubnwjfatsjn1md13r3ocdb17hipg0f6v813ielzyx9uzlhsg9t3ld1kbkd9980227bycs415ru1lastabxa7nupp83edvedwg6yljkf35fi3498p47d8rqdh01wopz4le1dmudq\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"7pfgb04uvgnakkbhci9bupykg9fmnlpw6qlrf37af4r31j1xtpehjjcebbz\", \"tb8xuoxz0\", \"n42zpxqg8yotlqvarzl45f184fldrysybltcin6z80k0kk8rxv2z8zijbenow5l1s5lysa0fm658xlay2whxzza0mkdjfor4vpdy5zfmvckrq9b5fe7uaqt69v6i2od8n7quvl0wi6lwt6vpghozl8gah4w2ztfg978skhpb4ob3oeol8lw6oypcyfx5taxa87\", \"ran4xvrr8hjjl85w5kj906t63l1dh9wu6sezrlkgu5y2lo3ju6pzqs6ip3sqzgunvtcmcruj89yv6aq2c04qnhxy4rquzr0w7uyvgs80xazrurnczs6rcifxhpzp9b5rudxkzqmzeip9z\", \"oker9uqh851hm3ekbqhta04m3bxygllm6t801ncq2u44yuya34uowurzy3jh6vfq7xx3hep8gwgprnfo0b5f8rba9mp50d35lxmk27qh4q391bpckkcuvkm72g4ylgzenk96r1\", \"k4h304gn9j2htbql55gamx0xrnhiri9mmqb38xgiuuejeq3gluebkv9idtohsqe76f2at4biq95gk1coi3bixd8pkxz6pskb1px1bz1dlrczoghpzdrattf\", \"ws9l0u4mlf8rah714exiphicv9beuurpo5x6zkvnc1ufoplobgh84n8wt9f2vcs98pbbxodrjd8tebcv8f65zk2dav76vussq075r8hemy\", \"tt923un0kkt4c9e2367ce62d675rfbaufa9lqowayvnpgg791ja10k28ok3cq5n0mn7vjp09qwdn7il4emd71zjmbg20ewmcm0syhff8glba0rayjq5biathq77jihjh8h4p241c\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"q5jxvoli8u6m2pn1hf4ix1aio4\", \"zkgq9ud1rip0qutmy3iiuk5hvkl8i0yfkvycsgdi36tec4krb4wekm6tj2v9i\", \"5vtmqlevyf36qoqlyck\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"v4vu3j8i7idrbpupsct4z1kkp26\", \"omjorcjeoytf3t67mfyw0kxeq5hz3uuvm0f8n4plv3id10uz9zyt9sv130notbj2cgobs5sabclbp8uuj02qr7lk3ohj4gemvu3dan14kl48ua80z1dp5tyeeu8cyx5qd0wxprsbu18iqjeop849ee8\", \"zt0fl98j5prxo2lb5paoul1atd\", \"dpstjhpels4xwnr9lerjpo7sw7fjpddawa9jhrlzh9smwvls2sl4glgwqn12imcuf7d51k1ynlc3n6uny8vj2ur40i8sz8h0drjynevnf7nuw0wxh2m44fuk73s8y84sbz4c23t3ltu6xlubo5lfi0zgu\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xztp2cm3elrg07i52eafl16syr6auakwijyr08jpz63ll3baktepiiruajwboc0hpyhqhg1syfgj6cv8klvlo9vuxu83lhdmc340h6xzjo8aru94sh0nwdbltuavwo6up06j1k2i2lti97i5qzb8xabbwcfhqp\", \"83imdul5bfz5mx167sm40986sk79v7dtlv6h3scx6dsgxtc03qwc5kjkjez\", \"bqd70jnmmf7v8r4eyyfmwoyl1o8zypwmzwoct5jtzbz4zh41pwg0h70hi37w77qty3nyhtkc4ts2mkqs80iasvsbz9k9hffuf6tc7ho6gtynhv4of75evgma3frbdufaqym30khfvaoqf27trdyurm2jbsh03erk7bbk8z9g6lueqdr1nxgc0lotplx\", \"gt8zl4col2bgb729ph8ptlsrm5zm13z0yajocki11p8cp3txb7pxis5mu73shf01t7vl4qz8bv74lhyzw6xeixqx92iklc7ywmt0ghhwhtxwa6fviqhcoi6vovfppl2vb7s22py29alky\", \"zqwzkh9fhr9qfzrmyar41cxyi4fzagx1l30hrs87sbrt5gkp4wkjdoxa31h0k7a4wuofx6bf8rzs0hah9bp4277iw67mo096kuifb5xh6wdqesc210s5hzaogwu\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"w2rou77h6kxmfleqr6b167wuilpc5ytvluieizg0f22njgygbdi98gjmi0vgoxo3hsj70qiyw0ttyg5xz340f3emgodqpo3defcfhtjxn7nk\", \"7oi573nw8m66nomlq0vfzmpf4z1z7kdo5wfpqj7r6uiyvpveozph1kfo8rx94f\", \"ajytt18k1e6j4ozlb175beziav6484yrylnj5dtw12mwa9h\", \"77bzt3g94e9qwtuerp6ub1wpjomo1y686j8hezxi0x98xxgopk3aecb4p5z0546u3v5uom33l1fx8avkpdaagwta71rb996xhrj6kcletq39\", \"k02n094xo8qggzljbnndz4v8bm3meo2f8t1g5oo6yxej1m5m94otqkj9rddjhtyahnow78d1mgrbk6q265vo8xxnb9evodxf77bxyhdff2w404gdl93chmquyqa6c5w5lyqiau78q\" ]\n    } ],\n    \"service\" : \"fnzoazkff6lxgo39vvlewzvx0nt3a5h6iqdmhef05jvju2impk5ahqbofr34wrmlgds2x3fqjvachufhwvpyx9rr9nubz6n7kq9sb5a8s8083cot0dbrlz6bc2se1kepknykqchnq6obwo64wq5b4xy81hby0fgmvk\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "354956f5-1863-41f5-ad0b-5f1978847407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.773457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d1c2a4c1-8425-4439-b6ee-0a15263e0eb2",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/27ghk18iafmyc84kzahil3c87hy2d33tt4yfq3bo4w3qnq09suq4v8pg2t0mmkj1dzee9bjc1drkyv0d4l65fdwopbez5zay7xwbjpaxw4t0a02339qe0y5c49lkrrzztkqol3ew875f3cctmph2r4g3nhktsswpptfveq15r44owowdch7d861vj5jjv:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"iarrvvd270ch0yvnxxtw3yhc7xubz4pfjfkdd4tixdg9x2eysxnp5wbwp05fn48yhyo2c0tq7ske9db5d0xjwinpataldnwbrraa\",\n      \"description\" : \"Deserunt atque maxime et. Quo omnis aut voluptas laudantium totam assumenda. Atque nostrum et architecto. Et sed quo ab iure id hic.\",\n      \"location\" : \"conrt0t69j4v1t4ic72uw58ko8gx4986ybf2e19z7041mcn4g6c1lbiw4rnudwyio29tz8mv3mztw0eiti6uctc1kl6p9l9zxh8tgrpan2fyf7m8clj99k9j62t0gfdez0jt2\",\n      \"title\" : \"Corrupti qui rerum et.\"\n    },\n    \"role\" : \"6g8fz43s8rps5q35pa41m6gxsgq4jw94x8mz911jzfxkio4okb7plp4fldqho4aedw49eywi4gvk3ctba7dvt52v3aipu4p3hfbjqf94rp2888jumbj9m8xkogqiny2mjvrna8mtvibn1adylqv0gclzseel5sirg5\",\n    \"members\" : [ \"k7ynaeja0jj1xum36du8buzedn6zfyxkzf755xnwztigcyjifkjynwrg19m6exf8gj70sd7j1sfcgv7bkhrfhj35u98ucuuj2zfbz9t7bngjumje981\", \"878rqb8kh0qejz4zvt5k6ywhj10pbfsn51m5bw1azlprywl3ouf\", \"v5krwrf4bnu2vafj96kzti0si3r9cupfd7cdiupjdsib8l7pi9niuljsctxhcov\", \"qarej1oi47kdjl421hstr6zjurk\", \"urgnlzdgok99j9ff427g1zf9tgvvt6d7qblw550nrgohfeo5l2u8ex3eu1v3avmn4rr1scf29jyicdrglwhyl6u1tin2hh3r\", \"13jekq7n8jlvkyb9\", \"4t39fe3dtn15a10d3vaa8vr2oak3362l1hed8kiz8k94f1bxm91nhr50z9f0zhk1reu5mo5lttswdo56\" ]\n  } ],\n  \"etag\" : \"qui\",\n  \"version\" : 1839370158,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"dxv3w7y5wrogea3lv7jp57fihx0f5pmlwaknp8o2putuadx44awgi538ftlwv6hmu7gyvhaat\", \"blhf14cv63o12ul1v95cscx2413dgy9qbhwkf16m\", \"q61o09hznx58mkrvv5w17pasow5nhxvaft69bmb1ktgzvulu\", \"bmfdoiukyx3d9qznpkxc8bkbepswobcudmbxxnlmizhoulp20em7r6vumc9ehw5b5uasnc98rxvvhx2a7x0b6vlgcfwj35rrh2cagynuw5h7bbdus704l3wzopqyi1l9craba9b3pa0bzywviig33d6o\", \"w9z4ujv3golc12d2aihsrh88z8tl8p70bf5uuufdbgzczsb00us9v07yi88qtdk89khaydemb8luwggqvlvkltnsvd1mo6bxvkometsaajy5ulto4a6ykh0zqjf6ydn1\", \"u0zw8j0fuch5wag91it1hd9rwa26308elf8zn9mfczq2vuz4igoep8wd1fx44clt2zlb818fhg\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9mvrcldomoy42k3wf7c3lpdnc3m8gqmmdy3vd76mfqoe7u3cw9ixht16lc9xdna3h0p7ovcaozivu6pfavptwtz3f5npjh3wufisjdgndeocn21wxkdkm6t8zri5dkwmfo2ugwuh18ik\", \"rangil5wr7xgs1u4jq3hmq6dhhu1lpm2b4ia3cntmk5g78wdxyxpbd24n3939mvc0r0a5nribrvrokqcudjpsxz0cxox92h4hfnjsei02h5lbpv363h833w753ljdgejgc55lcr9qwtply37wgv3ufav1x6txyzprqg5v2n9gapn1kvsdgp9d\", \"5wvkwjrclv6z1njncp125s43wgw727k\", \"7jlfcpy9iidozapw778x0suvce43d4l3z911qskwho6qy2h6psqq18etp2kc8746rz2jwe4awnyrbdc08g3mx8e0sepovkz8ql4l3uxywsg4l0995qs0zi6cq4h49m77ycbkhxwydlgr5fpj06rk3bx83yurvucolenfozktbs63pancok9nuqrm6iamswdj0dw\", \"78a4ybhqvs5tfncx73f3q7wvtb98wflrvrw47byf4ykvq7b6tzy41e\", \"pi9vj4zxo4dezgxu91dd0wbzx6vbdtbybipxkilcrqizxisau3roe7nhrqc5ugp7xmey9ojutccfbcvreqs82pgsc4ttqn2tbigesqxowzcf5waw4b8xuczh6t9380xx75jpnky0cjerch2xt1fbkaznzduio1zkfsnjcq2s37u7vyyvp9ph36kafzev6lfy\", \"ccrw4gn\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"3t4zjp4ro5062brcrhffyokoydi417nvj09ss08bho591wcjbi8xcspb6h5de1ogw86l2ofapzs5xy9kixrzbxfpn4s6b\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hbmxxy7umhzhtyq\", \"4z0g96aqnea885venk8nhkpxkpxtfdtol4rklbo8vww1degipyun6e502y40ap0f196twv0qnl43hebdqu32vrk5wwa79xkkm8anwbkw9amg5sg2z6nkzwzsedlax6o9sybrixu9xru6vggbc3ylwg1cpfza2b40cv5n6o9uwwnvsfi14x4y\" ]\n    } ],\n    \"service\" : \"pfr43p8wyfnt5fc7znzh8hhtpej1hrnrhi5vab83q720dufvwht4h7omgt1phuh6mgpkitg8qit6zl7b8wg4camp5ahru3usitgba2x1s9ks396r4sr4v2zkaxfy2yjvodp1rz7k6kxt8ujrllfknwk4plytp00b54cd5b3yfcet\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"i9jo65fzti3vlbj000icbg2zewsngwt3ldk57yvkus9o1lr9qzcvmmoetwcphqb0bxkbonn91ncft3sbgx859q7y2bni0qso79kinmgqw4gcx9ilb9lyay9rk2go9r82hrzth4wleuszovt8pkcyb8xan5olw3vqhw66a6dgs2c8rypr4qgs06r70oy\", \"eitn33rhv418il2kh2i\", \"b2bqeky5e4grx2wq2eyu5n29t5uxch1a0ow1t\", \"7f2qavwofnnko85wz4t82c2ev71b7roa\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"mf0ag2bheh823nhgw84s1zg4cld6linijh8k7m04nlrkiayoubeh7xak8fcw\", \"zk27txndg2ydrwo358jg6l82o1cmvsbwy3h5yoys6rm7omigvfyhsik7zui8wp88fb93i1sleimqejzpwlr7wfsyaguk0izja9463741lc8wgac24je9i41piut5ykyj6ffsj3ixur11wln3sfekyt9uuwnssczdvrh9gdq\", \"uc0j75u89p006c7oybjf0ukw\", \"pap4bymfdaz6fhuh54c8j78y4dp3u9vgk7ua8q302okfhpzzg63ul9bhgp7l8r\", \"250hyymr73ihv1jxcwryj2h6i892eii8n23pye7l8oecdckvky8snsznjvwjsao971cja16k2rd0lr10au6k09mx3vp6q55yvsk52r6phk1nleu715h\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"qt9m5apjifassu4fs5q4spnkthh792zt1txwtdasegunltowmxfr444cwpyi1v6fruzi5pz8dodral75tu06p1d9p30x\", \"q535aomh9orc9pyfgym7bvir1y4kifg4gv1r58r87rtz6vlhsy7pnbvr3m0bieybi1eun9xd62b4u7veyv17f9nigy0zw0jn931z3yskn3c060i2azv4pniatxjoo19wk5byzg4h55huvbz9t1qt77slawfdxfvmzkolh\", \"9rvyyqx7fjrytorc8f09u2sc0a37bjygs7zbv8dvn8qrycia9pssbv72nf1xodry0rid9mks93t2658idhbqnyem1pg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7lov5y9jyoffspovzowrx3nkppuqker8ns3luboopjkyc5v5tg19v74\", \"sph6r48fbac7a3etbfi2d8kl5ii6xk39ol5l6bwgkhuxxxsu\", \"n4jdb344key4abscguufplbu20vzybfdvkogz4w4yexee6cjf12iya1lkddgk8mut678fyp89se3ofir6rot56e21eix5x1unq1eq4gs055qadvlfp0je7vywgvk9xg6cr1i2efl0dp94s14tabud7et9mzgshmpcehg98kqrz2bc1x4hrlod8syw5fgxf\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"cwh6gtudjo9wb6q2hjjljhz41fj\", \"2tgpghp2ifh7gu74g3f\", \"fx9nz0f7dmin3pwdcdv94j5poc0zos3umsnrrlobij0mdu679dpzu1gczsevgr7ehyl4845e4bmdsyp6zq41eqw95jykfc5hg\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"cbk9a0cafw66k1jbim32du9utwe7ug8rzw4ezotcqtnajtls3zj25xx6scxijt0dre498fxdhyi2yj3gm2ymmujmiy1090m637qc3fpdbvr6ahilgu7n9e60vzwv2bmw0jcdy741at6ulhpn5f8ys7i75ffo5gh1dj01nr6krbr1dtkcc6v4lv3fi5n6q9\", \"cx6c6sgch9dv3o27mt4pk7oqgn8rrscbfjxfpodh575mf61b958rfg10heprbpc6nywp9in87cddhvllnkr62ykph86l4faso2rhn0lkfqzjiscl0i4108356ma0iwxjqiq0i0l5hlf9l28wg5j9ujos6sp6wjcuyeamfo1rp9j63rykr38l3g4arwwcb3u5\", \"qhwqd443z8r32jgi9vf3qfie7nx3uf\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wj04c9xkvmltcys0ef1osb8m1zlhowkklx01kubzjc7oeez18c68dvghjzcpjd9v0j6ojumnq6sij\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"2l94egicuq126z7gtue180632uaugs\", \"wuqxn4gwbu2n0laznwuhpoprda8vrqun8xadefkf0abnq0alhooemgvcy7yw2zrgou97md\", \"x26r8g4uriz6mqxqwmv9vwp8smqkwi2rm3n4l1gw20bwmcjt2legxig0o4jhmvs72skwtycvh7j2zy9zifhzdydrba61n7k7y7b75e3k4oic5okjf8mbzobjww3rnlmlu3tuaq92kb6eozyu6frdvnm581ay2hujdsynqlz754hdpmd8eq4wtnv8myfds\" ]\n    } ],\n    \"service\" : \"vr73nm14otket78298q3olde12iq8tdkvjdq82ojeyxu18fsjhblautnol4ij8gvx9u4np3ua3tyzqv2ersvut80kl7mpyjsdz5re47bmch4mgefdq2pxxueocso66ynr8ith6g\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1c2a4c1-8425-4439-b6ee-0a15263e0eb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.771171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e94d7913-6bbb-4d78-a0cd-00ce377460df",
    "name" : "Creates a new ServerTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/ournyck9017c0vphksxalaw8w115mwedot0xg87jsorrpsf6n4gp4mw1yxelbs3648zq2jesub5p7a0ch17llhu3wcmf2q21d2vmjiohp2dswi36ald2iyefqtb7rfs3v3nku6axaq3euu1gxqlj5hbkvx38ifk7hk5ih9v0gj7zsbknvk49d/serverTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Pearly Bauch\",\n  \"error\" : {\n    \"code\" : 417593946,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Rerum in porro inventore asperiores. Omnis vel voluptatem quo vel occaecati qui. Fugit consequatur sunt eum reiciendis eaque. Id ad eveniet placeat qui accusamus blanditiis nisi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e94d7913-6bbb-4d78-a0cd-00ce377460df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.770171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "93ef5ddf-7d85-40e8-8247-0f93876977a7",
    "name" : "Lists ServerTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/y9xsasvw4hmvg4sv9vwqfhsfjbl8opxpb0of69fpm5m9fgjol540uoqf4n1k83lm0fyh1r8p2qd5yi99/serverTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"idp1igwy0ukwpq5n48tvz3kxgpndm15lx4efsm10lh9jv1gw9ag6erkht8kqahdxsjc4wc1671sj74v4nu7bloukllimghd135peayyypoitbkg6ecuzjjmlb057b3o5g6fhy87zcsq06qyd7eo1yg5mr9oayoaqdvmww5\",\n  \"serverTlsPolicies\" : [ {\n    \"createTime\" : \"2022-10-24T17:28:31.769626Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"41oxdnq029zju9sx0lyyz42ptgan2vok2os9hwuwgr6lglwtb2s1f6ywvtoetrcvqwx0t03k7tnadq9rxt90yx53165jopo97br94fpmt1tvcv9vt6gkw\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/111540\"\n      }\n    },\n    \"name\" : \"Kerstin Jast\",\n    \"allowOpen\" : true,\n    \"description\" : \"Voluptatem eum excepturi illo aut. Dolor quia distinctio dolores dolor odit. Qui et dolores. Velit est sint velit numquam quisquam et quo. Laborum qui at molestiae.\",\n    \"updateTime\" : \"2022-05-02T14:45:31.769877Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93ef5ddf-7d85-40e8-8247-0f93876977a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.769974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListServerTlsPolicies method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              },
              "serverTlsPolicies" : {
                "description" : "List of ServerTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ServerTlsPolicy"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03322f19-d9a5-457a-be3e-a11dc6164d31",
    "name" : "Creates a new ClientTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/7ir3n848oxlzlrxja7zmyakjcouuiwtrwguwanp5wc1vnhot06l0yd9i1zhqak9e3g75b2gj3nk488dq14p5m1ipr2ox6ztislla6o8c9fxudg63axxvuf2cm9vukhrvejgah72jqqggxxt64ucizb3nq9nacahej7sutm68q4lrpif91qn3ghzn3hjl/clientTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Donte Cummings\",\n  \"error\" : {\n    \"code\" : 1262912763,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Natus vitae qui ab velit voluptate. Et voluptatem consequatur impedit. Repellat voluptatem rerum nostrum quia quam quidem qui. Iste quidem sunt qui quia minus ut. Sequi ipsum rerum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03322f19-d9a5-457a-be3e-a11dc6164d31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.769546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12c9a482-3346-4d00-94f7-6f54d86260fd",
    "name" : "Lists ClientTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/9i9icfjctfonoo7hvbeea8wash456och6c/clientTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"a0di73x18yr4rnxohn1iy2e84vu243cj1n3x3f5mnmiblb1f21dal8yc2xkal0tw6wywh0ez9235alnn78c2b5mz5gxj71acgpyl92hfxpm5ie08wvycmlhvws6senriooizv6174\",\n  \"clientTlsPolicies\" : [ {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"jfww8luyjnpvereu67vrvxqttbrzpq1yd2xhltspbgx1um4vjehe164bfutbsmgfnmxv58bhhda9\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/910554\"\n      }\n    },\n    \"createTime\" : \"2022-03-17T15:40:31.766263Z\",\n    \"name\" : \"Mr. Orpha Bartell\",\n    \"description\" : \"Eum officia dolorem et voluptates enim. Fugiat tempora sint quasi odio maiores molestiae dignissimos. Voluptatem aut ut minima dolore maxime similique non. Autem corporis quae in aliquam autem.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"c3flab2irv6gaauvjsozcubppwihu8h6kznfoj794znub024o4d8pd7fqdbnqdfvbhz4zunv6r50y9nml5xiq5w3p0rr1wjzk638qrlau9t3uqbx27zyh5yd0k0y40yuvx8czofo2birhrkysc4jgf15ppbrky6002mcgfwzhxy3u\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/198976\"\n      }\n    } ],\n    \"updateTime\" : \"2023-01-10T17:18:31.766492Z\",\n    \"labels\" : { },\n    \"sni\" : \"a51l6lwxrstn4ukgb4tyr7djpfhawim57issxil5k8piju3na77g1e8wto6vyjofapwi3ir40qg1q4xhi7tk4u79eho2fa3nbqptf77xvbxdcvz716mybcle479k0xjr6\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"oh178x09swvhnim9hd0wjgmnnxda0zbippt4shj05lsjtogzef34hykkf1sds3jn6m51jnx0s5ani1\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/993639\"\n      }\n    },\n    \"createTime\" : \"2022-12-08T15:37:31.766638Z\",\n    \"name\" : \"Glory Prosacco I\",\n    \"description\" : \"Accusantium ex dolorem ut. Adipisci explicabo odio placeat provident cumque. Odit qui et accusantium et cum qui itaque. Praesentium ut voluptas cumque distinctio dolor magnam qui. Aut consequatur aliq\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"odpz\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/241092\"\n      }\n    } ],\n    \"updateTime\" : \"2022-11-07T14:43:31.766845Z\",\n    \"labels\" : { },\n    \"sni\" : \"i1m12b3ng9s0nlrp3xp0ptmqfg9pgr7hehtttvvnfvvazxv9g2do815r5p0nfssyrhvzxc6ad8n2hgjob7y25pkm7yi3kxa9e35k47nt6ak7bpxw2a5gc4kd6brp9nm7iuekzsm6kzlnrx3ola2yp47mi0qskuze0y327jr71fnibc8o6wkhbvnni6gteehz3gknewui\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ivgesdnizp1i3ohtflzjrua5hltprzo2t8v11p7whksouvtbv8nyh7amgshesh79f20u21js4xr566lf1503uijyfw0d4ats559jrx69boy3ex5yfmxtkrdhs0wmaxejyko3ln5suhtxggq3wqfwlx9l7v2uku4oi1m6atqx34n7bkzbm86ks8a\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/145151\"\n      }\n    },\n    \"createTime\" : \"2023-03-03T16:00:31.766988Z\",\n    \"name\" : \"Trey Reichel\",\n    \"description\" : \"Quam sint sunt eius. Culpa tempore rerum rerum molestiae exercitationem nisi laboriosam. Ratione voluptatum ipsum excepturi. Quisquam illo voluptatem deleniti sed.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"x308zrl65954mylztfj9e6eienxwxzpv6kkxeeo3vglb8w2yqe2spjuhofl384xso60fn5enjipzd3hspx3dba0amsjdrpbtqjwkkdhts3nn37cqz3isp4tf\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/232468\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"233mnas9aqmo53e57x48lc6gy8583i42eakqh9der9nvg4nwv6daqn3j6w1tw3lfn6h475vcnodrs7s5vx3o6gpp2jji8wj1296zxhdcqn56ymo1r60howzvgx5fkki88gsmk99ho0dy5rk7zgv846edzpuonn8jbza3jecod9j512s0q853\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/880593\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"wl7fh5die8wk9eoqh32ibux8xs9jetzo3gync479vzbrpmr5ag5iom2ntc87idxno0v7wan67p8it01okgkz9o23e0wuvtorvt0j8pwlb5c9tnp2581mzs671lwv\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/683414\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"562dgcisht27nmeyw5b1jxlahxfqlrclylxzy28c004s2qfnx5lcbleh09n05tl1a74r9wk2ken78qrkl2mejdj7qui6a8x7dvbtzt32d3btmyi3i30wkf8u7lg05e9t5qe93gc5e84dinhec1gikuadehtkth3\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/023730\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5v2oaoz4q3g98i0cd6zy7kwm3yyq1zik7g3avqmn995pmw6gakt9tnr4pl3wr60o1wojfgk2bvve0v9xafytxhtkyc8k71dfjbinvq5zeyo6uat2kceud9rkoc959bkb7aw6ucaway6qdzcn52cbjmruxc9pdfxqbdczn6igt2yaoh51x\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/317676\"\n      }\n    } ],\n    \"updateTime\" : \"2022-04-21T16:52:31.769068Z\",\n    \"labels\" : { },\n    \"sni\" : \"nql6k4pzm71xwma9jrjjibwvflrth5dixfr06b731u7vybtm86m38e80tyc10jmp4auao4nv2ihp0i302honfphzvvg52qvbk6na6qll6xoujhximwjnxs16qhn47hqqezxkc39ypqsbvambm54p8rui5zo471ir9qqd6hvjxi0vs2h9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12c9a482-3346-4d00-94f7-6f54d86260fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.76927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListClientTlsPolicies method.",
            "properties" : {
              "clientTlsPolicies" : {
                "description" : "List of ClientTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientTlsPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f1bae407-ce8e-4667-a0fa-6f78185b54af",
    "name" : "Creates a new AuthorizationPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/ost7zczkpqy/authorizationPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Elmo Konopelski\",\n  \"error\" : {\n    \"code\" : 559138398,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Est quod ut. Non maiores non doloremque est. Sed et in aut vero odio.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1bae407-ce8e-4667-a0fa-6f78185b54af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.766059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5795badc-2aa4-4d34-9e40-26695c11287c",
    "name" : "Lists AuthorizationPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/o44ryj/authorizationPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"96ptdra16yu2f21iewe527n0wubvhclb\",\n  \"authorizationPolicies\" : [ {\n    \"createTime\" : \"2022-04-27T15:18:31.76381Z\",\n    \"name\" : \"Dr. Sherwood Marquardt\",\n    \"action\" : \"ACTION_UNSPECIFIED\",\n    \"description\" : \"Officia ut debitis enim nulla praesentium aliquid. Aut porro excepturi nemo nihil corporis. Velit repellat consequatur autem molestiae autem nulla.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-06-21T17:53:31.764074Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-10-19T14:58:31.764119Z\",\n    \"name\" : \"Julio Wuckert\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Minima sit distinctio facilis et earum. Aperiam a dolor voluptatem quis eveniet hic labore. Et dolore qui rerum neque et sit velit. Voluptas laboriosam suscipit at ducimus sit.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-05-17T17:52:31.764305Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-03T18:02:31.764348Z\",\n    \"name\" : \"Mrs. Frederica Collins\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Sunt autem voluptatibus soluta aspernatur. Sint provident fugit in similique voluptatem quia. Possimus ad ut. Esse excepturi dolore quos vel.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-11-02T17:18:31.764627Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-29T16:24:31.764668Z\",\n    \"name\" : \"Shirley McKenzie\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Reprehenderit commodi voluptatem et ipsum ut saepe. Nihil est eos. Libero provident et.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-01-30T16:08:31.764897Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-06-30T17:28:31.764936Z\",\n    \"name\" : \"Omega Block\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Qui ut ut quos. Quos ratione molestiae nihil sed natus et nam. Itaque earum quis quos impedit praesentium blanditiis. Explicabo quis adipisci perspiciatis. Deleniti non consequatur libero mollitia.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    } ],\n    \"updateTime\" : \"2022-04-12T16:48:31.765071Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-15T15:33:31.765105Z\",\n    \"name\" : \"Taryn Marvin I\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Dolor alias fugit omnis quis. Est accusamus aut fugiat. Quis eius odio. Sunt quo ipsa delectus error voluptas neque soluta. Eveniet sed accusamus reiciendis aut quasi expedita consequatur.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-06-02T17:52:31.765298Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-29T17:32:31.765331Z\",\n    \"name\" : \"Valencia Grady\",\n    \"action\" : \"ACTION_UNSPECIFIED\",\n    \"description\" : \"Cum rerum maxime aspernatur culpa beatae vel. Cumque eos rerum tempore. Pariatur facere fugiat facilis sit. Quia adipisci alias et.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-08-11T15:31:31.765598Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5795badc-2aa4-4d34-9e40-26695c11287c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.765805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListAuthorizationPolicies method.",
            "properties" : {
              "authorizationPolicies" : {
                "description" : "List of AuthorizationPolicies resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac07f764-4813-4009-bef2-5c8bfc234a42",
    "name" : "Creates a new address group in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/8bpoocbrp2y2wchudadhkidnqbkz3e5cki2aa9ps21mzspxc4r5tw0otssfv3dd0z730h49gyqd22mm8cpc6qebuoj2pb5vgtvwyoigpif5xye64sou8cx8c9zg9srnysxnng7n/addressGroups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Magan Parisian\",\n  \"error\" : {\n    \"code\" : 1261035919,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Incidunt ex et itaque quis blanditiis laudantium fugiat. Aut inventore et velit omnis omnis assumenda. Delectus velit dolor aliquam totam libero. Iste blanditiis iusto omnis omnis enim. Sint excepturi\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac07f764-4813-4009-bef2-5c8bfc234a42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.763728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6ddd04d6-7cab-4221-966a-465569b06e3c",
    "name" : "Lists address groups in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/3wxd3ar4hjdzs06x5wm1s4b56kq26cmja4kffm6syvjahl6hogztl33oo63ehiqochkplxcbxgs3qjk54j0ey02zm1cct8kmn0uj7dzkk9ur2xpbg2f1knubqkp06c26swds68oj5f75uppp4l7uyn1uu7afewpr4iddkf7oqcjfp9cy0fll56cqk38/addressGroups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroups\" : [ {\n    \"createTime\" : \"2022-07-16T16:58:31.762509Z\",\n    \"name\" : \"Maureen Emmerich PhD\",\n    \"description\" : \"Et dolores eius odit velit. Magni quidem esse et nihil quo perferendis molestias. Doloremque et veniam expedita id et vel. Dolores facilis natus reiciendis deleniti atque nobis.\",\n    \"updateTime\" : \"2022-06-04T15:03:31.762628Z\",\n    \"type\" : \"IPV6\",\n    \"items\" : [ \"ub4r7ex5cu6kj7pjpl33crv78dqd52xpltk18af740q41muhh6bxlvdlw3k5w5wkg6lzpjsz2n7sz1cyo0ikbpf5w72mqzttkmj8q3lnhx2gtjy5agnjzl4dwq7lls5h9eebxrhpapwjv5gvnhk3b71v37xe7sbzit9h7454d93n94nqa\", \"7bmu41rvxjwxb9s\", \"sm0k77oshv7avzfdicadh4gfftpop4tni3mk94opof0zmje80yc55ek773fxqztwcytycc69pdcjrwgt0bq10ilt7\", \"ftia22i2r0j2vov579gi62fgf1jig2si5wtohx6jck2lio80j8xawlo5dl605mhtwwk7v94xj66q4u6klmsxig1wqu9pircc6anqkry7z6gw6vjf9vx\", \"f3yxpgnyelm\", \"cfii1z3xqc3y7t8ns\" ],\n    \"capacity\" : 504301117,\n    \"labels\" : { },\n    \"selfLink\" : \"r5v6a81x7cgkwk83e2apwhaetfgwob5zavafephg1jk23ralz4bcyv793a8c0ez9lma90oo1k309qf4w196tlwhbt1bjjyy2dt66poiqoejehf152och1hsc9ch6bako42agoafkibqjz13z9joy\"\n  }, {\n    \"createTime\" : \"2022-03-12T14:33:31.76275Z\",\n    \"name\" : \"Muoi Mayert\",\n    \"description\" : \"Iste voluptas fuga nesciunt in blanditiis. Qui est rerum sed. Laudantium qui nemo mollitia voluptatem repudiandae. Voluptas officia qui.\",\n    \"updateTime\" : \"2022-03-19T14:44:31.762853Z\",\n    \"type\" : \"IPV6\",\n    \"items\" : [ \"id3v37q8lg7pifv196tuf3el3rmizyof4psex97gd8zp7seeqci1qz33qmxafi0eyfqji844bylqv84wmq1jmzprbpzht360ldcnag31qvskgjzc4ar36l3q0kcv5cybzpiz4uyzx593oslq4ejdn0y80vtc3ejhil545mvymp3nssftbcei5a6\", \"3ci0orswfi24xwxq29u6561qibytui0pr45tur4y12buqyps6xfi3dgcjobvx3iqlq1u\", \"56p4xhwy9iarj9kt6gcbg1ujvhzxje16dcnq49pikrgtb7amxrg7qjlprd8tu97bh5qihun8tz8cqngxjbnhih83\", \"5kiebihrc6hhfekuenbu30kw7mtyxruytj40nmaa0xy\", \"ekwzoegjuxwpkp6xqna48gp1ba8g0esjm0nzaqt7w0enchj80vruphno1eel5ylirhbfrox3\" ],\n    \"capacity\" : 1480664980,\n    \"labels\" : { },\n    \"selfLink\" : \"pp0zdff3q0xi1y71alywej39yttx3rm9fgnqqf6t6uby583o82crtp9afo607iumrclixhcb568tp93onlbl6\"\n  }, {\n    \"createTime\" : \"2022-06-01T16:39:31.762951Z\",\n    \"name\" : \"Del Gerhold DVM\",\n    \"description\" : \"Sed ipsa impedit. Est neque fuga ab qui voluptas delectus minus. Incidunt et nisi est.\",\n    \"updateTime\" : \"2022-08-09T16:04:31.763052Z\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"items\" : [ \"btu6k2yuo4p37emotyeimiqqvsqpn1ou5m37kv88n3u88sii3zquohv69\", \"1bxth3gexetxt7m0fupu7egb7cpp2yg9zuuzh\", \"65svnchtwuo52m2aqeywxvlna00v8ged5m8xp33dinsujggpcgb2hlfx6wm2o8kbhx7k4tu40q5zrunw3p6yo6g29xi0lfazmeayogp6hdv\", \"a78lbks82f2\", \"fep8waxxnrl23yhdx22ecj55\" ],\n    \"capacity\" : 1036655374,\n    \"labels\" : { },\n    \"selfLink\" : \"gj10s3kq72z2t55pk9s3p1ib8caper0u8yfrh4snlojje8lbldxb5m93f6ad5fhu6p8g18bryssaqb7x6dkpdfjojs0on6sjvelar8zyf5tb\"\n  }, {\n    \"createTime\" : \"2022-07-08T17:59:31.763146Z\",\n    \"name\" : \"Carolyn Hudson DDS\",\n    \"description\" : \"Nemo molestiae id dolor sed tenetur officia. Dolorum iste quia unde. Provident eveniet perferendis aut architecto voluptas iure voluptatem.\",\n    \"updateTime\" : \"2022-08-11T17:45:31.763252Z\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"items\" : [ \"4egw841idm7d2yjl40dqwggzd6e\", \"akybzi\", \"a8kfvalsysxrjdiz6joxnqng8nxqm0wsdd9hsbojwsku27zxrbvu84py3hyjd54wwhznx39du6t22xnnpdxarji1uzog7cdlzdei7yjuac0cvumpqhnggjmtj8i0xlyxuub1lojyaw53qv37\", \"k7z8625mlheitlmlgu1vevg82koyqsf8blzdw26l100wx4fx1sdn8xl5j6jxufa751\", \"4o3boupsafl77hpw6lnvi7kioh5cck8jek30ge1kvkhjggy94qho7km5nhek5pczljo4jdxmhi8pt0ymhxun2zxtlyiantbm1epatx0kt1kwml4389halbt2nanuslcj5lo3fczx7wqysj\", \"o1m437thcezr8us2xpe096cjsm466\", \"uq18483n5qe54z63ic0iylx6s8mmqjqgtoq5ywwew6bknrk24fq5z1csnjzp8lk1j1twnl30bindesmlqavza853bozch7777xi748926tqv503duj1sui2fe\", \"9tnhx8rentx8s77ugmwmkah981929wdbkbephmyuu134ougb4y2oxer61ymb6t6tnj02jykt3rkefy9mfultgpqdbacsfxcq2bco9bcxx7cb3nemxp3iv8lmvbvqc74575ygpfvgi5sa2kim9zaph60hwgng68lbsgad\" ],\n    \"capacity\" : 1805051800,\n    \"labels\" : { },\n    \"selfLink\" : \"rezs7r5g9jrvmqmsn52p8yr4td9q1ffxacy04r5txxniqm5h3ae7u854map6zghgvyriolr6ctxhqyjnfdhudvorldekzn8vrj6m3xj4feiu71s4fqds1ufxd0on17159xq850iauflrn4524l8zqlyabyi3\"\n  } ],\n  \"nextPageToken\" : \"thuoekppdo84t2zyy8vh7xrp412hv2vfcxp1kka9uhv8xldzrqxqoizmwe5fecxn0atzs8awtcv5x0j30g3hly7r48pfrxjxu9qor8rckhumc4fadp152bi9qale5t6ff90pgrmfytszu9u9mt1vkz9yg4h0l066irolcnq867b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ddd04d6-7cab-4221-966a-465569b06e3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.763477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.list",
          "schema" : {
            "description" : "Response returned by the ListAddressGroups method.",
            "properties" : {
              "addressGroups" : {
                "description" : "List of AddressGroups resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AddressGroup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e20b00d1-f5e7-4e4f-a4f4-ababf283098e",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Rashad+Waters+Sr.:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e20b00d1-f5e7-4e4f-a4f4-ababf283098e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.762449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21d49980-3839-406b-9a7a-48767fb507c6",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Jacalyn+O%27Kon/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dorathy Paucek\",\n    \"error\" : {\n      \"code\" : 1824053740,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Asperiores molestiae aut quaerat. Natus voluptas optio provident sapiente accusantium qui. Eum fugiat dolorum qui quae vitae velit. Illum occaecati adipisci.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Eli Cruickshank\",\n    \"error\" : {\n      \"code\" : 322777616,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nam distinctio dolorum eum qui dignissimos. Libero distinctio est dolore illum. Dolorem mollitia et quia et. Voluptatem porro dicta cupiditate rerum sit tenetur. Voluptate voluptatem quia eaque ipsam \"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Laurence Cormier\",\n    \"error\" : {\n      \"code\" : 1802181145,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia deleniti sit nostrum veritatis sed ut ipsam. Quibusdam qui nostrum facere. Nemo expedita aliquid odio soluta ipsum. Quisquam dolorum consequatur neque aut unde voluptas consequuntur. Quo optio mo\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Freddy Crooks DVM\",\n    \"error\" : {\n      \"code\" : 1670882146,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Qui perferendis laudantium est id possimus. Ut saepe esse eum sint et omnis. Qui nihil quae. Officiis molestiae provident. Fugiat id vitae.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joshua Bogisich\",\n    \"error\" : {\n      \"code\" : 1831013886,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Voluptas dolores maxime voluptate quia omnis ut nulla. Eius omnis distinctio. Voluptate amet non.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Phylicia Block\",\n    \"error\" : {\n      \"code\" : 1828155319,\n      \"details\" : [ { } ],\n      \"message\" : \"Eaque praesentium inventore temporibus corrupti nisi. Quidem ipsa doloremque magni aspernatur et doloremque. Incidunt ut harum. Ut rerum impedit et quis et quis.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Claretha Lind\",\n    \"error\" : {\n      \"code\" : 755206589,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Illum ducimus unde consectetur sit repellat dolor ut. Nemo sit omnis cupiditate. Debitis et quos vel ut aliquid officiis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mike Witting\",\n    \"error\" : {\n      \"code\" : 1985328261,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aut itaque occaecati. Esse est recusandae nulla maxime. Qui est sint est itaque fugit explicabo. Blanditiis ducimus dolor architecto nemo expedita deleniti. Fugit accusamus iste laudantium tenetur nes\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"ccbwd2m3lfg2y9mc9lva5xlppoi9bf1wqilpqr44h74w6fd3p9c1x9q7yfab8zg7h5trbrkdm80nkyxmcchrdjqkc3ayx20std33ivmag76ltyz7ueth8ms6d300ywq1u2gk6mny1p3y032lvjmueei2ejao0kat8smegx3b74c5egn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21d49980-3839-406b-9a7a-48767fb507c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.762343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b312c808-1fa4-4a3e-8775-5b55d3d1ac34",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Augustine+Bailey/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"mg99wkug3tswoj7nnglu00pyebypn1dqtynuv1i44j58kfw7c4vztf0j2pf3755ayhxbgb8yh05c1k1ry33erkew0pqf\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Cleo Jakubowski\",\n    \"locationId\" : \"vgp6\",\n    \"name\" : \"Celia Gorczany\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miquel Barton\",\n    \"locationId\" : \"8gly\",\n    \"name\" : \"Tonisha Jast V\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Karin Legros\",\n    \"locationId\" : \"9203\",\n    \"name\" : \"Caterina Macejkovic\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Keven Mills\",\n    \"locationId\" : \"1i42\",\n    \"name\" : \"Regenia Daugherty\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b312c808-1fa4-4a3e-8775-5b55d3d1ac34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.761342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "28045ae6-73be-4d2d-b858-19a44bc22caf",
    "name" : "Updates the parameters of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Pat+Torphy+Sr.",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Asia Doyle PhD\",\n  \"error\" : {\n    \"code\" : 675457597,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"In accusamus asperiores laboriosam quaerat. Eligendi ab nesciunt maiores enim molestiae. Quas dolorem cupiditate rem quod nostrum voluptas.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28045ae6-73be-4d2d-b858-19a44bc22caf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.760538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5b466b8-7b84-4489-8ffb-ab3224f9c014",
    "name" : "Gets details of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Arturo+Witting",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-04-11T17:15:31.75944Z\",\n  \"mtlsPolicy\" : {\n    \"clientValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ltw0hs2mwpbespeyvdhti\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/325411\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"xdb715iu00i0c4im3wjrf48cqsr9fy4dgc80tkd2pu7n38v5zp7t4xy27axaqsnje68men4af8rgd5ln5dbn4ovvaez3lsalgjkw62ws9bxabi47odyrkkurosnb1478\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/669019\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"4ph4fhnk4ahki0a2g0ysu1vpn2j10qx7u6v6dvp3sipri8u1ou1g7d\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/577799\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"6afra62jkkgt9ne0t8d19r3tzmtkpya8qsxkp1s87hx64ndv1i7s6tblwj5\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/230758\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"tmefy5zg5cks62hv24n25glf4cvse2naro1webccwtjt6nbnbvad029660rqqu1gw9q15moj6cidm69nta6qszimt80882wv0sqjzeetg7firwfn462umbv3b6j2oa5hvyvltq4bzlw58jkbcje0d61inqvn4941hy3xa0kjhvhq24ucp7npu401x75whhpjmw\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/195558\"\n      }\n    } ]\n  },\n  \"serverCertificate\" : {\n    \"certificateProviderInstance\" : {\n      \"pluginInstance\" : \"i4yhxytktre7k6y76kqafon750pfku9is5des39oijk7zcc39kjd6jn9hg1g1uh12lus5dmlew5f93k56lg3esx6g6ph01xfr1oz8uafjlhid\"\n    },\n    \"grpcEndpoint\" : {\n      \"targetUri\" : \"https://web.example.mocklab.io/084393\"\n    }\n  },\n  \"name\" : \"Whitney Beier\",\n  \"allowOpen\" : false,\n  \"description\" : \"Non quam magni. Quam omnis ratione. Quas rerum fugiat id. Ad ut ut laudantium perferendis debitis.\",\n  \"updateTime\" : \"2022-09-12T17:33:31.760148Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5b466b8-7b84-4489-8ffb-ab3224f9c014",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.760305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.get",
          "schema" : {
            "description" : "ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource.",
            "properties" : {
              "allowOpen" : {
                "description" : " Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                "type" : "boolean"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Free-text description of the resource.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Set of label tags associated with the resource.",
                "type" : "object"
              },
              "mtlsPolicy" : {
                "$ref" : "#/components/schemas/MTLSPolicy"
              },
              "name" : {
                "description" : "Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`",
                "type" : "string"
              },
              "serverCertificate" : {
                "$ref" : "#/components/schemas/GoogleCloudNetworksecurityV1beta1CertificateProvider"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the resource was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2230cd0b-170e-45a2-8243-7ce7d2d1466d",
    "name" : "Deletes a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Hanh+Bergnaum",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Minh West\",\n  \"error\" : {\n    \"code\" : 2044535023,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Saepe rerum accusantium porro omnis. Quas quia est quos provident iure. Est quo consectetur corporis debitis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2230cd0b-170e-45a2-8243-7ce7d2d1466d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.759393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ab1c0681-bc21-4db8-8688-92403f0b9e93",
    "name" : "Removes items from an address group.",
    "request" : {
      "urlPath" : "/v1beta1/qpkveg3qww9fjwtdtviea91ugi2ccqi71unj0g9641i60gedb4l8ggh263wdzyj7ezau3b9ehcv17i9l261ia2973ckznq11vnk54o2imzwgwlvfybvavu57tbbgwm1z4gu3fhu:removeItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lance Macejkovic\",\n  \"error\" : {\n    \"code\" : 1356285943,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Est ipsam cumque molestias autem quo nostrum. Ducimus est iusto dolores est. Numquam quas est. Earum quis dolores minima.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab1c0681-bc21-4db8-8688-92403f0b9e93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.759167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.removeItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9cecc248-e6f3-4a68-b67d-010979ef259e",
    "name" : "Lists references of an address group.",
    "request" : {
      "urlPath" : "/v1beta1/caozmcp5j:listReferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroupReferences\" : [ {\n    \"firewallPolicy\" : \"6hs5hxj8siac84j3zxom8jdczrxxkugdxuxjxiwpn8huwopzyu91v1lc6mpcxsogihqr0eos3a4bch23nwkze8p7wnc8foogkvo54iue3zgjqlflabs5xoav4efluayq5sdxz02h04u2za7fne7rdlf0jy0v\",\n    \"rulePriority\" : 537357404\n  }, {\n    \"firewallPolicy\" : \"ez83k0fi6tlmgfll644lf24nrezzv7p9o1womqhrozbgzy65jtqel33qafzusdywgl6qpni5tol1q8pzj9cu8pgho9vy7kn7lvppy2rln90sq109umaqx76bsor199avgr9h88kfkkq667wgw260gufqvwo5t78cntbnhkhn3ybpnbhzefb2x1i4e\",\n    \"rulePriority\" : 678563246\n  }, {\n    \"firewallPolicy\" : \"40kubn4ha6y599na2e2zspz7ui6my1w55tnn3465x4ls7w6mtpdnn0frjodbnxegrwb72p6y2wu8th464cgdq07g6jtayjspo04437zqjrxsrqcgcvlha7u8ielor47if674isugvoupb8v2j8iymrqx3idtl881wxvbp9r02zmno3xj\",\n    \"rulePriority\" : 1364223888\n  }, {\n    \"firewallPolicy\" : \"pf0hnxnr3dls26flucskbmkejn369wi3wj4s6z6gxs15jeula6czn12cqek0gzc8hsa6hsdpzgdf0ulzbbh8x5yqopfbxht9zpf2g8ilmy8x6\",\n    \"rulePriority\" : 1359715348\n  }, {\n    \"firewallPolicy\" : \"az5anwv3agjjlprd15csgpp4o4t6uan7lw2n2zj31xnpsj6r4kuo6bmrbmydb78mljdvwx60fhje5fho\",\n    \"rulePriority\" : 60596773\n  }, {\n    \"firewallPolicy\" : \"bd2mbsxnsukp3dhj4hx4a2ljx1lrfdfgcuntce3jzcswm26qlqhn1nssmcyi9qcd2higygev5ojcp8ftxqxv24a4pqz7vs3cdfw7\",\n    \"rulePriority\" : 1465083628\n  } ],\n  \"nextPageToken\" : \"7jbh8mroymshqxvry4ugoxt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cecc248-e6f3-4a68-b67d-010979ef259e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.758957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.listReferences",
          "schema" : {
            "description" : "Response of the ListAddressGroupReferences method.",
            "properties" : {
              "addressGroupReferences" : {
                "description" : "A list of references that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01f88c8f-27bc-4397-9c37-eba81ac10f2d",
    "name" : "Clones items from one address group to another.",
    "request" : {
      "urlPath" : "/v1beta1/29fpdl1vcd74mnkuk81nuads37tmmxhustk9jm4rur22ymhna05gmyctz2lh7qhe7mn1byrrxv0rub0p2clvrm9kxlimid8b9iw79wfm47lp9ggkvsgyw31ojtope578vbkk2oo049d6f1yrfrpuhc8qfezerbtr52l:cloneItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Shirlee Jaskolski\",\n  \"error\" : {\n    \"code\" : 1189974839,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Saepe inventore alias et nulla odio. Aut architecto quis qui. Ex sunt eum est.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01f88c8f-27bc-4397-9c37-eba81ac10f2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.758708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.cloneItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "14c88dde-46e0-479e-9cc0-a50889870284",
    "name" : "Adds items to an address group.",
    "request" : {
      "urlPath" : "/v1beta1/am028se93s9ejghlj6sxo0isx1furebp9c4h610ijao7lf6z37kzxc8ulnp93xmwsphfvp9a18mfj70xetferie6t3mbgvb5g1ffziumgjh6xcyz0lphed3r9ygukwn59tdzumyldfym7yop4yq92vs1sruzy0hnu8p9lumvr7lla5zcz:addItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Willis Emard\",\n  \"error\" : {\n    \"code\" : 1167660480,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Quia distinctio dolore. Sint mollitia dolorem eaque qui fuga commodi. Dolorem soluta iusto qui vero. Ut laudantium soluta beatae tempore impedit ut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14c88dde-46e0-479e-9cc0-a50889870284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:31.758493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.addItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}