{
  "mappings" : [ {
    "id" : "f91ff27d-c6a4-4fac-8037-2b91067aff36",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/3vjqlw5was7l107n1wjy0yn4st9rxvflcrhl5t77sg0abjqvg5c7t2q6a6rbyoekf1fq0dwm87cflc5fflzlsqpadfbdvm5174wq317rvoeit86fec881dl69pr8qdextwlg20cos3si5bbfzazn7khko2:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"sx2s7wcaqc8hlkynncsu9z7l9tjeu9lh6h1vfnkc1moa520w6to74o5cqylqeclawvcuzjxcwgqk17fljqugxhxuo2fqz8cjckjkaty623ge53s0sh38j2f9o4vj71vmv9eukpfp598g6p63qshg6qln5ojz1yxxlx9qdeln7s4v3uiowlp2f9gd9zdqe\", \"ha4e3seuhu49qno68i19rs6mb3qr6jbjdge\", \"xao90cobo6dlecg24yonwed2w2qhlmdo5vy0zd9ehniocmjn517zhk9jjbhwlv0u0wnqmudfnunwgr5rnjb8b8y1pxdql2csrbs3paputfngtt0hn7cq0hlmh2e1gg7v12yb4ho6chz0rgomh7q9nglmfr632ckvfn4mwsawrqf52n854dha0on28prjzf3ng88p\", \"2ku4\", \"1q8qx08fga9d8p24u0rc18jd9xueggxnnmf6ibkuhhu3eb7dko53bmtczj4asjtn7qvh6xidd9phs8rfjikvuscd7fif53bmx2xact3916v2rpn0ixjiim3h0i9k19eseyd9ynqy00gh1te2un1yjabry4h\", \"9oyhdfkxzg4wf4zucajmx2hyte77bomb1myidbvrnnlwyb0r9r91ap0nyn2j41xgw93rgnc0ahst57sa2oatg7wsvee26tki4te8pfjzv0hnkg3gz1vzuizyu0ajyozqj2pcxj4ow3p5a2te4xj7wnivizm3cu87s1egsmub0nvwcp9bx0qgc6llii\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f91ff27d-c6a4-4fac-8037-2b91067aff36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.633032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7877603a-0989-4d6a-8d88-41ab032b14a5",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/3ol6pm54e9wr6q12hpek9yfainbaz3izzck9km22hcfmgsq046nlbjgea8yki6h0lwsaqcvlokzwl18hsjn3c7lzcs1jtimu7ue1wn3bqa2hkca59y3wx6lk0hljttu2kksqg8zoxyfdtht1ysle5omlixowt9dnj:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"38xfssveadbj2tca3\",\n      \"description\" : \"Corporis delectus explicabo voluptatem animi reprehenderit recusandae officiis. Facilis aspernatur qui culpa. Quidem eos blanditiis quibusdam qui.\",\n      \"location\" : \"ao9oezc35frf98ntps9nk598qwuc2bdwc48up8u2o\",\n      \"title\" : \"Non est sed non amet.\"\n    },\n    \"role\" : \"p2ro9lhlowaah62q8s39j95dzvjni9pz04j605uplwyum3csg7z92wucjx1l5qagxen18dxfx6n0ceq1vs9ssmt6g27rfrlxgrjpslw2og60g6b87b82ouwjayvq1\",\n    \"members\" : [ \"mokv47ubbyrzqevmijmpfzre6vcsf3uembqz21ofm7wekibd6lsezflw0wkgxrswo9xy5ubin9og3ywkrtzkqq\", \"nlrycfh7wch7fy4ad6gkxsgkfvegwmsd1irukt37ipvgml05vwa16mzbjh16333gnzkanabu6uv0d9rxjk339j7vrurdo7852nlrijv0n3h59qb\", \"a3spw694e1f9n0q4eannw5h6f4u9dqwl3w2\", \"hyix0gztn2tvj9y1mo55m3evhnkaqrizuyoygsaaem3gs3lss198td0d6jngbt8h9oh0jde2dvx2a36\", \"o0k3lvufsvb0y3623jfgur2ne8igmgmrspzv4sy5wc68ret4hems6viq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"501gp3k7xq5wcon\",\n      \"description\" : \"Adipisci molestiae eos asperiores omnis. Tenetur eligendi blanditiis modi voluptate omnis. Omnis delectus odit corporis excepturi. Ut quibusdam harum libero non hic.\",\n      \"location\" : \"qyzq69lgefdk2f8lfmc3h8bvdgyvzhgico6p4o2txknisfox8fnlssiw8gq8dztmndqvlgnu55vrdzil2zykrb\",\n      \"title\" : \"Aut eum at natus dolorem numquam vel.\"\n    },\n    \"role\" : \"1shgee0mmana5010cehoar\",\n    \"members\" : [ \"ihtlesopw2tg0rsx3az118h63392pa1k0seryq18bntncbs578bu1tpy4gg2ygkonsinr8hiftr0uom3hof2pgh3xtseepsfuas8m5fc16t47xttrgchvdmz2b5qj8t6jg4ft6fiyxq61facr\", \"v6udleebl3v6139z5kk7qbzs8tnro83fsh8xam7rjrkzpn4s7hzkh0zb058jjch19a5839rpr58v3ke8riva130hkpgdgat4mrdlgcz4\", \"gagrvdtsue5i1qepl08g7ox8en8\", \"sf0eocfk0mu27i678yklc2w7l9n8q\", \"b0000j35nr5fa6j6eta\", \"muwkup0g445gv5bym7idr1y6224e9571oai5akevyd4k4zbgolsy27z0hvvhti3cgagnwi3y37va1i43rpjudfq8hws40w22evtey38407nfqu6m680tqbfdzk4u4lg7ndi2moel0hbxvtd9tp2v7sun29m9uc5qy7zn13\", \"5p5ddehkzmbzsrvrn9ky80we55fubla39xiboj3ij2i\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lrs06ijzrf5ufaa3anrqtz5sfndwwvbkfaaxtsf4t2epq5gyi1qy9l2850ui\",\n      \"description\" : \"A officia voluptas. Odit animi animi occaecati sit eum. Quidem nulla nihil. Cupiditate at est. Natus enim iure voluptate distinctio doloremque modi.\",\n      \"location\" : \"juvn0og0vdqv5ks6i1j0gtjdzaqfpuzx85jxzfmxrgtnai6hm1034vvkrvgxq81u3rjfidlfwrhvf9t1saal6y7ec9hihgs7mv5q8mi5kac9x74z2ryp1eim0qk6ifz3ebbgtfho2d7wjehveiqf\",\n      \"title\" : \"Libero asperiores temporibus illum.\"\n    },\n    \"role\" : \"8eefzpxx86c2ugn3dfsvk467becijjeocxr2gtl0nmavvw70dz47tubxc8yg0p942vhnvisr0ndgltn9kw2no1yxtcww3mnzghkzmibs2oj4mi4emnj0g3qu9feik\",\n    \"members\" : [ \"by8yi9qt5v4z37jj6bicahcl74eurmmjmq3jkdomuifnxkqywxsuywybffm20wiahmmv3o0ivmlte0otk1268w06epm2o7binqzs\", \"rpmhxtdt9vcrcstdbkv4p34wmjr9o07ob1ma5do17zwemq9652bpn0l4rwk39xacxqjrml1bchei7p89or73if3geps6za1k9ki4rsnr8yrizkqc2klj17o9dfmtjxi2bwu8xv4xz9ewzla6lbf9dq8e9pf6gc7xjhzgrbiaen3\", \"577q9getrh4rryeeijmn8d2rfo8flmvf6yrzev56qwr1rpb9p8zh3d52jf0cf\", \"91hp\", \"hq2gom6kv8yee0bge3xnzqlp58qqxan7qc6ae6f6zlkk8klglv3uebi45cp4a2f0wnwuabpjs8x0hhcrjaigdp6rczlz8everbxg69sib85yed6trfmim7tnrhzi9igt2bsb8oxrnm9v02umq6q3nnci\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"oumo1fmn8rj4jtw3uvygc2fivimv63m8z0jddzt85e7hpy0puaigaf0yya61u6r1ztnsi61pricsxdhhhmrje07s0fkja649exu0vus\",\n      \"description\" : \"Quia repellat excepturi voluptatem dolorem nemo harum. Debitis eum suscipit omnis perspiciatis voluptatibus veritatis. Sunt tenetur non quis natus ut. Minus et dicta autem. Et illo omnis est error con\",\n      \"location\" : \"lqqwks8ybsj2cx9ntumn6c5t07htb33bjun8oo7uokre2icdsbwg6uy6673hluw3sk0vlmnz89tf1f4tchc3w4hymtpb1d\",\n      \"title\" : \"Voluptas ullam incidunt et quae modi amet non.\"\n    },\n    \"role\" : \"ztmmj2mxivkxo7oe8wive1imjyjfvcw2ffiyiekuxxuas0t4h36dz1mc8kxcw1ee6xiqy3u81bgdwp7v0wvmzqb7so1jteodimpdrboi6irznwd3hmpzae2k0zz62ton22vx0dh4xx6gfyg4wl03uev82kv9awf4lal7e87i8p1f\",\n    \"members\" : [ \"ekhelmw0qoru4lrigdk1rrbhzri6n137ne6kfz9yk3zixqcqpgbmy6el614dimz843pktlktkhsv3t9tobyc0dmw05jddbcmtz\", \"5hfm0yo9jfpyumf4csq3d4k8cpydc9rz0wrxnz77anbvt2k42l8wedf50ntkw6mbdr5yghubdhi2kpywwwpundfqzt7910f0hof1id4aoog5gjsfrj6jrs48\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"d974gy0m2s250jz0rwfiwk7hh9bm2saj9hpjweo08wkn8ku34ldogerl9b55uiyf9cjsdykmwygb92u9zatpud16gi8c9yp38oea9aqg77pj72ln76v26nzq5a9xfd0iyylrpm5v7mc9la2chjcf7\",\n      \"description\" : \"Consectetur quisquam est voluptate cum voluptate. Consequatur nam rem quam nesciunt. Impedit fugit quod laudantium. Tempore impedit quibusdam.\",\n      \"location\" : \"7xfmzg5dmdmtfzen954xh2a1zwg0yfjbaod10t3pdv7qnvnxq\",\n      \"title\" : \"Et aut explicabo.\"\n    },\n    \"role\" : \"h1nlu4s6nn924e0rr\",\n    \"members\" : [ \"pmu3pn7gb8s72u9cqpfm88bu7yol0f45pxjiingn8fohgt0pcrnxlgzv5da27u1fa0sl2fbz3fyhddga9rfcy6we6j9848tovqm62sz9ws5ui9piohxox5y9fgbof9ned41fp0p76qjn07l4to25hfiik79u8d7fwtyev8coi\", \"503vs3ba604ytsh3no80hgygv2si8kx0y3ba1cc13tfidlbp638v54gou5myk1bvyhti8tthxzkbzqex358kcjdenu3mt40ypmguceyi39bud43oa3n8rmbrviy5gio0wbh6f6bga7i\", \"razldae54delifn89duypssb3op220kfpc5fl9m9x475wht8wfifhp3ystqq2t7r5330jepkqn5lguztj50lwovvuvvsbc9\", \"1x5kzu5n25rn8uev4g4a5p1k493dp7rl1a416av70db49xbv5cevovfv8hpyz0mpaaxm59ai0tobmsil8opx4xxt0\", \"c8dj7ydve1wef212reifz3oztw1tylf2mwcersx4jksh9miqf6pqydnarfckmxy7hxs1mvgcqo60baz65cv1iq7hkdiooz3qcts3kma8a9ajyoguufjmj8lasx\", \"azyhvuum74p2hlsj3rmnjnqd0jpsbhpa84lu2awnnn267tvf59rfwu3w8l92jdyrvxdvys92hx9qzbsxy\", \"5a47tqxzquzg71n\", \"pzecynzj43ikufgzkw2gq2wgm20hls2hjilktwhz57pa1pl5qyocgzjgbkpywcwayxfcodmoz9n9e8taicmpt1wjnfh\" ]\n  } ],\n  \"etag\" : \"labore\",\n  \"version\" : 311064407,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"knvfupej60eak1oukx3wp8ip6nuy0x1kcw14lwol5uioi7t5w49foediwboi8np5xqf20y11wlzf969yxxd1xiwuniq2wtz7hv1t4m5ex12sufd1d06ngdc238ylbajdaw7msp7hl2prt15r506zeypd4wu5ieok2pm7hc75sv24wk1387kempjciw\", \"6w874t2uaufavk6omt1sgx3z4uj18ew5mce0j62bh1b2bm53gyrqpyezdlsxxevql2xpsjt3vwp4hmtqwf5c4he8h9ppwr347rrbtu3btjfbm789x0j3l7euf7o15z2dw6r6ypg575p8pvjc3auyfds23ixspjecnvddbxj7\", \"rwp7kvszuk77y793lbzquzbsgpids2dhbjzcgg0mgsf3jg4m4tltjhjzmuxh5bju2cxxup7praz972temuo26ia3k341fg4p36ar4ymedn0og24tubwi\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"tm5blbum4z8gk0wwfv8ic3sojk4jzjxplqbrfau7l\", \"4rhed1bo3u7esnz7r4cu3pqf3zsg6oicn3s0fvwjs2tje5rb5bigyzapv42jl5idmqftoq94tdgxgmjytb3u21xjtofoom57boiqw373phnevp2rhoyin2ng9p2bwlzxvph6stt86hgoavukaqenmr69bt5pvwy1mp5t3i0f6tavmsbjg9x\", \"9jvf2fvgx1p0szqma2awjnelbare0l8r4eml8q8eux35tik76nejthjjm4qvemv\", \"5gy5pngojtm49sdqvd0ynyu7hojkp7izq4i9r2dr1wesgvnzvrfvuojzb0wkqg\", \"1l8n1bh1kq0ktnup2l2c0ii17tih5ij2algakakscbmb5lakkzdsyor03cd7z7nlufkl4odns6ztoh80bmmsee0qow6lk8w4t3qlqfb04r881l1bqs3ea8\", \"za03uertg9v8mqfanhszxmsbc7hn98bc5rn3w78gt2he\", \"od3e3llbu2ymh95hnhm5cumipqjm0ha9sd5aqckl56jkt2ex2stvx1y5n8rti20gehnjg9jiocyhkoj5tzis62hpfbxv5aq6ra41qmhue38ro2xlsgl4octv84ly9zaed85kde8enkkz3ox\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"3ovj3k8htk2skov20zqn1y4womog\" ]\n    } ],\n    \"service\" : \"8pi\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ythgvtc9uf7ie29buyqbfy41szh8up1u8wcborm9p978eguw7vy7m1s98cg0nxet1hohnso48mljs7vyppg9p5gse7mr86d4hs1njowjazcrcpl\", \"m72famknio5zxnd5h5pu73etpx7cw0xabshlo5lw8ehl2lsqh6blcz1nc1a9gprm4qu2se4rlsrg2a7upxha0felvr6a5v84rji0ymblg71ndmn1g9cdd3sjrw75qvv2jbtpx0p5tnn3yu2cy3rusf7ee3e4hr86c3iav8esw3x9fs9v3\", \"v10l95wxf0wqu63afhqjgpsbbjuh8h9mv8t2wf2lfg2f4pfkj5wgekzv7x5517aesl50dovu0ew6lomjafe9ehntf4y4fhc5d3ik\", \"ih034hxh1928bhjxom0k2e5bhctfa0fb278rdk0cr4r15csin5ympln1whnggk5bhtl47hq94kjqwy123jb870v3sy1dv42p7sv0zfcxs\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"b5j0jnfhl4muaiph99kesrm8steb2ffia4mnyy\", \"hepmgr2u6w\", \"0vagtcdgaiqhwtf0se0nbor3ihx8dl88z26o9vuo9byqjjw3iovaw0fun3izuhl4dz6w5o77r3g82b\", \"fj2j2u9ka2ili88ro9734t19l2jjov8nx6qe1g4a6ft\", \"o8bv7yvisoed0mdlqkrm\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"3gygemaucq8cl4vlankmi525rzexitmtfnb59f0yqkdr6smo3dukuipns4yxw54j1i3gg4b54tq59xs3rh1pk4ebbjsqdv68hndh3dji87imiq7y8lgbyg1b7lflqsnirjqg79s28txrl4octyrdyu8cwc3dr41\", \"xhd6bwlje3rf7xzjwh3swrva5irq6z227gsd1me23aauf6bfuliu6o6ezpnjmuhm3yd0d8ks298fhxhfsegkx990tlehfigcsvytrx0egs7fqz6g136tke7z4ribaufhmakbf6d0dq0ovjkqeih5vhosvjp99veh6df6ihrqcxm7mqqhfa\", \"pu72g1rrlkhur7or9t72l8fiujjxnkywvxo3qumdi29qkwqa5pfk47ivi4ip11zt7e0bf9xfe3wef6gbepb6z9qojqzqwi7bdib\", \"jtofwfdlmzsf5h8awlc1x08pjbc1ixwl8t7keuerlutlrpq8tnmqu94ebf1p3ymejt96qn7gn33pwdg8vnpeowu4xekahi6ls6fcm7zl5hx34l8j\", \"z8sc2or7r5tn3beqggip4sy11iuwmvmokusxbc3h4qjujqz7mz8roqvzoimf2zxt4j1pj9ith855r0p890ofdn2ih91os3gabvpdmk37mdh58cp7wxhs710cfebfwxy0wrpgxknb7yu993rl00pqfepejx0ln680cypr\", \"4ueman3lylknlgl6s\", \"h56q9z2uesue75e88m7m9av06lixjmw6xbf7wilqg8yunlsuxu1kb7v9eoo9nv4rk97ba3k9zb0wrs0zrmxzukmqn0igdh1x9tcnjp8pgmet0m6nlo7oq8cjegydtc8oeddy71cgy65fxi9icv4u0oozglppgrwwdwls7udwfmydu1xosrmy24a4qo\", \"b1pgnt9usdu5vt17oareh6wvwletzm0a3im741ipccxxdc4k6u3zqy34y5c1tqmj7iefbmdgny461bm629ncv4vud1c6guu3kiz1bmj7rd1rbz0ph3bg8n0ao553urrmy7bgxmvig3i2ng2\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mgp63cw45je06jun\", \"6ebcb2lsvpadkdvc28zwku758ap314th6mg0rxln0zr46ngu3efm6t488guz\", \"cuz6wz2lzqz5m0z2vesq7bpij8tcnr5orqqbmaalp8iy37h6p4sbm88wkcirljij6x9pqbmlkzu2iuziet5n7hi4lb\", \"1xo6l2gerzyd1oxyrtc7pb5cj4jfw0g4g5zdwaxf1cznd9033fcpnanfla5m3342qex2e1t5dgfw1la6bdhftb75lt9ysnrn9yy16al0p3k84tafj\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"zev2gz24x0toezuuj6v1pmhy1g9owfum1bi5jvi1qz5j589bmgznf8psa5pj83w9qcc4sk4krfz\", \"m0waf0o5yt4h47t2mew1v6sr7rzqbb02b18up847bszy6ytxalcm11q0iyw4ky\", \"quy643a86mxfrujyjxg6mraq9u1g3h2he7ds8dc\", \"g00q048y2r9voanw0u65g3ahq3rj524de5f8fbsjtszeftxyrdbkkoh0etqmtlpcj7l5iezlpkkl2tyrnrolzmlvuvryx7k7z6ai9hhdxl94ra4bp85a7uvhz9lhsrakc5ahknn7egq0hqrd08896vqjo62qiymtb60sfs8u71z4zkh6lr7pf5ul3ooa2vc\", \"5tcnlf7ihwf5zcbspvsr0hj9fw2\", \"v9ehus8ng1twkgkotgt5b54ycxnzuhtdesyytg79c0undinbeeamed8xuxyl72x05astupdgta2aw759tpm5kw5a4jg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"vpy8miotblf1qw7te071pyy6br1czastwi3o7brwbqhn2oz0es1sw5ozwcrn78u1j3k8hkca1vonnxn91f5ja6x6tv0h7x9d3sdd0yrpqxsp18ixcm8kyl4pvlc4lmi6ikm364ahr8phprtn3g50k3fcnef2olcnqkzaiu7rijocjo88a0k31nvebxuhtpw9xkhzh\", \"jxjbxapi6285ytabgniwg5fuvpcxec8u22yk0qtdz3lpbudpd1ibnhy4zufezsr1bezmuucswbmzxlh2coygn42najne7gny8gr804mh93a7se80kfe8se34b\", \"evphfez6cfi4rjkz1zcgqv8du1b5c6x1x2ayqf072vv0j4v5cm30lvkqb3o4ei2ntj8reglcbf5c94ecj54ij9lghugrt41o4majzf4y0mc5lxhk7tca8j8tda4j4wmwmz1fslnngdp2v5597p7nntw0zkf325xj9ypfzdthor8h3lpjrtw\", \"wxgu2547kdj88ke6dybxqmf8vpb2epipbzv3tyygllljf8hjcuo1lnhdpxjf2dklzeuva5pudv054owipsjy1hmx3p2t6qqd8lm9dvl9zvkz0sajmpsbkkew9d90u609ysmy582d3jh9azmra43pis9i8w6tf761d8i\", \"g8q6ldbkiz9b2jmjazzubc2zcfp4967dpeidkev1m37s5wel5a6lz1xgwhs7g7\", \"qe5uf4ve9nprbsh\", \"rkytw67yd5ojc3wz5xtn5uktectjnp0c\" ]\n    } ],\n    \"service\" : \"8t1fdzfu6rv1tjnblgf1llpko\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"hez1bprbar1afjdgmvfqpvutuml4bwmbjhlnordtc76l59njrpac\", \"39bqda8w5mx6xuemc2x8wnakljtir1adqbfipg4z4j4oj3kukx7r8s2jk9lcb5xygow\", \"6zr5303zccgi38fbh3q5vro370u5toim6rp0oganov2sxbpzecnk892yav0uau5edqhru602ztarhlycct60006jisavy2itaf92knuyqysynoz6t7ktusey4vcljslzx6qs4rmtcbntfql9j19h89sz0uurrzik7w8p5eu82i45to6hajxy0ufecbba08dozvui\", \"1tltbzqsozsz8r0bunia9in2qs91w1h2g5dwfotnnah7x7ulah71renugiymea0iaelmayd91f77u24kdmnl8vpnnbtxv80s85gx9mku1vie48cmgnfirfy2t\", \"0k6ogysn0yjgqo95jl2j09ecwvthtsh0ufupqiil86tfao6llpkyz02ggvauf0ipxljko8ikldl906vo9eue91us80z8l4nnwqqd2mn5sdwggqfhsnvnleqnyug8f9eprtiyaa3rkstjhk5gth89lq2t5r6id\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"e2p5dcxxvfvkt1hjfpp3wz019iy4l9ku8gm\", \"wt7rjl1qyfevllbr8a92tyae54biyxlcbpzxwkhk68akb7t8ndbmma69i15d1lzb8ynpy7yb8e8t0w4j5h\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ned7cger4vty7cioc99zq3sl8qhzw5dgt2lv61n1fhx7kn4z5g0t4hmpzmlo5oqpo8gv1ybdnq1tvz9iae18liuu16ncvay7f0crxrwwtnqks0ywd4saidp00vkjk0qzz\", \"sqvlweowi8rh7g6k63y77dl3h1odefv92j3q45xytd9ibbmn3rpc845snwavciz57bmr8dqakac6457p9wu533ctksz3w\", \"txcnm1kdi4kmn89pr3rlbmqasn4glj1z1xz822orsmmq4pq9l15c40b005ap4m7yih162m3evlhtadrvdowv32x4ftmz730wegqeqjqc38k3ff8unwhyyfyu5klm2tgkbbz4r5lzxzrvlpf6nu24nk8yytuxkbecrpjc9mgizfei8xezxhymy68l6h9p9ur3omu5zhm\", \"hantguhq0przr4mj1eiqh3fuopa5wly1s3u3o40d5t7vno60nwy6onbxeg20rnt3xo8l87c6lanldy17pd6zuyc302jhkxbggpfawjhmb2irvmofqg1i60cv070540psdnc0t0x7kew23058j617\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xdfkxxgj42lab2rt8po8dplw3pi9zvmt4lug9tpn7if4q7zcpo60znifugkw02b39aqa0s5qcxbha28qm6m84jedmszz\", \"oa675uhcn0nirlrib22vze22oqojws8201al8qg\", \"euebjdwazqnfjxtbl8ju38cao2renfiq1rj8ehz9v89qovhny1jt\", \"yd3wnxt45qv2owe738m90jye\", \"hd46pmvy643geimdp5jm0pw39u308op0umcl7lr3iogccmxl5g0idhm1vgbl145yzsn2da5bsupz4w0tdq6yc0tkyb\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"82atfbltecv96iv7h6az3hz9ycui7kqiov9var9biw4gkak8nx9tm98blejpj4nz3\", \"54s5rfnoi2uqhb34es4dib5yccyu5yn9tcqsbdfs644xsew1c3fx\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"mg3129ffut6hxg3vutj9ibp58ncvpxjufb4qe84m50k08xwb26gdu40tvj2so3r9b4bqefq\", \"kjhn7vj7s4ds0zt573pit507hkttdddy9xj8idrtxap6pviaakx2jlasbc71ywxxf21x6647d0mm02ev3zve5p3zgu1hz8yhg4x3derrb0xfvl9hlgpfg2o6gcfoeekspitpa5beat35c7yyqkyb6bgiqqtzt2uopw346ah414mle5qf8y1d\", \"9o9me\", \"lkmn2q8my2q8e16r9hiwmtoh25g4q4r4klhj0vg5b78c8k8pqyjv6swvh304ggxlk1h9525bifs2yqctef35b3jzluwpjdwgu9qk3e8h47mfenugalem8xy4uk06um7p9ffogbnq8fxxaivhy0\", \"b6xfyd0kgpvg7wa7bz2ia1zfijowfutgl4h2xgz84i0ztwva4pv9x365iyvptjmbmy5hx2vc1sxsowpi782v2tr8ybv3i9qm0nsj5mi8gy6ghencksyce3dmkba2os9fywumubh\" ]\n    } ],\n    \"service\" : \"1ctsxwxmokt3nmdk7gqe6m4wk5t8t0shblxeshw631x3karlzciipfwcimjfaabwmwe3knmfspdrr0gdawx2fg7ru2xh\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"qez2g86c23f5lgqbnt1gh71ku980ss5xyoaucrg027kqmk8uxy0\", \"zao1bjoatm9cjwl61491v8kyxnqpt\", \"0kzdjgjy9czkzm3vhut\", \"ueil8tw06d1srxexurdmfafn5pudsqfjy3o61e6p3wdeb810w5thc13hru0y2ei4nogonj5hffh7srtbyc6ocdacaw3s3dcb7byp9vcwiy83ejfqox3w66j0vgnzgrvfs67hkjt510jabvztyitsn6cgort0t7pto3n\", \"srj6mwgnwvkytydb87zwjejety9nvhnckt3uymeopygvvt0hbn9044juuzfgvu94398cellwv1ysy9yo001hfg50201yeuvf2mtkhkptxqlgui20ek81g7rx7u6ocdldoyja8byjsuxq35b6t36\", \"jnsqb6i07fi31y560wsfphxwgxbw1msre3mekp2qyf1fpz6waclyarq7rf5qdxv0487paqeilpwrit7i93n61y991hmt42znmnbco0p710f7ozkqud2kmq9rc7xzf6uiby9l1o7uiea0c6u05mxa5wqw7t9nk5sh0u2qvcsr79l0khwm5mpmnvdxc\", \"gyayrdc24ui5aokohhg93am9zew6gn6qa17hglkvyatx93dipfp0wny1i6mbhbiyuxqh5npavobc2slbni41jfu7jbu0q0qft6sp8jflo8p0h9qdp33123stt4bk8qjtrh1e84\", \"hffwevfxz4vf5r2q11\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"y3gx9isyf2bqbdarvcaf8gyfdm8azxh12oangwgkfvg6h35puua9zbjbpnkpwm\", \"1odaob0953f0sq1nxuh5d8iui7s6mvqhs20pvvlz1u7rwn878f\", \"2cass8y15a57ghrr3wlbhxu1adn2qw0pj55nhbf0qas43dyjm6vmox5qvmfsddkw54lg04t1nyz8c\", \"16m03ik0cbh5nlb\" ]\n    } ],\n    \"service\" : \"bk1iljo95yg4ue34r7m7rkm33r3lucxfgrkrckw\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mwo21af0cx6v8wlymd20mfgkkpjad8jo2phxpwp1ytxzatyfqs2veijskpsjg2ay3kx5yaplxhglw5h9c9scfjxqfi7a2vqzk3slpuq7qhzb2mjmyq6wmdjzi6j42pnf7c758aphkdmrx0czecqdes0zqrma1q1r2st5716rp0qb91fq6j28gglt5loyyxry7bxl\", \"pu1qfobp5ntz8jhy2oo5ukwmw8gzb9ie2dd7yvtaygzfysizatwov3jk\", \"bi8f7mt5u36ig1d3uggn8vz8tqrdc80457k51gypi829nmjol8jgs3i956m\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9wjq4kw1ji74jyhnkcj0w4gnm3i7nsjyu7d5zlsr59gltner2kv5kybsa69voowzyyjchmvb4ytpcl7xesjjqq3wdqpuvszkurba4u1xwoue4zgi3uc6rjkoq5reph0qqo3zrpmospyrx1meeb7ylm7zyobhul34l2x0xsvthoy9skwwzsh31eeb079t2w1705578um\", \"l0oi4ger\", \"ufxnci3w6w1je4\", \"l4mq7hdu35nq9uxtgcpg0izfe76i6lv8kzv0d73kh5mnixywp0r50idyk65isz7kvyr4wpnacft8evuv7brjbc375w29yl4suxrs00cbvplt89tv6jrei5hmb8xmdue6vk2k3wb13xprtev0ieue1cb\", \"mb3ld92brh8uys6gyvvg1ufvw1jcvub2uq8pkmdcamxmxwkw4qknt1mfj76njtsyb6hvzo2dv501\", \"9hx04hi0ttufbwbqyesmgcydp7373y45b0gf5tt6ul1dl6ppf2bt4ovsk1itu1yw83hvg2v2bpr1ixkrxs2as2phdd0369zkdd3f9ymq9xoippkedvxu3ai5wz80zh341iy80e9rvubc0e1rn8vdb78tm7gt4suo\", \"xgeemb8ya7apsi8hr3lb1mvrkngzkzdj89bjjyx6jg5coayvv1ba7ubdr91aquceyan8rg28kjw3d1i3tj6x7ctoz2zefj59o5d0k6qr10ry3hla9jxi1v42zvz0jec1ysqbow91gbtt3tt8hq5h9j53x8l9uchlb0ul9k4vqfbgfux0cs6c\", \"jv3qnqqwwln772aqkhyawtwjzzdzzzr0lykpe\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"qc7gcbui0sovdwzyrrqetdcoa1c9kuzrij1gwu59qhbe21kxjxw9ffd4t24po1d287lehlo87gtsek5hfen4d9fjxlant0qxva8bx5ecbrwht46ozn47g4q5tgz6feqwkb6q0949lw7ejqp8f9hr2b76nplmfwcvjf80869but1ztt72mbrcefu2x7xbke0l8g8knw2\", \"xr95infaxw6jbj7pt8pw48lshxcpca1co95agcsbm0ivllz7eu2c3s4ljbtmb5gsn87x9r3dixx7e9rmzeennfwin4rx4tg07n32d404iej6461f48ufk70gwjio32i3fhhxl4b06pc7l53u2kqeakc6fy5h0lpv834qbih49g7wr4s79eu2y14qbvyj\", \"ogreauupbb59v3s6a0mq64gv9jtcwgphjqnye4ath2\", \"gn8v3lpk1mqx96yflts6ds9rsj\" ]\n    } ],\n    \"service\" : \"33ixjb4sjob2nwoem5x175obpjdtg8oxwo5ny8gsxx1l66ktgm7sylwtpn2cpwhdgbawmc6uf8qc9t74avs9q0cspvs13vrvqfghitxy8elcsds5wg4fy0cnrj1lfl5qt0fac62ks9ipqy1qe7n7vu8paon3ltgyvvs28ylhmgleczsi\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7877603a-0989-4d6a-8d88-41ab032b14a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.632915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dff8f6bd-8053-4532-938a-2978bc2bed99",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/bko4s8i2vyld7uujotty67ucrukwd6o0zxvjcwxs9f6d8yvc9t25:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"afvtg7wwzbz15dyc2x75vpj91ga8btwus5c4lwwmnhqayoafbl1lgx63lkfz2qvawj3iirsoiw4vg1sxnvej2j7vnjes4w9l22g8j20v78gacs0rrcsyj5vh1q6pl63c9xfqovk23qgpsikf33xnad1is5moeog9mtsfqc\",\n      \"description\" : \"Autem et vitae. Nihil cum nam dolores porro exercitationem inventore quos. Sed rem cum eaque alias voluptatum.\",\n      \"location\" : \"37a5c9ngbcmgyha4tdonw055tri8k9j77ypinoj4uys2tia56uukqmgkgasde0z6au40qqifsejzgv7fbhuce65gpkcu\",\n      \"title\" : \"At repudiandae eum dolores eum et et.\"\n    },\n    \"role\" : \"3r6nwjxv1i3i43nq5rjruah6y6oxh3ocp1z52jnhyipov24rjjs5fo3fdthy0w439kk56pxfwrn465uxu1eq8wmuyox2kb09jbct2vvc4luhtgxk5qizfg8rj34aagr1kn8mw7p5kihp38128ybeqacx62dmm7\",\n    \"members\" : [ \"fzz73z690ktaizkd6nv83jv9u0q0wk9eu2\", \"ifu6hm2nn9shkp95mr8xvkxfh087am08hx8ralnhjpwvjiz7fwv0xccu0y9t7qz6iv22yrlmaeoeia1xg4sm3ierk8dvhw\", \"kqx6w2y2frehafsi84w2tgg2us6novvbf7yd1rs5tua41jiojz09fvsbgysji7jl78yoihwyv8\", \"manji6g7qqr2xn9c\", \"pix4ctes78iclhxbhpt4\", \"gyuoxyyagrv4ruuy85reynbdi5mj5suzpj0claujnthbtu1btq00a32pbrzwnt2v19d8jihvrw16rtf0edf7ul\", \"t480my6120\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"u4o521q618pq539x7akfsix0yqw0ec3wry3w8kfei7v4z\",\n      \"description\" : \"Debitis dolorem consequatur. Ad nam blanditiis. Id et est unde facilis optio consequatur.\",\n      \"location\" : \"bvvbqi9k764nis8ref66eub697o\",\n      \"title\" : \"Dolorum minima quasi aliquam atque nam quaerat doloremque.\"\n    },\n    \"role\" : \"9tsrtrdhpkuumekk3yp9vb28p7sx4ab5our552myfzc5vs7tye2yogkql21zg0a4gef5sr6laeyn8beuzrci967gjm9it1yzbp2qo7lbhthwza06ukh67ai384sug3vcq2tazm27hrl\",\n    \"members\" : [ \"a983glpat1r4flz4p09dovriqrl4e6j1tqgvdwc70cgkqm1ah1fjyglkslk3bu0m7fasg378g31ybtt6jneoneu9qe3piscu9j169q12cb8x08ygiu7fsmkut5v2x2nnfbu0zs95oqmqb4hsye1tdcdpvbr4ptpbjxhv\", \"tysybkp1bd63xg5zj337kxe46acnwsbx8o164h1zc59lg8byjkz3uvb85kyk81mkjh1kcy40ttve3b1uktba6kokxw5x36w5k7bt0wpddxgo673pebsogwfefg15t7z8wpvkkbhhm4x8ni51245kf769z3ba5r018cmb731krekx3qat\", \"7ebzjfqkvotl5eryp11ylyd7uwkk7fax16qpse8se4spac7rphknp1lophhz\", \"oo51wqzv2a5wiobqsif57df5bsqxjjrcsiuabg6\", \"fzt4m91j6l3f9hs9m1a0edm9vrpf3bwri9qlp7ql343c69zavrj106lhqc9k7la8a85ke8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"vwlgbftbybrkcyvij4mib3zzr4p9im537igaj3rrcg74kgcd8il6315pz0p6eoyuma8hboa8z7d4x7apb8j6h6heprl0tdro9jxbr55hewc6ejjyydbyo\",\n      \"description\" : \"Sunt quis est ea quia rem ullam. Quia reiciendis ut aliquam. Nam deleniti et et consequatur. Ipsum cumque suscipit. Dicta ut ipsum nulla non placeat.\",\n      \"location\" : \"nw3joacr6ena3i26d066d99rj5zv4vq5kis4uy3cfcwvsktxp5k27oq91nbiwltawqgjroergu5yki0cne0tqwrnfabytk5081c4lqn9yn848cf6ewtk2scuyuxz3q3bkb9aqvald8382b5f3qt7haqgtgj43qibz353dv3\",\n      \"title\" : \"Ab nihil quasi.\"\n    },\n    \"role\" : \"8j9fwkcxuv507z9g9fn1vj6p48thhowb9eymvg52scywq05asiy\",\n    \"members\" : [ \"u3kiby8u2345n2o6ixus0pasljibipd8fuwk3p9c3fo0wr7v8mwip0ve2pr7rnzy052s15yrlsjuhy86phko62mgzumfe8so9d8hz6pc9u6muanps6oatj1lfnmc2dyozt8k74d\", \"39rvwsccqyiu8sz2q7ch2vpxfuo0gu26qh3jiekgikymive8r7s1k91zlavxt238ni5ope\", \"813c4rjdb27luq6f5rbn61bwveupce8zc1ptmpqxtu83j5usztudmplu3ecqwxodsqfmgcpur\", \"0mwfccrgfum6dc6sklnzasa812kul5om51ew2zpjmb2ikcy6yk5w4idbkfjnnf5d11572c205hpx3zbbhla1uq1v4w2paez2051gfpywouy3nzos5ymnnqzbys54h25cyirn9p6eekw4mavxa\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"a3m23en1yee14jjurtvvh547xf7lp6pzujdbmykn0dnc7jeyoqfl22x8ormnitok6f7cuppz6f867z683in99cjvqfzzi7tcto0vpb5c5mx0k\",\n      \"description\" : \"Maxime veniam nesciunt culpa asperiores tenetur aut. Placeat nihil officia iure quia suscipit. Assumenda esse possimus consequatur. Et aut eligendi qui qui dolor sit. Repudiandae facere cumque magni p\",\n      \"location\" : \"a3roiqp54vup28cfg1zoc4c08l69chyp3tf6oo4lilfdcisewnuvm3nsp22sjoqe69qbca7ybz38ab033q2m95n2zpoo02ow6fwmf0urm8onv456y4slcyp8t90uu8l9x31rr3sm9w0kf4bbc76lcl88\",\n      \"title\" : \"Occaecati nihil porro dicta enim inventore.\"\n    },\n    \"role\" : \"1sp3tj8wd0w5tabmxoxix95yed3i8z4ocvdn9rqau7mvvv73hnrq1uqvp6cqazkvyi2s2umf8smiyo20u4g5vgqxfbdpnhz382x2a4rru18ne5wl2nxq7ieovmp0k1nu1yskb8qax80pg9olrscmehp\",\n    \"members\" : [ \"tf5i83xo2w3yk7ix78or1i2dqpkfzolqpta0010v6uwd87axcqpduxuop4oqd4t4ks842szsqin722qky31sitwovegrwzb6ygvypc9k6cc477jn5vguuzc0ag750nlej9vmeebma70kqf5pt1eg5ptdfecg4n0sr6\", \"vvmlcd8eyjo5fmao4y3m9g3wtnufwuysyq7wgqsvbhm5urow29xdgvb6ajplf8kw4xvp9oxgew4n6b3iihl1fypbiezcp3d4v3n7y5hdp3as\", \"6i95c8marc0172i8tb1xqce7mc1n6nkdwvdr3k1nyseo0i18ycmladhp51hpok05atb7pnkegbiyqx0e3ub4k3p7b3rbk7jz22jfz1f84ppdlc4zm72jvho9qegd6f1hnl41lhum6ibn9fprt4\", \"lzj1o1ikeos1xf7kzcvlbk47iqxnxk9qzviu13joqsvc63oe7sreyd938ka\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1pzx5goddekonwgoeztrq2l1ssm25upagvc7puhdul85sfg3xpv5i2z58swwa74qtp7enhdz6qqtkgx1e1cfexn6ign3uhb0io3saeurj1mbq46foos\",\n      \"description\" : \"Occaecati autem recusandae qui. Iusto quia ut nostrum commodi dicta quidem aliquam. Aliquid pariatur vero. Ab ea rerum placeat dicta suscipit provident officia.\",\n      \"location\" : \"ugozxevajke14bllgeaamd3bzeg19g8j7oqwqdb\",\n      \"title\" : \"Voluptatem aliquid sit quos dolores.\"\n    },\n    \"role\" : \"ezbusymgdpqiulxmegpq9nq7kd9bespum1e0oohuaeqen4b83hbbmo76nb8pp48otm7eb44i72ir9h1bgu87ozs5c2hn631ci5bli49y1elyvbm93436sluiabz03qsyvyppwx9tup77eobwbqpfyals3ye2p85ynq9\",\n    \"members\" : [ \"oujty8j0jf2txj9hnd37tk7frnkudsty2bzmb7wg425n6l5j8elfs15yg2xnrpw8eymjxvna3ge09hwl4uig4m2dyulqfz4zrhg96y9gt365c5ibzuk6rnoqkesqm1xcu2znvak40hwmgvfpmpcwj0ezjnl88cn8hkh684q47dmql0j7cj\", \"j4mo4vrtb4hqvr4\", \"84yqwp9xmp9ofs5ce21uzud7zk8j9hi98ovih5ffgd0yex6y4uyv5e18jkdncyrrnk0xo1uxy6ihwvhw8jc1lw\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"wgqeln5uracocaosmsp2k13cjkpxo0mmb0kv60qicijz571u2ltbba8hyjyfnav7mez5w68g1prscxggdhe2t2nykq2szosmhml2fkq19a4hhw3d6uafy307535766bzps3c7uc0lzhc01cmqivv6c0hqcyyqzeq2n8m8\",\n      \"description\" : \"Totam minima omnis beatae saepe error molestiae. Voluptas aperiam numquam facere saepe porro. Temporibus accusantium itaque id qui fuga.\",\n      \"location\" : \"bdih9y6s6qq2n3s\",\n      \"title\" : \"Et magni commodi molestiae ut deserunt.\"\n    },\n    \"role\" : \"ot140x2feeln5kifvjv1vtb3e4ab1fyeblfmpnhubsufvbr4ajvaja0mv921v4qn5j03i8frd8jnduldlflw9lpxitp1ffns3inke1ld3mw8l1roqmf4mgkk8lt3j87ywhuv7pipym4wxp5x9r25wicn12r71cxwd2rio46zh4pt7ik1h3\",\n    \"members\" : [ \"7iswibbxvf5duq11vc81imjfnvmrlbggg1jwb9h4ahxrhl2u1dhckvz8v64o5zn4oqjo0x7jsxkzk\", \"t6ia00imq7kc2ubjardns4at2uh9y6r81mtral9ub18\", \"sythvxpldiltezii4pel7ds9h0vht11z785wqwq46n73x6v21sso3cdlzfy4s4pcf27pks4u1of08rmm4mjrs1p8go6b13d3rcf79cjh27c3vp4weay6ii0o1djz3ahjgreft\", \"yj8nhazs248dxvy3khcylro\", \"8k10ctmg4134r5n69z8ed3o4c55y5\", \"aus6snkkcacd2t8i0wve2r4v0xo6mkz1mxfsglebqb400m40qnmlxtb0oftgr6lbbhuw6fsf2p6uhrjcr9fo3rm\", \"t9wnorjmgr2c3fnu3xgfryld5ei5o4ya5te2tv6ktha2jaiafi4xacexeyp0avnrdw6v3j23cltiku\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dvqvfrjx3j057c03b2dmz\",\n      \"description\" : \"Et veritatis illum rem qui sit aperiam saepe. Dolores ducimus quo dolorum eum omnis. Dolor voluptatem qui asperiores sequi a. Dolores tempore est et.\",\n      \"location\" : \"xz2yty3gqdjoj3lhf11ipqxnxnwtvjuh215gm8nez5crvzigjs04j8twbfw41lee69ea5gcd4f44pvatc69soyd3jkmo8fr4of71h5fqwjpfle5s5sa7o5sqldy37vkaq2epfhrrc2p80wxqfl\",\n      \"title\" : \"Fugiat non autem voluptas cum possimus culpa soluta.\"\n    },\n    \"role\" : \"kjfsmh67kukzz4akdqe7hndgkx5wbj0bro4hmmk93mzq2bweib3mf7kpsuuv2x5ovehknykitpbtaoq5aj5er36ncsy24nkgtl2eovmhpucz61jfubdz9z5ytm8s86sp3pqawi68rq59scb9ll7s1ycd2w2jsedxkjy18796oczmi2qvz7qq\",\n    \"members\" : [ \"ptt8zz54hw1ur4emt8hw5ug2v5r8qykxpiu8wo6k\", \"smv5i4uusmcng4t4hbu3sy7864qmkwuyw5c812dru3f6oy1178g9v08vcbghrzjnw24722traaki8oj2qmitj\", \"kfgm9sjuk90hoqiepkpr4oas37kvbet\", \"43m2d6o91zc\" ]\n  } ],\n  \"etag\" : \"aliquam\",\n  \"version\" : 954405161,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"jx4zpvjisrq0z3yjxila9k8cgb8rqcs1qfj1whe3d71q6kn7i8jie9roaww8ispsmy51swa41pkbbk7e29n7hde64h0vggqq7mvr7ypn2u5wdizqd\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"6tbrjdkdh126qcxlwprbqn2uw000wlrl75nq42rcr15djp1aekge89knkt8ru57a8u53w6x1q0j0km\", \"x3pmaqrcufsorgk7j1eczopletvh1257ja92sgqazbdwd01q64oq6tdx5oi0og07o2q7t18a45s4yda9da1im7xqtzaicavx3b1nd2v44au97g9e5ga3q49mernze2bk42pizjc0zyuz373jkt623ic78vbvutkciz2500eadgktvffn3ma3lrv4vrkxrb\", \"3ud9vxjksa176m6kd7f02zslwvwhz42aj7vdwl56n2nxszav68psh8ohbw0wfqjgmqimn\", \"0ro135ttgrd1bklgf9765n61yaoj4vn70m1crnu5vsg4v9rqgjzfcv7z9ykswi3828gwgyoru\", \"o3e5rzmqxfo4fz28eqnp87tjdef5sp89tf4bnonx6bbm37xtp89h5rvn6mewabb2gzz623i05fsq0by\", \"rtr8fd2k09b3rls2sfkyk1tjpnneef6l9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"i0nfyr1y\", \"pfk29pyh6wd520iogkrcp3br3ixpjjmins1qtz2fkek41fzzzykojygteidkk6tbfj88nwx0kip3ybsngj2cp3d48vtf23pbf3ujhxeyiw9j27c0wrw8dpvtbomahniag4lox2p4m55ez8o9vyhy9tt8dtxe7218mmiq2afhknv089rkts7p1jo\", \"i1sc5o6aecfpsc6mphuehptjd0d6tnnin5iiq5olj1334pztnjgqems5pvr6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"mmxas75ot9rxzawt22t87g8dip2jisfk395uvoetl389wwu8p4hrxc1ba7mmp2bmggeplpumjtzkdrx8zoc3hbm7\", \"ddhuissyzj4apgi5mox39rpnzriv8sxmc2hia2c3iyh12guqjvasnbxenzo18s4bnwpsx8ju1v9j5hytpl4ii8the6si2nudly\", \"refurn7z8dcgz2fzzu95trmdea44vjs8orx5971c92wwg7j3g15xkjx9ekd5rm08ercfxmeck7jzgdrkno864uait9ibegy6038gtpjr8gba5sr8p9y4lnzgkw3om52f3r5bxhqmz69l6k4qycz6nei0j6gaxh45mmrtjw2gac9bgp\", \"u3jz03t1vsqwqidr77n5gs4njhw0lo6jaskns5qvqlkd0mvpcyffjgg9llj7kzd2dfromd1ydh1gwhnxupw8sxju\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hevrcpr141tpvaxxwohv15uuxbyaope6jsz3reyrszo7etky0q4w1kkkv11rwcxlrdt6xwgpmlodhtwh5hvulmb9mcymajvpxjqvdnm1r6otjoo7hgwgh345uwhy5hr51ffqnjrqunk\", \"ck2rkn8j2kutzzhaj\" ]\n    } ],\n    \"service\" : \"94xr9pt7h0l824hf4b6y7amr6esf1c2pd9tr258bgstbfrene1ctocefq4p1omfu653\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ioptqwruok9ikwqoamwz5mzs5677to6jqasqr7lk18tj7mi3sjy\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"v9yhrjoex47rq5c9d0c6382hfa1au3w8071gkaxd62dp50frx4lx68ki88e2sa0bnhqpn0ooeludgza7xpmdzomee1nsx5qp1j4cmk61qpqhnc4pdsb0txcg95iavyh3eolxoimiapwneats6xsw42fpawl6k5hpkaf4hjsntbqxhy1h0wl8z8dgo1uffhiy\", \"ft6mgf4d2yskyirsutbes7xwm2f5c4de6lrxw0lwdl32y5svcvrhd47j5mt2y10v4z29wiag34wv4qqv8lhw8opdljuwj6ewqaon38c134rfioacdj5y99x9c5baze5rbjooui05e8nt0rkb790pwhpc1w3aayk34eoytcw3eyo3\", \"i3j7euwuzku0dtdjrhl8202evmxdldyw4ixc2eu8bthl4si8cs7n8wwd9xbtxa99uyk6rcpw1mn1djdnxjw5wmbj4gqmvgs72gplnpfedtznetosx2xvp85p719r00l2zlf\", \"zqwmf7b1hsl4v0zr07reg30n5l496s0gvpvgsytdj5jeho4ntd6x2czwmq00nbd81sjtjquwo7yfuiearzscax8ix3s39ehbb4wc3csyijfvar849jhsysn42b44vx3zf1igs7o2fgvpztvfd9lfmvf75vcqh4w0brl7ffp4kktzk2fsdr1ite9mtr4dw\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bsm79j6zjpp0tr4eusjwjkaxhufpdpsnjwmb2erh16xc94nyrg95qs03sw3fy367a9qvkwqo5tq6gfpbynxdmzusy5f9dpajmvfvue1fai958h43kyriq297jbeeq38f2v40yja3s1hxah2077kr7xitjwka8i8eabhcc57tn6yats4fpvb5\", \"boyr5oehijsyp3u907npg37ujoqv0feeim18ggyq37hl7cih4quffr8sc4bevft5oklntdb27zwvkbt9nasjbelvb9go7zt3b06utfla1r47pxe2rv43rwlg9ohr5404brj7qfclxv\", \"rnfsdfz72utv59p47\", \"advjlg19xqxcme8ktn3ceyrlcwsdjhecr88gabgwmh88k3fn9dx2fglll1xop7ko\", \"532el9faz53fa0fik7eqi890iv65017hxql213h9sjqxanam117doeu5xxa7z4e7fdeyxic9sm1wygq89uc6g74kqycnq3ch6lwaaqotem6n8mvadehdazx6fr23vaa98llxqz7prouzzn6\", \"81245899cqoo3tungi783wcqnwaa62zlec07c386rsml9w44nfgdagw6ry1tr0fl71h39iodsqzjmdr0bisgxelw9x\", \"lgxg70vfujcit75bg97al65vzl92eehkq5wvxj8jdm5k24s0uh6detlw5u2p9c\", \"jg90ej565o5p6qbyekq35w0mwub4hpgdz24of0ksk51jx7qwyhastlupyyfq12sg49fr9fq2ik2gsjc2lc4pwyoacixfo5126qtciftq2ibwgpp8c3c3w6erqenoy0z9ecfw6tfa8elo9udyiyuabrsi2rmsjga3jo92z5z15lkg36\" ]\n    } ],\n    \"service\" : \"3431tshsq5izoj8valc3e4pvmy5w5nvvc3713izlvnaoh4j9xs4c8cgp75cix3y316s7ed5kgvh05776g17clwmfp3j5uq4k8yuz3tmixd2vnpjr4dpxyuctexi2yyki6zu\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dff8f6bd-8053-4532-938a-2978bc2bed99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.631286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad161b12-cc0a-4c4b-8dba-d11efc759ff1",
    "name" : "Creates a new ServerTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/fo41kv0d2kocap3ia8er59yf9c4uxffihzkbm49nzzortyzywcytfmx33es0he1q1h032bv2au18/serverTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tyson Klocko\",\n  \"error\" : {\n    \"code\" : 941313731,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Sed tenetur ut aspernatur facilis a accusamus dolore. In iste illo quisquam possimus sint labore sit. Quaerat fugiat molestiae ullam cupiditate deleniti est fuga. Numquam dolorem voluptatibus ipsum eu\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad161b12-cc0a-4c4b-8dba-d11efc759ff1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.629925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fa0fc128-6e9c-4c0b-8886-6bff63e52305",
    "name" : "Lists ServerTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/q3bx3uwxbuo4b0ollenzffdrpyp2hmx91k8ojzf2lodb6/serverTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"76j80x2kicfkke846x1wza\",\n  \"serverTlsPolicies\" : [ {\n    \"createTime\" : \"2022-07-03T13:55:06.628893Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"wu9a731q74npl57tk0ill0cvcawscyp5wqqtybgeatwqkrwgonebjgw7n1smb5oyxa774rqnm0xjc0ulyagu7hhz086bdnx8ok6wnbn3a9lg1f7s\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/846477\"\n      }\n    },\n    \"name\" : \"Lakeshia Trantow\",\n    \"allowOpen\" : false,\n    \"description\" : \"Illum impedit tempore. Similique ut et itaque numquam dolor. Expedita fuga ut numquam. Libero in exercitationem non dolorem.\",\n    \"updateTime\" : \"2022-10-10T10:38:06.629106Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-17T10:27:06.629142Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"yvptr9w2qhfccnhg7km186g9cq38vc2n1\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/928043\"\n      }\n    },\n    \"name\" : \"Ashleigh King\",\n    \"allowOpen\" : true,\n    \"description\" : \"Excepturi alias veritatis. Perferendis aliquam modi voluptatibus aliquam minima. Incidunt praesentium sit.\",\n    \"updateTime\" : \"2022-12-16T10:55:06.629351Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-07-16T13:49:06.629386Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"7dff3m8ypbbeash8cehgpc9glb4fle10s479gqsni8d34sok445gpyvmdle2iqqrjlois6l6i5hqd6ljntcbt6kci81ksuk3cfivi\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/216394\"\n      }\n    },\n    \"name\" : \"Marianne Goyette\",\n    \"allowOpen\" : false,\n    \"description\" : \"Commodi minima non labore unde voluptates voluptatem. Cumque temporibus dicta voluptates explicabo nisi at. Libero magni inventore harum voluptate omnis consequatur. Qui est omnis provident ipsam quia\",\n    \"updateTime\" : \"2022-10-06T12:03:06.629621Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa0fc128-6e9c-4c0b-8886-6bff63e52305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.629731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListServerTlsPolicies method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              },
              "serverTlsPolicies" : {
                "description" : "List of ServerTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ServerTlsPolicy"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b5c1cb8-61ef-4d31-917b-af54cb83876f",
    "name" : "Creates a new ClientTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/g67liusvu0fszdqbm85eoua3zm055zs06ddq3961o4i1uj/clientTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Latasha Carroll\",\n  \"error\" : {\n    \"code\" : 1996741792,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Consequatur rerum officia dolorem animi et consequatur. Consectetur ut modi quia unde quo ratione. Doloremque dolor ullam. Iure voluptatem ipsum accusamus. Quaerat ut id quas eum delectus ut.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b5c1cb8-61ef-4d31-917b-af54cb83876f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.628836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "19788e2a-e375-462f-976d-c8ff5b733fa9",
    "name" : "Lists ClientTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/crjlsy9pz56hgmftrdstl0btpyarsj73pm4u38rtjw9y2hfjn0a7r36520impmwnljg1spwilei1bgquxn43wga3mmyez/clientTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"yeya35my38x52nm21pk1g0ysmjlg44dqfn8wvzi80kkspmcxcd9utq4pfnhidseva2zz713h2pzigpj5ppz8kq94rg14kza39rakq\",\n  \"clientTlsPolicies\" : [ {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"9ubk92aj5gwrk6chjmip9mrc5k9u36r52qdvt0kvj1ljif525jh6errhom10grdxfuqi8tvfgdycotd5amtwpe61j2gt8m305k3sneg8j1w7vjbur8m85x2b2kkl7gyrwwuvhpa5vp9uqi8oe8diyu8klvvhc8ap5k91n9a2ipeeqw\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/590538\"\n      }\n    },\n    \"createTime\" : \"2022-12-20T10:31:06.627583Z\",\n    \"name\" : \"Rafael Marquardt\",\n    \"description\" : \"Eum facere at. Facere expedita eum dolor culpa odit. Beatae aut aut.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"wh1yqn6dnq8xt4ieaul4rme5k2d0w0mf1ug5mwlhp0a3whvgbdzixtytl8450vkp4o9arzp22efbhwvsasquq8qxget5sw6ligimlje\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/213206\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"jf0jswlf7i\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/879475\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"hd69moz5s3xxzhoq4hov5qgpvzcfgcx7aob6vzqz2cdgfdpgo7vhvexea8vp5yogupdtnvhcxjklze4kd0lyjzcl6f5vlvrcefv\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/778499\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"uwuw6qw8rhjicy03wbz38blsbnzwbpmku2srt1lnubvd9akwbapcmyxqlgwfcwyvizw371wytsutackuvps8h8lu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/504536\"\n      }\n    } ],\n    \"updateTime\" : \"2022-04-20T13:13:06.628007Z\",\n    \"labels\" : { },\n    \"sni\" : \"b92o966x7f1oc2crmfm128mnakoml3f9iz7lhy8ess36lcsy1su1\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"oezsx8hxu64g7tmv45ealiawpzwrhnb139edo5k5km9ea7dfst\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/327501\"\n      }\n    },\n    \"createTime\" : \"2023-02-02T11:09:06.628136Z\",\n    \"name\" : \"Yuri Kautzer\",\n    \"description\" : \"Et illo est ipsa quia sequi deserunt tempora. Nostrum hic voluptatibus. Accusamus ea rerum culpa doloribus voluptatem non expedita.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"zk8tkuqxz60dzzlzwi4fxrbepfzv8royfcmzjoik6d93gxwr9rt65ki1u5e8a9igc3\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/346286\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ces0wca9c96s99bg6pkywsnskiu3ye6ncpgnuccw8q1kn0df13nfb4jhtr7szplif7ohdo76kocr88ew2mww1\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/755704\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"qifo4r9oppe6hboqeddeqk4nlfng0qxpwh4bx17fe7dk6627qskapsg1lrvtbqiuzowxvtmne6j69wvio9f6kiat9\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/439125\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"i4bvq1umvnsa67beubsrgl5m2uyz2cijf686b8riar8vqyrw8o5kvqg6s2s322b1n292ho67cvgbs3x8bt6so3jun6wvbw7sysgjw7qax\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/992274\"\n      }\n    } ],\n    \"updateTime\" : \"2022-07-15T12:57:06.628548Z\",\n    \"labels\" : { },\n    \"sni\" : \"cp5cq346ufs4vxcjfa738evttbi02f6rmb5wxmlxrl378clv9riuo7eroc04b9wxm6xnjvw5a1fbuuu5eioco9ueqwsm6wlkteafzte29j5pj\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19788e2a-e375-462f-976d-c8ff5b733fa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.628647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListClientTlsPolicies method.",
            "properties" : {
              "clientTlsPolicies" : {
                "description" : "List of ClientTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientTlsPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2e62e99d-093c-4bb3-8475-613e4787f548",
    "name" : "Creates a new AuthorizationPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/i8qzo76vxq8ka976au0egs9b4tb0cz5jjfoikio04ns3l1l4821gzyzjknfmyxrv2td5ufid6qpg0ygr1sf9rkutek9kyxstbd6x8/authorizationPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ryann Glover\",\n  \"error\" : {\n    \"code\" : 442083929,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Suscipit facere sunt. Optio consequuntur temporibus et ipsam. Non culpa voluptas.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e62e99d-093c-4bb3-8475-613e4787f548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.627432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "544ad1b3-93a0-413c-8657-8bc4bbb4beb5",
    "name" : "Lists AuthorizationPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/lgvk0drckokhmsxs0o85rg91ymkwgqf2/authorizationPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"e32mh9w1ild1sq3vn4nex8vf0aunpi009mqsd4yz73gplo7heob0z51xl7yxk828uv3oqua2uv1bcbb71bbmdns5b4bo4gxuntft4l8cviuj6uj3m9v7127bshsnk36s5l1nkilfq6m2pmyzdqo3x87b2qjuxxdo\",\n  \"authorizationPolicies\" : [ {\n    \"createTime\" : \"2022-08-29T13:19:06.626922Z\",\n    \"name\" : \"Lowell Torphy\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Deserunt quaerat dolorum. Fugit omnis aut. Est beatae perferendis iste aperiam. Voluptatem earum quae distinctio.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-04-26T10:42:06.627169Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "544ad1b3-93a0-413c-8657-8bc4bbb4beb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.627262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListAuthorizationPolicies method.",
            "properties" : {
              "authorizationPolicies" : {
                "description" : "List of AuthorizationPolicies resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f277c56-70d9-4c1c-9815-e0688349aebd",
    "name" : "Creates a new address group in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/a7vso4uu31u0rr3w80v5jt5hm90stk0rg9d8aathcqpw4mknmpe905nxr8s617ppezy8wdgw2436yj1ayw2o8tggbueay047lkmffnrw9nevp7rb4lkrbl2te6ruaxb/addressGroups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Brett Douglas\",\n  \"error\" : {\n    \"code\" : 1616573216,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sed et reiciendis fugiat rerum esse qui iure. Ex itaque at. Aliquam fugiat ut soluta placeat perferendis perferendis. Non vitae hic praesentium quibusdam. Culpa cum ut debitis placeat.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f277c56-70d9-4c1c-9815-e0688349aebd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.626847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e730352e-931f-427f-9716-2bbee065237e",
    "name" : "Lists address groups in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/6mxvkq19x37x3j8qiai7mlgwtyq3jkuqw94sprgb1bxufhqxg4q2bpu2moy98b8a8t8bhulqo8bebqwd8d8uq1cqkt/addressGroups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroups\" : [ {\n    \"createTime\" : \"2022-12-14T11:31:06.625655Z\",\n    \"name\" : \"Ethyl Lindgren\",\n    \"description\" : \"Est inventore corrupti suscipit ut. Corrupti aut cumque in quo cupiditate ut. Et ut exercitationem laudantium quisquam explicabo. Ut quam nobis reprehenderit ipsa quo qui. Id ducimus laborum eius dolo\",\n    \"updateTime\" : \"2022-12-03T11:38:06.625767Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"byzdghcawyj9wq3cji9kldurnjf9xcfpy5vbxy8epyzw84tdp03ukxsyftxcuonk1hgbeshquts2wulo9xrc0ghkmz3bumrj\", \"qsims5mtw2ompe7vkrsk4zh2cjwhkvrvdb4bek0hcg2v8er10hs5x4ox1wnnlffkpwzm71a32c7qt37d4q7yvq5oqdq9pt6xqwcewg87mfygp6p4fsyu704i3niw0wk68xufkml\" ],\n    \"capacity\" : 1501490928,\n    \"labels\" : { },\n    \"selfLink\" : \"9chmaqfw73q0eou\"\n  }, {\n    \"createTime\" : \"2022-11-09T12:13:06.625849Z\",\n    \"name\" : \"Augustine Smith II\",\n    \"description\" : \"Temporibus dicta nobis architecto quae quia. Veritatis corrupti non numquam tempora. Fuga qui architecto alias consectetur maxime voluptas.\",\n    \"updateTime\" : \"2022-08-10T12:53:06.625948Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"jcwsunlj3kk8n4nbu92mb3lg4ehfui53h7ulw9oqdqdiln3mr2f127snkejiqgh2ji6qyy518284qoo1\", \"drs32w6yeraxm1phcxt6m6257x1\", \"je979yuklijqig66eoxc18s4jw1xr9b8k4137v46zxz0ffvyuoohp5resda3jzqqa7gp9hwtum6s7jaer6b15c8gyml2xyt9cedd9f0fyb92vtfhbvbxy6ha2a590xt8zdp2s6yf4m78blu7q9ww8fxxr1zxyvxx68b966d5oi2zbnr4qf9v7rwbm3\", \"nl36hrc2pvkww9tmdfmxia7tdn4j5g1b8dkqd97szigb0a0icz456adrtjukd5r8q69v2usemx2k5f5lx99k81ad0jhmxz5bzeroj62v52mfwjatg91dhqy5mqbiz308wzyxo42\", \"v1gat3eurtf6a7lvauw2n79qtt5wk6u22qcop4ynnd03l7ut07aeyfi7cvizjn8qdnvg2syev79gpmq5426osctli2o7k\", \"fzobntpgdpfzw62dy6c0yjfqehn3r8plfoii5lt9re9ydibuuduuthu5ngjuvv8d7iw1ifl3rp3e1coqsnibhj77qz50p65db0bd5avan5brmmx7kvdf94kbdvgm5m4p\", \"4ij75rksfonj0vlfpwokt1zt8azlyqclkud79x3\", \"lzgcac98nj9me242totv1fl5lpdmrrc2b21ulqsxqqbr79j7entwlrgl9phq7lnjfytvjqp5zfqbwjqlulym7jcytps338julscuy4khvb2mvo4q9vhozj7lhp5uq7n3b7jgwjxb69mliz140g1ypr3kq292vsl6jrmoig5k29\" ],\n    \"capacity\" : 2023861456,\n    \"labels\" : { },\n    \"selfLink\" : \"mnxwfi06xwm0mbl8wdsxy6ni7ndmaqp8sefpuhrg05fy3pu52f6s8r38a2agk4dezn5y1mauhq2y6t55b8hohzia9t3\"\n  }, {\n    \"createTime\" : \"2022-11-24T11:35:06.626046Z\",\n    \"name\" : \"Winston Schroeder\",\n    \"description\" : \"Et et voluptatem. Quisquam voluptatibus aperiam officia quia et. Sunt quos voluptatem minus enim mollitia consequatur neque.\",\n    \"updateTime\" : \"2023-02-28T13:03:06.626141Z\",\n    \"type\" : \"IPV6\",\n    \"items\" : [ \"ffilr1rtxt0zwmmfthkudnl0hs5ygg8g2f8\", \"llq6yjum0j5n50qwuhsa9la9ima2y9jem7r0c2wx2mr1cnz5ht84h4s39inispfx6q47x0evnn11nihf4gu5jrjup9ry00bqd58kc6ckcekyl2wtnhqhl8tb3we3jdiuphkt6nrpcajmolgwu97tg15l\" ],\n    \"capacity\" : 2068899701,\n    \"labels\" : { },\n    \"selfLink\" : \"6k5wcke0menlkjqbfm42l95a4e6fmef72d9bn7t365vezb9rxa\"\n  }, {\n    \"createTime\" : \"2022-10-16T11:39:06.626209Z\",\n    \"name\" : \"Rufus D'Amore\",\n    \"description\" : \"Error non quae. Neque magnam quos. Error praesentium voluptas sequi laudantium accusamus excepturi perspiciatis.\",\n    \"updateTime\" : \"2022-07-13T10:59:06.626301Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"brjal15ga4rqho7a1fln4z3y9e9nk2wx5rcd5pci3gfvzzhmmozclp8u7gpa1djgp28sp80l61f9xeav5xing6c4wj68eyv5p3nbgaek3gw3c2lm8wfv035ltdm1w6nffwa7is2st4sbkmrj5b8292sxicgwdn8857kq0xjw\", \"qobubaeota2m39n53ygysdmqvef7zlyx1z8o0j1uy6u1pwfyxbaxnj2lyxxpxuh0yjn6jvswodndkvf8rom21qoy6pjcfpzfeauf\", \"7ugbxnzhp4u43w1eojvzrx9b3wxr22bb9ctpnbxrw9y7sskoquhpcpgm43orfmex25ck0fkfkq1k7th7creudrm33vf265hvn6xw6vmojzeeavm98tzh9uig8qr9i6rpbuf8qf\", \"lxuk9n9urbf6h3eigqg8erymatu43dr4u2mue0imyr5sq31ygeq0ey694i4vfp72liaae20ycbe861ijnrn861rqjmwpxdmfu9wyv2rx0useeh\", \"xagq9rfv8x46sfzefptjcb07vbjvcqc1gw0e3t97pvfqo3wrjwmo1bbr2oli3ec9a8b9gdjke9cez13rsjp7rvpvy4dw8bryesr0ka2kvsl7idn298em2r1qp6skfhq0yjvlfg9poev8ap1kwmp4b6wetnqndvkb4\", \"tj3xwj8i6r7d1mhqgdgw1v9i164zxy7zw6k342hrzixu39xnu7cod29vzdgyua8n6csht94b0enb5j3k57195vw9cn9ns9p6vjjz5pw8pg5loa4ahlkvob7lqc5yjwvcrla71ebgem0r3yxh7lcjnqazn9w42rnxfcg3g7vgbl3hgog5tjtw\" ],\n    \"capacity\" : 1795216663,\n    \"labels\" : { },\n    \"selfLink\" : \"mbgk7id6f53xk7ak3fctwkcn4pq1uif6ifxgotzrkwfhfdm\"\n  }, {\n    \"createTime\" : \"2022-11-27T11:12:06.626392Z\",\n    \"name\" : \"Manda Kuhic\",\n    \"description\" : \"Qui est saepe saepe veniam sed quasi. Tempore illo velit perspiciatis doloribus ratione nulla. Nobis voluptatem molestias iure explicabo ea. Quis quaerat quaerat maxime amet. Explicabo excepturi qui.\",\n    \"updateTime\" : \"2022-08-20T12:00:06.626495Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"312te8dzs42s9gotrbyinzgfqnm001rj43nml3l6ovlamfe9nqcnjnkow7lzoh32jz3zixzuohsiqoivfkfa9jw5rsh5cp0s54mxjw2oopr8whdf41nsab0swlnvwnu7tf40yynqjoq8o1yypigh3zz7zfkxd2\", \"5wwncvmv9a9htka2id99ura96b71udu7g8wpohfiezymwtgm3nxz5b19i0zzsagu9tlo7ru8u6o4aqd15hlf1s1dze8l3hhy40waglez1zxq4wdoa28kh8cxpo6t4zo0l50k4zt9c7o51zrpcb2v613m5qrneszf8qqxvtlxdlp4h7liab\", \"p8uvtwyy8lmmw2abzrxn2b9mhz32zv4ic4vomxyr\", \"k9obgym2311nd8womc6uxq8\", \"fn2qzzdkwm3vtbgw7gj3kvpflcgk11n90a3tqikps6p35dfaek16shxrcbr2hp307kignbm42yvwjjtbxajmkr37biwbz6yk6787em4hzcw1gosnvl6s78d7ynjm14ui7wxdjwceahhkc0f7oaho2qt0aez1j3clp284ujzo70d0fjqu8llql0x\" ],\n    \"capacity\" : 1383384269,\n    \"labels\" : { },\n    \"selfLink\" : \"r6t5onmd0v2omtpj5ywqh2jtu7v274k62wr8gpdaq0fihluo7qd3r2rpnl7p21uckcm4trx624yac3yt18cr191bsxa412sy3cq59k3m10nhu84nmymijjjaaz1zer2dnq3w75qiflp2nroazeql1\"\n  } ],\n  \"nextPageToken\" : \"x2izv5agr05u6jatb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e730352e-931f-427f-9716-2bbee065237e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.626651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.list",
          "schema" : {
            "description" : "Response returned by the ListAddressGroups method.",
            "properties" : {
              "addressGroups" : {
                "description" : "List of AddressGroups resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AddressGroup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e761e584-6c08-4661-9dec-dfa0e8c79a6f",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Waldo+Rempel:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e761e584-6c08-4661-9dec-dfa0e8c79a6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.625607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6588d86c-d8b6-40f2-b38d-5ba4b79c32a3",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Billy+Schmidt+III/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Corey Mueller\",\n    \"error\" : {\n      \"code\" : 1103823029,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Vel necessitatibus facilis. Dolores provident qui molestias. Tempora illo fugit modi. Nihil recusandae totam qui rerum.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kimberlie Adams\",\n    \"error\" : {\n      \"code\" : 1740297731,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Est alias ratione sit voluptas autem. Quo autem quo. Sed dolor ratione perferendis ut quia.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Trent Welch\",\n    \"error\" : {\n      \"code\" : 343495351,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Et ab consequatur repellendus velit autem impedit. Est quia reiciendis at expedita. Sunt voluptatem dolores ducimus ut ut animi. Dolores esse voluptas. Odio voluptatem rerum ut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chere Doyle\",\n    \"error\" : {\n      \"code\" : 1083041895,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Optio necessitatibus molestiae ex dolores quia. Sed quo est et. Quaerat laborum ut. Architecto doloremque aliquid consectetur iste perspiciatis asperiores molestias.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Salvador Walter\",\n    \"error\" : {\n      \"code\" : 1529129731,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Est culpa quia est nesciunt possimus. Nihil commodi consequuntur ut molestiae ut ratione accusantium. Voluptate at laudantium atque.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"1acgce1kvvmzdanyulsh8fvf09zet0nhkhu5305hjc0qdjenos76hr8o5xq44wconknr36o7yfdbnp2pp1qrecmri99xfcf5zlq39blkexg68vcjtrtr9esgahmbe67aoom84stqb4rsymzb8z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6588d86c-d8b6-40f2-b38d-5ba4b79c32a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.625525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9a48a6d-5699-416f-838a-b484225f0233",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Mariel+O%27Reilly/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"c48vp7s2w89i86erdx3q4kyblf21zy0f5x1x9gp3uu9nvteleshsvhbpq86fsed3jsp1022wr32jiflcfrx7g2socl87\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Edward O'Conner\",\n    \"locationId\" : \"s4tl\",\n    \"name\" : \"Selene Wisoky Jr.\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Thaddeus Bergnaum DVM\",\n    \"locationId\" : \"2zlw\",\n    \"name\" : \"Barney Walker\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jenna Mueller\",\n    \"locationId\" : \"k327\",\n    \"name\" : \"Carter Metz\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dane Bins\",\n    \"locationId\" : \"69k3\",\n    \"name\" : \"Stacie Greenfelder II\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Grover Carter\",\n    \"locationId\" : \"zl66\",\n    \"name\" : \"Jamison Cassin\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Val O'Connell\",\n    \"locationId\" : \"9y0n\",\n    \"name\" : \"Miss Thomasine Heidenreich\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Rudy Lebsack\",\n    \"locationId\" : \"7p2e\",\n    \"name\" : \"Kum Welch\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9a48a6d-5699-416f-838a-b484225f0233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.624857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d6be1c25-d0b9-4ba7-89af-51f723bb90d4",
    "name" : "Updates the parameters of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Ronny+Bailey",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Jorge Becker\",\n  \"error\" : {\n    \"code\" : 721036228,\n    \"details\" : [ { } ],\n    \"message\" : \"Corrupti quo iure. Itaque repellat nihil. Illum fuga est vero quia mollitia cum assumenda.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6be1c25-d0b9-4ba7-89af-51f723bb90d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.623634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "775adace-ab9a-4b3e-8121-fb7484f22bc7",
    "name" : "Gets details of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Reed+Casper",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-06-17T11:28:06.622928Z\",\n  \"mtlsPolicy\" : {\n    \"clientValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"708at90nu10bur0tno9g0y5srqy7xgz4iqp6wgneqrivevhee0s3jecnk9tgm4l7ycm55enihr5vs04is293i6u95\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/363886\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"2vq7em85gs4\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/664431\"\n      }\n    } ]\n  },\n  \"serverCertificate\" : {\n    \"certificateProviderInstance\" : {\n      \"pluginInstance\" : \"o9jo8etk6tw3cahjpm4lhcv1f44v5pety0x18u6ld6re39x1\"\n    },\n    \"grpcEndpoint\" : {\n      \"targetUri\" : \"https://web.example.mocklab.io/876435\"\n    }\n  },\n  \"name\" : \"Pedro Powlowski\",\n  \"allowOpen\" : false,\n  \"description\" : \"Occaecati quasi aut. Pariatur delectus et in beatae ut veniam sed. Quae qui ea perferendis animi. Quo ex sed rerum. Qui voluptatem aspernatur minima enim.\",\n  \"updateTime\" : \"2022-12-23T10:39:06.623308Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "775adace-ab9a-4b3e-8121-fb7484f22bc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.623441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.get",
          "schema" : {
            "description" : "ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource.",
            "properties" : {
              "allowOpen" : {
                "description" : " Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                "type" : "boolean"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Free-text description of the resource.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Set of label tags associated with the resource.",
                "type" : "object"
              },
              "mtlsPolicy" : {
                "$ref" : "#/components/schemas/MTLSPolicy"
              },
              "name" : {
                "description" : "Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`",
                "type" : "string"
              },
              "serverCertificate" : {
                "$ref" : "#/components/schemas/GoogleCloudNetworksecurityV1beta1CertificateProvider"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the resource was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "844b9c74-40be-4c79-adca-0149d86370d0",
    "name" : "Deletes a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Ozzie+Hodkiewicz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ashley Rath\",\n  \"error\" : {\n    \"code\" : 1779886475,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Libero sunt culpa voluptatem enim consequuntur dicta. Ab delectus nesciunt tempore rerum. Debitis voluptatem dolor.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "844b9c74-40be-4c79-adca-0149d86370d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.622891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0d098e28-2d25-4699-9839-5454f796ea06",
    "name" : "Removes items from an address group.",
    "request" : {
      "urlPath" : "/v1beta1/4zii0vc79zacj1ms03otfm4bcvb1tuuu7pjtfs08cvmkz17ij0w5zev3p3h24uj4a2ns8tegc02oqy2wbjenempskic1wa6sko7qvk2g4iqwnh5ws40y1k:removeItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Merle Dickens\",\n  \"error\" : {\n    \"code\" : 407937045,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptas veniam dignissimos et est consequatur mollitia vel. Ut sunt sed. Exercitationem nulla laborum dolores est quod quaerat. Dolorem delectus incidunt in occaecati enim. Ad id ea perferendis nesci\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d098e28-2d25-4699-9839-5454f796ea06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.622696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.removeItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae55648d-0f26-46be-8583-908d3577201d",
    "name" : "Lists references of an address group.",
    "request" : {
      "urlPath" : "/v1beta1/g8eypwycexp7gq0mwr30lmwyl60bs791d88pxx37a5rd1pwis4ob4iqtushahx6mlfruj68ze6oxgk5wh6xtqczqqwygob96odbvv2a4yjb7e9sgs6am00:listReferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroupReferences\" : [ {\n    \"firewallPolicy\" : \"g0fa41ri071xcqieyabkn8l\",\n    \"rulePriority\" : 496688578\n  }, {\n    \"firewallPolicy\" : \"y61k2adyip6za9u5vy3vp82b821ogzlgne36oqw93c4jirvdozkwhurwp06dm1t0wtu0wzom5bsy8vzz3pzrdnohp4b0of2puy3ghp7w8p45jc6g1fj2v4ptwpdw9ycu0ae7md031v1cgd4nwylmhkvtj\",\n    \"rulePriority\" : 402911352\n  }, {\n    \"firewallPolicy\" : \"6r2rf5214ru7v1n8k0rp5rk9jtlo718y6kspap6d3q0d78prrl46qxgsbp9qzixc8bq9mm3k1wuzs1u51affhrk4vtzp1cgksjrpih7zlkulipr0zasl68cp82s23ff2h0sulutkjayawwri0em\",\n    \"rulePriority\" : 548348813\n  }, {\n    \"firewallPolicy\" : \"3nb8inor6dzwqfwo5u2zjq9i0qwgi2zkmnavakch6oujp5ujbptr9oadhsiglwxprdp1n8vulyf5h29i9bm5q20xb\",\n    \"rulePriority\" : 213839400\n  }, {\n    \"firewallPolicy\" : \"bwgae94yph6qweael1q2g57dvfko\",\n    \"rulePriority\" : 1307250073\n  } ],\n  \"nextPageToken\" : \"bguxo4vrnq8rbyu7zypdkh4fhg35idlftb5q25307ej4q2zknprf1f3fwp4jhvzfz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae55648d-0f26-46be-8583-908d3577201d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.622512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.listReferences",
          "schema" : {
            "description" : "Response of the ListAddressGroupReferences method.",
            "properties" : {
              "addressGroupReferences" : {
                "description" : "A list of references that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "38ee0917-9d1f-4868-a2fc-57083a6df94d",
    "name" : "Clones items from one address group to another.",
    "request" : {
      "urlPath" : "/v1beta1/itv3e5eylqgcsytcygmc88955l3h2nn793t9j0hhfmnhktla69o9hzv6fgolrmlu1j4irvgkfu8mrqm46qdr6sz0yy68u91w57o6veeuh2gj74iqc2ci1iwn4yck7zcz2jpsep73475o6ek9x3z1lnqn:cloneItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Shameka Corkery\",\n  \"error\" : {\n    \"code\" : 2045919782,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Facere sunt illum suscipit beatae. Omnis magni deserunt. Magnam eaque expedita incidunt qui cum corporis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38ee0917-9d1f-4868-a2fc-57083a6df94d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.622332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.cloneItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5bec7889-087c-4b36-b1e8-01960b33923f",
    "name" : "Adds items to an address group.",
    "request" : {
      "urlPath" : "/v1beta1/ltqc2x76bqu2jm10k6w812te72m9wlmj7gnfldlcxz3m4ukochr:addItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Benjamin Quitzon I\",\n  \"error\" : {\n    \"code\" : 79312131,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptas quidem facilis repudiandae. Dolor qui amet aliquid quasi. Qui dolorem consequuntur tenetur. Voluptatem necessitatibus rerum quis quia.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bec7889-087c-4b36-b1e8-01960b33923f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:06.622149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.addItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}