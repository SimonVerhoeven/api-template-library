{
  "mappings" : [ {
    "id" : "9724efae-415f-4d81-bc0e-9fac44bf80e9",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/6ks792kcjji3tsycm4e19qar244fbhb0pqbm4ard0onk2rpoje6xvbtfqdlbh9lxltiqlc8m1j17yazqdgh8xfiuq2mmsqlhk9axxwl4cs1ou6euio7ig3g0p42phwfp43mhotp7vnjth283mn:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"trbdvm18algzqvmmhd59kij5fttj67axwdk936zzeb5i5o3bb722j3mlwrc15avvqb2ol1wh6kx6id8ci5ex4tebmd8842ll665ofn0kg\", \"1piqgfvfj1qlpm8wlz9f9s5smfxbqkgrlxyj608g6vzk788vnbhuju9z342js5wvxizp5cmm98ue2ilglq853hd4\", \"c1v7xoavbzxym9f2mbvsd33y2j0dpmiu7rr221z5jvbs19092kshk5h96zy98oecyl2yt1vxwxinip\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9724efae-415f-4d81-bc0e-9fac44bf80e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.300435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff9b740d-dd19-45f9-88e9-3e7d7dd36f18",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/2lpbrbrjptml7og69kekfqdw3zvgvgtc3g0gdb2cspzxrjgg65yznm9vrtplm6b3lsxw6tgi9h74pgd3vv388lrtj310tr4xdc6icnql1b3jzquhjxtsur2i8rbbyzvbbd2u1x3uolnxcycks:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"wjrktneib08a4c1me26x97w2gyy07oeuvc9m\",\n      \"description\" : \"Ut ducimus tempore ratione fugit et perferendis. Quod assumenda excepturi repudiandae ut et ut. Labore consectetur aut omnis asperiores. Dolores cumque consequatur amet ullam. Qui assumenda consequatu\",\n      \"location\" : \"qehi531pemhm33\",\n      \"title\" : \"Consequuntur facere sequi et nihil.\"\n    },\n    \"role\" : \"a0ggz0i3\",\n    \"members\" : [ \"wz7fqhe22n99be4xkqeuy57yz8kc9e4lmxiayydkv59ghtvbbatao07snli9rcjsj5dhnt08ba1hk0owuasdywjipryup4jf2q29qehw391baxraai47eka3cdjk707qw1ad557er3xgqxhzvx10azobm4ngq90uha1jqmvybw1ywx1j\", \"lnktxm81mgxa45jril2f3mj3e5oakukxh3v4eibs6qjbmbhf3yie4ld\", \"ebp9yrnm5pz5lkmkhe5hj2nkqafxbssumqc9qjlxlhbyd9jql78ts3g59dybyg7xby3pkfqcno9d5p05nz12942024fwkcs9vq7ht9fsmx8xx7pun68uu8xq3j8075yowgz28dmdukoa8na85bis9c5vzn5nfaunpr7v6a0nzhycbvqxa4mxknai62t6dolu2\", \"f3xj4ykk0dsj8vjdz4hkvzkfad7\", \"e50d6rq5x3tkuiofyf4naw8qd2aav6ump\", \"g8biakhs62g9343oleaej1vwpe61izxlvtzd7e56e5fup5x6zjaq283x6f1178ds6a1zxjngsi99hmsodailplkpfg21wbqjnxk1hsj61penos2bx5fgur963ic2dpqcotu5i5nwqui8d7zrsrrenv7ircjjzlus66imshc2225m\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"wbcym7zz9moro99ho9x2q0u4hrvagrb116pybmtraajo19qwvynyyyxyyan87ytjrjb7n02lckxpecp2t4u6c5mknxbb8bm16i6i3pgkte130n166abgg9l2cis2o51dbwntfkd9omrgrpdlf04mx8i76jp1r\",\n      \"description\" : \"Sequi eveniet voluptate vitae hic voluptatem et. Illum quis nemo hic id. Occaecati et aspernatur quia iusto ducimus non. Architecto ratione vero.\",\n      \"location\" : \"faobl4prusjdrw6fcj8v4xd0v929sqj48495axoa0t0zrmfn74blt8a5el8f1g43etc84v6vc5g\",\n      \"title\" : \"Inventore et ea id explicabo exercitationem.\"\n    },\n    \"role\" : \"gku1suw82mc14980lwr4ngwt53avrpdkmmgj7tt4k2xkgglxtx6u40wp023zqz7etn7ef0chlpvd5p5c18ks7jk9ock2ag2078\",\n    \"members\" : [ \"eug8pv2o832w4nps3f2yt6sxgbnnvv3uj7t0z5r4un7ird8udl9alee7pdk\", \"r78r0xaiw66chx8ppop0mbw6mzqi4z3o31mpin9s6i73phfugnq14e41do40jw62mfflhld1byk9nxsi3sk9d7gtd4cndgiyervvx6hhwm4qzqnei\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"v46w2v3eaaghxf4s463y7cfin08rt7izzsvadzd837ufyjl0dy4lgr1s00ejqriva8u76e4af0rl8slsyjmdw8a2d3hcz2iw6nzyz542vxkrt2qbj880feq5rn1ywzqftkjodctx1aljbcxy0j2gdatxzmni83yrm19jrar63fh7a6m1abhtx7j9n7uv4m9yph9xiv6\",\n      \"description\" : \"Non aliquam nobis iusto nihil modi nihil placeat. Alias quas labore quis aut quod suscipit asperiores. Aut aspernatur veritatis ipsa. Officiis iusto earum. Omnis reprehenderit qui dolores nihil id iur\",\n      \"location\" : \"qpg7lq1hltzfck7cpp4ufucqhd7jp2c6g9vg30rrwlt7aa1qimqsjg29rizx97hxarkon9ikgg38k7pry2zbcxitfgo5j55q07\",\n      \"title\" : \"Exercitationem incidunt facere et cum magni sequi.\"\n    },\n    \"role\" : \"k31hez6jljuycelldf03vbb615dhlzudli0pqnh4zlxgjjxoa3cn6tigpmznki56c8qlt9p40soywp0nx5981mdngt0jc49xbr04pqjg9pglz06wctgyr60d\",\n    \"members\" : [ \"7czuyibwixdzqty20yguq5zk5z2klogp1txmd3dc2cfwldiwg3t9illf2amgsu38sbm5068ccphg109nz8gpoc83vy4d\", \"lqt9rue27wi9dapj2y1zckdec5ztk925vdcb0\", \"0ofmebszp4dq6fe0wb74r6hhydr7pooxyfjp57npbsm3fstcc91pwlkarzv4d58v919hthbe7w6\", \"cg4ehpiez8ecfxf2u2ckho9k5t8vl9kkr29rt24o67ob8t2of4lxcuvr5t1aeaaxk9oxp1rnociwo8npt2rcyvsqmht5aswywauf7af7uksyuy3co72zcdpk1i6sibrg3o77pptkrz2jy09hsjichfteq32nv4yul0vrtmcj80c5o8ypkcvw1xsf0df5k5x0syqg2u\", \"16xjgt897bf5g3dux9xzcjxf9usck1ip76d1hdg0gk0h05zdxn0867qxxytda1b9xik9dzw3zwukt5adma90ec12kt8zwfimw1rjenfyvx\", \"qye3ie5kq2w6mllztehyrffvaxe84\", \"3bn9xos9id8shnj471rl3s7umnmcrmce79e7go31tuw7kylqz0qdgx56fxheqigpg2qbrjy7yyjpz90u6j45aq6rw980rgr8fkrcis52plrhjrs61l6cigs22tcjyb9lfcmqpnckis7jwppwvsvn8qs6bic\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"s6gywlqwqihja80iskteka7v66d26swrhcs\",\n      \"description\" : \"Nemo nisi beatae ad occaecati nihil et porro. Atque nihil possimus dignissimos qui quidem. Similique occaecati facere. Qui sunt qui nihil.\",\n      \"location\" : \"zchi9j0qihyju5r7sjj4gggbedmxbucshsarza9sbxua0vybho\",\n      \"title\" : \"Incidunt quod consequatur.\"\n    },\n    \"role\" : \"m3p8fywgwr8mt0iast8\",\n    \"members\" : [ \"uyxmv6shedwtde2os1hqrklmehqot7ttydb8fdm6c029j3w1fekcadc0b9xrqsy25prvx7lyqu7mot2ep2q78fwi55wk1oko5fgs5mpjeepsd0pqkir0wnzkdy3vxzvjzaa24t4n5o2vxk863dv7jt26xn3aa9a8wq5bibck4damlwyca8y\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"za0mp6wfov9r1mondu3q5orgg1yeem407285smio5rto127f3s0kjq53c7pu00vd7yf0on25385583tf1gvo0ivrn4n9u2al\",\n      \"description\" : \"At repellat debitis. Dolorum eum nam recusandae. Qui dicta neque doloribus consequatur.\",\n      \"location\" : \"xtrig8miuwvbuyqzmeckolpmbpv6b1lrmdshhatbni7z5yfxgdz00uh9drpqc0ykzzly2ejhjgf81501p49ji337olfy0plhmopcfwix584g6gn42jjpqkm6m5pjijsnh25vf2g2xow27yueimnu7m0g59k4jr55eirkupqas6r31w2\",\n      \"title\" : \"Eum maxime ex et.\"\n    },\n    \"role\" : \"6ddp9r0zcz85h4p3473cvtn1m1zpylbq5ajm9mb13er88l14uscx8\",\n    \"members\" : [ \"z97tsm50h3bw7qmirxwry0wn3uw1p4srh3b0mh0igu34ipupiucpcw9gu78wbog2uypmmi8ckjbf9nkoz9sk7noj9ukhjxcvjkxvdhgmiopqwgwsu5586zawehqb14cuc7zjun5mgvjdthd0a1hhqcveqtwwww0dtgj2pzrrnhs1mhs90sijakqd16gfkh\", \"m378h0zivoozjp39syczkkvqmbxn8ptgrcii3ho1m2ncabzlkpz5181x3fzkrn01fha53lk2qw5bza7jxxdm12h43hix40zuy57xda\", \"0r5liwd2cnlx2llb35zvpu8q1fo61qazb0dweqgp5w954ylz\", \"oprat4pmwcedmoyejr0ahiutwznzgphqimwkg88fpjf1t2v3zavi1sso4mc5uwcigtj31djhyvibf45mcfqp\", \"anmxamik6ke577irhp19qnyub6ziu2byks8j84kue0p7lt5460vhlgsunumgrmrmvuvxmdvon2uyt7ecypsarxq66ieuruzsxwf38ow4cp5n6o6wnwgrnsbkjlh3ihrgi6gevqm4y5qh89s9mu8hxvn\", \"yeovrp9rb9o7bjn89tb0ix01gpqpzdopw40emyhcxv7vse2g6ha8hchxw9a542612m6cfb9cdqw2em9\", \"o9wwkx1fdbqikjs\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ibfccgadvh717l2irewcp2yp036xxx5a7lxsky65awg864vs07gxco029hk6da48lc4rb90wq5ngl7\",\n      \"description\" : \"Voluptatem quo incidunt velit architecto dignissimos ipsam. Qui quia error harum. Ducimus dolorem dicta qui dolor quas assumenda. Temporibus quis culpa ipsam qui.\",\n      \"location\" : \"cyq0qc7nxj0gm2dipajw95l10w6u5imasofd3t9hnv7zmldb04r2kh295ke6mrs0sfflm02wv5t152u81i3l8t5jpefw4mm5rs1gwmxewann37xx4jndwx8m0kiwkankn7ouwi0n\",\n      \"title\" : \"Illo non hic.\"\n    },\n    \"role\" : \"41u1nfkuicacixkcg92j3qw72vnqr7qdbqkso2dtc41evm2p9m9vf5egj52nzgq267ktnkmlh9lnsitbgl23a8woc786w8ejz1byoloinwm4i2i07qhw9sk05cl62p1od3jt3hj804g5g5xeg\",\n    \"members\" : [ \"i6zj745g2aqgtkx6mk2jdzw0gmf4ci5ysiw0via8eiv4k5zhjcowfb7k5m1lnegy8q4ngpo2deeb88or3xgp4m7scceapolf9mdvx8il74yflkm3jtv0jew0vyezrqkwpi2jjcqic6w90h3qvqrf0ttrr258s00565s5p050o5i68bozqh2pgri94hotgw\", \"c2290yx2bw5pqi9o6r16xmehqqa6123m4wo9pe58jhn81mrjaw564hrg84of6r3di876mw4totx545p\" ]\n  } ],\n  \"etag\" : \"uuuut\",\n  \"version\" : 664975411,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"l6dii55ccr2uojmijpdzw64s9z9w\", \"7hy8mcjgw84si0f66ezedede6l6e07bmda1l3mv10vioy2gta4x1dcebxctflou7grjqljuf1r9arb5m89xvzb\", \"ww5cpve0u9abxr28vjm3tkt5ctemp4jdl1fvcm7ylx1pm8916mxyug5ck5kt3vbvno8kccnu368qpfogh4uk1yqdpjekg1hdvcqt831vkf58tumy8ztq37bqvkbq07t4q7g78iylglbw73c3vnnqbmljt\", \"tjqlt78a5v81tqo6hvftwwiuuj17bmjgqs1pkl82ywkqaduqlizvozf9cd6at8trqtgp2vne42jjwqkqsuqhlce2r776wc0xk6833xedcsvkqzvbx\", \"yhmhl7qowf7brvxvke5ltycauvzdtd4c3zo0hu7nnkgqaycmkqmczb5ymfi0cfgavlyz4mcnfgeq5vvkm9l154b2iro6wxmksd0iuccfviqzs3tffnj4ccqcpnqky7mxluyq78zshd652uww53gazsdlbwjk2jczuce2axgep7xtc3m\", \"wtrkwz5bsmgen42bo4e1cbaelxzvv7duje4qsjobhbgbmxdgrza3vux9b3i6l24sw1wq6y6mmub998q13m7pyilpaswpuc6ls8s7419d97kk0ufrnje17s3z7lczs4ogd\", \"xm7pr6ovlq5gbd4wgtwu3aymrr01x95z5gs4zdf9tqkkv2z3aollhf2ay9bsygvkdecvlht417j71klqd6xhwfyb4ivhrbun8dfm8dwm9xi3a4avl2uuixuv3m7l9x\", \"z0a1bhmn7ns0d1yv2jr0ah5ghgb7uxh34n1xj8uzir411pqoubsdp012k4uwiguhc558ixogs5eyppl7aop6cwabkzphs6wuibb980whfbwlhwko38u31kfmhyms\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"11lu3v85zz8qkq0ixfyz8j5wph97e043adx9jl3oln3gaof6pwt2nc8p11hb8dtkvzbvz6a7sxay7tc5cszzf61\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"erc0kukg2sls88br0ibi7fds1576usvpm7chfd9amguusrfhswzw7l21ww7xij\", \"vpbiowozpzkj550ez74wq7dytx1in6kxsxi9qakbgqlropyrg62fr51qz4by0otaqg3x0ahjoqdg\", \"t17990tvid5g8kvxscfns07u2xulgi1c6j6q42k23fq8h4j8prz4to2gweo04teh4acsocskuoljxoipx4j5hhachfz4or42n2oolqonefk4nk\", \"u0750dd3cj0bopqiebdekcn7i4h6nawqjh4n2hcon\", \"38kknlysux2kdf2s44u\", \"l92z0uesumyx5k49v0yeksigimr2xnier1kgg\", \"621ofa0ccjhk1f19sbznk2mxirhtdcxc9t7siin5fzsulivtiksi99ps7eebl1sm7815pgmr6x1tdviza3gd6kkqjtr9ebusedki20be7a7et3sm9azdzqwrmwfelq22lqzfhtbxxw3wlxis17kgun5ikjbye578clf5z4ul11vzoisf4gf1pof05ampcoutr9re0ks7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"fd9apcf9ggeunw2zp71kuc8vxqmntzswz9rzq1kslw9umvmczu3b3phvcjde0h4n3s1sbrmt7fmyu0kvkd46e9793egbzb26gpmwpivjjnlxooukuu8js0cfs7xep15e1hom8qeqcm78w9z4vn1k12x95d53zv9jfc78czejukk0ppz2qkc7186etd\", \"r8fwzjkvgn9s9kuisaxuz46un5uj7zp3k5fnrrqb306cuohvz6icv9deuayar44jlcxdkhwz7h27mfh4n9j3k28fjzjnhyzuxgiq5urm81ln2ekmuworpfwhs2qqsqawa7k6rd6d67nmq0o562tsuwgeo1\", \"23yonmxj23dmwnqvy0irfxyv4lwbbtwzmyr6e2plwymv75ito0ve0kw402r5navu5tlab25cnmmayviqxtjftmcd7e4a4nd13ysmd9qkmqobb68hesnuyxelsndj3631x7aqqtqdmu5dfiqyd0zs3qm4vfq0iw882v0jk\", \"1kim71zpcjbh\", \"4hrrj3c91g49i3l019uee4syeoe0i3jgw2ugqesypdyltgarauj0bfutpycz4xiz1zkkm55k6q1xjg13f5n64qajb8pk24tezp3y4eaci1dgfg9mr3q64mapxtuz5uoqlf\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"tggnvvbydd7pbz0diy3dh3geybxq1je72llx8y4g3ldbjuetb\", \"3i7vokvliyaoxpxo2zjqfpbz598x9tjohw8gegi0\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"2wa1inu6j96o59ql789dchkqirk66u8tu2i1istwrkuvpo79sesw2hhec6tlq6u7hx1smt91tl8bzdzn4nv15hsjzpuq6yblp5m7qo9s5fp3a1vexquvizeza80ryqgi31wtuveuofddzy569413eln9ui7u0282i9oc64fdac83028vkwk\", \"y7v\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"vk6jt0qvx2b019fhtfrqrl5s8lq0i4i7rtzz1h5rw5fos93wfzsyit989k3jenf20oqilqq4cz6k2wzqf31ohdxsqq84mya89yyfasyjmkjz195m6092m7tj6le36it36bro5wzrpquaugr1zlpa2xputaskd1uv8q7brdy51z95o5bumv1a12pzj0z\", \"cew2kfeqoyoytqy01bmvzx9flw5m7gouvq0r3a3tjddng6wn6swin3lsx4q1eo0zme8kmcuww7nlwnazqa3ztrsfsuqf0bsszoz90az9fuh4k4upclv5wfv9juzczkd84\", \"e6bqvqw4s3i56no04uylbun5bn97xd7y4hlsv6g7t2b048v3okqzryxz6w4cz1kujrhmfgqiblhl7kkpukev1zci0kftgfuvlyptg9m7qmtf3ks35\", \"g48kf5tdmq37txcj5god5rt5ho8h1\", \"l6e1znn72swgra2g4rmyvo67wqbvt24xizpi6n6npergmehhwdul3pei2ynscr6qfvw28jlmp4sjm\", \"7ww943wxd3zr0o5ph7auawcef24hms804t5jqxa\", \"ppmqqwv1pm0847irslkhfnpfy3bmfznxvblpp31ev14nvjh1bnjgprg0148k0ajt33y5i15fryjgsvzokt37u0f6vly9mk10jr5zhvo\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"dj3z90bscxkdinj8t7nh5016eo\" ]\n    } ],\n    \"service\" : \"w4p4e0zfxe9oknku3f3xc4ovglw5ecgys792298vrkbhy2g5ea0tndw61zkepw4yvcbp9zwbddp05ywnuilno9hfhh489x6ko3wosajx3m619wwqi1i\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"20qqqeovefcmfb9yoniwiqtqe4s50ogpujux82y2ukf6lmj9b15hhyhbvh9yt7rkd123rqhwyei9qm06ckay7s1rm18xv9677355lvitapqmmokvlecdo4c08cebibjwgi36rkm\", \"oqn2cw4d3j06i0wxzagps9tb9gutekciqz3ql7tohmh8brszy5eyk5wni6789052j83pxsbt20zli9gdofl4ec8s8svkoc3vwbzvhioqx4aa5eys6weaijzhh36yliv7k8m31q3mfyp66pw6zo9hfxqg467694nd8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"18s4lrv64dqwpjdzv4unhw386x1hji3yctzvajbbcw9f5bbof6hd7et5n699pr5ppvg9atxkznv5m7237l1rmdw066efdi1cldn1ll5i6ogbaarf3602isehesw97mlev\", \"fvta5d7u1rebuenfr4azsn1o1k477fmhk0cmu3yoqpf8wm3czkc8rag3a63bh1l9szsut83tpzu286m28kiradtsl1fcvgubix89crcrk8z9eyaapgurf6zr119lixxwz9tzdhskaod0l2ey\", \"cusmszunse6mcuc228a329zxvmag6lq9zdu9cluxvakjlku58zxb13aump2xzpf0di7pp1xrraas63z7nv0znw65fmu5rtqyztl18trbmlvwc1otczf9mdzgytkc8luiffuanqnvyobhfgx81c3dus8p3c8wldxs2nuvi47d2m\", \"msqve1ssx4wqzcerz5vo81af291noar5kjuzmkdkmgmqgsxoa8g7x73xulxx81fmuvx6ej676kh3k6l907nc6kvbltw24jhxle0qsvcduu4hltr2xuv7pcgigemqoov91nr6mbaqdndo9hujcp954iwhj0qhs0ou5x6yigdhc3y8ar2facxs52el1z17050ad\", \"o8chl6lzpgaz0m19ylia0c\", \"oixucbl8y19e9gq8qrdwadz58ftcvqk11gubvebi144hq7u\", \"f8o56k9m5ar32dhqv8hobdsu11j7cnnrje7itpowputl93xghdytk8z42limgrwe8zutxn7u820qiekhj44inti14r3pvuia4xi1twrrenooobigdxdddpy1j83wxxymte1d5ez5f1i9o8pqro04ty69i7z3bu\", \"y42jxzftph06ag156zt\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5j1envdq81lvzj5biq1ojynwzvxe09al4np3pnzgcual3ai8yugqcdfsxvyvf11fr0oz5q2fr1gy6gooqx\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"lpkn7wxzewg7t0hary56hc0gbh4dbfxtnc5j1ayfk278dqc1wvqexpncz4qzhh45o8gbt48krdxekwci6ijg9o5zijhrf1aw4eo42eqiuj2e3bp91tc1mtoqrr9fqgvsojuair0aiax\", \"o351\", \"zleupiqeyms1hg3xo2m3txqq88t7rva8\", \"nxobah0k17ynymefn1pnkju06uiki4c7c5\", \"g0pi7dbf21ndq4szococ6xftq\", \"5gipbwlnhlmgai0k6vg5bok5h9i584jn8ec85fjh7i3xdslxtxjpb03b7p5g6eaep5x9oi4j2wgtyza3fimsezyewchkzr7oae3bhxf1rhgayjr6k2dy4zr7l3l5t34o37onyr1710qb7ozm46gg20z22jrys98kqqfs9\", \"kgxbd4rx4wgseg64tvb194nouwvw4plb95wrb1sv89\", \"lgl87df7k0g79n1f64m5i13e3old3fae0bb8wyvfyq8kl2xxvczhlli26a9ozcrhbygk3uykr21jdibbcse06m8nuswo0iyfbrpaelabsnmw19dlp669nh7e0ednsjtzyfeo3c6yg60bt8hkq6gq9kwanbl2\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"0s9prcho195lnphypogq2tpkbcqnojwjt093w4smlqri6hiklw7pbwi9omxldzeg6x1ce7o\", \"l17izd8o4qw\", \"9q7vy8ck9ycehpn8jg11e8m010ic1m86rag0pbmh0of2pyil1js9nucbqb3wp11469pne27v6iatc4uhm2bhd3lp3vlf9swi76cpddvu7m9cn4ianmwh7nzykpmqzqeg1hvpn6viv6wtpu21sp2mp5y23joj6g3te2hv3nbqhgnbmxbqxhpnkyr\", \"o9uz9ut5y3jjg3wqdvksbb10pmdy5ne8i87med83gx3txo3vo8yzgru6yrgz5p1\", \"02kyqf7nfip7rfasjhu0ay8terud8sdjo6euxw5f9wi6ofqr\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ipqfdh6jvzb0h125upno40rau00dv1tsetq3dioerl5l48a6rbyvg40exbyzvqoteukxda0ktp3\", \"4tnt1kdiw2tr8jbc57143rzvfyljkxhfipwd5ntli2ob2xycco2yq9wx0gq1lwvt\", \"8pfljfkv5kxeez1d472w6v1zpxjdjsvjo69l6uqi4ti7bwv9iyosgred0zi41emj8uiqfc4zsd0kz4499djsmocvq703keyfbx893pnjoh2v310oq4sjkyn9a4l4lcky7ieq51dlaxi9h58ycwrf3dd8\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"97p1y3esc90s3wbms692423ffr7tj3tx3lhu18vlswzy9ncic\", \"4aeig63w7twxzgoew13rb2q3mpr03moebff344\", \"17l79ppf5pu31r8uohp53fs9izxigrbe6tk55aw99fftp4oqwgd1tydmg6mzqr0afdywv0o5ur511bfuztp98f9re8x0tudf10axoixohomkd4w1scissjpk3xddr2m8jkp7gdnsp6e19r2ykx4qxyvlb5zbe5bvasv3f5nn3y7h5w7z6t7wr09qzlr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kl5s8azlkrp8aouijevk4r6a9o4sol63d1vbk39d7sxt38w62tskfhl4ppyahlcpo4qlmed62xniejjvt89agrtgjq57r0ompphr4p9mrtyrvp2x5rky53ayeiajc03jwc9ts2sbxkr5xk1gx7iucb8m7y8gxejua9l6sezoenmo2qckun2\" ]\n    } ],\n    \"service\" : \"w8hy67iz6la9uzdagfdmz76d01u94ttbxf3b5v752b4q0h8cty4fuiei0166ubclr\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"cbvwr0nx2a66o4cm18yl5a8hq9q0hhk8ixpghzx11nomspbga4tt7bjvcaxeyzhf6az1kw63b4tendrdioh391beihqqru8ou0q5u0rz7ruggce65j2znfdlpnglmmt6ltx5t1y9tevuc6233nzckx34foo0xn4ecxe\", \"vntgi1saf5bhujzusryd7ucnnn6396qo295dgt6s13p5r8g3v8djij1cq2ls9bwppjpy1qvtb7qpbb08nnyupti7bzz360v9v9stzkdihbdtijgvch5vczn32wb1gp8vofr4qaqq71bx752q64o1ay0583t\", \"d3rzqn9ltvm78zkbjyxwpactzx9w1mblw6jewvn89\", \"ffl7w3iu9e9prhtekqmeaqlc5dwg0p24naxqezxqqeozjuhuwiv42nco0mm8ccp59v6f8m9fk26o7734ja2sw0hg3hgdqsi6j2hlu7kmd0bunn66eu5gzm8nqsjfehzg7kpsoq3bky9jpbtes2wnfopaatrc6p6zzzb0lc7uqumufzh8cdmmy\", \"lgtwvrbzht5kupxpc6lfxld27xenaahad07a4be4wpixqg697nmd5lg8adje1grhz88m0pjdsqnwpfy65fnv2lo8m88fac2lr32wft2iuk2zxx9pho3a5yjkgmu5ydb0qjuoekg4x7splqwtsz\", \"3e7wl9llfrug5gcufjuzejnmkcu31ufzyc07uq8mhtnx1b087wzzq32iz\", \"s4iyuiw0gp1e4jjo69r4mstpwe1oymccd38zlx5erqi60fcykj9tc2w87vot8lkjlbfu8uiguw\", \"99crdr1smm515u6hvzuhc2sv4s414d4pavmzgqvh04tne612a5ro8rrzyzinxoyegubdrmr1cgx5sg784j1zq0iwchyi1\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kqclrt8tpe8wl9ea2runbdu6mu4cviz1stj6udjhb86esyqvf44oen4p9kmt19n7bgi4d3y594dqz83gg09\", \"j7x2zno5ue3ulykp09k29fsrs2vw1hr1et5i0ai1dtdy0fb3wx6wikudz5ej3dg11irbbh5y04xk9un\", \"6q96ympmf5linet2ivz5bug37ewfsqsizymp48i9nufq90lpm8cr96y8i2zha5yme9dj38u\", \"ed1o67hjh9d90aa42bt0eok5jz8wirp1oouqou928or1pgxtqp6ksk\", \"trhrak7h3r1pcasrcpy4rjn31xbjchj6ivf1s1tvbtfo9i3gc0cm2xlo9kicf8bbead65w4wz0z4ud4fhprgjuihzufvz72e15jvq9gyru4rvqeenal01fx5mi4wibtqijx7i\", \"o3lx1jowhd5oz7v2ai3opaz3shsq761y\", \"ac9hpftmv4t7amxkjypdikpmpgoil9znk92low4dmlkkn300gul7ckhgmb\" ]\n    } ],\n    \"service\" : \"1ih0aaofmu0jj64wk6wkzn6tkdf3kwbetowlqyfvbatz17kjgxftf78nusxh38mer9ovb747qiwlma37s2oiyut38yesbk5gp19falev0actz40cjb5xq0l4jd\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0sy3w88c61gtrgcdriio676q96weuxm5h1dux6ky7lvahs7suc1rmb57ugsk6a30n9hfwsnvwtmijo14jziv17scd7jb3pc8wv4m5wcf25ed08\", \"tmte6rmviw53ztt49x85gapu4420qd9flf9ufempi2b314x019xyfsxjc9fl8cfayk8\", \"5kvx1cvn9ddt7ewcod6ihd239v9nh9adnc14m0kd2ypm8tomsmhea3s49gdmzx7127lkk6rx5vn8z8z8fp8z7y615bjcxvy2nu\", \"al1f2q58xm12npmafkwn8inxvo7xea5bzpnuw1dpj9blkm76a5jin8g8ffiysrwo9x4yp\", \"vnb6cvd9yswqw8x3muejehk0c4a5b26r40fr8azj2jbgjpqxu1vxgbubx76btos99y1venqwnvlww6974eb9hqno0teay0d85ogkbk2whjpaji2k4mqog9s9xe37i\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"w0of0dipesx290f65\", \"4nm7jofa1r7pltq68y6kw7oifky2ni3e6n4gpzky8r3gp5jjxuwrrwtt6pcgkl39i4iv8rf51x4nebbvsi6cddzdm5pczsh7bvr5algvtq199p3bg4vgxh8a3m8y99vnda82gdvcfkn7w91ji6piay2cfgixjur5hb1h2v8s7tm8w\", \"cawpc53vs50h18hk653wmsji1l9judasulowqcfclsdih1d30u86m19\", \"6yo94stdgoigyxyj38jec2uoqipii1d7oinmiqnr34px9rhw01w81s8fnrtkqe6ua4hyiz20nrnhvsk2w\", \"ezrst3vq1igh4axafr0yvk2a7eh2fpsiqvb8ki1kyezqcomc1uwkee3l9jbfsvba3f4qv9656cgq8njb67ugufpdjq9tgc04hqio1sfhnxbn7yhqu58cvm5roreh9b743hggu\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"dcterfu0esbdm6gtb76gv3hv3anl6ceu22ex9yfqhciragy4o3sx0n7kqbj0lo32pyyu2nf23bw3gwxph8nu99n7311fxdqt1sy9pwr2zdn77h\", \"ohz43gqy55csdvtq0nnhvhiijeymxw3kpigca6qb7t5lebdrmwbfkj21ulmwfac1cl309x0mkk0wq78u7da7xfj4ep9c3qeg1hwchvcboe1nqhildx5wyl7kj1tbwmpwoq5g5y9uoy1uq0u7eha389noiuxcvcwxl\", \"dyp1waa6gs0h3z5mf7ekpc3z16m5vqc5\", \"00mhepbytmhowmmpqly6syttt8lmks4i2cmq5a7xs144sopepuyj\", \"ztuhpcbwe3vvib4k3zez93mqwbq3rdbonqz228ek3x480\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yz4jem68eamf4w26is2g2okpng2p339xz9zbgq1ya8jb6dsbet0defx\", \"bq06kgw8pcclvxtov3rwyya5wveyqqunk6q5kmh9ea7qxb7m3sp7l83xqdts3wr8zt7chi4cfmn893svsp9987frmw\", \"on3q548eqqzn02iaua2f9r0ahrxcpimoa9ulceckfhg8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"pjanz1kmpl7rltcif4nq0zoexou9yhvqmbmrwtmwlpn5sbjsjuj434poo9asgz1gqkuyndak3wgn66dmbgldvnhr3i26zgkfbz0gchkf4lke0m27zlvfjca2nk2jkvg3a33bo4r3dxap5jqo6xtb0rqxxu76n2owj4o9zg960mexic4b60p0lod43k\", \"ayganti2zsrz88krwzt6623sgfqw8gcsci9q3ds6qkj3zmw4940rxikgmuud9m5j77e1n21gnskynu35u2s0z\", \"xkgmyy4tgrmvryy9vt7i1jpeoqey62lxqnt26fsopsvffd3113aikw8ov9agxpsaui3zy66y7maszgylpc11ybab2zdlgmgdfcboase32tka1f7dr2euq10f2wtqegw2vnzu6xb6utfi06\" ]\n    } ],\n    \"service\" : \"qkgluj14urhh1gndkig7j5otj6k6ni5vl16lstwmo5yv61x\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"b71l3pwpsn4151sbrswlktqrsgxgqnmfh7wxirput03qal\", \"zaj6hm2i4ke0zy03i03we0ik5cgqw89xf25zf0c5yvl8n281gjiduojkg3o21vewo18tlagbfke2gonbdk4hwm47o1eewxsw7he8o1fpe8ntv4qy3rkgoaiycaozsa5d4kl47odqtqi344otsoa6ftcpauxbe3vqfjntrruv6dibtqepuqznousrsg5s4\", \"3btpcbyrn8fufk6dkk1ea8ztob1rh1iydmtiyxwbsvyewfqm8gqdvuk0j54blvu9ig4s45\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"055b9za3kv7c7d33cgctds58yhel8d4wuv465z4e92f0g6j04y5il8kjb9ay1noisa01lsqu7nowspfe6k0ch4cwosxrx1tn3v88bnqjj62z7fjb6g6durp5zk3r68p4pstww8pc33yqr33t0fipzmn820tfxfyooq243yvq\", \"ygg\", \"d1twshape97cghsvjhq\", \"myqfr9wr1k99em59yw02ugapjxraoj2nvw7d8ghg3ntd0lhzyxpz0z7pxcnszde2uh5q80ejdhqeteiruzn5cta\", \"43pgsaqp4jaix3a73uuo1bho3ezrm5bpjkx5irqzei7nyu1w4zi4eqdcrkwoz8vevm5h45fydwl65umqb40c278vxzkj7uq252nbtbhmnpd48vdtmc50vvaohitmef66a04r2pklu8\", \"lvci\", \"hc0jjqa2tczvge9s85wjw2xjrg5h2xaak0wwz2ywow04n\", \"yo2wd5cs7bqsok4t7xn8o0lxvs71z5rqqydkttmusgljp7zpr7l23b7zaer6pz8gedrj8vdqvhnrxprapgzg7t0bg1ktc6pt22eptr5quo1qtb4w06dve\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yqesncpozr9vfefjb1bde6qfu6537rqzw3jax4og1g66ltuoqa4408mjfj0031mphx4zhuaajjhh5zzcyqjzuqwcbo\", \"z961ibv004dnocwr53u9l7u5hxgqmdgdr7hufqpy2y3fsdsquueju2bs1q\", \"gu6kn8hg6tr2l5hi7p88s26d3m5odey2019bv44jb7yt3rtkty37o1ejnghps9jlq3vb06p8\", \"16h7v9oy6s9qmc49jd7jihsjjdszl00rjvss47fidb5jmxgsu8h9pky1qpn56jhp0n3rq8g7st33kbby7z2es4cwjz8soofldiufu8881n9m2gh7my07vtib3mcrjnn5ibdq9zqqq0bgctnwe6so63liqum0ng8jz3wy1ly3rtfo4n0owm2pp6opr5ol\", \"i75h0d4v9lhppd5tpvo7q3kosg713qh11uwh4a709jhqa3vmotu7q1w5b21xqapj9gxhnh0p811s76vdqs4oq8rsii9lvxrwatepqgf6gzmm5q2173o484yhsrrcbuxpk4mh8qvsu92uv5s7\", \"ezyijmlqyr8r9xxq8wdlzbywkpa5tlmj1tp9pjdn3vi43enny9hj53utqsvh69v57t4b5vripbgckrc7a641vgf3w139tgxsi0v2vawofq7m1586485zmqstg0ny4ho9s6a73svzmhs3tyspjy3405izrsxc985zpa9y554xx89n0vnnwxc639gmchm37tjiz54vp\", \"gwpxtn0znaly5uh651c9rclsg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"233cq3rwjwuiit1r3ynza1iymqb17z\", \"4mqko4mm63th67y81nc4dcmev0ez05qfcs6vc26li5nlqm7yb86fde\", \"9ctmzwgjn7\", \"nxkso1d7\", \"bdfynvz3snv35916dc9qof7bpseyn35ekodekummmr7hp6\" ]\n    } ],\n    \"service\" : \"xprmlsl3zzhtlkf4jjd84nmg5s1mw52le2wkd8rdmipybtotlgy3c1arof3\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff9b740d-dd19-45f9-88e9-3e7d7dd36f18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.300281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1c6d3c0e-a82e-4d6d-b37a-28c3fd6feeb3",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/99b1fvg82jmt4r8jxocqi5bka3939kft0tp7by2zxpa074tgcslc5r6ci52b5fi0nfmnd:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"rk9mpj8h1coup0zy6si9s53k13976opbqbf0fa76ohiclsdsv588fwi4igwj3ckt1q32djumo\",\n      \"description\" : \"Et quo vitae aut rerum doloribus. Asperiores commodi aut natus voluptate unde iure dolorum. Quia et sint fuga assumenda.\",\n      \"location\" : \"5wsx1wjnhr04\",\n      \"title\" : \"Nihil quas nihil asperiores.\"\n    },\n    \"role\" : \"idq51rlezsb0ioxzzasxzvyvnzq0iwazpu0\",\n    \"members\" : [ \"r0c6i13bh2tluk524h4x887umyyct4wmm0k3ov4zsxwa41rf6c3725fx\", \"x24xef53fzg16nlstvxz4vxsb0qskoere02ux1sxfn0lpy06vz9j12433qa8bmkbzvwipjtac8haib2dfltly70o530nff3qahp2o5sfc6i7m1exn1wf6g7e5j1vo\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"nb10h4j5oemccvwj3gu1879x1z5sdidnt25an6cf59ej47r4dvqntsh1h3eph2rtjh8e5jhtnrmoe9ubwmx9lh\",\n      \"description\" : \"Voluptas accusamus facilis velit distinctio non. Quibusdam ratione officiis ut autem. Quidem ut facilis mollitia sint odio nihil. Sapiente illo blanditiis ullam consequuntur impedit aut sunt. Vitae di\",\n      \"location\" : \"gbw6zk23sry6dh70ses1rmbyt0wbcp28e7555js2d85gwgomcapg5qm2dbd6rzfr88rqdqlbpkeqaxtgxhxgbyrur9jn5pyo8p1ddbrbmdmi6h8xmqsbc96u3ehc0nkasnme8pfla8vtlb21wai38\",\n      \"title\" : \"Nesciunt sapiente reiciendis doloribus velit nisi deleniti.\"\n    },\n    \"role\" : \"cbll3cbyqt7en7vjeilpvbeloevik7jy66byd85rph228o2bhqubtz674a7h94du6gxl4a0cvyn9k0vknb343f2nl8f4s0fgb1wdqtocwealnaj1k4iktqkhacafg1xh6kwyq56w33jgg7xn6fs78wi8fuluhrz172pp73l0grx456xmqykt6qclyh\",\n    \"members\" : [ \"cr5fbje5nmwu21wn07onyskvihxgtkv19kfikxw1iuop37\", \"txt1n9einfksiosygbf0570wi8ty1533yl0chk55hudsqi9csdum1p5rylhuyz\", \"ttbtiqlu6e0sfzcyj5funntd8xfwyawj4rgih1mj95xwvj4qf6yj1tqlcho7yvkpdm8wv04776rmj6xa7somchpeqwv97af9huji46p31p9ub6v7r62hfue5tk10nci\", \"ihda02869x5mh36376la87m5dafrjc3auvauv65jnv5o6yjqdx4nsyugnijf4awzawvmq9kdzmu2856ihk7r6m912v9mkzmsgz3icn4jd7zqaxcwxhctmrfxcm57a6poz5ayuk69p1zb1dpg4ye8n6igbfcoa8dceq8mzpe9r6olsdgp5w\", \"vk5zukkq8875guyni3h6n3dijpn04se534g7eglehkwxuqic39p21eeoopj5q085av99zai1ucw0g24pc90r6qxw568znyf8jl9lkh8u507fhnv6a2hg1zng8aj70ipom2b0eeoe48m9z0x2fg953a4xos601djqjqb\", \"gsccpn7b6xbrkm8dtyxgks2mgddjbtvdg4ot6epf0aymzl1jnvzfi72wuf382g92xfo3vi08squufhxrgp9427ittf0ojd4i7d6c7gdiur1rrh88foxnrh9wnln7jhst9qcmqu8cii9tfl13ecqse8wmaollte84dlxf5nhfcqdwgp2vf4wje4baghoyefxjh\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8yeu7qky1kiyrgl\",\n      \"description\" : \"Vero repudiandae quo veniam qui. Perferendis eos qui. Molestiae quia deleniti.\",\n      \"location\" : \"r0jcdnk7ex7s424a11tq0gmu2ec6rljma0lvfk5z131k9qg\",\n      \"title\" : \"Voluptate vel ad laborum dolorem illo libero.\"\n    },\n    \"role\" : \"0wfoeg9kfa3af44h1orm3uqxjnortatxsrygw6win5d\",\n    \"members\" : [ \"8s5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dfchbhvw5syupkpdkdjr3torprx73rgoow\",\n      \"description\" : \"Aperiam maiores dolor sint fuga maiores pariatur aut. Libero iure autem dolore consequatur nisi expedita quaerat. Blanditiis sit magnam.\",\n      \"location\" : \"77iy7bcdhu6bsnv6jp5ou54931j75mxvgxho7gz6k8vli6dw9mop9rrhhmqd4zl47u\",\n      \"title\" : \"Saepe ad commodi.\"\n    },\n    \"role\" : \"j40h4l32jx6hsloaor3ut74tsiy50fnghybm8lqyzpt378h04j8s9fk4cc2fp6clwxkhh9tco0ve62ncvndlu3nvss7pcu8u0b\",\n    \"members\" : [ \"2g0uun0hyex7utmg581og8t8bh2117xo74wo88nr0gi3b1x2ak3\", \"tvo3gtrr3pjxaeougx63glmopg8z32a8x4q104pj\", \"7erjl7pzjp37qqj7qkdv50i9ow5corueqk2r9nbl93ct6vdvewhrof9p6x3maevx94asklog140wan03lh6uxqa04fxgm8sp5qnagr6pis264qvlkh147qi4eakbhac2re652akgezqf2lcaldhhzbybpevajfec5c36lh18plx90kpx6ybyh4lyw7\", \"1hxqrr5ucfe8ugnd428akn7w222nb7eflckjiz165fbfs58c8hvj3jlqwm7am617i14ljsha43e1hpq9wd5kjuiqqbos634p159xrm7mev2lanvdr6p3fhmjlb9e8nw96ceu4qb2fblfp7nz6wh2qjaigkuxio4x8atfn33hir5fjdghkj3sm8wegjuw19gjfrgect\", \"q4tsuhydcggfx7ry\", \"769hf0ex8chf9shqo053johcroh227rw0hghwgcjamwyvmcjbggv7jg9jmp71m8uicm49ee5tp55o7kcp69sbe\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gti68wh6n8a19diqkqhckm8mv5b11abjk9dzzmfzdv9dt5a7hmpxgrfsw7g6scfxfuqz86v6jm9ko3zyqd836bj6b1pggy6w5g9guc0w4owrurdqpnm5dqh18bmccxj0eu87peg5ubkg61j85zo7yg8kfdcwxkzmd2sw\",\n      \"description\" : \"Modi earum soluta corporis praesentium minus quia sapiente. Et numquam rerum numquam. Asperiores illo et dolores ut quasi. Doloribus quia nam voluptate. Hic nihil tempora est quia ut qui.\",\n      \"location\" : \"e79fowmrlieowftwyw4i1ll3rne0zblyngvhbjvbpbupvven9fsdbrbu4batkia1pjq51lo50r5n2ug2\",\n      \"title\" : \"Debitis quo consequatur molestiae consequatur qui vel.\"\n    },\n    \"role\" : \"4q4xvxpbhncddgs40gbynz\",\n    \"members\" : [ \"xj81j95wuhfjl7rk93d6y5l8p9j3egrjnx9a0qyn3e8bkozix70yfm8ocj2gqvbxa03p2kdhhufmh3wqnn39bl02zlv1ty5judbmeprcera3w6grdh57\", \"s7jgz8twhjmvx5vmaufsm0ben74ejbvjsdfgjrfv0urgodpzrnpu1l289ocs87mil64p1ffdeoef166gd5az4y8fg2jan05rvmmbt4ofzzvtpak65cynu9pxfu24a0o2f5hy0nmom22cxtusig1m1t5fzkxyau4l5\", \"e8b3bjobhw9s7tfj4bxfqnrtxvv49jyi6wevedqcxyo1sqg7y5dohe516kgutbefjibb5vhlnzmae63hoyov6o9cm87kj7937oaehn8ursm423n09u0chm01k4yktfvuv23mkzfozjlv7rx0msn7mbh0yjq26f98utqpkp\", \"5ugkaim7v1ldenhvyoff4n216lyo3y0p4xjs19smckswybgmvpazt7j46dl0vy68p1k05vcf869be5qhdt5wy\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"rvezgss365qdrqydvgkjm2q09efr9pvh6vh7gjylsb2glcmgvwht2wxsx2lrwt8d01dv5xi06vstj3d6nwdsyln8lfkla\",\n      \"description\" : \"Eius doloremque quae asperiores quos odio. Sint amet iste aut aliquid cupiditate sit. Placeat ratione consectetur dolor sint quia. Sapiente ut incidunt est repellendus. Quia iure corporis dolorum.\",\n      \"location\" : \"obzcg2h8x4nh1ekmdt6dzbv04bdlunhvzz0vzfg9fdy7rd3hl2kzgebjxmvnt84f2y8q78uv5vqe8t1sjhbzt6no5l8k98fmb68bpi2c3flpjyrjp28sd6r\",\n      \"title\" : \"Laborum dolorum optio et illum.\"\n    },\n    \"role\" : \"9ieefwcjevf8n16\",\n    \"members\" : [ \"oieegavgotzcf7lcdqhxhh57zfhjz8rs0jq32g4kl97ae0svdoayh\", \"0j32xtblgs7f5xmn2r4o4uxyq1sk8ri\", \"bm4k7j4dmuk4t0ax0tlsae0lh5zxvjf8yh8cknsjnc361g1k41iqdh64mhmmybjx9yv5uyxh2jah1om1v18mm60abbjd08srx2x5zxwzu9l5ucn32644vndilvx35c1f69amf3o7tz56f\", \"ffgr8opnteztm6edkq\", \"j9frwdd04073548xlz347yaj7h9jucze8k1t3m2ahtrhx3lpjp3ozcy30thfyuecozt8gv2a361ddwjbbl0ri5x2j4ybuuc3sx28fnnu5gujv12jg33c5v9ctxo73pxhc25wzk8jzm69\", \"5km7pchswk41dd4snfj0csaxxh3dotwjrxlsduk3n\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1brf8mp6j2h0qrjmbvbzmp25ia72l5y882s3uwk3skypal3aobh\",\n      \"description\" : \"Debitis repellendus iure accusantium repellat debitis repudiandae vel. Sint non et quae error. Velit illo tempore quidem assumenda.\",\n      \"location\" : \"emkpuu5xwq2cmhrung19suwayex6f5nuypw9l7aja6orilr7mf74vrjtyqwpehn5fohwzx1leboj6rx1p0o5lfx7nyozka3zxs0otcvchys8wacssgmsx6agdhg82q2olc5rk4j\",\n      \"title\" : \"Eum vel omnis laborum.\"\n    },\n    \"role\" : \"kdyt7lyxbbmlktrlwvk2ygt3k4spg94irxrdhg9dmynkmsm6pa4n6yqp9ltfkamkbt0ch5427rha3j8qxx0cectbyqhnu946gmuu6ll19x9omyvwottzpb8vou997u6x2csm4hyse95unt4\",\n    \"members\" : [ \"27dc72elvbx7edh3hd9tp1yqlo0u9ndvuiv65c1cl76ieum\", \"j3a6trp4of29k00czbpuo0a90e0axfi0nw3g8l3meji6cg9g4pi91be26rm0q0gjqr\", \"3ktd2vg4n94docjc37yta9h66ahtpltqyecn7nj89fgxj7o3sxvqdnvqcsda5e3a2g750kp5xqu7wrpcdoq76btufchm4yzisyjwuxp4\", \"hktibof0mg89f816jnido8agp3zwzynhd68k31hs5tl8mm1mmnysxy57n3wthezosgniatykensn5eutr3d4faifps6ee99eppbe4qvi1iox9uax4mwhft0pexbikchl6258mbbo6xfng37yr2tj7xf4fc8kxpc7gqb2qvy1shr\", \"35eo2khko9nm0vlfh5oyx4a43krjpvlrpq16g9hiqdtod83cflosfz1jglzkvxikk2ex7vgogpx9fgti0ft2suedd6iqbcucrmzmafs23u41jj3t2unrz490c0v1gj5zi5cl6hnkwn0b5ofduua1x7dq31vkcsimw0\", \"ahzbkdjlbze8w8y1v5vkuak1hle7jjlawvr7bstgvgu6jrioaqmi9u6e4lffdkfr14y4zasrnxh6weghnsxm08l5nchbzjohy8at20m8w72fkz2wlgn5rjfozuvqaqt66jfznq42u9m9souglwpzawvymh\", \"1cirbtm3gzb0pbxcdl4zr1xh06103k0vn6ulp3ydm93owb4619re2vus73atyg6dyssetintmtairp0azmid9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"nat5srcbjyjh57ftj83wj6b\",\n      \"description\" : \"Voluptatem neque sint nihil iste error eius assumenda. Et reiciendis est. Cum aut provident. Eum ratione perferendis ut pariatur velit repellat. Odit dolores non aut totam.\",\n      \"location\" : \"asjry4nrkqpmvdqssq3zoon6ittgk1q1drz24fsc84hjdzqo7hn0llt6g69cn0qhg7d2d6d7til3u640gz49bozd272o7gryskyc1ukckuxlb397rvp92yw4371xizo84cpso7sng7kun5r5lp4t2b0ovb5fiuhnptv\",\n      \"title\" : \"Et modi nobis.\"\n    },\n    \"role\" : \"lwpijindbl1hg3qwctmhgbzvas6sdujlk885iz2b0ae2yyaljuko\",\n    \"members\" : [ \"97cv31cx0iiap2bltr3uxee4u4fdxxgnff8s\", \"fxq48fswye6z6fyhk2n2lhcjfawi2vmkcbmstnetpzs2y20ya62fy9ugyq4ym7u3weluc0\" ]\n  } ],\n  \"etag\" : \"eeeet\",\n  \"version\" : 2013094262,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"p1a4fm5w48iz28pffm969clp65c6q4fiugjvekkcaow3va5wdjf4gzeh0st66b3fmtfdfsbgpv9nf0j6gh57su271svnv8vii\", \"a9jhca\", \"cmeod9qhk31ohno0pkg42strw8564125qbjuxxersdkndk6xtvz8vrnjibyth4s5mpl5fdspxi1o47cutae4z8icz2h1fjyo6\", \"vmigwboetyoys6sahl479x5u5mjgnae7ruk11ps6hc\", \"yh0g3wxk41tforc18e2bftfp0gyqy58e8hhm0g5ohq0xk2lw7ppopj0nny5f94mt504oko4surktdu5s7dx0df2lc2x\", \"up6\", \"cwabyx7861s6bbrvqzqec8kd7l2wq515tucr6b59x6z38lzh6lm9dtj3opm8muwfjfexkf2pp2sovqfptijj\", \"3n44gmc9lws908k6j20n2782c5rzo4yto\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jvydft\", \"hrig5d76w0xyih4vgt7lv210ut5ebqq2tm7sjssd8453ia35p66xf9bsyqns20kt9p6xgozadht22ptv91i1367rhnbekta2px48sp297v9omtlbvynsozvncfk1ridjhw1xj63a76pcmnba79pf2qxjefqgke3dyk0jdk5983kje3rp66bl18zfv\", \"iokprb0ht0rrxjjes2z0nbx49yww5jti608cmr8hzbff\", \"3kmii40zcyqpa7b24ioi9m9z4n9k55defpiwox4d834w8u2cixwqt4mxmo6wuzqm8q2jrtc79l2yfs9by1guvuxo3o29qqd28btwiavin7gqdpeg0eex1nuazacq5qn006fye5zoa6nh\", \"p54ggssnbp38cp6q7dz2viyel4vdhkxqj82c0x2f9q0udb9aflwgvoci20g27mkw5eavezs0u52cs71w6xhaxynp0cjxlcamquxx71mu67jd70lr1q742a0\", \"so0p33n8yb5vgnzfey\", \"pdyp1mhrxlu8tlv0nvoikhxy166pom4tqo5w38fmqctfvm7virtcdol6u2erkh8e0mhyxhln9ej9a4lmdc3bpgrvcg8q4z4glmk2ri5sbchunup\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"3yr5c8oiccqvc6zsyj68c3nwpeysstsa9kllwaas5hd3hr3vgqx8o8fknr8j61010sl6ix5242tamm3ztpm352i5t6feh9kadn90uua4ufznp0skbdud9r94vmpdp6obj6yk0n7tqpv9n9o536h6afr4vx3tejky3v\", \"cdhafgzu9ohragj5v7xr7nm46nj2e0hymc9w78b230ro8hodlu2d40yf81d2zgb5h4k8jrldftkwx2w768rzhm74e35ftnvat2x8yl5cctvm4j0deq171m820aynilo3xsge9w4ov7u2t2blomawxwmzmwc1kheyq0w26eyfc3wdx5y5hujbknsx\", \"vr68nyfplg3r63vzejtwhkszdjpg1mhgkop00xlino23yvtl2v0ewuvyhl9fsv63f\", \"tvbzx5hi0od6tjsuj7gn95azhavgp6jflirtxoh8y05xmpenp6wdv3mko75quvwza3me2xyer7p0bhgsikwrv0qmb15exc710gliuj62qxftyl89va39187a2j4fcb6eo7\", \"sqx\", \"kjwnohb83rxjzhc00s8fn0s9h6m8aiiqbtfnv2pkxrnxz3h22e6rat7dyo40qilfdllra7397l5cvaivqzxnufskyivjgp1tnxe2srbwhwrn597aj889laqo0oh36587dqx0nzvxka5izx8xi3g5drpj9q0u\", \"gm5b4f0fm9jyf2227qjxlbxd1orgv9ubu10h3jolhbw4n11ptfxuzkdzay2bplcfxujb1ay0m1pojb2tp6glynpw8dr010q6kb8xrlpb5ea88a2cptlufidflyh\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ei1wlkse4w8v8ncef13i896u9iveljjf83x0vvh6w1n07lf0xjeeaolvqijdcs1s3b19ef7yftzmpep2m58iozfjkoeplp8oft1bwlq6hdevitxkv51gixoca0xwjn221ybbg0mh9yu2e6c\", \"6wtzlcybwgzs9s7dl1217u1d3syvh2935a7l880y3psgh7m2fyxdzb8x1c935ofwz80fek\", \"neauqhdz8qe8zy8mkz1witidy2zt8spgwe2viib83fhkg4tc6om\", \"lw3pgx3jv23y5oukac36pg24nxnxisa82ha6bk2rs3mtkla94hm01sepgi9cckdv2qqitjxqla37ydj2nhou4483mfjp6gcrxxvjr4jj6ef3mvkiffx4vb89b45i4thxfchjjqpbz4gj0vybg0yql9xzlwb5f9ts\", \"kugkg2mjdpck6j4gs8kc09m\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"3t32tkl70enaydvymgscsqf1fdw5ssnpydvawd3wzhwtliv4r5z6albczeerwrc4ocmwqe90x503xv8lh37dv1dn0mpj9bwxnav5uek7ytwtbhg34uacu6yff7ev5z4bln37augd3ormmz6s2eev0xeve215154kpog0rh6ey8qqj1t404\", \"fx6ls332qsdchf4mid2pttwmllxwu63htxb\", \"0fxg8go8jaekuqfueog0nm2kd\", \"vz83qkpkc28b2nfbvjeanvlyuws51nejoe1wq25f6o3hzvi74cjuqy25vtxa7188irihinfazyv74skl4j44zajz4ocjp9anh8phhrzzhkbumd\", \"mhdv5abtu4yp5nscvycyac9enk4fbkra12\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"boueiq7u50cpe6bjwmqc18s9jgrx7duvludwwquf5a6e4uxgjk2c18r1i5q44z2zi01kd0iexw6wxuc4gvvk4zt7ox52yf1f7xr0b3etaa50afkt63352jtxczhst2bv3t2dgy6e35jtd5a9hs6a546x7cmu9k5naprmewz0k04gqcg2hrmtos6dkebb6lqz\", \"uz271gjhdhmvj4qtrtuxm4ltue85fsf6jju2jggcyq7fkr0rj3qouhp0ut8fhi5hrp2lly1a2c5ophnokfgo3eh\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"hzgqkqfnzouloympyc3s7sx40twgmsqmeaka02pqffutc51ja0uzvl0jydyb1h6qto29o1ne7dmwmt756hliu3av5ruvjlazu97v2oymy32e6xm7i7carwv8xr69hfeji5uygm6x8ydozef9mec67539q9g0jwqkk480a0e2y8j\", \"noyc5riiawvulav82rgfzz5tcszxa4s5c60tlys8hcsibxi1omp612xzlvj\", \"w26axstrbke3shmwzx7w1zrarjvmtc9rudaaxdadks1dz\", \"861rzt7lg2cw21ipeadhysg8qmfjv2gp36iyy0\", \"epx7a843c9f1t2rb51y9g3sbu4ka0i680rvbqch2pmitbcsm0x7ma22r24ox7v3s5\", \"w1avmvy331mvcmjhogkjqes7hy7kxi1x935bnetek3c8q5860fehtpak43pp07ztsq386zj3hofxivxrc6nrs82ekvbu2rcb6hto61xnumxtknrbpvfdaeblec2pdgc3j9shbdnxnq0bl12ajjqjn\" ]\n    } ],\n    \"service\" : \"cd5g5q6khxoblbxd1gy6ymwczy5hvvi0x7c502jp0y3x9uuq7jw1rgrxuuqy4k4el2hrgs2g0uvx4rm5a2mrwzimjjgytuzcbq1e1hujfly2s3db91p8j24e64527qqrw4guc77syapa7iafd7h3qoeti23igiqdkzy6vvmjg9vz45h195uejvrjo4sm\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"5bkrac3fb1i5ap2t79ytlvpmf6ofnwrtitkvnt1k28r29hbheqp20vhuc7mgdp6irnvel9giqwp7ud2czefsb8o8t46q3wpfad7odggm96lrutmdw4ee125eu4ixdh41m4wg2qkead2b5w1kwwwhql22n7xr107eqvc7pe2ws5k3ek9uefsx4l9ykmzu49akg\", \"9diwscwhe9bv4qti1kdmvu0w75ru6o37i23iiisuicua6wiexb0myysdo\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"x9x4a1wr1s2ax9tw1rj0710czie85lkjk1qpagz1hal6w5ae8772rou13vlfpojdgg0oos0sfzh\", \"sbgvkb9wtp2kabk6y49bbo6d8l86rsi2esgapvjjbqsjm4sb0ayyxecmses5ax53it77acd4vsn2zl0asfwviavrb7\", \"sl919ixspdvd4huu7vtue8n0ilnxneao65z9j2t37occtbd73a0ik1hi0rjn85ux4z7lnc2mz24zehz9h4rfnu2i2y0kqaesqetvypg43672qx2okmuoavqrmxaatgdr1j2pecvpwihtuprv\", \"dbvq1v5efdthw0h1s2cdu67zw6wsq8hcgr63re9rwtyrgsifome54q92vc8gmbilvvboeoi6irqq5zvq53us5rfexm0nms3vlw1hp99j1h7ic3y5lf65vw43qzs2tzc37g7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"7lnrp2xhssv8vsb4trr0ai9grqj5999vbr807g3vs2g4lf8bpy8oy3ly8e71l4mvj5dmu5h67t3dq7ahev402in3gxzs5yvuapd0oi86cx\", \"cg7cfnysr4qbe79vjadi9q1zsvewxfpc6v8385613mtuwrzhpglphxltid2vdxuyypguli3jcskjv4wd2na9vp\", \"y88g4won9au9z6wf8obh2s7zlgan7dvdr3fov6ej7m25d6kp25s7xh4o5ty92jbz4b3da3ib21mkuucp8pxhzgtwlireh73oid68781rz5x5xz7p8g22cwip8wkop6a897apmhivuomxyx5xz\", \"ky5pgw0upjdtdxg4z8nzh0lssjgehcjzfymmgq8bfg4qb1s26722ajkr7kwx9a14chxfy3wgul2wvuhajz\", \"42llvfbsrnffb4ic8gyemjfq2126\", \"je6dhykbzlpcz4xacrcrmoz7t83rhisqjwirf3wcarjqmn978vonpfpgj5yosk9stfa9p11r034zzlcfhacq46iiaevowzyi28519ujw5yyxq6l9naq3ypnqfsypwusdufmlu07pjznxjdkmlgtrnoniu27\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"q4z62wmuit25oxr78ckfx05paa3zxrz122l3qjki71zwvx0gflt\", \"y4ygoqy0ajf2y7rfqptd3rgmivxxk2aplswokvx3m7j9cjuzu59gek55vf12sfxh4pm9jq0g3k8tmxi0ltncadewejcfxk65s8p6x6mpe7rj4n10eff3rplhl73nwq99jbo3e3qj15ni52ppltlgl9oh\", \"82z92pow961k0ra4cj7fhlwl6l7bu8m4z1s48zzte7luvcowgm2th3tffxs5d9spga3yeany2ln9bf35zohxyoto8i92b2yuyyw84qcolkxxsngfph\", \"jbs77crpjb02z71id5e4anzgrocnu4qr8ezmh6l4g6nhdgpt8trebavw8ggxubqoaw3sr3f1n0l70u78ju1tbu9\", \"hwohqk4voylr4a4fjbf137dr8pxsbogrqhymnot1bkcd4djga8xfja3sd905xctac6si6rylsrtztkgxc7wq1u5kvt\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8mk59cc5phc7jrxxa0oxjz20wrre2yu9r501pf65gxovz6cunf5l7k61nri7wbt82yhiezcr82jzlm0bgmw9m17ysnqqv03483w5xl6tzukx5lpfnrf9hpa0v7tpm9cpclbbdwrk3vbjf6vn63og4kf2kyhe5nbl7wsiro0matkz5xdq6uto2\", \"ow3z\" ]\n    } ],\n    \"service\" : \"8m3ayg97b17d70g14yfzole5ozxpdwxalh1zrlgqhur4g1qeq4jmc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c6d3c0e-a82e-4d6d-b37a-28c3fd6feeb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.296972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1cf3ebaf-ac88-4902-a4ac-d3b21505d5f5",
    "name" : "Creates a new ServerTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/8nhi927aezv8bncwspxkf8gtk56x19g45fi5tcedjkg4j2ytjanl2ugg1r7/serverTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Prince Orn\",\n  \"error\" : {\n    \"code\" : 1298945358,\n    \"details\" : [ { } ],\n    \"message\" : \"Qui qui labore dolorum. Non autem vel. Voluptates ut velit quos similique. Error recusandae sed beatae facilis iure sit. Cupiditate cupiditate aut suscipit ut.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cf3ebaf-ac88-4902-a4ac-d3b21505d5f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.294186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6215de1d-ed10-4847-90e9-d84a29b76f52",
    "name" : "Lists ServerTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/p0490xabfmp37yk1diuefndmjtoxctjkdryefq2y0o1o9yt8k172ecuxkenvardjljuazr9yxhwtc66ah3ojbxhkfzvfn7im9o6hurwobzzeoz77wsbpq5s21buib59x8143m6yspf1zt48r8re5updhl06via2tas/serverTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ei1vuqh65v4lnjfe7s\",\n  \"serverTlsPolicies\" : [ {\n    \"createTime\" : \"2023-01-15T16:36:47.291874Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"um3adxvk9jz9ov8vx9qanz052ntft40nnj5da9hkyqcw6imh6era1z4dhe409fftbk3r5q8cffebevfjrwyze2cmd1pzy231n1k41oub89sv5tratp6eyz05wbh405gslmwtrylvhjirelymlrwm\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/355750\"\n      }\n    },\n    \"name\" : \"Waylon Lowe\",\n    \"allowOpen\" : false,\n    \"description\" : \"Cum vitae minima reprehenderit nihil vero et neque. Iure distinctio quo in vel reiciendis voluptate quaerat. Fuga omnis repellendus nemo rerum eius. Quis provident nesciunt et blanditiis aut ullam.\",\n    \"updateTime\" : \"2022-07-25T14:18:47.292257Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-07-02T17:02:47.292315Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"isgcdg\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/133694\"\n      }\n    },\n    \"name\" : \"Veda Price\",\n    \"allowOpen\" : false,\n    \"description\" : \"Eligendi illo saepe totam autem quis. Pariatur laborum error ullam et autem. Eum et ullam. Fuga enim excepturi eos esse nam vero.\",\n    \"updateTime\" : \"2022-11-30T14:49:47.292682Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-26T17:17:47.292735Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"6d1z2c8s4h18zh1lpuhrgyu58wdz5hl9z385ykl6hebtvi2w844yeel57w0cgs1lci3iccbl7psidk\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/095745\"\n      }\n    },\n    \"name\" : \"Dustin O'Kon II\",\n    \"allowOpen\" : true,\n    \"description\" : \"Dignissimos in sint adipisci sunt. Labore dolorem sapiente quia consequatur quos. Dignissimos quaerat sed nesciunt inventore est.\",\n    \"updateTime\" : \"2022-10-09T16:39:47.293013Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-07-05T13:34:47.293062Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"uqbumh8cysnij1lbhiq6\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/786450\"\n      }\n    },\n    \"name\" : \"Stanley Lang\",\n    \"allowOpen\" : true,\n    \"description\" : \"Illum quos rerum accusamus. Eius doloribus ipsum aut eum vitae voluptatem. Dolorem fugiat et voluptate repudiandae itaque possimus quidem.\",\n    \"updateTime\" : \"2023-02-09T15:40:47.29337Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-03-05T13:38:47.293425Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ylnx\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/181793\"\n      }\n    },\n    \"name\" : \"Corazon Mosciski\",\n    \"allowOpen\" : true,\n    \"description\" : \"Sit beatae quasi. Eius ut accusantium at perspiciatis tenetur quo optio. Et aspernatur quae. Nemo quos et vitae nihil nihil.\",\n    \"updateTime\" : \"2022-11-06T15:14:47.293757Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6215de1d-ed10-4847-90e9-d84a29b76f52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.293882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListServerTlsPolicies method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              },
              "serverTlsPolicies" : {
                "description" : "List of ServerTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ServerTlsPolicy"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd3e3b6c-48d9-4f83-a3ab-05fe8c6d6b1c",
    "name" : "Creates a new ClientTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/63peuejdnizsb35m7usrxzp7jpkg81xiwzpfzf8yi870uv6ha7shvg8dhaodp4/clientTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Janae Ondricka\",\n  \"error\" : {\n    \"code\" : 973351502,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptate cumque voluptatem. Consequuntur debitis et eos ipsa recusandae. Velit dolorem et ullam ut eaque fugit sit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd3e3b6c-48d9-4f83-a3ab-05fe8c6d6b1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.291781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5aec9b30-6a34-421a-962a-e658f72cefc9",
    "name" : "Lists ClientTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/fyn8593rhug2g2qfzf8xtisds9cpskbejuxeo2qwnn0w1eobtainaftvh04nf68npu8yom624a6jc68pnhymi44pun4arho0b3m5q6ztq6woeath7pt2qavmzlznk3kdr4aztol9a3s2ias8rwyme/clientTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"opockvk74xq9t2t1nnd9ty314pilywayn141k86f0r9x8k93fpgpfq71w2m0adnlpynrxol\",\n  \"clientTlsPolicies\" : [ {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"xlco9oxyntp9ffukl9ibdgewaf9evj1zme6p48\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/997641\"\n      }\n    },\n    \"createTime\" : \"2022-05-19T17:05:47.286635Z\",\n    \"name\" : \"Rigoberto Powlowski\",\n    \"description\" : \"Officia voluptas dolorum facere aut hic. Sint totam sequi voluptatem facilis qui occaecati consequatur. Delectus corporis et est repudiandae quas. Inventore aut vero nam sunt est.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"izglyqkbdi31mpwua6tfqev2dc34qqc0e25ax3uoflb82jlcr6uwj8slnch002a1pwbduqzrzbdma0mpyrhqhql9p1r9zjqj0k8655ykzcfrhyt6e7672ynhpc32jvr3f6xtva7f0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/376377\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"1uqpzacafgjg3e0tjvoyzf7ccortel69364pterhll1e0a83sq29dfyfk4jwxesjy4ade8fho5omhm6fdllbj1587xy1ii399dfsfmhdt13a722cx0d6b8n5npupawfry43wbwtuo1efdrqug12nptpzaip184bz8zzoq834h95e080\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/718821\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"aou89st43o8xmpgh5ar6yufvhfd4928fm7jftk3prplu8c9cdobmegjviqat0prz6o4i9k90tubjprryjaa5s8cvueyg3id9nr96fdfq4qiukw1gvfmqqmco520360ykks6li61f1lpagvemadh6\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/492261\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"onh8r0s55r5yxffy8hn7r4tcstl1ochhl\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/940266\"\n      }\n    } ],\n    \"updateTime\" : \"2022-09-12T14:55:47.287198Z\",\n    \"labels\" : { },\n    \"sni\" : \"63r6g2wefn1lsdtd2ps2kvem2oyw60ra553ekfwbwsd9ysxvolrmmcyyxgzwyopnqhx5hqwfpvjhrmmfusk14h3m9v71d925qdoq0egt2wv43t3ole9ktdmvgik7ht\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"w56ccxmdstp6eom5fiad3afxnd6lx8jv9c6xy18z\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/888168\"\n      }\n    },\n    \"createTime\" : \"2022-09-29T13:31:47.287365Z\",\n    \"name\" : \"Hosea Boehm\",\n    \"description\" : \"Fugiat nihil est earum. Et quam eius qui. Est cum eos. Doloribus cumque occaecati. Velit repellat mollitia itaque quasi et in ad.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"6ynvtq1g0p7zkfw1dbvf9pwp17amhqpqn19ckoubrq6jb9hmc3gxlja1h2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/461976\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5c3s7934l6dost80p72xjnoo1vaan729h8q6keizte88xbc9bbcf2zt9m98ya6nql4lqat10ib4b0o1brydegvsx0im\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/884985\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"10forxchuf9r4koj4q2twrolcpwdz3801gvca8897sjln3yhpc16lduywho9ydz78oised9j372lflqq31lilyrtexjaxcimt6sdk8rmsetf2yp5d55xt7gdq23654uu96k3ydbagy7rbb3qktnvb1cvvfpbgheaojcqm4lcn2q9e6nez1lg\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/186143\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"zhdor93dxcisshfqt29iocam9fpy59mzaats6gq00krebhhasozlwes3gj4lzjnrtmrwxcklz8erlcxs872as2q4iooahcockdvaxej3oorc4hd9fa072689jq4h2er1rys4qxpnrfwyo4jo5b9a6pel3bt1br6bzmf4418cylmvraxe0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/050315\"\n      }\n    } ],\n    \"updateTime\" : \"2022-04-13T16:05:47.287879Z\",\n    \"labels\" : { },\n    \"sni\" : \"xg7cn0bgrpnaj9qf5ttquyl4nsqhut3jmhaecl2m2gne26wmogicl9dz0ph8j7bejcf11r4ch3z59ad9nsctlj\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"7cxxdukqwr2zugcrkzc7p8wjtpgfne2e988hew82zcw1zfz48q9s40b0cabxhbjg4bk7ozfo0mrd6kf0wak8la6wch402odjapjquasc0c0f7da700lf1fqwerxer0i25sf\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/750759\"\n      }\n    },\n    \"createTime\" : \"2022-11-23T16:36:47.288029Z\",\n    \"name\" : \"Saundra Ledner\",\n    \"description\" : \"Saepe sed alias commodi in fugit. Inventore iste inventore saepe reiciendis unde autem. Adipisci magnam excepturi beatae.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ndn2rogh031f7x7bu3reqwdz4b378k416uik2dhmltet140kehbzbrbl2vrg7hg0wmwxtzlebojq9stmzlc2nchtd2qrialul6dx3emap0808qb1lzv53gzu6gz5iuzflr2dmpx6n9qm2ylgcvfarrw1y9bsjiqqd7bojwatxbwsbfq0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/006992\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"u9klrwaspzwwkkx9f27hmeqj4h66c0pkdn9qn3ll49m3c7y8hp9xcitq1mcktc8evxblocs0cdyp78wyobzch5xe\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/729833\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"gedatymqo80dn4sa6spgjbmh3raku2s5ccfnim7aoavn10ae114bozahbl6bwh2j6v0djwzqkt90rnor1gclpr2h88jhvo1ssp70r71hseaeuzt4l6wt5unfod2ki6ii195rfy2v8nvd58fdblgge71zhzqe7sxj9otjuva0s0njkggautsqo0s3dv7zan95\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/096929\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"2v2zoulahf592zehibaeshe2ysjtyt8dgcyeqq34hoolv2crrjy4tdv43h1odsjo0lf0ryosm7qp96d0u1pqbnugn1eazugdg5x08vx46ex9wfjb0tvy7rukic85yvwdstr43vau7paty1d1w28qnpre1tmewz2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/452137\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"y41qbdg3qp9o5huucsvvzlfhh2hilw0hjk0330po9j818xc3z\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/359733\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"4f2nqrge81fta0c2n7coqquoeix6o7buu5axeb4yh96ji0hlugoz99q85vlrkdp182veejeoron5zlxjk5vbzbf8re1mvbwbnpa5npmrizvmhdso1v2ks5nz0yhbquxuqq2g03wbjhhganuyju9xgi8dtkmy1teutzkpfv0px0ed0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/981777\"\n      }\n    } ],\n    \"updateTime\" : \"2022-12-08T16:37:47.288734Z\",\n    \"labels\" : { },\n    \"sni\" : \"rfms0ymdxga3rlc5975fqo9tfr5s2mjp0exgaikt9znzzlbhmg7boubjl01g944gyxg0qr6it7ikzzjcl30577inx953rjfifu3x1avzv2juvg74zm7d3s1m1uz2m3khpcmx7zr9urpua06qew0n3dmc4n1niv3bjfyfr9\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"mbcke65fmj\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/577837\"\n      }\n    },\n    \"createTime\" : \"2022-03-10T14:46:47.288921Z\",\n    \"name\" : \"Trang Durgan\",\n    \"description\" : \"Molestias sit velit sit fugiat eos. Vitae minus molestiae ut est ullam. Enim perferendis laboriosam asperiores id doloribus quisquam. Aliquam expedita debitis odio commodi nobis nihil. Amet vel non de\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"une91pefdkge5o5tnlnlds2z82dn4rf8oootka8bx3enw0lfbeowx8c2x1hbz1ejrm5wn5337g878zoey\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/194341\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"zpzbu008l0zisluwebeierkkze0hugvr59dyrsr8b9jn0hezmpus4c74zp01slupdikzo65710tk7nwhja952fyng0crxmj04ko779k8r88z1oa7x2cvvicr844xcnzl2bi4bxx0hrmt5fho0o59r0n8padky5isris3t6vn7fqujs19s6i2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/337122\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"707168g7c1omq7lrs9k4j1qatguwxvq2b477qzct64roi0su7s96ktybe59svbx2mfsqep91os0e8vhcn832zl1bc03uwak3op9w5seshs959sjhkljvz0awxyxmbn2dtualf9osy8vozhukyjt5pj9p3mxl\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/356649\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"nbwbfppzc9fm777h6cf8aymapkl6hlq5lu90xl2fucgslfvosm2hvb09k4sxe0ko04a86ia5zy5ualcceomd8hj6c98acikfawyi14evzf6n6hxjk6byufc64o7obdj2lilzfatqlo8n5jzkuh93gz7y970jcf9xqu76u10b68xjoy5ynvolai3gfwj8a410148nowfs\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/360173\"\n      }\n    } ],\n    \"updateTime\" : \"2022-11-29T15:05:47.289668Z\",\n    \"labels\" : { },\n    \"sni\" : \"fl6vb0wlawx2ucgatvghgk4py230xrajfe3yinzlq9ovx36td6et2uuh3nkonb6dxfnoxwgimq3occ1nr67z23ml7hzr8o6tzgwar7xyaf0d782sd7p1r05hwi21jlh9jbdrow23t06jzvo0k2u6axuxbx30ce8qux68hu9y0mcun\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"300qrn05ugi92kls9ibt1sopruy51dxfz4qs7ik94fnnp086smq8lvb8u5sicgo673cq0mzozj35p638kcqr7wzwmmkra6wk5snxguszi9666eeemdmwu5byo0k0ewqsbjtdb8s0lr1sy454k3r3j4schzygojuaz1\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/449675\"\n      }\n    },\n    \"createTime\" : \"2022-05-12T13:33:47.289884Z\",\n    \"name\" : \"Genaro Kling\",\n    \"description\" : \"Et voluptatibus voluptatum aut rerum dolores. Nobis architecto doloribus ut. Tempora sint tempore molestiae molestias.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"o3ajbaq6tfjo8ghruz4t19doe6vhv58rrdl8n8hmwxuw1h50g3yx1k5qatw5x01ec3ucsx0ymfakjvgpa7khkgww\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/949103\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"srrr4dw1242zdfxya187h5auuvhdeesudekm7n8mkw3nxmcixugj82qfvhc6huh7bxlvkd6gzto2h0wle11ywz18sukje1j0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/067996\"\n      }\n    } ],\n    \"updateTime\" : \"2023-02-24T16:09:47.290293Z\",\n    \"labels\" : { },\n    \"sni\" : \"5skl471pdr29cyf16grhuln6q7bw44ib9tp5hmvixl46pfo4omsdjakxcjzdhf0l8iut82sz9uotyqxetkun56\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ojuiqk95hmn8h2i9a29pzmyb29vqvgad4eklmv25a8v9jbnpzhoipo5jn4jqumb5kbyogb3qs5pwgvx77sih8uwefsy5qtieslgwxo23govkkuq\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/109511\"\n      }\n    },\n    \"createTime\" : \"2023-01-14T14:58:47.290488Z\",\n    \"name\" : \"Evangeline Hettinger\",\n    \"description\" : \"Sed iste repellat voluptatem deleniti. Quo architecto eum omnis doloremque sit voluptas qui. Expedita voluptatum nulla officia consectetur ipsam sed quo.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"f37tfi\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/801621\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"pu9hz685gs6cum824372juk9akqe6kp6ipvkybuh625jidf91j25akuhx2njfr930n9ba0l6q68qoc1a9lc0l8r0npq1k710njbg4bwlhshlljp1cq48zciveimpuepio62njpl59mc49eaizteld1tx934jkq8n1qlmkiat7nfqnpp5knfyqymy4z26f08l3mk7vp8f\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/997444\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"k7cucjqbd3jn5rqb6067hulkk\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/148685\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"dgd4cgja51jcne1hrzqphuc44g0zzoyswl045240by0dyl4ukon1thj5gfwrxio2j6gty3jxl4b5pw5qq3jvo1aqaqjm3qqm9n1mrujokvkpb6af63q0pxttr7b18nlssxjg5odf40z7dwk3gy8w8mvhnwind3gsayuuj1s1d2sa55u833\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/798883\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"6lsad9hwjb2rpifwcbzbqzs696zrmav402iuvi8igghnttein2ctmj1g11rulp7ehgjaumhc8j0aackiydaxdn6p6lukh8kl04jb2jfk5xfu22cwyzddwnqdii2ji51n25e5472usx6sk2fg7k16d3tsvz8hqae2rwwkagux4s870\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/208699\"\n      }\n    } ],\n    \"updateTime\" : \"2022-06-09T16:33:47.291223Z\",\n    \"labels\" : { },\n    \"sni\" : \"7c9bemwn82e4r3r6hhuenitkrew3vdwo3ispjlcx33n4our03hvsxpp6qhxsf8zwwsxcvdpd7dbzkb6ysi59n3gckbxq5j2di35ohqgi9oudoyfnza4ezzb3ao2856yqshfi2nra8cidpm2f5d7u7fo94hgja55xakpm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5aec9b30-6a34-421a-962a-e658f72cefc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.291449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListClientTlsPolicies method.",
            "properties" : {
              "clientTlsPolicies" : {
                "description" : "List of ClientTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientTlsPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8310b629-ea7c-4218-a7f6-c4750f26c9f9",
    "name" : "Creates a new AuthorizationPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/isvnzz1rzd7059k700nm1ye74ph3kspotjg6gtvfav41hs590pmoyk6mv2hwjljtk09groepulsfxblozf0awi9qxc6z87xtnfb1wam4jlmosxuirs3ya9z0e3szzae8u0n58qyetb49ajg6ehybk3rneu7a63bthei8ydvbgxu78voi6a5hj/authorizationPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ernest Leannon DVM\",\n  \"error\" : {\n    \"code\" : 2075867053,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Vero consequatur aut eius enim. Omnis molestiae ipsam dolorum eligendi omnis possimus sed. Delectus repellendus aut. Ullam quam molestiae iste et qui.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8310b629-ea7c-4218-a7f6-c4750f26c9f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.286427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc4f417e-9828-464e-a1c7-102c2e5ccd13",
    "name" : "Lists AuthorizationPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/9b4v7htwsvvezuz79em4mqmcoc0xrbjmg5ttg4o5ktg8f1hob3uk9i0i1k93i5g7s75fj6up34xftqf9ivbx/authorizationPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"v4l6j2ouw5scngirow5zd78aqvoju31cl5uzecqdgr0u\",\n  \"authorizationPolicies\" : [ {\n    \"createTime\" : \"2022-08-06T15:17:47.284894Z\",\n    \"name\" : \"Kandace Harvey\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Non natus asperiores voluptatum eligendi voluptatibus. Accusamus totam aspernatur ipsum. Pariatur et aut qui. Mollitia aliquam eveniet quis. Modi reiciendis repudiandae voluptas aperiam.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-07-31T13:46:47.285316Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-06-11T15:13:47.285367Z\",\n    \"name\" : \"Sid Paucek\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Est quia id impedit perspiciatis molestiae incidunt quasi. Fuga sapiente quis recusandae dolore. Voluptas pariatur enim esse adipisci. Ducimus nostrum eos.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-02-28T14:48:47.285674Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-20T14:18:47.285723Z\",\n    \"name\" : \"Luanne Kassulke II\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Quisquam ut velit. Qui ullam voluptatem doloremque fuga. Voluptates aut hic voluptatibus.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-11-22T16:08:47.28594Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc4f417e-9828-464e-a1c7-102c2e5ccd13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.286122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListAuthorizationPolicies method.",
            "properties" : {
              "authorizationPolicies" : {
                "description" : "List of AuthorizationPolicies resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a3a14a02-39d4-4780-94ec-ef212539cd5f",
    "name" : "Creates a new address group in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/shit0g1gzqwfl61sm0t7eobn06uoqmgektcyvp0gdrs2x67xg3bljc8yt/addressGroups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Pamelia Smitham\",\n  \"error\" : {\n    \"code\" : 735073583,\n    \"details\" : [ { } ],\n    \"message\" : \"Veniam molestias qui modi nesciunt id rerum expedita. Libero voluptatem eaque dolores. Ex nam facere expedita eos odit molestias.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3a14a02-39d4-4780-94ec-ef212539cd5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.284729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ce598e1e-98bb-436c-817e-429f6ab09f92",
    "name" : "Lists address groups in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/ytevwwv5bkcdj1np37qahbbgo4nl59yxf9gkebmd18tb4g86l9x4hq96vllvxgejfq94/addressGroups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroups\" : [ {\n    \"createTime\" : \"2022-05-23T14:39:47.283805Z\",\n    \"name\" : \"Damion Moore\",\n    \"description\" : \"Ipsam optio dicta nulla. Quis velit provident maiores ratione. Cupiditate earum debitis molestiae ducimus in consequuntur. Eum molestias molestiae praesentium nesciunt voluptas quas. Eaque et quam con\",\n    \"updateTime\" : \"2023-02-20T14:33:47.28396Z\",\n    \"type\" : \"TYPE_UNSPECIFIED\",\n    \"items\" : [ \"jrxb0cv1rp98gg4n35adzn90m1atrsn2816oop86s6vnfuxc4e1e5gbma28gbyoqesd1lzlb4csbom3nh3lslsc3aic1tdhli3mimyj0q0f42s3bphwgsz7y7mk2nr57jrp72y5l01pp5\", \"qplnn3tkbtcspvhk6k66rl8u17he04l1l2w0p4zdrq9ufk576qq4af9xucg7710wijecfx8g7of3lhgsnzzeb7rsixt6u8d4glfe1sclgxgxxn8kmk82fgf79iovjp9t9p7s6sw764h7e18uy7rrgywp6707cdbahlxiomb2k0phrg1c05y2c6qv6\", \"oiaqpnui3or71m5pe0fcjk3gkm6os06n4axm319m30tpmeb83n2f6bcgl52ixppuo4ip3ita0ihvr283v1uv4uox\", \"tekeo5l4ssqrvhauu8hc5al0tu2hj5c9569gjdjad1odwpvufcmnmdzma20xklwtwuwxcw6gx65rmuzmk9cfmewgb9zi5g4e41l05fiw1nm\", \"tnm41zcurnt4m1uippb6g915hexs2xxx657ut4wygsu32zfby6mru74rhf7zhz6k8oafemxz863jz319eziya74vusvpwurr0rn0u530qeufs9l56x1ykiwqngzh20ndpui8\", \"vpsi2bn7swu18z9ip7k5c0gdorukvpsl35eldapchtkwktzyw8d1udtzuw1wcio2acioz7i\", \"8gp8hnhmupuktgmqqzl84six2kihdzrffkcp35gshh4h33vmgb57ojkhnk3s9pw9fs2nfso0saecxg\" ],\n    \"capacity\" : 1215506990,\n    \"labels\" : { },\n    \"selfLink\" : \"z5onyhuhojt9gclcacydu2wzr6gi\"\n  }, {\n    \"createTime\" : \"2023-02-23T16:33:47.284115Z\",\n    \"name\" : \"Brigid Stracke\",\n    \"description\" : \"Reprehenderit explicabo omnis perspiciatis qui consequuntur quo. Doloremque odit et repellat ea. Qui ipsam voluptatem aperiam. Architecto eveniet nihil.\",\n    \"updateTime\" : \"2022-03-12T17:12:47.284249Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"fzq7nx26fq4namd9ovpyehsmnob92igu1w3p1r63pok956nnkwzwd7so75ktgobf86zvfu3j89oov\", \"sd1y4gai7yik9p62ov0f8es7qg0f7rejr\", \"m7pxlxn7x7sz7nyczgl45mytibbcmxuljyg3koamd93fo6m7p0ydso8ebykyspx5s51r1lsaihlmk5c8iw4wr7mwp0vjicx7aarw7zsg5bdgas75qjxvp41t2vfhddukxcoiys7n5vpn255r9xaqmvlnry84zhag8nfmzh\" ],\n    \"capacity\" : 2094698100,\n    \"labels\" : { },\n    \"selfLink\" : \"8ymeugwpfijt7h0fzgx83xn1hdymvawqaiqeygc4zygspu31srop6pevf6o3w30ko6m2fp2e8km3ulxof9lsug\"\n  } ],\n  \"nextPageToken\" : \"pg08fteuw94ump690p9iwlczt5r4f2inapzaqrkg79g6rzwjtmda6pdoitnzumhw081ukr0gvxvpx2vctmh645oszr82vujymmdrhnkiwfamvv5gf8qu4b65e22i299x15kqx8q2nfdicu5f7g8ttnst9b6zrgcegw2qru04v380eub9mv77a3x6og\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce598e1e-98bb-436c-817e-429f6ab09f92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.284461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.list",
          "schema" : {
            "description" : "Response returned by the ListAddressGroups method.",
            "properties" : {
              "addressGroups" : {
                "description" : "List of AddressGroups resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AddressGroup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "073df8fe-9e0b-4a67-9bb1-14f9059db582",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Dominic+Adams:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "073df8fe-9e0b-4a67-9bb1-14f9059db582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.283741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f8ff769-684e-4aff-b831-454e2ddc912c",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Dorian+Rosenbaum/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Young Hessel\",\n    \"error\" : {\n      \"code\" : 1536248785,\n      \"details\" : [ { } ],\n      \"message\" : \"Adipisci aut animi nobis a fugit. Aut veritatis culpa tempore suscipit quis eligendi. Molestiae vero voluptas. In et adipisci facilis quo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Noel Reilly\",\n    \"error\" : {\n      \"code\" : 1350712241,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Et eius laborum porro quia est et. Aut asperiores est temporibus perspiciatis aut dolorem velit. Deserunt quia inventore cupiditate aut magni. Consequatur error consequatur dolorem.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Haywood West\",\n    \"error\" : {\n      \"code\" : 153629012,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ratione eveniet exercitationem ducimus. Sit optio repellat libero numquam sit ut nihil. Ratione aut doloremque sed. Cum aut exercitationem.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"7hyvtw6qpkmi0mq8uies245h8wfn244owd71fc48hprwn1f17qqupcldmewoxrlrfl3flejzrjmuza13goaxz787paz5j3hpjed8nw3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f8ff769-684e-4aff-b831-454e2ddc912c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.283642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3b77d98-3d63-43a2-bf23-e9108dc92b9a",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Darrin+Predovic+Sr./locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"0bvlpxa314\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Lamar Rolfson\",\n    \"locationId\" : \"ys82\",\n    \"name\" : \"Maryetta Hyatt PhD\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Faustino Huel\",\n    \"locationId\" : \"0a9f\",\n    \"name\" : \"Kayleen Dooley\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Freddie Gutmann Sr.\",\n    \"locationId\" : \"8526\",\n    \"name\" : \"Rhiannon Fisher\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Cheryll Ledner\",\n    \"locationId\" : \"b8j6\",\n    \"name\" : \"Brant Maggio\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Era Reichel\",\n    \"locationId\" : \"y55l\",\n    \"name\" : \"Willard Will III\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lizette Barton\",\n    \"locationId\" : \"5p4u\",\n    \"name\" : \"Mrs. Tyree Lueilwitz\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Buford Casper\",\n    \"locationId\" : \"8vgi\",\n    \"name\" : \"Tenisha Blanda\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3b77d98-3d63-43a2-bf23-e9108dc92b9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.283047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e03e9f8c-d6de-4241-9a00-fb7118954016",
    "name" : "Updates the parameters of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Patsy+Williamson",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Allen Lubowitz\",\n  \"error\" : {\n    \"code\" : 979918464,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Nisi voluptatibus fugit non eligendi voluptate. Eaque vero quos quia rerum error dignissimos est. Recusandae quis consequatur quo accusamus totam. Doloremque voluptas omnis aut. Officiis voluptatem qu\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e03e9f8c-d6de-4241-9a00-fb7118954016",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.28157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ed61be7-3695-4657-af5e-5e8b3dfe1345",
    "name" : "Gets details of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Leandro+Ratke",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-10-24T15:06:47.28048Z\",\n  \"mtlsPolicy\" : {\n    \"clientValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"z7jpepi5qp9ph0tbwpluycbru16t6cnzed30ac3j697xcvphxu9up26w9r4g7vtuh3wysfpz49ehphep8vb38p4scfhy9x09aqg7g0v0pna9l3qfr5852t8b78i1cplkzt2n947ar3ow3pvk\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/271077\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"vl2aa6fm204rrxnvvm1ua6dhp2ky1856ziqsngjux71ew1bq2y0hdwu6x7sbydlvtma5sc5138xej03mpej5m78ceeobj83vejbqmv7k9\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/469449\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"d0li7pl60t6qop8ku878hwlc2bht\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/414617\"\n      }\n    } ]\n  },\n  \"serverCertificate\" : {\n    \"certificateProviderInstance\" : {\n      \"pluginInstance\" : \"70crpwreg7d4cwjk6r7l76mm5ub16omaw51scxe4f4idvru9mo9aacabajsq047mowl1con3u2nws4o4fls24ih2kdmjawa2j8pcheecpcckv9wy9exclc81zznrkmom0q3jzx1evrte5cyej6a55yio1d5s29znoh0jnn7\"\n    },\n    \"grpcEndpoint\" : {\n      \"targetUri\" : \"https://web.example.mocklab.io/163768\"\n    }\n  },\n  \"name\" : \"Seema Schuster\",\n  \"allowOpen\" : true,\n  \"description\" : \"Voluptatem quia occaecati ratione est velit expedita. Quasi ratione et qui magni. Nam quam non ut nesciunt consequatur qui et. Fuga non doloremque quod.\",\n  \"updateTime\" : \"2022-06-21T15:50:47.281078Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ed61be7-3695-4657-af5e-5e8b3dfe1345",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.281265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.get",
          "schema" : {
            "description" : "ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource.",
            "properties" : {
              "allowOpen" : {
                "description" : " Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                "type" : "boolean"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Free-text description of the resource.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Set of label tags associated with the resource.",
                "type" : "object"
              },
              "mtlsPolicy" : {
                "$ref" : "#/components/schemas/MTLSPolicy"
              },
              "name" : {
                "description" : "Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`",
                "type" : "string"
              },
              "serverCertificate" : {
                "$ref" : "#/components/schemas/GoogleCloudNetworksecurityV1beta1CertificateProvider"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the resource was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e2e94f01-2496-4688-ac8c-39d809919b46",
    "name" : "Deletes a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Darwin+Wehner",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ivy Gerlach\",\n  \"error\" : {\n    \"code\" : 590545472,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Eos eos distinctio quae asperiores. Molestiae quibusdam excepturi. Porro dolores ad aperiam. Quidem quis maxime at. Enim et pariatur quibusdam eos.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2e94f01-2496-4688-ac8c-39d809919b46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.280426Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f97e247-a2e0-4819-b9dc-0da9ff5b887f",
    "name" : "Removes items from an address group.",
    "request" : {
      "urlPath" : "/v1beta1/lhw1bgxa98bdro5v55nevpk7muetgu4y7gofqfvz94e882uyptxl7642m7lvocuo92r58tig3f952oenfl7zd6nzu1ucf0dohfen6i:removeItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Christie Huel\",\n  \"error\" : {\n    \"code\" : 1114353152,\n    \"details\" : [ { } ],\n    \"message\" : \"Consequatur repellendus earum voluptatem ut error blanditiis. Non rerum aut. Porro qui rerum autem sit voluptate quia quo. Voluptatem nostrum dignissimos mollitia reiciendis repudiandae.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f97e247-a2e0-4819-b9dc-0da9ff5b887f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.280155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.removeItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "660fd32e-17ca-4948-8e1d-39e61d60941a",
    "name" : "Lists references of an address group.",
    "request" : {
      "urlPath" : "/v1beta1/07dunfm699dyra4o6drumckbs99o0olk5mk7qwyhaycr87c3m1rwwn8my0f7q0b4z9938if9p0upeqtkhgjwgy3vwmylwocvodhcvippf3rshoshbeiif3c33kxe5rtxudegey2244fcpv09u6e2n:listReferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroupReferences\" : [ {\n    \"firewallPolicy\" : \"cnzdrertgvkzzvyfnih1wbafs0mz0huge0ccqaeg1lj469o98g6pymmmpy2815hdrta3vtzxbs1qa3hzjplo6mdb9giclatho2h67\",\n    \"rulePriority\" : 1095608930\n  }, {\n    \"firewallPolicy\" : \"kmc8ktia84s6gykiebxq43pxnj9ftdy8jscy9dszu9kjebg9bg9okqt\",\n    \"rulePriority\" : 1289879306\n  }, {\n    \"firewallPolicy\" : \"aa3qf3bqkvkubczpzw5r2kkxtri9frtceuwr3ox2iv0drivlk7cdj6lu2ezqy6r65iu0adz64j6duooiacyf43w7aw9jy1kwo9lqa25c3kg3ooaim61qdheb8krf3asi2j3xhzz7ahw298dfbtmttk29929i56ooghe0l3t2paej5lqjuyg6ymwb0b\",\n    \"rulePriority\" : 1757913545\n  }, {\n    \"firewallPolicy\" : \"qm5mqqxs3cq1g1t8wp0jvkgehzbg1k6r40yeeb4syxvj1vpf48x23c4ta0hkv4nz35i\",\n    \"rulePriority\" : 1789464746\n  }, {\n    \"firewallPolicy\" : \"mvidjkmryj34nt3pe5kgdnxrroghig4hj8zkmuxxs0lftmc7z1z9ia3ea6xg3g5680qaez7l\",\n    \"rulePriority\" : 1573635524\n  }, {\n    \"firewallPolicy\" : \"61yg9gr6677njicdln9ohb75yb0r673gr6rqoo5fkrp2gc17ozir4fqyxmbqo3lpk2lvrshdigpeqktskkb3macz0d2z8wwj54pikebda805jq1n7pnjqw76ebp2thwpzlyw5dj2v41g533h8z20x1dynipeiud3\",\n    \"rulePriority\" : 220123297\n  }, {\n    \"firewallPolicy\" : \"pzzs0ni1csly27jradb978v4xblvzkbq8dxv8eab1cb7r8nymctq6nj4q0aa29f4uq0jctgth976lensawtfc04rnpp605or5jqdl9smsikjxdf1eyvecna29g8uiob6in9jal0cuwl6em2stezcfh0kbue\",\n    \"rulePriority\" : 442735373\n  } ],\n  \"nextPageToken\" : \"58upigga2nrmtfp4p2x8nvsrehmacxwrmaf49cxafgz5xon1agf5al8hs7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "660fd32e-17ca-4948-8e1d-39e61d60941a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.279908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.listReferences",
          "schema" : {
            "description" : "Response of the ListAddressGroupReferences method.",
            "properties" : {
              "addressGroupReferences" : {
                "description" : "A list of references that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26f24210-0209-481b-9b11-033cd930e2b2",
    "name" : "Clones items from one address group to another.",
    "request" : {
      "urlPath" : "/v1beta1/3ehsn6d898szfe6934fzg9yn63g2th8karntosymtjj6dxt5mzggaa0f0z7rpg9v3xk68o2c9ybjjmt4rbtb11zc7lr8r8go8m4sv81xx3ltu04g0f3hu7riwgx1c39fn29bmp299xnpxhv8j3x2k9bhscfpb2r12s97lfuo9lw3xvdsiz:cloneItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Davis Raynor\",\n  \"error\" : {\n    \"code\" : 1182079248,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quis est beatae tempora. Quo libero vero reiciendis voluptas minima. Voluptates quasi repudiandae voluptates incidunt voluptatibus et est. Ut numquam ipsa laudantium. Rerum assumenda doloribus facilis\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26f24210-0209-481b-9b11-033cd930e2b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.279553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.cloneItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09f20c2c-278c-493e-976f-9901b28c9965",
    "name" : "Adds items to an address group.",
    "request" : {
      "urlPath" : "/v1beta1/ghqepx51djquze32s6etmu127uavllxhmfmwkh3i3ixm34bxloag7zl4szbszbrxfflvzrx7na0dbzjp699zl9i8a4:addItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hobert Upton\",\n  \"error\" : {\n    \"code\" : 676598044,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Odio temporibus culpa quasi. Facere nostrum voluptatem aliquid eveniet. Voluptas recusandae vel est sit fugiat reiciendis voluptates. Distinctio eos exercitationem nihil aut nemo animi. Ducimus et ani\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09f20c2c-278c-493e-976f-9901b28c9965",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.279259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.addItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}