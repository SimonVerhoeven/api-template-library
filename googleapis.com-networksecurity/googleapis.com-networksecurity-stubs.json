{
  "mappings" : [ {
    "id" : "94d02e6d-93cb-4b5d-b700-150e0e5deee8",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/k7ku6k9veawes3ospb0bcouz0ebu1lj50kmpjga7iqlgbu8lb1ufda2ejxo8xg2xac025sznodbjcqgw2flf2agxa163uvs821huy175xrkg5dtssppzo:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"nlbvwv75m12841hwi4ief317dry6ojlny867upz57inoo0w0qn1ra\", \"od5dh4387wgcmq7fdbv7i4k5irdybx5c88h7fpvtliihaq5f71h1i3raxir8k34ht3t22b6f2ucssfuypelb4cbuh34iophih\", \"xa3xtlwbhgmer49extrnum5cec62ffysporzxpmb33clp5350sx31ndx9h9c71cg380vpkgu3qtbwnbjqvjgzpjf1binb\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94d02e6d-93cb-4b5d-b700-150e0e5deee8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.633024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "58430b59-4c07-4ab1-addd-3555f6916320",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/8j58uxvfm29lx9514q3vprz0hreaglj3zqb9yu631h5ggv1b47am26tv7m4sue7a0qwzivwte6aj9kdn5b22ieslnq3h6h9h6qs3yzy5m5i2ujann2izr3xbtt:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"aqw8zicyq5mpqebynqyllv0xmdmkb4b2ubt8xp9qbr34k2sqcbz31x8151o86tqthc7xb3szgmi66hjsxd\",\n      \"description\" : \"Quibusdam corrupti veritatis incidunt. Et nihil et. Odio veritatis et similique ab. Recusandae qui nulla at.\",\n      \"location\" : \"hooah4wj41pwr0dbxslls\",\n      \"title\" : \"Id dolorem dicta nobis temporibus.\"\n    },\n    \"role\" : \"opl2tnrjnvvp9g2r7krc1rskfmmhz3254iv4vtw8eob9w3sa4l0mm7bjg2or7ictc8ag6a2nuuxrmadpk07zir5gcgntiahgg9mvs6dhy29dkk1gptlag3f0ame2c7nkwv83rciubbkefirfccvc508a7zs2y7eyrpm3il8hdpgz847\",\n    \"members\" : [ \"05ynu3emmro5ekh4jtqcphp4zkoil2xj4cee0gm30de66oa4l3oux0066j1cm8gk97vdz6lp5dpmwxknb7wvz2geigup\", \"6jee9q8v9pr1e9mxwfdujyu\", \"hoa7s\", \"r6v3ec4sj92sqsgvhe7r9gkwn8108esvrugikrfjeupa39enk7rwgmz8i1pqy4jx2uliy5wuqgztcmned33z6ti2f11vcka6d5ki4hyjyr21ryyhbglpp\", \"qbqpz0vhps0p9fwxah7eo3gyu5g4o7uauft5enkm5e8fxy5o\", \"xdkvrxxid8vqpyqok9ztdp3zx5c332l3b4320q1f2qs3w30crjue8eik31m1fz2ponos1us97og7fmpl6olofua4v7x8iqder9fzkdxjrk72dm5giuc2w0uqhhp4aj47k0\", \"imicbzagb8uqfyq9xnaa0v1ajxubqcgt6wxy9d2byl5fv3wzkou4zf0kviu0ujvnxlfp2r9vk3imopl3b74l4prjg21xtx8ahq6p8d6gtmofe0uayk4x8ds5awv7sqbej3l2vw2slqvey477hyroqbhy52wo6bzasow8mj9sgyrznqgnraji3su7lm4yjb9uq9z3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xhfcie7e3v4ocdinagh9xto9tcu7x0a0ywtluarq4r6ldq01uhl95y8ti7y13ilxj88ps1k7r72eps0tdovxhwfksma59d3u1be03eq5dx3iniu4kd7n9u57646zsi9jt0p93b0ks5y2831xx1ttzuxgk24mztfg1sghdyc5xpamn5y3ajug238p9bewf2o9j9\",\n      \"description\" : \"Quam eum delectus error. A consequatur dignissimos a sequi commodi. Alias impedit at totam exercitationem quas a. Distinctio sunt sit et et est nesciunt veniam.\",\n      \"location\" : \"4s7ebl7ldm7ln1xmkocqnndlohalepg\",\n      \"title\" : \"Saepe et rem sapiente enim et sunt quia.\"\n    },\n    \"role\" : \"ggmvwf9v7ulizrtbpxsyp2bx00s3blwg16fsofzyt631qbneyr214knm4khh83qxy43awtnn4mpalon8tmpg5lf8sy5ruxx4k6my27v95wjn8rd4601ey5idzwya3q7gi1kgvdly3n8hvresqgho4ws2pe0ldf2tss8nvp8h3kpmq2wn47y5yxh4bq01l8d77rfoe6hu\",\n    \"members\" : [ \"noee0yk6unknhi2jdl5i727xj0f3ffm0lug3en33tdr66rkukktmjviuogrvjadme6irgx3qtl2l6d4txneomjf4kenfvxnjcc8k\", \"z6a1el9dxpxim0nes3s4xp0c5z3pxvdou8i5ji9iu7acfrgfyio47skytsom7uqok7abmkxddk49nj5qow95khpqdmag3ctzzdt8jmwws11xnsvumuv6apv9iqvzzua2wpvr7pnwh8a5ug9t3dy888bf0vmg5o31v0\", \"3tqnp4itactnrnwmjtuu6xjba09alop6x8fmb4o4ld5rb7oq\", \"ocdp7yp5y77km9frof0irk\", \"zpsnx99884lw756bnwsupxrjruw95oh9hrwcqpxdxs5zmxkox6u53lafvnrrb31a82w75lwx9rimjxeekcu3s574ldi9tg\", \"vubob1xbnllm6ccy0s8myf4jzj0w4a0bdzyk9sk8g5wtu5y7fz07xb9n1oteufmx6ikjf6qoaabkqrk3c519z1dn38w7nm23nt465kjcoyqwgljpqbi8zo5mzo46jgcj3pc7wq7f\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"918eaecwcpsty5pt8072djhpo9rb97df5biqv8w2pfu9vwomaj6e6qikqrf818firb6fl1p52rrvrbm0951tu59jrayoyietolld04k9fpszwhu99bafq9ouwx70e159fcwrp5w\",\n      \"description\" : \"Nemo eum tempora porro necessitatibus. Sit necessitatibus et et sint. Eos assumenda veniam voluptas maxime animi voluptas. Ad nihil aut numquam.\",\n      \"location\" : \"cv3koe03e0a899wp3u7ftazk7t9sytv5ka2q6hrlfims49z57qi3v4a9ohrjr2m4dhtlowk4bku1czmoocr67s69djvpoeujl05tiroy3fwx2m\",\n      \"title\" : \"Maiores blanditiis aut ipsam.\"\n    },\n    \"role\" : \"u6jzx850fr4ouu8t92b3twbnapnlpg0abg2cu8z472prvwsh3ayqcsqi\",\n    \"members\" : [ \"n3hvhgugcalypaqp12k00ymf3bys9j226qk5hmylk7uv2df21yj815x0ul74ig173f7k0nab2u7uv019jx5rgcjgc7ob9q7phup5f6erq49w5eczddym4cixrah4jh7wofznif1h9yas88s06xbwi4zxyvzs\", \"i98u9fwed9zomswkefbu00jbqb1p7agnkdllevfi97hb9zx5y25fyszy6gi79j\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"88gth7empgd8mef5nrxl85vbhe8i8ldsq4cydz5z87cfzovxtx4g012rob1gwvcuqczwqfeib6pcevu6c0pqm3befq65ncs1ks3vf0mmcvz7erxv2l4b23r40oq7ltucowf7k85c1sekvtfa4kew9xp79lilfsy4tj3h2mug8mvgubaj2tavj6b4j9cusr00tikn\",\n      \"description\" : \"Quo nulla minima minima ex a. Fugiat tenetur perferendis molestias natus in eaque laboriosam. Itaque quas soluta dolore dolor aperiam ipsum. Tenetur quo et occaecati doloribus sequi.\",\n      \"location\" : \"3yuvwyn56r8hj8e2xf01ug4gwje8alz70lexb0keajf1cj3dkf5puewrlocuazp8ny6b1qs80ybqulbdvonzo1j19i1rl3jhufkdzrpunt2csstrsxze32yxdj0m7p7hqyefdwn1ps1323a3gjfg37dbxhx1jdnp85uah4n00adbdqigzuh8l6s8ph03\",\n      \"title\" : \"Qui amet vitae error dolores occaecati voluptate repudiandae.\"\n    },\n    \"role\" : \"pvpkfjxl0jaur4\",\n    \"members\" : [ \"3m5usonp9nqdepyfcw20g34bnadth03njp8jeqooav4e8vhvvvd96dksj3nztlybh43p7ddh3e3fuou6qrpojfvei74s\", \"9yjqg44e409pzjdbcn6fsrixka5blke3l04ljinvts4p8tqj7mnq5x7jz8\", \"hv5dx0o1ofzkiugghp32ih3z9wfqekeaqpa0zlys9p9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"607pwoxzvy8zu6r94h74qar67pg7xykng3lrlkv8hzbz8zcstuli0gbpnkp7yyyhibs1t8rugq4wxzg20eleu1py60mewf6vjwi43ji80r62itgxudn0tyjbsjikkkzkhu2rv7h3dqq9q6p25k\",\n      \"description\" : \"Qui atque provident placeat nesciunt optio. Blanditiis hic saepe autem temporibus quasi in fuga. Molestiae odit libero. Illum veniam aliquid eum reprehenderit in rerum sed.\",\n      \"location\" : \"qmxvrpnh\",\n      \"title\" : \"Quibusdam ducimus dolore omnis.\"\n    },\n    \"role\" : \"7hjo20elomf856\",\n    \"members\" : [ \"0jo524yqa9y1yi1w9ygyf0o5adcsaemtpmjcua4opmtw8n2jko1t6dcdlysb623r47mdafbo667hf739npdgf2updvg797u60ekahi9il\", \"hw97a88c1z1ji4crclr320fhar5yl98dangy8bawieu7q63a2td5zl5apta71zbhe430l2gnwh566d7bd4erqzhiuo3lzoak1eiv7t0vxyxc7ma5qmx4z0ljm84wcdtm7qatkw1czlrdlju9b5bqmjcnns80n4og98fs\", \"5yfgt3z9m0y45213lw3txr2dylylc2vxsdigetzqlv2lw9dpw9mycc6443mzcg1z86rfdu0x3mm958a7v8mwmzd848emjlbm3vysovivk1tk3vhsq8ehn\", \"ip85rn4r6aib1ovywkvvuk9to4bx73k2p8ic6bwmlqdau0xsk5cyv8grss6269mm2kkwfzzx30ob1g4nv8b9mwtfhwbrwpjh1gu2gtuccws6lxgav20epi3d88aonrzy3p6k33thppc2htlewnamdwso04p98balvzrrhclipgd44eb6ku1tqgfglbh2ixcvl\", \"pqy9ihr0gek6pcb1zc1x8x3xwr2zeolyyeipuuz9jiw4ftnshc2mq6lcjx8js86vz0156306kxbei6tcbq9qlrrtnc9p\", \"jzj69ootievxo0ulldxcqyjsa5wnz1dlo94gqsv44b078rfd8n4izx35t9ahkeq0yqankbmwp7gvw89keo2byppecao85xqvl1eg18lzn2m9xycm3tscm8inzk3jbe1kx2fx57bjgsea2b42crx4\", \"06axe8xeue2eerdwgpxdnleml398cefx4cckm5e2gxm5pveukruw5kesuh846bkjo1rnsrquibkvu9bfhbxkiyeprtbq3s1bg04hxm49m9xmtavlxf00aczdzizp8dwmg27tou3g7q1c51erbf\", \"xboc9rl7op4c4qyrsdx9j4kp4xj7pcvr1529w6pv5gz6n7fzf7nuj13igrl5hh7hjh48ei\" ]\n  } ],\n  \"etag\" : \"vel\",\n  \"version\" : 1445391115,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mynbzume2xbf229pmy2kbc6ae3ia889zojezdamgugyt29trw3amc2on02lfedt9nssxyekh3o2mv5q08iexlf53lsqtuuhrqegtpoe79ili7sa5no778upotigz8vd3esnmkep3tpgksgcw4vl8solx9npmo3l3i61dtpmaux690y0bklstc5falnap\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"dquagkkhr8o2ushwjni9zfacmeod8obneaj\", \"zxw8darhbf3ali0odjg1y7h8ikx68s3cso321monqvniyfuplyms7h92be0tay0skpm2cjp9rpn9amz452\" ]\n    } ],\n    \"service\" : \"m5w28ju5rn8c\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"sgjbepokua0sneegrjx7ywpwa7jlnu5ts9oag6z1i5pvqfs0vzpm30o1kfries77iv\", \"pk8qqup3zmqy01ecf8krbamc0xqib94guvtvb4ms5kyr9cha36lf9xej94asqy4za0q4bwzb33vjriqmfoz197h24y\", \"okie4i0ttbd96cruf3yy85gn8thykmtrybmeunahow68chepijyqt45ejngbj9l54pj7q4yggglj1mgczfjem4et1mahb1v95x3qhc1hkzssp366mkntzc\", \"oteswtblwb25yf8p12yym4x2qhssgw4zns1q3vsupu19w8g3mo944xtknk0fw0xabnx0l9s236t4nuowqsb67t3bce5pbk9\", \"6il6al9blbemkwkwrlf8k0c8i62h9m2idus8tft3r67ie1g33erwoafsyny3nsrq6t2cb3ph31nsci0k1r6hiqh978fajsodj9g6hmht929svnxnz0dwtqtpo\", \"v36d4ae3mu39y2v4xse66p1xs3p9bkjb9lpf22vq7qvh5cqtewxsybpin93l1xn76gklrwymad0ywp91wzuclepiq4lsqry3b1gs3swi\", \"jgzvymzalepjnwcyksfn8d5u19pa6v9ejqp6idhsb1s213za29lhl95wy3flvjk9f22kd3ffi75mq6z1dlg43tjgz2uy29jz2ckqmvmgik36z8haiq3tk1jxbyuiystvqv5ild52q\", \"dxd6e2hqkhgghks0njucjl47p0gc6u119khuo78gq9jeaihbb98cvepdj2tc1aon5xdsqh064ds634sk8ucocmtebwmii1wkcf9gbjthvnyeyh1iub210fs8h7vwa7nsi0q59h\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"xk9vuzwbftz99m6ndz184q1052au61b238cf1ttej8bp5c4krsoayarko\", \"dkb9bcxjdnygxzmpkmo76oug57uqjmb40psx1ro0gr264hz4rpuuz1kxfczklc2yddmssw26izwx9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"1ojs2qn7x6m71c79luzlx3d3f1karsdib80mdb0vzdvkoalyle48zn8hwbl6hjy869ummzewjj9ga40641jnwgqmgwt8ftmq6v4tomxitx1kq9\", \"teai75pfsifpns6paae7csptb30bge37m\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"jb95rsq9209hfok1epxhuph5wb36in6i0p14tmvua4g1fq73fj8p7apfyfq0w53edw8vitc7fit63ofa9df2caojrdjo8sgl2ah88nij5oq2rtl6ijnha6i478cuw5xa7l8kukc3o49fmu9usxjw4ny7qrj6j2tuse5odyzikz88kizno\", \"ci6tcrsqs1fypthxe4nh7rxzqivy4kp0hbu1zbt19qhqd0mgqw9i0zk3hv89itkhl27omg7d51txh0d937xj7tq\", \"2ugo78w4pc7hnm5t5b17x3a1w8m5vajqj7c097kin8a91npdg7yn53w2tocgktvekiuk2h56pbb8jkid8mqg0spgp8zxvpf4lj6ze8qf410jgwtiv9jewskg8sf04qis62wljrh7sigjk8dvrscdddyx62sp1l9brax20j42d9c2wmvxhn5huuvnz96j40nx\", \"0940csgi0vkye3zym2wyv1km1wk7asro3vmikbmp4hs6gggrjfvxrc2qv8saszt43hufdry2a3eerg4inp1992wxx9lzq48knoof2wj0o8mll1f48cvib7ffl0nyso\", \"3h0le1gfrmhk74k4m7rb200sns2wg097rv2m1p1kpesfnotq537gq12sjeh8vemlrap17xx087w13p6tj8eazlp5ri0yxug63zpbhxo49w3rkib0z7cl6iu0mlzit6pohg60dp7fcxjlc99rzf1s620sd25ffx\", \"e6gzoa0u8gslrhk3alu85l6pg9hl8wr6gey65nw1wt6ctwtvhuiw1004aqtoafa5d2t8th6103in7lf60085qrpv6d\", \"vadjgbrxx2n3koj8j720xhydd8o01nzlkgsbw6obi1kn405dlnwa2fhx1c49t25613lge03x9jxueuwyajq4tvh6oga3n3ppzc5zorwz2v4o3wlwmdr1k51ej5ohsn6\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"euclxg91syp2sjst2ft2sgli79uyllfpy8wf5omplqlidc23p38qr3fs3bw97n0in2cyps2ztkyv7n0g982p0hhyswmz6crgyb0jtgk6j2tfyr9zh3yjs15kaoapngsufx\", \"8op2rrbyhzf6ni2gogatmslohk4uuulinhohl\", \"jx7eil1gowowu4zvg16htvq2fyurzhewnvxlu7izhycv6n32j2foqezn41jrhzugd83017knd02lbop0ukn8swrg2bjxdhq9ygdy3g7mu25ofscd6f\", \"smknr0hhzrkcz9iq3owexdufynymr2jn72jdtz\", \"ptzk17nic393zk88jzrremsxfwiggi42ly27q3t4lucduwqoweqksuzm6z43181lom43bhaij9myhi9ab1xdtmoutws3hocqc6y5gg4o3thtjzp\", \"4x8nq9kp14wkzzyj1waqknrbuscjkaak43efni7rsbe04pszr2an49ftycqtexnkgal2atxx5f69ouxgq7h2gio5ond2x5h0oxselevdbeks82a74zqw9rf8ayi765ij9mwzxojl9fr8bc3ct5lwr3yybxkr1icuy4k7twaux23\", \"u8st8l3cp5fmi5y3x8umgykjmkf3jnr3vneqcb573zus6i76pt7dvo1jt8x41j3tpxfo6j3ocucy4a3khdtpi3natjsc84d843idvergv22uetw1he7wpuq7w99wdmxl0d0idqam1fj667pir9atbh\" ]\n    } ],\n    \"service\" : \"471lh1fl5tukl1wcrz\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"230o0npsstohsjf62ap1ojdfhe6268rvkxj9z09w\", \"7b1r7tr4ah5ok9rrjkn35ngvr3tvylhf2pt1kaxmqeo\", \"z9hd4pdwmv5aoqivxr3xcbr9yo4l2chzao75ezphuu136x05q71bs7b1gry6ver6hjf0hmh3neuc\", \"q67z0j39mw82r8mhtrch4z6l09b8ria1pq6kz4qmfb4yqgegfs7jwv434drp8sas\", \"u5zdlyam75r9aict9n4336diosco4z6xtevz821pbqma2x3fg9fyl842ei16l5n9o9xwtk1ow6ho9noeo6ee3a1jfh37v8pwr1qwpg9dyp\", \"5qgn08gmbwadtkc7otdyd9q4q56792b4rvaz8pmd322mucl9ntivruu5shivesv3unbt969dxl6ubpgiqri4octtio417k6ihcubgphmcxk2ixhcgwrau6rdgeygtqdpqi42twe0mvjibdsd1r\", \"gukvlac95ijbsdwxuki0i3spyqkfpaadwu2b3kj9l160bya8xax12l8kpuujy5z34jo6m7e5gj33j0esxn7ysmg2zzjnynbkeejf0b2ao3y9c8o6vs0z49abac4k5x8k4iexqi3r1u5udcsyalz89pjy4e8665kf1sqew9u5tc7m8ea7imc9c9n7og\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"n93wpilefy6z45hom5fj3dqrpuekmi6gknvpq0o\", \"gyg57y067mpx2yu7s38hte9euc89vgqjcd930fkezsr24yaexwy9jh947mra3ydr7qdg8fcb6gofipjgvshxns6uu4z0ecrcebjpw\", \"uyh8yx0a12xd7tj2lo93xrxvtrpb4fhci9vitq0oyi3ljr2nw0uqk1kdo6j6suwc7ek3eznr9t5t5ezqiowu0m4ypyrrm7jwn6sa6d9z830jfwk\", \"8e2oh1clxkq97nov2p0s1ar7a19r2iy27wlrffhk5wj3rauf9xec4etfz7x3s9yed8gfdao650nyrepkyaddmtvlzmbvpwgv930g7qi898vf48vs7ccigj17ovp2jrjn1kf5s3adtbyuqth42aft5g\", \"zabgobgjtxbxkmktqfbn651b6rmv8mqezc90eyy1a996boimmd2ie94lsi17e4odj7a9hxjjxgap4j34oyddh4sou9sfft5v44\", \"28kj5aj40kz969w0s42da9arodn7xioqklq5v50b9t3i1m9apoyr5sdus6x7u5n6tcdhhs5uuwsewwz6f4cpz4ynf9i497uiltgirj8msqr1ggsee3hnijn2g8navcd18zrx\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mwjby5bjog0vv9rmanbtzd9qrs867730agdb1252swmolhib8mcuulkqj\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jldq6x2vn0mubg3cbrag44sbjjbttw5j9iixrkf8lehyl2u561edolaxf8yekbwh6qb6csut4bahhyy4y7\", \"0js2waiwfeoyivps30f5y1qmre6nkbr4be3rnwy6k3thap0t\", \"2nh4578o\", \"qx89rn863p5muuze6fqlbo09gzmx56sh6ha01swz3726fpz0gqxkarzmhpnl6jdbbekse6nl6xg8e4v0a4buvxbrbpre3uomzlahww5ks1kgq9nis3fzfxk3ehm6z5ttkt07qfaqklcubrqwpwsftnl6e7tjfvo9jgiuph900e2qm6hfnjkidfz9y42rudgqkc\", \"a5lhh\", \"pnvxqvyfwdyeawne14sxsx9u7t1h4ojar03i6f902xvi6r5buijtvmu4yn3lid5x486aq2m0sl8yfzhojlru94fue6byr07ubf3ku5vrsyouy7fxgxuuhci648oppaigvwr5ozx0smbk34qmmqvv8ewey0f82v0c\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"iaxzfyuiin4q63xep7xd00bnemm1ay0srca1fe5cw9rbouchdsvt84uleht944fmhx2r44qrwio3rfdja509f4avmexf6es0ccirpbh814o7dupz2cdbg7tk9x2n8\", \"dlr65wntje48k3rr3zvmikjis3cxy9s5h3z0t6a3ghqpfgnombpjkkhmp6pgvbresd066ggjqkq3cjl3rbbih3vi5a24ksqgwkeaosrwujlwmxj47gohs\", \"qsot005wgkq7sztluqli6so7p4yc81hev68vqd64umguv14ht432ukumor5i4ivymh6e0cybabyx0mtdx1j3ajt2ryrfesh4ba5d5099phckplim7ex\", \"vtrc40gtx8zq3ic16l0gxo3htdumlzzvld1uhqfeemppkbaomutesgy4m4ygzbk95za0vmw55bnc37rz3l38o5m183w0rk62qqn8o40gvha626juas8rrtfvnqd66u95x6s2x\", \"db8fe5c54ribku3arfaku69ns5ig565qes9us8\", \"8c6jv5294o5sw5wmc4pv4sezuaj9fggdcph\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2oa94nin8swt40jllc\", \"42xjniamlqs4p0i1t0fj12ex8da36vpcum7anx67z5c4345zm0o6g6xkydx9tt5tlwsuxj9htgu009kjjxvxazxv232f11fnvtaollme\", \"in1kl82ud327o9vzbudlyz4szq5sx9k1psvr0tm1w1a7ulsmhw5ni4g9ztll2pk7qmh2tvbpbiiduv4875powpst98q1yrgquzdyznte1hfl89u1ex38my\", \"bhy9tm0ld877jlqsgh6n9hx7kk8kio5a5yd69dm4yr9bomvg8b9dvai06xcdo7gmw14m28n9pzgl1f38q8qul8zeewf\", \"kta28gah6dthvi3t9v\", \"2qr3p6lsghbfcvstxzn7l1c99zy21mlqz99kooy3f26znt1e430dhv2p5yjfb5msh4ez6vphctai9xx9tade6kipnluogrymq39vvy5o6xpjoifg07bj3zqxqb2ra43y1qndqjumxurjrdom2i6radxeb98t6qgv3u755wwtaoud\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"kbp2xcyc0wdkfofnranvgs0gb17rqryxtvxqhq0jlgbrm36o8hsrjzmyok6kwy7rbg0773k2crw0wfs5okqi1cd3tzqqjvwceql5mly55f8gg7azy2jlf7wx2ef5acrseh8lj68sbtnafsc2c3\", \"bkr5dvrioh8ea73v\", \"abud8i9d37w5vwu8atr5to2nrku0hd8u0gbettqtarngfxcjccwuagpo6npe9sk1ap0gfy0877zxxctalb36sa8fh84grnx2rt67c88o6m9ljh7fd0dld4hsy3aqujmu931zrftr4lha0lkg21u3imaey00\", \"hm9i5q3oo4pboeqhpsybwl4mo9ji5knae5jqrll84j3axexpmxk7vru36iz6xvkpwg6qfr3h5jqjl45s60s5e9ww73yt\", \"xqw85kyjebwfexcqnezw0y0\", \"ifpohuaz4m3f5gdf9d4x5rr34rn85b52lbp8iyk9jrm7rxth65ylwjhehkcz625b9xi9n76hjsy5ocqv9\", \"k7tdir7ctdo3e8wkr4wiseassxqft0fyrhv4txtr7j1kb43wocm6x7o2ruquuymkl0xdyuc5ktecht\" ]\n    } ],\n    \"service\" : \"4e2psm3ghjhy0hybusoqwm92adafhsgvm0mmvb56gep4goeobebvgh7o4zu4u7nrq5gckx052rtd30l3f1q00fj0zuvyzmdns7lx8k15j4tupbqovc2a1cogv62mfhlqfwa12c\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58430b59-4c07-4ab1-addd-3555f6916320",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.632891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "0381b9f5-97d4-4c5e-9dfe-854b1fc6cdea",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/wo1yeqnog40f5f5uaiz82vreqyrl1wnhks:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"dcc2wpszywk3b8wsso6sf850nwl04v53j4ss93rn\",\n      \"description\" : \"Explicabo qui totam blanditiis quia esse et. Ut omnis doloremque aut autem perferendis iusto. Quaerat sit sit nostrum suscipit autem. Enim a quia sed. Sequi voluptas tempore enim ad saepe.\",\n      \"location\" : \"bh717ei5umz6h20p4n2urvzbi8xtfxoh73derwfy7v07qna08lb0fp2skpjc76n0r62tyfeczh5s2l3381pq45im0l040bnaacrc5abk4kr5ot6kir52g45nm9rzxv\",\n      \"title\" : \"Rerum et nostrum sit voluptates voluptas molestiae optio.\"\n    },\n    \"role\" : \"ihi27cl45b99880xzh6oh\",\n    \"members\" : [ \"joiedlc8c1apq65r7zigx79vjy492ew7b\", \"8lromg6goju72t7yyd1esf9c9q77is6v5jlz38rahku9xnild5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"saqm7ba11d89gvdw7qlth6qsafpul3a5tq744zufczs25fbof6hfy0j2tkksb5y893r2k5uqk3prskmjlhumswqk306oca8gpu2zhcw71sworxdls33md6e6ns5fbs5w9x3jiluuy841grx1lkdj3x3nm460aa8hotnn3ug2zd0e99c4bsd549p3nzhy7tejaay507c0\",\n      \"description\" : \"Provident quia et non et laboriosam. Et aut modi recusandae ut. Nostrum porro accusantium cumque vel.\",\n      \"location\" : \"y2xvg0yziyo5poe1l9554qb694akdzifnqe388\",\n      \"title\" : \"Et accusantium tempore.\"\n    },\n    \"role\" : \"trlntc659xhet7uy4h5gc2jqule1gse7q35ipl0e0p509zsubtd75nocsj8kzac2k0o9ar7e93x2m43e\",\n    \"members\" : [ \"j38g37dk4bgs5a4czbz1641sic8j8wjx81ntjsz3dq\", \"6j3fe0lryau2w5tqu5k7qbytzidyb49hdguxrsmoxzbffg87yviijmbs5xzhhf0kngo30nx2jh92ldzey3eo109u4bl9eaowelj61ozhnc8zf\", \"hce74uovm89ud5fpa2fcg4sful2pj8hhb7l68ayagrlnmc6j1xi2kf0edyvzpc7p0jxryp2mp6438nou9ig8qrtnle9u6y2s8eres3hmqr2u5x6adxaedfqkv0o25mjfiir4dj6fe0bgievti2tslw06zmgf1elaexk0dhpdmvzezb3gzhbe2s\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"zfww7i2z96wwg62sogc1qka6g19g19vo55g57j5jw7aqy2blhpqmtvp61hk7cffi3t7zbwu8dwfegtb7pb6uqesdugt4aqgjuh0t6jwxvx1aqy1ss97flf3qb459mg63mzyfte3b0ifoci7l24mzdppusy7gc8snvgmdz992yix3rbrprcxwady\",\n      \"description\" : \"Autem aliquam aut vitae. Porro quasi illum et voluptatibus eius. Earum est illum aut laborum et quasi. Sint nobis sed odit qui ullam alias omnis.\",\n      \"location\" : \"6u8awq08hf0yt3npdn5jvgyx6yszfal8zm985qzpmniekrmlwchfyxugcvkmmxo8hwh0x3wkeel5cax6f764ynhsi4fz010jxb5qeiw2g79kkwvb12u6cchql61loy5ry3g7r\",\n      \"title\" : \"Sit mollitia pariatur quis nisi.\"\n    },\n    \"role\" : \"rsefxpanrp6174k4tm6dcibdo5oyqiiwr6txn5rcstv7vzrcq81wkk6gcfqspi4lkpptezwygmd2h5g3n4zv847ao4q30k1yhkh47l66y4xfmofn7fufnw6jd825kk378niqidpe5sydt64y6k0smel8pca4khfk8fajuowb319uo8yn4rptwc2z\",\n    \"members\" : [ \"sexpw9itl810ok58euaq6c3acvwo5c6h10zhsrm18ddvvffhhignqjql0bytmpin8mfpj962yozms0lohs3rb513oeusbrgo9cpdjcjm21kia7htrkp8ya9f1lumvdrsbz143oxz82t0x0vu6bvz46sei3r3jqh\", \"4dyeo0laxzav3phhqfe80uqga56fp0m8afzll66erzqxjs4f5vah7rdwrkkjhlyn2wk1nn1rdfudx5afc43xc700vwone4bpxd3ia5h6r0bjue3i8cib5guvcox7vjk528dva2u24lfq4d2fgf1xp58pr9l\", \"15xekdowq057sahl1sft66gw2h15igw9dmubme2ov8rjquo9n7xbchbhg1dwftm7xmq0ooombgvmct9f5i67io9xwvd5zfzjje7c4sza8gb2uqop4jcwu2ieqrfllas7gk8btufbsdhzdfwlcdo7owhuex171d0hsela8u2j8arfsqis90\", \"31pj70in48dtqrlyz7t5r2cxyt19ifvcp2gj4gjg7b08ermdsi0r6qvb6rbj280phokb260o165db7j8ptl64g7kgjozmg2kwxx7a8pdfkkmnbgpu45r9a4mugxqahr7msi6qck2gpxbkixj8ssppdn37vebaoesxtrhbfirtav63dfprk294x2h8ia3i4r5\", \"j0kenajr19iy6ae4r25n5oarcw2h6denkvdpzcyt6ikz1ey0nbp9yu5fo6oz68uor9i4qb6o6iuw81g0cqwpd3fnpek7842uy6vfxwvuejexr3fqyasbgl7vwhoup0u1fqsozfs1po6yvjsz0zr5ua2f59q8o611f1dlgblnlaoge\", \"7uuiaw05kkefze301w1tc64evbm2nl3udpa6n5qg\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"05v3j6o6zo20x2pfn9zkx6y8ppbzon04drkza9k3fz2zbe2kdh4s3dbem17y3dvwubmdw1nz8ms7bbn4m6c67z8crw4f1zjdcipz0yczyl4qhfz2hc4svxthncdy75ouhzyvx9ia5rzdsha2e6brp5jdfdrrcsejz712qd\",\n      \"description\" : \"Voluptates nam soluta est. Facere ea tempora eum. Voluptatem necessitatibus sequi delectus. Vel distinctio veritatis voluptatum laborum. Et culpa fuga beatae quisquam soluta quia.\",\n      \"location\" : \"mfgvyvr83cr1surc5rk23f4kmiu3tz4bqslsn3t49gywzx86791gl\",\n      \"title\" : \"Eligendi consectetur assumenda pariatur corrupti adipisci maxime.\"\n    },\n    \"role\" : \"m1ofij4856e1yxnc4b0pvw5lk\",\n    \"members\" : [ \"ixgqb4ehefzwfv9okgl2yb1afyvhi9xs2ipucycxv3ucpjy5srd1e2kybdryy3wl3hdt8bcqmzxif4hvqgq7wyylayypov0ix0xdokdwj3gomlnvstgifoom6uzkwmxzfhrdnokpynscdug9cfk7nz52xrqpzzunq9hl9n58yib0gkz\", \"zeqfjtowr1q2n84sbn87ib2jrhr0reh6r492trgtpkcqxg3q6k6dol3slbh760hb6njwfufus168hs54fhscf8uwu4kr3cstdyjqtvym04gp19dj5p8wkttvxe22smccvbuam0crb9miny428foesbifzfhbjzbwls1yglh64zf4tbrn6g\", \"cn8y93fvxcqt2k377r9dkxhgfexrpjbs1n1j4\", \"88vhbvqb2yhyaovvlr88aup05abphjl4f0qe6o8l4h4tkby5cz89z67xd1aisavl04cyhh7qwpvk\", \"kw3uxqaig9dvzx9ts48uhvh02l402atrxm2ja86b5uc1mvxlicj3musam173udipdp7e78h39po3xo96fc4p9oztec5cldkhphxwh69r7fg49kvygabc1q2t3o5js6rj3vudii0d7q15fncn084j8kee4pon104zyub4f7deyk7ppw9ckd6bc6dp9xuopqih\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"tddaq6n398xbj3jh0finlen1ldc6o5d00o514ceuqwm04qj3zatzgcwzodfkokvi60wr4qic7d8qniruejxsqslr18spsiy34vvk1hw74rdbx0i2fmbu8zh186rxlk27wz1wdhg52qv12nvfobfui\",\n      \"description\" : \"Non unde omnis sit iusto molestias ut iste. Libero assumenda dolore autem. Fugiat voluptas sint ut voluptatum.\",\n      \"location\" : \"s7jtoqk3q9391adz0ykeb7mxo5i6opdf8gl8qu04hqcoa2id7ldd6t10cc68xnknsyrkf74t8pvkv1fwxvmuqjypvg1fizor896jmm684hzdjy9ltckt6kbqijrca6jn552v9f7jeswkfxyl7sdnr955gqd1vbnj2953xd\",\n      \"title\" : \"Ut perferendis consectetur est.\"\n    },\n    \"role\" : \"ymjub2tx5wgf2az361vz61i2csr3v9sr1kmxworfrtwxw0e27x13s758eodag31fa7bxhmma3owihf7j7vf5w3uakuklb1u7ea3v8yrjj4wdnsl8dom8xuvfp0694i7hv1mv7isnyp3acn736np6u4idtd05241n11z8c7j4lz2fpgqaloh3ktdnpytubdv3y1\",\n    \"members\" : [ \"b9fot0s1gync58qkkma0ht3cf0kx8dmmtpb71vuj0r5nz564mqgfvb7ra23oa3uscmwmx210bduettgq0pynncm09uzdjca2svblay4ic122lu74hysdxh2cpnk9raxi391nng\", \"loypli1z2gj7axw6cj6bddny0lllpkbmb8ixmvkxe58nu8c0v45bwbaqnjgtrik3qjx2puy96qqhyogg196zvlo3pj1ftdz578hpml\", \"g3m0cw4nzvi423ck2ep81hkkzpo3kdpq4c7loip00szfuxhiir40ri2z36ui4g2lnrmulsql4ykjbx387g4bf2zjkqy3\", \"111kzpvyf2lbc3k7aeqesl8bqdneqy6ni5bn69fdxbkar1\", \"oakl5qz4e0iy1gqf0tt4d9e1lg9x5qk8p3d2w6n2txncwtyt0aspd7tgec2exg484do5orypya8pukfwvfl3sfmxxtclud305qfygstpmxt7ro1m34jdsukxc3t9oy00gphmppo6xrmjjvrhmuhfoscoc7rbs2gbdaxwxk647xv7b2p\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"d6e2mv71apcdthhj9oqazriftbapt1u124i07qrw6kohk9gibv6ldj1sqbv5htp16awhog1h6e86r7rkqy09e19m6b3718h9xl6lxevgr10zgcbcjvq6k7yrpj800mcuchiwmbxkpb3s9u33lb5ptw8zv77rxpi0n\",\n      \"description\" : \"Voluptate optio amet recusandae similique modi libero fugiat. Quisquam nulla ut labore. Porro et molestiae blanditiis rerum.\",\n      \"location\" : \"yqdw2chkzgy75v2vfcoz9egodw5ukok4yj4d9qv7y7smd4avg6xfnjwz3s0pa1t\",\n      \"title\" : \"Culpa temporibus repudiandae et delectus sunt.\"\n    },\n    \"role\" : \"3o8dzqyc30urtb5sn5j486kbxudktp4wt1tn2tfan33f8sncu5muuisu8o2x1vsyuszy262suo07nklf08rw75fzvplg9mpdr9wkhtzkj7uac3yvqr53awrc7vb17pbf2ex5c5mcapl95lmzrw1ve7bz3twfkeqazt9snz0aw5t07thvk5fr\",\n    \"members\" : [ \"5r40u2v2p8qzgc1iva7z0aktwyrgq6dn6so2lndasz9\", \"gg3c0w2g8zh73ajpett589dchjhl2ikcsstnf0px524lswgsooena7dzm010hzddceui\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o531lpyf143fhetenjosw97g0cblbq9pjeldt06u5893nheruxaeez\",\n      \"description\" : \"Ut dolores dolores. Modi qui neque. Ipsam voluptatem voluptatem. Voluptatem maxime vero eum nihil eum.\",\n      \"location\" : \"tu7afipe1y5mao7x65j9di\",\n      \"title\" : \"Deserunt ipsam suscipit qui iusto provident ut.\"\n    },\n    \"role\" : \"2px9w3o6i5vrtwno34te64m65exl4f3fy59pfutogu60lm4ih311tzrwzqq5tphzvc5jypv57rbpwd5\",\n    \"members\" : [ \"1tf93fy2n7p9frrd4r999lkwaxun9c29andcf0hq7b99dfsbycv5292cwk7kgtuymtdwvznv35skb247ofly9wp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"buxcp5upbv2brgfpel38q3lsqn932v4vln3lku9bsqgybnt7n49ds7mq9va7zlm6elmypndulk9b9u1o95j0lmtb2tfykuoxfdjb4wh2uzgpvyij5ao1z5iv1eatb2h1nhxahotigu6tfjkfytlx8b6dj5pf25qoaci\",\n      \"description\" : \"Itaque inventore adipisci. Quia nisi exercitationem deserunt aperiam ducimus recusandae et. Molestias nihil temporibus aut aut. Et consequuntur delectus et atque voluptatem accusamus mollitia.\",\n      \"location\" : \"eur59dd6hazprgjou063j1rwfi8o2fx5itemvbr0pe1j0k8w38g71igz97tbkclp2d7apwo1vw5k8s0hrgl2h0mxg0afb0vgrymi95wjv44juow7azz\",\n      \"title\" : \"Omnis commodi quae vitae nobis.\"\n    },\n    \"role\" : \"wn7ui5ny9lwg625s5fn5rufzdqyz520subaaeobkkt7ygtviittxaqfnr2zsvwa1b7gfhatvul4nmn8dzsfi6un2ml9q3o2eqarzzaxqvrosdh85pdca73sjejky99c3gi3lkcjus\",\n    \"members\" : [ \"cuaf58fh0f3ti9bxyskw9nro5l8o5z51ak39szvrsmuiparonk67cfql4b4h7qgue9evc4lcon88gp2wwkkp9d2iqm2y45odm5v5zhr409mg31p4rcqyn\", \"eupn1j3fduzevziupefbpuhvgsxw33bpkobqd4zmdx4v8if9uj9o78fkeugfk8ougxqme7aqpwidahc1n4ifsq9n\", \"c0z450bu2f1bq0znc9yw2l5gq3l5k45252aidvef9lk15cc202h1zf3nigezvnr7pl1sw1t94tjr\", \"j6iq27vc4\", \"7d3lojgza596dprwweajwbsgzev0jh3rdga16sbqocyiw6di9k16a6h8g1helafw1lypvwn8mgtq7wive10rfa2gao3yxax6zo3c3967y7ez06hsqq19qsf4ij1d68n6cr2ux1idaselya37baqdh7bly3bapea22l\", \"p17mgefrlwn2xyb916a9gupo9r6zpywil7hylhqy7ef\" ]\n  } ],\n  \"etag\" : \"sint\",\n  \"version\" : 1520088373,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"w5pnf6pr8utvzrmi3q87a3kwpuzc41t0mvul27kcb2rebfaj0tejpsylf09gj0hrnzlk6deg987jgazkf7gdxhp6rk5jmfrzbhzjc1zkkfne1ajaefeuf0815e2qzeee3err61e6i06u3pfz2u9irqxctossqdgb59tzkaokpltox5idfqwg8bmdfxces4z7ezuodfel\", \"9dagzo8pm35qiz0th44jftzkq2javemrwja59oxt9ljoyu68hegqhffhszipj5xri7ut7cr0pqz5qa29v0mmkqz03dwh5f3ygojuxwis5exw8bgbqp\", \"bbi6etq2w8glymy04m6o5kluynb5u2djhx36zd9c9blxfd4d1gv3cqosv4ipzwpfhgc9k3258xjhh7wakddawwsaxw8jz6jdl00r9ix215mdsjkmvyln2hv9zl8ueyy2g6w7in65kgd84urfl5yzaf7qdq76ouq4790l\", \"edv8phm9rkem0lnbuz0n9emirugb95b5bbeablngbv8c1f488c9wpfgulmh8pvhjzob1896azxhonugabd39lnxnkjj0ylhyi26kpuz3szl268kk7mtkz20pm\", \"u28nwi0nchnz2aw2qn30sx30y6z54tubjjylob2tatkjr2amb8dn2m0v40ntctfnq4bbm1q6h\", \"wb7tlwudeemej7m7bh7qnz03qlwayoxpfbj2t80od27l9cjpp71dpmazvrrx31wd0505jivsy3etevnnlz9\", \"8j0ozo099iljzvehonphjt5z828sx771npnrexat937lwq1x4x6ale5kcsd4e851qg6j3rkjn650c0b7vqt93u230t2jm99aysqm7bxtxj9p81ijcee6ie3dqb2pja7up9yuqcc79mi6fk4s796ieyat4457ucridnaynbbnyrl\", \"sxsb6a9m8udwk2fp7kahbn5ojqsg56ywdzyx4por8gt1f5vukwrphciojmnpxazmnq3zvx3u95sjhqkerkaver0onaplo549tog1f5mkgd1z8daadgaqf9ppu7ph87k2w7lk96ul9crnhot5i8xhqd97dtp8rhc\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"h92adn6o1tq2j2meviwlucaley18qjjvdkmb3rur4ddqw6f9p0l3kkap4c4k0npcyuo7554spivromnvli0mggfgocdm1ydafmf\", \"sq47uqbfmsdoo2234xdptet0hztv229vh7g0c3qe7im1v5ybq570yw4l6d6mo03qqcdej4eexpdrpqnyyf823wud5mp5fcseubvc3gq2fgvf561mgepu1utz714fm7c55ysniou\", \"mhki5g39pmxepe4dqj74tnqdxba56recsh52p35lo2auc7kubhp9tijmiqyxbqjz3em59cujyq3dw3rz0nia6mcv86pgb9e3zcfi87hhhnl3h2ikhzk8lpy2r6nwi81\", \"kmdue7gg06ro9flzt2y3ldfu7xy554eh905o6fceyedmbf9hl3czh6oa0wqb44wjojla0u8cnkgm8wl8psbxascnru0epjlree5alo09\", \"pd8ilkeqycp3zsv2ikbdvv9\", \"5nn9oqtpqmlncsqrw0primlhb9e8jb28jm5n5bnjzymmaqe9fbw1h2q8io145zmacn3yn1dz5qbtbiqfomdpj59mt0ykefs939wcqyb9tcxiqng\", \"sckj7aisabnstbaboln4gduvbusxj1z0vpu6n89h1mblu1tqse8wj4ohnz7u3axe8uyspwqobm6ierowjo5a2qaebug98dt1ie1vh2zm3a11hvqtx\", \"6c2qollk52ldildjx8uoflf16676i3a40vbpfidwjwccf8bvmvd7rshlqa2znckfa1hfhrp8fjx7xbqz3tagzcoq6wu16rspl7gnt40z4q82qg535kfhlfw\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"lp9nfkjmk4gvwya0mu971n99r4b4qiypb1agrtgsfranwwv8gmy6ktaw1y9lhwvu37lcey72zka6r45pc3uitaffwtofbmcqzv35hk3x4dncssm9h3oeb\", \"fkn5l96m9plv7izzsg6rary5173285aec3ljxf361cmxjftyju6pgndjrs3n1ahikkxdsmoy67v9j\" ]\n    } ],\n    \"service\" : \"qdyfjqvl2lxepn\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"5vyas3rehbsugzg2aurj5m3606zcoctlwgze3m37bw32oswis2uz21hbdo86ajjjq4x4ad816gng5314z5w7tmam9z9eeuytb1f81tt34m1day1b7pc89xugcu9\", \"6meluj15r72hemg60jxlhkjn3gk6bbaxctpjlauklxicqt9cjgx8j\", \"gxbomwjknpxjn1z268xpdnn0yo2j2\", \"uz05lhf0dh2rzeafj3ebbjxwu4bx0u2xbtg567vvmkeer9nlt8tioqlvlqlfaqqk9x35fgdzg3eu8vqd1hysi2l9gmkpro2ucs5d3s44tpq21\", \"ajt3c08qsec5m8enp8xfvgx2f7d3pl5gkb7bn71tmwz2x73jl23m6q8l7t9qlsr5gciqjoqfp7psm0435aubpfcsvhz7\", \"hgzik0wjlgh3ppkv3fguedifh1dkdcx9jkum31rzwqpyvpm04yphd03q2rxpoa7slpp467yl99xjuru7gti40ejdjtybmomdcaeojy7yr6tvgudi717ag\", \"0v4ujyf8556i8rc3j7y0fn1qqudk50g9523rk6tz66t7wd16dct7mw7b80q4ye99ea04666sv6kkognfxspe039cd6wja3wpei00sy3mxz2gh41zbbyjnkhxl0c7qmui607zyhzirmohcrkae\", \"p3ib2jowww1yzegu0n8vvnhzcdrguv4jyl5jqhdmamsqpumjk6olobepu34ds3z6cv7hpa2qt5gthjvus4iscjdrsx9wz02arlqu4vkyjhucczhvvors088vex4crscl34pyxeg8z7hn9b1ihuyhza9fhd7ya5alnr5wgkbbdyxdcj6o6zny25gu7he6nddphi9q8\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"35cszl22vc8gr783mbqrbxfwzutybkpy1jkd1gg258bme82lk5fctrxvew5n63vkz2j6slqot898z9c0rge4ykwrr4cth27id7muok0d5lh3h9ow4lx3pyeuwegkfri2ikobzha2va02szwu0vafv7hfrbfgxs9ysphm0jvg53j76stlhjtur4xz6e\", \"aslrf5hnx22h1yq0cm7f44deevu652lyle2fcrv6aqfx7qbx91ykcjjzm3ie310zyb0t0w2bujb51e0jbucdlf9folzneq88pdw5kngzm1mkudcf9eue4ubijzd938xsb398qwod9707w7fpgz0nbqe7004c2rncwk9dfsqfgb84uomcbya8gf5\", \"cfdb54k9s363ab9k8s8s0yk7jmj8jfuniey3ig84cwq54yte2zakb7qdz6tozunrphh\", \"64plx92f9sxfdppaj6x534rswhg43d293g18h31jbjd9scytxt0e7ofy204v5mubnvfomhxcmn036gpvoduqr18nvdeiwp56\", \"kdb1bd7pr9r8jtgylredysceqvd7janogmeolgpg2bu8qswnegvav3jtthld6jmas8qousmlubfezjg3ygyy1xvgv4z34wwvcvewumi23998h34g83wj8ff9ku2761ntk7igct95edowy6bzf9cfz8111ln0vjwewsj19qzgxbpyjszwpmiynl4s1vhnxq3chioa5c\", \"za9kxbfaqxtgugu4acjvy7z8fivt6twv3ggckz1iiwatm4cazkxwf481kbcr95a0x82zhhqktkbk18772jsr9syex7eoktq2rderf9y5l9gwbftglu38t1l8m52z5fwa35hqsr24kykkf543bk6zqqpqge7l2mon8tyty40uhgr1ei2jkbmfjjmsdym746rmzk\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"dnbd811d1b7jpdymz9hgzd0jiox\", \"109azqnlg2qvynta371443o5vqco2sq1ge9hdl9xll8oahn1hlsaksl073pzh2vhbur275pzbz5ikx5qa0a8qwlaz\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"olx292rpe170tr6mou6vba0tnxhg2d2d36fvp7eqghe\", \"jebh6773d81xvxuigkhrv2y9f6h2c79ak40lsvxkxftqgnoael4z2c8f93rlb1ke3uybxbp9pqslx7qbhv3qi8cfotbkwwiset3x21ppmxq94hcb867occ8km8cb0\", \"1sa2m01dfu9n4v0u28d9qd4yownohu6pwn08w3zuswqmaorfyd3anwdearnl2h5stsqexud1dtzbniqt1\", \"dqbj2rimuaemr2q3gfprb\", \"3272oscf7hwb6lqy3ie5doyqp8s81u1cxhsrbljuknmcqb\", \"8ezrochfvjvbif2ie1jmtu8uycp4g4xud3py94g4azu4qwxusqc350bpnerakaw6wtjbpclqxxqtffxbnzgl\", \"bpsnrcybrh711mdx0rr3bhlk2hzg\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"th1ji06dbxi40x57iv9k16i8vmgru8uxkt1oxve7ablw973xeo2kh8hhdhbz56dzis196xlw0dhwkptgelnirnxsp2q1tyzwiha5b67hh28htoncrjde\", \"jhd2x6s1y6wfra3km5rbx3xgj9gwgsos8g3rdgy40k3xrboj6\", \"gm5g965uuoln2l29\", \"te7dkkqat32wvjrjolghosmt1ad5kilzs4qgo4yy79xwcmf0o8scsol2crdv24zo\", \"cqyo8i646zdxlel0zv8rzrssj3zau46tkiagrk9kq5jy5ltef90gci21vip0paa6wdt3n44r3ny9njl0lijv8xizvold81vdejfbg2d4z2bpscosnwcd0kylodah3h6l\", \"4pyrqx6up9x4qq7zjk6pm7ksg4f9lykukr2aggryng9fs5z4osnb2hww7o1to3o4z8xrapfr0btd29nembsh6jgbj3f6u59j4t17zx4p47368vup805zoqswx1uo1lb9wezwuvlbkowf614fielxap58wauwfqmyen7\", \"geo31q7b4sg3605jso41yiz7aydud60418w1mcudr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"yuscjqf78pjq8ptnff1rzo7xc83zngpiwtu71mkx7kxbvqwoyvslfelpmtpjnf49088pgg4gh7g318e291td74gnmwhpgt3bo7ty2eeys4yk204lyq71jfeahbjaqzjnbmxvpclkrlal2x8gkki3a5gn5080s5s7ldw7d33peg5zkoj\", \"tzr3wct4basqrkleuxfo57oqnbzvy9mi0xbu59j34roo070kyu0t079csri6v8zf1yaoftpctwg52js2dppp2kl2yxjujpr6cjgxad41lwvqmfv4hsrua\", \"q9txcbn7zluk8iy02r2ld3ygthmyceho9kotm0ld190rb2il2erw5sarqh158yq7ujdskyrviuhrkkznp39tv4chvh0zi75ld3k\", \"3t3ieyxe25u9t3q380gj87itvdjzzusiwbc2vbewvpdp3c4zzt05tmzs8cf58kcswg3\", \"nl8bzcm4vp0i54n33o20u3y14hzj8hnr60l5fgakyi01p22bfnw68x4lsq7igp08izuoc5sp04dqnwhjkb1voxb8lx26sfaq8qv4x2tn1qf5mgcotxsfv0fvrwh5jdi5klo92csct66mjtaom94a8tzmm96synvc7vyfkxmtspndp\", \"zmerl4bxlwzp5ywimbg01r35yyzy3s7qu9d7sg5o3w0k4kiaur0464hp0lshy43b4oczl81z2xpgsfue4qyw3g8j4uvrqwdjyued79zi0cf18zuj22lynnubuzh322zmnh38ea3833yhmmotitauz00dyudh7h\" ]\n    } ],\n    \"service\" : \"12l7e2v9p2wbbbwrbm13w\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"33g4pp4pqh8vmx790l2vqdype37ac3yepnlz0y4p4crt9dn8fzvl2cxkchhsukq4mkrex6a4ia9z315a85kd2ze1hc5juvu08ogvphszuyq51b0mn3ud6ia3gjl076mb59fske71uanfq11y0tb3f15bb7vkx35\", \"u8tjljkmb0x1yex379il2evcu5etxjowh5gc7gkivo3hedsj01tv2wurzw2c7yag53p4ms34nldxj4nybz96vvilmgj94u0d868vsjtsjh711\", \"mdc6epuockvw64mwq787n5g31x0ujux6d8pzy0mpq1809pdpvo9ux7stbm4lwksn2cf5ndsdceaxulbynf9zm2o4zxhsxsptks37r6f4j9ur713io84bc9zg646jx555tf3xhpv6bp4eqx1jesvxlxilsyuskofbbjc\", \"lmdazqoauysah3jrpu5xwu\", \"s25q1k1ywjgn8g5oxgoanbbtt8qrjdszpz880qydi5slswp\", \"uzwdl6wbmqg\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"64kqb981anpg52mjzaggihzozsavzx4uo9jt6bf0gqhoezyhobbifjex0\", \"odx3yr670xcyy09zifj5oqjfloc2i3n209v9gjd3lcqr5b8vtz3vlhidxlf12ugsga3pcx1v77zwomp0rjcn6w0snrbl49a4ctmtb2d3a0751049qelf740dk5os2vf786efddb6i0aymxgqoqz9pnffconsbx7kk1pxwy457j5vbiuxr1ws\", \"ndp3vpznc3yhurweqpicn1mrqrq7qks6hg9ekk7wew3otl5hxj4elu26vgsx04u8q3zj4n8z4hzx\", \"6t9asn5ocgrgfdgpqf9mop23qgjv5p3k4eyitnrbyhj7d2o0zza1yub1oiwjk5b5geoiqmc8lhdqj29vo3dai2z702zfu6zvfty46e7zj6fqe189ty283rp\", \"78411rn47gufzmo81j5mpv8tiz4qvp7clol50ytkzy6trfdo87my6vr13ck227eu9w7ig4igh68s1eicpibdu1nujcyekfeu8uvp1a5xpoqr1p710zsc1w3yr1873a01tt69wozxq9mjf9f87wty0h7r7yccewrz316mslj\", \"4uxn2tz42w6z0grtw7q0ztg4478qnz9ruyqteb12oyas5hwkl2gr8ilrby5\", \"5mgkc9j9ibmf8gbui37io61tnpghki317g6aq4eukfuu6txop8ciyk7awug1m58od4f2g7he9o2slbq0r3sau8m6kyo9cibdoo1fgmhubtwnvtng8et2fey0onehnqbyw69i2w4ue7a9vsk5sgqxqdys5\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"vx3jj40r4fkeennorb76u5bc11urv9uu5x1x08n78sv99enwbxhk89wwllopd6fm0713zpfaax4\" ]\n    } ],\n    \"service\" : \"0wd1blmi0gd0wvi18uiwi7kq2nswub8tzkzpw5q\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mod6kmekfsit07vfixjlv8xlcbcos6xj153bniuiuwf1jzcek5l3lirc6huvp\", \"5s0ow6i3kj5exhbikf5okmzp3wsbf3bsid9d73skaxtfsrf0xqfb33v3ktjh7jsk4c2a2eo43qifstyn9x3aw8k26m6dnf2eowe0iim32svbc58hdnt2f1x2b0j\", \"zals62ezbzfaeh6c35vb03f7lvtyrwfz9elljjtbqyaqmvyrmy8btykhuaikvo9ycm01\", \"1672lhhywey7g5hk5m0t3sjxz2ple95v5rplanu7c5x9a1qgr87xa7wcph53mkewug6bfkb1xm3za5ofyeaqjci\", \"zm9frgm4wt2yf19n8s9sxy50wvbhqe3u\", \"z0ij34iopyxggfcdi3jo1coumdacb4o0k40why7i0fwxfa5g60jxia6apiswp3y7s74r2q70rxm2ahy1v3siwpoktu3xpz2er\", \"nzp1ae6ur7qsgt87u5vlgvrvumqe6j31huv7szdhmcd9a0kqqxycwvog10ch454m4jtoyc1h6c0nh7ifd1eh1l8w75pj5e6nkfte8wric13a9609zqvzgwcq6fc84t4ohb8b4377s5yu0i4ds8a8wkkno6ds1i3sqsro\", \"6gmutg5782823tjp6p1aczt8yoay1f25ndkl4gaoegy32fxiuf3aupe58l0i1x\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"r7uxmnx0qpkr15mu3tjcvjs1qtvoe9quk72o4g67zyqr7em53q4uxj6axa16xj8qv6d2cwl09rfon7akesyivrpk8p6zcv30blvltrkkad3tvmvy85g95s0mwzwmxgloks78oziexcv0xxzg9a3d3tt9vrzxum81zq5mhlnq7\", \"qq2knbaa9lcct0khn1s96iebxdtnaz5s0b8ljjzg1og\", \"31ytxwhangqcje4emirm6fyihhdbdxeptybhvntakj45eoj4tpyalffxwijm7t2u43lrk6k5q6r3twnhyt43i2h6658bwlrmcgk\", \"1rtcyowqgbr6xiv8x9oge8wv3f8tb0ugvlkpusnvewltvi1pct4oamagd4gl2z9v7grhf7agia4ss2hgyvn4pwz74o33y5fb4raf2xqf4hcekir2jo8lofbi631r3cxbavah6eivveasuum1jbgz7rdl0\", \"9li2eytltdqaq0zki9h3lvaxml65xi03peolpp0alentuukp637c3rp7vijdd9p8fx3pj4cydz93ntab4c3p2ew3fr324aeo1uuktvlciqx8sq267xq20n1md\", \"naxh8cx1dja8txu9z4itmgozq12fjzu4sn5clsfb1zwtfbhx1wj\", \"836cky52t8l9669j1oq6hnhyyu4kbmowz4el1j1lnorojf27fjb62\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"iouqyalp5pllwy67gs55nxjkbwa1p3iup6os6gtysqpdaj5s0i00h4r9rdivgi43zptusgr8dhmvcr4ny3l2h2x1a2h6lh18idnlumojjqgnhmbkq3x71kzs84ovbo7y96aoq1o\", \"ezmmg5uv2rz43od1uctf7nsav9y1z8ofzvib752ibwqyxg1zordwhamvlivdhi1stekj5d6yz798zlla1fjlfsxnn91y4wmemfmm\", \"liz3qe2pqt266jd9xolhht3mycaz50f\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"a6bxw9bcemn1kfpkvr6y7ib57qnb4kcfvyew4mn483ufvv36b6nqpyh5tl0jpvha7c5mti1xao2bv57884m3kd771wkw15m9zklmhbvalnv6oc64b68rmpfr\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"wkic1fuf9ggnt8rdkq71d11tg5ua69ercyemecm1kw0eacu82ijur8d2upcf4rjj6trcgrsl2c9im8li\", \"rlpanokvkz8h7dw5sw7w66a890b92i1xhw33kfyj0lanvd4mlqztnzl\", \"j7dtvcsenunjsf41twkqyw29uby82qshzlxba6iue9\", \"9aqhq0z6tssm7b4z7da5lk16lely1pxhbcank82t5snfhj2mx9zr4h0tmuacv08zqyq90j6oweyzc7vviznh2blevuhzq9bkxtili9u9w9rrbi2udk14cau7gt9ttkqi2tzw1p8vrhurouub4n18x5131sv0splgksgq5xaywfd6vxsnu\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mo1sxfs1d4yo8w0a3gmr9ezdffcad14b22g5hgktzcfkudb2laxthxs6lfs79lf0id04itwd\", \"f2wmtwpqxuiiyub7w6i3eo3oerrk5yftr155ccbqh4bzdt736254d5zd722lezgit281c7qdnec8l1dvx219yv6y58qnf6xyl7yc09xadshwot9vzgxfyfftvnneo8p3rzilss\", \"3wjdkfvu9o28wslcikdh0wg5ngykieew475au4tbebqfuoak0ijhf\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"m171phfv5e2yerirr8u0ft0c2y64atdk15cgjki7hd3iqzlyih30puzipnt789w9ttlf2u3d5l6wg8kfl5mkqezclr0a2cszch73ioq1f1uo2q328y7y91jaa1y0jiapw1oou7haj2q2imhov1qzv59jgeafjk9w6kqvuz\" ]\n    } ],\n    \"service\" : \"nrerbpmhux\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0381b9f5-97d4-4c5e-9dfe-854b1fc6cdea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.631144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f2d249b5-65c0-42a3-a98e-fe8f574978b0",
    "name" : "Creates a new ServerTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/9qabjubnh2tluhas8k4wdhhl/serverTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Maryland Ziemann V\",\n  \"error\" : {\n    \"code\" : 291728765,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Accusantium doloremque eum quos eaque asperiores. Amet qui ut. Possimus laudantium quis distinctio eius et. Quis sed facilis deleniti quis enim quaerat nihil. Aliquam voluptatibus nesciunt quam asperi\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2d249b5-65c0-42a3-a98e-fe8f574978b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.628632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1740516c-4378-483f-9aba-ada7fa00f912",
    "name" : "Lists ServerTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/k7u9ib0afg3jz1ho07p2kw5c20hxukw1k8aj56hwex6l2139rf2etx7irhvlvmjhodhb6e213jkmayj1luj/serverTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"s6y8mu2gu85p8krri8wgoprhvsosh17cj17xr6qitsdhmic0575j753rxabfb3m2jqxzgku1zf4nh2zxj\",\n  \"serverTlsPolicies\" : [ {\n    \"createTime\" : \"2022-10-21T11:48:22.627991Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ptjwp1b6mp84aslmg9r1w4ezvi5rxd7w523buef2tc50yt3k4addfvpcd97geu7stl4sa5fiputcly6atz798vffte2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/462861\"\n      }\n    },\n    \"name\" : \"Neal Medhurst\",\n    \"allowOpen\" : true,\n    \"description\" : \"Ut impedit reiciendis. Ut suscipit ut quisquam libero quae sit totam. Accusantium quidem omnis eos. Minima saepe fuga maxime corrupti recusandae.\",\n    \"updateTime\" : \"2022-08-13T11:31:22.628275Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1740516c-4378-483f-9aba-ada7fa00f912",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.628376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListServerTlsPolicies method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              },
              "serverTlsPolicies" : {
                "description" : "List of ServerTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ServerTlsPolicy"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "4893b1a0-e73a-4a70-84be-047faa16a9cc",
    "name" : "Creates a new ClientTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/7r5zn1ekk2gdvlsd9ikc99ma/clientTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Emmie Hahn\",\n  \"error\" : {\n    \"code\" : 1580539799,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Error nesciunt ullam ex sit. Rerum id accusamus. Corporis voluptas corrupti aut repudiandae eum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4893b1a0-e73a-4a70-84be-047faa16a9cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.627902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "6b1777a0-3d71-4f79-a87c-328dd9e236ba",
    "name" : "Lists ClientTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/1o41wjji8s59fueripofhxvbq3itujrwvhpuez2i4ozltz4q47kq6b20o58en05ecci9no6btuqonl41h086pncow0lkr1ks4pky5cbv1zb5exqq2h9xepabqsaq2kytvf312tdouz9q2em0wt21hd67/clientTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"k7qh4fqdencyn4bzdsfahle43m3tpkd3z61xaha5ucllzra6t7mz8gjx70i\",\n  \"clientTlsPolicies\" : [ {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"8wscrvcvjn6khthbllqognrbm68w0sqqs0b03lay4r7230sfjd1w58axnan6u60h5g23mdmc68m9\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/948321\"\n      }\n    },\n    \"createTime\" : \"2022-12-06T11:16:22.621426Z\",\n    \"name\" : \"Remedios Dickinson\",\n    \"description\" : \"Provident nobis eos illum veritatis excepturi perspiciatis. Sed beatae facere. Reprehenderit aperiam reiciendis eos.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"vhi15a9598sz50yho25t13j26qhezt4hdbmgzn728gutlczq60rmlyn54ui6hzi5b92hr8x9hlbl5h3eboh3v3a1p54u5wgmq4cfnfia7novixs1t6w\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/200023\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"lzbiqo5dgrxjyua2iw3o7nd8usvm5jp\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/613497\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"l7is1fg3hwv58uubvrr6yvhgfwvisj\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/237374\"\n      }\n    } ],\n    \"updateTime\" : \"2022-12-14T09:59:22.621811Z\",\n    \"labels\" : { },\n    \"sni\" : \"baigrcgdv49s8em5lczpymzzzb92u8e\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"qhtiv63ranww8x0e5bgggsyq2y4sgh3u6wct4vwvk624\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/595545\"\n      }\n    },\n    \"createTime\" : \"2022-09-20T08:56:22.621947Z\",\n    \"name\" : \"Maurice Collins\",\n    \"description\" : \"Ad consequuntur aut inventore esse hic accusantium. Et dolorem dolorum autem. Deserunt quia iusto voluptatibus dolor labore molestias sint. Voluptas in voluptas qui labore explicabo quam quam. Sit und\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"b8o088o4yfmfrg0owodug\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/640213\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"62m0bgosde7il82tmhldf87zqle6q9fobvrpn7xtltz1pojwm9h0cwa1j59hho0rwrf1gd48ro6dkj3z6q20u4zvsgyjxwae3y6e7on7gg1\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/195647\"\n      }\n    } ],\n    \"updateTime\" : \"2022-05-31T09:13:22.622265Z\",\n    \"labels\" : { },\n    \"sni\" : \"n9wappunplu9ige5055vh2868v28tu3sco1r60aniry7u0u3dq3elxpvia7nxk0fzgxlqodzqgureh5im8uaq3zoozfm6intjf738twktczj9cyw3xmyyj7fowh3hbpzu4p6kqebuojuspmw4azyfrhtsf5ms\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"902zkw7g8mu21qm6soczzz1v8g7dggr7kjlec9zhgj38xj99g2i0huo4846l9kqrqwq16f9gomkjr7yrtiwvrlx1xcq1the4n6udo484gt1gry5bv77xsdu5sdwo6ba\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/430662\"\n      }\n    },\n    \"createTime\" : \"2022-03-18T11:25:22.622422Z\",\n    \"name\" : \"Lawrence Bernhard\",\n    \"description\" : \"Quia ab magnam beatae nobis pariatur itaque ex. Repellat autem qui voluptas sit. Itaque sed eveniet.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ouqsk170sj40lltlbamxte1zxwcvto4ho9ixc2n6tkzstousi0o6wv36xzk8acevl22tckkfluon5imcdx0dmwxqpym7bodibwaj4x4c7zs\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/078347\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"seesi6b01gfsarkb794iwkupr8qtdsmmjzok3zyqkhky13kw8k4h069kp2i6swvf8\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/065329\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ny0ybx6wjcw1iah2bf697h1d5xyif2ulrzxdvgbrudbujrnff4bvly479fbovs3psg0abohv4yh21ngevft07rosqlfeoo28kx11ho3fx5q8nb1igf6ez\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/002587\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"iazn85snq787vrcsbpcq5y2e975nt4cgl8h5hh5z9t4b4glbsmwslq5c8gaocg5ayg04uw20q2zhiordhfjpjxd2w7kw29t4b2t43qnw93sx0g6t8fa6nl8j4q21iwg3yirm3yvpyygkr3mc7g\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/719568\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ma07zlpxth9r7sceqyx0mvu1qkduiyy34dsqth7d70klvsh6ffj8uwkb3vbnd6kaskywawf20g2fffkjcdxlc1jgyxtybuymzficdt63l1qbwavtel7x\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/149288\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"w0xtcoiy6gus8y7jzqt7g8o3kpvc8o36600zcuywzd8ebqriaflcecl\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/317051\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"65l3es9hflflp9i1ko9t4wrfw6fkvutnjiuf3sr8ddd61hrs1ktgr0ussif2rjf1qn6z8p4zdxyg70atyvx1zbvb9hriu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/616558\"\n      }\n    } ],\n    \"updateTime\" : \"2022-08-08T08:50:22.62329Z\",\n    \"labels\" : { },\n    \"sni\" : \"yu7q3lulgqknobjfo3folquoar9oo9f32pzee7meakuel4f4ayp90srhnpz13eelia3q9msp0byefbb3u09lbhotfn1qjknenzw7arago5v8fli8k9fcj2fsruypuvu4n5lca\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"58lsts7nqf16op9obtmdyk9l3l8meqc577s4j2myfuxqzkhaujrgjryz5fjph98ogrvok3eoc2sp8zhjz42ejv3iybmnodwmi648euo1e8h0thf1531e0nzm6j1tp6lpjxahxdzhcbj5gzv3ysr4g86zwi8z66eu3d8i7h0n3i4gdxmgcbfdeah0uo7b3zvt45cg\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/225090\"\n      }\n    },\n    \"createTime\" : \"2023-01-11T09:19:22.623481Z\",\n    \"name\" : \"Dr. Donnie Wolf\",\n    \"description\" : \"Repellendus porro voluptates nam ea. Distinctio in impedit illum numquam quas sint qui. Voluptates deleniti qui officiis repellendus ut veniam. Inventore ut eaque consequatur. Ut possimus laboriosam s\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"k4b0oid6cpt4bu18p30r3ebk81usuwn4kessethcramd0a71xsvs8764jz94vlx1okgho71qrrg42513fjmc9h0x5tb4ka1lhtcp725k8tamtjx2rv7bnfzxe4y475xcptruej92u0wifw1n41ditt4veyw\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/784893\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5qmcud822g56suw1r\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/123542\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"7qxr6yx5pt7q2t9f6g036bjzqz0272iikq58b5r3q138zc8a48jh34ime73l3zcrgn9wa6ckzzp2agrm7zagoxrh4nt6z42ij979u0db4m\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/010149\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"hegm6rdn3rn69gs10zy5g8xen31zkld10xqk8i0d6tb4j9urcz6wk5tnxbab50qm9j5hx677c0lzovvsql1g8kv5bye0ryt55x99qxp7j059myu22gq1ex7\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/243570\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5r512xum3ewmycktgucd3y0kaays74szpkb4k26sdu93blkvkpw0mtchde2yuh9v2bmi8fnuyfc47jm6nbz7o8fd8xpfgw1v0p6vae\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/113765\"\n      }\n    } ],\n    \"updateTime\" : \"2022-11-27T10:10:22.62409Z\",\n    \"labels\" : { },\n    \"sni\" : \"xbl6lchw2g149dbwh1i5xjqc\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"yq6ss25w2bj5e1ctkya8bkghvmevccs6v4lp95xwqtk2vk4iz938wedku8k6mgdgpcsps74vg459fe3fpx82mcnvxh00axwgc5\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/123739\"\n      }\n    },\n    \"createTime\" : \"2022-08-02T10:21:22.624235Z\",\n    \"name\" : \"Carol Treutel\",\n    \"description\" : \"Eos fugiat omnis esse eveniet enim. Perspiciatis quidem facere et et. Commodi nesciunt quos nostrum. Est placeat atque. Qui ut unde provident.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"0dln3rfrl2sjqdki8l5itlfx4ku7sgr60uoqtaq02w79bzhwug2ou3k9h9yuyx0o0gwpbssjpadi04v522nmyuesvbfdfjk6eche15ngiut5ahmhnla3rxqwhjbxr\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/615513\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"mes3y\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/849489\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"a1tesvoi8nv8epscy72hlqxv57wg6n31byd9melsog06hn1ukz9to2c45h23ymvcl54o2hadddaymcozbm2kpx5hldi16ci5jas0e8k81c5aqdx4x9taumc405t9224ragr0kcmqhih4v4i\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/655635\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"v4qhyjkalv947tu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/725465\"\n      }\n    } ],\n    \"updateTime\" : \"2022-12-02T10:34:22.624805Z\",\n    \"labels\" : { },\n    \"sni\" : \"ed4rz4a4rxfbm31y1u15hh14obfz243ecghvn6rhnj21mx24pvdh272n13s6xfaqm3xwmhwttegeml163yq8kkdd1eye3lqjq7n6kd73g232en7vojzf784zpdpyqjupt7grdhfzhvkkiiejjjde7abe0aejn92s9fkgpf5dnqihhboa5ogjgwos27\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"8wwp5917we4yid3l7p5agu3mxr8gni5aam39\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/807653\"\n      }\n    },\n    \"createTime\" : \"2022-04-11T08:22:22.62495Z\",\n    \"name\" : \"Sheron Zieme\",\n    \"description\" : \"Alias nobis nobis ad dolor nihil voluptatem repudiandae. Hic earum et ea inventore non. Reprehenderit harum quo.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"wdu9y84sq32n0fcefbfds6naiydeezrv3lqps4tziafldrz9cs9vd0y2nloge7sl25pl81ewu9ic2hzqxy4yfejpbqvkp4oo33dwwccvi91zk197je5iyfawklszmagbnt\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/357709\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"fw5saj4b0b4kuwwxrdyjcquchibwfp0iz8uvsp31hizpu9ffd2hoksu6juv4saakgacucs9oggk8tjez9dmi6x3bfr6br0uqgd9d3wq3rvu40hh4no1n0xt6nj01ne4w1wwxhuesgx51b53jvyzmeu8kiv5q1t062xududgt6xyo1rakeb4se5z94fjrxkizb\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/329127\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"e1z9q4h8jfboxaj7b5tp94gs9mu9v2oxcq7f6a025vaailxptmrc22v00hsfpnj0f4d41js22lb6ix2xqy1tf5mhk719pv78cvz12li43i7yz6vt0xx\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/271784\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"s9r6pi3v8sbwo99hbywz26k5r6sl2ajpjick2l9j3jg6c07o9nd62dmh3391v7en32340hwgihinnyhqofuhef44flnw8p7hvh3bue9fvkw0bxl1yljlooebuph4t7c0oyhxd4di1unphvdoa3zapkox0e7rxmj3p2gyhjestbextrkhsiastkeiq5a3xc7bmsp2i\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/543060\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"mesfa3htu07ujfznh2y2gzxf4znnvwq2x9tvikloms4ny8fx9lg52864ss1hpbrgizmdslk7k6g3wvboknf31j\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/730061\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"mivpjlgs9pek3qz9hdgounnzjqqm2xysb2hwyy2dshysbvtdv6ws9birv89egttefcozn6ysirtdeluhhabupk8ngoosijt5png1r50iek7y1sa8giha5siba34d6otp186jx1jte3io7gg26pzj6t4z9\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/882948\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"b5wqxh3524w9mcbftsmy9s6rqxjsqiqzygdat3r102hs2i93bw\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/578258\"\n      }\n    } ],\n    \"updateTime\" : \"2022-08-17T08:25:22.625762Z\",\n    \"labels\" : { },\n    \"sni\" : \"dpl94iiet7\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"zukzg3kymoouqttl22n\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/416886\"\n      }\n    },\n    \"createTime\" : \"2023-01-28T09:04:22.625931Z\",\n    \"name\" : \"Daron Torphy\",\n    \"description\" : \"Excepturi blanditiis et autem repellendus aliquid. Quasi est voluptatem dolorum exercitationem excepturi temporibus. A eos totam ad.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"k1orskzikxun7pvkmyo98j69fqsn\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/566966\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"qwu6y5nma8unuk1udi4gs6p06byu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/585008\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"3h4w0sd8qtdvcobnp2hdwpkz3hy9awdo4zt3owf8mvxikgqwir3vafjixf5j3vopqehgyc5tfyh717vpdz9fy4i8j4a9zu8bzgzac2cdzu8r1r6hnqxcu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/620364\"\n      }\n    } ],\n    \"updateTime\" : \"2022-07-27T09:51:22.6266Z\",\n    \"labels\" : { },\n    \"sni\" : \"qywcw06o8i53gb5txlv2nrpqsq8u4j6vz57zozcweq0dqgw0tqdumo768eh9q44o4vt5crsnl0nv75ov7ebjepcpj8ybuqx796itt289oihtz1\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"2rrpuqrtgflxiz5dr5jr9o27sp6b8ge9f0zf5j882hmt6wsvr45ob9a9zu0qpy2u7ycrnx0u8oy8xz7ko\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/889363\"\n      }\n    },\n    \"createTime\" : \"2023-02-22T11:18:22.626902Z\",\n    \"name\" : \"Sanjuanita Kshlerin\",\n    \"description\" : \"Sequi dolores repudiandae. Ab et qui nihil maxime laudantium. Omnis velit quam consectetur eveniet quos quia.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"1um7u2yhrlyhohjq7x1cny6zgn8z6i8fccnbsa7l8vxrv5zvnw9pju6d2y5yzs5j6prhwkzavk6ci6az5n7l80rouqqq08gg0wz16elj2wng07xy0vjp0ijn9fdr7n8zy6bju2516shq5o31lsw1tetarzr87rd27af21ycu6chkdtpr8xs5i7ux7jcqt6gbchj\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/695326\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"aa4cw608\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/478434\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"4rj7rm018da4qq13tyeso8f4uukd1w4w8\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/980571\"\n      }\n    } ],\n    \"updateTime\" : \"2022-11-22T09:59:22.627328Z\",\n    \"labels\" : { },\n    \"sni\" : \"ixfmbmb5n27hx8fwt9bd80u5uyoqod0mu0kfp25znkogrobz1hyhcpim6vwtdm39ema44qtjkinukj2ofx5ui26dtawrmrmt7u6jvjj863hsmgo0jr7tsl250v\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b1777a0-3d71-4f79-a87c-328dd9e236ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.62764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListClientTlsPolicies method.",
            "properties" : {
              "clientTlsPolicies" : {
                "description" : "List of ClientTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientTlsPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "3829500d-b7d6-4e5c-bee0-5e13f54b964b",
    "name" : "Creates a new AuthorizationPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/g5omcy0aduvb8zejf14cr75jr0h7854lqeykyyos5tc0vfgc2hjuxotp73pty8ijg7to1e7sllbo9pw0qt0p7ww896k80n3eo2yax4y393w3lq0sbjt73wkkskg8ni7j754xzuxklnb1zlk86g9p3byz2v49m6qqh5r7i7bzh/authorizationPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Ron Rowe\",\n  \"error\" : {\n    \"code\" : 437958329,\n    \"details\" : [ { } ],\n    \"message\" : \"Sunt quibusdam odit nostrum nemo est necessitatibus nam. Ullam facere reiciendis laboriosam occaecati aut blanditiis. Eos vel voluptatum suscipit ratione.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3829500d-b7d6-4e5c-bee0-5e13f54b964b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.621249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "9bfe4a99-042e-4002-af9e-f23f7a752e0f",
    "name" : "Lists AuthorizationPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/lpav44zxq4w8z4sjpfmarz49q9b48lftxawzjqqotp1agg6jveja1buvxwxuimh1tf64ds72d1fu40rnq9yev44df7766i1mtd74cyypeladw5z6zwfi22evfsoeusf0gadhyig7jxx3e13gu4q985p2ar47b0ifnierixdktgywouaaqpz4np41cbixuimk/authorizationPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"08m12nrxmz\",\n  \"authorizationPolicies\" : [ {\n    \"createTime\" : \"2022-04-21T09:40:22.619842Z\",\n    \"name\" : \"Rhoda Bergnaum\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Non enim non. A ut a. Voluptatem facilis eius ut veritatis veniam in velit. Ut porro laborum magnam officia vitae delectus.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-12-07T09:28:22.620459Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-01-11T09:17:22.620515Z\",\n    \"name\" : \"Mr. Scarlet Lesch\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Et molestias odit. Temporibus omnis repellat qui debitis quidem. Culpa incidunt unde unde quod voluptatem. Ipsam occaecati esse natus sapiente. Natus qui dolores placeat.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-03-12T08:54:22.620829Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bfe4a99-042e-4002-af9e-f23f7a752e0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.620994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListAuthorizationPolicies method.",
            "properties" : {
              "authorizationPolicies" : {
                "description" : "List of AuthorizationPolicies resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "0e9938a2-3078-4c3a-bbec-a558b1f8530e",
    "name" : "Creates a new address group in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/0w800cro20ud7elxuakaqd0w9pvs64o29n3i1ojmxsxowf32m5vovvklyrq3gu99c8mnbtskyulrru1lh5y3kwa28fkbjr1s1vj102w4a4dqnrje1477lbdtr039zcnkwogy00zk1993th2ww8c7v5ybru84lxwrpn32hr2p6lhl31l5bw3ztig5vtw8f5z2fhm/addressGroups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Laveta Stark\",\n  \"error\" : {\n    \"code\" : 146163900,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Eos harum cupiditate ab distinctio quidem accusamus voluptatem. A eum velit et porro. Ipsum pariatur dicta assumenda. Inventore inventore illo incidunt veritatis et provident. Inventore aut maiores iu\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e9938a2-3078-4c3a-bbec-a558b1f8530e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.619517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "6409082a-4f2f-4dcd-9a64-9c80b945f7a6",
    "name" : "Lists address groups in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/ywwef4kw7dvxsf4rfp3ijlhwmzdb3bzfu0v6q2ji5ae3htteif8mbr62n1rrhjicmkfwkfbxrx3r68ovr88qo6u23fo5feaxh38klpwwprenk09pttqz3vpdlqpffol2kbtxjnuz841xzpoxdhnrg7waythq/addressGroups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroups\" : [ {\n    \"createTime\" : \"2022-11-12T11:04:22.618952Z\",\n    \"name\" : \"Penny Deckow Jr.\",\n    \"description\" : \"Assumenda rerum eum modi suscipit quasi numquam dolorem. Delectus reprehenderit unde aut. Aut asperiores placeat. Cum nihil sed officia libero veniam a. Voluptate est mollitia nihil.\",\n    \"updateTime\" : \"2023-02-27T11:06:22.619083Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"v0iricbyuviu1\", \"rp984flj6umtzxl6w1avy6yc84\", \"ulm5162r1z7f774if4yb7zo9de31d6gesq8v5chahv2vfvh0yed8v7vxndanlt2sih8zyvgxyib3771qnfe5xt1tc01if8kpbu7uat1pkv9elhamlkxhgl52fs8qpeydr8zut0f9pf18n42ccp7au09iolujtnpx68ck13publvk6\", \"vhi4cqhcaa8wd5rg3l1afk1jtgnq81rrh3tm4ss5ch1s99r41v8cw666w3oh5bursallvsk69cva0n5pn61qq43acbdgru5axhxp0pm3177v67anfihyndnglhu7y5p3frmizk5vj\", \"1snfm1dmh64lnjlc7zvtp9ftczbtsg43nzpfvehlabo1osfepijpnyxd33g56xuiirs3oxms94o2nar0673337eknne4b2hd3gejs0f36saj7n9wsw7666w1orl\", \"9ls9843osis7fiv1d75rt2omkrbh33kukerb52rdx2f9pdn7v2usp4c4omtqd6h0d7r6yqh66qtmjo2bdmvqby9duc4gwq3exslkpw502bvmtqw43dntpthdptszafissd1wct3ntt36bzqnux0zl5q4epdg56\" ],\n    \"capacity\" : 1475382350,\n    \"labels\" : { },\n    \"selfLink\" : \"x1dob69a2lin4w6a2wpdhh0iu1xxxe3x5e05w2kgrvey99t091zvm7lk25szrsiejlfgorukvrdolo4gfbehggt63fhmfdji220ahkjo6z9at5gmhl77nrpuwaknwv7aw5w6hfgezywvkkhq3i8a\"\n  } ],\n  \"nextPageToken\" : \"md6uv6lkrn79f34ab0sgbowopbsgipohvk1gm3q8e353kngdwrl18pja3nihmp7q50xqilwtg8l1pxtd8gykr54qajtay2mudsbcthuq4bz0s5nvtkjh41wxpu9htz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6409082a-4f2f-4dcd-9a64-9c80b945f7a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.619283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.list",
          "schema" : {
            "description" : "Response returned by the ListAddressGroups method.",
            "properties" : {
              "addressGroups" : {
                "description" : "List of AddressGroups resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AddressGroup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "ff690f41-4650-449f-8e04-a6c2b98a2b3d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Laveta+Ruecker:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff690f41-4650-449f-8e04-a6c2b98a2b3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.618893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0789a7e0-fe46-440e-887f-7ffbfb6a5dc4",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Leonore+Walter/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Emmitt Kerluke\",\n    \"error\" : {\n      \"code\" : 201603344,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Exercitationem vitae eum dignissimos fuga rerum sit eum. Est ab sed dolor. Dolore odio accusantium.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Antione Casper\",\n    \"error\" : {\n      \"code\" : 2042417397,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptas quas ut modi itaque impedit unde et. Facilis dolorem rerum omnis dolorem quo deleniti nihil. Nostrum at inventore qui blanditiis cumque quasi. Iure omnis et. Ipsam vel et nam repellat.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Monte Johnson\",\n    \"error\" : {\n      \"code\" : 836671935,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Officia dolorem magni. Laboriosam impedit atque veniam hic et quas. Magnam maxime error error. Sequi et aut autem.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mason Toy\",\n    \"error\" : {\n      \"code\" : 339018061,\n      \"details\" : [ { } ],\n      \"message\" : \"Accusantium ut non itaque aut. Eos distinctio accusamus. Et laborum nesciunt non rem laudantium et ut. Placeat laudantium asperiores eligendi distinctio. Possimus sunt dolorem ex dolore qui eos.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nidia Hamill\",\n    \"error\" : {\n      \"code\" : 240515617,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatum qui quidem officiis ab. Et molestiae eveniet suscipit odio voluptatem aut. Nisi rerum explicabo minus fuga autem mollitia molestias. Quis harum exercitationem. Omnis deleniti blanditiis.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"jy6g91d2safezo0fcsvk29aqm38u9f8octfwrijhos37v1be3duak1bh9xosidunio58ealztsbb5q1l5pdq9qp7r0kvj2aggdpmr5ot5rhi2871xs0n2tvbp7u6gx7oo3g2hpfzqrb75m5alyjuimqg62dexge3c7cngwfxxi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0789a7e0-fe46-440e-887f-7ffbfb6a5dc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.618788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "6729e171-e719-4257-b0d1-93713c12354e",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Jermaine+Bailey/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"etc0pm4hqnva0uqd8ofj9sjot5h62kypmsb01lkp61nft62x42uo8sixbyghk4re81d6wrn5w9z4a8qxci4d9nxsunuhy2dpamu8fekrkcok9h0d3yfzr753l1\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Lavera Altenwerth\",\n    \"locationId\" : \"c13k\",\n    \"name\" : \"Victor McClure\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Alita Mertz\",\n    \"locationId\" : \"wv1g\",\n    \"name\" : \"Sandy Schmitt\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Raleigh Kassulke\",\n    \"locationId\" : \"t75a\",\n    \"name\" : \"Vincent Abshire\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Twanna Hane\",\n    \"locationId\" : \"4ki2\",\n    \"name\" : \"Emma Steuber\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Shella Roberts\",\n    \"locationId\" : \"u45i\",\n    \"name\" : \"Sammie Donnelly\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jake Sawayn\",\n    \"locationId\" : \"v2r6\",\n    \"name\" : \"Marcene Sanford\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ervin Kemmer\",\n    \"locationId\" : \"ykdi\",\n    \"name\" : \"Shizue Olson\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6729e171-e719-4257-b0d1-93713c12354e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.618017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "a26c093e-9bb0-48fa-baeb-f1e3f503f3b0",
    "name" : "Updates the parameters of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Dr.+Jerome+Powlowski",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jonas Jacobs\",\n  \"error\" : {\n    \"code\" : 1060574884,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Esse sapiente culpa. Delectus aut laborum earum consequuntur voluptas perspiciatis est. Exercitationem vitae non officia eos. Illo voluptatem eius rerum. Ea vitae molestias quia.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a26c093e-9bb0-48fa-baeb-f1e3f503f3b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.579177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "5d7658bf-1ea3-4d88-a4b0-91b000ea8643",
    "name" : "Gets details of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Mrs.+Jaymie+Schamberger",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-08-13T11:02:22.578219Z\",\n  \"mtlsPolicy\" : {\n    \"clientValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"9aygievn5ltn19gl2fsqeeiuntyze9rq3axhy6mgojl6ya70ks3hayyayxw4pbeona93iivzbfq7d96eys1wscexlxdakgnz5a5rvvrr0rcmlx\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/943566\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"i75svoggaj1b2kkzwqmwit8hvejfriznml3xy8x5fbz31gjc5lkjiluab204rg0x4efuohb8q5rkmkz0to608qxvqkpbx3ogmww1ae9w7nmg7wgqrffq3r2gyzmpe\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/465139\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"tz18i7vthcok9d0fhbaxrtp6llliornyoiudihp8p1r6m8yzr1dwfodakouorq3dtlfjc3478ryd8nmf4e5qo0c5lr9ysvv3xooa9fgafjmulvf3uuf22us4ulfsryure9cqgnrr85rta24k1w7q5kr15fvdnnnmqqcav6axmsozv2nhnxfl8co8ylajhqguwwvs\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/616738\"\n      }\n    } ]\n  },\n  \"serverCertificate\" : {\n    \"certificateProviderInstance\" : {\n      \"pluginInstance\" : \"xpzjdieqkhrrvo7r664do92aogvwfm12vfvnxc9xhug38le7fiy2lb5dl7t1vojb6mtmx2tq7pxecwv6dodbznvt9t2a1m11qoiu39mxn4yis5fs\"\n    },\n    \"grpcEndpoint\" : {\n      \"targetUri\" : \"https://web.example.mocklab.io/336314\"\n    }\n  },\n  \"name\" : \"Shawnna Smith\",\n  \"allowOpen\" : true,\n  \"description\" : \"Illo autem totam quisquam enim quia dolores. Velit quod voluptatem odio aut quam harum ullam. Aut consequuntur est. Fugiat perferendis expedita et voluptatum. Commodi iusto at temporibus dicta suscipi\",\n  \"updateTime\" : \"2023-01-01T09:13:22.578761Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d7658bf-1ea3-4d88-a4b0-91b000ea8643",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.578928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.get",
          "schema" : {
            "description" : "ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource.",
            "properties" : {
              "allowOpen" : {
                "description" : " Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                "type" : "boolean"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Free-text description of the resource.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Set of label tags associated with the resource.",
                "type" : "object"
              },
              "mtlsPolicy" : {
                "$ref" : "#/components/schemas/MTLSPolicy"
              },
              "name" : {
                "description" : "Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`",
                "type" : "string"
              },
              "serverCertificate" : {
                "$ref" : "#/components/schemas/GoogleCloudNetworksecurityV1beta1CertificateProvider"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the resource was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "ed6221f9-e143-4150-90a1-c74b5a79f56c",
    "name" : "Deletes a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Mrs.+Leah+Langworth",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Maybell Jones II\",\n  \"error\" : {\n    \"code\" : 1887955076,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Qui qui sed. Dolores sed non et est et velit fugit. Culpa et qui.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed6221f9-e143-4150-90a1-c74b5a79f56c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.578166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "3ba3d284-1d2c-4b3b-8e78-70708d6b759d",
    "name" : "Removes items from an address group.",
    "request" : {
      "urlPath" : "/v1beta1/9zeicijq5rgi8a1iipkuqrb0dwg8a3prkxo:removeItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Marco Nicolas\",\n  \"error\" : {\n    \"code\" : 2022296653,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Facere hic suscipit. Nesciunt laborum ad aliquam et aut dolore. Maiores error nisi quisquam. Natus quia dicta aliquam magnam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ba3d284-1d2c-4b3b-8e78-70708d6b759d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.577936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.removeItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "d7f1c5ec-4ad4-4fa3-acd1-0e022c1b2a12",
    "name" : "Lists references of an address group.",
    "request" : {
      "urlPath" : "/v1beta1/70t8ps9dcmabtrbij5go3ym1vkdytbs636y0wal3ww304pyevsptelp5jieimzi1xro6shjm69mvn50qggsllvrbgx79k4wjs73c766cyfq8lg8zr5rfgsoyluch:listReferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroupReferences\" : [ {\n    \"firewallPolicy\" : \"rvw3g9j4ej2qpelsaimadzs5jnx93859f10tvc1kisimqd9wvkowglhka14ad2b6i59na6ms2jzz075m1bt2ekzmj88kgdvdr0agvzfspqiho5i5b7szekbl9jvafbtoutwk5nzhnger\",\n    \"rulePriority\" : 1488909399\n  }, {\n    \"firewallPolicy\" : \"q5b1er3nnb7rta02wnx5sth3eyz9yusk2r0xj4x9yhps3q60aj9jbl558umot9a759j68wv4xgarj1bxvuant2kjgfnfrd5iv2awv2klwb0v9bp3ysjnpya3mgamaqt1bnbqru2nmfpa1wj45j2h9bg7uxfp5td1if8l889ek\",\n    \"rulePriority\" : 880028229\n  } ],\n  \"nextPageToken\" : \"euxfenpdbawxfqv38t9m6zchzc0q156kcnz4yff2f9di5s9d88lefzllhahrc3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7f1c5ec-4ad4-4fa3-acd1-0e022c1b2a12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.577732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.listReferences",
          "schema" : {
            "description" : "Response of the ListAddressGroupReferences method.",
            "properties" : {
              "addressGroupReferences" : {
                "description" : "A list of references that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "00b666f4-39ce-4edd-ac68-0679acdaf0bd",
    "name" : "Clones items from one address group to another.",
    "request" : {
      "urlPath" : "/v1beta1/qm5uu303ena7jz34ohfo5gu8nfqantwlx80097uag2dolmfp0f0vtg0yap:cloneItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Eva Nienow DVM\",\n  \"error\" : {\n    \"code\" : 1053522110,\n    \"details\" : [ { } ],\n    \"message\" : \"Odit libero cupiditate ut illum ad. Enim aut tenetur sunt asperiores culpa odit. Dolore beatae et voluptas autem quo quisquam. Debitis fugit rerum libero molestias voluptas rerum voluptatem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00b666f4-39ce-4edd-ac68-0679acdaf0bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.577561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.cloneItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "1660d893-b172-4d44-b34a-ba98d976d2a5",
    "name" : "Adds items to an address group.",
    "request" : {
      "urlPath" : "/v1beta1/i71pr54vyrnyx1dpo79v01zceuqubk2f3y3a0mmdtmt9rlulb2d69orkajf7ac0t14hnwyirqlmhq16zdb630tjb19mvumfrko6sjhrjtckphetl9gw198ncx97d5irkb8ymtbiuemmftvfy1rv237y:addItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dewey McCullough II\",\n  \"error\" : {\n    \"code\" : 1690795391,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quas dolorem mollitia commodi. Vel velit soluta beatae ullam distinctio numquam qui. Earum molestiae vitae et ex in. Ducimus explicabo vitae repellat nobis qui corrupti. Quae similique et ipsa.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1660d893-b172-4d44-b34a-ba98d976d2a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:22.577334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.addItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  } ]
}