{
  "mappings" : [ {
    "id" : "3b9c3726-ba09-442d-a42d-273e0d8df62f",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/7hjt:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"z58ytooe2pvhquv24qv9eg9qjh\", \"gyzl9x5au5jxb783xg9hp0yeoaukqq\", \"flfyovuy69j6zixsryv92cinxuiqq3ztwpjo80x6v0gqebuzljcxxzr2f0xytoib377esvwroe6ba689v\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b9c3726-ba09-442d-a42d-273e0d8df62f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.059436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "57e659be-a4a3-41f5-adad-73e63e9133bb",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/aygihec7awwvo9sexpgcciglihp1jjv9213uuapqgvf1baidqulegiv574rwaq0su5fncno15j5u7njoveqs4o03jjygmoex0reuzbrbje2lyyzdiikovrdbs3afu8e6ppfebn3e2zuig8bnw81supul4qfztu:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"8b9ewhybcg2ymus5v14nqt0h62n5vgag70nje809wmoazhxni6ab07l30umfh1udth6i61oz0lwuc0pnbks24hurvt9ap3kldqvzhpjinl3hhjtxz41ykjribjdinaypnymm4r3ayahjthw8p22mhykw9slzj\",\n      \"description\" : \"Veritatis earum aut. Non facere illum occaecati atque. Dolor dolorem enim est et omnis ducimus. Ea non et facere atque rerum dolor. Molestiae quo voluptatem accusantium debitis eum sint recusandae.\",\n      \"location\" : \"gyb9s9rmefvzddonfztvkss699g4n147na2sgvybdxrh0p9zgkp3cmygxoc0e9mqf5safls4fnn80199g5uxywntl61fsz54bid4pq75ad0oc5w8f38tissck9h9030lpmubzeff3\",\n      \"title\" : \"Saepe nemo aliquid eius nesciunt eum facere reiciendis.\"\n    },\n    \"role\" : \"2mxdalp3gobmmly5ucbm9lseeums0aii4h4pluy4ugb22s7xf642lmrbfr5up0expn3fzoou7qx4mxe7h0uzj1tenobethtrlqynhxjg9u8mmub6x1wfbyuko1sqj4totv6xrjjbsm1y4xmriy73kxew\",\n    \"members\" : [ \"rzzmgar8dq8obfac6jkzdf4d9irk9k40xvxyfczyssfywpkrol9ytfl4xepwwecmp0p6ee26jx9mll3ug7lhfx\", \"02fbtlb25c23tk3p2tmlcu4dm5lwufu1hh6s1wh5brriif4yar01uibj72qxd2oq0vt7ttsflm26j5vlmmtithfpu0no2hh0mx8ex30miqei12r7nibg5fvb31j61h\" ]\n  } ],\n  \"etag\" : \"facere\",\n  \"version\" : 1986764003,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ova78fxz146ayvo75fusmk2d4hw99yzs46tmswgfk92gh4tlha8l2pds8wfjxw9n22ewia4xe8puoh8m2h56nsw26j6cru7besoejb39f9th2czyiyxypla9gzyzaajg4rvw2kbgow1t77\", \"u5alzvpvks1b6e6m09iknbx8h3vxg8cnq6nvwfmpsfdcse994jhiwudyo40tdzo9sug5uu677a6t8pchltu5cum6oysg5kjfdniisw55hsizyczuvselafh329r2pn08k71f0480zpfta3zn\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"27piqt1riajhm776xhyx8c8u0see35c4jcj8avur57w28w8fwr1xd\", \"lkl9782w5gzy\", \"ioaqydttfhuxxctzb6ules2suwzjz3lkl20tv5fzqr7a8wl0xlalm61z1ynkdfq53r4njlwp8uzs38dzz5vlbw8admgfy8len1uyabzcndmcq8wryonthjcye9eulz5fpu6s0j4oolkn9rmxlpn5fh7m5c0e1fmfyjn\", \"it3n1sygfdwqhgxpxqdiw605nroao7elb59oyp6sz0dvov28tv5yvfsf08q28i4cr6875vatjwlfec\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"c0s6kucat4z7pcqxeliuj3cezh2f9gwy8szmhesqfp07nzvsep75p7hcgh4qmzmjpg711vjrcz83mky4ajgyhutbdybw\", \"bmii0sof3l927oepkaok0migh191ipum75n6wbjphxjxo0jskvjyft6wkyppuwt58mb8t6t0yoyzcrs0somhxu80413jvzmw8hrth6z46rthbvmz02upr50iwtbdt6lbxidwcexlk9bqpl4vg3bli8hepx9d90b2o1mmc0in\", \"3toedjfxmiz4f0lxpwxcm2nl87pev38q5zl44z3yj4q1honqn25zte7ohfamnvyq58\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"8vo0bnmcpyz4g97vl9kxrsu0qemq22ewi8htxvu6l3ea31cpqc5nzhqe3fuhl483rk5g0eu53mrvvvwy0ih76kqfssslzh47an9cvustgpkyohcuhxbbza\", \"guwaa1kl8bj82o5w4p661gsk08czxqk4lkq5tvins8636j3ugia2upw6zmqpfbtgts1y8s6up509e08t5u8igk0mx2gkwoq74d0mrevl5s3p0ia931xdx9bt955wrg7uigcni0spulnh65rvq9gln5ov4yqkdf4w81wt46bpv1pch9myvg6wiul2sf2q2hlp\", \"kair71q2eop5g281kcr4w7kdkxaecrstgk4t604x5gozo5d3yo6ri86f4wnifg3nlnwq04ajfp1mimr2jrxgvcmb89h41ixkvvv3btsyfkdtpxnqc4061jwhdfw2izn9jyjwezn15hv2il8w8vjimtsmrooeu\", \"blyvy2rp0pcrof4swjmwsdkn1lnxcji0qe3lrd2u19m1bz1iq3ojvlkdqsblgg3o5627l7bvlt58oqnmtbglpawuyd77femwhsdhcrckogzjbx4zc834djux2jzgfqbb0wd676cxfrujk7egkdkc5t9hsj2ba83ppyl7s4nq18mnrx0vgqdef\", \"9514dwvpvwjyfe7inwo8hzkq773ugsssse978x8ig62ja94bwf01eyxdqgspkpljuhm6c5jjx7ih45do3rrbilrpezxic0c8tuo5ls1kiw8bn4v393wrdg7w76x6wdx5oy277qz5y8k5030rgbg1vt0tyjthr7ot0g5t2e8\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"c5lk0y5rg9ou51o7hxiroayl3jl3gwjwavktm03z3yllk35waas7gc4c6m60gtt6kkzmcj2djkfe7cbvw8gh4e52qfacj3htfcpex4dpyu3jfsvy7jmszkcp1bufwuapan01xftfp47sn2xcanfsm9izhp4wz5i54df71fmb8nt5fvksvs9e\", \"asklyy7i831pysy9ko9mzapp92blavflt9pydw5mu5juoo08xgam4vfkuat8ieide0z5k3nhn05wqvk6bt5jq5j3h9ayoxkmmzk9qgq1onlqwc282n19ha1mi56iotig5xpbj3hoheukbgp3iuc1p7utgzdgemobar3\", \"wafhv0vo9kaxgvc6pvsh8rea83t1am0kcvke2zs8nx8ht22hb4ai5lyuocnhzvwg2dtwtsnxtnb2rxoeqyv2gcq904hxvjtriaan4wlr1mbau7ypw7m\", \"czx32m5ug8yvefimqee3dj8vv7d240iw6uhbibqmrtj42yednsly53cp7qsrgmf1w7xe0yqfycmuq0ul3ovbiu5t32nvt17eboepo2x4vl5lq0xol73egdbxeq0abssrter9osnft8n69rdcqp28afizr1q54bbz06siyo\", \"olwf559mi6yff4eeiuu6rum2dsloy6fnm43bd5zzvyy121ky37xi203js7yvqg07glubkxy96udd1vpb86o\" ]\n    } ],\n    \"service\" : \"fgqg3i5e07qdv4bwzx343dcwyeilu75ytrgxkihmd82ag6zoi220f7ld79dhzj4oia51vrgh\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"0sfv8trj7bvw8kjezmta2uxj69cu5jruiely4s10695gb796ulwd63mvhwmibmjh6\", \"umiazh8i6835yd6ehuoi1alktw1eh0sqwckptriblucqyrw5ojm197xn9wfrpwcy59ovkd4128ltmr72r1q46na8p5oaesmxrowke4yo7tq5tk25urnbqidlfun380354233ew3fao3fj32a58xnfs55xdr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jppyjnytdf1142052l9ravsea75vocai6g5efd9dpr2h1f2lz4t8zktdxmbqovlv6vh07ykfcld5tkhb79q1gy064rko4kxvq7d9djkipk1pfhyr6cymc5yz3w47pqsw4vm0dmxm8w6snq01by8p4hzbj1jbe\", \"y1tombpxbrryq72kggzqw72xkhlb8vguz3d54ien5nmgmylko2k7oqtvserhdmuj8frbj2wa3330p6cnqmw3wauw6qpgbzs48fnaod51mf8xn39nxj89zxl7a3g9y4htje\", \"ma9vypfsdprzq3av8zjonsm3j0f4qz5jtibgzutc2v\", \"k3hixl4a8jnk3sn3yrgdawu8gflugl17wrr00\", \"4eomdbwhjhlehrid3oxz7lit2iss7qohfjhoxqlnyfv5ha6odez8r30mv772olx9w4cqzrtrziohcse26ixw4\", \"g7rr8blmdn09sn2zv14kclvdq699j9m0yw7lu2vj4xz6px8dnh9ahw8xk7bhlqnn1gjcovvz9hxm061vtbxf5p8yk750uk9w4xkgejlueqouzflh50pybl4rzeqni8bn62b80q88rstotrz6vaf\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"v156rcq397uomnoyht05tb7dlfkjhxmjf8n0td7qrdhkepzeunabw2ttg66h33nbmmsu3jf40ic5acerkpjz9s861u6fjxep063lwntq6aexelxrzn8yk13d0go4xveleos8pmarcmg145kosqmb\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8c33tjw7gthpd8jgmy1vq9rrvjqz1vhd9tf9zvgjiw9erhdcp02y941s1822y4cizpdbca9nprigtjd5geff1gr4zawhazfregfkto8wn26sccjr9ma2zlo69v4qk8qgmlna119hmln87e1ro\", \"0whddcdnncu4q2t2hx4zi6pi3bpmr5ilaanqlx4xzm\", \"iwz1ddxmtv416vr2mn05g8rlzic9l5tbxjhpca4p\", \"8k21vp2sy6cgwytj\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"b86ktnbbj8wzmjyqb6f09xztljss3gov8j5mfdxidtnma32o9g92wrxxiy04ahbmtsbxzs8rjbiftdpie0kg0oml74msr9er3kcmn44j7y8vld12eekh4kjlblup2lpw9931aots9ayq9qshoycqee2lja0q3ddzoudlfeo3nw8fsxts4p\", \"zm0u\" ]\n    } ],\n    \"service\" : \"tzpv8wff8vtpnwktm19ja34adbmu9a7gcpvt157rnm201s7darbcu0cvdht4oa3ejvmhaieq95hni5e\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"17fvby97jj8e5rz8dr2twpeqbcscfd4i235vejdw4aao35fu2mqo8ls1vq4x5z4ucb9749p1sasexdoxz83p2to6gddyi2sdwzr3jvezibtxhm3iftrwbw2d5y21y0bsmhbuq7btry8dzy4wf0k19ijbv3xzlytuxmdhh0ccznvilk9z6xoj6ry3yo0js0bni5gc\", \"rkjhqhv5nnipnq5iu2o0s44xmhdnjh7lvlw5yyhmibqpb11s02venmy7j72jytfd5xpm4wboq3f7az63uiwn5d2hge0bmx7f8ss9s3jlx2m2w322b4kggmvmqftj7ucc9a7w6opqj\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"zwdufsrr\", \"olc38hpca3pcmh6x57uw0me5itfjgppgt8fa5egs3vwke92pt2aokz4r71szx\", \"7g0h8chvws82mvyzo70e6jkitfcoc2bwfi989vekbhiknk0272dq68guk3lvrl3vywvz2z75z87qtjv5\", \"ab0ci4tmgadhv8t630znrq9ys1hh6v05kfkmx9dkm1rlsw6aycgnky4k3nk29hojx466cl3zrd4bdn6vpyswtf2kfbk8h39hcwykdbbezv0hu2a7990dkopjc\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"kx5te7eorh76zl4zykv0ht9dch3bta58qoy8rogg8lvqnlxpf8iloht7x6jy02egtyjjk8ntekgg7yslu1egwqcnuctbe4x8djrbp7feib9nbb26wjzpaozbu5mcidojeaiedu1sxqub8gf1gdp85k9w7fpt18jmwk9iww9vxdnkyhztkw8lttg1orlgu1\", \"a1w8jfcw1sk63rf9u8e7e2yonlq6ytarlj61jj6pl65udfexke3grd7kjjxw71fbvv3629bwec0e9m\", \"907osdx9oyugn045816lx3jhy5qr93e0unv48yo4jm6dvz6qat3wxrhgnaef8l2detyvuide9ls2hasxgxjlx4rkb0bpuxs6zdzqsx6xyfc7xcrguptnvez3rn734rklvbkok3u4ngxpmyalpqev0lsv1beyi6y0is2escpnzp0na8l3g7egowyll1a1gf3t76g8\", \"dw21quu6dey1gy40y0k9l2kulejfp9iy6oyps2uruhihm18emrv3uia6kxppe8rt6likfeswsxueft0qc9ghjw855n0yfq5eip9ennr59yunqbqq2t758k794bu894sucdcw5cl5jwbwce7327zql4d7pj61c185m\", \"x50r100pljdddk\", \"pc91mbeeb3mge4ov9cqz6om884g9xmhrtl6aq5jwe88dzs2dj71xcc1mu0fsv1otkkiv45uvlglwfbytwa6qqhg0qkwv69z8icg0iznsk27ltp5z3tbuf9zhopr69qr3ima3qzkqqvwja\", \"zuu8a9aqmbo03wxmi96x39g4cy8kjrvx77vd7124p7ce3et4d48dnxjp00ktsqdu254p7yxok9a62by5ledlad8i6u0ftpil8knibdp7ih2abpfahnmxtorsyxddfkttcn6mplooleodjqh7rmy972b6keu9l8rv48vstu68rh4u9xszuk55tjpk\", \"1ooi285bpy363ww8y2wbjwz7zbttgimegrvj0y2pmmdwlu2qqsjalqxaylgeybhqq4cg62h84qpt8vzaleu1lv7jlwbp8k1bl8yw2ij9kipfd6g0p9ty4gtkbt36x6vstnmiqsuzt\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ojgmicg6ln3wrg9dbhy37zonym8s84rv3uk6c2to7aizvf73mm5u6vx6ig4b71vo3ebus6u9hbqznneafeyosnv0klwa9yt4mnnduj6kd63t3nokit2nkn9sebk0ngdkqhkisi00ijafacnn838dcex8zsn5sjnrug9e0adkc6i4l51ork1l5stqf6lx\", \"01mdsee97ysjdg38qubtghzrqccfdh5l85at9bxjzbjortdqg9d57st9cpjo2c89q0eyz867qlwjy40gu6ppwcvji892k7qtl3jtx96fwcldmkdcgozjozqk5r30wydtv6rkg\", \"rq39y544acjgi5unu6uv34dxtuqbnijazezq70m9ss6j9wsp8noy17dnow9gaxm6ol7o00lag12kx8w1l92bln5g30qowetyljxd023769t15oumsoqurhlzxpx7jmgu83vro8uxqhp39wkx3bvbps\", \"v39vlr322ttgd6k6pt5xlarn0hbuvnv3dc3si2qj1p\", \"ykpcp187cnzmlsy3nbq99zdlc5mild1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"gzueyt1skuyw33k5690tqg70e1nj3p0u9a0fbjvl10xpo3u935bnodrt7covej9oaeuyfxq2rkh9yneuxds1g86wi7dkgwdqzbcs3rqwoswc9egt4tx652w1\", \"h40v60mqmdnc5w9qcl0t75ee49wswqupc6fq1lu9kphm1w76zrtz680s\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hv47bf2v90c57v1vlb6zpo179l84pgzga9fygghcupznpmqc8ie0zciumgn827l3nmd5d4yit2bv2ki6iy7qrlc00k1k1rz6qzmgdsp0eybckngeyvlf0wpkp5sfriy\", \"3qjf1ix74rccq5t0txzemw9v19jbjmb7wbtxszcwuzc271wa2ucvw8dtbwuys0gc2c65ff14htfg9\", \"kw72ajq3xbt5j6d5lvqib0r3ka922mfi0h16kmvhgjuj0drqruj7ke27kuvp145a975cxwxdq7l8z0hqspn6307o8n5kvotffwevisajtebieq51xwmxz7mgsx3zwt9cn\", \"t03tide2x5qp2qc1tyzbu0tcr4oo8bdjq0c98f2cut4mzymyuntg986hjhvillbwgwl0t2y1h5tbwwlsmy2aaekgb9qy7u3oy3ze918qu9cjxa36sz7xfi4\", \"f7vsvsvb860h6c0c6mxc7qvdlfplkhse3bj5nt63rje656j8ckmhe4bb0iitgdpw6e2ih3rfuld3bqdlqbl6bpumsp309a49p6xi4xuv1pscv89ga0xptdizbup9i2f9by818bve91na3v0j6obqan1ht\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"f14obcb1al08fxm7iofie56o3qp8ab6fq8swrifx6awy5l29t0bzufbiixc4yj9wmjtcsxp6p86h8amh8ppwlgv72j14iba19hxq245dzvwfhtp4f51o6epoz0y8\", \"bnwrfbhqi45atnt78twzlttuz4fi3htposx9f9bnywz8irrt8gotkjsxu0c8mwgkom41yq41lk0eu68dc17sczr3yveuo8hbm7h7ktu83qfjm05ntsqvhmefsw16h2z93tj4hmbrh4ubny5jngsxw66qbpkjr9a7qe7y9pmzvkzawglo1\", \"713vmocx3mqhmshlw6f9zpagb07q0c0am3aj3suoam8gfvr00zocs6i6n6w7h6xekxe88ftd6751p97v5n0nfn68zo1k9yu9qbjka16dvmk7ocimxtnvwqmn\", \"vnj2di88n0f9udjwjs391l75wk7udlsok0eesxqcvytjmyho7bueel2i90rpxnqxf66q0v\", \"7e7lw5ny7qy6jog0qr3cvpq6py0d7y8xsaw9qh31g681277ve4665e9l74737rvaji4q5w9382qza2b2azz0lwe2urb94mag5gma4uvnvmug8ie9qmjvggev2l1ukgdcxu68ssy6tu64jrmvqz0ie5xlzkcfrss2ev9op6q4fua7ocg6\", \"ep0ecdu3gwv9ejtikl5xhwv0gyr18vrxdexumq1yec46\" ]\n    } ],\n    \"service\" : \"p6r3mkbbcwb88bghai364n0wnsnigx5k2wptill9h9rke2erokalnwfvlmnkr6qnijc2okqhcwdp7tkc815ir53k9krx0n5ef4n0isqpcxcwgai22edxz9ksdh7aapvoct2au1di1s1g1pr9e90jspmz4nxyf7qmkb2do4247y356jtv9oq7hsxt29gloq7sqz6j6xn2\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"5llzwzu1c9ilq1rnzr5o0vh9lyw0crqt95o5v4dje50d04jms1zyabsywyeutnah7ay197ooj3yifeflgqzz8w4c9epwt10jcgkplybk0qcqsppoea8bk2zr6xj2uiucbyyq5dm0syrbyo37jcbmwtzki840loakwp\", \"5hp\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hg3h6g4ewmf1tpuxeydi2g9iwdhdzb7l4diuwb09722sdtni50fp4i2wjebv1wjhsaps32raeeylu34qk8wf0n00b23\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9v1rqy5huw4tjs6lf1eb9z9wrj8m2cvs320l7onq7ns6qhiinc3mjy25g20ghmhubirh0a5habx6e6ytkk5o0c4ur8cago0rot6ulosy0f3codu203at38jrutykai1uk4hg7jbkqpfgzi1ysjh4o6u0eogabekceutrxawrqnn9o7450dun8vu\", \"i1qwzhja36ptemu6gxynawluoj5y9p1svpwusm1ydv3yraobko6k3zxtgm2he5iehh8w\", \"3xq7j3ifsnykrt0anoz0em18tn4jnonbr32nuhfxo7lkw2vevublahdecaqydlmde2yh33w1rugf84bkucrumgf07aby9q3c2o0uq672k5newpzwgudwqh25n0lkergasct94efbp2akjf8hjsz6i\", \"hml4s76tln7otgiu1e2cqirpil0nspvsmz3bw4xcpadqqqxk3hwwjwl945rgrjte6mbp3838v8vgkmwtbw7i2s8ut5sg5oxaudqifopeoks63pro15foz5tacyr9nwwa61gyi7mhmx5w4uey0hkrm3nqaprtvu9jlyo2q2yytx6npm2z0od4vnvlb1hvuqok\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"myvfu3vuv8x1m532z32725z0kvxbs8dsoc0cibx11y3b5wqnqyg92je1la1y3h\" ]\n    } ],\n    \"service\" : \"5zlnf8qnc1zn\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"uby5skm\", \"rkg6tyn958xmno420usbynm5k7\", \"vjwdbmo9gbpsvxcawfgmh1ci4xbho076fcc9e31pqqilqg9z7pafvzyo2cfyjauk6hy8sf92wa6au2lfu95hatslxiccwdperhiihhuwius2t3h\", \"bme3r2qto6n78spo7mtsd06ljomqg0vitymvy5eflcrrotl36kfywy8cp1w1odtcj6z6dtvuh1vz1sehjz2ofmcexwhnbjzkjdj93kcg6f9g2apqce4ss3fgrtxw4u1w2ar3snuzq5khomqia7s92rlaro0y35hdgzrtcds9\", \"rxehia6r5e366pllwki1ycfjrtrzdanxyn125jbeaj899jvobpg3kkz5h7wssywyyav9ov7v27m27i9wncbnst9g45fdgx9pm6w4l6kxxc41ad44rpkygr11pvh2eyofn7m49wwqo32twg8tneq5drza2014ucmsjkq10xdeejewq\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5z7zl8g9xdildv40x0hms709g7nnaws1xif86244d31fnykfdbf1m5xf6ssd955tb28g9ce1l3aps2fluhkhb0ll556ddhmuvre8yimlcmt41n426ioeuthz1mgt7kx\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"f7ujxr6zepixa3m9lntll2u8b8a7pj7wlmho76ugqgyhokylpbmi90tm1aj9umf0knce31vwnt2ulr3lz6od5dj93xc63eu9jabc4oj3u6ofkcx106d70kjlo4b9c84kjb616ogl6iuqw29gr53imhyxt5951\", \"myx0ea0xbjam585pikj9rq7sqovtfpxdrjk0gtelgefe89hxqijleqxhmqi0dr992my1aphgbow1dveywf18ojprlorefe4z8bcr9xsd0pb0l6luchos23opksc88r76ce2s26z9mc64unoy72pn2d8gyonoug1n4nrhzbmk6ji2991l1800aibfoy9\", \"z025l8px7vpxjcblpynjw3ohp7yrhd42lvaq7\", \"uk3ctsq41ifn\", \"9b06fzvuw4vdefqhyvuls30pd5ayu00wlr585njpsc2zdr1sgy4uld2h0lve3w6yrekqybw7zlc5fsylikh5iobd4ankvjs47xwzdiv7h5wpkpq9lyxuwppe1iw1n97\", \"9e2h3srv91yvggs05crsu8idl4ygefzza9hmdhgm0hq10af1j78x4dd3bmdhn412jld8k8ak1ettablu7ho0l846bb9lu2nebh12zm6opw9vxsp8p8qy0zmxevk41vy5vx3w3nfzzrott9zdceoudu\" ]\n    } ],\n    \"service\" : \"6269d8scxdd3mu20q96p4wuyx6vhwcwlbazkoffjab4cgl62ke9mqtyxg0wjy062j19sukqb4q4n32gfjo201r1cp8g2ms4gmrqasbtm9tlp5vzjzzh06surfn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57e659be-a4a3-41f5-adad-73e63e9133bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.059305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "d4b81a10-09c5-4765-b06c-4db7dc0178c8",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/umxzpef057hiosm54rn48n55xtb2on7c6mclttf7hia3yn1ct3w7mresillovdin6ssrep92f8pgmn00hn3tdqf6e1iybdaiaioxvg2z6zeff3riyet8o8tq5pbzgx9162hf20qka1k7rse2mnmyse8tgtvrghxfy6myw5dekgzx699wcocz5s8r9du7hfou2czh:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"3jzo54s7e37rittdjaleu4\",\n      \"description\" : \"In omnis facilis aspernatur aliquam voluptatem. Numquam enim illum praesentium. Ratione sit nulla nihil ipsa autem eveniet cumque. Esse ut unde iste minima odio accusantium.\",\n      \"location\" : \"ovfbiitl0v1avb9t3fccu8ch1dvui8q2jymc98jw9yok3gcx1c3kn0codtjya5kt0myn17jppktnv5uce899sykoap7d7gn0rnc7xdh8o0tubc71s8fkiuo3cyzie3690urmasotea3faf6aprcwdcsrrzcmi4r33e797e50v2zbss0yn15u4c0rjkcl4pguwnt728cy\",\n      \"title\" : \"Tempore omnis aliquid et.\"\n    },\n    \"role\" : \"cl4oj1ub6c5r1y20f1wa73j\",\n    \"members\" : [ \"qzqgzs5uuv9dsrw69xopham6r8vrm28tnarqqs6831o5ctyqjzhucsdohooo09lgbszyca9vrwfoors4lvjatfpct71m8ukuurgp9evy7n42gghgddc37y1bm83l5sr8b969w1yiy\", \"njd6oskrpkzkn8ni61yqlt4mvk3uwn45pmzf3ed3talql\", \"f16vwps41nw88n1yyultp3ogm8sr5ahdbfzn65xmkw695z3bebn5fh3jx7f66jzugdvx0i9w8dc0f6m2\", \"jhw24hhzeja562p8ft7epbylldt6dt81iv7rijc7dvlijuwnby5f7r2axyiqs1xn80htnpmnbpe25k72snr74tjgjvlhtqgogfpwwd2dl30f7821212166k\", \"d4pejejxqors3x1tky94snya793s1776c5dvzpnuibik7gjc2mc4yq5hd6y36bjwqgbzo2eda3eui69ytc20op9h0m8asvd7y3e8bkx2q04bz9cop5fggjvhhebqm09oaeav3vjal0pcmgrdt0jf54jq\", \"gxeqpg6owa4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"e4uvvp615xkgq6ieak0xsez75031vi5ovu6ujevovavvj4mpb786c6u775gx2mxsuqk045tiu0nkj5gjd0ki3kjoqaq6n34qo66gj0yzswrd5j6lccumyydh8mc4n96htviiixeqqmgll4wa978i0f173j1fc6nylhbd8778s2f\",\n      \"description\" : \"Vitae et qui eum. Voluptates ut quae mollitia. Rerum provident omnis et. Omnis id aut hic ut nihil. Quaerat ipsam dicta voluptates minus voluptatem.\",\n      \"location\" : \"mxl8c9gzcx005ernd22avr14jsakem6gytsqllg0at\",\n      \"title\" : \"Autem minima iusto minus et qui id quas.\"\n    },\n    \"role\" : \"8skqv28d4rej97v8bwzdnfy187ohos3vl32ww3njwd5moptrg43oaj\",\n    \"members\" : [ \"f91l88qjyfrmt2qeutt9v6p2q5ynt47sddq5kp5ie7ctwy7l1opuh0mi3emvvf369oxwq5j747tyqds3is1x7a1ygrsxibihizb46abr5kpfj4xcnyte2ot29xg3yhn20pwvjqv1g2puzt6xsizt8nybzj1fybx\", \"lx4o65mkxnwsney6gc73pgkpgxfvfa6zg9sxfzpwonxmpjihk4rpa4tcvzuuiv576apv3nq9e4h3vi19dyy851v357di06qwy6crm1ly41tbhps6qm6n52ts87xjwmwct7xy3if4xkeyco2ukj9quv3scxqqdwjnf3374pnjirv9eyrbq7cmwxy\", \"vzv9ta5aib5rdxvv262vrinzb9xlyhra0l01r017bms8564co4qecafi2axbyzkbwt9chimvxs9ki5r2z3x5ksye3d1qkjt4vvblyd3hjssgz4w2gk3ddk4t7orvtfjnmetjon22hvkqd5uvmy7zwmkz5by4hycyo7481mqg0stz8b71hfyewi\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qwjwzjjhvchboyr4vilt3mx1eu6ge56qzgu4tsnu1ufox07nu07nxp2yqt5c9hv\",\n      \"description\" : \"Placeat amet natus esse et ut officiis. Voluptatem accusamus ut suscipit dolore illum. Dolor nam modi et consequatur. Reprehenderit voluptas quidem. Non fugiat et.\",\n      \"location\" : \"a0q2gocyw6naz0x7s8r49un5l1uqmt8ck74cwq117fvhnkd78hbkx7b16a05jjngircchshnkiuix4nh7pbwgavynoc93f3gi15tolv1yrol1u274hb\",\n      \"title\" : \"Quod eligendi nostrum accusantium similique.\"\n    },\n    \"role\" : \"dliae590b97dg76y0mb3buc3onxj01nr2xpl4uq1inthm918dlog6iuyhtiuyq9z7kkdouaujt70o6f9o0ytt3cxdkuld5dz053o7dk8c6die7t688uewtrws04a9y6lhxmgjj8t\",\n    \"members\" : [ \"r4oiddh8qafldlqo09ilak36z0qygjscsem3mtbnsx68g0bv5790yeobv30sdheitoapdyjw8mcx3ino4ugzuzoofy76celdzu1tjd4ywsxdqgat9sz9zzymy80pwkkx95ar4zur7rystt29hwgvlac7d2noq9jakz6awfteicfdzj1w7ft\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kfwazn3nlfyfkbrxxhp\",\n      \"description\" : \"Minima dolores quos aliquam doloribus aut aliquid vel. Alias sequi id animi dolorem reiciendis dolorem unde. Natus qui hic aut. Rem ducimus doloremque.\",\n      \"location\" : \"kleukbzkslcke2m3m2kr3wu5v88unzyzcsu6e3tnub08bk7ay4n8g5flq90ar4rql623htrq7j1qvenh9bbg82y610qhgrhi7cfz7dgixa1gazk3wlbygulvkxdjlv6fvdcjq4b5mb0nnb1hq3c5joypzt61g\",\n      \"title\" : \"Et nobis voluptatem qui illum est molestiae officiis.\"\n    },\n    \"role\" : \"kmuua4\",\n    \"members\" : [ \"qgp33pmnl0gqzozi58r8qralh4ol1fqr9tq2j9ln1f2feibufufc2cbfdzr5kvwmgt37sv5reanbsitm5d6eq4jmxjhxlgb0m4p0wq6fvxw9g15\", \"lf7f8gp3srmtuqlcc4akaavb1h986saywbz5vsr4c2jrq4avb2k05rqkppgzuezvwn8l3cvl2npws6w8htwy75r3uobsfh4l13p4wunohqptso4rm3nwto3eijca4voumwquvbkg3y\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"u1xpen5eoaacttf44jyw90mx1dww6ftarhgzkjp2k7hzmup6ara8ppr59vs9hp6lsbvxw9czdymfbxeumjpuekl40datt3ln51jziwhtbvkgs38wpxfej0shvap4y2a1q836kk2z67zuo89zanj\",\n      \"description\" : \"Aperiam nihil unde provident occaecati. Odio consequuntur illo facilis nesciunt atque. Repellat beatae ipsum doloremque dolorem aut.\",\n      \"location\" : \"011jslq76\",\n      \"title\" : \"Omnis neque eos doloribus exercitationem quibusdam.\"\n    },\n    \"role\" : \"9fp2nt84k2vtokpvyizmdprvo5ts9jd4jgv0s3qgeppdm6kfrjqilvrlmjgsvfotsrfit3f2w7m6gifqxt4krsldymw3rkgsw4milbqjj8zgjbtl4vv1bxblfjq25s6hzoqa9oospxukaf41gaj9w4e7rlple06k0ztiwylc35tqio2pdpas72mut\",\n    \"members\" : [ \"mn8z0fl1w9dm852vxzz6jdp4b\", \"ytt3ac1xx5ckumityycvg0v3u2fstyryvfvclzlctgqoei8y34pvv3jq5gcpl06enikg0ifwdu7bz6q5hdn5bi9c35bc8okbvqscvvtxh1gjsrs0she4qbomgz31he4437qnnhetu6dircnlxn14\", \"ejdrb3g3y8x63prn9vildevekod8ccdgfikxkwje81kq8q8fdzt1g3xk106f12ltf054kutdptbnq4ky\", \"h9lbvj56xv8myo58xq50t6p2fnc4gjpqut5ee79lbel\", \"07jptc3vu1bcx0r7xp1aqgrmvjzqwvm0a7m914hwpb75ot8onwjpoo2xl5kvkpogeaks1535ie7fh0vjhdluofwh3fuiaj9ugu8runtiy7l6ulrf7d34yq0ces15s09hnbpu6fbcxd2ll0945s9taremx95i42tyk48pzny2apytx6wne9u\", \"orbs20h1jmdz4cvy24yzgag8rxtrjs67u1lft453hgzgq0w8qknkfhf0qjex96hluddfq83d4440yt8nun3oeam52h4vgnjduhnwkjtaph4ewq3jwq8csxqsdfvqyq1tbzrvnu8g0hjysgibtv8nihb1l23xl7e\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0461sk4n3umlublke2oh86fagopshauuo8eqye3wv0pt\",\n      \"description\" : \"Reprehenderit quam rerum eligendi modi saepe expedita. Repudiandae ad error accusantium omnis. Aperiam et aut fugit velit dolorem. Sed necessitatibus laboriosam veniam illum quia dolores.\",\n      \"location\" : \"hj8rc3yzkc3ktoihr9khxynl0xob2rx5u4o4khshig6zerl7hiyc67y93f5yw4po1tq2ibopc2fjrzi7vaot72gy8mbf0stoads7ncuvs7j3zcmfodsnt0jjha2va7qhxdkkj\",\n      \"title\" : \"Nobis ducimus explicabo.\"\n    },\n    \"role\" : \"17vozx39w4ynb9qy6ei61wkk32nosf96yqlbpo5g5szva7xmcpxc39ydmwhxjho26ycpbboo72iizal23otme\",\n    \"members\" : [ \"0oh0q9\", \"6h5jty11sxfx1w1c8005slb9y4i5on6jhbcm1u42h333hpanekg6bzeavcdxmzgju6xe02zn82u2icbfbir9wfzmdk503rqhgp45scr9a3xyvq61g6m6bre7cv3tfbfzwow8g6fzulaivhj0ou9wdu0vzhpu2vwkacf2gmc2exusjz0\", \"1rs16h47xh5bksljlqbijdu7ch6r083tujqix6apnygr2csxb7xi06yp1ofwo13if2ojzu266ws60geqz10y6d4u21zq9hggrkmripxdd99ohl7i1vpucll4hre4rnbsb081vfin1xbol1ka0ep6mi3\", \"xohsdn2zxo7vl7qqew1eoefyu9936mk7377fpalw0agoy55qfqqyrg2g3k4ikb\", \"q9sz9s80khcbd5gfpjbxmgtz00vgwhzahiaqgxzhkea5qogakn2zd49d5wdd8bp3sy3n59tpfute7jqp4jgcpsu21e6ny0houfxy0zpugylq3a8e6wf1kavtbhuece2vocryd9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"q7215snpl5obt6f2as91x3e9oq3l4cv0xwpljw6rgob1e1f8kx9clgghadef6xb5wab7z94wx47qv2o1hw1vnx5in8n\",\n      \"description\" : \"Qui qui quidem et quibusdam autem. Sunt est quod quod. Aut ad tempore omnis. Nostrum qui cumque vitae totam iusto.\",\n      \"location\" : \"u8e7xivu8vodsourjyyaberiqrz44ygdfzy2j5ys7ou5es2hnjb4d8e0jrivp53wbkr3fbz8m8l4s8ef9hbtvb20\",\n      \"title\" : \"Vitae asperiores ea eum quasi architecto dolorum suscipit.\"\n    },\n    \"role\" : \"itocv7o7nuqg42d4s40ht2ju9vqgakmlw8ncbpgmo4n81ms75uddfk\",\n    \"members\" : [ \"jr9bqpeh52r1eqy6xk4bzqbfwdmhj8riaalzfsvwy55bc0n3q811os2k2ac9xeceh8b8uqewldca3v6\", \"8qohthv4dwr2y61ibnh1oiuybih8xbiaa8vepmat0kuohxufvqiespvtftlyt1b2pfwhulxby6sckss0eyfjlp1cfli94pvkd5xdab4b1w4u0u7joubktqu6bx3z6eiiakt7hb7h7pn2xjn9m2a32vwo070mj54wpip\", \"md23fl5hz7mnfp4ov4bk5bbmy64pd8cdtbnwed6bf9orj8t9\", \"j5npgz1sc8ks0w8zb9wyogkr9n787qu8yodmsqpypeo8meysdnswlpn5bl309ie2e3k8zq0ttpxytl8niwbw5cf7nbi56ev4dibbwh2qtenu69ulny3fjuoozrka70yfm0\", \"97e4pd7xaj6dqwkbaxjism1osr7fvg3s9y\", \"v7jido9jm1aqdxuhs0tl3eg416pr49lrvzwlxvu04mg20hlab0hdyn5ud85ko46\", \"gf3neuohj80z2zbjw9wm9c7boimw15b0q3j88fym7l2oo8y2g0c0xeo2usph09drklxs533profyi6afx1l6m5jli9psf473azhrbjo641gjq8tv797qiiqwlmkhwmycj61o9u7cx79tm2qxwwtbjtbf6vs99ek67af6bdeffoazkc6r1iwy39t9ekevcgkgnn0upb5x\" ]\n  } ],\n  \"etag\" : \"eaque\",\n  \"version\" : 20295865,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"knxcpfllhu6549m39bf79kbjhd3h2faemq6dggyrkgxl30ulr6urkqybyvlvitquomzd7p4btav0pxdq83lrwvw7wnlz0yv0baa28zf40u5ds8dyuz528fpr83q6fnlfnvk45d4sz3j8yw8sglu99q1ksqhbhoqvzzs48dh68682cj1ij\", \"zqzczd2mtp8d1faqgis9emp6glqqwahq9ymmlkd2o8f06lw9a5ele6ba120pvnetz5408qvwyhef96t0j1g7i2mjd6d60t95gs0zdp4taa1gbaz6vo3mp6eouh7u18\", \"v5bjui6z4ifx7ekfstj6mxnowelkwz0frd9tz0vjcxagqere8i6x7xlrnrd0z92ynwvminryqp42yve1u1odyj4z1v165yffcrymt9qoiuz0a9u18td522xdb5dtkuiviimwonlyryd6mcy13yhjkobos6x26975dse996\", \"t23\", \"xhphziaje3ywqyhuudqruu7ttltmb2\", \"ab49dizcutq4zyzgmd0h5pqp5dy5klh7l865ve1sd7rpp79qve3ixb06pkb7b8k911ovq7nafzth95ghog5a3v6autrdtmuske26h4r9kz4\", \"xi2hei6ktxz2a2ul24fi5hijz2wy7ogscgsgafx7t4uy9mm0bnk23n5hb0lu4hyyv6i587zpf0m0kmyid3jd6638uy8zdh856dz0sqcecnfgi3xwdow0guyrcj39sb5ilwdc28ucn10kynrgzxrfbriy448no7zwv0ej\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"if2cc95fk5g3qpoztgq81jta99y5bvt1su4w6uk7oh4lgqevl4\", \"f4ox2a7y2pqxmtmef03nme2vdvanlh1is47rjqv6afdozqrw\", \"7nyevfnyv779w64fh8uuxjxotyr3b2oi2v5v51ktisqlvledrae2wdl39zgljgzm2gj2xdh6cymhtcu09jk2ikwtlrswop1eyt28ewbz39j5xysqep83bwu696cd9j0606pcp1y2hyysop4q1ab8097r69u47323v8kslihxo4m\", \"4tksko5j8cqswpo4rfqhtsbvvrapcn7qg3joieg1gonpykbg0wzigfllox2z2m2dq1gz9vjhzpjgz7rfgzpto210h2sj0ufl9mj7q6sw32nznlr5v4rif6t4rt7y3mjztnqyhgtpjsnj2x33566h2qf3\", \"l4aw31smst8k1g4qrdayecunbpppcxufh077a2ba8f762n4wyw4v8dspvfizurrjb3mgkkhp2ascjes7vg4ico0zn8sqnt7d5aitxq7w99r603o6fiopouwnv3tzytp2clywagchi1g768lxiiixihvwq8q63xelnf8i6msvpl\", \"q3798n0t3syiwudvv6sx90ytc1radf5\", \"msdddi85v0e66gcjh6dyxxah29izybbh6lhx6w4u4qccxu1f8olrvfctshb9ap5ptkufwm14pt5n39gc52oiyz\", \"rf0grgesm9ppbtnn8ec\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ybtnwsqo4ogai1c7wm1h2x8spwifoz73hora50sdwekdwt9pwrwtscacgaqruvnh2p8ra33l7o4k75hfgdjdpsf1kiqww165mh324p3wxrz9ca6x48n\", \"w4myu29g85nndgoimip660qsaqgmqdxqq574ycrhknng7byhpdvxmsmyw06vg5asa9rgybmkgt8ipd5ikkvlbfcffgrvb1mfmgkxl4l1jbq03hz7cktm1rul0pbddftikbw8v6hxnll7m4t7huhtg15n\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"tmeq38trvgp4t17fyxqemw0t4\", \"pqwmj4nlq7pq65izvxxkoun367ufjbbpdx\", \"qfood36whdw2pmnqwtdscj806dp7170ptox345xzt4lw95xknk1zfijx0j410hoplytc57gyepgus737lyntodmkhkb2cryxplic1o9n0cs3nvyskzoptsje1ytanepg5tfd4uhgrlu0e2wnqnb8ee0n4r36y6fk1ahypdxer81z4byc9bswsvqvj54p0m\" ]\n    } ],\n    \"service\" : \"3sm2gsdctct0ad00fv6ygc1qcnjk3h5lrydcaysyrs7vyxbgq6r2e4ahboimqv535weklgs708op4h80ln9ej5dhbfmpsfoim0ia5atroo828qf8003naf4ttdf6jtoc9bbu9q6xjfjv68skbmuk03umboaf8mj3tiw16jteq3\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"zx886wmue1rkf0vj29t9itsx7owqg0tqgd3vhqgam5390shyknvjfeghf29d9sry865\", \"q76g8bsks0my7ucw41oml8flnpavx64ekuj09vzowoiiq8aebmmfhybutxka\", \"nuo7\", \"v6hlkus5bhx2ld53xmkke\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"chwg4emq6urjdxmweuqz4chfzsl808zbjywqnsltf028w6jt2dfu3nfwic8zd21mok3nrsmsmwtt353q83aaga92a1p8h8wjqzr3\", \"vi8lb18mww46wxngjue8qhoc1trwp1ccczeu06gnyakskr5b1hdawbszxi0mruuc507igbc2x5kexdjggvcpgkl7v8b1kylp5vaet33bxiftjndh\", \"97fj0x7hgkqz2jcchb5\", \"z7o9z2qt9umuou7ivfw\", \"6iay5rz6dbk55g37dcmuqrjan4zr1kupmnmrm5f0ak73ekidmwqa6x648l9lv86xyjv3af3ocys2nd582xl7f\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8q0aqtop8jf0ash08l2at0ww4gkj56k8lg\", \"t7egmpgir3dg5w0lkhafkmn48ctz49n76wymt8wc8cavq\", \"cn27811w8q1ez1eivad9uf9arsc313bi9ls8ipoteuyjv1jqn1whae5q7e8sujryh7zpx5jmof9i1dcf1e6jd84qlm4pvtvm17l6ekq9fs36fjyernr903x495l9u2h\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"bkui5rfwjhz5sgajfhyq2iuepk0wfevcwj9qya5rdkxwtobze35i8t103xyt64lp7poueywxz3003qeq72tifspeirzknfmztnj1x948gzz4w7uwgeshc3pbncmm3nryijy30touaawgi6gxe854x9nllrtywr76mn9phmx\", \"h3bb\", \"qqluil4022xx0tz7bg\", \"uwrrtk0zww1scqbljji9m92\", \"acdsbwm924cvi\", \"hvy5s6vx8fdqdml8a49m1tgqnmh19ao9895jzn2qj8u2fota6jj3qqt1ioqord39xon5uqe7l7demdax5rxm\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"dd5i0l\", \"651fb1kgzzc74p5g9p2bsdzrbl246bwcinaw4ln5ugejr5h4zxdupopcsnb1dxbg7q9me1hgace50ac1fppl59ko5qo9xunn8vuuq0m0g295n7nnuk1ncsb1p5my9991ix9fyzxwovww1adq9e88fhvwqjy3dfp6xsn10iaoqd5xhkf2534t\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"91ksc7o27twzmhqu0r0032lcwdyvb9yg8qf9ms1e5vh049z\", \"9u9pofoz8v1vo9uwg7uvwxb0ro9htwn7nis2lnbki6wylfsoc3hyxoivi1xhlet3lg45h8zy7ze9q2ohhz2xvwot7zovs3\", \"kagc4bdk1s9j0xroc03o624gssib3vntya168hucewjcqqt7s81y4acpl4w4qrv1ymqwt8t6tchy6h79g15m5wjp7etd\", \"1wfd3goxczcfnia9wbkygd90vf8rq91ukfyr097fe0ukra6ibx79by4pv81tm5kmkd6ce6uz217k1e4u60elwspahj7wjzz4ra1rgjn2dvcnhfdjugussjeo3ofpusxgc2nk3rp884kyyljn9hakr9y2rz9aa3z1z5u8qij8um\", \"hjp1qmf1a6w2p34934iwlpx8zed8r3qqf2atpnz\" ]\n    } ],\n    \"service\" : \"xii16izupjld8cqv6v22zfryr2pzdh5ti4kbguvnb6fq7uegb55el4eov2xj7o8kxcz71x66yor2if480sqf2ertzrq44d27ses1qbmv0h9x2crz82s6ctqv81zlo7qyd233nv9l0aehuhu92pk9os3cho4yf3ubns63zixq7xpsbdr90zczpvx89c208w0cq\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5h4lzlt2ser7e99ov\", \"glx32h50\", \"yw9pvre84w5fnsi8o69c22xfpgv4nqma2uufaz0pcfpnizvaczkz8celu8kfquowyjfu9p1iiqxr35d5p90p53humbc3\", \"auqe42un0mv362t4lqt1ax1q3v08pttu1h96dm6xwttdfdti\", \"vypt04mrs0oejn7j0okss7g7c8wl5bt1dr2y3suf5ybo13s66p78xq0s8sjyoml73k5ml340qajjlcj7h4vtdaesbdwweeztwjymjd60ss6n6mx3pbkzzot3thyhrhnbd2fs9b79q7ti4w\", \"l80o40shtvypb6n7k0vncu6ssa0flndoex4lp2hjeyvuht7v6n3pszzl6t9jzeh6pjkw8bboy6slf7o4zoc50117ynw6u00zq5bbbgkw2\", \"9cemfzm7pak058b0\", \"w31daitxmc0uu8v8gr03qto66j5b2y9iz8mpf0nn9xfhd21adrxz8tbze5ipts2gzizlcvz7mg7c4kr41gjjk8xlaumx22p005cjgsxb6t4elkc6dzroykkfv04fvlxpj2oz971ip418absdwi1x2znzkuii\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"nieq2vrowuxgyhfwnp6hbz0k4z0smevnzmb0wt3po24v8yr4oj9fzjh6887se7g79ftz7tth3u3bz1zcmlc0k3rhbr7dsc4dvoa\", \"bnj22niywg3roc902peh4ar3xe7e0levlbr8gal2vwj1ku3sofgxkyx82s6w4i7inac3bcv8dkud43o3xw7znew524adw826c1l9gvgdp5812vyh9qevvisyzjkqt37zdfsff19kwr76zu3bdye4mua8k88x3vzio9ddo\", \"xywcic6qdza7mu75bw6mih74di97clze0joublsftuc2iry42qq8yt\", \"02qqhmij1p4sigs7rf3kf7nqkrufkjiqky70olobtt0vk217s2s5d5xi9jkh8s54z9wchwednqe9qk7cczr6zhckqiy9qxb0ggjjufggfjdc1gywa1h4j45g\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"srnx5i7bi53lpfdueke4th4oaexrkt6pm2taeppeon5rf0s2r7ovrg0dhshe9ndhny3f9k98dev9ck9n8o7qch9lu\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"1ikufgfucnakd2zen5zxwzo7b3dl9lpo0m8fjocutlgavz4xtlkg1ozwzwwy050bufcpmr24himd9bal8f717ep6g5asmwz52on08xsf0ndmv9m92ts6hh09397thwk5tq6jovmc779l5uquu8eehxxmigy\", \"wjs9lzonv5qyf7bqwmwmabt2c2t381ut7b4zy76szzoemahz166ta807c1b6wp3y7fcxxhj6tck4c0z6o4arq8gi00xk92nzy9pbf5ikb2lbao961msvn8dta3u15z00acyugqt4bnkr4r6w4n15lvm28mbpxhzga4skk8b4ky78p10sebtdrxd6im7h8jo9uoake8\" ]\n    } ],\n    \"service\" : \"5dlnl63rbtb5lj09tni7dwp1aqdw9pfnq3codz2h2lz8erfc8jykur2icu2xrm0fsq66km55gljkqv6aeh2gvfo6acu8ipusnkewwjz47mvpwu57v0ntkeusd9vnl9bqn55pze\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"dqzz4gzoer3k2hj0oa0pbbj8ti81sii7yto0gqmh7rih80ani4uulkmwytqfep391f04xo5l0eolzvdh33wce0v1bml3oi7gmlupz2ykj2ltsfz75zrnpgw6ixqkhmg5ylq9d3jxylesqkvl79mts7\", \"d17tytqlfcdnwab5sqyoapa1nq4v8bfpifo97v020g07mqg8j76ifc3lfh7dppuvio6ltoxlynl073jmu99uo5uzua4bb2hlmwruuxbkfftr8lvhnl3l17nd0mgo3dzjts93pethejcvzbonm2iai7vlo0igvo05cbshxfjnskx99rmqq8oirq0xi80ss51jqdmsjv\", \"qw0vjdnzx0qgisa6sw2z3fk6ajrzpvx39mkbem7kd1ee94qx8ybi8shbhn2nfaxpcm0bi4oyje79qmnwr0q4tv7kf43rpvt1vvvzshhky5xq6le2xencw9sil6qtex8ybbmcyfv8v7bjvla\", \"45mng4dxy9dshn9dbfn2mmxpeih0maoanyhrh92gs5x9cod8p2jyogkuugs27oyz2bzhjjljwy51c4hvrv87vhjczzfdfe5djattx8mhyqmkh2welkwg0xvyopnm1lsu2vfwy6ptv487qw6t19x1nufeik3xfqp42ww9o2bt39i6pwz0lhzgsi\", \"52ch7sz9hcjv95eoq9rwvlx\", \"igpqtj1hgz0hhbtffys3gd32uyltreun4t6iptonchr09lgwpc7q2xg223r690r0mp8m39tiwronqlqf8revz1ai8fhknvye8swot\", \"nyww4crvifopa3nqt3snfu7ztc5\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"r8vp09o1yuksjuih7cygjq298ys9gxa0on9x1g1etvo96cu1vz41njs4a9odegl1fz4zcunke9lux5brp18myy2y77vfl5rquz2lhuyk5cbe9bv0f161lajfldiqdgoozcpt7ids7d76g8\", \"ecso8ncehv3aspohst3hj13wmzyhk8i2f97a20eplnvifhnp6yumqq42zpfil241uujfnky4ow7huxe3k89zynhjumu0sl0robml3z173e9k2pvfa4n47cvyae9rxe5iwrieyk6ry0ut5vxhxieadq4h4wdss0vrekrhwr\", \"hxxprfwsj06omw8t6qpsa01eqh4n0m7s71xo1\", \"dqsdp2wfyr4y78rhbmkcqmjlaqjjhwn7am13v17khps4jbb8u4n16u02z4fibpl4rukj1ruxdgsoktshyfg1h6u5rwtxos19k9jg8yprtjtnvat3pjzwt9qi53l86s8pp8qnszrd3vq\", \"te545fz0vm7ejr7xdz21lbx636e1xwo3p0xz6y4k466104o2uxzky6gtup0it1r9t7a33j27tkkt2df7ah0esujwni2mxjrtlu3nxr28cbvbte1f3bciqv1dfrcqh3kvs4a87d0pzfllqexwuw\", \"ofl0lsyw32l0w3r63au1r0lu25etslq4z9co85pq7zzdd5qsuf3icxxb7dml6qyvncvnq6tvaa3vddwhq0n9obwcd1b9yxzbyklnfzsx40h5l8cxxha6yfb5whfbnftkbavtib9h1wagtdw0s1hcwmi6o2s4efnzidrc04ro57kk0nuq\", \"te9liyemdkbk71ceq3i8td0jmhv84ul8pva3w9i9shqa31h6ac3keq3072xg51zsxskb6lwi5nwny2xi4j9o5y81kbty0vaxae2kqtuwjaj29mrt1kvfw4gz4mj0os03zcyuh3epynhbkj\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"om7qa7zs4f97xg63a58ys3pgd4k53asmlhxykzwslmveu7shqfkozyncvb6bnw0i5yvbsboeiw3oy6gbo9qberqt0i7d45uq5idjvpzucm78d\", \"mtsroki0q0mvzppzvgrn6gssuyw5r90sw99dunie06lpihbla9ds2ekm27qihzntrvhzkqjh7zxhg6ffty90hrillxxhvhc5ys9igpgksnelbh7oyznaaub1wfk45uth922odpx1zlsfppdhlvee742tn3iybu539y9raxv1irmes6lef\", \"h6i2xr0ggsk3m6fpcuxkvt8s5hhtw53v00cmnuqekjrb3giqx93ozlx1lhulugvzfdjfqjvi1dklzpx7rovfv9aacv2yxhddarlusb6c2zlu6n6if8w27mgn9ni0m4k84d32zurxkd72p9b\", \"9o15k539nlcnx75gjtr\", \"4m5gkoglrqxyffgsfwk515fqc7e20drqc9eqvpvqswaplrnzci84j01nxai9a5nn51z7qb72f4ct0su163fy9u4vata3wk71z0ohbdzpzjyqx\", \"u8gryfe0oe2pc2fki4ovyevxhr88h66h75kfzncjwe4l3nrlekxdn1bbrou3p2e1sq65b4zglwbkl60t1iino5e\", \"bnb5xhy7s3kepacei4pfbxnj51hppa1h2yow8oj0t8zdeuwmlnm3bitltyz599s6z6md11f7xn5a1h0y9pnb2b07ifq5tl25b7i8sjrp5n9qjih92xiqd45uisca6ory2crdniemg1jls5ic4wx23fghfsj8r8u8gmctpzh90pr4qmtu7rr6\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"wunu87cd1tv68paqqlyruhvu8rda3urdd8f0inaejqmiedml4esr2cff9q9ehuc9g09f5ppwo5wxttgemn0ax\", \"e3uyxxs9xezjd404iygdnj6x8fsc0t0zj5sfkjmd8k6r06q8l29mnkjl3mpl6bgw0c1yi2k6wrqeyxi0alur8509q\", \"tmsq0i4j8m9sqmpj3gzp2wcgmvk4xd6vlrzb2c5prvlvay3hdietas73nco90xygj107mnjsoimq5gnr\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"5y0q9umskfvh0ca9jo54zzr9wmyzw5xkeqwtg8kwuqsq0miueb36bv2ig2aq6s7h2lew2nw894c1hzag1qljde64u7v5vfioampg9jc20ert716thq8nh42kqe1fulrl01wk2kq06va75ui7viqdu9glkedx0oiwhyo5gefphvjq8chl52meo\", \"p4snntoxer4xph0ityj934afh1q0buo4uw0rd8z3oqbe2tqw6vpuqoj8ly1ass6psftiamrsrmf3bq05q6rcybersyc2ylypirs4axixcjmrowrbkqzbkjqjg5vb7h\", \"2elg1dzkehkoayz23nj6jjt1rgzys7ni59qf2y0d9nmoczob3cxmnd8wc4tvgd98qxqs6dr6jsl4bc8r6p96y7wbqlharoj4sfu\", \"diz0fqzco5f3ggmlyowhitkfaznp2biilc728b16l4cro69juzc2nyp7wahc7ow8mgfc6ho5wrs5jrypp62it6s1uimydtu4cr9\", \"5vb33xfhjue2ftdkclm4u7uqwjo0z6fmj4puag0fqc\", \"75b3avwzhuf0rwgllvjygxi7o1l81lb4qjmwaysmstsfgv0bd059msy7ki60lbjgudox8y7gyuq08alj7b72kvukcvs2a61uwioyo1mpxjqdzf6kx830bmfdgikn8zmi7rjjpif4b5avtsq722ehkyxztna7ykwjsjt09pnhsoeeprnare\" ]\n    } ],\n    \"service\" : \"mr0kfv0l37p3ze9e7ifmei0zpnladgxlm5r6ceq\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"k41gia331p4o2a1l451hq2undu41lpfkiuolb4joso0dtw8fjvwq5gqzbpvvovt5zgpziaovavgdqfe1e9wwn2trqp8qv8v8iwkw5r2a7m34orl2dh8acbjkv47f6bcxqw2kkj1u4xdv0v3wge04cpkm48iw4luf5retxbdu3sv1mb21gzpm6sg8rvn3yeogaw8dy\", \"kxc7bx7uaow1x5sefa0zi3cuxaf1nelfm1fwk0fhf44wo3lndefb7xe8vfcsndhf6evvkuu8bsch2pmhgfymej9qfnrlltnewq9sv6a\", \"kypd8ouut1f87l3druzpc3881pup3t7k1asp55eyxkgb7ucyiodpro95c69cfj2373dr1scoqlgxgpv3jgz5px5tzyc1dtyepwau8b7gw2gdpa5e7ufspkgaqmateueqflhedrff7lkzapsg9zajqe\", \"vh4ttqts2hck1rn3hluunpa6ksthgon7592vm98qjwdw6isaw8wx2742c5r9zcqbgtcfcmhh7tchppizzen4lpgdgu03rr533qiuw2yykqkt7cijty5ojo738i\", \"tty2akd5ejgkkrnrlw04s9mj1twgk4k7ibfvd1lukjf2naxaso\", \"t8io41rv8osnjcnwlu1nnztpz7hurxy5u28qucqrlksfn4eee3eicurumm8ex0wmxcosb58p9d7c1blonjvfsmdz0eto4b5xqirxlc0mbny1b1gcgwc6led5vqkqd8zdfv07dqgactlsnuj0kqbbh\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"twweele1uowkhopv83s59w3xxi3z789lfvfawwt8nxniishlm9i9acikk2f252rvdxd2drx8359incbor8lao\", \"4nmz1w37153yegyy3acsrk6kb2hwpo1i5mj2ko8dtzek4wm8ny4rnuqdb0sq7ghrkcnni1xvk9q6plix\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"x5m0up0f02mycttwajvuuily9zb1obh0g9769e1pga0exq0a2mmjmcj5fc03y9aaqght3jpphkkg29nhce5ggiyx7hmqjismv9a0tmn\", \"c25s6f7\", \"ix3gjpf4dsmgb5bspuqiljh5010gm3iqiiapedn58bcmvl9ih16dtiqb879xx62gj15bgb5pjleie1hn7l5cllaanv16p8k97bcfcp17j7txs9djued2pi319oocenneebrlpuk\", \"evfmqnwybawjpw9iwiuxjwtswmk53ilm5vc1ltxy8xwpeymita5953fwxlo520azl32sctmva25jrmw0xx7o0hfblonsqz57mp1ngr1hpgcvk81gnir1svfh17yaoqijiw0bgygbitg5w9ux2f2k44xpj2ccwa4vukjrai9bwkivwlrcw\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"nu31qoadeughb6oflni7nwcq297jxyh92s1qg5gpwwf2mmy4t00aqwg7cz4j01oegd37egzfmlfxaka768mvtj3r75zev8vzcu3d2a32c1ee1elffglfrbperrry3ti\", \"ofuq19i0l431j24lzdwhnmo3860j0h54ilr69rx8key5qtrguk3gnn27zpvve3l8q\", \"d313e\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"towrtqnv9332mfvwiiluyuw93p08vreqcsrgrsehm\", \"b6azx2rqtlb62kkhqry5xdafq5t4ol9t3ac9tu174i1ekgji1a37ve8gjh0x4bzxbw5zj5p1svbsjlknrxhi3we8sbmwuzp5ohp1h7ywer1zmuszw1w48s82tnaznhwdq5t3z99rvjnihjj30u5jfs9rmdo9aqn0wg71syivh7m3xss26s3xj\", \"ohv1v6r6ph4aeiw5hf86apx93kok8tc2veqvrixdy5qya4fzgdr7zm5tdmqj5mm8sjn9qs9bx85ktw5l85y4d6x3en0h7z8kvmch70hhazaorjccnp7jm6rm16x8idizncayu1vu26d2gxar9i72jx1z46a3i39o51xbvn2c5pqfwhaw7ghwwbvizcbxr9ws4xprl\", \"4a7wvx67he4s6hkyq00dpngvppqjwprhg3iodbvxb9ico058x1w55bgpbk0wuei0j05tbqbgqt5fs02dsba0nx5\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"y953bq9c3nqcbso3zxeweh0jgsvacqwhiy3sjwfb08zjud1wft3bmtgd19oxon03ae568b6diby7jfkdxdzg9kyst0wnvji7osyka7w2ehlga\", \"sslbw1yf8g4mwwq4ds48jj4ibe7j50p17e2wj9uns17dpmqs6u8f7908v8jtqtkozx2recfey9esv6lw676zq8\", \"udip9tvpzg5ntx47lugrqv9lhah0u8ehlo353x0dczqezqskfh17qefcj3ende66y6leyd9h2fzfkgxa6366qj8zx2r6xu5n77ms78qjcqh5w7orul3bpqvtpzl5u1os4kwe7ck9a6nprrny0pznhq0xvzzfsbt\", \"yijmg5i6zwk6aszsmo2ucyyk9y7hs0v0gqbwrvq0vjrt0gf7jyw6i9d6nvzarp9mtewcw41\", \"bpnyrjma3flfnt8r0w9zds4j9d4z3ny5mra4xergwlwbd9pcxajj4ooywanzebzajih5pdr7bqob\", \"jg5nqvxogcbqocpcpxnr7104ohh7s22xs153xlkqwc5bobgtgcq7pz14d5ttlb94nzr0nmz6vf6b35gw7e7megjkqhg3pj71avtyai57gid\", \"ah7cf9evx9nvnawv711tl03j9rj1hn3lu8htzhx2wr4alq7gzc28kwlrq3mg6fu1fgueysf0nl7q9yf4mtzwnx04ntzeworzuv1ejg083cjbli6ch312e6s90qq\", \"8uah343f47a2hf9iq1jzeejbaot28ot2m5jyll8h1us1n3t46od0pw5n6nwvr1rppiirlnxo0\" ]\n    } ],\n    \"service\" : \"0ay3f1ylut5fq1a5twcd2ae6ghluqebblq09ydqmoiw29soqmhjd4ptm6yx617kdywhgotau6r63l0ajjamkzc54tkut3\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bo3uuqedq8hhviho5g43hitlejfaa\", \"giv2\", \"zbrwftgvrzobte0iecbxd5fyn3lxiogbuh8qih2944vswmfqncjbd4m5gu5ikkmrlsghspuhfytwr30k3y3pybovx9fldgjdhvmex66fjuzydmzd4aki489yemyvn3hz6uft5cogwz160rcakxaf70l9erbzvmzai1ztcjo675rxnh45zmp7vqo4h\", \"g1nl680a66b7iw1i1yxbiho2a1sgkjmk0j7dhbfa53m3ngntdgdxs36qwikohqkgs3tu3el248vdxuljxfqq8tpfkg4o8ov2221khyu1ns8ov1firyzipxkdb8mj7mp7wboqvzhr2ko86jphmqpgkc9onsxyn84dlm11sxj9hrjvqay\", \"x1du3q789bk7bt29y316um26hziqhza5k\", \"w0v3supi7v0wco9equcsot4myrwxfqc4i2hmrng8u03w0g6ar6fl140xhkggoktsfk9iaiy16q058gq6mcoon0rd31wclzoxwvdud8xpvinbiwgmy4c6sxfjrcbq59m5x96i9h5cga476g42xmr6c3h0fjv0lnuy6ok7to7uj4kcmn\", \"0de48q0gmxybfjbl96knc7paenio8f6o1bnphi2fyw6en0kf15td3hftuiu3apwdl0lpanl8zk8dkpbpfu8x7fwh1kj\", \"enhbuoh0drz9eazeey3seexplv1v3fb4dfkkuccf853bhfsn1j8e9gftlien33y3wxp9t5r27ayybfz8arx10r4nc919w\" ]\n    } ],\n    \"service\" : \"a5kyx9wlfilx4o0il7p9sumxd5cij6nr81y47gx7wbrlvc4qn3vymw1ehhlvazp2iywpuvy6x682vckkatdgqr5foxc78vpdn846w0eebjiuop96nz4s8gf02wd55y8hcy6xr2686mzr626p5okt039h24cl9n8txuwsh2t0lz8fu3z8xr\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"n0hyxu4cjlkskk0dzxxwnhdodhgpel490ipaecrxent8rv\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6box4adzw9vwxyouuvkebuk46napxln34vwp17zt9npzl16lld5degzsie3fnmcogcfgg97z\", \"fm5okll39b9mjmogvmz55prjc09cpjjxla8b0vsg8j\", \"y8zdx9im88sxa4fc6ppp03lu1v592rura1n455dc088lf5ky5fbjy9m2x3j6lsu2jpcexqt3\", \"luxdycm0c4qz0a13xqkxbe434lmg3903ydx7\", \"p8o8ohhwmmqbvwrmish4mak0q8d17jzwosy70bcn1zbscyz9ac1hmommo3fyys9fehpwtxh1jkee7331q4jg1ageg7wpejp5mx0iv9lspkfcclgu3do96x4o9hp7pobbkkkrpk5aic9az6gwguw7rdsk3fav1jnnpcgnpp4h67dh0jh7mvvnitmub72\", \"xzdc7khqznzg2x28icnjnv1y438mz22ijzlwfgb2rur738zc47j08om8ueik2sye01bjjkvn5vq3qykppklrnbvu3e9h5kdzcfoqez7672aethlauh7u1bebv56s2nax4fwnih2btedmatrh586v89r05s5lrgtvbb3cynp54lcx34t7ay9p9o0hyb95zknqe8\", \"wd9dgjvs54ozu5k3gwz7eh5lib30mtti2fpnb81i69h0vu0ogphg6ppbkfo4c7eoikpl66xl6vjaa7b71jlhl6e1ibd9whdaoky4ekwe8x3iauma\", \"gbmspid69apj25vci2x541kq9d6pawemhuxosj2ujnu7ktvqp3q3e2cjl22ftypouq5x89reehq6haq52gzxwxpr17icleup0fogde56fegfob1tujgiltrgdkk20tchbp8xjm76ihmf2go6515yyn9f8pf1\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"agvr8pa0e5xoebt9841uhmmi5zqf9p091cgu0qll3bz7m8mjn3brxpdgo5dxkxjboe8yq565p0nmal6z71qn1exmevaphcxziqs8aoivjd\", \"3yqrzkmk81ybzuapkv1pxmmtzyy8dchhloj57xqij7\", \"kdisl19qu8dpkkhfhyty97dj65rcaemziv5c7nrz5u1uhxvu9bwmgiw8csotuutwgguznr0hqj0c3k4nfxw09gvl0xyk7ukuns5sfkqlj5l1bhji4\", \"0gze0g7qy7adez6g5ljmwnwe1gol28ss5liia8vmv0215oz3lscdy47qrh2u2t9pixht667siifovly4ton4gp1m1pr1mozjl3x2zwczwuljnmj7jjgwmo21j985fgktclp610tn77weioadx5f1zr2fdo\", \"kns6faqc3ifa2mme821aww11ssguo5rmgjqils2tulpwwup4fuju0mamd1l9\", \"bamavltn\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"nx01bmoc7h\", \"0yp32a5a8rkwnfmr5csuym5udfg4s3763wk3v14tc6smtl8rcdombdiuo7etrixu991kl76okcxz1n6g4nwdrr6s31yfl21t8lub4ak3y8yq6ruqbqyd59j1tqhh2rhrj1ug3ohysbodp2atbz\", \"pvyow9ajuavsqdy0rsksqpgwdq8asn582oweq93lkhef9wg4sqiwk9u4bzccq5y64o2odurchppxb7y6d2tzhwt08732jep1pc101re\", \"rkadi0t4z4v1bmip8evcn194nyuf09a9nw1ha84iq7s7ryzz0qzjbrh60t3grg7wwcsjfr2htd2riewk5au2772\", \"vh4\", \"09ossqv6v6iahd1tcr09n1q9dni4gda9j9epknogub5qzd97efjp5s1x2osjcvvadx2t2su3zqnxa9bbrwu5ll36v5ni2s84wl5eced5mq1a08snlwagd05q0l8xiatqg1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"zkwdfv8tr995j2lt7vv668mtqui83467clwgrxgc2yk2qi95l2a15h27znwoe1v0vgccmugqp030d1bh7g7wkrn64w93y4ygdin1g2k3ygq1k5d99xx9h2quz4seci1qce9kslo3v2mnr1\", \"h9y2phtznavf0cm7mbahln7qotqq071r537q9o6pnfpa\", \"hvvti2upaucidcyumwnv7rscky7g5hx7k389m5ahiu47vzjui4g6vo8p2x7u78zzj05vytv1al5vqn2gscjgx7f1pc30gy8edj7jyh116eg9pobqr753s4ur3cy07ry9ijy\", \"a2ypojpadt2b9yh3pv9wjzwg0pdtcg14aw2d3bzqx2ydf7bk6whskqb22813amaeyu643alvqsrkt8zob4j6teyfw6cjkbfo4tn59tdh6wpm4x19qzrcd7rce8qc6x32z0fpot1xvqkgj2tpp3lrgtzv8e83i\", \"an1gcb1tbcf8mjy9v5jkmsdeofllebba84655s54l3219jtec6qefmxeld7p2n2xp69gbthdxdkd\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"sapy87n9lr6se11d5n7wrcm5nw4az1be8qj80sjxr1c07gmbuolsnxj8s5d1bw7q2uaax25uws85a12s2v2vxko15o5r671w2x1u6wu57kmxzfe3f0spi6a2ke4\", \"acjukkvm7tka7soa996juli7smm1nz7otvtwwtwosqiadka8cb07lihnu06ffdzri8lwr3djsqlqedasr10cxa1ih382a6idt8\", \"61eb357ppkq9uv9gsgnjd0kxa7k8zz6x2bti3ryyzyts4n2osltw7edy8b2kd7v0m9ytovwtytshlvk8qdj6pp8w6aemfbx5gnv0zd\", \"vk6i06sam0q3tcc088b9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"zudwdcd7pf56u1p9fm4c6xjod26pmu83qu20xajgkx\", \"z4nv4r1ir8z137p17g8ebibbofgt10ka6gm1qjykmqg9bl5fqyaem1lqzh69vft3hct4rmwtd483dnkdaa3d74pq4mrldfyu0dxzl\", \"5e00fk961h5sgdkgdh7b446wr1xqr4xmlik48r7h1cxr5xtt75bxg4otffeyv8a0x4c2xua5w\", \"atclev8suqqwp0rto6j2jpppsxlejfbe2tcgwg4yhhs7l8t8u7ut600fmkawsf5fzoep098ln751sa4xgw5mhhgnlfp7bjqlm0853baw7l7qj\", \"hgrezqb0ex3tg0f1ek48c7ibr032lz7h99qygiq44z8engyaninqqj8kljkmkf785lr71m0brchdmpckgpv9iouvk3ftltg7637fomys5pn1yd5crwtf7nnxahsr96dthtzb8w7o5lwivqcat1\" ]\n    } ],\n    \"service\" : \"vk3zpzx151i97bgqjvvpejnerpyoqurwykk1qg1s7il0q6e80bjyi598ifouh0vrxdf7fc9au370i7miu95yt4evhh66k37t4la6drgr1yu67tgc3du5isb\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"zt03v2xriqq1ccjw6bw1d4kcz0pfyb88jfgltjnbgv579t64q6rzofxaj0atyqcruukfydo7jful18xnzl1jzebeqgby7i3hap\", \"o7fymrosjcx3a8lxd1b2c7pipzsxxjy5ivsog1rt5xh81vw\", \"6kyuvn0lnboabqf1lkc7vk6kpvuisacp1qhdpkv6jg5n7x55umwk456sid3aun2l4p4lnq1roj42r807dzbrv9mn16wpioyu39ckfm1pbo87j4ybi3d0ex8hk4kczd4ebik8qrd4jndcvkx89j10plrpipo9q7senhxkb2bf8k0761nkiprux\", \"j9vjxx2owyh8rlak94fpd9vm6mb61swq4vp5m8s7o22vxnd6tydolpar2laa78bfnkge0y\", \"4o057kxs1lwef19e0x\", \"yzu96nzeof5xptq57bpswxjja9fn36bd8edkguwhml7ol7kum4nicgam3v1yx7b09mfljixwujx5n53g6mefirjivb1uvhyqes086xivbdgdy8fjxeakvutg2pzrhofcselw2xjq90j8fjr3mvk\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"nqdidgy9e33k2ayljieyxq0hebxijirl1n4au7y3hopp5rbfmk9pqbwdas3ctowrnqncb5v5o0wttztzf\", \"t0o61h5l6ncqai03cj66y5tq4wtz7pguqqgebwdxobfuktz5gje16\", \"90q35z0jlqowjb5vjws0c8k83277r1s53y5g1f7dr1c82olp3rm72nop2yqu9tjfafr7hts6wqqq0ks4fa20tx87pivy6h7b3w1d98oafd39g2uu6fr5qr065qq4qjshh7nmklitdru3drk0k82yt4k2x2l79xbhxnoxoktbhzxwnncjygio7ikb6fy46\", \"jxpjsh7ix4mxtk7ye5xpc5h47qwoadg21thzud7t6nouzqryt38tocoatua0j908eqgcrdunq5bmj1cbx4542h9u1arglv88ic3iqfyxm7qjcz3cp77y0rdzpla01n2jr619kpq74c2qsym1h92zj2qujz34\", \"jilpc3fj9zj7hog2adicxy89i56txznlulmgmgzh3hut0zvh2mom6gklzwg38kpxddbmyd5i9r9g0ft8s5c5i54ir21kr898uce002c7rapn4g2kqrd2i1k80vpm0rtqmg5p0huod2lqizbkdq3k2j41k4z3g7afms4p5fxh0ox2a\", \"xtdbl3ycunmmybavuti1kt3shtt55f1501z2lhk483dowrv00fimxelwa9gmj6ms64un7\", \"kj720\", \"ey9tduzwvsndly1dnjrvqxshcyv7201ps6aswzdexymv7fepmlr8fxdrq34zxw311jqg429x466noka75abcjwl8q47r82xq8el1mk76ikx83vsjl3xiuwxdbt8jb8sfqay2sf9vcexz7ak667jcp405mnfy2wvkrj70sc2e\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"isypq8jhk97l4h6ydnmcrucqxtbbabek9zh0xcszcwm0o3821zqmqixbesg3jg5ituca5v9iapvfm41grq9pgc\", \"qyaueoucwgapzcy550gmhvaolzfeuqdb56sa6bwis05zfp0eyktr1onhgm5j7rf76j58kj913grg2zypj5j0qoxqcbd963ru8widdcpstjitt75u0uayzalixhz\", \"jw0772zueczswn4kvlokhtx3qn4yxr69w7thimkbbjtqv3wd\", \"to84y64ddl3rpcakykdtq24atmowgwj3rqp3f8y94wtc2aqv7sgmlc88\", \"fqkdyomf9y2z311nu6pxqnepswz1c8iph8kzuy28aychde0p3x08fnm6kv86wacitny0khpqe1qmrtfinj0som2eto0cw3d7y5onh810544vsiisztw017h0ihx9u4s76qps00jg66erksf8fki46zh6ps1uatiwno4cp9dxavcfr0b2yvlw4da3so3hela\", \"wiudc87ie69yko8tua5qtucqwhbgf2zwgbgapa2qrzvrwdy5dip88pby63812q5nkjke8y19jwxgrdw8g0q8wgfrk9zsy3o3qf73lxb5cy6n9g6323wejvj9783v2qihd7pjrmklsh3e\", \"u4zafrgpjz0okanysc59109g893x76ogpirc4sdinaq1ydi9et2oi70jfxv1puw33wu4628oreh89vv5q403x6usydt2nb29exteg6gtw20ry8khko0171x7v213gpbhxly1b5wvri7kx4q7sm5f8w5kz648lczqn9r7ihn96n23lfpfr9jsby4kz19jdj61q00dm3yb\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"x8e5t40m0hqwtgefd9rjescldtee6sde71kmn9vraifnz0db9cnwzf8p3c7takk0y7zksk9i199oa1wyk7a9mbaot18hwut4i7f\", \"gnz2jze4mpftjrkhp4yswfe3dggtjxmha2dvwhm5u6kkhyf8iz74p434p3ox9peneadnuiy67op309f18l828rrs7ey8u8xhf6wrrv5mgw57w52to1uk1fbg80u52a3cvoelszkj92dad92cxl5w3ch37zbspiq0ujjni3i27m5qnqn9wnotdvjil1ny7s0gy22\", \"gzkxzkxllk8qupzh4u1ri3s8od3n1iluly0u2em9x7do1mbk94j4wdv0nqv\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"09o5xqj873bv8qgpp6ifz9lgsnwql4jjpy82ha8sc00bz223hz3c12qcl3rtjw7bywf\", \"kcnydo5d1ut8sm18poz611f8hnj927yr41sm0neaz4xtt9m\", \"yvteyl6g7blhw9phb8bcjo9gk0ois03cjm4la9a92udrr8a0cv4i95sbfi4dyri4tz03vd1ba8p14916vzo5qyreymkrfzn8ru2s1\", \"ea8o\", \"pngtho2zb6lsxh5e4iux2vvrrc6zzoe93i9d39tji7p0yz1cf7agj986gcz4y8p5s0dwe5tju\", \"5kiakmnr2b163g5n6eahognuw39ljqzf7j911rvsw1nv\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"t4e88zrw9ghs7pvjmoym0m4c1eqlozdiiyqk034rrjwr8gb4b5o7rkopr7r69fd28ceaxtdruvbs6akxmkrzu72gwiugpo4e9wml6dt6qqnl232gjor3qy2xo7jbp5elzp8uznlaf2b73yt729heq0c8gjinpojaskqdtrl5xz7luxcczowqb2nlel0bsrqnuzjm\", \"bpx4nw2ve8j3mnj133i38gx2rirmgneea7tucgoyy1mw4z4thk2c2sjkr5ypnm7jfgt\", \"wd9qb8u2xs4v3aieapsvsrplmroet5f7lyxkrqfo\", \"9y5jf39j7k4e2863mtunqh8v5kucrtys3bo69e6wj7knwl6ahm5sk6mqjeee1izkghwq7aw1o1xfaq5rliuh7\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"4ajeilevh6duaha5in7h9ylifrwxxibxfijhjgsdqd8p\", \"if2ix3hz474jr6fbtbgermbcowv4mvy8ikkk4nh86c9jfdaorvhoydlq2pabnqifjcyea28whe4q2s11nlqqtva1g\", \"4huje3qh0f6xfsa1lsbgqaa7ay06paseudn47e8o733zjfcew31429qwx3m1g07v2g7w2alvcunkztygei4tdnff5dqu\", \"964k6oh95\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"55ikdvbuuxvs9qdnl6gfilkrrucjciqhl803ifum725gowzwrbs7mk9m5drn80sm2kbgqpm1fth2rulhggfqbnsxrmqk\", \"rsbg0y7g178ah5hg3fp4eno5e3e2mga8cbuz1459rq1n94fyqan1tsmq9kkeh7kxzwski5c2n46wdfow59fr1g0rrsxs3ialfai0frqid4o0y8wq73kaf1ji6ptw465ioqci03psaav7ggv0gpftst12e2kk8vqemy5fhczmx7anyb2axic4apzqaz1bqof\", \"d1mdwkqp8n891s\", \"xzz6aigj8w9b3tu3dc07cndxn7p2l9b2lfajqizr3g2ngvhwp8snzfupwgwuiryo2t7g0y\", \"lvvors59lnrp9l9ijez840pkctiararsyey96n5z3n6e3yhluo0iajr1w8jllz2pc4ao0k34i17sa3z7f\", \"p71n4r6frg2lcxhyzdym9nnfzk0mtw8vc89anjd1xqluwme7tac5cnzxthiw1ue7vyb9mmnlsafjl7kae67\", \"8hvzhegn5zh0ar9nnughd7i9250unw151cq9ijaqy5woyuq597448dnusjh2cim468rxwr3fnw3lixg71ucoigqb1s7wkbh0atrhmiku9hhuno6bj99ptsigd6y8g27p2r2c31c6bwvji49t2v7n6yfx3w0jak761lo7xfjguixgl8bze05q9m9h0xzkf\" ]\n    } ],\n    \"service\" : \"hmvfqq5w0u1yafhemfu2se2y982hawarwo0nx47iudeepqt66phba8xcfkknjk9v2r5jvfkhtm94kbs4wn23geg9cwhdp0ev94js0s0ctqp\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4b81a10-09c5-4765-b06c-4db7dc0178c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.057984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleIamV1Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "10f98faf-4f64-4f6c-8c23-8e65d2ffd334",
    "name" : "Creates a new ServerTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/ntdf428m0pbywpjqk8lpdqao321ng3l6vaaqjyxs6xbanlvgnjsry3n6e6jdgmqr3grjx8yjqm46ggmo251c50mzky444az8cjpyw5w3o4vlk79n75ozcugnz8ttdhrxqx31wybscc2ga6r87zyunmp6tf8nah/serverTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Derick Paucek\",\n  \"error\" : {\n    \"code\" : 585499634,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolorum laboriosam quia dolor et autem libero. Suscipit delectus voluptas beatae dolore perferendis. Laborum quod voluptatem nostrum ut. Perspiciatis fugit tempore consequatur ab dolorum assumenda. Eo\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10f98faf-4f64-4f6c-8c23-8e65d2ffd334",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.019805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "fcda2240-2647-4832-a38e-827fa47a3218",
    "name" : "Lists ServerTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/7fi3jytlqjo3qfk94vu0ju7d4iybt7r34rm1ko3o3hp31o0rcxyqlrbqa3yrzug7wt28ohvc1p34brxzunovo7d2oc8emyozx7fbnyuw8kzyoch4b3l14j3olpf9zn2jeb0e96cu8clu695kxz8mc2u/serverTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"4brmi5ar72r3pxp3s1j4tgg8rmdyq8rhxipqj9lurwgr6tt0lq2vcj2u1fheaaok3mc7sirbzdccibdeoeatjkcyd10lvh7bd3jrfpogp3kal0wqapdxa146xaar2tgxagzsgqnygwmy58okt6uw7mwgcr91rxrccj31s765cbpeomb0rbi\",\n  \"serverTlsPolicies\" : [ {\n    \"createTime\" : \"2022-05-05T09:21:43.017391Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"y9g7xyblv4fffgxd0b1ujdokmu6ro5814eowdmf83yzx1l45g2dqpyryq3hs\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/086733\"\n      }\n    },\n    \"name\" : \"Jeannine Walsh\",\n    \"allowOpen\" : true,\n    \"description\" : \"Rerum velit laudantium ipsa consequuntur occaecati et vero. Animi delectus voluptatem eveniet aliquid veritatis molestias ut. Tempore eum officia vitae autem unde delectus. Voluptas nihil ea. Tempora \",\n    \"updateTime\" : \"2022-09-05T10:43:43.017714Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-24T09:44:43.017758Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"9tob2kwxf4emgf5u05yb88a17sh34nmgw0jdsw14rm9u4wye00nwf9oaxfhe8prado4itumfpavum8o3jqpn0s95ltn8c6obwhzczcvfz79fpds9iq6sz7o6tex9z8rwodg1wg1fvexchx51x8fnl\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/765167\"\n      }\n    },\n    \"name\" : \"Dona Rodriguez\",\n    \"allowOpen\" : true,\n    \"description\" : \"Quasi est odio non deserunt. Minima totam adipisci quae itaque hic qui. Repudiandae est soluta omnis ut veniam omnis.\",\n    \"updateTime\" : \"2022-03-24T09:16:43.018039Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-11-17T10:43:43.01808Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"93w5cesunor9sqlnvhguon7o55ebav2wan9vuml8qdjcuov3bi56eo2vk8rk2mgh9iteal808nup4ez32otiof161tevhwi1ion\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/121263\"\n      }\n    },\n    \"name\" : \"Breann Beer III\",\n    \"allowOpen\" : false,\n    \"description\" : \"Dolores rerum consequatur odio ipsum qui ipsa. Deleniti explicabo aperiam magni ut. Esse vitae voluptates dolorum.\",\n    \"updateTime\" : \"2022-10-01T10:28:43.01833Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-09-17T11:34:43.018368Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"8sg07mjbjxwh76tcl7npr9kwe\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/140446\"\n      }\n    },\n    \"name\" : \"Ms. Micheline Fay\",\n    \"allowOpen\" : false,\n    \"description\" : \"Nesciunt aut et reiciendis ut eos deleniti nam. Reprehenderit molestiae laborum voluptatem quia aut repellendus ab. Velit facere voluptatem porro occaecati asperiores velit possimus.\",\n    \"updateTime\" : \"2022-05-27T11:00:43.01866Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-03-12T11:07:43.018702Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"u70rxzcjm2u4lkesiv0ycalretbx0h8aw6oi7ldviroz7wb15rx1xqf0lklj3os1curt7wkrehrughqbom8\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/367777\"\n      }\n    },\n    \"name\" : \"Lyndon Howell\",\n    \"allowOpen\" : false,\n    \"description\" : \"Rerum numquam natus optio eos praesentium. Quibusdam pariatur repellat repellendus nostrum voluptas et. Ea atque quisquam et est non veritatis. Velit consequatur sapiente. Esse illum ut.\",\n    \"updateTime\" : \"2022-09-05T09:04:43.01901Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-03-04T08:30:43.019048Z\",\n    \"mtlsPolicy\" : {\n      \"clientValidationCa\" : [ {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      }, {\n        \"certificateProviderInstance\" : { },\n        \"grpcEndpoint\" : { }\n      } ]\n    },\n    \"serverCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"3u0wzt8gejghz9mht1vo1t01l6c622yvsiz0iqcx9bo8f84j5gx3y3\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/347779\"\n      }\n    },\n    \"name\" : \"Trinidad Braun\",\n    \"allowOpen\" : true,\n    \"description\" : \"Inventore et enim. Et reiciendis eos ab porro in harum nulla. Aut quod excepturi architecto sit quos. Nesciunt ipsum aperiam aut dolorum.\",\n    \"updateTime\" : \"2022-12-18T08:25:43.01933Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcda2240-2647-4832-a38e-827fa47a3218",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.019474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListServerTlsPolicies method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              },
              "serverTlsPolicies" : {
                "description" : "List of ServerTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ServerTlsPolicy"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f127187b-364e-48bc-9648-6a8008715aec",
    "name" : "Creates a new ClientTlsPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/rhnsvrhf3acz18djrjdnue52w5j4nr36vxc4t37xfxfi7pkprdhggh8rku1rag05kytfv1uugwumsr4yi2sf0a7d37ih9lgmi567nag26mqjqvt48049897riyzu41ctou23c0jsienlb4498hd0vj26s1lmf0n9ng2/clientTlsPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kermit Schroeder II\",\n  \"error\" : {\n    \"code\" : 1325323000,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Enim dignissimos voluptates et numquam et necessitatibus esse. Nulla ut sint hic sed repudiandae. Dicta pariatur ut odit. Et voluptatem repellendus ut dolore est non et. Sed molestias quibusdam asperi\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f127187b-364e-48bc-9648-6a8008715aec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.01731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "f5c4a843-2186-4675-8f16-522a80bf6a4a",
    "name" : "Lists ClientTlsPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/fygvz3ej1qjsafcnkiyspvvkrga1yua800vpeebspivpspax9403kxoqcypllya4/clientTlsPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"0u028cmuoj5jzuwiukv0ish8cl6r6aizy5h5ptqeszzlvinjw7ungki66nf4c8at91brhetvglvnbvw0y10dfqq\",\n  \"clientTlsPolicies\" : [ {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"lm5bcymshv3yvwb16qmrmwn9lfhbnqez17crvw0t3w8owd0t306xud8djlf3gvxgh667d9oruwi7pzl1jpf83rwmh96mq2o9evn47puac4cvutwjmwt22jkimabs4bkdwcno0xdtjcmg0bi7snceivzp0pr1fj4lanjdc4uk4fgu71iktklckqvqyaldlhml2dt5ci\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/641756\"\n      }\n    },\n    \"createTime\" : \"2022-05-25T08:27:43.010928Z\",\n    \"name\" : \"Veronique Senger\",\n    \"description\" : \"Rerum deserunt est ullam et. Aut fugit perferendis pariatur. Quidem et et unde quisquam vel sed. Deleniti ratione et. Nostrum voluptatem incidunt velit adipisci sit.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"xrm3rswltb6hsslfehsqi9yo6ki4xc1r7bx70u011f5972pkkv3akgsu3wxzg97dy3180vehwjqo9zzi55\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/774886\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"5vx3wfsinfoncejjwru1xishbvfb8gzlbllap3uzzbas4m80y08jicostb0zuqpl1ohvahxeg4jolfrcasqkze7cee6omoyi467ix7hreacuhqt\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/716962\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"4mnaliy1hmjd0trdl1yf3wnyqxum2l0hm0ar2a37fic9r652yeq2zkf1xhuxr94rm93u62jpvn717f7q5d53o9w2fk5nl5xoemxh12a1k0g5yqanrhqk3oz05lpiizm27uf2chpprqvphxxhwvzf6qb3elkfdg8bc2nudxw8sdbsdycufiixzdxz3r79almu\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/780743\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"uwnxkvj2oci199jomu3ohj3k00pxkrg9p\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/390543\"\n      }\n    } ],\n    \"updateTime\" : \"2022-09-14T09:17:43.011459Z\",\n    \"labels\" : { },\n    \"sni\" : \"lk7avy8w8eb1vwda99h6nkczd8bgz8ad1k51c8thwbod5micntx1ivsc6l8gggbvegrxyugfzeqz7emctmef7o09cyc9p83exo\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"hp8rcshfqqy0zlzg3s1v77xb56ioykliv0hesxckjbu2sloahoghv6z86xfuuqg4ih759v3x870ozg19wwl\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/072349\"\n      }\n    },\n    \"createTime\" : \"2022-12-07T08:33:43.011612Z\",\n    \"name\" : \"Sidney Sporer\",\n    \"description\" : \"Quas et architecto cumque quae delectus voluptatibus necessitatibus. Quia hic sed enim neque non odio. Esse aut voluptatum quod at exercitationem.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"yrw01dh3x6y1xmthlbgf1kjodrpu4g5pvexwec0hek93pzw274\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/469168\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"88hpere\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/379156\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"2isapcznf5abzjids40hkua9cn2ffe9an1btda7rohimhfu7669i1p4j07vw0gff3z70wg6tpdlavtuft9qlqz9kzdl4mmj0jsls4etj2ur3bowxe9rar2od4t7cxqj42k98ewti8ffitv3tg7f2cj2w4kev9lalwsu5v9d3z02jrr3o42vt5edumtaayvg\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/800351\"\n      }\n    } ],\n    \"updateTime\" : \"2022-11-17T11:27:43.012034Z\",\n    \"labels\" : { },\n    \"sni\" : \"ljpvuqtpwcw5sfv1y\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"dihvhjf84yw0olr7g\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/495577\"\n      }\n    },\n    \"createTime\" : \"2022-11-02T11:44:43.012171Z\",\n    \"name\" : \"Beatrice Nader IV\",\n    \"description\" : \"Omnis et molestias voluptate sint eveniet. Deleniti veritatis magni minima repellat eaque. Molestiae impedit consequatur rerum. Possimus rem omnis similique molestiae voluptatem voluptatem. Sit fugit \",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"kj9q6i55gpuzgf2gxcivhk2cbbmjoo20tv7kfttww04hagzhkuiyegf9620xqor50w68s6ckmgqbssbfgjl1jc9pigu0117umh3acehtccmw2wv3hh1n6w77bslovgvqe5u3vt9iumpogzdl2wwai2p42gtpbcl21xzh9h78fgvb3efso2kqz3bo2ae7hy\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/812454\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"m1duvb\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/313486\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"8w3cv5ji6st04i0do1je23kizmbfagi6lxpj3t30f0hvjk57cz195660w5m0wokryou9r0fzxfl7ajjzy7vsj6luwln\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/598217\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"itxh5yb4mnoqgrgnl3qufmt9rdvogutz26uo9bzcuf89gv4dr8q6nb3pwxxive3doz6fuot49okxrc0cryrkaqu2rklxr56eidihhi5cp6duw3ibskiqt8g6tujfrppdfrxa2xyw5haqov0s6v2f8s6jssrb8jhjzk7mow6vl2rnvx459szovfwm2gv\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/733842\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"48j0ewcdt33v70u67o405f0fbbbz3lqdy469n8r8\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/872196\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"l54rsafk9ou2caalkamsvzmr7s8bwn2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/603361\"\n      }\n    } ],\n    \"updateTime\" : \"2023-02-18T10:19:43.012849Z\",\n    \"labels\" : { },\n    \"sni\" : \"1lty5d33708dy02pug4mdkzoc9cqmtme096kvo2vvtkg4q49jjpf2e8\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"3qapoo5y79u0whxhsweephedfmnoeu70go6xoqpe8uz5n83ynf18fz2tfkwucw7jaxhr0ls2bphpk3an\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/932647\"\n      }\n    },\n    \"createTime\" : \"2022-05-15T07:59:43.012992Z\",\n    \"name\" : \"Mercedes Hoeger\",\n    \"description\" : \"Qui quia soluta. Modi quia perspiciatis autem. Deleniti quod aperiam nihil et voluptas est. Earum fugiat occaecati at ullam.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"rih3ms89\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/306139\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"htmkh4kycnjr5owtjdrue7m8963ih3r5cjz8g4p23i9bmqjemzcmrlwrxb5o1c7gw316wlpizfd12gtcb5dqnpig4t5vtpot5n210dw926l68v27s5y1eal7uumuqbv2a9t5rg8hm00o8zsir17kkl\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/429646\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"tybicpg2mxnzf\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/644587\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"95nerpvrmad176sh7nesavy8z4jucrxls7el542vtaotl8c11t1drbk7amsn3g9iavjo7hsn1lubx50y8cdtuha47m53g9qevy3twiwxcvce\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/659993\"\n      }\n    } ],\n    \"updateTime\" : \"2022-08-02T10:26:43.013511Z\",\n    \"labels\" : { },\n    \"sni\" : \"zbw47cz2bcy97hvlxibzzf4oo6grbwq691l54m35w5rt2j00xyi\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"t86ox0sr8w81k90gdzhyj5ppjbixsf466kuad2hn0coagu744gj3uv0199nm7l4klr3apmitrzrjigwgzaqoo7y2r0yfca3r1qwpmn5eerq3\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/188137\"\n      }\n    },\n    \"createTime\" : \"2023-02-12T10:59:43.013657Z\",\n    \"name\" : \"Darline Lesch\",\n    \"description\" : \"Inventore minus error. Et consequuntur consequatur ratione qui temporibus est asperiores. Cum autem velit ad. Sit eveniet consectetur enim tenetur.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"crnfixh0g9ww\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/562433\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"useduaxhahmp3vlcz1mogug988msr\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/478942\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"p97lbcp4chr1sbi0it54kw2125qoey9wegps3gabxre7rc8n9y88545q\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/791338\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"u9yjip0ang51q6x9bze7p4lvx7h71g0buo08loxevy15yep7woob1crpp\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/074567\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"pimb17whmw63xhbuusdtnprsdlg5ar8hjs8g9zgynoehg1m48eabarr2cmd43bd800tj88l9lzt3n1mar\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/921168\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"xy7z6fw5e3ew3bdx942rgq74mbpcy214obhfux2j83zfqwacmpeb19x6a107ifi642ylp3kr097uvqoi63gbyfo\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/366224\"\n      }\n    } ],\n    \"updateTime\" : \"2022-07-03T10:41:43.014335Z\",\n    \"labels\" : { },\n    \"sni\" : \"xidgrykp5qgzoxzjmqhf0babppb189apfnx5m292fklrwsa3o9jnb521c7e3cfwbtxh5ja2xfrnoeamh0rb3e7dirdkfq3ua5kiflsk9i42co4b1g7xw4nnpmah18gt8dfaoth62ymj87uzzu96m63v8xe20qcibzu0461y81lwzd\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"3cpdk07m8ynvn81uudlc90lednv5wozyfwgvxmh7qoe9dupos5o176dfo7e3ufivjfd3w6jwhhp7bsme88bj4hrd\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/973094\"\n      }\n    },\n    \"createTime\" : \"2022-11-15T09:53:43.014482Z\",\n    \"name\" : \"Clint Zulauf\",\n    \"description\" : \"Animi vitae adipisci debitis quod tempora et similique. Aut quisquam occaecati. Voluptatem tenetur quae eum. Voluptas quia amet earum. Natus consequatur modi.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"3jqvcatvaqkay0\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/664488\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"dw92viwksbgswgmdav69amx07tg2w55f12likxv4xvxa85l1u4jv\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/444182\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"y6sce4v60zqw3k2ca81kky0wtdjy1n3wct23pwrq4dwfehy8jko3witb24o5ghpa07jg2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/591596\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"w8cjz088txp2qwr0yiq6w7u9ag120ssv9f8837\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/623788\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"kqtn5ut1am3qzpvu73p23ipnbq8y2irieyhmr2vsmv07o1f6xh7ifu1masqmhk65kbqr9ym4u7hjdehskfkag4o40ysy2m0j9asjfues7dwibt98oc7hvgas05iguez1x3ao0uzpb65jmsjx5x5xsljy6p3j9ilqk\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/094522\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"n186cl3zyndhp758ls84ns25r0n9x2901mwo9y036cg3y6oo0kyx7nfwxh0spm8yga4gl4i7ovxvfkptsh78jp3tod56fvofw12cuwhmg7jxm0gymfufe32w3aetl04a67cmxx6l3jv94fao0ektyxh8npegs1os2k796w841f9jesm3yihuaene3m\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/205441\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"n2l30cin8dkg5e0e9ie94ciq2l7etc19oo33iuk7a76w5po1fiaozr03tokvqnt7a7xpnif4m7y3ncm1vwvziede7i0qz310pmjr1dzb0t3us39065z3oy5ha37ioexp6tiu0f7ixkh0gii9gka7ar3m5c1kbqpnndodp49bjcl2ud9xamekfxk7nlvb9skd1ao\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/656265\"\n      }\n    } ],\n    \"updateTime\" : \"2022-09-04T08:13:43.015234Z\",\n    \"labels\" : { },\n    \"sni\" : \"iqfjf0z7j74wbt9dy67apxnw7dxf3l3cgy6yvz3pqz2ziw6qnv5qcljo8p359jua1tjsylwsfk4082v5le2q49jynodfhzqz0peoo9wft2cc38v63fgzdes7wh4jjkgcykzuujzzikzc\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"f22e7wikjuzz82rjb3stv8vjj3oin0cdh7nvh61p2odg4c0bmi5qw9drb16067tyqg9xu7wys706jmncx7nyab\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/158330\"\n      }\n    },\n    \"createTime\" : \"2022-04-28T09:56:43.015375Z\",\n    \"name\" : \"Isobel O'Hara\",\n    \"description\" : \"Rerum placeat qui dolor. Fugiat consectetur quisquam. Est quisquam voluptatem qui. Totam odio ut.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"4g3wy7a29gbsjjukly4nysp71anqw6mao0i5smblxi64iowtvr08ku24tc7tw3lk\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/481467\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"w4uw40zncudktqjrhaxj6wefsydk8a8oxi6x958gqhlma0clgv3wkmqwz9475t2mcjbrmaweyciakqo9ktzwtee83frh1s2h587zcnaued488q9wf6i\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/265187\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"w6j01ssto6xkom7s866jkj1kt17vvspcu2ksqgzkxr6k2w5xj3kgk9xcbta61blof1pjmhm2177klgimrttbh358n3vgxuyhru9ui\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/280948\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"lvn5eb17gshsti8e3dviq3g1mqwaug9sb50l7pz59gtyhr2\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/204368\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"z8z9vnfsmfuxhg4gsjs8vq7ggjo649tt52m1sjkjtqz6ppq5gaai7bqcwo2muz2fwjj3ae5k717nav11bljlbdw0hiqgv1ojpiygcpw4wk4mclp6ji989x81jjb74xh159w27fzbkzzdtcsyc4oz\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/182348\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"1zaofo85y37v2hopzgj8io2l\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/523335\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"awnn7eyrj27mw5dzh3q10uole25icm1kr8z1ujn3rejf4uwvl1kmktednrrn\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/100049\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"qakrm3vy4s9n1w39uj02yn5fdaw5js6d7svf0mwsmo95h0f4cbu6uony53vedgjsyrpcazhxkgpxuuv7j0go31y636nq1d6kdy4lw1c9ajvbj6u6qdqpm82jy21qgpbnr7abtrmc4elqp4xdne89avvx80ktyt57gmmm6i\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/068480\"\n      }\n    } ],\n    \"updateTime\" : \"2022-11-01T09:03:43.016231Z\",\n    \"labels\" : { },\n    \"sni\" : \"fr0657wi1k4v552qfltc0qfjuxvhwc04wi5yt972oy1kb1jncrxqku8xt0nyjwsm7f\"\n  }, {\n    \"clientCertificate\" : {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"f194vckjxdd1kq22pgweidsspmkhus1pvc6bo97os90tn4disgn3un4j53kkgw9maxg0t560qhbsry694kqley7ylni91ig40uurfka3vdx2e5t0kyivsve1j01ihfjd7dttifkl79mo6shb8dm18pn224uxeiij4o7c1mi56d3\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/454427\"\n      }\n    },\n    \"createTime\" : \"2022-08-16T08:33:43.01638Z\",\n    \"name\" : \"Gary Hills\",\n    \"description\" : \"Quia dolorum quaerat qui omnis. Sint perspiciatis officia qui aut dolores. Voluptatem eaque facilis impedit voluptatem corrupti necessitatibus. Libero autem nostrum sit quis doloremque ipsum.\",\n    \"serverValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"707r95zsvslzlwis916es2id0o7d944wjxmvtvq14c56nwfcvshwwn4z7y4f8mjujtzj6xyxidn\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/331959\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"ufo7e7pepk9t6f5qgkcrn352lys99rovga4p06kf6gzifgfwzkycr9soikq2vvpm103qjqwjv59wejle8i4rekn8w6e5p\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/579914\"\n      }\n    } ],\n    \"updateTime\" : \"2022-07-31T11:29:43.016728Z\",\n    \"labels\" : { },\n    \"sni\" : \"jsg1pduaspmcnsb8u3sa1hyhh1bjs74t0nv4mpdj90n56u5i4uk6pdie8hgw3ob5t1saj6a4sriu2em619w79gty33qim9zuuinniwpg35oudli4kkno\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5c4a843-2186-4675-8f16-522a80bf6a4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.016952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.clientTlsPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListClientTlsPolicies method.",
            "properties" : {
              "clientTlsPolicies" : {
                "description" : "List of ClientTlsPolicy resources.",
                "items" : {
                  "$ref" : "#/components/schemas/ClientTlsPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "47110455-352c-4f5d-8143-b1a1e13c0e2e",
    "name" : "Creates a new AuthorizationPolicy in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/69euyq2fcftdhe5bpsratbyaabdvvvxn37epl5349wqzwxnp1lcaq1p5ael04ct2uy7v/authorizationPolicies",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Roman Stracke\",\n  \"error\" : {\n    \"code\" : 1329337870,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Iste pariatur debitis vero nesciunt esse dolores. Sequi maiores quidem repellat distinctio. In dolorem omnis sit et quis omnis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47110455-352c-4f5d-8143-b1a1e13c0e2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.01073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "eb47270b-d224-4a60-b15c-c69ff01848de",
    "name" : "Lists AuthorizationPolicies in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/1ni2n55jhtfpf4nhi4bf8qzh45a0v66wir7xg969dr76l0exalf1wttnjlpelkej34bbhwlgdbsebd5cocg87lfshe7yxxxfnmiwi689pcnrju8mbm5gf2zahqys1oufq2noj0qkm4v/authorizationPolicies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"96oh5vykwqf0n1uy0cf3bcpvwb8s6ca6i19iveoe\",\n  \"authorizationPolicies\" : [ {\n    \"createTime\" : \"2022-06-15T10:45:43.008096Z\",\n    \"name\" : \"Mrs. Noah Emmerich\",\n    \"action\" : \"ACTION_UNSPECIFIED\",\n    \"description\" : \"Assumenda repellat fuga nisi. Ipsa vero iusto et omnis at aut at. Asperiores labore eos illum expedita impedit provident. Et et eaque.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { } ]\n    } ],\n    \"updateTime\" : \"2023-02-13T10:06:43.008425Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-02-17T08:31:43.008471Z\",\n    \"name\" : \"Olinda Boyle I\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Aliquam id qui. Provident vel asperiores dolores ratione. Ea sunt iusto tenetur ut non quia. Et quaerat cumque culpa et eius. Beatae at inventore quos qui unde.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-11-21T08:58:43.008808Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-11-03T10:54:43.008856Z\",\n    \"name\" : \"Mr. Carleen Kuhn\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Dicta hic eos est pariatur totam earum est. Illum quia eum asperiores sed nihil consequatur. Eos labore eum cumque voluptas. Aperiam qui ullam qui cum sint.\",\n    \"rules\" : [ {\n      \"sources\" : [ { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-06-30T08:02:43.009099Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-12-28T10:15:43.009138Z\",\n    \"name\" : \"Dr. Kam McCullough\",\n    \"action\" : \"ALLOW\",\n    \"description\" : \"Iure qui voluptate. Quaerat voluptas et quos et eaque corrupti. Ut modi nulla ut. Laborum et voluptatibus et provident et.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { } ]\n    }, {\n      \"sources\" : [ { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-05-28T11:47:43.009434Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-07T09:41:43.009476Z\",\n    \"name\" : \"Elvis Hermann DDS\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Suscipit nulla molestiae harum. Veritatis occaecati nemo nihil itaque harum. Sapiente cupiditate adipisci architecto asperiores quia.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-11-24T09:16:43.009671Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-11-11T08:06:43.009711Z\",\n    \"name\" : \"Ezekiel Hessel\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Culpa voluptatem incidunt labore sed et quia. Sed et non ut error veritatis omnis voluptas. Voluptatem doloribus occaecati totam.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { } ]\n    }, {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-11-01T10:12:43.009981Z\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-06-30T09:36:43.010022Z\",\n    \"name\" : \"Gale Koepp\",\n    \"action\" : \"DENY\",\n    \"description\" : \"Molestias libero nihil a maiores velit. Qui voluptas quo. Dolorem nostrum et ut. Sapiente quam qui tenetur facere modi incidunt. Iure praesentium nisi.\",\n    \"rules\" : [ {\n      \"sources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"destinations\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"updateTime\" : \"2022-10-18T08:22:43.010222Z\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb47270b-d224-4a60-b15c-c69ff01848de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.010423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.authorizationPolicies.list",
          "schema" : {
            "description" : "Response returned by the ListAuthorizationPolicies method.",
            "properties" : {
              "authorizationPolicies" : {
                "description" : "List of AuthorizationPolicies resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AuthorizationPolicy"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d668ea4a-b721-4a9c-abd5-76118250bec1",
    "name" : "Creates a new address group in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/7mkzlxaaqcuzyezsv7yln0k7ifq4n5pyu36x25hyi84/addressGroups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Annika Reilly\",\n  \"error\" : {\n    \"code\" : 34749406,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Commodi vel ut. Commodi eos similique provident asperiores autem. Qui nobis hic repellat officia omnis sapiente et. Dolorem ab esse dolore cumque. Blanditiis quo eum quam dolores autem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d668ea4a-b721-4a9c-abd5-76118250bec1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.008018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "671c4faa-a292-4827-822b-e4a05f0dfe14",
    "name" : "Lists address groups in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta1/1z98pz9vz07tv1demj5k5l3nxbzw9ejzke7hiphw1tilpd98dyhf6rz6f8fjykl0hpquca5xsr3n2e3oa6k0aws3jjo54p/addressGroups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroups\" : [ {\n    \"createTime\" : \"2022-12-11T11:34:43.007369Z\",\n    \"name\" : \"Hyo Dooley\",\n    \"description\" : \"Maiores commodi sed non qui reprehenderit eum. Corrupti occaecati dolorem temporibus quas at. Optio dolores cum consequatur.\",\n    \"updateTime\" : \"2022-11-13T11:43:43.007525Z\",\n    \"type\" : \"IPV4\",\n    \"items\" : [ \"675glpxwjj4vbd3jddprhvcf49m8pp8p6jc6uq7nj2hd5gd1p76e8wsas9qc1qstyssyrv5i0swhv4llmp6whr3bm5wyguolprsbchpecsgxbia2pisybcl2a7n8heshswljt2iidzpnf1i8knsk3f2wt5pnx1tn2a21d\", \"0ih7knldzdmynqhcizcibw8jkvncfdwi\", \"yx54xzca87hidegkazjov3fw1rj6qmsmgccwty4lx7xd0duccestgi45vitwaefb0wwn4hy22q6gn4fvr4ow570qapg18damyt12c8phtr2slwamiejgjxw\", \"pnx8o9ldvce0apj5p5jfondzba7wh5z0b0n8z81bqqd5w8svcoeegbyonuxgxeluol0ox9ywj289crvaty9i5jrntf8yf027h9nialfdc09i1xb5bs4rqz2vad\", \"1zp09cig1uxyqqotqfnutjf8snc\", \"087m\", \"soqtxk9z3zv5v4jsjq9hwrg532256n2gw4b0b5cb6as2yd5hcz4qmzz52mftc391mfpxrlbj1w6z4lqn04qx7kjbtj0wq52dq0wzfgx0fpy1n6culyy27io3394a0g6wd3n8gu2gw5o3h622b4x8ml69xlg6xqjiewf86a251x7mkd0vtyfc0wpgqqklbxbji0gwg25\", \"y1zd90vk5xvpv3ek3kx7qyup53m2bolemx5sb4x34t9w8lg32u94eyfvydgzgq5syrl528jkryhavsri3zh2i8z9cnjqqwo08lpj7idl6lz2023skrcn\" ],\n    \"capacity\" : 1550768565,\n    \"labels\" : { },\n    \"selfLink\" : \"1j1mrmcp1q64kd2ihken3x7dg7nl18j6qnw35fyf7dzz5man0l75shrrgtunmqta\"\n  } ],\n  \"nextPageToken\" : \"2033ljebjorun88iiibbw40yhdxjb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "671c4faa-a292-4827-822b-e4a05f0dfe14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.007733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.list",
          "schema" : {
            "description" : "Response returned by the ListAddressGroups method.",
            "properties" : {
              "addressGroups" : {
                "description" : "List of AddressGroups resources.",
                "items" : {
                  "$ref" : "#/components/schemas/AddressGroup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "ef1c0529-319b-438f-a429-a8647968eafa",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Joshua+Littel:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef1c0529-319b-438f-a429-a8647968eafa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.007306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7a2598f3-8ca4-45cc-9d4e-1e328f672e37",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Sebrina+Langosh+DVM/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Argentina Welch\",\n    \"error\" : {\n      \"code\" : 1159167954,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Ea ut vero porro optio voluptate expedita. Vel ex similique dolores expedita. Rerum ea pariatur cupiditate. Tempora sit provident.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Madison Donnelly\",\n    \"error\" : {\n      \"code\" : 510767044,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nesciunt iste quia dicta fugiat similique fugit voluptates. Sunt nisi et quisquam saepe enim iure labore. Et sit vel libero ut. Eum atque optio odit ullam quia similique omnis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Norine Johns V\",\n    \"error\" : {\n      \"code\" : 1911395473,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Excepturi ipsa earum pariatur. Minima aut error neque natus et. Ad eaque nisi qui et aut sit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Many Miller\",\n    \"error\" : {\n      \"code\" : 1279044053,\n      \"details\" : [ { } ],\n      \"message\" : \"Labore molestiae quos unde reprehenderit. Nesciunt molestias voluptatem soluta. Quos et magnam similique libero rerum vel maiores.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"sb6v9xbot6dq1hbdp0ycsgcyolktgng3vtjopy6pa91nrmj0qbmr6ptinp8aw22wey3rawtd4hi6jd0ctfr3ryw9lmagwejwp6us44g6nieswzllt59umm8du7rj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a2598f3-8ca4-45cc-9d4e-1e328f672e37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.007182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "7ea649b2-f10d-4fb9-bdfb-d797953b7fce",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Tinisha+Aufderhar/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"xoccnmudh25578gn01215738ulaueaf8ihsa9y1vb069kfri9sb2yho1ujm50s2lj1zya8mvf7vo59wfna1m0r9pas49dmiot19jyz3\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Ivory Johnson\",\n    \"locationId\" : \"19ch\",\n    \"name\" : \"Joleen Strosin\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ea649b2-f10d-4fb9-bdfb-d797953b7fce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.006374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4ac8c1b5-13ac-41d4-b276-15e74f2f4e10",
    "name" : "Updates the parameters of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Coleman+Toy",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Cira Langosh\",\n  \"error\" : {\n    \"code\" : 1169530016,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ab velit odio. Maxime beatae et. Optio maiores voluptatem sit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ac8c1b5-13ac-41d4-b276-15e74f2f4e10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.005974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "cdf8e63e-3465-439d-b6e8-77336096fd2e",
    "name" : "Gets details of a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Lou+Denesik",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-10-06T08:29:43.00492Z\",\n  \"mtlsPolicy\" : {\n    \"clientValidationCa\" : [ {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"sfu0l9t133una6qnibrer2ojemfv8eqq5sus57vdh4gsyde2f5t301feul21nr9tz0nr5czd050k9l5uo5exn6bym9x1ob\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/678609\"\n      }\n    }, {\n      \"certificateProviderInstance\" : {\n        \"pluginInstance\" : \"p6mncxcvqgcw3gt8w062o3hgxmjngp5lnyhr0j3siquurmjspsgpf46lhqhfpht3ck6dj8m23awgod963gyx8qcajj0c40ruoqnozgtisbtyf0cmnmlzb1\"\n      },\n      \"grpcEndpoint\" : {\n        \"targetUri\" : \"https://web.example.mocklab.io/979795\"\n      }\n    } ]\n  },\n  \"serverCertificate\" : {\n    \"certificateProviderInstance\" : {\n      \"pluginInstance\" : \"43c3dep32wifvpv76kl0rr13cidqat2wfpwwtyhytzg26qi\"\n    },\n    \"grpcEndpoint\" : {\n      \"targetUri\" : \"https://web.example.mocklab.io/461852\"\n    }\n  },\n  \"name\" : \"Rolf Rowe\",\n  \"allowOpen\" : true,\n  \"description\" : \"Eligendi corporis quia doloremque tenetur. Et velit eos accusantium ut at temporibus quaerat. Totam voluptatem fuga et ipsum aperiam porro. Doloremque et quia aut dolores asperiores qui occaecati.\",\n  \"updateTime\" : \"2022-11-08T10:03:43.005463Z\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdf8e63e-3465-439d-b6e8-77336096fd2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.005669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.get",
          "schema" : {
            "description" : "ServerTlsPolicy is a resource that specifies how a server should authenticate incoming requests. This resource itself does not affect configuration unless it is attached to a target HTTPS proxy or endpoint config selector resource.",
            "properties" : {
              "allowOpen" : {
                "description" : " Determines if server allows plaintext connections. If set to true, server allows plain text connections. By default, it is set to false. This setting is not exclusive of other encryption modes. For example, if `allow_open` and `mtls_policy` are set, server allows both plain text and mTLS connections. See documentation of other encryption modes to confirm compatibility. Consider using it if you wish to upgrade in place your deployment to TLS while having mixed TLS and non-TLS traffic reaching port :80.",
                "type" : "boolean"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Free-text description of the resource.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Set of label tags associated with the resource.",
                "type" : "object"
              },
              "mtlsPolicy" : {
                "$ref" : "#/components/schemas/MTLSPolicy"
              },
              "name" : {
                "description" : "Required. Name of the ServerTlsPolicy resource. It matches the pattern `projects/*/locations/{location}/serverTlsPolicies/{server_tls_policy}`",
                "type" : "string"
              },
              "serverCertificate" : {
                "$ref" : "#/components/schemas/GoogleCloudNetworksecurityV1beta1CertificateProvider"
              },
              "updateTime" : {
                "description" : "Output only. The timestamp when the resource was updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "07071728-700a-4d1f-a7b7-c9f43dcaeb3b",
    "name" : "Deletes a single ServerTlsPolicy.",
    "request" : {
      "urlPath" : "/v1beta1/Salley+Jacobs",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Herschel Jacobson\",\n  \"error\" : {\n    \"code\" : 633389033,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Modi earum illum molestiae provident et natus minus. Qui harum in illo. Quis minus laudantium dolorem nisi nam mollitia. Sit doloribus in quisquam ut tempora ab consequatur.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07071728-700a-4d1f-a7b7-c9f43dcaeb3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.004864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.serverTlsPolicies.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1eea14c8-739a-4442-974c-013174ac713a",
    "name" : "Removes items from an address group.",
    "request" : {
      "urlPath" : "/v1beta1/8v8nrka1lzwa9nwjg7f01sigirmfe89o2qf4hbub8m5i8g:removeItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ellis Wilkinson III\",\n  \"error\" : {\n    \"code\" : 453858821,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Repudiandae quibusdam eveniet qui odit et ipsum. Molestias quo qui laborum. Sunt voluptatem reiciendis dolore quam nihil.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1eea14c8-739a-4442-974c-013174ac713a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.004519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.removeItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "6bc1ab19-a266-4593-8e44-7a0498e5d8c8",
    "name" : "Lists references of an address group.",
    "request" : {
      "urlPath" : "/v1beta1/qsdholm9q24d0uok6z4n0dgnhgfpjh4ubqfb2nzz:listReferences",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"addressGroupReferences\" : [ {\n    \"firewallPolicy\" : \"ev5g21l9sqvvdexj3qn2tayj9ix\",\n    \"rulePriority\" : 1158703544\n  } ],\n  \"nextPageToken\" : \"f3vbnfm9ugd0a1sodwc3y1nrwqnltjq81fwx2n7dsifgevitbzv2kv3k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bc1ab19-a266-4593-8e44-7a0498e5d8c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.004231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.listReferences",
          "schema" : {
            "description" : "Response of the ListAddressGroupReferences method.",
            "properties" : {
              "addressGroupReferences" : {
                "description" : "A list of references that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ListAddressGroupReferencesResponseAddressGroupReference"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If there might be more results than those appearing in this response, then `next_page_token` is included. To get the next set of results, call this method again using the value of `next_page_token` as `page_token`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "49aa63b7-fedf-4b75-8ae5-413c41da31c8",
    "name" : "Clones items from one address group to another.",
    "request" : {
      "urlPath" : "/v1beta1/rss3acqk5iez4jwrzscjzix9grh7bq5815totoj07a6l2kne5a36rzbsthtz0poakh40r7vyb0sqkars62th46ybdi1ssj9if:cloneItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Rolando Hettinger\",\n  \"error\" : {\n    \"code\" : 1568279298,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Aut earum deleniti temporibus. Consequatur id est. Quisquam sit vero est dolorum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49aa63b7-fedf-4b75-8ae5-413c41da31c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.004068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.cloneItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "c8ec762d-81e6-434c-9812-6f81f4c007c6",
    "name" : "Adds items to an address group.",
    "request" : {
      "urlPath" : "/v1beta1/d4lsntknmp99u2cinhqtbmlt23c4:addItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ross Feeney\",\n  \"error\" : {\n    \"code\" : 330847826,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Dolorem eligendi quibusdam tempore aut facilis. Et ipsa omnis molestiae. Eius repudiandae iure unde. Numquam est doloribus qui.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8ec762d-81e6-434c-9812-6f81f4c007c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:43.003814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networksecurity.projects.locations.addressGroups.addItems",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  } ]
}