{
  "mappings" : [ {
    "id" : "ae9d9269-003a-4aba-b1fb-e89e5c713087",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/vteyzpp3n3ppp7p8ur2fylaf044w2pvq2l7ztdto53wlqt4npzcp3dtr2fd43mayh8iw2jkcz27vrdcmss6ai955dv6ceivl34g2cta:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"fg4vjapmxqiaj6lvrb53lxido8i8rr5x2iy5bkjt4bcl32z4e4\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Wallace Klocko\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"bdyhay68casv2xm3rtztex6i950qa31ou4un4ljigy906k7eb3zvrfrjws4dim8iwf0yw3m\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Sophie Dickens\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"eh2c3pmrux9laeu1z7c14mr923onttextzxgva9kg8o438t4bywizdc3xehbywvj8ds3zcszxvbghhqas2fcrcn527ws1v4ecpzdxgp53ngt7hnfqcz8t\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Trena Kuphal\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"rfmmqgduvplp4r5o4r0utga2qtepjwzeq5mg01n612srx08hsqbwcfnc2hj7b4spe7e687d7gtx1pff3155gv66gp148lkuw6vrtgrxs03nah123l6u6jcdz4hwgowfubccrto8em2ab5dk1\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Harrison Kerluke\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2s72suwctkrwczthcnps3mtj1x5u82yuh1gun8mjkwzjbpy\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Mayra Hayes\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"7y29kluthktpqrisayfwa1nzum0mmfbt89xf\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Lavonne Welch\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"yoxerez18l0jncaly2mr08k153db5sskmmlaqylh72722tcq80pshnnzb28h6qpmectxytradx4wfi8lpgv12zm81\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Ms. Antonio Morissette\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"kksdpzbfsh3tkkwjorf0riuoybmcho0zfhn7c8oideot6tjk99e4k1ixdx83hcupin01fkwfqtgp6f24kredadznuyco9wev9pgampced2dxzpt6ngzrjqu4ebioka1anpb7x03anh99tkgz5bd3ilq4lt6iyieyd5h6tfdgr595cusys5z7u145eyj\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-07-17T10:45:52.411932Z\",\n      \"id\" : \"j997\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"i5x8w8hws04ndxy32hafhiv2o7t4ebc52kvn7w9coj9lj47tstyzrurcn5k9bi3ooaq5xub0j6o2dz4amzu3qr48kftzzizro0b8rfvtuue2iyx8teavf99u5jia4o1hznu6fy1jwcr9gbg0lklz0umkxe0u3jo78tft\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Culpa ut beatae. Voluptatum molestias libero. Veritatis hic velit sit quae dolores dolores. Quibusdam at non impedit dolorem quia vel.\"\n        },\n        \"displayName\" : \"Kara Prosacco\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 129693870\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Enim sapiente velit. Accusamus et sint quam laboriosam earum rem. Earum eveniet distinctio aliquam. Officiis et in excepturi aut. Quis saepe eum officia.\"\n        },\n        \"displayName\" : \"Miss Nedra Pollich\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1243432587\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Doloremque voluptatem natus. Sunt libero cum praesentium assumenda ea quo. Ab enim ipsam explicabo. Ut magni tempore ratione quod.\"\n        },\n        \"displayName\" : \"Joaquin Marvin\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 751694919\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Repudiandae consequuntur ex veniam aperiam delectus deleniti distinctio. Aut exercitationem commodi modi quis. Fugit quia inventore.\"\n        },\n        \"displayName\" : \"Diedre Abbott MD\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1515202022\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Quis exercitationem architecto. Delectus voluptas numquam quia at libero voluptas dolorem. Et pariatur labore velit expedita soluta error.\"\n        },\n        \"displayName\" : \"Mr. Nathanial Gaylord\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1655445245\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ipsam aperiam sed nam at velit. Est quo soluta et odit quasi. Sit numquam voluptatem quia id nobis molestias aliquam.\"\n        },\n        \"displayName\" : \"Mike Nicolas PhD\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 801269407\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Placeat illum ut assumenda voluptatem quo magni. Quia vero eveniet iste. Doloremque porro ex exercitationem eos molestiae mollitia. Consequatur et eius facere qui modi expedita deleniti. Voluptas comm\"\n        },\n        \"displayName\" : \"Min Botsford\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 240186382\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Voluptatem nulla impedit asperiores dicta dolorem reiciendis nisi. Sed iure sunt qui non. Animi aliquam quod ipsa sed adipisci.\"\n        },\n        \"displayName\" : \"Shizuko Abbott\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1509367885\n      } ]\n    },\n    \"rowCountExact\" : \"0faxkcahcs6n\"\n  },\n  \"values\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae9d9269-003a-4aba-b1fb-e89e5c713087",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.413122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd556bd9-17db-45c5-9992-0bf0cb91972a",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/npqcn81usbi8b6s96quz4kfkm3wukacnoymwwot9zpglx7y88vra8dmyv2s97v9ac4vsx0ubzjc3l0umom0cjrw2c1k0hxe4d9xlqtu817az21a8:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd556bd9-17db-45c5-9992-0bf0cb91972a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.411312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5298f807-dc4a-4702-9ee7-a6086f2ba2c2",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/aszu2q9ju33fp27xvep9dx2s3h6kvm6df7c0lzjyywt98r9jiq6myor0b7hoesf6pn5h2tb0e0u7j2xs5um0t5n0810me80568cyi2lrd1paxls4gaoxfovk638rno98dbcrdj0l72iyzy5jkh3qbcvgxyjayew4pr1f2p9hwodawbay3boea7nd5un9v:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Gerri Reichert\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"wr2dx2hl14w3tdym490nnu9jj737li8m12ps4ghilczq9l5l61pc4iu8dnku1zhzewsm1btoodz\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Stacie Von\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"4d7r0b4b381gbq2hqiey4xnbntmvpbyoge5wb2g26sr0vao10l2zomnr7eghvvt3cl02xe2c8nl98fmlj9ifqlp05knivnedgretrvz6epa4t67d753qpwbbhs33n\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Joan Kuvalis\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"udwsiu05r6jheis91qjaie726yp0cn78vvxmeparsbzx16cvkscwhywzukvsjh9uo7eh1obmxk43q3014b664j1vtg46stp91qjzqxdsjwmxjzs62vzow67vf1wddrxmuzs219fhpodtyo7z671mwtx4j\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Nannette Heidenreich\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"el67wgab9j34x8zhse\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Lorenzo Connelly\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"rsu39plwdfe2rxvbvc30z7dywealu8abwcj0skq1htpt7ai80z5zwxrx8hby53rx33gfhvn3fa8dqcacu21r2uc352lkl2ef8r0l0j8igz7fp4u1bp1gc2t8nv20ntg1veexi3cy7quh7ym4op3xigl0\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Donnell Heathcote\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2syc4sodug9s8zi6rbqv9zzq8qpxyrdmxexkrv6mx1cfepuq924ofj1130fsbtv7j3jj29usds2ls098w36pnzsub55360hbgdef3lwav0aj6xvbv2w3b0fitctfrxx7nermorhwu0d30e1czn5wdh6452pl37e6dci73wcckmn\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Minh Bechtelar\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"3cph0f724svzttyuc4zhbqujo53ou8qs\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Marjory Krajcik\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"22ricdtxo0d196r2w0x1159izk9iwfsoo8jzx73x7aqb26l60hg67xqa51l3eziej79h0an2dzap2zrvpj43pd8l7jeyqn6kp1juxio8dzuxm2qucd15f6sevue6ej9x48wmpj8jtfrm9vqggozk9ndzzns4kqm7l2tgbcr2vhf\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Ruthann Macejkovic\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"5gmgq4qscp5ci57aht7pi8uce9z\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Miss Vito Davis\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"qjb9dnat52qkrtt1zb3ucr22dr19vlb7mi28nbk7swmm81x61k7po5no0d84g6o1jocpygtqdq7r2lpa7olsr90ehxjn4jjrnqbadxw8leh9xjdo51axwwjc2deu8bsugvuxp33u424ya28xr0ou3xip\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Jeffrey Krajcik\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"kisrmrghvy\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Martin Senger\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"iumpv0cbhrex8ff4ycqzm5cr35gf3la3xnnjp84yika6ub1byohfk3zkc9xm7bihrg12ozgeblkk64skv6wqvhpsbjukloeydz9ammojtqefh2pv6cq71ixgswdyjg0ouyeq1l5y3fa8zxqdjocjfl3ycnjjeuqy309370xha\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-11-10T11:53:52.410517Z\",\n      \"id\" : \"368x\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"ui88wmd8nb6dpoj4mik8ouae3ppermklbogloaqf4qz89qj846b0qmdaxfley3yjkqz5ucszt50mjbk1s3c\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Natus quam consequatur quia ipsa quibusdam debitis. Maxime voluptatem dolores dicta repudiandae. Nemo voluptatum dolorum quia repudiandae. Possimus fugit libero aut voluptatum molestias eius. Dolor si\"\n        },\n        \"displayName\" : \"Manual Franecki\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1829715219\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Laboriosam aspernatur sint placeat qui. Et omnis illo porro pariatur omnis qui. Ut molestiae et eos quia recusandae vero nulla. Amet eaque fuga id explicabo ut officia sed.\"\n        },\n        \"displayName\" : \"Burl Ratke\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 668065015\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Aspernatur soluta omnis. Laudantium eos illum eligendi error. Dignissimos accusamus necessitatibus voluptatibus unde illum. Repudiandae ea qui. Dolorem vitae expedita.\"\n        },\n        \"displayName\" : \"Clement Luettgen\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 315357730\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sequi enim sapiente. Et error alias omnis accusantium qui. Illum voluptate officia id exercitationem. Omnis beatae architecto fugit provident accusamus. Nemo facilis quod totam.\"\n        },\n        \"displayName\" : \"Jospeh Berge\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 628807851\n      } ]\n    },\n    \"rowCountExact\" : \"fjsvxh390bdqnjkyvfjw6r9i8soayhbg7433cj4vk9sltnsz7j4ai4u0qqj43p6u3ltdav63tngnvrfqwdawbmzf3hdn2e3k6gs9273uucc3b\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { } ], [ { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5298f807-dc4a-4702-9ee7-a6086f2ba2c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.411254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5296123-abf0-451f-af09-192dfeff1661",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/bbnjzvs83d3i9itu7dc0oxqp7voqy5a3s:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"wjkgpgr05i2s5q1l1kg2sge8doz7aqcsvcg5p5l6xq72jux9fkll3w4xdxf1t2querpt5fujuw8xfzqpdfnhphaf1umq3x09rnuyqpofdlitluo11m303pxdwscbqcoejmak0cid1ip6hmcwztc5zwrd2opeomcgkaihnbgy71ltkjtjwg03\"\n  }, {\n    \"partitionToken\" : \"6h3p2lt3gxwli8vojujewridudzvliidz4161qg0js6u48l4w1kt5t4u5a81elfd23d8yur3x8nt9nywc2ptyvgc9ezd4x7e56vpsf0o4h08wpors0iw3l0utovc2q4cy01m5upwinl8z22u77g8wjuly2l6y0og4r8vj8p6ihploqso1tfzx5lorm\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-12-20T12:40:52.409397Z\",\n    \"id\" : \"786w\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5296123-abf0-451f-af09-192dfeff1661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.409512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9d6075d5-fee7-4e8f-a6f4-ae220865a5fa",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/3hqeqqxz5zg9pd74ul56i9nnhggthqkc2heer0rwbepgwsp745t5fbntk2:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"u1zsgrv9xjn45ue26o3u29jpcsezku0e58lg2igcwcuqk71ocpka5rmi1cf9fe5ewgaxrgc4k7udyrd4xevgtgnapj3nqf4e3ehd2ibwepjuxigdc5d4dhtw\"\n  }, {\n    \"partitionToken\" : \"pvbqg50cd8zbm4u3r20svrw0v1qndxm77a0jiuxy2v52woypn5ul69qofwhwoi8yifz0a0qxpf21ejbv\"\n  }, {\n    \"partitionToken\" : \"ai4vjgfqebjlqlkr2gg58uzeujc8e\"\n  }, {\n    \"partitionToken\" : \"84be88bq6geq9hdf645btc287pwnirvjp9si\"\n  }, {\n    \"partitionToken\" : \"3qn651u5m8e3fpwrqvsh91sw8otsp4fg9qhkgk3mjak4yt43grqu78rt10elwlpvbjqxu2o9xxxoa28evqcobbjzgvdhethaxw760wkhf\"\n  }, {\n    \"partitionToken\" : \"ydb0m4hr34481mirzlnejyyajv7z1m9xjfb9y12pyl1ptclzoh1y6onnqhmda4rzm1rcusb3adzx8r9dp29exqy4p7g0rrh6pn06gz9r4xi1dxm10fj3sd0ggz9ipxo5e2k34grcxzad9vufzpoxe5ovbcehs5lknpu7lwfq3rgs3lv48q6rbnnx\"\n  }, {\n    \"partitionToken\" : \"o28xhgum1vsdzqe7iy\"\n  }, {\n    \"partitionToken\" : \"0jybvdb6hozehw7crvez4i72aimu3thx0vxxi46rv0riq6oka3f5hvd3iemf8k3dio4c9fv1p5h9whseg5da0a3g3hed5oimikwc13np2vfy49\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-08-15T12:46:52.409197Z\",\n    \"id\" : \"305c\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d6075d5-fee7-4e8f-a6f4-ae220865a5fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.409327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3651ba78-1eca-4272-81d8-757d3a8931ed",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/2yh6rn2pxobdrpoam9ll2q5vjm9cq0jkccdop096j2nounts8pr625i2lrgwrrv6r2np4uasaz9zmzxcwtp4sf0c7p76wuk0ha25rllkjoaddigmry77yglmn2fbx56vwln8kl6twpm8pme6vw7j6crzvbc52klm4yxm9fpk8:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"29qx9xc57qc9wi6ni523dxejd0r\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Dr. Arden Bergnaum\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"geytlh7\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Na Murphy\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0vquor6ir55fk2g4xrtchu6ur28n8dwav54c65ri9jexbv0thhzibo9z6jacgtq3zy3bdkdju866cjznfxk3dtcvl1nhsqlvxt2oull2tp7pphna2h78ryuw925vqv121k2ayb6aq7e2suamwvl843v7ht6\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Enrique Gottlieb\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"yjb3bxxsk1o5t8qwat1gjw3jh2op2fgv439ibhmfcq2svzyxxr18vnuyffdoo2rb1n0crg3rorpbxoow51ztw2v1eiolsi1rtl32ykdik1h7\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Hyman Beer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"7hdecewzd1c3jabll2m4wbwjf9w3uq78sb3my1vlv2kt9jtbmfvhhvbszeqofpsfqc8zf\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Katrice Lynch MD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"tgkjmfhd7nvhd9qwcd2pz4yvrw7x9uv16vot2jz9ijhtsh8a8ttu5\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Eustolia Raynor\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"n2xagaf4mxse8g2y4fxz8idrixfxx62f8ft3hc\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Miss Karen Sawayn\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"brq71ie4xzlvq9iu7buz3dlexzqbcxhu8g3abh483ostdluzeaptzwed2ptb5zywj4fcdp2q0pzrc3kf\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Devon Hermann\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xuvs\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Janine Ziemann\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t47u3e7wt9o4pnrcncgq1oxtvo6u425wrogbueu69oyctuw57vbbwpbso74bt3ja6z66kabmsven2hk9b44o39lqm5usd3rg7urqfarwugnkha00eu70vj049dn58qosqxtmen2iuh5iatgpq6wu2f0909ff6obr7z7wuo8ji0wrw4joxwj8jpktprmo9akri\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Myrtis Funk V\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"818fu8hver0kbgrh9jxgy4xyvrvql9bybev86muj4hg2m6lqhtuz0iia5qeql4pcahf64gl3ret1d7398i9kzz08uddpckki9gnvhhzk8crh\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Geraldo Kirlin II\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"e1z1hb0epp2u44r1dl52zug5unkngci9owrtmn0lvllgyilswqnu1iztxps12ajo3bxzyj1veig459qiqhubn86pyfucufw5tb5qw03rzgmyjuo\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Delila O'Reilly\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"a0wtzuw45ac0j1sf7apyxeann7xcgf2ueu9g56o73ghya3v1l75v9wrhdqgrdf1qgwksdg6lspjyf18czizmaujtavnezzotv0rp3nqvj6b5rof019oeuoyew691irc7077vzbuwtbhteqc5qlk874h1ze4\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Winter Feest\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"taisb2pxd0vtyl5vn110bvo7p9ppmf0x7ed8c04n27ny09d20e7fnch42ngjz7ncl9jmnowndytica5j8ks6p7mcffy34g3kfrtke0yw5gx7emr7eqlqm6e7fhaxsh1ptrpcm6vfy3lridxt61u4is7qzo2c0p018ujjmdlv1s6jb\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Carmella Runte\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"l4m0qq688o0zyqo5h4f5qre6l7jfwxl10sqflf5oy662nn1mf4y5yik6nwtdnnig56hxf6nxrccskyixo8m9yhjd5bpdnoh8sxjxfdw7n8jioi4fao7mn2kywin60hjg9vknxxxu2wdrwxn2np1zoq2robrcvt7b4zkoayqdo68bz52u\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Ms. Alva Towne\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"e7q9gur34na3ac6jt12i57mlrsaxexddd66yxhsgst55jeei8mlapwoqi9i394o8l3e3gwjbrmjc8\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-07-29T12:14:52.408525Z\",\n      \"id\" : \"109o\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"6t4gl2erqlzbwzseinqlgbj3f8m4xvni4i4mnjzre7nsy6r78raysjilc00uv84rw1ina4sg91s4kiixeyv3hex25g4m2x7c9djaku0mat0btceyw1q5lsvaou6fi6c509fngcndf1deqguguh9basih7tylkugux6zjzr3lmku9pqfc3t59r7izfxtoju2u\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ipsam nobis eaque qui. Qui dolores illum eum commodi alias ut. Animi accusamus animi omnis quibusdam repellendus id. Itaque nostrum pariatur animi aut qui sapiente ut.\"\n        },\n        \"displayName\" : \"Marcelino Larson\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 713375935\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sit eligendi eos voluptate non aut atque. Sed nihil dicta debitis dolor non. Vitae rerum modi. Doloremque nulla facilis.\"\n        },\n        \"displayName\" : \"Fermin Cummerata Sr.\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 421627455\n      } ]\n    },\n    \"rowCountExact\" : \"q05b9flss5m3hjybhgtsiei15ie24g3yk6umlbxl90l7zun5m7eyfbmw87kr1snbtedti9e\"\n  },\n  \"values\" : [ { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3651ba78-1eca-4272-81d8-757d3a8931ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.40903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "edd7a04b-9549-4cde-a247-d28afaf17c11",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/q3gm7ln470sl7fc:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Steve Macejkovic\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"u4azsmlt9wtuzwszqh753bgu35zl0t5g41x3ldnmpeqnhfaep3b2hd54ngto6b8122zmtvzzujo9hue2o609psh9cpc7333th10e15hs\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Stacey Lynch\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"c8mhc55u0keti5l00clyzkfovvfc9yb1mtg27laaa1c9lzm3eghlbfpx305mrvfdnxa4hze5dz3cihv9pp6k0ekriueiyf5apwcctkcvpf3prm7eqelqsu7lbq2il4kx2dhyohha9k8pncqzcg2ldgy7n8cjqbpdrsbeocswani4u6lb4imz2y69eja94sryfa18v\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Loria Ruecker\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lig60oe1fmutx5u7jiqd2oql57pywr\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Dwayne Von\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t3p8q2td3k7z54nwjkn8m7ywhcfvjq0z57ytbcqbrrfvbo7s9atogthpx5imgz5r9kpdo8pgp4a64vmct7b1v4brxjib6lqpqbjtuy08zw828l6a711s7fw7vfnqqk6iis237qj5q72dov0bmqjziqvpc62zati\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Mr. Jenifer Kunde\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"l8x4123uv8e006fkh9nmne0t6h31749iceyymxzxp3ki9diykc3xx9puvugh63kvs8uhkgfhy3w9rlx8eaxws6r6l2v11h4la6rgbvh36bprueool96yulanboi9er2su78l1fxm4knnvoa636wjaut6n1gtn7ujcdtrs70j6m6gh\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Antonio O'Keefe\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jab2lzv2dbiu3d5dwx78kf\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Tisa Mayert III\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nkbt4b4goiu0twijde1ccd2h8o7qcwj33pxoh2dj320msf1k08j7tu71yjs08cmadpz97jd0hl1otcafueqnemlnl3rbdvohp20xo46hu72m62q84sucwpgxlcz4jltx2m4nrtdsyxfvue8biuz11nptxjmmirwg1kfoc8tr898bm4d3\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Len Kunze\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"zi1k47vv3h9z813ulsyxdgzmyxdlgplgz24cetgy5dpjmpf92rsy3ejqxnw18s8a1ieo7pkoaao43h6zqdjy35grt8hwqltux2bo53c02gnyqve5\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Miss Gertude Schmeler\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"q4cq031mff4rjkolep1vxgyr3iginy0cxq4mujrlh96k1meg8ahs0dtvu0wwyma5jex9w6o8u4imh9hrm2bifjthbw0l0v6crgmvvc7vb1r4irrcpf09g9uix84t63gvikn940qariqqixqtgozz0tc00qwj0kt43zqj9w91jajp\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Kip Funk\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jzaoeol1lqv9uat1heso7qc7jnq4d5pcgnhzeyxozu6qixxn4i6w3isy\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-06-06T11:29:52.406432Z\",\n      \"id\" : \"9uul\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"tzw1lc9mi4wqp26f3wo6lsbbcm5orxdc93hbl7gnwyiykmjp7ogugsyxovb2uhvzrxeroers60dy4nvq1kbqhrsq254sooh5h88dn50x4ft4xahbso13fcdt6g90kjbzvdux29ebz6rlipp\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Nesciunt porro aut explicabo. Minus eum et. Quisquam enim minima perferendis molestiae quod.\"\n        },\n        \"displayName\" : \"Pamala Cormier\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 69864862\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Possimus magni quae amet est consequatur. Ducimus sint voluptatem debitis sapiente. Quidem corrupti aut minima quia qui dolor et. Culpa ipsa reprehenderit quia minima doloremque.\"\n        },\n        \"displayName\" : \"Markus McClure\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 19972226\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Minus minus impedit. Architecto molestias voluptatem. Aperiam aut ipsum neque nisi. Blanditiis neque nemo sunt necessitatibus repellendus quia sunt.\"\n        },\n        \"displayName\" : \"Lin Baumbach\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 772400200\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sunt ad dolorum itaque asperiores tempora. Est illum dolorum dolorem autem ut in. Sit eum veritatis corrupti harum est quas perferendis. Voluptatem atque qui voluptates enim quos voluptatum quas.\"\n        },\n        \"displayName\" : \"Lupe Mraz\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1510253064\n      } ]\n    },\n    \"rowCountExact\" : \"27vczdjg39b4cro4g7oxyfx69g58xashgfwz2wcjpjb2wtb0zkmk81t4drexjoo5klhp1ibyqccwe32ldcjnmoqtbk5ti3iraayrxzaxa9nappc6taihyj8r7llvsdnd3k106uh0h9kh\"\n  },\n  \"rows\" : [ [ { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd7a04b-9549-4cde-a247-d28afaf17c11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.407213Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94ea3a05-83ac-4953-aa38-c835fd79163d",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/pdfaqf9s5c8ejab3cr4j70mix0n8owc8j2m0v449i70k9a39i9l5vai4pnmldusm9z2zs8amnn6hbc6lwy6b11i1v1tf5ufw48gdbj6s34bxxuoaroa2w8zd62tiyb2mn5kh:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-08-19T12:49:52.404933Z\",\n        \"id\" : \"2f2d\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"8vp9345tvc8aqh8gfxxg5tyqddsdgs2tum9y2t36unzj50dqcvtgfet7bkwmdhpvwp1evtm3z965tr429j6me2eng8jb48t1cmsbdk3hpwdgh72u\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { } ]\n      },\n      \"rowCountExact\" : \"ximtbhe9xsr8j3an5rzzwqw1gnuchvblneayqkxu4do6a07qx4hi7sxv5liael085jrl3rifklx6sqbuzerlejjwq3wsan1q0qvxttu0ev48g0n74q9rld2quhjz3j970p4id2\"\n    },\n    \"rows\" : [ [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-10-04T13:33:52.405162Z\",\n        \"id\" : \"8raa\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"pltng2zigxgtvbyvs4brzfzwjco6cvpzomy50wcdvh1kvasnn5ugpyald59ls38do10mxwrolf81ssv091dzek8ck14f3ctvib8oaxh0tjnye3kacb3gwp9t7t0dx0m7hamd3ngk5rko1xb2esl7x0zl3k0wm0vnrat2we4p2\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { } ]\n      },\n      \"rowCountExact\" : \"mo0xk9kx662pbth0dpqapu9h9b4k888o3yvok1p77onlg8mqvj1hgs90zpe2tvu5yer6b9mc02js281tud2zp3oiojb0t6n7tzj9694ete8y8yep2jmg3xmd3m9voftjz3gfxavpbpufsll7rs9235kocx9ntg\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 1998563915,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Atque sed perferendis consectetur aut omnis inventore rem. Quas dolor quam deleniti consequatur. Rem sint facere.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94ea3a05-83ac-4953-aa38-c835fd79163d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.405483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7568e392-882e-4ea6-bd41-5291ced8559a",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/eyxq0kzrf4nd2u0fy7dx20r2zfnvpyiywj5n0vrfbga2xt57qotwuksriwrpdls1eg6ks8xthbv4urup0pgrcakfgznokvz:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"m9nlv7hqrhp5lh6hcnw1tetd3snlnwlkp54zfaanhk6azllusbd8kv8cgku6\"\n  },\n  \"commitTimestamp\" : \"2022-08-30T12:29:52.4048Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7568e392-882e-4ea6-bd41-5291ced8559a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.404855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a0fb4343-7707-47ce-aca7-73b84137102c",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/4qqmotor8gqvkk3aj542tf1ylb1s5wyhgu8aahc8g5zz8xxw6tsahrwsr3oa3b4a9fye58cf2wc4ynwpa19rsc2zx8x7ilx5ymoq9xl21bvnm2wzt44zykqaep9ssjxp83peepd3q1xa8j:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2022-07-10T10:47:52.404596Z\",\n  \"id\" : \"41zx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0fb4343-7707-47ce-aca7-73b84137102c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.404744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e7ec695-bb9d-4514-b3a9-c6fa18f5decf",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/ub88cq6x9yjmjlxc6xeyt2xix0vefv22dn8lufnkym0c7oebl39t9h9td3t3kgsa99g2p9i4jc9fsems1t2mpg4vzeq7sfvhp0uti2aerpn9wy17dy7vfoykn6hegjad30zon5v8zlw022y9u7dupjop0etmd0uicyf4aq6wz35pf599rv:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"rx3baingfzxl9q2mnznsqb0zwkztuokprsb3sgw5g0gk5doyeibr0v2agdkqqcguoltf3vcgoivgz4rt3rcsm7lqodxycue07j2mw53q9x89td5r4y2bvvd\", \"dzeydsxzpk7uplpdgl4j015ajn6k3csrwzwz2ywk4fq5vvcxvnsaww63xwa83b708svk3y4z9wasipxsm\", \"dprqk7cqteck14jcjm3y2r4k390t2jyvsl7rgude60kfezzd131bs4yzu0g5joqfy9krzydc0eiebv0eemaeyz9z0al7p8hqike1u9ga44r900ljpaqthwx8i6mriz6veid6bwnv6rhnqqj1v8t1ifz6c5yhlddibo8u0kpcd3xtj1hvk7qxgwaqe2zxqqz8\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e7ec695-bb9d-4514-b3a9-c6fa18f5decf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.404559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3420b9ad-fbbe-4bd4-ba26-cf1163b47a2c",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/ewr7ynyyoy6oprdvx6dfw8yu6g:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"tpi4j4wy1veem8wm3jrtl7ecmwi7v4gmwfk6miq9x1gztxewbqiny0o4pximgzuuq055ysdv7evt6ctta5ibu4ow7n58ye49uem07fk3m6ykhrea77pidy3xwavh3cchm27\",\n      \"description\" : \"Nihil est ut. Hic magnam libero enim. Quas debitis possimus sunt consequatur commodi enim. Atque id velit. Quod natus et facilis ut corrupti blanditiis.\",\n      \"location\" : \"8ixl46ofhlo87kynkt51gdkkubf96cq7j35i9rf8zbbf2q4gio5grpnq49v1s8ccth2byqns2bc8z0whql09kd1pxuib9mjmoypp4c13anjamuvp04ugrenwxnihqpvee00j2pkcn9sp5o0279bihgd5or13li\",\n      \"title\" : \"Optio aut enim iusto quaerat dolores.\"\n    },\n    \"role\" : \"ats93smuq8ai19z5uslfct0sea0e87i6jy49p5een0t5115ycyijmln4i7wlqny7vatlo\",\n    \"members\" : [ \"c4uca6n92nlyuprh1le46cyeepqpr3viekrq50dpqxxgk3dps7f3c9szosr62ca9b25flqs3wy7yozafdbwf2q93y9cm0oecdwprpy92efo0ylj05v8fuibeacuf3donjsv\", \"jds8lbfj7tk8tzhz923s1nb0o29uwclxiu041ozlixgzm9q6mugxf41ged5obb056slr348s7jtd\", \"dj5jf1fuyt8qvjpnty4lx43r7i0xfuch5j4gzs1n8tg9demvstmvhqv8bnqenix6djr80ew4vj0l1attd2eb5izet62htcb10yxr762t59th18ijz1zfshz66017v3y3xiaeb1ltwojh3cn2q265rfmsgmm7mkecrer4lmeqf5s131bueu\", \"6yvcox2zwxdmxp9zoq8iayjo8sr5ywacic07h8yms7qck7thavfrn0h0thkid1ta1gpjczxr8swkvp15zcfol83wl4989hyifzm2p0jzs1gk5u09t1e1nx94cc8yuytr60v6p1f4m2\" ]\n  } ],\n  \"etag\" : \"voluptatem\",\n  \"version\" : 1463425754\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3420b9ad-fbbe-4bd4-ba26-cf1163b47a2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.404471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f5c8e36-8ab5-4fa5-814b-53a6f1f32d1d",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/m9d48wlglgzit49ac6o53sr64lpfuiyeujhe627fgrgx4l32i1gm657pmgwsi4l8j5nsqilmi6xpl212jmemw5b4kt0wqouja64y409ml7lal63y8cbb3yknux5rnx2giror0x5tzj58w9s804au1nr3hgcw5vj:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"bkmcco4xblej8aa9dj3ilt4xtcjs5bmcbadfjsw9bxmx5mf8zp2snsketk6ie\",\n      \"description\" : \"Rerum dolorem nemo perspiciatis. Dolores ex aut accusamus qui asperiores corrupti. Non illum nihil explicabo.\",\n      \"location\" : \"k6clups41ato4xyyajm1oi4m02148pj54b8ruohyx2hex721zkue5d8t4ahl2licei1upo4vaibj6bo5fydnqjau035uif5qpoualp85zqapqudq6h683hwl1n1rmgpmq90z0k9y5enuwjgf9tafw6pdng\",\n      \"title\" : \"Itaque quae illo quos voluptatem corrupti eum inventore.\"\n    },\n    \"role\" : \"wtvxq7z20hmrz1vbatk8juulazhh8rie6wv0u6pdjw5udmdr8c1kmj5c3yno99uyi9by5rf1bca5m5sf7p866ssfafbd57auxa7kc5qsmnwtkvklfrupo\",\n    \"members\" : [ \"47hzdm87b109h7h53y012n1ua0jhkpn0lynrilz88z2v02jffr5z7pe99ykxvt0d0y3d8rbhy0cp8dad9zpdbxf5o92tj8sl3710vdbzeiw08x70aqe3muusmklxjuk571\", \"z9s5r76q85qz6fa85pmhnsi98zg1uqj7z2cbaocy0xbur6t4gm1fvhdonskem0zfuf8lh2j97w165ghqwg7e9edznvwuju2kb3cqjq7ie03uvlknsr6y7mhiyhf3ruo2fmvv8snsswjfqkrr5bo0kq21mpk8pe2xn8\", \"npxlflecie0e294u6x3czrta50pgqlp1puigh7w5htq6gugih9iadlqhmsblwjhhbtc20tw3tyop3jsbwod3is3yffi76otw3x9ccr7lvmhi24v9tic4qdd5vnxghrk5jickx0xavj4pib53tr3gmvvy4niqkdoqkkwtsx4n9nvrd\", \"kx4dv1hustezoo7i51rxqw4t8z42evpt4eupue2xvzejj83pyb64oslamb09l5wj72nx7gdo67vi0kid47zkqtf37u2fy6kjhjs7eb\", \"vwohh8r9lpr354ro043t43cgtwj4ucs93mwjs5w06tvcw9uluc6t936jufc8mc36ed8ihddozv2jlif4w7f7ersahuv7a2rk4iam72s6081nhpua3ygli3ps19v6hdjq1kfium5kobcii4ga6dmxd7yxq5iotcct8s7bann891bqiao0yvh18vuteimrih\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"jbjhx2c5pdjkkevpqdax5ykgmhpkltcwx37nbdciwh1opwnpkqw5xfinq9e65kzdnmxbe1xpxu5pc527jba78fdf5i3ykzjyt3r7mqd26ecxpn4kldzly3f92alwv2ojf7chrw7z5ll6gsobhso1u5pzwb7oatmxq1iqcwuemw1icfohfbs1efr0slilt\",\n      \"description\" : \"Velit quas cum repellendus quos debitis nulla. Est labore doloribus et expedita voluptatem eos aut. Quam est quos dicta illo inventore earum porro.\",\n      \"location\" : \"h585sk36rbjmauy3ve68j2jmd7y3obh\",\n      \"title\" : \"Quis qui quibusdam labore voluptas.\"\n    },\n    \"role\" : \"4kwlwfo50yoee3ftnrv02unse7szsbyn33c8jv5tu95r20etpzcv6xt2bani0kj4otnclaweap6ssfaolcp4pg7gwkrfevbv5vsz47v31q2nl1in53jb54frpxtkcq434ocqhe0p2f6y5jyio4m400\",\n    \"members\" : [ \"23csxtkyesh05pivd0xksu3jww7f2jzxmjukpwr2jowy1zxm27132d9f46wj5z6rucc4ef696modi2x4t7es7d7sb9rezywn2gqkcneiun\", \"rdpfouzg4415p6vbofkx89nhe67eg9nkogzme6noeo9qvcf8panw6\", \"9mtmfxyfgrhtfijghjipun5naogws9hsgqqljyb3fvoczckisf48dg7ip3vxiioowzed9xmb42qlw6m4uiq7ng4k0uk2t29i1ek3ol3orq70owqgacc9clz0f\", \"7ic8ptxwlp3r8g4fkdpmoqtb9wtbghdkmwccm3xtkd7ch0qcackayqcr40gmodvq91hgw680sih1huopb8d6o6rmrybqc9exx44ennto1uqzel9z7krbs4mk4mb90dyttehjuho9weuspgd8khclgmxq1jf5jinox7jciv0sk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gb9lhedry83ze78p3quhoqc3gyi14t0grs3l8a33lf0hbm0xnrpss1sa6\",\n      \"description\" : \"Aspernatur fugit velit eos. Delectus eum repellat qui qui possimus. Recusandae quos rerum non aut praesentium voluptas.\",\n      \"location\" : \"kri2or2yg1ywym6g\",\n      \"title\" : \"Ex perferendis ratione.\"\n    },\n    \"role\" : \"5jcyenhxz1smp0542emepjeu8x2pk9uo30xp56244i60nwgu5fikcmnrh0fn7xnwp1yfse\",\n    \"members\" : [ \"wa2n3f390nqmbypgsfrpkvtuz1wtxicjeyj853c8oi1mxksektdoclnkq5yiql08h8kicgmiu82s54hy3xuy9urot3fzskkfiii9auasjjll5nlynlu31mnhhb8gunxlhewhy6zmrp2kscbq5zdj9eiw589a239txyo73nyzxvohanrsw9qztelxi0mrfbmcmo\", \"zi6tv89faxh050reg2\", \"eabcavy9mv6gavm12r35rnbgc5382n1jn1ewyg63hcy3hsya3vrc0a9cjl6p7gpc00xore0j1ctj9m5t61op9ssg1ni0k59ildn2klcwa0uq8egbnejugxa46uqg9em1js63u9uq5j6x7hlr2tu0al1in7vr1j8\", \"v62ckgt5hprxxkko1dj9q2a4mwwrzyeyc0frliefyoioj8i47uvnzhzrzrsh4pm4156wrjc5fv3awx917du7khzeipknup5uw9mdcgmx9znkd214c8hmx0cj7k\", \"w6ae273z4ya9ylbqnlbgwr2a7f157v2ge5t5nif1b0u2irxzzdohfw7tcljyfix5srk8eyjtuz00asocbn6u0pjr\", \"d13one4lvgrc6dqv7yjpcdeuuvhwm2free5vu68vtsgq8943tmo2wj40vys0pd2zymmgt7deju8yj81hca6er9iuepkxz19cpve8a7snwr9o1xoefplwq3e7z9updthq2th2nlc9du2bdqqxrn1u81brtlmcofhvelrwusl\" ]\n  } ],\n  \"etag\" : \"molestias\",\n  \"version\" : 938471498\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f5c8e36-8ab5-4fa5-814b-53a6f1f32d1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.404215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cfc9e4f4-c297-4df6-b674-376966cc0dd8",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/to62tgkgznloml8va823v1zcqgzdaf4a1hwmqql07npzfq1rd8265f2wl1dz5acsgkkfi9s1q3fd105gindi9zdv7vo6fcgxvg7m38b3zlvqknub463yfq6czml6ctvy9ysr3n3onxc1kr1n34zlzirnl5zb8trqaq0yfa524pq4poqcrm59wx6ldacgydn2jjqv/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Claribel Morar\",\n  \"error\" : {\n    \"code\" : 1031699678,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Harum commodi dignissimos est iure voluptas. Soluta molestiae dolorem voluptatem itaque delectus et. Quod dolores aliquid ex illo consectetur. Porro culpa est accusantium unde nobis ratione aspernatur\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfc9e4f4-c297-4df6-b674-376966cc0dd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.40353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d20b1bb-584c-456f-a544-9d1abf461ddc",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/i7wkk7ag9l1xxly9v030dtimha115azhr9y984pifwgkhaepq3/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"88jnosfqwrug31961110xii0sga2yfq5yt5moeub7e7f26wo0nnm73boymjh3bfykdbb9l1rcxhgalss9el3o1l6ejjmjg7e9ozlnqrgx0no3g9x0ux0cvljtuw27eqx3rflmltxns6\", \"aiu467kpg47z6yr1504xz6khs9e5diuj2i3bn80r6vjozg9ssg3f461ww31o2nnvep5o2tqs9xjfs6qh9gbcy4e76bk0rr9shzebjwunwvl5bbubsgelr6zn8kxh6klas3zsuv6ck5bqyhav49fvt2\", \"hye82epcn8pdhstq\", \"3ohomz4qo0ht023zluikjb0dfkvm6gjwdalfwfqo866f82q6wzd11zutlz3cq3lammwcnrb72uev6kk5lbrmigs3bab7rwwchrk2fzjpqw82j125uaaarjuup51y0nqwdpvltu1zfd2zhgwe5clqrwpw3sne25c3h0vagx\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"h457veefo5cibyz0nj8xm4lwjopr0ia2a0cln639710jzo9gj5r5xp6q7io2mmqu2oksjuc4puflo7k5utevrmojgv8ws26ivlqac8uvudd031l0a0ceri219cg5g24lpbmgonnehi10b1vcx2rc94t2jlm1wqz3u516xvau\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-10-01T13:30:52.334646Z\",\n      \"upgradeTime\" : \"2022-11-15T11:00:52.334682Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 1933847644,\n    \"createTime\" : \"2022-04-24T11:24:52.334731Z\",\n    \"displayName\" : \"Quincy Hackett\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Cathy Hauck\",\n    \"nodeCount\" : 432298125,\n    \"updateTime\" : \"2022-09-13T11:48:52.334866Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"s264q6trtijru9iksxnskmxicpfgimlv95elemii1gjaq5yuztmfojcmm1pjdvlz0r00ztw3xn390838\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"g5jhsr8bls3few7wkz812lxfvdyn17xuzag4nqj7ynh5d3ap71r1x9qee2saj0wwa\", \"7jdpmlbfaqr3lh20puieti85fr3bhqte3ep7gnnz8wpw6o7pan14glwldjv8epg4ut42wncl\", \"r30q87crs1zwt0z3esw7dddwoc1xb7uww\", \"4ixt0y5kcrpmky66sqbygs776m02bni912h80v1df7ssqnul2mko981xx0nps876nklgjs6m86z6d88pg0qj42rf5j48d6zah1voezhs72nyg902gim88hsic4j\", \"mxyo7ktcse7qocxu9ic6adl86bm42kbrigq7hsd78zrxkylbssj0lx4xtdy9nlohxhhge9mzbfk5cr3j0bkz1oye29hgf\", \"nzbcvkl0e8ecrjg4yhs543ddygmx521jf70szhh6v9jfb4v\", \"zc3zxgxce726q44gha5yr4g47ib63538zd5bsf62dtzemaf06q9dzvi\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-11-18T10:42:52.334968Z\",\n      \"upgradeTime\" : \"2022-05-21T12:34:52.334997Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 78343841,\n    \"createTime\" : \"2022-04-19T12:48:52.335042Z\",\n    \"displayName\" : \"Vannessa McLaughlin\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Ms. Shauna Goldner\",\n    \"nodeCount\" : 2059366813,\n    \"updateTime\" : \"2022-11-08T13:21:52.335165Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"u716q9jfvzsgu5cgz48hafb1xtu1m8meb1molorbxtxacdmejrq3timr5ganrdbsii6j\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"f1trt4r8xdb9qcu7yzczhsn6j50iv8jytxvikg19v7najhpevjukfck9dcyn55c4xt7f28ym73hs0v4zqow26xycv1lp25vr50bf8oe24ad5debfkuw161d25gr25nsitfl1sc2hz3mufu7w\", \"mrpkw86vjm487dmhkfj5r8oju67vlejs5itojw9f0lyqggit1qhpohdcst5afjk4daa16k5tchoj7glv23ik0dnwn7u6o3jpgxzznxh5v2geop5sjpwupztwr829di0bg88xf6fapo1btnzfw6tbu4g7cnl4wd2x2fhik3g9uusmw76o1gj74782au3s0r67eqirl4j\", \"vtidnvcxltbu40y4ecxeqo3v88dogi22ne6onz0mlr84ijvyn8c6uy7lnefgczsrm6sbwgp71et8mb\", \"16mapvhzx4cgxcllxphfx1snssln82wghuhcg4is8gpmq4ws2giga23dqwrh1jzt7ptao3w0u5t476lw7q3otzkpog610nyij9kfwy69yw0jeq7ififdy2csbfuwzoxt0i0hri8yl5i7et71zccwqoahj6mud5zoc4m6fcfov328vd85yhdcvqe080kv3eo\", \"wa9feznec3316ypjwera7gxvawtws1vy9er9who6wvhcr5ba4mi9htddd1ki511ameo2310i0bje62e3zj2jidvx09ily5ikzuszqndbi36eubq9neb5x12n93zomy628x3jinhcostxgyrwmqxrr5onys1bec5blrao3khx8lcu30gse\", \"4616i\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-05-03T13:37:52.335255Z\",\n      \"upgradeTime\" : \"2022-10-28T12:20:52.335286Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 895708614,\n    \"createTime\" : \"2022-03-27T12:31:52.335329Z\",\n    \"displayName\" : \"Jenine Dooley\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Jean Rice\",\n    \"nodeCount\" : 720566197,\n    \"updateTime\" : \"2022-08-12T11:48:52.335449Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"4s8ueya7g7cqph9i5rwntuj2pot1ruy679f0w7vd3sy4ydzscxlijt8n7u39zjw7ma3yxh3zw193y1eehpl3brsq8f13hr1bvqoihfisavaqvimoh7ock6k5tznfejgpjad5kcdgutl8sdiesq21qf23ddsxc9hlphsm2mbncc\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"a9tsmmn5kioqbw1jiwqxwmcz2zrvnnjnb04k1mi86oroy8vuef259os15nnjhu3f0gea5eorywc41sp991upar1ejf88wkcq211a3a0u49lzht3hnzqttk28ycla3kf058nel5n0o9hooaohsr2scr7kk\", \"oruhxkmoxethmox\", \"7hbktwetdtpg6x90ga8t25wgu3lamzy2q51js21qfpwptkf6sk1avzdyywkfnmm2tpagves4z2045vt9m37g224phmtuvytt0kurbkf6fjv3n9l1eb7pf4s3knoxvauf37ycf4utoovniph7xlrerfir562p70a591c6se5rrq8b2965189aq96tq4659yxugan1pyze\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-05-12T11:01:52.335525Z\",\n      \"upgradeTime\" : \"2023-01-21T13:05:52.335554Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 900940001,\n    \"createTime\" : \"2022-04-14T12:57:52.335597Z\",\n    \"displayName\" : \"Summer Huel\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Jame Konopelski\",\n    \"nodeCount\" : 942358400,\n    \"updateTime\" : \"2022-07-14T11:36:52.335731Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"fsf1h67vr9wai0y0mb84\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"dvzr84e6wjgm4j\", \"sfzrfae002g4div6dyctm9p3ugy6wjh2ozrqg4tlmy918s6zmobliyy6e32w7eb8ccy6tdmvq3l1s6hyupitm5wnmnv6mlbkhmbvgqe04vgqz5ntp9phl9b1n84cyl1cy1xmgzwpz0q2k1tu25s4nzi6bo3b9pcq1ieqqfhj90q57xuvz\", \"99daahno83ru139839jsu8e82wxjq0s0thbv38dri79wcs7q89sukcdelu542b4k8fnf78aw358uaatstxkuihk3txuov5otk2sfewcnqqyxvg2x2k3r90b5x12fqmizjryjajdkxxmlpw5dbb1u5xenng71fd8mkwtaej7vbet1hxno19nzhw4pagsxtcveewmhg\", \"av14llc0v8ettfz3uru09txkg7cp18gylehfpv6i94pm5fsaj71sbm8rebuu2hec7pth6cqobtx4duo4f58yrsunqm9ynw1v14j17rvszj4rny620qynaevkeo8iflwlqnd8dqi3bmksu1zgnwif3xoustj1qnfocmhsmn\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-09-01T12:09:52.335814Z\",\n      \"upgradeTime\" : \"2022-09-13T14:01:52.335844Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 400312138,\n    \"createTime\" : \"2022-11-02T14:02:52.335886Z\",\n    \"displayName\" : \"Kendall Schimmel\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Nedra Bernhard\",\n    \"nodeCount\" : 1776123396,\n    \"updateTime\" : \"2023-01-30T11:29:52.336008Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"r55mxkwyip8c1ayse4oj0fgt3ijtvpti7fymxq8pr13nfa7hwfhukw0fmynnp\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"1mzvsbo2mes6stbkjbuxf7tmu5tv5kyltnl7wbxatlw22mhrdvgpb35ylknq55ld570qv05wud5e88fhtgp9v9jo1dgzi9jffm4hec9rg1812ja0gagq11yszhm6mhofdpop71kkgdh\", \"hpiahy\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-15T13:01:52.336075Z\",\n      \"upgradeTime\" : \"2022-04-03T10:54:52.336104Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 2126647817,\n    \"createTime\" : \"2023-01-18T11:19:52.336148Z\",\n    \"displayName\" : \"Rosalyn Erdman\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Dr. Luis Mitchell\",\n    \"nodeCount\" : 653658060,\n    \"updateTime\" : \"2022-11-30T11:07:52.336265Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"wjncgqukg4z2g7tsx0r2wolekpop8fpjve0h7ubi5vsfjbuwcg4hcn2qkzbfh8srq55fdxdzvioi7iudw7sb\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"k9gj763a3ttnij2q12t7uuczvfedi7aaoouajbtr809tnyptrr38qp6vd18osxn0aka10lbsw9vksjp11nlqwcyyg6nbquvvt9rwghh2jjsvrqr2r67j054gjzngekbwqeu75hgw4nwfnkmhkfwl65tnc78wy6ztwkr5e6cagxasobvdhm2d6lc18ruvhjmpsmj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d20b1bb-584c-456f-a544-9d1abf461ddc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.336443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b7782a0b-27d1-423a-96fc-ceab94de2758",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/uc0uuvirz9698zmf3930wk7hlzc539l/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Marc Lowe\",\n  \"error\" : {\n    \"code\" : 936296429,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Eos nostrum unde nulla tenetur tempora alias voluptatibus. Placeat dolores dicta suscipit voluptas quidem porro quo. Commodi voluptatem dolor id in autem delectus.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7782a0b-27d1-423a-96fc-ceab94de2758",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.334541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "83b2cc75-6678-48ac-844f-10d6110bca2b",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/5efmanimwuccwguk6kj4pd07u3f5oigttn2dgrwxzzc4vy0f2jl85ro6o35ngnbg8541jhg9lrs5gfxtg2g8g1ss83o1o96kty1ifxcrvtc9kbkwy48fq4v2l8pb0kigxf1jgnuyt202auuiseo046p3ge15c4u1jy4x3f6euxf9yoeqnoag0pfbtoee09n/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1qtuyb2fhsv8gjdf45syaue9pebjayrokohgjghoccgief73ori2f\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Mrs. Stuart Ryan\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"v9t1xhxpj5009566wlxwqp9ujdmz6yxih3xtyytmvbkquf4no3b2kggovvf71twx7lymtnsro1e1m9ymh2tmdo1m9nsie8bwxeiv6ww6x87upl2qcej1nyk7axtdshtcxrnlhooqfb6pipz90ok2c29v6iokmherxylfmdgudic9zexuljhy6o9yrsnqm0va95yh\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"4321n0i84cysxl6rgbbz0ee31r1qq0eykdgs3byhc\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"697a2a7frfcxknc4pgt8ihrc9y41zsw5dr77oystgrpihgw6xmpv18q9vo2qxazxgupq5\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"a1vf8vkpuc2igs7yh17f1j6bex2b\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"hqgbx71xrmpft3efuu2aqeqx1ly7egoa8lvdob3\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"1rej2xyu3j2oepj3egmnjvptkf114pzuawiictkp8kro0w83\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"s1qitbf7chmtfvammdia8o8de2io0ua4pk1i277hq6pjttrarpt4hnltn5ch9ojfcecgfwyx7gt3\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"name\" : \"Rene Jast PhD\",\n    \"reconciling\" : true,\n    \"etag\" : \"aut\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"tk5bkibz0skcauspkqlpde2eagdn3i9f56dnlzj3f6llsbanei7l9n\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"qyt48sqdoh9nfe2jz3q8k0i8zk1bv3eiavc0gfq8wtbok6trzl2\", \"0l53rmska8k7xv8998b8ia75uqgj0ujx6kgbdrfobog0crapggnw8xzg9elykg3v9b1z921q69re5r1draaxilvj1c8knbh2pt8n6gmbz2ql8e7tma7dp95qlq0hov9b\", \"c1bt2pbf10mqgpyacsxjhn7ehovfx87t8gj7rgkgz32tzlji1oku4l1pki1ad7hur1p0jzbm0wrk1rr07r23viaowkofj0c8ob9xqmzys0kxrtmawpj6mgv3hmjz6snrfv92r16hzu6iobgg\", \"ln794sh8oosy21rjrt04odrbaz761e3jvvpobebaz3e93r8inzddtz72953myp8ojej36qgwwid06ppy0itfh3z4ahfu4mzllie2f9le10ywvmf8tqwfnz1foe6bdhw46phn8v9c6l1clscaqdtcs03w0strqqv7xillmwruhp6texmmw51vt9rwho\", \"t1lcad15x5wrfdbn8vzxdd8jjl6yaiz9ddmbm4h8dfpv69zu12ub6zqfmosnay8mnp4tivyecj1dju9i\", \"vcebkpal44k\", \"0j4rlixi7722we852xb6ih7kqh8nndmnsk3fggzj2b3c0smdlwwzx0wtn81txw5887bajcfrfa8t5had4nqhha8shfcumbc4i7ioph927bmhv8yxmd7nbn5wre6oiw1xakg8c0l7\", \"wwfr0gl4xa6mzuectedet0pzt5ncbos8ujk3shm1oiivh8prujwiq0sogiuwrn91j3dkj3nj4xxv4qhc9g1ulr9g9oo0a2y1clrzjcuykulq4pc9h0te106ipmyi0v35glu4iaqd8620hyxcucn\" ],\n    \"baseConfig\" : \"f0jaioz04cqq5au3dv0skddckfdexqqjgpfrtb37a\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83b2cc75-6678-48ac-844f-10d6110bca2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.334331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82813dbd-19e5-4062-8e25-9d034a94baa4",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/v4ub1a2dq2fhc7k44iz5zqkczcuacm18xj63jvmzvi/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Reyna Medhurst\",\n    \"error\" : {\n      \"code\" : 867614021,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptates enim architecto architecto vel qui excepturi dolor. Ea nisi consequatur omnis. Nihil voluptatibus iure magni quo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Fonda Hegmann\",\n    \"error\" : {\n      \"code\" : 1582618307,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Nisi quisquam officiis aspernatur autem asperiores consequatur. Vel et doloremque. Animi architecto corrupti alias iure. Voluptatem qui libero. Dolorem pariatur iste molestias quibusdam officia volupt\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Ellsworth Wiza\",\n    \"error\" : {\n      \"code\" : 352594612,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Repellat deserunt fugiat beatae. Est commodi delectus quasi id. Rerum omnis voluptatibus odit temporibus. Esse neque qui eveniet eos consectetur. Eius omnis tenetur magni voluptatem.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Andrea Schmeler\",\n    \"error\" : {\n      \"code\" : 1099505879,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Laborum eos eum non. Voluptates atque consequatur magni aut omnis veritatis earum. Vel repudiandae est perferendis earum ratione omnis est. Dolores nemo a ut sed sed.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shanika Ryan\",\n    \"error\" : {\n      \"code\" : 1592586662,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Blanditiis et totam est pariatur. Modi rerum tempore quia illum. Velit modi soluta modi. Vel doloribus voluptas eos dignissimos optio quasi.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shelba Fahey\",\n    \"error\" : {\n      \"code\" : 1627141195,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Officiis impedit ullam vel est molestias qui. Minima nemo perspiciatis velit vel distinctio. Veritatis sunt hic eum explicabo sunt cupiditate reprehenderit.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"jn7xhgbi1ivdorpub34tqt2axl9btn9pa20pfts16eb07f522yqt7pfm9ye8gk6cyhx62wd7ffu8f2r63uh1wdpskzxava1vavskl6q6l8iwhc9cq7i0zdt071bwlh7h9w7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82813dbd-19e5-4062-8e25-9d034a94baa4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.333704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9fff9650-da7c-4adc-8bea-76a2308a146c",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/inu8t/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Chong Hoppe\",\n  \"error\" : {\n    \"code\" : 1481836998,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Velit dicta architecto et fugit. Nostrum recusandae sint earum atque officiis veniam. Id incidunt eum eos vero. Ad minus qui magnam et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fff9650-da7c-4adc-8bea-76a2308a146c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.332958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a8266b3f-57c3-483d-b6d3-c9d41f4b46b7",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/rx18g06obad4zhrg34avxmi0unqifxdcwl1ipsl8mq7xpe1hw3t74mtfowhoztw21dtiqa1bpybhg9lxxwj9s2n6gw6cht2dsn5af9unfqnqyv2knlqg2qz5um7bhmj9e4puiqr51658p3dam88hspe4yafc8rkyv1lp59d6nj02l7ebtfnz/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lisabeth Blick\",\n  \"error\" : {\n    \"code\" : 1755311300,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptatem laudantium nihil. Hic quisquam aut excepturi temporibus cumque. Eum ut enim ut ea incidunt.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8266b3f-57c3-483d-b6d3-c9d41f4b46b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.332774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ab2fdfe8-bee2-438f-8378-b4a643956898",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/0n54cyc2368do8rtll8a0mrcqaspc7e14k4koy7durc71oktfri0o3s0uw67skj21keue9vk1jc6vkf0tu1rz/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Nathaniel Ondricka\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1191636756,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Aut dolores vel ab. Dolores blanditiis repudiandae odio quibusdam dignissimos quia atque. Praesentium autem magni voluptas quia commodi.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"kgvj9pftyd4mczdmce5dd5q23c330lb4hdod9ufi1qxummejjou7s79bquthu4zk437vcyp1vdknw5ugjarq47n9xs7uldoyx6y9l\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1970413300,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Nisi tempora dolorem sunt nesciunt. Et est vero magnam magnam et illo. Officiis consequatur nesciunt ad est dolor.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"gn7ygi9navki7mzsilr4dw1of9lderlbt7vej5i37p46v7ytbax6mxwj4irj59ngztd8na5953zbxagwabjyemk91dfbvuuqxqkacfq5ds4n8bxe08xf5i7vhqft90udb1hemadlpx84mn5e42acu4v4\"\n    } ],\n    \"versionRetentionPeriod\" : \"z4elhgfxes2hpcr5fyh\",\n    \"createTime\" : \"2023-02-28T11:13:52.33183Z\",\n    \"earliestVersionTime\" : \"2022-08-18T11:42:52.331861Z\",\n    \"defaultLeader\" : \"5k3orqlyfjggkczphc4sttsf2smu6vs4js3zlsx8qvqyyc8g9uxefs8sfazq3xfoz9tnojmet5z22mfcqat9b76ookkh3ni6l2h2vnn0qkidoh4yadi\",\n    \"name\" : \"Gus Streich IV\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"n39s4re2mx5gcnmghmagke6fzhfjc0cyxx7x5e11zc3un41jbmnzw4bev2jvzggydxov4ft5is6ikg3sya4xzpf0gztrjx8igezqrm2bawkkjb3opqf60b7arx\",\n        \"createTime\" : \"2022-04-19T10:37:52.331993Z\",\n        \"sourceDatabase\" : \"rd6q43rgma75pf3xyxczlrjgz1adxp93bdniu1nrtbwjb4xyhlj50uxs1\",\n        \"versionTime\" : \"2022-04-27T13:13:52.332043Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Mckinley Gaylord\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1543316903,\n        \"details\" : [ { } ],\n        \"message\" : \"Minima atque tempore quam. Rem porro non ut voluptatem dolores eveniet illo. Eveniet rerum excepturi odio. Similique dolore similique earum.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"i90tr0onsocdkweprze8c3092mmibu38a4ilps81vngejlsyslmwm4b6i311vyre1voafyxaabtxk\"\n    } ],\n    \"versionRetentionPeriod\" : \"81mel6fbgxc4nbozifojn358vh4vf5p0x0xnnvs7wyjiv84r2cgdm6y34sq2axvrkr646hxvk0lwx4139fjtmt4tmakcsto2072s892zyj6bchv1ogjnk6lxp0c9xoh\",\n    \"createTime\" : \"2022-10-10T12:16:52.332236Z\",\n    \"earliestVersionTime\" : \"2022-03-17T12:25:52.332264Z\",\n    \"defaultLeader\" : \"t6w7hv48fe8oclycjhvv3i4ctoyr4yzr99z6qsxqnbchnyz01s5gzxx2cqwhmslh343ftm4sagukd125nw4d632lsyqu1e7q6mgsi9jyf09tmr7n5gfp2156g4k0lwdej66nxm4j74fdvbfdiic3p6codgaqef3cx\",\n    \"name\" : \"Miss Beau Gleichner\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"m7blww7ex6txffaxtv8b0gzaded0ryksud6u1m08t2nrymybv3d02pksy0g2pdyurxall8uc6v5jo3bzbyvhgtgnxlxaeokevwa5j2dyhxvmnyv7yzehkcki\",\n        \"createTime\" : \"2022-06-03T12:01:52.332374Z\",\n        \"sourceDatabase\" : \"4f8f9i8ksav9t1u11w1tl0xep9tf4a4o8oi3u0w034ucqmkeha6j4hx0le6mi5u2izljyeih1678u88e6f9ifc9yywwkerq923y65k152x75inr16ns7uihwkjfkfni5w5c2y127ivdm\",\n        \"versionTime\" : \"2022-12-20T12:29:52.332419Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY_OPTIMIZING\"\n  } ],\n  \"nextPageToken\" : \"93yvo9b68qhwi7btkxso1shaz4u7o4sx30xfrasayho0cw0u32xwfukl3tol7wbkxdtjquqye2m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab2fdfe8-bee2-438f-8378-b4a643956898",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.332561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ea2fb68-0951-488e-ad4b-2dd86e8a996f",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/xx4mxhuc5qe25yxp447sdsosb56yazuh07eqvxxest3r0dpjkb12mqfo4r28xner28wk8ipg775j1aevhdh5d6km7yu2k2qhs2vcy72jzn8964awrkffud9it1ue98eiklaiv87aj25bs8k63p8ulll9411moxre0veu5la5csc7vkvykjr0io4iim40najao6m/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"au1u21w3ue05n2t94g87y2jke55e33tvj85hdhoouf53dtj27thibopm366he\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Mrs. Val Anderson\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ea2fb68-0951-488e-ad4b-2dd86e8a996f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.33155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "312d0f2c-f7d7-4b0b-b44b-ef736d9a21db",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/hfc97ssu7xmzke3fcjk6fg933yite7e0af7nr8x18znw09jxsmjil1kznpkxlil8uhkslfjfdhae7dy68wl5kcnf11uvqloyro1gae0y40sh6vwe89fhz/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Angel Nikolaus\",\n    \"error\" : {\n      \"code\" : 1769837017,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"In et optio delectus. Molestiae et incidunt. Quam laborum dignissimos omnis aut. Tenetur omnis enim sed maxime possimus deserunt sapiente. Culpa sint aliquam expedita.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Johanne Toy\",\n    \"error\" : {\n      \"code\" : 1750676608,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Mollitia consequatur aut et. Voluptates est necessitatibus cum temporibus unde. Id quo rerum. Accusamus accusantium doloremque et minus qui doloribus et.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mozell Rice\",\n    \"error\" : {\n      \"code\" : 1884443992,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut commodi sit eligendi est eius beatae. Qui assumenda quibusdam. Magni atque expedita nostrum ut.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Rodolfo McGlynn\",\n    \"error\" : {\n      \"code\" : 1262842491,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Aperiam minus velit. Ut reiciendis voluptatum nisi harum assumenda optio mollitia. Quae ut est sit amet quos. Eos quibusdam ut delectus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Hollis Pouros\",\n    \"error\" : {\n      \"code\" : 2111102492,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Qui dolorum eaque facilis. Alias dicta atque consequuntur. Et et minima et ut dolor.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chanell Walker\",\n    \"error\" : {\n      \"code\" : 760693182,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut beatae earum non magnam qui non et. Voluptas voluptatibus ratione. Impedit est est est repudiandae velit inventore excepturi. Facilis nisi sequi. Et incidunt vero aut illo laudantium.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Quintin Upton\",\n    \"error\" : {\n      \"code\" : 394024586,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolore velit tempora. Optio dolor ratione. Tempora facere nobis officiis consequuntur qui tempore. Voluptas at rerum doloribus et. Sunt et consectetur mollitia qui.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Barry Gulgowski\",\n    \"error\" : {\n      \"code\" : 1375747246,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Cumque ducimus rerum corporis rem saepe quo consectetur. Minus voluptatem est dolor. Iusto vel minima dicta quasi facere atque. Natus corrupti rem nemo est velit ex. Ea tempore omnis et.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"q3brsd2rddb5b5ub1jndsp6j0qzzdwynpl1wb5gah2tc7rmwxbo8nyao0pf4kj1z60z2vmqads8xdfpskprmcwmlorud2kqfxqx1bb6gb7w7ogseox9v05rxeo4nzdwwakrsn1dg1rh0ty7ebitai81tok9401g5p2tlwfe5xf0jbtpl6abtjh30nm2lw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "312d0f2c-f7d7-4b0b-b44b-ef736d9a21db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.331385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "76740ab6-2239-433f-8d2e-04b82016bdc8",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/31rmu3fw46yx92t69tbgo4vab6abhjbgl66vlqorg6d0xjec43db6nccegfw3nnwxvtl0l6gv69ta1a37b61vj6p1c8iozpx7w8g3g4qsn24g0ahxhliu20pyv3n1it2fofg7wce9t9x8caikxqijsn541u9p9qb9wbdr4bvl81oyyuxmb/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Malik Wunsch\",\n  \"error\" : {\n    \"code\" : 300645868,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quisquam maiores omnis ratione quo itaque dignissimos asperiores. Nesciunt dolor laboriosam enim sunt. Aut earum consectetur velit. Qui quisquam facere provident.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76740ab6-2239-433f-8d2e-04b82016bdc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.33046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3dc9c6c-abf2-432f-b08c-a686bed714df",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/vtfd4rnomdbd7syd9q6vm0npua0mpg3hwdeky0k44qhce6cyd5zdzrk690ed4gm7e4av5lxqs81mid9a0q6zxs2hs08lrz7/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Harley Rutherford\",\n  \"error\" : {\n    \"code\" : 1338556176,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Ipsum nam eius tenetur itaque porro. Optio aperiam sapiente eum ipsum molestiae. Ea repellat voluptas similique esse eligendi quas dolorem. Eligendi pariatur aut et et hic.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3dc9c6c-abf2-432f-b08c-a686bed714df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.330276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5de56f38-f188-437e-aea2-cb2fd80d8616",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/2zbn9nupps/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bjmk26t4lbu6ndnor8wzde7sjk46ibchi0lla7y92ndu3nr0lck7p0s881e31unpbyb60ax1etkw6w6zfpgy1xhrke2fdq7cbarganltm624rkkxexewfq5yhzgjcjf4yfjve9qvtp59irwga8hppopsghg7sdspvitez35ps7f9096um84\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 969169324,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Perferendis iure ratione. Consequatur a qui non similique nam iure quod. Qui voluptatem officia dolores illum rerum.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"61kt7wldpzerbhbs4eibhl8k7x4b8yhboqaqbelnq7lvsyxy00b6lkmu1f99bl7igxk8h7tzbvkmfjd0\"\n    },\n    \"database\" : \"3ly8n758q1tiady372y77ouyiu8st6kueo5h3tuqpfihghh0ybpoocqek62f15p5ux07vct5u679h3krz4evms6o5msl87z91esxdhntc3ij1z8n2oxgpzfipa9n8z4vxtcrhn0hvrf2yvjy0ibk\",\n    \"expireTime\" : \"2022-04-30T11:13:52.329723Z\",\n    \"referencingBackups\" : [ \"h1hc6dpo1o1yolrg2859bgg71tzxp4chv0jvazgao1gta53vi9ao6tcbdp7\" ],\n    \"createTime\" : \"2022-03-11T14:06:52.329768Z\",\n    \"referencingDatabases\" : [ \"owc1jgiohuyad42ltf\", \"yp65mm9upmpwdalvku68j0tu2z6ws214rmtxm6g6zpruk7u9tlchx01br9hgkmrni5ulf58scis21nuugoa5qv16tzyxo6ty8dvqpm9v12u0pa\", \"f8m5fmyu5ipn2zk1j42jw94ithb7l6mgw87p5h4ftpj4iixl4j40lnmc2p6zx36gqc\", \"s3v6eqzintrhwjw8kvmwvkr2n8xccfa8n5iqahgaqb8chhtg82juxvpizymun228t9lngejzjyv5jq\", \"5vdnptgrs37tp3u0336b08rg7iqin6wu3f06sp5de1p8raa295dsn3d4spez4l8rzkcekohp7vz5n3ufwtq0ss4ctrwl4n90xg7z8gwqydnwsstu\", \"bmffot8wvvf5mt7g8sjvibwxyhgqb6c5rqs2hd4xay46r5tet3nym2mz8ut3msw44y5bs0e3k2tvmyw2uoiqge0hau15il\" ],\n    \"versionTime\" : \"2022-09-20T12:24:52.329839Z\",\n    \"name\" : \"Mack Baumbach\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-07-17T13:57:52.329933Z\",\n    \"sizeBytes\" : \"nwir87xiv9e04uyfctnl3z41s83p4few8vnqljjoxwr2pi391ze7pkeliywc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5de56f38-f188-437e-aea2-cb2fd80d8616",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.330038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65bbd211-1b08-43c0-8df2-0ad20542ea2b",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/an5s6qmvrl5tur189fa6q5c2z6wae7s/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Thad Gutmann III\",\n    \"error\" : {\n      \"code\" : 1206659826,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptates est est non voluptatem ut ab earum. Eveniet est neque nesciunt quas quia dolorum labore. Sed sunt harum voluptate.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cris Romaguera\",\n    \"error\" : {\n      \"code\" : 1348405375,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dignissimos ut est nihil aut et voluptatum. Eveniet accusantium ab unde est sit necessitatibus ullam. Quia deserunt pariatur explicabo occaecati sapiente nihil. Excepturi consectetur perspiciatis cumq\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Hugh Heathcote\",\n    \"error\" : {\n      \"code\" : 1340222348,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quae unde quidem laboriosam est perspiciatis quia. Assumenda voluptas et ut. Ad delectus excepturi nam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Le Bradtke\",\n    \"error\" : {\n      \"code\" : 465867136,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut cupiditate et praesentium vero quisquam excepturi. Eos inventore ipsum est saepe. Itaque rem aut in quam sapiente. Quia nulla et enim. Rerum omnis praesentium sequi quaerat sed voluptatem laborum.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"94qy38gqh7e4rhi4ny6r9re0jxcf2imrdr9utsfci2j8eypzk8ij9j5tbswp9uaejprsbk3led3gbbla1j387gvzgpyz8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65bbd211-1b08-43c0-8df2-0ad20542ea2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.329548Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "642a795d-4644-45da-a6c6-9e2522874777",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/55abmqr87l2dv18x8klxpucxrk1x9chzaygqsgwke6atbcug6tpsn2r00gr7pau0mwrdm9en5koio7fzd4cwz5p0762cs3ry2pg4tt1pqgh1b5z2rhe0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"u1ofuh86tbl24ejayf6ksyytf55vr9khud21v70q92l9wm6e201fahwguvpfnf6wbokqvp\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"aq8a4ytt17f6n736i4vkz7mdflp2xmk8c8ftybbm7796ybqkbeqlt07p2upkyn43p6u4ahwr55zu7lggxhqvz8czsxbgwfhkp0w3fkivbvi7rgdk0jv39qdvwc8njy7kluh4ybykhnawq118tu68inxhmhf7emyurgqdzeccsc\", \"esbojiedw35t5hs7b5bfix0ibdjff5eufj5awc4ca64qdu0qwnsm10hqahp9i1uflp6fitphjtmljq1govif46nu6wg5h68asfdcevlh6hog8d91z4g2ahbu26\", \"i7zhfnttjnz6mpva4zm2okvix95f84kan8l0s7kq4tby6ytbiq0zeggjoq48chcdo5q82kcj6\" ],\n        \"dataSourceSeparatorToken\" : \"29vxibv5trker4rx4qx38t4s7hqmzkkojjky4110zd0322x46coljjihup0szlynmnim52010szqly19sqfo61oafhnkt068w02uwn2gtjf002gaefx126qok6b6tbu9zmzth509k3uges29wze0al3d7wa0akfochaglm5c3afcbevw6ju0ra4rqi6vtck\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"4ao19wfzm0epmfs0bvqg45rdsx30tr4pw3fmmwxdz16830va9l8lyz1jwymyot3qtydpxtfxvypm7rbacu3cwssl5gzabi8i5j3vaax2myxwnkrwuwcqeftxaauukkkjazzb6lqfv5chazvoba\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"89fjfx2ht7pl6sqcu46fc2h7nfptvb0llhzl9usdtlzs6e5pk93dwi3ftc9yxn3xtv70saewymass9yh1x2ymgytj1c\" ]\n      },\n      \"startTime\" : \"2022-12-08T12:16:52.326269Z\",\n      \"endTime\" : \"2022-06-15T10:44:52.326299Z\"\n    },\n    \"name\" : \"Constance Funk\",\n    \"details\" : { },\n    \"startTime\" : \"2022-03-24T13:10:52.326372Z\",\n    \"endTime\" : \"2022-07-27T12:40:52.3264Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"242af0kbkuvtltdhhazvgi9ve7lnfnsgra70x7td5ruld37tncdokk0wjyy8xim7vh64zd00d2scp0p3dwz4smchbxfi9z8pmbnboqxr1e1m1ilndm05q9gk06tlie4fnyqb0ktjw2h31q98kphbldlqan3ayd1licee66js\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"8r8bk5qsed5cwh3yueppuyxqt78kuwa5gf1rgpxo5btor6nm4t6maqlaybd360on\", \"43g4stsiwjswgcvlghquefcbiuajunms3x1t8sbuq3zap\", \"yzczhvlal6orry07wrktm052ztneyklmvlphnmapd0ojvczb4qkjoddh6c48mty4fbmrg2iqr07zke05s9kquwtltzh0k2gssk1c4xex1folga838wviowcgayngnpbhn52ue0xi90fjz2r846a5zbnov6xiwjvr9k\", \"sw6d5ogdqupd04d1l1yudvqr3teiz9mnstwkbrfoercu7ef9i4oyqqt6tj9v3isu4xvzl3jcsr9fx2gott14flth3al56awd4nr4spyiyb4osc7x7pue23ci33ammz518v5gw03tqq2l146kjnmx4fznnq2sdf79ovdbt8upvizurbwqlx2htv\", \"wdk83yhnv585zzqfhfg8gss4cej4jtbnzqv811ubp1xa8vukf5ahlhy9prxr19py7ihne2h2hr6gcjgucu4ri3i04k1sw6zsirdhxmst119t4irwq4ba0el0yyyr9n9s1mgy2f3fu8g6zosnnt\", \"lsy88equqdfcbxcp8rqtaumcpowcg\" ],\n        \"dataSourceSeparatorToken\" : \"em1226esln\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"oi9b9s6kvzsx4ehp0w5lqs4r3jpg8zsrcej77dgfc7fiqu0yu8vekzwjz7pb5qrdzn69jwmlgxbrv8bu46wbfa5zdzq7698gxom257v58k1mpd41z08co4z0837zox51ea7o85\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"wv7gsr3cdyl3ans7d6h1bo3l1y2p7k0dnz4hqikeziq2ddjb6j30u8udmd807t95vscyb954g867z\" ]\n      },\n      \"startTime\" : \"2023-02-23T11:49:52.326582Z\",\n      \"endTime\" : \"2022-04-01T11:17:52.326609Z\"\n    },\n    \"name\" : \"Tammy Lebsack\",\n    \"details\" : { },\n    \"startTime\" : \"2022-04-03T12:23:52.326681Z\",\n    \"endTime\" : \"2023-02-09T13:59:52.326707Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"150l544g6uebwc4z7w251x9ynjmgxvh35f2lkumrkzf4i4zfzgbcvazwtd38iks1u1gel3xx16h3j5vbn2ev5orc9ei4l4apftunt0b75\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"tog2s2t60jl8v7fhyybc4mz5ewctrc2uo4bjpb9b2wzsgvh4ka77ek5jw3s1eofpetta0niboy5q9nx0ad4e4b5nniia6yee1juymjrzx7k2pfl8svv3jgg47s7y029a3uvefh4ntgfoacvwn7jgvu8jw\", \"ke4w3o9zevn1w9lvamjzegthsf6kjjc6s9fwjbhdbzou0a0802ximu\", \"fjy1b45n1tpipjp4v7qjwxcan8edngwt0vm0cd4zen5rnedr5yvanpnpvfpvcne8cflpv576pq8kpyju72smyfswrrhy5wpkadedu5knnpu7amr4h4lu7exgopzvmk7bp7de\" ],\n        \"dataSourceSeparatorToken\" : \"qzsqtjl6s9tr185qe9lzg7mjnrtbdr28ojoy2m2r0zjgb4v3jsnp5lsh1tz3tqcmaa9jl062p534vjpcn8n0fcm7as5kzj7qordruxbc\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"clamgzrafn7rtg1zu4ncqmweq7c5twe7tx1od5s2sbvs452ry49law2mrds8z3hyqiz5978wnofusbcadub\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"qsagly83mv2s46ab7rqdnu94yg1w2jet3p55vi7azuqxe3j2612kup\", \"dw14n9h7xyndt5fy20gigscu6b7dp486u78lptxap5wd8dox3saoqy6h6b0ddskm0nf60qa0i7iqwfjcatnkv2i4qgj00ka569mvo7zpt485nej6oqhf3hhvcqpinjw8ci10logdtorwwv8pc3tw\", \"5fqqvhyr68wmp6z9zv5j80uas4ynvv01gvdbs7rl6rq3se1y5wtomtwfgrpdz4gvpezcfomytu04aanqa7q377a8vgurcj5fodvqss1dbylbn90amc3fkta2bkt36f9sb49re9uuej2mq\", \"y1fh722hd4nkljcxibx8yqtgcunjkxsbq7dj8v5fefa9byp2mndc0osit18l7fxifqsv7b1igivm1dboxto1\", \"6tmlkcfvzyyxcywinz3z5gghm4mgha17dwk5m2gwdrhz9vvoijnkkpuhlc3jgpdidpf0jwry5yeiqptp1uzmvhzggolw0bqzgkryi6k71cty78y1\" ]\n      },\n      \"startTime\" : \"2022-10-26T11:28:52.32689Z\",\n      \"endTime\" : \"2022-08-13T13:22:52.326919Z\"\n    },\n    \"name\" : \"Allen Reichel PhD\",\n    \"details\" : { },\n    \"startTime\" : \"2022-03-29T11:58:52.326995Z\",\n    \"endTime\" : \"2022-07-28T11:17:52.327022Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"e2rgpnwean7fmecg3rkrlg1m8096a20z28zgqoxrtato9t3ydxo7tiuge2dt0zn56fashj7v65413xno9zbsfu1njtbaqnx0ah1xsx0e9ivsa3d670nlcwy6sxxr7f6w\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"juybryaxkujvcolgryt8lgylz0e28grede2fmdebhwfr095rmc3awaokxpopspx87ynmxhb29pf758ilbj2orewe9cd7jrng79rtj80ge35gqm9yguck4rzonp5ok61kiazboz67q9otoa6mqnwlyrhqvgwa7hxh4nbh4twhazseydc1w1qwyj\", \"whab25eb5mg015ljqfr890p3upo54qf236mjhie\" ],\n        \"dataSourceSeparatorToken\" : \"qxmrawcn8f9492vi7mpwrapj0q5xg3we6ibu6cqxagmylbsje4g77zvf7sugvtsetu4tbuh0sf3mwzoy613o2vcn9ekmawlxvfbh96igptsshuawum3skopljk5chh9p3dhmtkgiip1070ev43gj5853k8ka1yryqxu8hk7d74mdkmlx5jucqx\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"5rasvoxb6b4tmrz1vl7s64wf7k0uxwck1pevcvt3osczfbe7v7yumt4oegotes3ubxyc1b6r\",\n        \"metrics\" : [ { }, { }, { } ],\n        \"indexedKeys\" : [ \"jpldrrs2n2vdd2k5zqypq6e4stideevoqoqhph7m87xvdd1v\", \"zu1q3smlylr2cidv3zoytm0o66bx4612d4bjfpu04573wvwlzvq7k1j74sb4kfzy5ja8ymzwactdld5p8fbpwh82ql0qmf5sn0ickju8qplkw4udhqjhcs2a17xmhu8j0mossbgt5tgn8gp8h4byxozyap2ll4ovmu64y4qwcvlzu8biyuq\", \"tpz5win5qq5h5qm41z1sv7x925o9gakfayyw8786wwjipyl67kwum8hvh7dduqeb08978f4r43ni965wlzxd3aevb4hbacd5ud68a8bjy25ny4dzh3t59z1dy3lj86c5hx770hufd24nvy69kxda4xh3z\", \"ycnridi9334bul7zegx6pewh7kkaiti4zbty5zd3u9f84mo7bf39mfay88l8d7d6yu4s0sa5m4upp2n1\" ]\n      },\n      \"startTime\" : \"2022-07-25T11:50:52.327192Z\",\n      \"endTime\" : \"2023-02-17T11:28:52.32722Z\"\n    },\n    \"name\" : \"Chantell Farrell\",\n    \"details\" : { },\n    \"startTime\" : \"2022-11-04T14:01:52.327295Z\",\n    \"endTime\" : \"2022-05-27T11:51:52.327322Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"adr29aqvltzc3p01n8946ldvobe438ywucj0126dnd7y4x9nk2ylbee0mq1yc5zhp5x9w81ulwvtmx75fzib4beyztaavkbmtc55lpqudmqvy7vw4grqt0say6s06ko9wkb580\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { } ],\n        \"endKeyStrings\" : [ \"b2mefkmyt\" ],\n        \"dataSourceSeparatorToken\" : \"e3duhruhdujoc723gr0m5bnsn2tfi4rm1\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"obmpepuwug2rzea28bxl7mo127bqnfxwbzz\",\n        \"metrics\" : [ { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"pbjj6a36mdf8hc6vtngcidn2olh17ztkfl6m0f9d58r714uql4bf6qywmy68ysz0uv93wzjubh1iwpt7ckzn6roxhruopwqr66ontzqrrn8g11g3qnygh5h4n7happ0n39r9nluitas7tsqwjcj9og1sdy79tperdtr6zeze57ew7k1n3z7rqc8a4h1b\", \"qsblnvjcndpf5xxco5n292b4kyrmkzpn0l7y9l7dt6\" ]\n      },\n      \"startTime\" : \"2022-04-12T13:54:52.327461Z\",\n      \"endTime\" : \"2023-02-27T14:15:52.327491Z\"\n    },\n    \"name\" : \"Esperanza Skiles II\",\n    \"details\" : { },\n    \"startTime\" : \"2022-08-27T13:40:52.327564Z\",\n    \"endTime\" : \"2022-10-05T13:48:52.327591Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"alp90st92hnjc0xi4gqev05hrlohvg70ggzyrxww20b607xqtphht7j3k63vsh1lw0cn33vjdl2zwgq4lhb5yd0ku7v7hj21ywyoyumm2fwk\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { } ],\n        \"endKeyStrings\" : [ \"0rjm61sxm3jib29bf6bfq6zxalv3jdvkassyo4fasc71ypdboz63e4rb37002ntaf7ro8m02c3j4kjf4bgmd3mprndnm8u3ud3\", \"cgxr6p93sc6bbk9c927tbow1n1tjv1j0\" ],\n        \"dataSourceSeparatorToken\" : \"h64ecmz16bn1c2lbxtl3bkeocqb816osy1jzixx83ptbysbndczhxfn2noj0q4n8jddnl5hqd83sbrdkr5alqg7xs19tru8zn4yv29vc6w2bmoaaqw7m7oonzp995vdk6k7qh5bq4l514ipg\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"fz4kzke9qknx0c1171wqblcea5aaj30p11drdzwnsf4ff3iqqp91sru7h87u1ctsxc2a12qhl8faanowksnehmda9kfaen8ak7qm9bgiqrts1q3jz5qukbjj7ra28g76k\",\n        \"metrics\" : [ { }, { }, { } ],\n        \"indexedKeys\" : [ \"op8ym39cn1efrsqxvlw03j6roaxt87uvm1bxizk1feunj661sazv4s107mp450a9zoeu00jipiavypyv1grjkxlr\", \"56qwuv4za7rwz9i2mkv8\", \"bamzblsr4pi9u8bhsm7vi6\" ]\n      },\n      \"startTime\" : \"2023-02-03T12:17:52.327732Z\",\n      \"endTime\" : \"2023-01-05T13:45:52.32776Z\"\n    },\n    \"name\" : \"Gabriel Mertz V\",\n    \"details\" : { },\n    \"startTime\" : \"2022-09-14T14:05:52.327835Z\",\n    \"endTime\" : \"2023-02-25T13:16:52.327861Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"aizavhxdi7faxadxhysfechluq8f3csvv50jj0rqs2tb2dbne8utsuj0nt2i5615yz0ysyb9t64c203h0nozxl\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { } ],\n        \"endKeyStrings\" : [ \"xpudlx3heslhyzxyna704fyy7wle9sidj2mk8hcgw4b8vmm1pinumqg65a6b691gtzivbxg5fdwnqqc4bhnl3nrha4x57sy3yh40qc3nvtufyq1w0rs91\", \"a95zdy2ai6kqc8knaitdz8v\", \"rrdispxrr2wnpnfxw4c662hr2e89y7qw6meu86dgum9e4qb0ama9vuhcvdl48yhskc7kzikeltjta2uqak2kkwvyihxnsnyp38b8sxhntze24t170nsi5ed71f038azz0b4inzw7ixpi8lfbrj00v\" ],\n        \"dataSourceSeparatorToken\" : \"2djutvtpvvaahnsr18t0162z0ulmjofgynqxamqp30a1q8e7obmk80ub3o84nqiytldib0\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"6moi67wetsprsijhw5cp0ejr0tb0q672d76y2vca1yrpkakwpmibzpmdz6i2bg3z6danq02k8zkwib9wc7d0oc1hfpe7iteab68lthv6rgthreq08l84\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"t2jj5bv53vnbdi0vv6zh7c115fpr3cyseo1gj23cc9r4cqa7\", \"n87x4o0clpozwa7jzj84u4enmruvhi786npp64soxrlgvf7q66ky4rbhjge0h944siwo6waqtws6y9almwvks5n8qdqnfymq3814ts66fiuw4cw3uti9j84rxiu1zj5lgun2nfkwgjqfqohcyegnop4m5o6awntt7im9rvw15bsy3s5gt2lj9wc5r6fl7u2\" ]\n      },\n      \"startTime\" : \"2022-11-26T12:46:52.328018Z\",\n      \"endTime\" : \"2022-05-16T12:32:52.328044Z\"\n    },\n    \"name\" : \"Renato Von\",\n    \"details\" : { },\n    \"startTime\" : \"2022-10-14T13:46:52.328114Z\",\n    \"endTime\" : \"2022-06-01T10:49:52.32814Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"a0koit85dvpq0pjn0dnr4u2e4a268cdv9u8xee88nyt034xtxrg27czxq116xz6501fvs9zxieyfy4noojzr2913zo41zz\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { } ],\n        \"endKeyStrings\" : [ \"srtlrs72mg0ahuxvbr4htrws81p4221ql2p7gt8y3p9fadf3\", \"01q4v234uywglchx4m4vyhdbyuqzdeqb3rhzd5bsgx6tj4csvnmdf7yjckjhvk397dnhy3fq3qs6asrhb41c7ixjhlnmxgx72djucxd1elmzj5u9q3oho34z4\", \"rw0rrvgk2y6mcc8912wv30y1bkigdt82pkaq445nczpd16jmqu4bwigr9ps6kgj7ol4dw753jugquces0lemd4b5immqsc30bfbwj4gzw3d8vf48537va1v9eg4eu1t9bibb8yus1qgff676\", \"jrl4pmyfqj9xfa3xtzmjwp21ah8jtu4rctx4l82mo69z963g44faqs34v0dvvf4tulnj3ebuujo13bj\", \"40a5o5bs17msz1v3tp31e7urddh0g65p1p7zsz39uutqncbs0ftrxmexxe8idkwhlqod3dlum1dk6t\", \"57ct952kpm4wbljr2lxp1130je90f1y8uh6slwp2yiszbv33nfu5kg9aajkhirvsfv39m4uc8o5eyq1voas642ulzec82xke6d3fo91xtefuz32kbrnczmnhe9rxayaitzjndqxuzqxqjmvm3vc81lsc3i91qb6ejsejbvwfpnzmi6uo4kr98mh\" ],\n        \"dataSourceSeparatorToken\" : \"ef15ctudp2cuc69bpg9xep71l4vixlmipir46ebcsc4sd5u2q6fv391mpb1jimfg5xluxxrh65p1naf5qoqmx83txque6w9crevr0u8dukj62ajne9rht7toqqam5rs32k52m8o9w92il8u\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"qh5htokxrc5ymrj0m7geowi\",\n        \"metrics\" : [ { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"iylrgem1m66djd3d6kd70ri6szjcj4kx0oaucx2z0o3urv92g2g85z7y9vaqd\", \"bpaw65x04jnp8dvxz9zaw39xaubv6nnkq4vcop1l7r3a5tt1saofat0elalydhghbfhcaltq8y17uei7x5w3nidppg57rfwd1w50hjh7cyvylun7eblk99la2aeb850s9kzvga1h2v0pd8u36rhr1o06jkryc3vfvhfvb2i\", \"hgkcs1suqjpp5mfcm1i4h1gkylls12ibasm3q8ir3mfbfab4ty8xsvwvodr4r6bidv764qil7sibyfx3rkcf0mpw23z4ncs4glud1zvjxq54cj2mtflsyr04tmtmllp20epk1o6xwsrdwd1016jm2wwefsugyj0n\", \"p8ayp6phko1amx95ga4rs98gdjknj0og53gfkjpb1nh7s9qow51fu1dbtsjaxij31ncffo8o6jwv79nydfnkjrgax1sieijpkkgirw7uo9v9\" ]\n      },\n      \"startTime\" : \"2022-05-11T12:58:52.328313Z\",\n      \"endTime\" : \"2022-04-13T13:43:52.328339Z\"\n    },\n    \"name\" : \"Trula Huel\",\n    \"details\" : { },\n    \"startTime\" : \"2022-06-13T12:27:52.32841Z\",\n    \"endTime\" : \"2022-05-22T10:31:52.328438Z\"\n  } ],\n  \"nextPageToken\" : \"y2lzlv0hd5f0uxhuulvb14sdhqskmha6no7wf6xocwxvg5tdrrrp4m0zyds0ytb8sur3sdx2c88nzm98d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "642a795d-4644-45da-a6c6-9e2522874777",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.328594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c49f481-827b-4af6-9818-5ca895727fe2",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Rickey+Ernser+V:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c49f481-827b-4af6-9818-5ca895727fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.326074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ec0e9c2-d2dd-4347-9d8c-3e651c1f4afe",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Miss+Shakia+Ankunding/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"v5qm0cz1vdakopwlcq2r6s0zs15kvm0qcv4fjvyvy4z7j1654kfvwa5lv7616rsm9ut8a1pb6pl78ysx64hdh2iw59sspf9e1uprp7alzwu2qr2vpkjfbb1ipmxt76tn4qgu8sgooh\",\n      \"hasPii\" : false,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 1457247406,\n        \"depth\" : 1747588410,\n        \"endIndex\" : 971929616,\n        \"dataSourceNode\" : false,\n        \"word\" : \"ruz5m46edhn4il511ywugv8hyodl7o65pysumi3u6jdygab82atixxtcbszsffl97e5ld56d8i03n4jywm7j3npfm2g6x73231f0billlcoxtuhbj08d68o2evotd39\"\n      } ],\n      \"endKeyStrings\" : [ \"irl14k8tejjzu13nyfiqoswux60lsxgcm2it2np05t0bwkqpxb6tzm5sc0a8izipgcbjw5zqah1iuqk6rivzkwm7p74h71qd3un71owcqns9iit0ws7zfu\", \"r93mav99sdmxpe8qkmtr5815ud7lpgze19q25yj0uyjogkskt56eiqffzhxudbdzaibw5hdy9dzhatdtbav5aciet8nh562iesto\", \"8g0t21emwsz4ok81ihfmsatapuwoeca6plolqo33385sr6ogbf84hiunfg1s43w2exb69uwqgsu7i0daq185gbtt06jjmhe39ai8wyy33qtc2hs7x30dgo9qi2c7av2w95ns3ljyo\", \"4u9lcr6wjc1c3vlcw2cs8a0pbdev9mfxs7atdn7xjm9mnaczrzeia4zva\" ],\n      \"dataSourceSeparatorToken\" : \"17oojdaetldcdwemgzegff02p8x8kn57tsp35hhhaxf28q7ri14p1lj88uy84c73vlky0ft4bz91omwl1i9j9ac53cdu4s9ziutpbhlkmix8xcg8idq3sq8sv2on4tmf30cfe8x3cb0sj0\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatem sed quia deleniti culpa qui sapiente recusandae. Et rem dolor. Accusantium est ut tenetur quia error. Aut et rem possimus velit pariatur ducimus tempora.\",\n          \"token\" : \"6abksj9redlxu1igifl1\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Animi facere quo. Quis cum amet. Fugit mollitia et provident enim. Quis maiores est quae unde. Illum neque distinctio est dicta qui nostrum quia.\",\n          \"token\" : \"qxdxl44c30cha1wejyyx9ym2f2bhplu1j79cgbv2t8r5\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Consequatur vel fugit ducimus. Sint quae molestiae consequatur qui. Autem sunt quaerat alias sint eos enim. Quam dolor quo.\",\n          \"token\" : \"p34illfw8qqyr17xpsind3e9kie3fpraq6nd4njnudakzdtu21fx0y6gjdlnop96s\"\n        }\n      }, {\n        \"severity\" : \"WARNING\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Aspernatur assumenda doloremque libero provident omnis aut sequi. Quo qui nihil harum dolorem. Temporibus ab sit ut labore. Ducimus ullam minus vel nihil vel omnis expedita.\",\n          \"token\" : \"eizuruwya5crmzofr2qsu1nfiu6rksd3g0u3nyfp2tjutrlndib5fd0thzjxcn01mv6lr7f5mz7vg9rcb\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Quidem exercitationem eaque et. A aut ad velit dolores dolor quia. Accusantium laborum officiis amet tempore. Eveniet sunt minus ipsam autem vero doloremque ut. Et reprehenderit aliquid error.\",\n          \"token\" : \"zypmr02dbc56iuvf0jv2fqrey8bjbql5193su6scmo14bntgyb7ks28zu32enc6rb77a9howjgohmzm89cr3bmg0t8pv6e45lsgrxuyt9r1vfhuyz9nmx41zj392e5jc837berukgqxouhpqwfiryy5jxz2j9njbjkjhcqkx1wn2zf3tmqk8ymexxdnakapfqx5\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Molestiae tenetur laudantium. Nam est consequuntur laboriosam odit. Ut quaerat quis. At possimus porro itaque eligendi maxime et.\",\n          \"token\" : \"usmo9w5ako29dsva4yxxggu\"\n        }\n      }, {\n        \"severity\" : \"WARNING\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Nihil et illum porro assumenda debitis nemo aut. Sit et libero dolorum consectetur vero itaque aut. Similique non quaerat voluptatem fugiat placeat. Autem aut sed aliquid ad labore consequuntur. Est e\",\n          \"token\" : \"q12yqft2eqpkpk8yfr5xaodt055zqjdyia0ctfl6f3iw12rrlvni1s83ietyr5lg3eamcvk6ytlf8hqdylbg8p4ebh4723sppeuyhb6p7bpr0q1exwbvlsmmksnq3bpt3ym5yf0chm0an4xwz41znyp8l82yiv5ixhbuqjtixu95j6pm4bm3eltqdg5doyee9n1exa63\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Porro molestias et eveniet et exercitationem molestias distinctio. Et consequatur omnis quod illo accusamus aperiam. Sapiente culpa tempora.\",\n          \"token\" : \"hzm3zzbbphjj1s1lwyprrclyv0vdwbwmba8kqo6h51vonfznmep7krxdzqzd4kiebomk7mjuamc40s5q2sdw1p0ep3h3wxw1fa3rlp6b6khlkym6ugo3994c1b2c0e4j6tvuxwngbjemq6lbcykqysbw3ut69a43wczoi76lc0okzr08japol2mnkwfk\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Sed ipsam inventore veniam. Veritatis facilis voluptas odit at. Quod eum possimus autem.\",\n          \"token\" : \"i8nso3nau309qjyzr7kt71cpk6s6qwqjc1b777it8g11saqr6oosqv0tenzbiuth53druhwvh\"\n        }\n      }, {\n        \"severity\" : \"WARNING\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Quibusdam dolores vero animi. Est dolore perferendis in. Itaque eos tenetur voluptas animi ducimus nemo aut.\",\n          \"token\" : \"lujnx46xu6vrwolr4xbeyjt2l7vo211gtmj4eqcxk23t461b5hm5nhafqjs5h0rewuhxsuy5imx6g\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"In et et nobis ullam. Modi praesentium doloribus magnam quia nihil. Recusandae debitis impedit officiis cum. Minus possimus voluptas sequi voluptatem libero. Consequatur quaerat aliquid quia voluptas.\",\n          \"token\" : \"krw3tj1b8fhmk9ekdwmeer7dugpi8rgiaklbbo14w5ca8chch9z3behv1806jrpjh2\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Sed numquam molestias adipisci. Iure exercitationem quam. Aut consequatur quia nesciunt. Deleniti fuga aut et minima non.\",\n          \"token\" : \"2zytkz2161uhp7039qww9s5k2e230hsv68inz2sf76zxp7784csrxoaqafail1yb5viwpxi9k7ws00mjr59mxz9voth2j87q1c1vy0n9nrtrjfe4ufbqe4l2i85g\"\n        }\n      }, {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Placeat amet doloribus minus quia in. Excepturi ut incidunt molestias eligendi voluptates. Deserunt omnis ullam illo sunt. Quo sit in non. Iste earum voluptatum deserunt reiciendis voluptas.\",\n          \"token\" : \"fn236i4kssglfl35v2cyzknd19jll2mgka49sjsxwnql7eo6t74qpdeorgwi9569inowvwnyqocglso4jcxeybi0pg6z63jd887xrco39n0p5rgj7juxyvqumgtxj7qo073bwwoge4z1\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Perspiciatis accusantium quis impedit quaerat earum. Quia rerum consectetur ipsam doloremque quo. Corporis assumenda at voluptatibus libero quae accusamus. Nobis sed voluptas maiores exercitationem la\",\n          \"token\" : \"roqfw6dyi454aru5snwnzf65pp9s5ivvyx7bqlpidw1ehjw86tr2z58rzc9bbjswlpx7edqv1kknamsz3o5zy5m0ld\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Asperiores voluptatibus illo minus quo consequuntur qui. Sunt possimus et mollitia. Corporis tempore est quod unde non. Rem qui nulla rerum aut beatae.\",\n          \"token\" : \"87595p2n4y3c25hm0onu58rxy1iv1e8m1t99cktmg9r2hf23g2108ofdpjf6yofj0ddiamsxkhfmgd3d8bsd59mzyvfk8v0yq05bekyjnj8ny4yn0vkg2wyaoo2y0ddkqhr6981wxjhn52x51laagc8bjwbw5uo0gq6tnwwhi4nhjda85\"\n        }\n      }, {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Temporibus nemo beatae aut et excepturi. Deserunt quas consequatur eos. Saepe dolorum doloribus rerum consectetur.\",\n          \"token\" : \"9sn9l87fj5u5spdr3r778kambx0hptcurg4taakmwh2p2podpaf7eecqa1ql7m\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Est dolor aut aut sunt reprehenderit exercitationem pariatur. Enim et dolor minus. Facere eum quaerat quos. Nihil dolores voluptatem.\",\n          \"token\" : \"awfdzkn6bu0ao4l9m08juptpwkcx28wxnhd9e2apx7cxdilspd0svgm8bdgqkiswcgghoadhxhq559gdmue8iqc6pi4avxxbykmpgov1lepi\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Rerum ab occaecati qui. Maxime aut temporibus sit sapiente. Dignissimos molestias expedita pariatur et.\",\n          \"token\" : \"bfjabga87u4\"\n        }\n      } ],\n      \"keyUnit\" : \"KEY\",\n      \"keySeparator\" : \"p7u2pk16x8qq5h6uzu4vxfz7vgy24tn0pzsbmyzd67l36hiptnbhbd80c8l0g9hxu2azuos8k1\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Reprehenderit quam alias. Fugiat consequatur rerum provident ipsum provident qui dolore. Dolor harum consequatur aut libero. Et dolor quasi autem exercitationem. Aliquid harum hic voluptates laudantiu\",\n          \"token\" : \"1qkgshe4y6vll1xnse6h24njfsczh271xcuq8bi97kepbcew6t367047cz5ab3vlecbms6p\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : true,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Et velit non non dolorem. Culpa repellat ut quia sit sunt. Deleniti at nesciunt quis et porro vel. Reprehenderit officiis corporis blanditiis saepe qui eos voluptatem. Dolorem quod possimus consectetu\",\n          \"token\" : \"zq92qo0zb3\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Excepturi qui accusamus. Unde consequuntur unde. Earum neque dignissimos officia. Recusandae vel sunt corporis. Sapiente quas molestias maiores dolorem inventore.\",\n          \"token\" : \"j6mc6rx3r9bha7ss6ulfkpq54u3ewhqmbzjqqfogmtmrzokr2mb7vzn4x2abagf8fffatkc63a14c62lscpvnrj3eu7hvjgvf85n7itvwlkrxvf208kuobyjqs9jde97oxqewsfukk\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.9374681712633058E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Unde et perferendis at. Neque delectus a at at impedit modi esse. Libero occaecati consequatur et velit.\",\n          \"token\" : \"6fjpm4awch33al7meh5ce5u4ij\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"f0wnsvvllo1ish4hcjvc5faw20k280dt4q3rejcgxri6n5thx86z30geq0lezk0ee620t0oeuhbjrn70wkevw5l1dp1xvgbg411p11i7dlq5yej\", \"8jqak07wzoe6mv2ntm9m3jqx7r0ltpu7b9l9cu2j2p3h4wqzz0noj868q2w9c3c59znf8j9butrnwl6lqlivce8zzue7t8w8nj0k7cvp6ekq472pbx2j3mrxvydglw2jo8w03gs1zx8qyl3lmjygwowfypr2xyi095ujn4xec6vp48o\", \"kg8qi3ijbo64iec0v7no8zsww2qebqgbpihmkdmc87pxq3x1t537p70fzbiwrkxsh22xifzsulmt3ewj48q6xdbf4imz1oqdgkoeze420pppkxdrhx0m299q45kgag8svzykp4vbm8h7m23077gotvh0qwrhyrprtc55q\" ]\n    },\n    \"startTime\" : \"2022-08-02T13:21:52.325623Z\",\n    \"endTime\" : \"2022-10-09T12:30:52.325657Z\"\n  },\n  \"name\" : \"Lovetta Gutmann\",\n  \"details\" : { },\n  \"startTime\" : \"2022-11-12T13:45:52.32575Z\",\n  \"endTime\" : \"2022-12-13T13:25:52.325778Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ec0e9c2-d2dd-4347-9d8c-3e651c1f4afe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.325974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d1bb9c60-9827-4bef-9761-b4562ee77421",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Wade+Goldner",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 326942889,\n      \"details\" : [ { } ],\n      \"message\" : \"Non ratione architecto inventore quia est quia excepturi. Asperiores ut magnam corporis eius quam. Quia officia soluta dolorem quia incidunt. Omnis sapiente est ut recusandae minus inventore.\"\n    },\n    \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n    \"kmsKeyVersion\" : \"qpubq3t09bndr5eqse8wzkh4yr0dk55ee083lub0lia5i6s1fof13nljlqpkp01oyheib9zo9vn92k8x325q9b0pz7bhljawwsgbdgjh9kxnvz27dvt7lmjq6wbmso75u1chwbcilfxk9wrvgk4gyr0x86v82tfcjrjq9b6si0vsrlp8xg65eaoy91vbys0vojwwj\"\n  },\n  \"database\" : \"bvhxtc6qve28oyz4eh2am4l3u3tdxh0zsxo8toodsjg016lb3rw6yrb9ps6i3cr3b89z7j3vhz1tx\",\n  \"expireTime\" : \"2022-06-29T12:02:52.323385Z\",\n  \"referencingBackups\" : [ \"oc4jm37o1oz2if424bsm2466jncofuqhjeq46n3yrceoadpaymtwp18nsn65f30m5gq8pmfygxolz2arw496\", \"0f72lfpdhcubgfgdbgj4649d74nfvlxwzledcwxcf085cr69emgu5zj7cle0yd4wshajkz7yt7oy7rz1ehzlr47nrjt0d6darvy19a59y\", \"ntwbm1y3llu6hw69w9nejpygi1rxad1a2zyvpfm3fx2fydrzikuma3eia52z6v0m70nkpbqtlny7iliqoi2poqdgz2jlmm4enlzhm5s8b8iog04keo2i2gjpi0jr62gfps6b9xw8kvhns20s9i4aqfttbucoi7pj217mg3hxhlpw1b2q5b39ihi0hw7t7dik2v0u5nv8\", \"xapbvf1o324g6c5adpgj9ikcpcw20b1m4swt3ljqkazuahmi2nyneibp30xfjrddwvmtyg0aww38756620a0t2qm5hgxirjftwxzuqj91ongs7d5xh0imad4wae9okly8tqc1xbgujkhzw4hshbk16os3vargj534ccg9mi540xd\", \"zflf5y2yva7mb8qc2q59wrh9avn86mid7m70ywh2k1j5uu5rf2chqgvvcrn1gfxayv3eiy274fgplbirzy4612gsa1hdpjhin3bghqshtek6oaaoynx\", \"q4p6jpthzwni10tehylvbrr54sjtplag80bu51tchnwhrq9g9s0rms9neyzg686qalbi9v6qdp3wwfreybqfhwa73okgc92pkldobo88d5qr8cusaslxcimsvkefnil3aqyu4b2iq5de4\" ],\n  \"createTime\" : \"2022-08-01T12:51:52.323453Z\",\n  \"referencingDatabases\" : [ \"w60909jkubbx7of7siepd6inexux7rou2fu6146ch724xxi9cal7yi6njvm8ajo61yu62546dzgjldjly6veho2f8mb4s34b74z90az1f3webfwou74eb1uz3rga2va5qguzjd5mhev9vvo5xspvkqmauiyv0otvqkzgis80lxs341y4maacfya8oyc9\", \"3jukjrve7y4k0jy5i842rs9c5kwaggzpzzj7lrkbk7qfmqsi3w9tgpgkyq5qzduxq1c8xeon53h57px6m13kgvot9egbv4quya9z8gdx7f1qn81h3znjxqdhrrqw4\", \"c3l3ws0t1pjd9se0y8ggetx2pv8hbbvc17dxypixr6i8otr5lztnzcyycc71qfemjm09lebi3cdxcwxspkkglpr6fc0l52bc4aop5462j76t61u7s35d6odycftdadl3\", \"wwhl343a5dut41q0q6rv8\", \"jumiv9siq738zfxoariq46koaom55ghk2zouwoo2nw0f9us18fssjdcb53fhsb8msbfop5t9z161354m3kkcek26jwz36ebatm\", \"hq8s651bd9dgfl35u0w6iizryje4qfzw80\", \"fq3gg4yhm98qk3vx4p91pdw9mutzhjkjwfmm2upmk59rmt8h4kjhiddmbrquzm8e0aurfot55nn9g808lvp\" ],\n  \"versionTime\" : \"2022-06-08T14:09:52.323524Z\",\n  \"name\" : \"Marlon Sanford\",\n  \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n  \"state\" : \"CREATING\",\n  \"maxExpireTime\" : \"2022-07-15T10:50:52.323614Z\",\n  \"sizeBytes\" : \"y1hb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1bb9c60-9827-4bef-9761-b4562ee77421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.323852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32328959-f8ce-4fbd-87b4-812f82484d59",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Tegan+Schmidt+Sr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kerry Erdman\",\n    \"error\" : {\n      \"code\" : 525837199,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Iure maxime explicabo in. Assumenda distinctio illo autem consequuntur sint. Alias nostrum commodi sunt magni rem aut qui.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Vincent Bernhard\",\n    \"error\" : {\n      \"code\" : 877708185,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Placeat rerum ipsum saepe culpa. Voluptatem blanditiis vitae quibusdam consequatur hic. Aut quia facere voluptatem. Aliquid impedit maxime quasi delectus expedita qui. Qui expedita ut libero vero.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Freddy Herzog\",\n    \"error\" : {\n      \"code\" : 458047125,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatum aspernatur ut ea. Labore delectus id et praesentium quaerat ipsa beatae. Doloribus omnis sunt et ut non delectus quia. Sequi ut est ut est. Similique necessitatibus tempora sunt amet quis m\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Jordon Sipes\",\n    \"error\" : {\n      \"code\" : 164169297,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ad repellendus quas voluptas nisi quo. Atque hic soluta temporibus. Ipsa hic adipisci. Architecto vel rerum.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tad Mosciski PhD\",\n    \"error\" : {\n      \"code\" : 1368862465,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"A perferendis cumque voluptatem voluptas perferendis soluta. Harum sequi quasi molestias perspiciatis. Nisi non quae voluptatem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Delma Miller\",\n    \"error\" : {\n      \"code\" : 662001349,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Non alias ad debitis. Rerum laudantium deleniti libero non sed natus. Voluptatem consequatur nam nisi incidunt maiores.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"ybpiwh5cvp10ev234nyz0tngkplmfg5n0e5tdo9tpyzzyxuqfakdmq7gaeg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32328959-f8ce-4fbd-87b4-812f82484d59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.323233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "13c09e93-6b83-4397-8bd1-409b81c27da9",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Reinaldo+Runolfsdottir+V",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13c09e93-6b83-4397-8bd1-409b81c27da9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.322454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3651a59c-68ff-4e54-8b7b-f6c781e7254b",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/9q99uagevgdop271hn9nlz8lw63bo4qyroobe0ltbdn6dxznqpsg1qpv90dhn95joolqzpfinpdezg1ssbo1k5lbgqhzmmws8ldtdv6sin3r45qz29xwmwpntp2xhdvxiwsec07bd01ifmmkd63q7rwf45pac1bb30uf9utz4s7frifr1iunwi/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-10-01T11:13:52.321448Z\",\n    \"creatorRole\" : \"tljsezfc3zuk9csjib5aqmdynf2uhy06x1byh2q86byluhxjlr2szf37ijbk3i52naql9arr7834psd90l1xymtsre25zxhj0u9po5fyg6yl5xpi6x2pjsg4dwdb7oqptn52che8c92c264903hgrvo77574ndhzdv5491nq6pyx1xzv72m\",\n    \"createTime\" : \"2022-04-03T12:27:52.321488Z\",\n    \"name\" : \"Chong Bruen\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-02-22T13:39:52.32156Z\",\n    \"creatorRole\" : \"hai1fhlszu5idi0fhasfzpwqx3y8do75ypi5ox4ucnufmwaue1bqa8azawpytekskq14abm6eot4moizhlhij6gjeauudhh5l6dykayc\",\n    \"createTime\" : \"2022-03-07T11:54:52.321595Z\",\n    \"name\" : \"Verline Hartmann\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-07-16T11:54:52.321664Z\",\n    \"creatorRole\" : \"s1j8g6gx7btmw4zlx5612ymmf532nc3mv408jthhztnwib11c01xjo8rpvu4dgw9j4vpd46htxcj5onjzh1j119r016dagxfhkptk5oe5ms7lb775qpzay197j316w1o5509jyaux060adx37kogcdji0n4vd35gmbodrwlnvgg5p0f1p9vft0jookflg3ko5sb\",\n    \"createTime\" : \"2022-06-14T12:26:52.321702Z\",\n    \"name\" : \"Miss Bernard Wyman\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-02-12T14:02:52.321777Z\",\n    \"creatorRole\" : \"8eyhwii5fy5x\",\n    \"createTime\" : \"2022-11-05T13:04:52.321813Z\",\n    \"name\" : \"Sherwood Stehr\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-11-13T11:03:52.321879Z\",\n    \"creatorRole\" : \"b1px5pm98jk9py1p3cbtvklw190bb6qbtgeyftl2871c8ncgwoeatyldvn6o18odgbfykmfzmkwf784b5ebp9ynra072mx2unxeckutj56lqpmg3wt0omwia3foe82xp7m5enbjfy8z\",\n    \"createTime\" : \"2022-09-10T10:51:52.321919Z\",\n    \"name\" : \"Daine Stanton\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-17T12:44:52.321988Z\",\n    \"creatorRole\" : \"ic6jc2mnms8mel98sp2lrxl912iu8anlk6sh07zgskdedu7ngzs4mq356c567btipmshex\",\n    \"createTime\" : \"2022-10-05T12:21:52.322024Z\",\n    \"name\" : \"Bryant Gutkowski\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-05-01T14:04:52.322095Z\",\n    \"creatorRole\" : \"3m36es8neawi8m4ay11o3t8qbldgfzf0wpzdy7k3hy033diu0cclvtjvy89\",\n    \"createTime\" : \"2022-11-23T12:20:52.32213Z\",\n    \"name\" : \"Ms. Filomena Stamm\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-26T11:46:52.322203Z\",\n    \"creatorRole\" : \"10ef36slpgi2gczha12y7vjutaxz47xpv6b47tk3p1vqwcqth8uyfsw6rx27sbw18qonroepy0i\",\n    \"createTime\" : \"2022-09-26T11:31:52.322238Z\",\n    \"name\" : \"Nery Maggio IV\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3651a59c-68ff-4e54-8b7b-f6c781e7254b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.322368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f77e3cb7-be1b-4973-a25d-c946cc7f71f3",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/vhhgeb7okyj52llhqzm8l05m9i2gz4el34xqjcqqrj1di3s7i0odmacfxs69vcu9c0pvp8u1n6d4kohzdb83exew0tec4b1yak5jtfnpe6b38os9rputqxr8vlqxp70r1pa5mlpmrw1qshwi8di0dqyjjlwbbt789yvq0yfcintttqmd8gpsk0liugaba9qlif9/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-06-04T11:13:52.321221Z\",\n  \"creatorRole\" : \"u795y16yz9gep89x81gin2hnv6ux9btg34cqljbk6a8br35drab16b102an234xh6nkpflrddys5h8a5gwi7ycueab2judj1t5ncmlad9pbaozqpq\",\n  \"createTime\" : \"2022-06-12T13:31:52.321256Z\",\n  \"name\" : \"Angelo Gerlach\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f77e3cb7-be1b-4973-a25d-c946cc7f71f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.321403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "83bba5ec-a12c-46d1-80ae-12bc54039a9d",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/yq8n5urawigwp07elude7gcvv4imz6n3l4bkomrhd3tkv6jfm5txd4ndfolromai2vkyzvi3qcem1dypp3la1f2xy1s38ebnbeo05xct3o6i7mp2pexe39z2jo57vx9en62bvccq4797v94ol1mx9tss9pgv8ppbdx2vofsqat3yyqiyfpnbupjzybrujgv/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2022-09-11T13:32:52.320752Z\",\n    \"creatorRole\" : \"efa2e3xfdn92r2y0rphmgmseis3ju4ztt3kps30z6o2zrzwx6x6sx3lukn5ewbq\",\n    \"createTime\" : \"2022-07-18T13:57:52.320804Z\",\n    \"name\" : \"Sherman Wunsch\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-06-13T12:31:52.320887Z\",\n    \"creatorRole\" : \"lshyylnxt5dlqx1l0sp5h75yy7fbz6eh8pcpd7yn0kezglbv9v2bfzo4kwx1rhb5vibvq2e8f0gyeuo9vkkaw2b910gxznhkx4e1oqtdy5zhqa01yf831vqoz3v40ggt2x0t9exmhbec5mz5ic51220w0dzta142ba9lj\",\n    \"createTime\" : \"2022-12-26T11:16:52.320929Z\",\n    \"name\" : \"Sommer Hermann\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-06-22T12:05:52.321004Z\",\n    \"creatorRole\" : \"usilys59wjo0d9hvakgtv3vqpifwnoaq8qt269miesimcsw2kpisruie8si2a3gy7b8jnvbpywqm5s5wkmexyn3e6fvwqq9j6hac90tzg7mq0ycyzm88c22foazkhoqyt9kawujon060lqn3s341xcggardopdpbtf6g0p1n8t0\",\n    \"createTime\" : \"2023-01-29T11:34:52.321041Z\",\n    \"name\" : \"Vaughn Feest\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"qnq8x01dytdynm2n2hiiejdl7ask1sb8syl5y0yqm1g8qnfit5ecahs21hxlbhj16ssqax0tflkl1uic2q5ww2pwpex07k1s2hri67u2jpdbso2sf4exav19nq0aq7o39pil\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83bba5ec-a12c-46d1-80ae-12bc54039a9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.321184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe6d2453-60fc-42df-bfd6-4c20e9689723",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/or41709ym0861p2154x58wx1iz74/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Basil Schaden\",\n  \"error\" : {\n    \"code\" : 766547270,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Et quas repellat numquam fuga. Quas voluptatem fugit sint vel dolores magnam et. Nihil nisi et maiores a nobis sunt consequatur. Qui similique qui perferendis dicta ut quaerat sed.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe6d2453-60fc-42df-bfd6-4c20e9689723",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.32069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b8db060-eb72-47d1-aa54-8da1ed0f8beb",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/13o12keegadszf9r2hm8aiu9ic3s5kwm76o8tupuoqa5pk2364iob3m4u3dwp7073xc2tnwk7sl94pxlelvpchxtxsydivbv85w7rr4b8vp0quull8vngs7mwa2gi2zkattrj29jzbq3rbx3j2dhssc6o2l5syihl26tcoy4c/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"1h0dzfy2d7svkvfgr6d20tkjhcv5j1r208gos24ap0dgvuijuugd5jvchsdh8jsx4y48y1jizt8z19fjtrubylyjj7ixleqzevg9qqj2chk53xe30tvcrqpgov7hjxcjynqvcxg9sufs70v0t7mlnn6afhsxr4eqvxov5sf7eaj6fljyrbogobjuek4yf\",\n  \"statements\" : [ \"6c70q5heimq9tfkc54h2a3eqmvxclf2wk1rtt8j0ai10r424rvk8opfszrzdi2sywu6kjbh2x4o9\", \"0iquwaj47f18784qltanm1z7kj4jij7113bug8hrrsvgaxdskfabtok311o6cu81rbbl4ahwmcwjvnbjzeyrelnvz5o728hzoatfcbd0c152am45jzjzz0d837a0ftiaykifpgar2\", \"cic9homckq935fo3437cn15t8gw1u7c3t00ro\", \"mp0jq8ho56686r0u3bs5zy2sh78n28tc1htszbt5xbtdnrmhp1f0\", \"0q757kxsgba17bpcpvzqfdfwkccccwazg7l3vbyn81xqjpt5e0z2cjhulh9qhlnlfhppive5nq2dy5b2kcvsiseoby7qgskdcceb42vhppikhhpt1wuvc2cfuwyxwea239b5wta0\", \"r44s4lvg0y7thkdboazfeju3i89r2f9l1fpcbyrazga7eq0uqk77r3nuqbj4otpv5d9lasmeip43oya0aqgxxptitk645vvzxdw2socmdi20m44v6hty9a8uxeznthyi3gc4yklxrambkzmq4wul2nvw0lxf\", \"9mlpbf83o2cxp9r37bdchv9wotqoovoer7byi39vcxhze983ty5rzcmfd1p7jptdatx8qljo7yz1eofxqzjj6d6\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b8db060-eb72-47d1-aa54-8da1ed0f8beb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.320404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "550073df-10a9-43da-9c1a-18814fd668e3",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/t2xb2eyynvxaktq22f75vdzym7zeefe7lgmloia8ipbhi5o23luwo9gxhq8rt8bccvs35axwamp1o8a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "550073df-10a9-43da-9c1a-18814fd668e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:52.320217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}