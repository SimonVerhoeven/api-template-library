{
  "mappings" : [ {
    "id" : "417cfa0b-520d-45a8-89b0-2aa4fce58e0c",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/2pbltkgiq0usdh5u1vwxtstleruzxs0nz07bf0yjn4t465xsvkf8hnpmnfeifcdyiciim255trs7a4v:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"5xh3q1ufx6cy2anvxhz23hzm9jig93ow75g4gt7s9i4929pj5prb2f7byav0idzh2ln1mueznb93b6o2oeeag33of9yvll9iblnnwnwnp8sya7hj313ttqg8eixzc5wk94yzfc5wxyb7uinibqq2njxgxaan3o9yewmzv6kk9d8zgvol6tbz4yjsydj3krzd53x\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Dr. Mitchel Heller\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2m9h7mkc6v8s0md1epcggaztwcpp70vghbe4xv1uijow59f3hn4j17466k98jp9xy97wpjb7qh8ftpmj01j1y8vt1kvz5nuw9zv00f48y1hfykeawdq1of49pw0pdset6q3ayhig42b5erj3k8gluy3evkfkuo19eh7wern\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Miss Johanna Prohaska\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"hj4kkq81n77bb2t4nsleeckjo71icd0u4u2\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Milagro Hahn\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"823m2nz2ygy03sp1e5cmw\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Rolando Luettgen DVM\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"yf6uyy6yopod3l02jin1jbak8wncem2lwc3vr7398vzo1hq8npssm5g4191konrts31w6jrfk0hnx000s9r8ho8yg3irz93tmsjs6lymb03v7visxwe9734n5znx96l3brm4e38hqsk336c2rcrljw1x2nopgochv\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Joetta Zboncak\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"wuq4k8ikyrqz8xzgsn4567xlhqmedwck70gs2xh3jzx38x70930dvn1qqo9nbjsunccd45z0a2uxs79f9f4gyzirsghrrromtl98hf5ijg5dmqn89r4vrky4thx8mku6cp3javvmu5nwocuwsk2l9tssbvmlwv7r3nf4mi1cj10x6hi7x442x\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Christy Bogisich\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"v8mmz2xy1yey4kaho4qc9itd8w3jqofcytlzrrll43brh5w6n19rstwf94ga4wy5imidq0z3wxwii5kf1ftqr\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Dr. Adaline Wilderman\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"dr7k9yejjfb0rg3j830ryme6vkeangllasohqdtxbp68y6qv99z7xzn3ndwz93768kngvc6l3jsbrmbqdguf2zcq912pydubavb2ht86hhgymgsgegxg2yqikmlugkquxl8f871k9yzpvsc0f4m\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Vance Deckow\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jqt1yyb1e46mfzyed7an48kur9dgqkuvugac4ecxr892gbzub9t8ntfvnris845y4ift90d8f650k0gee5d0\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Sadie Dibbert\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"tryhy1xxfznb0xdb4fss3l0yk2bcn86dyacohqlvw47p15xbja4gnnk2dv79rm\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-04-01T13:16:02.899798Z\",\n      \"id\" : \"r5xy\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"xmdla2dxxr9b6bf3hrgdsr1nzix5av63c71pnq8l4eb7ch6t2nz7pnr1mt0cg2bji8vy10euch7le3yxsl1g6ufqoavyy97wgkigerhggcesujrv397v82eq7h3w9aaguz4u1us8osk\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Saepe impedit dolor placeat. Ea omnis qui et molestiae. Modi dicta quae fugiat qui maiores rerum.\"\n        },\n        \"displayName\" : \"Siu Paucek\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 1451795949\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Est eligendi exercitationem. Qui occaecati omnis mollitia vel voluptatem doloribus sunt. Ut perspiciatis nulla. Porro ullam voluptas qui id magnam explicabo corporis.\"\n        },\n        \"displayName\" : \"Kerry Reichel\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1841182555\n      } ]\n    },\n    \"rowCountExact\" : \"qr739tp3zte2h6ch9q2ojkgyji74wy3w0nz4vpnn4vmgs6n9yffbpspdc38br8uqw7i9h3oq29m4nwj5n5854f6ajanxx63u70ybnp0prawhszqdtfd1ph5rgb3b109f9cluskvzpvjo811mg5j7satujgwsjqpk3izyp8g7nvo12svbx0ttg6d6\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "417cfa0b-520d-45a8-89b0-2aa4fce58e0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.900327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b44e3c5d-e31a-4a81-9640-69f5bf34d57f",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/zdjbp9jylae5q7nai77gcxlli6r8xrayvvlcbr89tmkvlpa5u0l205x:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b44e3c5d-e31a-4a81-9640-69f5bf34d57f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.898993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "ff868981-ec06-49f4-acab-1d20c682f57c",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/ok59ocwpwavepzronz704n84ysnckijlpcp260jtm6agximw64anb0yiijqvw63dux50t4jp9xd82v0ey40e7csucbo6vor:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Arnulfo Miller\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2jmh8t99b5mzpgjvi6st6ue45tlhiaqu69m9aye7j5bbrpk4124pjk9yv1i4wn96r0yy661sa0flx27gvxmy8ohh\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Stan Zieme I\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"f4z4rt6goeixe2165v27xtrpbi20e0ezo7vavv04u9ylie678hictuw2990jjx9muh0r2c2c25k8b0cgl05ydhf13eecnsnz87v34evrjhvr36q5plzsrno9xiw2l2bxr86mq0wlvq5qzdsj8jk8561ijt\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Daine Bauch\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"tec5ym65i6qtg19ito1e3f96vemup9jpdbdex8w3bttwxd6maubu3cjwzamkdmao112uqw2iv3rnomymk74z1le40je68k\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Charissa Spencer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"twip5fj4wmi9xetcm3v6sz6fj0fcyj15fotrxaej2zgqgt3h0kpynwka48ubi1vyvdnp7ze30vxg23uwva4pkioks9ga38ak2v892y4\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Connie Hirthe\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"n3n62g3cqvzx8obtzs3mxtwgs95ug4nxmw72vaqfuovb99eibehacj27ehzyfz2tc7fv9d9v0zhewgu3ebw7yvkno11uaahrconnc8djn1sjgkfbvolb7hn3t61c2o66naf7vnphnzbgb22\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Tona King\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"433onhzc40l5tgc3nwj5yb2zap03he5t0tjsspjaq\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-11-30T13:01:02.898062Z\",\n      \"id\" : \"60wc\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"xhupijk82iejuk2jx3km8kkptr7oxs43xl36cu01nvtx243mf3gth0zvcxf5j6t8nrdcetups\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Natus minima debitis culpa perspiciatis quaerat iure saepe. Recusandae in laboriosam velit recusandae. Recusandae natus incidunt. Sed optio saepe. Quidem distinctio reprehenderit error.\"\n        },\n        \"displayName\" : \"Dudley Mraz\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1582095479\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Officia quod reprehenderit maiores necessitatibus consequatur. Libero numquam velit eveniet et ex autem iste. Fugiat quidem quia recusandae voluptatibus.\"\n        },\n        \"displayName\" : \"Kraig Marks\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 1683292296\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Corporis eos quam iusto doloremque commodi numquam et. Temporibus vel eos. Est quibusdam earum suscipit ut fuga quos. Aut repudiandae inventore aspernatur omnis.\"\n        },\n        \"displayName\" : \"Mr. Faustino Schamberger\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 386122989\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Et dignissimos rem. Sequi eos omnis ullam dolore dolorum et. Sunt nostrum placeat harum. Earum explicabo sit ut at voluptatibus.\"\n        },\n        \"displayName\" : \"Jacquline Weber\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1185497524\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sint non ea voluptas ut maiores earum cupiditate. Distinctio cum quam repudiandae. Dicta quam at qui sit omnis voluptatem molestiae. Architecto placeat sed aut voluptatum totam inventore voluptatem. Q\"\n        },\n        \"displayName\" : \"Antoine Goodwin DVM\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1218197339\n      } ]\n    },\n    \"rowCountExact\" : \"rgphlwi0j1qb91k818bqduprlpf8ep1eedey28kapmujumw7lyfwdlpnig3fu73edj\"\n  },\n  \"rows\" : [ [ { }, { } ], [ { } ], [ { } ], [ { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff868981-ec06-49f4-acab-1d20c682f57c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.898935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "748f0bd1-a61a-4e76-a671-aa8d66915da6",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/5f720waqrpa9ansfqipmcbwnl5p9822lojj32ukxn0cb27ffs9g2lkzro660d9vk23fkkvmi7x2wg46q4wok1yguu0xpw19zwhx4hzn57ovi22yb9txeid7h21x4ng3venx7vrs6wpczi4xnz5fameu81qwh4q6grqt052r0xn59yaypcgxzrlj3ufwhhq4ij6723h:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"xctzcz9mniuv5zkvefr01kucvh1ou1fhv2tvsa8upq6lbn8wsezunr9pwdzd7i2jmi6sofvg\"\n  }, {\n    \"partitionToken\" : \"j7jk0nrk1vmbn80lz84fpdzk2fx5jn4yq1n9wbpagifqgywqa88keozgbtssb76ap44vewl1wgibwftdiqmvvp5r\"\n  }, {\n    \"partitionToken\" : \"745oyd7cc9qqssx2byaz35gtfzrjh8wt90txrbu5inbohw2lbn3mbwcz1xvzgw4d8m9znj0v16svammnmbjojignq3bfshq8n19d69g7tsr7i6jim1m7p46221e15auw2pin\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-07-04T13:21:02.897388Z\",\n    \"id\" : \"krp1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "748f0bd1-a61a-4e76-a671-aa8d66915da6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.897515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d7da66b3-693c-431e-9da1-552398db9123",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/artkfep5vm4702kgc2ope957ml6eg7nk5gnpdaxqxg95b31d8ymz5hu9ycr7m6dop3yapn3e0q4qb1tx7igjqwiqhhx9d:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"5isjl8wf6qt4meig1az0rzdi2gln23dcvrv8gio3bn035ttk0utjyihkmcgkfv6qdzbuxvswbzxczz4ul3elmbbd9i\"\n  }, {\n    \"partitionToken\" : \"8jqied9n5fet\"\n  }, {\n    \"partitionToken\" : \"iufsqfiwaoulosx15a2uptqxfxfekg4zufvqowo5vxuhl70bzpu0vzvfvrbtg3i43h0d290l4pcnibf4xrxgx4o59qkq66yu3def5aain0glqcs1btbpfq4vo1gy1uymkvl183uuuwq89u4s9nhwru9m70l9\"\n  }, {\n    \"partitionToken\" : \"m3doquwvqx4n4q0xv4vbh5om9hulq2eo6v7levtvcaet1zmmkilqlzrmr53yvo9wtwn8wynfiezauzmz7g7jihgjbdexdbf7g053trhetckburg5jmqpb25\"\n  }, {\n    \"partitionToken\" : \"3unixefn4xxgypee9qxu9ssu62tgz55qjdpisqacpj2oytxd\"\n  }, {\n    \"partitionToken\" : \"5cwtvo5zinrxetv87u9ohw40zem2y9m3cgjq4oreqfe52jq8l9760vwi1kol2g4c9x6eesbyvgapxofjhk8xiwviflyq2x99ypt1aez8ievsvdi01gzwk9965xzdywzjt7x2v40fcepv32bbfz88q8alz9sd384pktpy50h37bkqygqh1p3x3va31onzoftj\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-12-28T12:03:02.897154Z\",\n    \"id\" : \"qp15\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7da66b3-693c-431e-9da1-552398db9123",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.897296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "bd1b6c1e-089d-418a-a734-149fc97d1986",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/nydfq9gv3n8syolfwzd83jwti6dg9mx2kr5hu5gvdg6xcveyaxvsqvhls2z4citr9ams9v7ogyasqhmwyiwqy7osx766xz6m65z7bap:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"mq1zt0q9vxmdtq59vwirzvpbso6\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Geoffrey Russel\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"6s4gbsa67jz5mk305lt4p16ek6w5bz6kbj1tipi7y1n66vw9pqobiv2ualeyercfi5f7jfrvoy1k0pp2ctuxsaqo1u8bl7nsv2xyauqvlscx2t3snxi2izgg1pa4eku4l9h3wrd7051sebonl11f0gmp4ej2vhh7ssxwz5rrqvgxd0rqfv3iep7zt95r6yxkm12\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Chere Waters\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8bp053bsuvbexil1zwz9sqfmfve5d2qayrs8zsokxsu4ffpi9dfh31dep6\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ms. Sadie Hahn\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ufe46rg35vudqmliga8yxcy42lwiczn4vg25i9tb6am78atxalnuqxbcktyohnd8h6tjdk38xpqf2nm3onrrsuz0h95z9j3pm0vzjn6s9a2yk6ew7u8nfdy190ybaedfhuv0\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Lonnie Sipes\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lkh383r\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Bud Carroll\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t0zb8uklasgjl2uksm8bnw3105w13n51fjqyqfnwzssdn94s93zu3crrzb272tfhxqqqx7df9seonk7p0pe7355ogqhheeoh9kc6ar0v3hmtnzbsggcfapix3xkqq9owipk39f85lii46wwmhsumam00d59bg0r0\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Everett Muller Jr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gzoocgmd8peruz4ll2ytnfdmtgrphf3rf8a3pb72oyz5n3fabqwgq3txp3ctpae99spyugrd13h4x9bmqw042i3cj4o8a540qr002z0dhgpvc2t6l23d3hw7ib302tv0pq65d724pe1nemxsqm7sh7vy0ku89\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Lenny Koelpin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"cwja3gxf8dfs4sr7ep0ov8t9g70wfs5f2pjbsjtlqxr\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-10-05T12:09:02.896506Z\",\n      \"id\" : \"20i1\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"7rhqdydvhoi7qewdsesj8rpm90uut1b63f3dj2js16psijwg3nkowp2hrvj1a1ezzprca8ll9bchxz2zd75hcfntrr8hxyg68tldw0cxu7iawrtv53d0dq9fuvvsl1pwwe5itzwlxprvypyci3u0mt3i4xvs2dvs8yw5k3ltwvn\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Quo aut maxime nemo nesciunt et ut. Cumque sed repellendus consectetur. Maiores aut nobis. Repellat natus et.\"\n        },\n        \"displayName\" : \"Hiram Ruecker\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 313461362\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ut nemo molestiae sit corporis reprehenderit perspiciatis. Iste velit sed culpa dolore est maiores distinctio. Natus laboriosam magnam excepturi.\"\n        },\n        \"displayName\" : \"Dr. Cameron McKenzie\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 1225505190\n      } ]\n    },\n    \"rowCountExact\" : \"9aildhb1l3hjrmhlrne7i39chxygp7ur4w33f0d212d7j47flxt1kn6368lt467za84mmp38jssld5wf4nt6h3ft0t2xbahbbpwuasjrug0hay0p\"\n  },\n  \"values\" : [ { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd1b6c1e-089d-418a-a734-149fc97d1986",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.897005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "42c9294f-3595-4782-b0b8-6b1568120d69",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/cwjy7i5aecxpe4w3eeylyvbul4rv9hl2zuin9o0oxlatlyrgbdrvk70egw0kuyxmntqb04s4h9h3o744wdf00obijaqgphj3kenja371w5fw:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Brett Medhurst I\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"r7brqq9nms59bqm9pu619zwtl2mvvgf1rcsvmpcj0xzn967kcqye8i1pp7ezrweca44ejtpvy\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Caryn Prosacco\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"kdox18a\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Nguyet Wolf PhD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2vmtc5e3st8yr0kjblc7ytx3d4zo2rgmg2d38mlaenuh2pf4pr0vs7mknjyb9b177m2bnsshet4m9xjr7gc08eos3r7osmwl9hf5rvuy9ttvz6y0tpihz5ver9ba5y22w\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Margrett Crooks PhD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"7lvektwd7n12672i6fk2i1x5ftfrzjwxbccios3wdjfdbsjhvkq5grt5umbb3u3wp9l95v63m62fr7guf1p0norsx55sktnvog4q93c7phttavicjntcp0eq651b27j2upi9k3ickvj208swesjo86v3rtw329tt5wbr8kjexk6aqo72ae1g4zq3t\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Duncan Sauer V\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"afk444wbsujvylz7y7u2ngb7rvpbqnb7q486dgbr2uwi7qmkoxgd61f8b652mscpn5qrk25wzagwr7czb238i9fx60qd0y5ikiauq2t54zzewvubuc5rwqvs2p8mc1wf3fvbr1ezsddm97kmu9mrio4lf1m7q6pj0gn6\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Julee Leannon\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ur08kjkeuvqj515tmmh0yjhl1ut0y\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Tyrell Yundt\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"6tyvo4pu6uobaoh0ctznnjsv0xmh96kxvyan6symqk19rag5rb4\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Caleb Steuber\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nb8sidvzzd3uh7q6t90qjjh23wqjzmuhw4qnolpgsxk5m0muqjsmxok6zizgsh5ha0dl5k603uqcnmqepnnup240q38funzjsw5ytzffn0bf8xybzg1om7yyp61fz8jc3ba9c37em5ly9hro4z\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-11-19T15:41:02.895417Z\",\n      \"id\" : \"4s9y\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"fwtyx5rqm4lm3li8pc9v3hu6dnvnflesjbl2qm1jeupm\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Autem est hic fugiat voluptatibus. Sit molestiae culpa illo et non. Est id iste. Id illum est non commodi. Sequi est nihil perspiciatis et sunt amet.\"\n        },\n        \"displayName\" : \"Dr. Marlyn Nader\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1595603220\n      } ]\n    },\n    \"rowCountExact\" : \"9ttvzbofltunwu9zr9lg5eu7bpbiz771t2lm48jr0o3v3rbgv6rk9t1tcdlvcf3pxprr36jm06sz7cu3oni0d4vc869iqlbb1prrhnwaeefmxskdgswh58ss375zyt3f1cpixbu0ni26jgy1x1vv64zu1y7j3pia8wt\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42c9294f-3595-4782-b0b8-6b1568120d69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.895864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8d85b8fe-0d96-4798-ac8b-325b78d297f1",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/y75juniy7vou4sogctbkd7s4wleqz8m6nh3df9ou5ificjkwkupb3a5cskm4yvwaif97i98n496rrco8g6jw4jiemeullu38hlasvof7equ10u7623nipmytiyrs1xrurf2sh4ry5s:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-01-23T14:21:02.892681Z\",\n        \"id\" : \"a2n0\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"nv6k\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"q02k7vwwcyjcka1rda98p1cq18otw4lz8oph2ijdig9tjfums4b7df6ohtt34md66dvjr8kuv3lt54q6rp9t038lqs\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-11-29T12:56:02.892962Z\",\n        \"id\" : \"b3a5\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"eqznryn54cfqvd6xrz38xooo5r3nrh28mn2e2lbilghnwxu8fe9lxehcxxczyu62308m3gtxltt323man65qjjt7ixf39qb135mgzo1i42msiza7vxr1vn36s1m6ri60oidu08dgi5373rhmfpbf585k3voios6gf2wx9knvzcy0td8fna6xv40ir81ap\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { } ]\n      },\n      \"rowCountExact\" : \"2gpmgs0t5f4xqphaxruhl3ot1bj4lcml6ug4gdeprbddvp4x6g3pf1muc8hpdm2x4azb\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-05-24T13:26:02.893184Z\",\n        \"id\" : \"1qr1\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"jqjldwud4q6qyxukag4w02o2m\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"ahfhk7x87q0t1kufranih4kda7mifppmlo33hqp43yhnuynufhmxxvylmhtdplz501fz84zvz5fwup7ulp4vdwlwgvf1wbadixv5dt48os20pff09drtcex8mvs2837jojvw5xr0eu2erpyumacn1ph89dofdslxxn6yuc5p1gns4406pgbx5h18co79boplv3e\"\n    },\n    \"rows\" : [ [ { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-18T13:40:02.893386Z\",\n        \"id\" : \"96oc\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"n0zsl250exao3u0n9urvvbe2f0px0aeinagldppotv743bkww548p1hb7o9dtaa437ar28emkhzxm8p3psdje9tu72etvx5yibultif8wvykwdnxbe9ts6zl06fceifscywciwcccuj9w8bgis5yeiw6kg5jxr\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"f4vnhwu6\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-04-08T12:36:02.893627Z\",\n        \"id\" : \"s4l5\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"hefap7zxkr60cny0gw3405iuzhp5jonca0tgb4anfll1ee9d1mz1vygvtg1unywh1gnki9x6562ga5xq755vkrz7odgmjrnt2iz\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"rik46g7irpvf8up1f4p3cliwqwgdrb7wyg5m8avp36ekoml77rjihrrjuib0tkbb1cu8dpfpcaqegx2oupo4rcq\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-03-12T12:50:02.893852Z\",\n        \"id\" : \"w15p\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"zhx48m0h63gblz4ax9wxjcq9wjzycwa0bq2cqy2uq23z6597asq43vsn2dm5agbv3jvb5z6m9ijii5edpdihvvbfntkjhc5dudv2u\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"slxs7r6a71seundlu471covsgo4ye5m1tvr2otck5ovz64azjy8grjs8n5u7h1qrbycnumtiq3likgyl3ti1ydmg3wdcga86q3bkm0ud5bip6vzbv60b0llkume7ghcym951wdpbrvgl557b5h7g3khlii4x90\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-02-27T13:43:02.894076Z\",\n        \"id\" : \"cc7v\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"96awt7sgquusad1c7el2jquwxfslw7ms24iun3x9gm9tvdxjl7ki7gud2acsmmznictleyojlx7j71g8nv7svnptxim7sugv466ozuliy3i4w70sajwit6sx5nu6i0uf1lj5og2zvzgikp45u\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"wxk7w9q6frck5kpc4k7umsabq0fj0s3fz09vad3pacm68ectya911ll8f4cx2p8n25v0by7dmcuhamwp724v5fezb846e5nj9yhtykx601kl8sbmmmeglcwq2o0r0bgj4l0eg9rjewrf2hz12wmbmkajh3z7n57ubg3b0azx\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { } ], [ { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-01-07T14:08:02.894289Z\",\n        \"id\" : \"2am3\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"z5ql775dkqbi0ol95wp4wiijq9un3rsxaubwq7v3dhni4pjwf9gb9cqyfbf7a6r5gr8nis7fo08097ga\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { } ]\n      },\n      \"rowCountExact\" : \"cs9o2m75wvmhooejn22xp8hoc51fby2qmu3gxbmqvzyrdtb0g5h186x735o1bceefb4dxbj7lp6e9harugx\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 875568839,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Repellat incidunt sit sunt optio. Et nisi esse harum omnis tempore accusamus. Sit hic earum quaerat. Aut est sed natus unde sit dolor occaecati.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d85b8fe-0d96-4798-ac8b-325b78d297f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.894683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d219656e-19b3-4c16-a7e6-6a91fcbe75fb",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/dbtjnfst94lq4glo1l9izm54ke8qd6m91zdkt2z69qt4w4ws2kutczs5qxnlg7qri3dftnkc3739s6eojx6fgg7c4qxkw0uz8hmm71txrwiki6m5kut1d0kxss3b5hyi86nyjg4uits1rlcr0capmcq7nhdjoanw5eiox9l:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"7u0ccep8z9ysd7qcxoe512aj3j9ecc0c4xm9swfd0273f9ncqx3wvayso2jg7pts7l36gtnslhglsn1mwht9nnmyqi0ayvbxdq796fbl1ux03jbuz1wxfc9umi64evkyddi4xnxuhea5leism88detjyrryhen37shc8x1tl9h20w\"\n  },\n  \"commitTimestamp\" : \"2023-03-09T14:33:02.89252Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d219656e-19b3-4c16-a7e6-6a91fcbe75fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.892584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "53340392-0b22-4099-831f-527c3c2ec033",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/e5zk1jkxts14kxoq5v8ec0:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2022-07-29T14:39:02.892294Z\",\n  \"id\" : \"txux\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53340392-0b22-4099-831f-527c3c2ec033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.892452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "28a7765f-7892-43f0-b9ec-895fdb1ef160",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/xqy2zggjsx5p9kak29n94j3utaf1rhdp6ezc50d7pwcsul1qzuyghx4vsxfuepakgkyl2qz27tuf36una22f3885lp8hhb0d1g845jd:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"8eaw4rmyh4e6z2hn5sm9h3ur677ui99v1dne4hkaqxo7qfvoxf8qr3muxco9fon69xfuiwjtds5u4ianccey7m109cbx1nhjv91\", \"cxnbut4jnwqcjt3rujlq1uptttx\", \"2f0iu61mpidv664ej\", \"y02kjz3xb8p4yf82zjtxnu9lzzhd1zqlamjm7od5uz1djr2ncouwr1vyzex9mlqtlv\", \"1wtz5e2qmjn6xopkuj4nii7i1rzbgw3dthfbnsr85k4ozza10yk8zkqyoq\", \"3lphutnc2940k5o9li58mdkxxtujki5vf3sjm\", \"ljmypxbitf62y7hsmolff015ipsuwco96f3omria2e5lgkxn03m715qhklwy43i1vih4qca3qlrcjwobf4z8s\", \"a9spsgi6x4ke\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28a7765f-7892-43f0-b9ec-895fdb1ef160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.892251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "319a8a71-3431-4a2d-8276-d61edbc4c210",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/t08e4n0uknfp1i6j3fi300tjqb0vtjoxa6gyzx90gopfr0n9srjezoitis430de68lkhkjffla5psbi2guz6v8mvmpkksdj3fpdjjn27lea3kti0ibp7dm4jm54jsqksr1p4ry1tbvxkqzkpkfac8keb38qg1mtmo1erw1e37ag9m95:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"3nvfvp7gg55mew2\",\n      \"description\" : \"Voluptatum sunt reprehenderit inventore non nemo. In maiores beatae voluptatibus ducimus. Cumque nihil illum nihil. Adipisci corrupti quod ipsum ea qui.\",\n      \"location\" : \"vy5xe9my27idvjidt2bnayqgvimjjg1fs2x464iu9iimuuopbpao261aqh32dph1wxvsb2lrw2wo0q3379s\",\n      \"title\" : \"Minus aut aut consectetur sint.\"\n    },\n    \"role\" : \"ffvwz\",\n    \"members\" : [ \"kkgv0gbmc6aciqjvwy03815fjgkwasb\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"vnizyws1wvbzu6006soyjrjc8nbbc64bg4crsp0gyipshvtzaabz0cy29d6d21xzko8refu6v1vfcd2ajticfwadcl7a443pju3s4q4zcjbfwtjdhkxicbetpu52zz3\",\n      \"description\" : \"Iure repudiandae quia rem autem doloribus harum vitae. In vero qui qui. Repudiandae voluptatum mollitia et. Rerum illo quia voluptas. Quis nostrum est.\",\n      \"location\" : \"larw4vpxw4dg91kelaz8mev52fv96l9z9s1ih69joim2o006dbp1hxwo6eaxgq67qp9nzm192fzxfxt4t09y0b4uw22rko7fynx60ag047sqdcm35l543bcgert21txvr0rr7okwsftrm0f4sm7e3y3c99p6gdvjamdb0pqxz5isrqtgv36k3w66plwc3ib\",\n      \"title\" : \"Recusandae hic aut perferendis et animi est harum.\"\n    },\n    \"role\" : \"mcs0x3gio5w4s37p5a6icftuj4wgfbbchaim92rrzt88fn03seyh99rre72fuuxjuiioxsb4qv8e0ukc063z6rzz6y9yyx0uqbxr3w9boxcivcna9ptkqe8a8izg26b10qzjqipn\",\n    \"members\" : [ \"fx36lydbgmotcazo91zz217ryzwotxx6b8sgc9\", \"qs3qr8noc01kee7cxba5vwtg02d25ju9axgg62pehm6cix9x8picoc26c66p2v1ohg0g4hy5uirftnds7iq3ozdaykotgrest6a7shcxheomfu01e8gj9sya4rtjg2pbj10lf9ktf9esdekogyfj69opvrvmkdfzizdgsix7s8zlqltdmgb343\", \"6blmgb7zlig1dmwczw4uwgz0kcxnoi06uxvoy1k\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hl34jhbmunpg1esmzrah462k4z5h0u13q8oj7eugc5a9b1nxs0zy0e9vl2488kk1kbtzkvuapjlc6hi3dy16ztouzg30fyko41iwi8yatawlu64r1qid8alg1h4ryrlum4wizq00rm1c0o6iyo1vjpay5pxnwo8a66tt9gpbhr6\",\n      \"description\" : \"Eos est quia aspernatur temporibus. Nisi officiis dolorem quaerat laborum voluptates odit. Ut vel quos debitis consequatur. Magni quibusdam ut.\",\n      \"location\" : \"bzj49mkzmys7suyomq5077044rzugh1hqvol37d\",\n      \"title\" : \"Et quis qui voluptatem et perferendis.\"\n    },\n    \"role\" : \"td2tgkha0r0245d5zlt5cjbnaasmqosl7dody22lcvlxa5av0y8oe6hgrzxpvpw5g7whlzh9kli260\",\n    \"members\" : [ \"v573vlic8n8ircf1r1jnlphburbz5b82908cfv1zvb1go8h30mb01jpy5uhqdnct4ofbl6u0v8p5214cuy76qrf9vvta43w58k5sil8fkft5forwbbgnkr5k9kua4at23cuib1injntf41vrf36fjwyk2opvve24fxteimmyj88jdk51spo\", \"0v9jnhrjkxremww7ywc8foo42s47uepdp3h3mu937iujnax9j55q1vb1y597npx6x2c7lkvp1bez0qk2mjr1lmtyl3hie9\", \"0vwf0bxryjn1q3dn9p77ncq2cc99c03t4qibjwe3tkja8l3ws58opgev5uuvfa8sg7ni0fri1g6vda45ycxdzvlpthx4r4x582ej0lc8yz8kdjmfxoz4xnjtodsypwt5wezwq4ne8xy5hjp2en8c48fihalvgt1vbd28aa6krlregundhuusvg2tafz183l0\", \"4qh4car6e0kjifasx19oshbzpysw1dslt2liqcjs1bjxtsnukkcl9dfsveaarm257pe\", \"4rlwaoqmt5sod4uiv6f74l9vfpv7jfudvuut1bm1uc9y7hdlepu21s9v5y3hof93zd13awujtge5kao8ppm\", \"g2h50faxk3ink9zgdooylozaujl8vw66lms0veuf23arla6g4ff6sf8xp46413y\", \"jw05j6tqldp89d9m3650aiiaymv5cfvs8dvo9sbtpzslr6wqevypg1x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"wrzvu97vh8lyrj4hyfrs1l0tbhij7jo25gfi7d484wn80l8wepchq5f5el5ervcn2j9x9a3k4914kowns74k0r4r3eaodi9el5mxubu\",\n      \"description\" : \"Esse debitis cum et dolore. Est accusamus sit. Et aut aut praesentium ullam. Excepturi natus laborum. A officia voluptatum cupiditate iure.\",\n      \"location\" : \"yww2q43kea6cjs2fprb2t5xouqtmfry4mu2ermzx0kswdodnnaeza8p4lwqqbgkf862zlb0\",\n      \"title\" : \"Voluptatum aut nihil quas quia doloribus.\"\n    },\n    \"role\" : \"ths9jmnnihq5fm18dmmxgp80dlxhpls46grtsiibpmauaalsjkh5u6c77o4lj790rtol09t6tppv1ma1cxd1433wx08z2tovggn7yhd5e3rca1h6abdfzcxyehpsruo8095sih1bwnwg4bak2g1pq25t6f76ujfzxj\",\n    \"members\" : [ \"opwei0roz0hb23kxz0d2asyk3wx0sdg60gh1teyxahvmje\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hilrjwnaaho7250z5riesq7pzif4ars8n09tjztwphamnjdkf22r5072oojkm4q0anqjlthb9qgafv9rflsnmuhls2ea0pi7xqzx7k9ba2dkzalc6zhpgnbvvcgs7bcm8fwvq0vwtcejr0a2z8w5zwrjy\",\n      \"description\" : \"Sapiente excepturi temporibus expedita. Sed incidunt quis. Sequi cum vel sapiente est suscipit voluptates.\",\n      \"location\" : \"xbw80fzaj44j3x8pkmwellkz41cirx22cza53yxidd10hfi80wd35rysgb0xn7y4vx2jdq1xodaj8mcnq46\",\n      \"title\" : \"Repellendus quis ut aut repudiandae delectus.\"\n    },\n    \"role\" : \"so5rm8h280rm4s07hkoz81fryi91tazybfqkcsj1egaw0j1qfvt8wcfwd0cmonjyo2knjb22danhenkf78cmrgi9he2w7liudyetkei4\",\n    \"members\" : [ \"xwhe0xp5lxpuzaliru06kbh5h6ny8atz1zxojsjgsxyj794573ryboxnsnwoc5rcxkk3nvm2cr86pxxnhdnkhzw17879pswxeb3t9ypnidqaln79uqu4u0cgh3allpwdg8dg7u1mdh6zzeiv1z633380qerguvj26n87emt7a4mprvrx\", \"4p991igastj9wg8xyb3i5av6godon1guucgvc0qxzip5ucsmwlbgr8n1u77y391oq267enerlls9der26v9jft8apnrhe6bgvsd158l8aqzdw7l2njcq5390gzf67gextwbyrq5bdeb4hz26vvqm9s273wcdczi9410qxjgy\", \"sqmu21w5n6t86e4rv137jll34j6ahq28dgprorihmx85op5oqfnfb25n84rsw2222ny6l4qiwmuxxv9yl\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"eg2umym864osuxr8mlxcgmhzec1jbq22dfdusye70qs85fvpwq2o5fp0bxsq9b3rnvqz50czllf0fcy3257xnoaoxe0ntluv3e08e15odotned5rl2o6uije921hnxqbepdup8rl\",\n      \"description\" : \"Sapiente dolore fugiat tempore. Tempora neque quia et officia. Totam tenetur quaerat consectetur reprehenderit natus. Consequatur quidem ratione voluptas.\",\n      \"location\" : \"ohm35vpxd0knup07ntpfnmihgdp7pf6i1ir069qcdc325j6049x57hqxlyr22xoevru9ehnaww15qxo1g091vb0lrezv9nf7yg4l7jbe5cs2f22swgtzji3it9wo87pqu0h6mn10lipw\",\n      \"title\" : \"Numquam ea aut.\"\n    },\n    \"role\" : \"jsolnl73v5gt3fzbtaz4fxyhig8jesrd18ioog8ky8s44n2ryh1fvu5jns9wq8lwey94rc60j2zp1v4q3vfkbw3xe4e4wfsg95qjdfh9g93i5llgsc0evl5zy8zrko\",\n    \"members\" : [ \"7i6h0nhvymp9\", \"tn8swuwc9vneaaxdnfvvthbjmvmkphbaydefreuk03cbl0udahhxv4k3lap0df1fx8g15l3q5iz4orn5oh609t2148ti8par3ykyixgoz7xor\", \"s50bs17ffpc6pu81s7zcy7gr3kpht52r4p\", \"0kyysmphxhpylu1d364dnwl99vuf417ln0hu6k6loiy46fsw0w1hk73z3sz8ke7hwh6704ltinjm\", \"aeawwqdpznd5b61t9h2779qg3uzq3wzh7inyi28083afld1ekkyszwqjab32jkn\", \"wn3cospb83fj96ugmsqmo7fp258o51hmomspk30rb13zjaneaig98noewkr7o7iyd5cng65kgprzwjqiov7k0bdg9h5j5dcj2o3fuuufuuagdqb6die15twyebnb42xez08s07hhyoikfyeww3u3w9vwxfg84z3\", \"pp3n6vpcap837giurdz8sj2sr7p4dgk83v2pkolmzb5uzhjaua425sjwajpa9d0u15f7jrt6oesjor72spg6dz86r2gr84h6reke1p8ynm5lqfyzj\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7pv66t94g8dkbjtq3fk76c6s9wgicm83u4ezawv8qd94l7gg8wfjo3o10trujd93eqyzsa8va77oynrnbkxvszzzz8ezg4p13vbped5ms1ks4036apusd5\",\n      \"description\" : \"Placeat incidunt et voluptatem soluta doloremque quis maxime. Velit corporis similique. Fugit id iusto temporibus ducimus provident voluptas et. Delectus nulla est ut. Omnis est voluptatibus dolore al\",\n      \"location\" : \"1yxzun1o1orfi9u6085n05qiceiqt1ks23998jag2gnk2vt4zvytevkswafxm3skcj84odbp20qfd4v5du8052si5s9wojrg73tam9a1dx4uff2yjgeqrc41u94lnoz2ofl89754532yb6p2znw2p360rxup62qmaajamo798l47\",\n      \"title\" : \"Blanditiis molestiae quibusdam deleniti doloribus voluptatem.\"\n    },\n    \"role\" : \"5847lbclw8p7wrjxpcmq2i7xkl645dy7vsxiceiiu9td3jmeb8vv1dw75zx0wqn9jlbiyrwhjp05bybackcz7o8kmulg2so8757njuvdp8h\",\n    \"members\" : [ \"ehky82avcw1lcesjdvfckz56raykeyhrng29h4hzcojpigm8tneri1frrlhipqubhv19bviu6nzuv73xdx2trakt89bkxrj2s8tysg40i6kef6265n63cj4pxkxmef5c54i5birzh18wm2v1xegjhobjv9a13dbkw0vcge0gzp5\", \"3c87pljhbgv1yu3e88z7omq947b08nt2opy93uar0mqo7yjb\", \"lnpqijdl0q8fceyfmmm1tciq02njkdsyzp9w7pywviblm03g4h15jvwth1il1iop0dkowtajvp3tqddnx1x9wxzipir4db50xdmhxnfr89v0r40rsq3\", \"u0y71mtznnbammpknkd1a6k9z2rs5tih4ae7auxruogqhjc5oeyn8gpit5i516zygxuj1p8jhaqd400exi9f6is99csxjcn83dh1s4knqeoxjl9bzqt7mxp2a6sijl3tctz0xtbh4zn7xvztw\", \"dpa8txbwkvnen8d1vqkhcabi6sf9ji7vnkoh9sziv2gtths73h2pxsffhvpjt2ixiordga8n4bts0x4xefhdh2rd9r27abm57ewn8tzj3zbqw46sp1num4rksn29dggn9oisw7dm\", \"b6yhjavanahohrfeqdjc0gwwdf430g8yvwjzftgzzi8yaevephslswf68o0vsmut67pta7fzvg5tety5j8ssbeawglndlku5irhawirdhlw82uzjufgg0qtz2372ct2msxt2wsxdv4uw5vzht1i2dj4l8ho2d0nhho7bnal\", \"yvu3t3wbj23p2sc0s7s6ojx5zqvmtey83tu30cmxpdmrie4xzvj3nfzblwostd9adgt151ids62b6fb9w1\", \"rdc5c2we1ydofvknke6fgr89v84exusrxadsnyms2e2iqspwskq9ugixmfphs8a8kd9m2nhe0gxjmzohhtgbm5k74fap180sdyjhwgmdimhbybphsat1gjckvbie58p3assa7cv\" ]\n  } ],\n  \"etag\" : \"hic\",\n  \"version\" : 717256371\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "319a8a71-3431-4a2d-8276-d61edbc4c210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.892127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0ffca2b2-59c0-4c7c-91b6-b6409560f58a",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/s7j0b8hzu3rocjil:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"kbh5pkwb6qn3udb9d7t1qztws2ipkmu21aeew2yd0ojr7x314ob55oodp4n313rgrdhroz799jnsfo2lvetbn9k1mgmgwl9bbo78rdf44reed3hkx6rz6i9jjcqgzgafkqrov6yhlfw8mo172zy9swr05awqz9ldjsqh05soowawq1kxqq25vpqbfjrwgzyhah7d4ym\",\n      \"description\" : \"Aliquid dolor placeat quibusdam consequatur numquam qui architecto. Similique illo quisquam animi vel ut consectetur. Eos omnis reiciendis aut atque qui qui cumque. Voluptas harum quia officiis aut ea\",\n      \"location\" : \"vpxr7mfxq0yskc4wkcucyfn3l0gz140pzujgu3p17woldovv6exda32qoon5s9dp9a824zd02c9um6j1z61wpry94a7e7ig63u8z7t5109u\",\n      \"title\" : \"Ut omnis molestiae cum velit quaerat.\"\n    },\n    \"role\" : \"22etwrk7lmb39xzkyk80el3542cdj3o46tiof4xhr6l7u97psfwgfcq1edm4rge\",\n    \"members\" : [ \"tuqh1841vnbj55qdmtxbvos2f5lov8h9hbx8yhz0sfk2ddya26zug4kacjcdj2aolxbbw5pi5lc2uhuc7yll3eeezyqwm5qcx7nolpr4ngclo6\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7uznlpfwhcdq3ocouhgrqabq3b49vffuadgxq9os9\",\n      \"description\" : \"Dicta omnis voluptatem voluptas sint animi magnam et. Sit atque laudantium quam aliquam velit. Doloribus provident fugiat provident mollitia saepe. Possimus iusto vitae nostrum id. Quia doloribus haru\",\n      \"location\" : \"76blmp7f6zv4ycwvwit6jxvs3oguwxqn2ddzxc3n0o5qr2ofe3yucoe3yc2r63s384pilluehbt7veojhu13hn\",\n      \"title\" : \"Iusto ratione molestiae dolor deleniti voluptas.\"\n    },\n    \"role\" : \"qp0u3ah9lp2pf5sw9lsnufjuhmmshlv21bkstzf0v4bonv34maphp5jxakqmzrmm8739xit3hy\",\n    \"members\" : [ \"swxi61gi8pei9sjwqv0ft589l48\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"slc\",\n      \"description\" : \"Ut velit et ab rerum autem vel. Et qui quia consequatur fugiat unde nesciunt eligendi. Maiores consequatur quia sed enim eum repellat velit. Praesentium perspiciatis quo. Deleniti quia officiis iure a\",\n      \"location\" : \"y4er9qptz3192gqcmua47oowyzexcjp8shnmqs3rupgiyzgu4vvj01k42ohad1u17wh2dvpprzdmectot5uhmfba2gcuon0xwesc2r5jn9csgcsb74xbszd1b9nqzql0mzzaax31ibk0drpaz0estrvhosy3r1n1efbyrk1mj526irhe0hicva7gmq8k9oxp8i43\",\n      \"title\" : \"Dolores repellendus perspiciatis.\"\n    },\n    \"role\" : \"awpljexy6tb7o2kne0t2z1d6g2ctzkyb5k2fqejd7nlvk4ofev3expdvadsuido76zlycz5e8s7ncwd96uunnzekphyp2xcg17oprwvgnclumiipdddwlgp3pap9gxzoyyuelis2t\",\n    \"members\" : [ \"spc8gwlphoc3vbwscu1t5b9cp4zztl8pm8j7roe96nniyap23fz09df1gtd0hkjjbahj596s8zx7lmn5jaedjqmjdrke4f8nf9tfnn9ipp\", \"hgv6ih142y6c1avx6bl7o1bia54jud8mrhp43zbfs0cvfcm0rwnas3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"mslxybfsxm06ua2ht1nzmyn4rrptgrdv9kwyf5r1been8drt8572vi80sbfwocmyxsm4k0jp3vz67p5c5v4hgctl826du1zy5h74v38f\",\n      \"description\" : \"Fugit omnis cupiditate distinctio animi qui illum. Et veritatis natus ut. Et sit nesciunt illo illo vitae aut. Ex vero deleniti et rerum nihil iusto tenetur. Ullam delectus eum labore qui esse sunt.\",\n      \"location\" : \"ysadl2ano8qlkz1q5tcv4a4cbceevmtpdqsb5mpsn0ipfme4wygyq8p86qsgz93wy98xx3a56zevo1qdgl1oenagamn7yda7a2r0n7kc1cq37r1wl9o9qpi3cyhpe2pj8t1wix7tn3a59gq\",\n      \"title\" : \"Ipsam quia sint ipsa.\"\n    },\n    \"role\" : \"0ha42pp1c94whgbjpjojhmxlcwug0p59j23pq\",\n    \"members\" : [ \"7pu9eowve9x418qnkahi9h4xu7n5qa49aom6mqbxpfwerjr5fa3k2w9jz7ioovmfiqn\", \"ptn0rf0xs4i8mc0eulvskiarrnqbjooipybzselcntd9g9fmhr3t2xqitjrw2\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"cnw5zrf6zsw1qh1vxg1nxwgamvvcogzwxp6svklki01mjzxr4qe1hdm8s5sepcc30dvmzl1ot6bj9ypyl4s02bq2hgrr5vsjspvw36phd6scgii8gg7w23nc563x7oeoa7d4rm1c1ztlsmy5\",\n      \"description\" : \"Debitis harum culpa eligendi animi. Dolores sed qui. Qui quae accusamus quibusdam aut.\",\n      \"location\" : \"ij9cij5vgwhuyjfp1jxedv5ak0ezelvzb4fxuft5x4n6lvzsd2jtjk6dzbull3loqz95ia1uew7rxcigsmn07i9qjfi633qcb0wtsk3omuklzg9tpuy6ng4p4x\",\n      \"title\" : \"Dolores ut laboriosam et.\"\n    },\n    \"role\" : \"802yibc55t7ryj6679ml7k34o8ywkgdyoqjhyg6f11n1vylrj0jzk24qjoxp9cql5\",\n    \"members\" : [ \"otvggc36zn90x8mzjttzndq7ctlhrhvkmfh473hpa0v5jvf8iegihs0g0oxbsbummvyixvxpnhop0o4vcyslzpgwcbaurcr3kaj7gbeynt6wlee8nrew15mux8drz1a18au6ywhcekw71ukk10k8nwp0numx4lsnidssmh5m8mm1w\", \"k6ua2ovc9zovduz489\", \"u9u4ir8hk1axlu74gb5ou2u4t2c1dvtdln3m2ct7vu0e1y2qmypee4g79c7ek54dvk3jjwugagqv4bjt\", \"28u4c1cyvgn1br49l0l30ftrt09pq3for8xac6sxqsbv9iwgiur2ryfq43yuttw8uursapt6hz37t4r2k0q4pu15k71yc0towe4v9i4kg57djqsejmydu26j2fyqz534tv7nx14j65mk4qw8bgblmiuoukt2uy55c12frvlklfe6ndtgvgkrlpd9o\", \"x50u32t78l1fnozcxtovp1oo9sml6naojvxu7ihblag4g28fcpx1oojs1wmcchcdcuiexcb05mu6swv9w1v9db9jf5kej7ypsalzkd6m6ddqao1tw3tkqyq5nu8p9jclqgo5jnvtaafsq41vpu8i\", \"asgl0z3jpt2gko3qr21hxfghxo9janp5pqadgqxm8e5qtwl664lm8zlshfgmqirl2gdthgi2lvs1s3cdsryxqzvnok0ua2blfu3ph766spnxnyesagnnkz2314le8c1\", \"6n1ty\", \"m5j8m27zhwgq5qrvmo1g67jf8ahlg23q7hk8zbkfqxups7jyg9twu7gazvqzmgcyzhwpb66fbvjui05pyx6vjcbz7gmdyk71l6we\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"cz6avbk6r9rfg4vzqgz0915f4yatnxvgbxvlpz12s9uvtcsfwq6hgaoo4of11dafhb8eud6h0n255d97fmads84vp6m5d3r9audzunj872u81ekcedsxwq6jz889234akytxg8s6erqe9vv1pr7jyj78j2spu6b\",\n      \"description\" : \"Molestias soluta quisquam porro eaque est sint. Dolorem ut at iure maiores. Quia magnam qui tempore voluptatem consequatur. Sit ut ut magnam repellat. Aspernatur molestias reprehenderit nesciunt dolor\",\n      \"location\" : \"dnpqpfb80yzknrcdh7d1qdrdc3jywodpxp3ov5hhepygjm1p0ka8wn4pn9nkyc3l489qm8e1p8pdxrlql01he0hapfmx67h4j26za0gtvppzu1nv6dpfn8x2t44wui9dtsqr58oxyrp02xx65\",\n      \"title\" : \"Placeat dolore inventore modi soluta.\"\n    },\n    \"role\" : \"ltnd6fskenbh5q1mu39itoby1htwhdkwy7fim5nlc8zpwlflm0t4rer5h6gy5t9dyswqop9u2die1fxlfmkfx2s2tozqkjpl4r6umhn7nte34t3qkf1sdrjwk75pzun04gw9dbv1rh35l6a8d59b04np\",\n    \"members\" : [ \"mo17m7cg3rrw9e5utfzknjt9xpobe7iwhlw2fz6886adngzs0t91o30ndqprrdoxqdnatfz58mmknvugk9yuwxbc5uhubi0mt924rgiwrn0ix8suzyx5edztnw42bbp32d9y6ds4soqhntyk7p\", \"ohqbn7zq4sk396ffyllrwhakwhaxbivn3dj2xear7qeqq47fs\", \"hqqh25hlqvxft6l4wh2f8cglm25yj7f7ig2gfdby5d\", \"ykkzwqtyg20e02t5obll9e9anc7eqvfu4tpxoi9siqden8fwyvd89oeempv6pt8zj4iklawojpuekc2gbj479g985vzlxvviua73onkspz9ok5b\", \"ivbnyhrlfh8ozanexaiwxi26ywfajxi6jh08qkhsk7gm0g78zrfrobkmg97lcfeheoy3p0dztsmmmscl6hnnx2e9p2fok92nqd1kh3xiefxd5x3umm5isbyet4rcf6el4ncncvnmk968pyx50b1xta6x2raqg66uijrjrztya9kppqsyvvl4zoxrquow9pm\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"rreiwmiv7zpw5n0l02fwghrzw5kkk7ecfpopqr4qjve1kzslylnridw50i655jfk39agkrxpgv9kxsous41u7m6ex5nhqlvbd41e0m6gjy12c4og7zqwioy181rokdtlhd5g8g10ior2cskndjpb0yulwv8l5mhi38951s070ejd709\",\n      \"description\" : \"Quod pariatur saepe provident non ut et voluptate. Iure illo repellendus praesentium exercitationem molestias beatae consectetur. Repellat est voluptates est quo non commodi. Autem exercitationem quas\",\n      \"location\" : \"gma0wtl0du7wifrx2r8qm2cdknmxq7m7u04w42t1wimeblp5k7\",\n      \"title\" : \"Consequatur aut molestias et consequuntur nobis sit numquam.\"\n    },\n    \"role\" : \"yzpvt6tqx9af0xgoulud9sbgrecxb9etpmlyq5o9w2exsa6j1mve4a2sdbszmbd4du7ug31no7jsxaritd2uet\",\n    \"members\" : [ \"pidc6omltex2dq6nhdu8ettn5brqp2kdfui78g4q5r5odwlqnv\", \"sshdzwwpjb9wrsqbtvu9hnsjhx50wrkk1c3and8bn9tbuy022fqo03kygj65wh8x61inqs4w51zyk8c2sfawfjqetjsg6v89b0c7zix1vgxmqt96tm3pfzb41\" ]\n  } ],\n  \"etag\" : \"sint\",\n  \"version\" : 1259160033\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ffca2b2-59c0-4c7c-91b6-b6409560f58a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.891125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "8f782fd6-596e-47b0-8ad0-4d7da9907a7d",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/icg9unbxv4wuohwvnpa6igyd4ljp3hth1terj4izmx65agheuvnnpjv6blk1jwht9pqb977v2tfjyppbbazkfexqp6i73kedhwvvwnqdogiu8c5jv66ng42tflczvj1t1t2qjbnv7b8wjxby92tybl8sc1e17j4iq56vghqbv/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Patsy Stokes\",\n  \"error\" : {\n    \"code\" : 1479927699,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Voluptatem voluptatum id. Necessitatibus facere modi iste. Voluptas et quo eum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f782fd6-596e-47b0-8ad0-4d7da9907a7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.890076Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "b61f3ae9-1c49-4f23-af62-b288d0b1542d",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/bza5mh9yemy2y5xzdc6djz4q3bfr3e94tiej31o41pec8650e561eyz2e2civvihiyqxw41a9do7qt8p90c7uemv44h7uqbroy801evvyud8v5p9yqhfqakhk1tlwbl75uajvqa3w0rbo0oe826ubvejcqupqqz1xz9/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"5wiel0byble\", \"1hhu8xg5dn3v62voa23sxuqb7fy6dx2omontj1p0rx6q2v1vlem1yl9v9y47omd1sqhk2hn4amaeuxavf7ar4h7rbztzatd5vv131z34rwlmjn2d8tsgg7egt5k1m\", \"amblukkhxdm91ydomzz8v2pc0dj45wdb0vny6ul96g23bpwrpym1k0a8tqwae\", \"vsn8191r5dvszeyycl1wmhwrmcsqf9nkx8jm7zao0lkaolos3tee2gik13eqiwag5hd5f15u4ccprx6788ust2gfkm6yy2305b1p7infmc7z4dz04qzo4wr3292ve6timrgvp3v4p3e047ftrbk0mh620p3wqp93rvcr0c6pnozme\", \"9elwt1k3ygfxvg0q0pwh3kuzsygpz8scpz6uip1dxnb2prrsxymfg32wba49kb8fj7j4osdcgehrljicm0rmw7fkbsgssordsspd6ysq7k8xrih1fznm2jqqt\", \"ft67wcc11aptwts1k4a1xdobvbjpug4u2g6jitlv6g5heysep\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"lvd77q0xg1jmq3ggnci9iulje7tc0tugdmxfngoufkvi58n243dz0aotc0hkeuw8n57b91ne7czw39xqsv0zbq8wo8unh47muox35xxs6lqy8ljy7944thdvjuth\", \"lzai4wkzp5yh5fz5qf1wxtljs2lyosc4b6zw7v8vzojyfrklcaq2jhpmq0kv5d23q62js2ymi6ois40n\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-08-14T12:29:02.888944Z\",\n      \"upgradeTime\" : \"2022-12-24T15:15:02.888979Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 592027150,\n    \"createTime\" : \"2022-05-09T13:19:02.889032Z\",\n    \"displayName\" : \"Amal Block\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Miss Lonna Grant\",\n    \"nodeCount\" : 1858031680,\n    \"updateTime\" : \"2022-06-28T12:06:02.889161Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"5o9jkbqrecncy3ndyrki3p2s9f45ifw1ics5wvcx8voe5vlhmewdm5isste9l8h4de979dm85yxk5vviep2umvfus9k3z3wx3eqsry3jdvlffi016039ad1auii7u0m5n9gpu63t9gq2buy0r3vtdbgpxojad7xt1iepu\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"56kvauz38vuxebjwimf9vr7pvdlkz2ahdv8b9nuasq82pq5ilh3xnvu2lzhxucupd51z7el2h77d907lubhjb6dtao02fvophoewn2qefajpns2qa8pz006g6qqrti8ddszh5om3mjgrujc5r8glpenkt7wypd5gpltmffut\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-05-27T14:13:02.889237Z\",\n      \"upgradeTime\" : \"2022-03-25T13:30:02.889267Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 663276871,\n    \"createTime\" : \"2022-08-22T12:30:02.889311Z\",\n    \"displayName\" : \"Wm Paucek DDS\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Phyliss Flatley\",\n    \"nodeCount\" : 174855005,\n    \"updateTime\" : \"2022-09-19T14:58:02.889426Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"202b5uanw2vgnsldgzzgx2ry9v2gfb5te99ppcp8v7eunkb3n1faf703iyl\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"q1m7m0hwmutnfb9e0kcveqdhns\", \"whwrq9l6kxyde0ps4brnmyvxjwgel0e77mp1npq7tjjegseyv5adc4yw7c603af5f3rlr2fywm7pixkwpscpow61j60vbbv9cn6deiz1dxg14r2r2ic9g\", \"178zfuqy449z62\", \"5cp1m577annwflat7ombx8qj1ni7sf1vftkix3oqsyvv17b\", \"tj5k15lwdjosaa6f6zhergpw33vyhwh9ubopicvit382r89jcbpk0qozn3tphdveaolp4\", \"ljhinwmsvrtab6lwxqaxxtnnww14riq28v7lk46i9ccg6yrbyi0cu2zcw9oihrvkasfuuf0dc3j78p3spxnznf4n23g4714mu6mzukwu15egg76sgwrsip7m15bxq7qg168l3nlorl1j\", \"98lcrxq0az1q6ureungqinhmd390vxasnlmy2bvw31s\", \"i4h9vglz9pp92cwyv5meugu1u3lr06uy9zfi5ytlydw2tj1dfuhh8jj73a7fq6kwg33u4rlrs8ero48wan4qvybirdeeqyc17mm9z1eljqftu54omojwm5eryy6rfg5lx223by7arebqvgqtscibh\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-09-16T12:13:02.88952Z\",\n      \"upgradeTime\" : \"2023-03-05T14:38:02.88955Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 2047742617,\n    \"createTime\" : \"2022-11-07T12:17:02.889594Z\",\n    \"displayName\" : \"Mee Dach\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Miss Dong Thiel\",\n    \"nodeCount\" : 394417554,\n    \"updateTime\" : \"2022-08-14T15:03:02.88971Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"rz2pvohcifnt32l42asb861teyv8gdpwha05dgydalpck1n040rc4lml5go4636o5htcg3k1eju9jcnp6wzhzmid2fzpjwe6bykg73jvs9na0b1hhlra4xpb4l3uwz3x73hj71z92v36m32k4ubskh7t380\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"k5zzyj2rn333a0ogp92m4sfi8fr4oyk8srfocuf9j95u2hdufkp57q8z8ej6c90uwb3zdvitdqkxisycw1q18va499m6ulud7kiciqzlalvf0ma6ozd57sbfjxv3o64fqy5hwbmvxyzwe3oc8j9ag6pewl360w4yzicbhx7d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b61f3ae9-1c49-4f23-af62-b288d0b1542d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.889866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "e23fc568-9705-46db-b31f-48189aa5a95e",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/6aqte88hxann4qhwym62es0ogmm8rfcd2kvttpxdbwcpawcsv32f1q8qdrs74aeod9ip1xyn114woy0eyu2v8evfdvbyn82igqvu02j5kf680htquy92v4g4g0mdal1h6eyjla4wzuvu3gkobjg62f3b1syf/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Woodrow Howell II\",\n  \"error\" : {\n    \"code\" : 880201703,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Consequatur doloribus rerum tenetur. Aliquam sed aut neque. Eos cum at quibusdam autem corporis ut. Culpa natus fugit et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e23fc568-9705-46db-b31f-48189aa5a95e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.888813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "a7ad3215-32ad-48bc-a5cf-5542d849bb53",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/c5wawj6kmsstwqv7a9wwx75j65tvtin435sksixam4pnvut9qgdht1n873yylr5kcwztmb2zm1sgy5usy8iamr1v21cbwabro3erj3iy146sgw71u7efcevu7hn08ivm2/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1ahu4p2apujl708xuwbepkgnohdw5zafdxleg2qv64l8s9wef398se5o5zkxcp9lel1z7isu044sxsk1r59o7nb8aiq5szmmiu2vw6qhkidhm6fipv3mjcdv90vp2pp4b47cflj\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"UNSUPPORTED\",\n    \"displayName\" : \"Cameron Brakus DVM\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"xesux349m0bna8s4ru1x791orx7uogjxcqjbftn4ema2ydcrefgtlv3eri\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"9jsnkzhwjd2hi930nrcfoymzyvy9mtt8nzqsn24c3qvkese9q439cwspaxfqyopc9ijpdtxlptkokn41ptnyhwp1ugldpxdgsnzezfsec5tc9609qwwsk97g6xa068azk3ejckob5temnevk6r35swnd6cxq6lwxl2cwkt2xpoggiq8csyejezwppduukhar3\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"name\" : \"Shiloh Hettinger\",\n    \"reconciling\" : false,\n    \"etag\" : \"voluptates\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"2h8i7cwd7bguagmzaewx73mupidq6my3xed5z5wkkqp5yciwvzkr9eb83iw0apggd952rsny43fkjf4tb4mh0uwityp05h067daevccqivdah8iqb4ybldme0uade6cjidy9inrab10vgxazinn6ojn3jzk83jue20xxur\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"nf55yqpqvzfdgm5eq9f8t5nws\", \"6keax5kfvfzn7g3cm6n7sfyezhup6mrkdakasbnrtbzh8p0yfx6\", \"2hb4jn1lp54nfsauwrzlx9clxv5r5l79x84llk2n9bmcbyib2ypgk0u45nd9rvxqvopvt86zdadfv4flck4tzjywua72i7ayyw5u9bvo8zk4mqd3is6mr3o1wmxsbc2c4ac9rabradgc28w6hr42ox84f8g6m85ods7io3zbbp109nodgxd0a\", \"2ripi01nz6dr14cwej8u52n161szdcjuman9qd6shht888v1hcd6e58zur638bqhqqge17y1gm7t3\", \"yfadolep3uorr8bf4aucxhjt8pzeroyywbhbbg18uin6ilmtwigrcqsd11p1z1dz31nvsnmdraah03da82aysqrbwlqp91agkl35zkouwgij6y55k7ixk4sk7zty3h2u8v7qt54gvmx17j9t0nj1kkqsnhipvgsas3aihuhrh7k2zmiobgt58su3\", \"tor1o0yxhwfhuwm1q8c0h9vs50q0timq37mipgh8pddmh8mmygqc8tgf7lfa6wwhlls\" ],\n    \"baseConfig\" : \"qwym0lfya0few2\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"UNSUPPORTED\",\n    \"displayName\" : \"Mr. Darcy Zulauf\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"xsawjmu8xicb4ana30lpmqg78jfn24b3duiutwxkol16znwq9zuytfkphyps9zuo3jow60iupdii8g6q6knqcowg3jhsdy8zxwl6wru\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"nnt2b6holiyd9p3nkc1\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"fv3ip8e2l67kpfldij4uf5nawiv4619wtdjr5lroft1avzkv8193qb9h4mtj6u3y3kq99oym5vnnnyq863bfksyo92sij0tz3t0cip2ifv9u18mf1g3d6muy5u1prz30asxzpwwg8d3atik0otaufo2w1gpwo8a2zchrdhv6y\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"fs5d40xmt3kk98mknyo9gq3wg48hrdjfznwas09o3ei1w0y2uivyd868dtsbd75nbassbx82nqyoqq6i8m1endhic69khqt44uo780d1v83w5jjo4wksl6mvfikgv9zc4kwhh8x9l5ep7ubciem0pan75rzzf1ichvdsk2x\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"name\" : \"Dr. Lee Streich\",\n    \"reconciling\" : false,\n    \"etag\" : \"labore\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"ztldsy1vlut279ilu3bi3d2g11iiqu0s6v6gv7f0csk2j1xsblnc7hr1dlt4jfm90lsstzb5ye1yn0s1k0wtgl48nb1mb6aaljwcaxq3gxmc4zirxipjuq5mms2u5mfv4t2x2tz6lxtywlf7f\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"i17\", \"5239uen42hdrw6n2pbg3k4kn22ow0i8o6mho80ujvnc1mzloq9dukwj5obnsq9yk1ffgvsmpwyvhgt4qcih4tm4sgxs59qfmzd9gm4xmof77mz45eyxc\", \"86lwjjng0bcfmikj8p3rd9pkjl415afd1abdhz5claq8jt2s4p8f200546yj5br1pjr52iuvfrd14skw1zhw9xg\", \"uuw3b2kv8e23auhxnaq0ntentmzyw01e0tahpevmt5rzj43ok6sb300reikenbv\", \"dnhbcux0lm5syi7egvpb1qzscg9s1ig9ckdm4u6297ufv6he\", \"0nux3lvrk2jtblwtxkcdtn1pzyla6b9jyidnry9l9sz490mn0l62vu93b3uro1hq6eg6ol1odtgl8vr37ht9cq1dhg6lfx55y7xa7a6\" ],\n    \"baseConfig\" : \"c61u7s77g5vap5q9v\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"DISABLED\",\n    \"displayName\" : \"Mrs. Genaro Abernathy\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"dhxwxj12azvwj8puhdt5uw4qd2kb0vn4h61sq0lmgy0jtioral79\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"o1g9wzh50bya1mx8me1s3hudij3xqcsc6hesexy8pxzudqox4rugv1yduvom7j1yhojmha3afzua489drcs9bypz43rq6aebzs6zz8loynhrvqvfh4trs8f61sj8izqe9u3fgtzhvyn7pjf50kvupdsvdq08zazn6pnias7mocs37zwzu892eb3tgwi2y9nc\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"i6s2wla2t8vyccgv1qf1ywp2xmjs7p5r9bqabhgabnv254iepugipdxy61m4yvvocx80npjsora80bcp7exawafzhghl9v3y17gglzh5yqeh5cnnt0pjqin9a74z5me1a6xisq3ov649tzzgtyczbdczgaj6te4y\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"mptn3bwchvbrjbrsuk5fmoyl2vjhnujylzpxgetxawmnrymxyd3f74rsvkbnizklkcvkmknzkewpeynccrp6nmyim7w59rhtax6cq6kyestg7qth3v7f4u7v8hqjm9p0vhr8jkuyh2xho8zw4zkr\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"6z08lm51380kcvtv5w3k0uyy06gjnwoejltd4id05w9crj6vnq2xnol0b9kxuqfgwgbq067m7ugd4yt33al3tezjhr3m17jbkvrz\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"xoh4h7vrgjwyj2bg8ja4816qazssyy\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Miss Keiko Zemlak\",\n    \"reconciling\" : true,\n    \"etag\" : \"eveniet\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"t7hy8o2kb79uyqf5fw7gl1stl8x3yvnf8dbmo5lpqwdc7kult080e4rouvvtioqm6tlben4vxa9bfm8ep8wmrai6i6ji3yw411w0jfhdmebo2puq02zjd8i2d1w7yoc6w7nxe411st\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"gmc8a664mnoyd0kcmmsgkdigd5ytph1fkyg87u72qs030xt8c1pi0cb1obcibaz\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"utzvhflqagzy724l7qllzou\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"0j9z4eofze9m7f8desopx189bkyespiiytvhz2ditlr54dv72o9rlxp1lcydgowponwotjz3kwtqg55co97dhj5c2gi1qidpv1n11s6m5l260u80o\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"sfejp5amqj2k61oicmmnu\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"qgab3m837qnh1zfc0cs3xo2ue7iypp2bpne851qd\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"o6nljlrfgz69cmp97u1t9g477yb4ytzfxa5vcvdtaxmzbnlp3vbr0pctyymb6ar0o90le4c0r0t3tl5sohwnz8624w9p3eytjrp8zm6oyme12c7te0xd9h3uvw2vd9gjeg03h7xlsp20206wuwu2sbh5e23tcutcgdkzhsg\", \"miayhjrxt4fl1cfdct2aw69j3anm65pevri2it71c1ixpyshoclldm058dkm4e86s5u7xpqmsfiikm5c3mvk42wd8ct9\", \"p98duj2way2jeuf78ijqdfhwjze47cf8badagsb3e051dpx6sl4t9h3g1sooe1807pn73k76yde558zh5xgp7vu74q6noos0pymrijqkd1pgfn15q0amh3mbgazp\", \"k5vn979wn956xli0y0p6rvv6cffgj0riy11lcsf2c6wxdt9ve\" ],\n    \"baseConfig\" : \"5e505y3hnz5d1mtjgqpz8yzzd07lkpcenkvx2zxrn0wn9yecp1vqu78er6dpzy38xsejexjnlx239x532osw29kgiq3d6cddhf32i2mldxe9zvkw6elpvjq2peuqbvnsqzdqim81jv1m0ls\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"UNSUPPORTED\",\n    \"displayName\" : \"Randy Runolfsdottir\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"mo8f1prjoizydt7d0hjtsj0io4oqcfkndv02bed5y1pe9df6gn18w\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"f0hf1510jhpsrv91s9et0n0308l56gbv6hhilobyegwi\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"wqsoxn8iqnlqbltq5\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"je1p4toozqow8j0ielenl56jnnj0llq1ydbc8wnq6k8d7ltoidub1ioibxtd84qenfqb08gqpjyrza85yu8xdu48p9rce\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"l618dftzvt8vxz3gmds9k6fibf\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"fm6a00ed9xzzxhuvxkx52i4aavkt2zkirk4eb8v6j30kce5jett2xw0gjw2xo2tpmhv6sx4j50vvhox5tswuhcza38k8i09whu0rep9d4imwpvj\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"k15iw5baea49zkspzb27v9fnuvv7smr5np1c2b98by1ywbl8pa9vu3k6prtuw19vpox6yh9r8fazzvlbxr60kbc6aquj8fnw7cfnzgn1pl45p5vvt6k62y13poemdlbkj7ho7sb4ns2fucl4n7zm\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Eulah Bode\",\n    \"reconciling\" : true,\n    \"etag\" : \"similique\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"wgc3yhdtulynweagducw6flpowxw38j07yg1w6ax9yao5in6kz1kpbvi9hxcvf\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"m276ezntwjm8fhwbmb8f4gv4qdbyekvwn1otaam94zww2sbcxzyqo9fvh1rgjzbbpkjgjnoxvk6htt6xb5smvz13fj7sskubtyteqzuyvlf7ae8mlhrsbdn0bsmgmyqle0e1noi223gauafiq2e42nrtuoaj1dgw81hc1jh1vxgugha1rcqe9dry\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"e9sqjhn9ndr9sh6rak7e3zl1nimib9gq18cdgp8v6g8p\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"4phkh2hrq3t85yy8krf89ipgucvpasstcp41qm21n550lxiuh2dptz\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"d0ptrtd8ifg8vnmiaj4v99z2073px8leu995yp2v9orpr2vfp41cl4vmchdc97vhgsfpgho6ywtf46a9z6zju1ul8xln4otvjudt5clmy90n2ycow5e99qgvzj8ghkct2vmcemfq3pjnf75dwdq0\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ixh2hu9tt69zz76bz79hzk6o4cjljmcon39ildva9udyl6ktom761xxsatv14npustthx5d29ejsfaubvfbz4omdjtrafbuqrezykkqdwm3dtn5mtl39olcfsrot5b48yu16y4mvsgpn\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"096m06mwyrh4bzy9kr8h74qpicsz3qgvxz2jf2jof8c1zub7ghq83se9xlcr9\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"tyk7u6mbq95fglxqez\" ],\n    \"baseConfig\" : \"t0549uln029l3z09tqal2rjzv7jxe2imradp2nxwxjpyyisimqp8kk3v9rb11qsit633j25kqmj6v05zhtffe1kg\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Miss Colin Kreiger\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"qpjrjz5hegoiecsi65apf74dw9bxksusb7nhe1xt9w3fz7vh4z7ou70hfuh7zqtl3y01ih434if0t16kng2egb7jbq2ua4efm9n7v6zonxuradai7bpxaqvw5e7zqvtqc6mrusxwe3f95nq0sdu8v153ipd0eicnxzfquc0mg2vnzgv5ezn6z7w9wpnqi9t2\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"wwm0wmqkiifipcytpk328xf5ldv5em7gx00ghb70qkurbpjzpid\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"2aqsodfjuychamiy22qroy13dgmpyjvczk83zqg8kuy3n26g93mpb\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Ward Zulauf\",\n    \"reconciling\" : false,\n    \"etag\" : \"unde\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"t8alr21dh6jtc4066d3m50liam8tlff887rb25nfhktu33sluf3khtkhjp2jrncqdsf63pgc4wrwg9o8m\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"fkk1mk25utq\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"z5ky9y5dp94u3wq0s2sj06lg8pb5ysrs6fqlgex49fhkxnk3eqczqaxq20bdnnyzkutuucjkk295eq9fok329fuabhvwmj6qcciyfhb\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"as8ck2rkh8urivd54nlgu2571h5hpnht5x\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"rezr3r5m089lhvoy5mfca4qhyjc9bjk7estzji3eta2zegh3ajkfmif3ndj2\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"GOOGLE_MANAGED\",\n    \"leaderOptions\" : [ \"w0cuwnjqv67huxocwbfclxynza8u82gid2tlu1jnz1m9kyiowwbcthb5wwhs\", \"vdgss2jcd7c2pytvgavfponz0o65b248icshtddwjr556\", \"c62qum73jrtprmav2p16eox8bqhvjcn5axt6z7t5aq10\", \"6yfvhldhekod66avpe5t9ltxb4bsasbdu5useepbb7y3hdxwnziy2qiw36ifs8tvagbz947ncokzjuuof6wzxe2ybfoukvrzno6bcjj5ra5a6824p3en5shxqnei2qxrkfxgau3aoamkwpgmauxf1qn013zuy9n5q3m4qbgs9\", \"3atqzsd2a0ldypws4enu7jot6nzznxq4wofpgt09c46amv7dzkf6hy2t9ul0nxear69ydjtmgw114uhcu\" ],\n    \"baseConfig\" : \"zrem4ffbq1gd0brt0onhf1phjwdk19swzcd1vsnlamvmlplre2t0z29w73qte4xv0\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"AVAILABLE\",\n    \"displayName\" : \"Vicente Block\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"9r9zeq8jo3zsz37gunnrxvzf2u1xh70bjopti06hmb9f0u2ec85vul6rp0fon0w9y1mz9iu175ve56f35cir34hwlbpd7o4hnh1wa8\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"nw2rpfwg0\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"0zl45efplt8bnchii187uvnivfu15qbw7ubk9ofucbyr90qyvpfnr8vu9ssb83dh7dgcz\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"z4wxaee0a02anlvsy1cbiaovdc531ldf12z6yonqbjpg4tqtw6e36vmlyuww22prrk2ijavlogn7ihisjvugovpr\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Guillermo Runolfsson\",\n    \"reconciling\" : true,\n    \"etag\" : \"nesciunt\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"8s40u7wgtaub5jn7e8x3flikt337jgbhl4srk0fxxx777188q7qnm95v1j5qta7y6rb1sr9jy4b2tixidzwnvg58ce5yuumyfehkr045cck8axzpxtnyi0bker4mar0dowzgjjur6g18g0ml00o94b35aj0zbkxzttg3gwd5mgafvliu9lyw4eoxilv96615negzd2y\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"30ci9n44n8sr6ksq5f6k1kjt5tgr4kh7vxaaowfruoyng5g143ls0np67f3jqe6ufuzc8r5z258fsxtdi5tcyulqdw5b8t5xj23nlv0smab51okvxsz4yp3cqyynq9jerproidqkkve5w6u1j19b5bio1koxr5zn70i37dghr1p04aapmnpqq282sjxnk7rb\" ],\n    \"baseConfig\" : \"6twvombft3r6nftzjr57hggzbqq6ay8ahdeno379k0pswlpf0yxdb3wdstfca1419cd0t248x5qj9dfh86rqxebhmp72gf92ve8212y2lmwl5b3f4vkq7452xwsgn2dmajshijxkr24dz09uk1cqxpj9cg8u2qug771uqt6tsv1jx7m\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7ad3215-32ad-48bc-a5cf-5542d849bb53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.88854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "d8cdd5f0-d810-425a-abf4-260acb1e8bed",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/eel2yx1mxnsvu330tby8xe3l3zlb/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Brooke Crona\",\n    \"error\" : {\n      \"code\" : 1341647435,\n      \"details\" : [ { } ],\n      \"message\" : \"Et est eveniet nesciunt molestiae. Quia sapiente qui. Voluptate sapiente consectetur autem dolor esse asperiores repellendus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Louella Bogisich II\",\n    \"error\" : {\n      \"code\" : 1506923998,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Qui occaecati in dolore asperiores necessitatibus qui ab. Sapiente consequatur quidem tenetur repellendus hic et. Officia nemo qui consectetur. Nam non cumque laborum totam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sena Runte\",\n    \"error\" : {\n      \"code\" : 1660125239,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Vel id vitae molestiae et. Ad facere laborum autem. Facilis nam deserunt. Veritatis quod sint quia tempora aut in.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Preston Kautzer\",\n    \"error\" : {\n      \"code\" : 383066543,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Molestiae aliquid perferendis. Eos nam voluptatem nihil perferendis. Laboriosam quis est voluptates excepturi neque dicta. Qui vero quo illum reiciendis fuga.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Burl Fay\",\n    \"error\" : {\n      \"code\" : 2007517264,\n      \"details\" : [ { } ],\n      \"message\" : \"Dicta et fuga. Molestias aliquam maiores eligendi. Fuga tempora illo. Itaque dolor optio consequatur. Aut omnis qui natus itaque et.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"xnzr3nbs0jumgrpj1ccd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8cdd5f0-d810-425a-abf4-260acb1e8bed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.88607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "1d0b0c78-8909-43da-bee5-224c2ab95f7e",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/2boa18qoh4fnfzfvt6vk9t2d7oyytq3ys8tzpyf66xzcg76smr1gw9itpw1mfcutycu/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Titus Aufderhar\",\n  \"error\" : {\n    \"code\" : 263120789,\n    \"details\" : [ { } ],\n    \"message\" : \"Recusandae nam eius voluptatem omnis atque. Tempore animi quasi. Voluptate vel amet velit dolorem minima quia. Qui earum libero. Tenetur consequatur voluptatibus laudantium distinctio pariatur dolorem\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d0b0c78-8909-43da-bee5-224c2ab95f7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.88547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "5dde84dd-1740-41ad-ab99-7c0b591c57ac",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/8lgc33qm8ykujvu4e4aures0g96ggi28c84n8wklp8yaasq3rsvqap0sm71snbc68rk9vn8yu7ob2boh1q/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Billie Rogahn\",\n  \"error\" : {\n    \"code\" : 1727950266,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Et assumenda libero commodi similique blanditiis cupiditate omnis. Laboriosam expedita assumenda exercitationem blanditiis nobis laudantium. Quaerat aliquid esse. Dolores voluptas quam omnis. Deleniti\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dde84dd-1740-41ad-ab99-7c0b591c57ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.885283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "34ea27be-c923-4db3-bc58-00ae54f086de",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/gn89ul2vta07nc6phohx8y3zumupml2k3hpzpu8212ojzs8jrmbr2su1z53boltc6g4fiblos97dqx2uxbwt/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Bret Mueller\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 860534002,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Repellendus ut blanditiis ut odit laboriosam. Non et neque pariatur distinctio quidem exercitationem. Asperiores iusto adipisci suscipit et dolor odit. Autem sunt debitis deserunt. Fugiat dolor vero e\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"jcxjnr7tirohws1bk2j10d44f2e4qmoy4c6pwgk0h3ytazv0wv4stxh7as3miw5nqoxa2r5zucse1hzjjoasgvodfhemtilfjd5vvavzazc0x8smderr25y\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 756046810,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Architecto ex accusantium deleniti et delectus fugit ut. Assumenda aut sunt dolorem ea repudiandae et. Aperiam molestias et eius voluptatem et minima. Perspiciatis quos sunt nobis sed. Doloribus minim\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ltpdk6efrc7p5x64qb7pi03vdooefggv5kcw0un8yn64r7vhodx68tb7plrcqfjr3t4tpw40pbaavs4icptk5tl33aef5qgil6a\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 497315419,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Libero dolorum asperiores voluptatem dolor harum. Ullam et culpa. Maiores ex voluptas delectus voluptas odit accusantium sequi. Doloribus quia et blanditiis nulla excepturi.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"9xno2kbx9kzn9lty49dfqs1oozb0yxnhbln2q7s1amfq27yu8biml8mcauq9dqmiqph81yuev5a5dvg8oz7b206vyuyc8zotwq6hpesvuhst15ojopk22a04lo36m8uw3jge1w75fv1e6ix7z60n77p7ur12bwvro18vxuimg\"\n    } ],\n    \"versionRetentionPeriod\" : \"7vwuud09bm61m23fro148bjpisr43zd7x06du\",\n    \"createTime\" : \"2022-12-08T14:02:02.881483Z\",\n    \"earliestVersionTime\" : \"2022-07-18T13:01:02.88152Z\",\n    \"defaultLeader\" : \"7wbylbqbmgriu6x0ohsp7imr4lx10i0exgasncimteteufazuss32yjxvf53b5wvfuo8okfgh3pk75u4wmvabl4lcfprkrcwze76mpozpimylwkikk3ghl4cobcnok01ff7avbzfds4mgtnm95vme4j9qbzh6d1xyabrgsvzmo8mbup7nr\",\n    \"name\" : \"Crista Koepp\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"9uy4nfyib0khv8ud7xyxkk91vh15ymbfuy9pxe8226mzgjvgbaqk\",\n        \"createTime\" : \"2022-07-25T15:07:02.881664Z\",\n        \"sourceDatabase\" : \"trzgiwny3bj5vyvaxr1ywebsxbpxak3yz39pc01hlnrkb5km8q0ceetv1c60eh6tl969fih55q5rcigkihrj71gphrfcui5snqw8n8vmale6wpcpmt57a07ion8eas1\",\n        \"versionTime\" : \"2022-08-10T15:09:02.881715Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Owen Shields\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 533540547,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut quia laudantium. Iure molestiae laboriosam velit aut et nemo. Accusantium omnis earum beatae optio soluta ut rem. Rerum voluptate quia.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"my3aqzba66cxw9ic1hp8prqt1jetltqy0eylwr01phwhykbxmdoyuwjskshgflpn306qbx5q8zjz4is1jabb\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 727680305,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Libero quasi numquam qui dolore tempora sit. Assumenda sed dolore quis est voluptatem commodi deleniti. Et consequatur non non. Maiores recusandae quis veritatis. Officiis quidem ullam.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"98r8y38ti1i6fdlon1a04cw0olt9u4n5xgiwyvzp8tn9obnqvdvzaw0adqjxkv51esqbzbrh5z7538ly7rowy7synemm1fa9xh9nfpjhln6irv2320crhdaopqq39ib56btackzi7k8bggj2h31f1mmwcpbb85jr0cfkm8\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1446758350,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ipsum facere quaerat quidem. Non et rerum omnis voluptatem aut voluptatum consectetur. Vel sunt aut aut voluptas error dolorem. Sed perferendis rerum. Tenetur odit veniam nam perferendis.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"4dbveczcircnly4o83h9v21pkmkbi9n66dixp15wszd9pb5u2ao046zw5tk3j27r67futtw3u2grfdxv0donzvcw82p3jd7avc68l9hxmao0un7w25sipa05jdbpfzj27k0peo65au2cj6ad1m8i2bvaw7jt6jfotsksnvw10p4ryx\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 253773483,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut quam sed. Deserunt eaque cumque adipisci nulla soluta fugit. Velit sapiente molestias optio sit. Quo tempora qui commodi laborum animi.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"de2942agggkk3wp5tkfp9wbbn52l0t1njv7nc8um75sdl14y7owxiu8a49yhyxwxle33uiwuexq1nurtzjkxfkwxrfde58g7v4vhyyg5xl83cbtw44i9okyg8uobtslnkofgxq7ea5bdckb22lp5psrrdbtd27kklf7de085zwft45k3rjiwyu\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1230545653,\n        \"details\" : [ { } ],\n        \"message\" : \"Dolorem et fugiat eaque odio fuga laudantium animi. Expedita atque tenetur recusandae laborum aperiam et et. Animi debitis assumenda voluptatibus ipsa odit qui. Ad quam laborum quis quaerat consequatu\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"e8ahfe2a3ummc5v3fxa3trjnvdjmlohrue92l155foe0dgfozr5t3do79rhhlp9txx9ggy8f2sb59kso1ojetyioat75ia8hahjx1k7419zdzzuc7kxb62el5n2uf8lmy51gbstng5144xsnymd4eurf65sr8ux0unl168bgza1a34bev7xyugj1ornuac8o\"\n    } ],\n    \"versionRetentionPeriod\" : \"wmlxav122sxiiudpkbchccv889q1nt1inxwu6hxr5hmakz0smj9a0jn5ld2teyw35e180ylpu6qahlzgcav0dh558nsdaqmwoldq\",\n    \"createTime\" : \"2023-01-14T12:32:02.88224Z\",\n    \"earliestVersionTime\" : \"2022-05-18T15:14:02.882268Z\",\n    \"defaultLeader\" : \"jmetyb0soa9qwnrc62l0hlkemm6t3vn21x37updybluzx2icxvshu0dh29us5en95ggvc5cik51xxyffytximbpjiwp83nuttn2zjgvycremjd9x370453ckaef7yu55r74tg72ktqvqocioymuf4h6ki7x3hywp27y9yofn5byj7ngx58dyf7yn\",\n    \"name\" : \"Philip Rohan\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"yxelhbmasbb67jwznt2kaud81wpco25rv1b4n4oi\",\n        \"createTime\" : \"2022-07-07T13:22:02.882376Z\",\n        \"sourceDatabase\" : \"z9xgi5o1ucqbmqqjjt1n477rct1mp2hgd452s9zy0piqx47o5oz84mcma20ymk9ejpfwfzchjuld51b811p2ng293tn1bzehe9ababjwsv24onqywe6p55j6wpv9omsnlwnynbvhh0yr44g30rjpxygg0vzf9qvjp69\",\n        \"versionTime\" : \"2022-08-19T14:52:02.882419Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Mr. Russ Cremin\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 971569105,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Nostrum laudantium omnis dolorem ad. Autem qui in ut provident. Blanditiis a incidunt corporis at est delectus mollitia. Qui quo autem. Sequi tempora qui velit.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"30314zq8k2hfofgr61byzmmmvu795b5p5kz43xyv25g1bz0lt\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 853099966,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Qui corrupti quia fuga placeat nihil quisquam. Enim et provident. At hic aliquam cum fuga sit dolorum consequatur.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"hsc3gnrtrnk6kkk04r6rf6mi34mpwnks5bocceltonwaklucleeaggi2uzvvlkhe4vd2s8695dm9k0eiafeh7q7c6w4honrgxycrq5k95gkwc7y58al0259c7lq9u3eeo5d283p3t34qoeh9y78\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 884665408,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Non veniam recusandae dolores odit repellendus vel quisquam. Aliquid quos enim facere non ratione. Ut praesentium quis eos.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"9ll59l0dn932onmunb1zbu192mwxr1xnmw8vex4fita5t8sf7e4tcklujs7g1n6y193wwap17v\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1905874117,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Necessitatibus doloribus voluptatem. Odio quis quia et ab. Tempore sint fugit.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"get8bv1uo6h2occoszjeibp3zkx2m4tbft34zfeoboapw9qwhq0sk5hrwlulhyhbe59jgh5ffkx4m5e6s44de93zxh7lk5akj5rxuqw4d51eylkq\"\n    } ],\n    \"versionRetentionPeriod\" : \"tpn3ft7hj9xakhvmswumsy08p7mzrxosfy90vqd2f4yn0rrlg3y9tysvq7t5c\",\n    \"createTime\" : \"2022-06-01T12:44:02.882831Z\",\n    \"earliestVersionTime\" : \"2022-12-21T15:13:02.882858Z\",\n    \"defaultLeader\" : \"mh1lm33omz8j8yremtjb2rtbtmss7h6kjudw2qrjhrsms7zwdaoqai189fj46jwxas7xr8hr7mnj3elg57ylqatxul801p3acw96l781drn30x9bqose4ms516vkdlqrpa58l\",\n    \"name\" : \"Rhea Kris\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"1d5ii1p5ay6rm942kzxyvvic2n\",\n        \"createTime\" : \"2022-06-02T15:03:02.882969Z\",\n        \"sourceDatabase\" : \"svlg1etl1u7hcnxvkjn1c94myypundtb7axaycigrl59833f8ouj7uhc1t\",\n        \"versionTime\" : \"2022-08-11T13:29:02.883011Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Benedict Glover\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 2107572436,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Facere natus fugiat rerum necessitatibus iusto maxime. Deleniti perferendis totam voluptatibus consequuntur aut nemo non. Aspernatur sit provident occaecati sequi cumque numquam delectus. Nulla commod\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"mv4u18tcpnfd8p593dy77n8zbexj2z21u0dj4pbmwq7jq93b78tn2waaahj3wnlujp2y4omddvop2erk692fcnwfeowxvt3w1ro4yb26w57zp7tfsopwe7r4pa9kbd5t4\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 117391582,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Provident culpa et vel voluptatem dignissimos vel. Minima ut consequuntur et vero quisquam voluptas. Et quis eos quia quia quaerat voluptatibus error.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"o93tx29cdns1v7lwu8h6g5\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 184183268,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Est cumque autem est cumque. Repellendus praesentium aut voluptatem. Expedita eos et aut fugiat. Dolorem amet sit ipsum eius.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"e1p1hqyaer1xemeivqyagf3xygyy9oz0b2gagwz9qa6yj9ojxeqeupn53iiqvbzfc6lj2bjjr14jkx6tqzgo9l42a8xgruw4i22u75ywym9\"\n    } ],\n    \"versionRetentionPeriod\" : \"6vmj3qvqpqguh0libq0r0o0efn0mm4qdhswzj8yt5dsdd6zvrlt1i52xmknfeq9m36poc1jdka5tivkaornio5z7i2703cs0vh453finriqcqk7btd1d8m8tt19lzb\",\n    \"createTime\" : \"2023-03-20T11:44:02.883354Z\",\n    \"earliestVersionTime\" : \"2022-03-25T15:24:02.883382Z\",\n    \"defaultLeader\" : \"83ng97ewq3e0en3bk08a8kr9r1njr1o4h42r4am2b0i0ct890yxxj78mww6kqyb5drjishuhxqtz0cxmdufs4bzozovvrssid6zrwgdmzn5b40rt1ym5c9c1anico9r05v2gkpss6a4qe\",\n    \"name\" : \"Kenna Hilpert\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"ep53ra4teuoj9nxnzex4m13vderuqhs39zrgjzl29u0ohhc28amf\",\n        \"createTime\" : \"2022-04-19T13:42:02.883487Z\",\n        \"sourceDatabase\" : \"mqrq86c9yjpue2bvqd1skvprbhiuk1iahrq5087kw0642l1hbqp21awwwlsueqyyonxayajry57nts0xxr9uizqr8f8hyhtvnfnu3bvfgiazugokkm1gf2p5esn0bv\",\n        \"versionTime\" : \"2023-02-19T13:21:02.88353Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Cruz Kutch\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1942328578,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Debitis ad dolor sequi aperiam. Quas dolores aperiam deleniti. Sit sed sint ut esse nihil iste id.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"lzugavnufi0etatzhaz2rj3h27og72csd909ebtube4alabu07uaqk069997fh12jp8552q46m38xef8af0g6nc3anzw0cylnup9mtoc0z0qhc2tdm5neo9gn5g3j5st15cce9w3afk0oegp0lekvyhl5oqmsprzdp074ktouu5fb19823\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 444878004,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"In qui placeat mollitia velit sit qui at. Autem magni tenetur incidunt reiciendis sed aut. Quod voluptatem et delectus nihil nemo iste. Asperiores architecto et et repellat.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"zhon70jiayp2wjukz7c7x42budni9lfqrfjmmcba9ghamywinmb8mpwnrvis0u3l1frqt2izig8b5577m0t40ihbgyxvl4yd75wjojhn5fh3lfzvxzv3gf3vy3ll9fcxrmzd3fzcihs2q90t3i4di6gf3kl030hqk8bd9567hf6i3\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 405119354,\n        \"details\" : [ { } ],\n        \"message\" : \"Officia eos nemo vel praesentium temporibus. Molestiae sed non. Ut eum sapiente. Soluta ab voluptatem commodi non nihil quia perspiciatis. Perspiciatis quasi asperiores eligendi.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"lsbls8faol8x2dxzcodzukagqz9nh04xy33m05z6\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 462190709,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Enim qui qui. Tenetur consectetur unde id quia. At nobis dolore voluptatum aliquam. Eveniet aspernatur necessitatibus.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"9jm4iiat26dngab1n\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 599554114,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Cum nostrum ex eaque rem. Esse laudantium iusto. Odit eum consequuntur nam qui debitis. Harum et corrupti quia consequatur. Quia rerum sunt quis vitae ea velit.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"3q3j65xq3gzmno50feormv1kyuf93z3kbqhoob47d97xokjcti2hvjyqruz7aof45mg8tr05h74bf5ravkngrpm8w4iqm0j573rnmq\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1659759117,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Corporis voluptates ut ducimus. At molestias facere in. Ipsa deserunt odit nostrum distinctio veniam aliquid.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"znwjiy4f7gcnd0hh9fph03ecvn6yqrey609iz6xa2hxp\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2078579371,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Cupiditate expedita tempora. Assumenda consequatur nesciunt. Consequuntur saepe provident fugiat reiciendis. Cupiditate aut quod et.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"vp4kffoypmq5t1y4vj1buhajk6xo90e5hvfqxonv\"\n    } ],\n    \"versionRetentionPeriod\" : \"gkg6chp74p3d640jjpk0icngbt5stv90h2vmr2\",\n    \"createTime\" : \"2022-04-16T13:44:02.884155Z\",\n    \"earliestVersionTime\" : \"2022-09-21T13:01:02.884182Z\",\n    \"defaultLeader\" : \"2y18fm3x6\",\n    \"name\" : \"Micaela Becker\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"zd2fispy6ztduvuaqx4qlbabsxu49\",\n        \"createTime\" : \"2022-12-13T11:58:02.884283Z\",\n        \"sourceDatabase\" : \"dk5hyqlpmo8qmcy9j17ukjujfgnlsc9wfbplstl7el1bgzzdp8fsr5qai9l2kginp9qy1marivj9kta80ia94f1xhuaug54zvbonbew63rkwcjvzdy8k86416lbmj5i2ou3lll48\",\n        \"versionTime\" : \"2023-01-19T12:03:02.884329Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Mrs. Aliza Leannon\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1768186966,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Consequatur facere rerum enim illum. Consequatur perferendis natus reprehenderit error natus eligendi. Vel velit at minima debitis tempore.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"kv8zq8gl4ezd4hvr8ion59x1vo\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 424316442,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quas molestiae non reprehenderit dicta nisi rerum. Sit dicta rerum vitae voluptatibus harum nisi. Aut ipsa ut. Aspernatur veniam libero possimus. Soluta sint et mollitia rerum quasi saepe.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"fihi2u0rpfrtp5ws0c6hf9hycejn1j4hiwbsxrmisktzxqao2i8xamdo5jivsf8mx295ayq1g67iosju5azxmui88jgh3o81yxv5sojgvht9tnc46v\"\n    } ],\n    \"versionRetentionPeriod\" : \"twil1t8imm9wgzyjfvk9icolmdey0wbunzz1lax8iiql60kukgjd7tf3d2he0gkrtjo2d76yl185qe9iikg02zs6bofnby1wpxzu8cx8x20kxqfzatgk7ohpafqttcq8l5d3ze\",\n    \"createTime\" : \"2022-03-31T13:59:02.884603Z\",\n    \"earliestVersionTime\" : \"2023-01-27T14:40:02.88463Z\",\n    \"defaultLeader\" : \"pwatkol2vz4hs75wv43fxy6tyj0knwu83onvhvw2fwyg3vl4nuxkeav8m75qdtfwe6ftchkhxlbn1unp5xon0fb5yxwrgbzbo2xpa1d0bksmiwzahvumfrtf8evtpqogmwd16jm3zpw53x8cz1xbycy319w6f\",\n    \"name\" : \"Honey Zboncak\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"u8d1jxoqua4ti465ggn4exhw9i4mwzgpkj1xlaas8pzrezuez4i196zivfl08xvbu18zvwmszpffubdul2511tpggbb764nyso1jnafp73qhqpi8dnpxqr6b9vcipriq63t\",\n        \"createTime\" : \"2022-09-16T13:38:02.884739Z\",\n        \"sourceDatabase\" : \"huf3bntpacl4xtkiiq5587\",\n        \"versionTime\" : \"2022-09-26T14:18:02.884783Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY_OPTIMIZING\"\n  } ],\n  \"nextPageToken\" : \"v3zn0m86z1n6uizc55gv4hsuijylz2wwaulquojdcrrk6i8ante5mhncld0lbfa8o0lsl053zizjs50wxfx1viszt9vo4l6duvvnuzikoxfuxr4h56c7ln6qtxs568bf2xk10rlj0x6jtgo1l4s7qc19mm3m9gzenuwrl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34ea27be-c923-4db3-bc58-00ae54f086de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.885036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "f8437e02-f29a-4aae-b7b0-358c18640994",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/b1rz4gxnhbm2o3yz80kc75klqihzjvw1mp7j2ai96ugs09ua24ga2opgtqevrxyq9bp57yzx1shb1dv98950z38a0430yxv0l3hgklkrat0db1hbsmoh9qoo0mxskr/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"r6tzwrooednxsea58ro7kx9mzhsc7xe52jzhbjc0n1rj2p8b4rwalvkapdfisfl4ivq9rcf03yv6wmh418yookbtw4ic94qbw70aqykb6wxssc6zu0qk9zv3klcitkocojj33bkngaogqv3hid4s58ctc\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Keeley Smitham\"\n  }, {\n    \"name\" : \"Mallory Mosciski Jr.\"\n  }, {\n    \"name\" : \"Dr. Solomon Tremblay\"\n  }, {\n    \"name\" : \"Logan Hamill\"\n  }, {\n    \"name\" : \"Jewell Gutkowski\"\n  }, {\n    \"name\" : \"Jayson Goodwin\"\n  }, {\n    \"name\" : \"Joelle Ernser\"\n  }, {\n    \"name\" : \"Viola Dicki\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8437e02-f29a-4aae-b7b0-358c18640994",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.881014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "75b9c30e-9071-443e-b77e-e5c6a09123c1",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/j3mtmweh/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Christoper Lynch\",\n    \"error\" : {\n      \"code\" : 796251011,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Id labore et corrupti nostrum. Laborum sit id enim. Ut est et velit. Voluptatem sed quibusdam asperiores molestiae et omnis enim.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Isidro Witting\",\n    \"error\" : {\n      \"code\" : 782524631,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ea possimus expedita recusandae. Sequi repellat occaecati. Facilis rerum quia laudantium in distinctio vel in.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Frank Schneider Jr.\",\n    \"error\" : {\n      \"code\" : 1001471787,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Porro hic nihil quod exercitationem. Quaerat temporibus rerum atque molestias suscipit odio eligendi. Quia voluptatem exercitationem a. Dicta possimus ut enim facere. Ex omnis quae sint alias hic qui \"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Jacquetta Pollich\",\n    \"error\" : {\n      \"code\" : 1162827590,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Deleniti amet cum dolore voluptatibus praesentium accusantium. Adipisci porro sunt ea facere architecto magni sed. Molestiae non numquam id et. Officiis est aut doloribus quas itaque sit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jules Gleichner V\",\n    \"error\" : {\n      \"code\" : 1990296847,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Suscipit possimus vitae excepturi et. Sunt a delectus eaque hic. Eaque est et blanditiis harum. Eos quasi ad facere. Odio occaecati aut.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"n163m3u2hrloojz36yhechp3f8idl0fzreqn5ibzmh3y6xw19uvsimlz2baxhdk0vr1lryurgxkv4pf6b94quaojt4xfe2iy8w38cn2x4ekym3s6wm3jmtec75tdhegp1ij8ctmxd04fozzxztu0bjf81yevni\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75b9c30e-9071-443e-b77e-e5c6a09123c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.880596Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "cbedf9c6-c347-45e9-8a34-0d3c0a50736b",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/nw4kjskwjk6c8wl5uxir16prtx3emc7enl44hhn51cqik79wfsuqfzhudrymcj6vxyjtoypr5lzbhnohotrjbie0rnjj9hmhpbkk7kle56mp75j8gvn02gfmynr02np3b0cvnq0vshxtvs22/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Deann Hickle\",\n  \"error\" : {\n    \"code\" : 1032297629,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Ipsum deserunt sit nam harum expedita placeat. Quibusdam qui repellat reiciendis. Qui aut ducimus excepturi maxime atque vitae qui. Voluptatem aspernatur minima natus fugiat.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbedf9c6-c347-45e9-8a34-0d3c0a50736b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.87997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "53850e07-698b-41e8-81b9-e042db6afcd7",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/mp9gu5q0qopo47a2srd8xkvmfj4uaxzcw2wsxzwv80wrvdxqkkg2a1ryby61j69d743fp8c6kq86wcj4m0hg7ynqbw05xcbujq69jncn9yttsni4o68qz9ld76mj0sdrrl2yaiplxrcjeprjhaqye5ezrr7zjae49sax77fg257lrnenxhxaipy43/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kendrick Kessler Jr.\",\n  \"error\" : {\n    \"code\" : 1084553394,\n    \"details\" : [ { } ],\n    \"message\" : \"Harum ratione vitae ut eaque quis aut. Aliquam cum inventore. A nihil vero itaque ducimus nam nihil.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53850e07-698b-41e8-81b9-e042db6afcd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.879788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "a7111d9e-1b6a-40b3-87fa-3d916f70435d",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/h23901e6hnowyimv7vfy9m9a6uowdhnd15wi6v45f/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"xyk4wb59pwkhjw1m4nijqqwdu\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 594347127,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Enim ut et. Illum officia perferendis deleniti. Voluptas enim cupiditate deleniti quisquam. Distinctio soluta consequuntur ipsam repudiandae id autem.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"nh28fj95l5lnsyw4bqctfapciq3j7k6clq74f8hjmh5tm867u8olxnklcgl228yyj2oa10kjtd6a6mgx02yu763lwjiyl5rd5wdigekl3lsihlazvp32qx6q60yved26bxy7igvy7wat877knl5ig2ycry\"\n    },\n    \"database\" : \"19feckvvm9g2esatlv46rjmjxgs22tmeychg145ip5ttb5d09gzle7672j7qwot\",\n    \"expireTime\" : \"2022-06-28T13:50:02.878597Z\",\n    \"referencingBackups\" : [ \"l5tg0fo4o13zgy0g4nxuss2628\", \"tm0k0a0wk8xorous8644lodq0bsyiv5b0kakaahsboge21zy6fkdhxc8rcfc7fe0c96gtt873ssdftvo0a1t8it1bds9e8cnlydoidr02l7d7ogtmqzm44vbb8udlr97f3u8tcxgc7maafyd2ghlnh96bxu44unx7nmo2lx6n58ossbli8jmeexgnpzyhvgo8bsn\", \"iysys1ni1uqdn20nhnos6cr7fo12gx5bfvfqsurg4emw9b8xgetzikduh9cm3vo9lxkk5nx6i5syd8fnq5nphus03y7u558m3gr0jba7li1dsnq3aep38h7u930mg5a5b1h1bjt07l2scppvpzf0mmj3bx9rwrekj6kro2aqlydovl7lzetw71nqsygx3xn1o\", \"khow61b8stbobmkknrerlo0z4g7kg74idza77hj9syrw87\", \"tbjp1lu19kqtn87mflas3tmzrrqxyqrwbcte64qnnqc22acc6a9ewmav7787x0g6w21co2r56ajui5j0fri1i09ll4te2txcxb5w4e10lhvp61wh4kewqh\", \"4mu9pug9hwtv7wb2jbu6fsdtb3v4fdmlvz670d8qmshpukrmloow23q4lrru9utkdlehkm20niqg7nmsogi0wnbehs5ff88bm98g5i6zbfe9bpn0jc53hz7836khxfkeynt83vf4zuy85manrkq0aiml786icnotoh9hri9i3wq8dbo447vh1u4xw35jmxxx82oe\", \"12j0suu74ey2ud2fqousvfeg6myfbuatavhv2p6m9caxrght7bfmsyjddyol39gqtszg46o6sevndtbn07jm4g8iyo1f9s8ot\" ],\n    \"createTime\" : \"2023-02-17T15:17:02.878671Z\",\n    \"referencingDatabases\" : [ \"x4y7y8m22jq8hik2ch2f0k62vghqoj7vs8qgfqq8uwpjxj7o5hq77l14h5bdfn7n0t3oz7mtpe6128eipzhckh2s1g5o7umxdwozedkl1w5vfmqssm7ifmceem6emtchb4jxg7n4b7ylk2mbpyc8etj8ijgdqy4nhib16pw6y6hzm\", \"6ok57n5hkqjorvgz9223wzk9m211e9u991amg34tx6mjkxd3tuatjv4ofmf2z05sqe75af1gma3yaog6ocqf93qohjy37c85y13n12i5q6p7qg0lcnmhdavwsbmygbfj70l28c0ux2xgc4vbsy2rtlfq0o4q4xmnvellw6bpju5sn8nqlnv\", \"2sy86jdbn263v5g3zf0o1yv6c2nbrque1uqy1lhkfvhbbwtvu5eot3kidmdu1nccpqklfzsnegrzfw5nmr4y9nxxq3jkou7mwbrj8p4cb6jgz9z1lwldf0ed5kuxhhea82383mzrcv926ygrkpi2orn1hytt73qzb1t\" ],\n    \"versionTime\" : \"2022-11-06T15:06:02.878724Z\",\n    \"name\" : \"Jerrold Kuhic\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2023-02-01T12:51:02.878807Z\",\n    \"sizeBytes\" : \"0ivyydi57r3yghkwqihkwssowzvy5jqv8d98kobl8wkh1gyja9ri8vz4amytu9g7vr560q4udd4lor63aaam5f8njfin1yumu8jpi9h8v3uvzn6e814pq0jmryr5h6excpexe3r85duatow3vot6mcczp89z9xy1hcr949h8wv2nd5fa0diy6tzz1zz8vet0y\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 2099560470,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Minus nihil voluptatem vero tenetur. Nulla unde deserunt ut. Doloremque repellendus quod.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"wz5a4\"\n    },\n    \"database\" : \"81lx27efd22j2n2jhmsaexpr0elhxhuw28vkx689tvoqx9i8qi2f2mrl6warg6qxq9hlcrkz8ff95jqpd5hidou0z78nek2bzfrtraykq1\",\n    \"expireTime\" : \"2022-06-11T12:50:02.87894Z\",\n    \"referencingBackups\" : [ \"x3uszeft92tocwd7ilsqi99s27ruqhnxt2876gi01qs7kfs86fqynmkluy1a6o\", \"780bo7p6kw9oh6sjyexvno5t2z9hwe0qneqm68rcifjxwfii2pxnun9qbsooa92xoj47bytoez7i7ddhxug0bkmsr0f0f3riug84grvc44lqzcosmk5hw71nkelqepmtcd1vz4rkgl17acgwug6fr\" ],\n    \"createTime\" : \"2022-09-02T15:32:02.87898Z\",\n    \"referencingDatabases\" : [ \"jz820ac0expkqdzrdqnex29k2gtx5u7gnw679zg21v8ahk\", \"lhve0woramgrxlsfya1l1ntd9j9bab9q0erqupe8oxn00ev7q61ybgsetf0f5adpnu8ipym6rngozylyl38wcfqustwknuq0qwqo5hs1bacj1nyriwzb8ncpe8oc1680a1mhq5k2t36fou2ia2lzn9bgcm1tzafb2\", \"7zzveajwu3ewca8ihmh4rp6y11smk9izj4q0te\", \"foor4tv8au6bv3tmzdit39lifo21ndh4djjs5fsqxmhowre133e4krimvr7ua2rdv503y95o2u2ue9r4pvog5igja5c579w0zjd1x\", \"2a0rekcvfhewxvozyyjvpo0c5btsm74qx838gsanzfm1n1edl9wysfpf0me9uwccaoz8rzniv9oe7mkg1o7kxbvcpjapj3e55bnvn9kyuuvwk7785zlfl7vkfx6ji4ief8wz423ug6wvk8tiufif41vlbc9b\", \"n85wt8lwq1\", \"guc596k08n462t8mv7krszyig9omblcj3fgt966llixumxzq0q3cz4vacp37syzz34g0fheh69z2w9127xt5l2kegn02qh5zm7s4nw5e4busmxuozl49k6d6mzdtpnf99sbhmx6ujp9t7crmh9dx\", \"b7s4638jer53c3egfxveq6re2bdv9txf4preceb9icf9o1indgilwzei4vm216bl27a1dplk7bbpha28s2rtcjpt6yqfbr36dyqw0vrwi44i1yezan68oml3ayds2ykz3eu0uar9hguk1wa7y00lpqen6yzo387gm4fnjaaua1uv\" ],\n    \"versionTime\" : \"2022-09-20T14:08:02.879046Z\",\n    \"name\" : \"Annemarie Huel DDS\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2023-01-25T14:12:02.879119Z\",\n    \"sizeBytes\" : \"km7e5tmwct092yo8ka6xaecvv6n6z0ue5hxboknz0cuyrxkpuugji6fwwguzteh7oz4y2xmnrqya6yj6nr93ysibht4fr\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1394794876,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quas dolore et enim cupiditate quibusdam. Officiis perspiciatis voluptas. Nisi qui sed rerum numquam. Velit et laboriosam animi quidem a omnis qui. Reiciendis aliquam veritatis facere iusto.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"tntfwfg9jxfzkj6sddbceejhs3zzkryi8h22nr0ase2a5fseewjclcx9tjylif8modr48sbf9te49or9jil15oise4f1tz5yqje47a2pw8aesjiaft7qpsce016qiy4t6b4v50cby6t47reu8kyjdefb7or58h5\"\n    },\n    \"database\" : \"m729jeaa717i66tcp3nbqxjso4xq8jcwv9210v59eca07svadl26mh0zj9khpyc03vehkvc2692btyququ2fsvu3k31j9oeua70bhzek2ga1490ltmn08ih64ocfkpyktk19leslah1848n7hs9b62egiqs92wh\",\n    \"expireTime\" : \"2022-10-20T14:08:02.879262Z\",\n    \"referencingBackups\" : [ \"ba2mwkx7so0mznly010xw8dvrlcgfw0bz8qmuesn1vo0jsveovl3wc61e5cx1gf6ky54apsowohowrodq6y1mjuw285a1n2m5sae2t90hd9vk02fbc4ekhue0xx\", \"2d9ayz47nalnuim7ym0tkfzvlwwc3apst5obeplx5b6xo1uoru5x5qygorzcaonmwnw8btne3ddk4sv9xhhkjuxuq1mj4w62ik115pgyeldxhujt1ecl8qs43f26t9hkht77a3hgmd8bfsueb9fc\", \"y77ztwn54hnd2823ida64v6uxkqfn9n3a2hg\", \"nn747m703pwhqd0n94lxe2nl3gp64igdevclazw5y8lbzuai9cjxbhwn3dysy2dmc21mb1btqwmenx0i2bfvhaabc99ts4gillphmn4a2phd9lcn0ocy623lwsrcf6r514csiuvieifk2us9na3aatwpp9bx7wwn1fn74tjartuox5m\", \"0cn7h69pc328uj3u6pwibhyq7tp59edi0xwnxfubeiy3q2vc913x6kjrcmul8up9it9d7dpkfyj1dg4n32gm46c2x9k11qh0xb4rip9qemmt3g8ygbcy2g1u7mpuajipyxb3gy7mgljrkuzuhm3699oxmdvyc83t0yevcohf0ptj07vjqih93yj89e7nnucng\" ],\n    \"createTime\" : \"2022-12-11T13:52:02.879318Z\",\n    \"referencingDatabases\" : [ \"o95hahbvi4n0buln2qpkjqa6pspmze5tyfbr7f0e5icf4k841axrqlana3vhy0ryfqdg9phu1uh2mr3iqhtrbykbiyzqc9s38d1gmzp8ip2h9nq4cu61e9zbcxlots76dikg7bssal2xpuugsngbfxo3tflpyl4d14q6to618j6wi62vhz\", \"p7i17s0j0wqla2hjhl86tdmwjygg7a8a6iu05mgi0qlotmfn9sxkm5s9nqid9f1n6b6p4ymjx7ncas4ivkab4lfnu1ccivck77takeq20bvvhow\", \"yx0ak9l50hxyav5ve38f96dz9c26bozi3hsrv6cg1cx5jwd6o4jbdrupxwexmwt5ioqvwnymly7cpt6rmaogvgup6qa66uerwtwa1ivpsvqg65b8osgvgu2rp0h2xydg8xe5j88wnwbxh\", \"8qr9ajn5x0rqhwpu668d3oxk2n2ijiozet2gglqcu7zzgjpg99wwkziic099ugonbot09eqirse98itaip4er2yl11k488g00rep76sr0lituwi0oo3exzvoh8f62a1vtb49y8j7vctal23lxhhldgutfjibjpawqz2bwd82m8ygxgy\", \"qnngw0wxuieos8xk2i70hjawwyut2zbwkisv488ea7\" ],\n    \"versionTime\" : \"2023-02-25T12:53:02.879372Z\",\n    \"name\" : \"Londa Hoeger\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-10-29T12:40:02.879445Z\",\n    \"sizeBytes\" : \"uf7tu6d10b\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7111d9e-1b6a-40b3-87fa-3d916f70435d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.87957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "653e8e84-c479-4b05-91cd-ead7f68ef98b",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/goj6rka21qswto35fumfvh85txoeogme5ivwra579bj8p5okkuvkz44pd953mqw9tuh2dywrrj9t0kk84qjz4bbvwhg5ekinhjp2e50bl9yeq3lxy6cadioujzsawwjv1ygi9q8rgyuz75c29i5fnd/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Otha MacGyver\",\n    \"error\" : {\n      \"code\" : 1623159423,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quas voluptas et magni harum harum impedit. Possimus libero quas quos. Ut doloremque fugit qui.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Hans Cronin\",\n    \"error\" : {\n      \"code\" : 1008707430,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolores similique cumque tenetur ipsa et vel. Est non nulla debitis velit quae dolorem ipsam. Officiis rerum ut incidunt quo molestiae. Perspiciatis rerum et commodi repellat eos.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sean Goldner\",\n    \"error\" : {\n      \"code\" : 963845676,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Necessitatibus quia mollitia. Omnis in id nulla eos voluptatem nisi corrupti. Eius dolorem animi asperiores omnis.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"i3lfrslqxwrqicu86pg8mhp3mqh0dq5if16u7g4bwenlb8v16iln7trikxtdrdz90y3ua932r048nbiiono4158qljso3dgkj5ookkrbuhy4c9m2mukepkftjma12pp15\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "653e8e84-c479-4b05-91cd-ead7f68ef98b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.87843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5c0dccbf-52f4-4c25-b272-3b79e8fd2d20",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/vxa51ku1uwbir4qbce2y3vxar07n87xkfbti3b5xyfa4bkgeuifknx1335vy7cat35vksme3fj04b6sltouczi44ahc9lc2qzcnxhu08y0ug3im274ptcy9899g91wn9wuaq4nn2yvc5gw3jwnld34yt3oplusw492b9e8vfjb1as7h6b4p8y2ee5ao6ms51nd",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"uggrws23focbs57pubrrccyigswk4pup\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { } ],\n        \"endKeyStrings\" : [ \"q4vysnrry3lk3vqxxhi618kqi156y5ne41hq2r2yu72c9a86d2e94ir7vhcq73be\", \"5je91rg3gt19zu3itr9co61qq6u2l2rn6gq0lkh\", \"o6goy6lvw0qav37qjn08qhuzj0qx4jpx1cxnm1n79ihqy93bcu1amb1hydrz5al846e8jwrp55yv7xaq6r7ucgjongbdqfu0xb7dwbhd3y36x22jnio6t\", \"w2rl1idb7\", \"91q3ku27njijlqgwyb40gflbxcnobb9j2rh1kmbtz3z7raczy2yfipiy7hxlmqbcqz7uejh3zx364qwr4czj17tjfqs4jjc82gmqivvg972u55v4od9c0t36fks55hli7\", \"9q741856hoxzb01am3jn34z0brg3wra6qan82un8dxqos5q1t1zpewaui79hnnprvn3dcnt3rqsgfkfw6dr3cbza3id8u7qrcixlqtm5i32jnmp98ypt4my0sous\" ],\n        \"dataSourceSeparatorToken\" : \"ngx0mj2u9a5zfcz87nmdkvz2qh5m9pr0wnautaxukjeptsqm6a88auywlwppeqw6sbu68zlbaw61mrvr39qxkulhfzv7ccuzq5oqhmf5wmrn\",\n        \"diagnosticMessages\" : [ { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"npb96d0b3e6fse9x8cl5dvx2dm6nv12oybk60t4ixeysrf75i74tdcbv3u2ihu74xnatgldr9x9i5ijj7t6t05t0l7myzc0lw9yo8bguq93jj3n8u1k3q1nt6im9se7n8a\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"oqpay6sop0bh1e3geym55b5j2k0qth5y2z7ksbi47zs5eygef\", \"4tzhh2ukb0t2dr6sduaxu7qwzeg20eqo1o\", \"fsyfw\", \"pm9c7py2uj803fe5z1e2m7wdhw0z4vshwem03v69ifj6opsypj98ktgz38f0qhk2nadi5i5ye6w2nhejsski2vd5jny27o28c0kh0r0iq6y6l3az9fpwrnfowtm9m7br4i9bk\" ]\n      },\n      \"startTime\" : \"2022-06-26T12:46:02.877206Z\",\n      \"endTime\" : \"2022-05-31T15:02:02.877232Z\"\n    },\n    \"name\" : \"Brenton Thiel I\",\n    \"details\" : { },\n    \"startTime\" : \"2022-12-17T12:32:02.877299Z\",\n    \"endTime\" : \"2023-01-06T13:12:02.877326Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"bgyctutouzj51az8u9pbep2854v4qkj9ak7dicm6r2peawbc4qeahrba8l4wemx1t2hjwcfxicdu34kamumsl7987mhwx6m35zk6wrszvqkghoysqjplbiqyvs7530y2j55qtl1eu\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"k2npd3oga5uh\" ],\n        \"dataSourceSeparatorToken\" : \"kilsibdzdazfqcrqtzq0j7rmj9maku1190duolr9l30wjv8trybhwympcxbg\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"8d1msa0lhbiu1f2uoaxuzx9cibm9r6c1vmw\",\n        \"metrics\" : [ { }, { } ],\n        \"indexedKeys\" : [ \"na4up3trpor0fgo9uzv1shfjjmfw97krsc497otk433jmiw\", \"b0afchbhqddk6souuuict415lh6s14le5r9qk27346rkcp7bnmdlt0wfow39lkiftaad49nltggdb982n2szyaanw6tywkjwvy\", \"cw8noanunhl6qd21xlg48tls6d8m1im053le143afmpsl60tgd9cuccf1ir4a3\", \"9j0elr4dqc6hnfjx94m1zfl3hzcj95agjlsdv4oshp3y8xgdcqp421v3ucycebixuw398uo3e3vcyxlyln0l\" ]\n      },\n      \"startTime\" : \"2022-05-29T13:21:02.877473Z\",\n      \"endTime\" : \"2022-11-30T13:23:02.8775Z\"\n    },\n    \"name\" : \"Ellis Reinger\",\n    \"details\" : { },\n    \"startTime\" : \"2022-04-08T14:50:02.877566Z\",\n    \"endTime\" : \"2022-03-29T13:58:02.877591Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"pwwww6xat6lc5rf2eedummpm3kyzh6f6vq1\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { } ],\n        \"endKeyStrings\" : [ \"cx0yvd9dcvm7tjpabl92t8bh9rho\", \"a4md7iaivi6yw17brpunlrfj3trapspriedudllxrc68ho3wjbdxvxknxzp1hp1h15x4guwfig7dh844pw3edi28\", \"68z2zm7sbfajbiubys1k3cghu\" ],\n        \"dataSourceSeparatorToken\" : \"1fxfw004e6y6oc9kp9smrzlglhi9v0wr2olf3tpemanrwthmuhu2t3gvwl0bpd2yo051t\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"vcrhrlga6q9k9xge\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"q6xzv6rfyzpabx8bpnhbb17duauc11siu4a4h0ub7kj1h4op73udsgl94m35q3msb7oljzdkbks1pq5815j14rewja5pd1clead1emodaprqteshii0mm9h0mp8o0z0qz6rtwvg2nben3fcrbhcmmlzbuzs1lh9y12r5nd08f7kiizlmo7ljwprxvexx68o2l2pc\", \"zrfh861bkb1unfh4n4xi6irhfjb3y3has5bupyk1lkv1bai9t3bwa84jdsvimndfnb7e1v45v1mwr0hugze8zeg92yi7\", \"7uy4yhpjt9j4wvw3febi6vnubp73uxc6o6ysqmc78p2mysf9leob3r58eatf0tg2ystwdjed9hmks515n8vbm1yxmdaptolvcd84wnlr0oprzam3nuy8iw0th6hfv1errp9cf6qx4rlwncxajlfrwkhbshaf4c82kwe4hcgk73o\", \"su0htzlax20lfo9zh6cpp9yof3fqmeygwvus8pmrrgd83x87l6p850ww4tthihlru46kvlrpgvl4olgdt9dtc2pxeenfl38ttisv6a\", \"l3p9fvz7vcb70gu26i5ifm9vw028v5whhwrvf4pbrziwp4wzfrdpjhz8nje8zz9141\", \"rp1hrg1d9ijdupwdkopych2mt6el90vkso1a20ybd2q6pxkv55l10l3iswv5aha1e0yg60hbgni5l3z4u8j7lzuawoz0i0ez3zvv3tr0asv6fhm\", \"oflaiw8uwnnoaybbq3ts0wd5ux2j9wyl8f4s1d3bjax8cpxm08bee7zleaegs197xuy0r1hjsxzrkwjg4tz5pyeqc4oycfpqlfse09xedkm1s3c2xbcn7vonls1dxgs753eluofyjm3yfisu9mw1u8s0lt58bmj18lsq2pslpbchtlbml1hf9vjdfc0cqr0ojuy2t\" ]\n      },\n      \"startTime\" : \"2022-09-14T13:46:02.877769Z\",\n      \"endTime\" : \"2023-01-18T14:23:02.877799Z\"\n    },\n    \"name\" : \"Mr. Teddy Stark\",\n    \"details\" : { },\n    \"startTime\" : \"2022-12-22T13:05:02.877865Z\",\n    \"endTime\" : \"2022-08-31T13:59:02.877892Z\"\n  } ],\n  \"nextPageToken\" : \"5mhct62000poeofekgtu3evi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c0dccbf-52f4-4c25-b272-3b79e8fd2d20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.878009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "d0bd143f-16ad-46c4-8f39-aa49136cb922",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Humberto+Hermann:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0bd143f-16ad-46c4-8f39-aa49136cb922",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.876987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "f41c2f5c-aded-49d8-b731-9f438111ff39",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Brent+Leffler/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"uet6ybzca43490mr6sal374lonwuhgkvhdi1mm8x2f5hwk2kn6ilf6bduerhzoxozz2noduy34v3550dz63vvnvn3g5i1v2zo\",\n      \"hasPii\" : false,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 1791951596,\n        \"depth\" : 795174131,\n        \"endIndex\" : 1018438536,\n        \"dataSourceNode\" : false,\n        \"word\" : \"8kmr6uq0nzfnciq1t38rhplply5y07bf9zn673el5c9bhtrvgbvjhqmof6ed5pt2ntiwz6guvpaebuufsg6fugn13m4q8gc0lvqjqj10hbaplblskomzgykdwgv79gc6xhpxhz0zeagaign7cd8gshismhmagyl77nll6th7riyvcsh46w7hcg7lely\"\n      }, {\n        \"startIndex\" : 420678517,\n        \"depth\" : 918131464,\n        \"endIndex\" : 571075521,\n        \"dataSourceNode\" : false,\n        \"word\" : \"glgrzydfjukjyewabmdl8gzcxhmmknn4ccw8q25jev3wfcbn1dkzvhnhf57viql4elb8u21s001h6wmfoh4izhk82rbl95q4qow3lmsa1wjppqy4i191q0vyi6t0tnm0w1tsi0nxh7ykkqbg8hnlep3nv6dlf9\"\n      }, {\n        \"startIndex\" : 625197578,\n        \"depth\" : 486341246,\n        \"endIndex\" : 264757379,\n        \"dataSourceNode\" : false,\n        \"word\" : \"m12jpy0uelq2cdm7hypxe2smtwlc08i3276yytp1xs3sdj1ahd7ags1y1j5ahkjc0ib52vd1363fxpotd6ckbcb769h29moijjyrpatrf7oy\"\n      } ],\n      \"endKeyStrings\" : [ \"9mvpd7vu9oeae3njl2pwwkdks71z8sh5x8kkyjttp796buc742n31vseu2x165kmnetjtq2mq3vr79teyau3b6okx4jylzpov7rqeiymr7lxqr7ord9ich568suitqg4jkklo4l854e4j\", \"s5kyxlhpdsl5cd93nw3ptw7rsplfgzipvlfew71h5tmhz0pu3raqzo10ojxjy4t5thf5ft9\", \"tc37fs6nuk5evlvgg5x8m3c5wnur5wvbc4vtby371firmfr6xwxjo6ayoy1e0wnnp3tygvsfwux429scvkk79pyimqk7u91eds7vq2ofmw9mkb4sdrqlxivcazrjlo14rv5nwo3noqrlgh59gbb0jnl7j15p35jofot24ppkla\", \"iq1dqwzcpttyi44xd2\", \"fao6384fuhes1utj3ab36mes8kkmpv367y0h22w6bqxvb234xgygsod48t9mw14bl36xdkudyp61gf8q6l5oenvfr7oe7ufjrhi32\", \"x7k6u9o\", \"a4yo989pk8bt1ekzlf1qz8ud7hcrpb6lummqqa22j7fwh17hz2btn2lhypk433ggi\" ],\n      \"dataSourceSeparatorToken\" : \"1pcd7xblczwjhtxipxj4lvka2ardiyy6mhfg\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Maxime labore ducimus. Corporis ut et nam aliquam. Assumenda numquam nisi ab qui quae. Atque ea labore. Eveniet atque vel molestiae doloribus minus laboriosam.\",\n          \"token\" : \"gxwxkc6fmc5fbw70j919y7gzepz1aupriulmgo2ivvvzao\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Necessitatibus adipisci ea. Mollitia nostrum magnam autem. Ad hic consequatur a ducimus et nemo veritatis.\",\n          \"token\" : \"x7wvaxukv9g0eu0ig06je44i2lf9ywni77hsbcp0l\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Dolorem accusantium commodi praesentium dolor est. Temporibus consequatur et aspernatur. Eum eos eaque qui molestias. Est incidunt atque sequi doloremque excepturi quibusdam. Explicabo culpa numquam s\",\n          \"token\" : \"0p2lfdlaf4\"\n        }\n      }, {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Error dolores alias qui aliquid cum. Incidunt provident consequuntur sed ut dolores minus aspernatur. Ea unde autem sed. Omnis aspernatur laboriosam error a est aliquam. Quos alias dolor reiciendis na\",\n          \"token\" : \"mi2vfjxx1ao6ty006x9ns20q9hbt7i2netuwn05fnwbtbfodc0ytyotr2ztia75oi5fotcod1we9cuzs0eahil6rymr6jpeiv231q02w5afalk7h2b1f2qd6q8o2hkh7rwsiuva7paplq0unebts63kgxr9sxnugo3az0yawvol9qvy8c2hzv35g\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Fugit quod architecto iusto praesentium dolorem fuga odio. Et ut aut provident esse. Quia ut suscipit et impedit non asperiores.\",\n          \"token\" : \"kgdnuxyr8s2zycjd7sprml9fdlq3nu6i5lryabvxp29s8ddffdgq146i7jt88kjb9zn9jvhzxu1ugda7nhcsseylfa694s9sfrvy9xpzedcnngluoxkcatqbke15lwnaclpfsh\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Non sed ipsa commodi vel nobis et quibusdam. Accusamus nisi ab et nulla quos voluptatem qui. Veritatis quia ipsum veritatis totam ratione.\",\n          \"token\" : \"3wptrtbjfiapd1x1rbcupg7t19ngl48kqrp3fwvi1j668sdm4x3xf2wauhnkcp3piuhfhhw7emby7w81gqhspl9zrhi9rwqval5aru5ho7tpko4ii92v6wobhzlse9plokybc6jc1hpxrn2i82s46pmiu1elrcfj38fjyoq0s8mw52yrp29\"\n        }\n      }, {\n        \"severity\" : \"SEVERITY_UNSPECIFIED\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Nihil est dicta perferendis in mollitia. Et laudantium sequi vero consectetur atque necessitatibus aut. Eius sint alias vel nemo voluptatum ea. Corrupti at ea.\",\n          \"token\" : \"ky6qfjlkvn\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Ullam nihil aperiam laborum qui. Repudiandae repudiandae dolores molestiae. Quidem animi iste. Autem dolorem ea aut. Ab quae quod soluta sit voluptas esse culpa.\",\n          \"token\" : \"yvp1fv5lslw0ml8tkhfsnbc33uid2ufgwmxxhrnxyk0naxwtht6pksa9oh8je9hzk9fvhifurkxkm0ba6fw5lp9mb3353lczvnmf9zev4h21u7mskseigzhdjgfl\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Sunt rem a aliquam in delectus et ea. Earum quia corporis qui omnis corporis. Excepturi unde quod totam ratione laborum voluptas.\",\n          \"token\" : \"8g5h4t6ftpu7n3zbgw9h59a6ygglc6w6dlubs04dc0y4lcswi5i49jp5g3isg9dp9zgbixua3xrgx7y1ppau\"\n        }\n      }, {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Sunt quod corporis totam nulla et. Omnis quia aut saepe. Aut earum sint. Alias ad perferendis at ipsam perferendis saepe cupiditate.\",\n          \"token\" : \"euwojl4k0nyjyi1b213em6hqcb6upk881twrv5lg8t1ki5nc8952t1pq\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Et commodi et aliquam voluptatem quo adipisci et. Pariatur dolore accusantium nesciunt vitae et. Aut excepturi molestiae eos cupiditate.\",\n          \"token\" : \"bv7q1p7skreqfdvep3qqa28qg6j1xr\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Tempora voluptatem magni eum quidem rerum. Ea enim reprehenderit sit libero rerum. Dolor officiis vero aspernatur recusandae ipsa.\",\n          \"token\" : \"fwxux8h41sliinvjdvoo3zozj7xe1jiluzx7weu3jtwvy46ef86nxzdu8pyr0wmef066u2xajuces77206uibfmilu35v6huu102dfspdfn7ewqjd\"\n        }\n      } ],\n      \"keyUnit\" : \"KEY\",\n      \"keySeparator\" : \"iv5fznykzcg6vlk9jmij739183nzd78sgu1x0wbx8r3quscn2fth35oldz8cd74mekxcg465muzhkyjtk0rrzso5dhk521ygn5lq1fkrlw7ql0xi75ul488tcgrjklicgks5xlkfw19yy3rmf3nek11i185i4jvu9e45r229oy4lt5kttaib5\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Dolores quia quo officia dolorem molestiae. Ipsum ducimus id aut voluptas voluptate voluptates labore. Doloremque eligendi velit velit.\",\n          \"token\" : \"vxnvi0g6erp6t6z4rqutaov4n1hddwea1obr7iq8pbsob6nfrk98yp47bceyk9dfoujjkgbm279m84c2u44o\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Sint non quam sunt fuga porro accusantium. Ut minus ut. Voluptas iste rerum ut ipsum.\",\n          \"token\" : \"xcu2xi0wppjja3680ped47osb9w6d5jhowfm30n6cgjzsk1c6p3ll19\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Enim sint id et. Dolorem quo accusamus maiores. Vel in aperiam eum id cupiditate. Voluptas iure quaerat quia animi voluptatibus. Est illo non eos cum accusantium aut.\",\n          \"token\" : \"yioy6qq3f312wx4tdm55mcq215zt002jqc6nevtvthhs1358afhpxenh\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.355502273625948E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Quibusdam quo quia. Asperiores provident illum. Similique velit similique magni et vero cum temporibus.\",\n          \"token\" : \"pkbt141j9gwc9xwxz126zrorjywej3qh7vmb0m9khnxme4v8o8myhkezfkao8tppwor6us3oethusdinesd1glxotnterqdzg0i6f8tn2uszerpqt4dnpwmb5kaz9bfovubjlo91nzjaws79ml9jnemmf60dtcmz5ujgp13fjndi8ed4v\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Sit laboriosam dolor architecto et repellendus aut. Doloremque et similique consectetur aut minima consequatur. Rem aperiam qui nam.\",\n          \"token\" : \"y047foqosyeyyghhhyupfcz3rmpvcsol9brb59yokphwkmuhaicy1umae17ofqwbpc911qtd6go1dh3yrxibc7zx\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Beatae eum neque optio eveniet suscipit. Veniam quo ipsum. Voluptatem ab similique numquam quibusdam. Temporibus vero voluptatum sunt libero autem rerum incidunt.\",\n          \"token\" : \"3agxpvdi3ylak4r2pvisah8gf7b30jgpij8sllk6vwob7k0nguvjtoq4i4y6t0aoaybkgxdceor1nr4o3hi3i2oaaxjfceppwpb0wrp24igpbe7y973z5p6dyqn1b1tj36u67n2z3jhx16xza0dshzgxnfy0cti40owauw2f6u\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Ducimus a molestiae provident dignissimos quasi. Esse rerum tempore asperiores. Et unde sint quis dolorem dolor ut.\",\n          \"token\" : \"1f8l0xoqha0phdzu7k3zqz52dk6ctrqdb6yiw71b2qdjodlxdtztrrrswxy5f4h4j77lweibrha30rjx93c1e6mb4zc9v9q22nx4juxazji89n41xhp4j8iv6nn8hul5dx2oqjfwcl1jziu\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.2792991694667873E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Maiores dolores qui autem asperiores quaerat sequi excepturi. Labore dolorum inventore vero rem harum sint iste. Delectus sint quaerat.\",\n          \"token\" : \"cqd51m3tvo8267ulsr29f79l319d0s8i414sfwe\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Doloribus est ad magnam aliquid cum minus. Cum voluptatum soluta. Mollitia enim molestiae voluptas.\",\n          \"token\" : \"ltgfcmm08k6ya7lhyjiw5z8kt02ijga3o92zo82jkyit6hnxeq3az8qj1mwofx9wmr785cbgbzb\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Id animi molestiae at facere quis iure. Ut porro quis. Atque adipisci a.\",\n          \"token\" : \"m04bqt9zf5ba7e12jzxvverwg0yvcwkdokw8ectxy91yg\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Ratione quia consectetur. Rem architecto voluptatem repellat. Molestiae commodi ducimus et molestias. Suscipit amet voluptas tempora qui nobis at. Est facere veniam beatae.\",\n          \"token\" : \"pd73vid22c55xl42ucmru04\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 3.289601050354831E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Quibusdam reiciendis minima sed ut sed ea culpa. Esse error ratione dolorem qui esse. In porro deserunt. Fugit pariatur dolore atque eligendi et autem.\",\n          \"token\" : \"osj4d\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Corporis sit dolorem ratione non. Recusandae nesciunt necessitatibus reprehenderit. Provident est quidem est delectus occaecati repellendus quia.\",\n          \"token\" : \"7x6oxfd1\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : true,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Illo ipsam dolores laborum. Sint aut voluptas earum cupiditate. Architecto sequi sed beatae est modi. Libero nulla consectetur aut aut ea ut dignissimos. Voluptatem voluptas officiis quas quas.\",\n          \"token\" : \"9oc5nw4wn\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Enim magni et assumenda. Molestias id et dolorem ut. Et quam maxime.\",\n          \"token\" : \"irspu54jwln8tuqg\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 5.553773458747985E36,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Quod voluptas eaque. Cum aut facere et minima quos sed consectetur. Molestiae ea voluptas alias ipsa ab aut voluptatum. Ipsam distinctio nemo assumenda. Eveniet voluptatem quos sit velit libero volupt\",\n          \"token\" : \"fv3h7eaf3scafr2kznktfkh00vcbp734o3cthawktih2dx8mq2u5xd9rvaz1nwwrpmpq3sncnwkjgjk3ybwv\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Et voluptatem occaecati itaque sunt. Eveniet et aut porro quia est velit at. Officia et sit error unde delectus vel. Eum sit et non ut qui optio architecto.\",\n          \"token\" : \"eoog79zz0z66kegpyoe5apm8g6uak5vokddjhntfoh2q2mrcovicx5xhy5l0juoj4lkfvj7y9eef4tern8xeexyniqlalvq7zjmocj7\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Doloribus est sapiente. Corporis autem eos necessitatibus nobis culpa dolore. Quia sequi delectus in possimus rerum. Mollitia beatae veritatis quam deserunt dolorum corrupti nulla. Perferendis repella\",\n          \"token\" : \"mvqxep2devv7saf92a2l33nvnh4qzwv1rxdidcv2r2vo5lwg9n78f80adgthbcamwu10nog7q2iexsuclucxzrfjoxrsgb8jlrbimr2uk2bekrib2tk57c44jptaa5ikxzno7yfuzmz0a\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Sequi rerum sit. Voluptatum quidem non et amet. Voluptatem quia unde. Sit totam quia omnis voluptatem eum qui.\",\n          \"token\" : \"nbudj8dme0izt1f4z6ho697a2idlickarow1hxhaxslvtz6wgloiy3xsvmt8w6n3a2d9st88h\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.8333965730516687E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Sit ut rerum ea. Vel blanditiis molestiae qui. Est accusamus odio et ab deserunt. Enim aut asperiores maiores dolore.\",\n          \"token\" : \"pqs4idqkyjk791zdxnjx0ckf7ww129nvb\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"znd3otou38uf55n61zzx966cpka2jc9ykutkn96wguwa3955utyetq2s9qkh9pzb7h492y0fw53mqklhvq1w79gui\", \"a6scc11zpilgjwgv3g3mp748lsj4zdjoqub760zec5vebiqe2jbn2qhltiaigzj3trurmhdzfmr0q51tu8v0phkkgr4dt1\", \"pwa7p3l6hvc4x6vz78p7cff8mwuu1eq7ddloh8zsqs86z2selssgkpyepmn00c40do6byvrbwo3djcpgp8rvj5s73y476f036nsmwvisjc0j9848\" ]\n    },\n    \"startTime\" : \"2022-11-17T11:58:02.876495Z\",\n    \"endTime\" : \"2022-11-18T13:36:02.87653Z\"\n  },\n  \"name\" : \"Dr. Hai Hirthe\",\n  \"details\" : { },\n  \"startTime\" : \"2022-04-10T15:39:02.876628Z\",\n  \"endTime\" : \"2022-09-03T12:23:02.876658Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f41c2f5c-aded-49d8-b731-9f438111ff39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.876885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "16a84e59-6e38-45bb-9b64-af153e02ecb8",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Aron+Hermann",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 1119274396,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Adipisci unde cum exercitationem. Vel atque optio velit dolor amet odit consequatur. Dolores ab dolores.\"\n    },\n    \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n    \"kmsKeyVersion\" : \"7aq1yafk1cq3md9x8q2zyzhkg2jfiuhfsg\"\n  },\n  \"database\" : \"76p5mz6ar50j5zm3fawinnzx8b7ahdt1jx4dtzwo3fmd0cnsdc8dzrvjw4g87475nyqo3ciez9086xqlkhg5g71erqzkzwopexyyn0yn91wqwmbbprda44ibthyakyh6aysbx39ggsk9x51ywwphppq515jymcxfppk7ur\",\n  \"expireTime\" : \"2023-03-17T12:28:02.873204Z\",\n  \"referencingBackups\" : [ \"69uua99osrtilt6cnmuyrmp\" ],\n  \"createTime\" : \"2022-09-04T13:26:02.873247Z\",\n  \"referencingDatabases\" : [ \"napwvs3zuj4q726uea759pgj51uc27zwv\", \"zpvzefct2wo0so17\", \"4n0vc10pts3vikjzagkiy2cena\", \"lnuyyv1l8h9g70l9p9n2hs90x1kvtta4dd7n791snflc872m9g9twwu6e0f6snb0ecnpntp6w7doqshzvggk1v\", \"3je03duakrzmmb3uuwd2uvjcc18e01lkn2xs9u006vs99z7vdruaic3wshv1zdxnsqukz0mymcxi55ll0s0r84h2t0qnmi51qmurq31dlq9f3hw\" ],\n  \"versionTime\" : \"2022-06-17T15:02:02.873317Z\",\n  \"name\" : \"Art Buckridge\",\n  \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n  \"state\" : \"READY\",\n  \"maxExpireTime\" : \"2022-05-26T14:42:02.873406Z\",\n  \"sizeBytes\" : \"ttdnkq0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16a84e59-6e38-45bb-9b64-af153e02ecb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.873658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "b898eaee-2913-4b47-98ee-2f7e9dd12ac4",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Michell+Schroeder",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Louvenia Breitenberg\",\n    \"error\" : {\n      \"code\" : 1682669632,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Velit libero adipisci quod tempora facilis. Et aut voluptatibus quidem. Incidunt qui repellendus. Molestiae blanditiis provident qui animi sit qui temporibus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Benjamin Block I\",\n    \"error\" : {\n      \"code\" : 1130105628,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Quo qui nihil qui. Officia aliquam optio repudiandae. Id nisi atque eos dolorem. Ab ut non sed. Maxime omnis illo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Opal Mayer\",\n    \"error\" : {\n      \"code\" : 1570906479,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Eos et et veritatis eos. Iusto iusto ex. Officia numquam nisi eligendi qui et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Wendy Cole\",\n    \"error\" : {\n      \"code\" : 37600096,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolor atque ut minus itaque ut perferendis odit. Laborum et voluptas aut qui voluptas voluptas quae. Sunt ab ut officiis est iure.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Yanira Bechtelar\",\n    \"error\" : {\n      \"code\" : 8863379,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Itaque debitis omnis laboriosam similique in et doloremque. Voluptatem minima aliquid quis ad aliquam. Alias vitae sunt quidem et fugiat recusandae. Voluptas sapiente accusamus molestiae.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Justin Abernathy\",\n    \"error\" : {\n      \"code\" : 1828242137,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Officia earum rerum dolor blanditiis. Deleniti ipsum aut et quia quas voluptas. Harum distinctio dicta eum deleniti aspernatur recusandae. Laboriosam in veritatis et blanditiis autem ab. Maxime quisqu\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Leopoldo Hammes Sr.\",\n    \"error\" : {\n      \"code\" : 1909615348,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Doloribus repudiandae a numquam temporibus dolores. Eius nihil quam. Architecto iste reprehenderit tempore eligendi voluptatem esse provident.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"idb6vtriyg74d3wfni6w2ndued\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b898eaee-2913-4b47-98ee-2f7e9dd12ac4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.873048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "3b842962-0292-49c9-b092-55c361c6a49d",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Lamar+Jacobson+I",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b842962-0292-49c9-b092-55c361c6a49d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.87214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "ea75ac51-a5cb-466b-b5b2-985ee0470d7c",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/904w6qhkog9up6hv7abvbrlhq5b3no/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-12-27T14:13:02.871647Z\",\n    \"creatorRole\" : \"32fjtng8q2zdh4ozt4fs25r8eamfehvir1bwm1eg8ri9k229rh9zdbm01cspz93vj0a3blgxfhtk8empebpaqi060jxbwbjn87kvurahiolqmquao6uxe4juqdxlselh4cpx0fbabytnqt3k3zdnpzg8z12d4x2g0ly1np1b\",\n    \"createTime\" : \"2022-05-10T14:34:02.871689Z\",\n    \"name\" : \"Barbera Kassulke DVM\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-11-08T13:43:02.871762Z\",\n    \"creatorRole\" : \"cvnovznsqrfwhoald43sbk5\",\n    \"createTime\" : \"2022-08-14T12:03:02.871799Z\",\n    \"name\" : \"Lacy Wintheiser\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-03-19T15:41:02.871869Z\",\n    \"creatorRole\" : \"0lwv69uvg98b7monjdh2myldc1x3rmgkug8vhj4998n062f9a6wvwu7lysozpn7k70ks0bypkg7osxnsp\",\n    \"createTime\" : \"2023-02-16T13:32:02.87191Z\",\n    \"name\" : \"Prince Douglas\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea75ac51-a5cb-466b-b5b2-985ee0470d7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.872052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "fcd3f878-314d-41b3-aace-8e56830ca6e1",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/ux3ah12bqwt6irf4o/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-05-25T15:24:02.871384Z\",\n  \"creatorRole\" : \"jzuof4am5t0s7e3aa7ilcccv8rfgvmcxm5tr30ocqagvkeha1bp1mzi5l00za73wxzyqgvb1bb7nn12xp8swmmnh8s1ukinlswca14b8de8p25lhb3yq5nsm6j6sabjsie3u6ox30f2gvkfcbd3l9\",\n  \"createTime\" : \"2023-02-27T15:02:02.871425Z\",\n  \"name\" : \"Hans Dietrich\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcd3f878-314d-41b3-aace-8e56830ca6e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.871592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "33c72dfe-c363-4bbc-b70f-679759f7d43a",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/2k088nus83u7f11hzxdtfr99glnkqtj28ts9xupy6jm9c4yj8r5ksazmdzsari79g9i6d6w/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2023-02-12T11:43:02.870683Z\",\n    \"creatorRole\" : \"x83pitw8go5syg7zs8bixmi1s1934s65ginv8yyr6zq326qjdps0g8mshj5xaep\",\n    \"createTime\" : \"2023-01-16T13:20:02.870735Z\",\n    \"name\" : \"Stephani Bogan\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-06-30T13:32:02.870818Z\",\n    \"creatorRole\" : \"teusmqq6vvfde8xspty9lm46mxpr9k8i3206ni7pb9ph05710yzx55ynp5h6dtdxz1qactzh2owrbn0svom0kikbxfsxwq3pdo4ah1pbcv\",\n    \"createTime\" : \"2022-07-11T12:10:02.87086Z\",\n    \"name\" : \"Shanti Klocko\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-10-30T12:01:02.870932Z\",\n    \"creatorRole\" : \"pz82ohhy1uuj9xo3i6cpjmjzvgzbdgnn6fckje3c2gz4gfb1d3xp790ycfky0m06we79i64a16gj01a4jd7u9ns0ul259ytun0pbgt5li4x28o3tzne1pl9xfwradgnlywa9isx8t66mgbzffzz7mxk\",\n    \"createTime\" : \"2023-01-23T13:34:02.870971Z\",\n    \"name\" : \"Berry Nolan Jr.\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-01-12T11:57:02.871045Z\",\n    \"creatorRole\" : \"33k3a2178r49xf9mpq3gu7tdl8uewidx9bwkqvdjjxg0yz4ta30aceedlpugoemivsjb7son12a51gjpf69vlysm4iwajtgem6f7l5523lghbiqmhoejmca2r87c360xmey5t9xewyhv24kgne3r204r29brwi1vynesehcaelwos3\",\n    \"createTime\" : \"2022-09-29T15:00:02.871085Z\",\n    \"name\" : \"Cary Gleichner\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-04-13T14:44:02.871152Z\",\n    \"creatorRole\" : \"968wld45fu2izj4fw1n6grmlqerr1tto3eyvnseet8895bgogeijnpfcgqxrflqvpxaqleej\",\n    \"createTime\" : \"2022-08-01T13:22:02.871191Z\",\n    \"name\" : \"Spencer Heller\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"iic78tbitjfc6k5xh93vh1j5av4htiu4dewdko8vlwbvnnhhrpj3lc0ph0ls26lzjkmv88hj4tjwlncm2x0hq29ampo7p7hzokiy3thyv9le69aoyqtpdvkcddomiok60elemrbkzk7m9ed9vv75h7vky\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33c72dfe-c363-4bbc-b70f-679759f7d43a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.87134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "44d0c448-301c-4227-8d10-91be848792e4",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/9pgz1hv8l4zdvmpv2piikf4zzv0qtc33qljg0k7hz207bj0bzjhew8ky74iwwosyo3m5i47ryv662yo939e5sh88e6ki/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Eugene Schroeder\",\n  \"error\" : {\n    \"code\" : 2144712621,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Debitis tempore odio. Voluptatum similique fuga dignissimos consectetur sit. Ullam aut non. Error ut nobis consequatur. Et ex ducimus et libero incidunt est asperiores.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44d0c448-301c-4227-8d10-91be848792e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.870618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "70c5b5fa-145a-4194-a6f1-65a21d79415c",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/fx9lz/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"sc5vvwhvls77z2n0wc4a3jfxmiim1gef2a64b2bvrzcba7r1zyjwo95fw4ypecbljlo0egbpjd4fp9eqmnxb9tgy\",\n  \"statements\" : [ \"9mw6lsu1lbetz8bq7ldah0x0\", \"zm82touno2pv5ehjs1lyclj4ce4hnvty8gbdpt2xm2uqfx7mr8bqvcgc71pxjtbkevhhoo59jcwnlv2glsgtj03xdsadtl0bxc3bf5lj11hbc1mpm89b10l5otku5q4z13rv9elzy2dd3v7lektkdtgdz6iq5wysyplvzow8otjyof4rtz5k2781fc9b7ko1hc\", \"gncgfk60ehz3pj4x915333c90dxvzunjnzg90q5np45wx735vdh8cnsx3622b836h3faefrg1ly2rwjze7ld46d4hvl7fpmxzc99cj87204ndquxg1mw1tjjl5iatcrtc7ycersvn4d9lbyxipbcwavq8e\", \"mibqid16kt1npnhhvkaapmjhgpwekioc26xbmwfr0wgn33jq8kv7ee3vntglf7z0v799yk9kv867rh3lb6ji2olc371fdopr6ov66i8h9ezrpa893bkez19njyqoy8e9verjug7zhyy1n4m7ajo5biwlwsdb6lq7xkp4m0j\", \"r36il6ebx38w70l7wd3fv786bp0dn9n56v2hijfzasot1apez1a\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70c5b5fa-145a-4194-a6f1-65a21d79415c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.870323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "cbe697b5-6a9a-4b51-8915-bc7cc509b5e6",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/msepfab3bf0amkki0wvzg8cdqdqunv7b7klqhb9z37rl07wp3oouv5wvljvmn3d9il1xyvw3e1nbzjtcnq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbe697b5-6a9a-4b51-8915-bc7cc509b5e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:02.870123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  } ]
}