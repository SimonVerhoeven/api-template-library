{
  "mappings" : [ {
    "id" : "c46727a0-9371-49a1-9f79-a41c9ec61800",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/f74qgvr6yhlvsao1io2ni88zql0njxdyn9l1ftr4ebrpu8rl41jvs:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : true,\n  \"resumeToken\" : \"oodmgw9f4zgauh984trh64f3xv1iuzyuyhcn4lic8i6qjzlx5qbpvywbngvuhmdyw7y49spn0x\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Domenica Carter\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"l9txoalpmuf7x3w19qcbiugs4jzkn360tml3c285xzewflyeis4ydcyfr5gym614cutzza9s\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Kathryne Sporer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"97317yh9htd67bjdy2qahf9nsewv23dsr5cuk4ze6iofxul9ebho7ot79gqj1g2yw9am4am7vzl7e3t6p7nabzse0o7omx2zt3g38wac9ijqttzl0zjocpabm0jijai4cmb2wezej074wtah\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Damien Rempel\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ueo73x8zsu9tiagq25bz1culg1vv0w6fe8jvl07wuvcqpvycyqssek5idygcszbpw8cc6efimgpt052fqzvm8ykx58klz9kzncg9vwmowxlgwztwpyqmk1zjm0m0psesiu8qf9ub8up1cd3bupbhpd1keia7wuk1b32j2xsnm\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Cathie Volkman\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"wrwz6rp02fn2dxaioavk825erpijetbgfa30nua85jhslu32fbla0b7suigqdbwnvdjlyr50x\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Lakita Schmitt\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"on8rzci4tbhmcl62pvblkgior2bi9i4av2k86pvfhejz99yo684zql00ilga9l8ckddxwgrq0esbmtxb5eyyhn6ja8mn4qmto8kbt1o1egwlo4bkk3zh9llkcx55lkeajngrdptm4mj3t20bf5kk6bg8bp88c46rsi7u4zfvdc1duk1f3xtrw6b3brdg5ts8\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Ms. Miquel Bartoletti\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ef012455unitmnhyfv7g1o8v1ggc8pibhivp76j6sql9y900e4erf1k6dtpn4aefxq7orm3c67d1e6ugbscti9ywnex2pns7ozrwazbv6pa7tx9x6bskew15t45w4x0v0l0h7el277dt4bjdkx2qekk42mkl98t\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Chanel Kozey\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0v5n4hwquamdon9\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Camie Rice\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"9yfvsyuqtzqrky49q4xvhmmdvnyohes3fwjf5obheibf6qyujkbct5jmvfa421mcgmttd5v12r3r096g59ikmc2yomfdxpq9snhl1sximlmq6cmobw81twsdjgd3\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Delfina Gorczany\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"61ozxh9onbohczn74phhqq4ws4wcdtmrcxkfncmh8w6d4hjyno7uw2cjq42dfdsc9stvqrub3lq2u0x3zwdu61e9675b2z6adiwgcebixz00jrrahtyd0dizoppnesncx7hxb5bn8hu0fj37wkvilnsjl85zzlz1\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-08-30T08:24:00.254722Z\",\n      \"id\" : \"3h87\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"pgeue4nuqkcp30inbj15o4gwrbn8bp5ya007j19kwvckktdda09nckkmfxxjoybqjvzzg4f7ymmjp0ztaew66j\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Natus consequatur at velit distinctio doloremque quo commodi. Officiis omnis et. Suscipit quis fugiat sed. Exercitationem quia expedita. Doloremque enim est ut laboriosam commodi totam laborum.\"\n        },\n        \"displayName\" : \"Ms. Shaniqua Schumm\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 717596235\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Illum deleniti ipsum quas. Et est fuga pariatur. Odio error cumque molestiae inventore.\"\n        },\n        \"displayName\" : \"Allen Hirthe\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 943065065\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Deleniti et voluptates repellendus rem nisi facere voluptas. Harum fugiat dolor maiores sint assumenda facilis. Perspiciatis non qui mollitia vero aut ratione. Dolore asperiores maxime.\"\n        },\n        \"displayName\" : \"Merlin Flatley II\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1399458948\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eius dolor sit qui sint velit cupiditate. Iure et a in aspernatur. Ut consequatur cumque autem sed necessitatibus deleniti. Sed provident aut qui sed soluta eligendi rerum. Impedit ut ea doloribus dig\"\n        },\n        \"displayName\" : \"Hoyt Altenwerth\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 313690137\n      } ]\n    },\n    \"rowCountExact\" : \"1og3wxfmyx43kv60y3ohekvrosn3y97kod5ydgvyde5760xzjd50jejnoj23sqh4wt26gz9sf5zt1q216126x8v0z2\"\n  },\n  \"values\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c46727a0-9371-49a1-9f79-a41c9ec61800",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.255615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "544593bf-7180-414f-b280-39a32e990c17",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/yk11hcawdhtdges27wgwmfpoo1pw2u477s41rndclpmb6fel0njvg2nkooqiasbx3qlc7f5kmfbh6ar0w5nzrqahojwigzleb2gehiy7cc3gqm1olwe46l5rurvrjvzieb1bq7367nuuu080xu6mdh:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "544593bf-7180-414f-b280-39a32e990c17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.253834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f629c121-336a-4ff5-87fb-6f9cafc48019",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/n8gc2dfgcdkuj9od3fuhwt6iihn3q8z0jeywer8mysggb2q7ugvy6c0tqr5zbytjluck3ckgomljl20ahpz63czjznfpwihm2k3c5csm6ocm6iqpweaurtkq6vke9wbkhhuvrvegzxhqoi12czrth3moup15xrvg7s2lbgsmft76ga7w003dfhwc7wavqc9c7xvk:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Reginia Ankunding\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8h95a8shnhxhkubxdvjrl67fion6qjcf5anfwct1glq1cvidbp05yzm5qdmn3y4jaqpv1f8iwd4kj9pt347b7dmk90w5hoyk6gy4bataykyu9nnt1mclk9evy9lc5j2nu4k8w79l8faaihlboy7bq52yevwzpwr2ubxd7o8yjdierzahpakd7nrx\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ruben Bartell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xgcdvuvz2fj4ad82uavm5scpus65foe5y307dkapkmfb12xugv4j1gk801pkf0ur7rfgo6gqfifmr5mzsm31t680w1blsvbzu6uku0vjlvgmc59w4saokukqe9com2t\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Brenda Hansen\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lf0zl0xw9air8ityvozoq3q1yquxnwyp64qvcje0ssm7fs8ormiex5xe7cdqmbknhq5sp7xjog8t92261se3o2l2z3ob3l0wkxu6z9qn23dilp8yexekeg9vbu4936hc3d1q2kqf5zuy3spzh51430mazpa785fqsebkeilay\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Marketta Kshlerin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"bicgj7ul9xibx0p94y4a2f01i3mf9id1cc5f8fc7r3eg20dbhonbogqtc5b3lgn6n3r3jyqi6i1r2dfjkcan\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Emile Schumm\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"hemouaqac0z6x6sb34f6ebeglu111vy5kbaubucijarzbepu7uu8uy8094hh30fyt0lhb16uy1jrxqvp3na57mwo2ef4jcz58az56jd5zq407m6lbrcdc3i6h4jksli3i096zwnzshtn1uixj5ff2umqt5vof1t368n8f1upw23c2enu\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Shae Flatley\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nood1k7gnw08d9feadk50mqnln3dx0xnb9mkuwtl4qow6prljkn07zkbdtx80g9e70rh0g70eiwbo\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Wilfred Marvin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"c61sgz8umxl4cvwmh6mpb8j8c\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Isiah Bayer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"fm0y9o2j9va01l5bytxuhpu0kc2hkl17huwtbno9rnwim2\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Julie Casper DDS\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"vkckab5o2i92wu080bzg799w8a50e6j347mb25ct8mq2ifwpqfpqjgoa\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Heidi Skiles\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"bdgpkzamjfrmpw0qlaiftdsobatklbv2z4i7fn7r3wxcnopgqc6p77rgxoq0fdb53ady92ibglt3u7x15gpeztml6iy7pejuy99too2x247nz1vntaztmn9uhfrayf0dx77ofx438gbd1z888ioqaan9gbr723uivq5cbc3nw59o05\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Frank Armstrong\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"svmj3f0i64h1nh21t4bkdvvzr96pwv9215pdzf4wjslpwi\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-05-15T11:47:00.253332Z\",\n      \"id\" : \"03pz\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"cg8chzi0f4fdqq2bcvet7o7k6535vfmaabyrgqsniv425grjf94r5b41ykfprdl8wtlpi6tyrnbm8r5vpwpec4z7823n9jmzj71uvmecdjsnesqw6d42kbb2bmi2ajh2ag22nqyht8b3u5th5craltsad5y0wy\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Omnis quia harum temporibus possimus. Qui occaecati et rerum facilis et rem et. Nihil assumenda qui aut assumenda dolore. Quia eligendi blanditiis. Reiciendis qui odio quia quibusdam sed mollitia.\"\n        },\n        \"displayName\" : \"Sang Kub Sr.\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 797422412\n      } ]\n    },\n    \"rowCountExact\" : \"4zrwnu4s415se66ok4pcdqtp1cc3i5j11k5jnd75ztbiazco6hvq9nco2m726qaewqbjs507ibj6b5t9t6j3\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { } ], [ { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f629c121-336a-4ff5-87fb-6f9cafc48019",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.253778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "e7c38483-35aa-414b-b252-6769ee0ccf7e",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/3ypy0lhr79ihf72h8zv3t9tngqy0l:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"sa3fs3h37f127xlu71ql8qt9t6om9pdgbomuy\"\n  }, {\n    \"partitionToken\" : \"w7ygc5ktc1ns52i3sepgcmdohmhv3swpcaok3hdln63p6gook96dxllsy12eetdgcf96556wvqaebml5h5b2jlkbe0taenu9n68wgekek9pv4mr7k0plaxyrdjkx3bqhvz9t\"\n  }, {\n    \"partitionToken\" : \"deseshb4jmbkwfwy5i6qvr77w1qdhi184ljqmbg52uhfwrs6cadhfwhwn1gco8i0oorj4hrs238va7fft5jlg2mnh8ujqrsir\"\n  }, {\n    \"partitionToken\" : \"ypi23pj8hfq5hdyi9s\"\n  }, {\n    \"partitionToken\" : \"zy3wndwtkye3opvmuspix5jhm92kyl2sfobjezs7lh3q663v82wxiwmp4t94ak3c4bjkioaq4fdkgjz3c9dkwbgq0r7lbkqhwummer3w3tgwxore5gdbqg0m7qr64b37nrqqfiawaekfltdoobah0ifr4e70vjxffepk2czjbaodoe32980c6xf\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-06-17T09:22:00.252164Z\",\n    \"id\" : \"ot2y\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7c38483-35aa-414b-b252-6769ee0ccf7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.252283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "bab0d443-415c-4293-ab2f-38e8eb0f735e",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/yo5c1t8bkrj658uvfbm5xbp90dayt9lc9o9xd2cwsbsgs0edhblmw7i2wvz5gy7coa3qee3zcs5dww3hdngbi4002p526enua8p5upabx456t880vt1qifwhb7t9acekcb9s6skmvuasj5lqi2yucrxpa1bq2sbmd78yzalacl6aei7yeuvnc0jdbnfuxrade41jvzd:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"anqc89elisuphbxkg46zmium9wsco4y1c4hf09mkbeso\"\n  }, {\n    \"partitionToken\" : \"gaergpmt23edmw8hivnok405oh4oxctwrfbvg13vgh2qr91afiqm0anlnjf0amkgic8sgyxkik8vll0xshj6gkpgcbkbe9b4vg5zq2bunyncvw0jyedfai57j5tp7pmdf7fbpb63t1fbqqdwtsydqf8ms9ppw1rry14puti9u4k\"\n  }, {\n    \"partitionToken\" : \"vm1ftxuhmvij1i80flos78748nvpvofyh3f3tha655v4z8u9kxklg5zijr2bgek4p2jhgavxdl8rtcy8jbp4pz2k63q1b5ha58xkykhivqxdudl6k32koth2ovjwk7aypj79rfsmrdha0xusghsfsiirq9fjzoj616rrqa934p0lp\"\n  }, {\n    \"partitionToken\" : \"g5fhthzmtxbf7iy4ex\"\n  }, {\n    \"partitionToken\" : \"lmsl4tq5lomw2je86b63f56ba57fm8fp8yp4djr0i524031dsm6qip2z26sq0o04d8223x66ewt2mp2kdzxlufhfbc9bg729cfhd1rfeeddkg3x27l83eqgw6aibs152ivtqtlpgohwvlu\"\n  }, {\n    \"partitionToken\" : \"hxgrro68kak06t0gj519pk1ukmpoezx1vof86pqlweoxcxtw3g\"\n  }, {\n    \"partitionToken\" : \"8ozmg15hip27u0iwmx9qi8j6bydbvci8730nd5xaqlvfkhb1phyh516z1bs9drtbfwixao1d\"\n  }, {\n    \"partitionToken\" : \"s3yix6c3t29cscshlz806236scgf6s4b5h8za71bs4w20mpozejwvav16gjk4lax9aucsak76fssqwtbhyd6vysfu9yc71uz298o2djr4oueqdq4gp2yhja3f0ofdew87r806ylzp1m683ra3a9f7l9sx7egk4ps6i8ruejvpxf1s4op6iv9z8tksp03ypgyvds2k873\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-05-07T11:13:00.25191Z\",\n    \"id\" : \"h93w\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bab0d443-415c-4293-ab2f-38e8eb0f735e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.252041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d329b2a8-0e4a-4941-8a6e-91abc66fd42f",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/e6lje1bmkd1wk5nssl3ac7r21tgvh1xbsp2jym4txjkixuw7eu67nt766ivukssb3xcqhxobxjbfqux1omyh4yzb6iknuyvdgytkxqqko1vkhttk55pwv48tgzo9:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"yciui1edq6todqga7g4lqhg02eixpmbsu608le9c0benkst12holhm0z2uv3sfihevr8qerpnj71f9t0r22p1bs7ln2acig29m9i9lf1rruetn9968ep5pl3f2hedvb5tg7x63tfje91e0cqzr8ldkegb6y27qjlvsaq2w1bw4usya2z\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Lorraine Stokes\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1lnu95pfg52r78u2qodf5rjvitfamqxlehpwcyq37dv4zwplr3mhygixwtt7y39nw4e2g9bsxazzteyaf83kt8v5b5wv2rgn4kssvcld91qmc6wrv8bxe07na0gjxker5585b04aw2waslwez78g9ipkevogrh06wae6zeeje48vd1li7oxtfo6juditk5dwdsezb\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Kyoko Casper\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"6ju0pjnf5i4s05owj44sf01ok4mn17jj7lq9f3vqvpbl\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Austin Mosciski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"vr44qb8shnugwvvzipkyurm1crv3lljft1crn8whoroduy7tsf9d7pm0n0rjj9ulc7rjpq0v5afw6grt9l3jasnp9ft3925vrsi1v6nli2mb3xou7q3mo3m8ztho\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Nilsa Windler\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nli94m4n87nj8rnk5qm8235s41nryl7euray2c2ets3\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Nella Carter III\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2p3m93p0rc6iyizq8icu3v79egvt1cpfd73nuej24sf3tobplm2r2letkf0flldxab0taote77dawcwf6isz0rshij1d8rk7c579e82n9pngkdx37f5zr67xw0nz2n2z85bymn43t22f5lgiy\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Charisse Homenick\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"dlnw5p9h3ykih39goeobopjiwr3btn84dv8eq1cw7fi0esoyn32qmk05r5zvhna90vlu2844a3a8g79qkezot5kq50jpaqr930i8z4xoua7wvy0nx6unjcbi4jfwfb1gk7swb37krbumn3t2slwded9ci0enyoarm3j56ra17vek7hcy5slb7kixywkv9p\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Florencia Toy\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jlb5zdbpukldbp4hnm749zukm9kqjndw94ox4lujo23g00xn09nv6omulw4g8\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-01-02T08:49:00.250486Z\",\n      \"id\" : \"4a1g\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"jyzzbolxs12r727u0yl5hfp90g4a0w8y06r9uw1jgji5qhpu\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Molestias vero error ullam doloribus inventore tempore. Qui velit vitae minus unde suscipit. Explicabo quo molestiae quis. Consectetur et nam. Id vel est consequuntur iure.\"\n        },\n        \"displayName\" : \"Sunday Auer IV\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 1258558324\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Cupiditate voluptas hic. Expedita voluptatem rerum iste non quo. Eos architecto ab maiores iste saepe ratione consequatur. Autem et quaerat sapiente. In autem et excepturi iure doloribus.\"\n        },\n        \"displayName\" : \"Mariella Rippin MD\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1016862431\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Repudiandae ut ipsa deserunt rem dignissimos quisquam. Architecto repellendus qui autem unde. Iste excepturi explicabo optio officia consectetur doloremque rerum.\"\n        },\n        \"displayName\" : \"Ms. Dodie Wuckert\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1385220156\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Cum optio eos nostrum et. Aut voluptatem tempora. Neque qui eum eius. Dolores autem hic.\"\n        },\n        \"displayName\" : \"Arron Lakin\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1452498937\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Commodi mollitia aut illo veniam porro blanditiis aut. Ipsa dolorem facere velit architecto doloremque. Non rerum quia sunt atque alias adipisci quis. Voluptates delectus vero aperiam accusantium ut.\"\n        },\n        \"displayName\" : \"Barbara Kiehn V\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 512693961\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"In aperiam facere eum magnam et dolor. Nihil molestiae ratione quaerat voluptas facilis debitis qui. Laborum dolores accusamus velit labore. Sit mollitia aperiam vitae placeat.\"\n        },\n        \"displayName\" : \"Jennine Gutmann\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 642478580\n      } ]\n    },\n    \"rowCountExact\" : \"pjqckk\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d329b2a8-0e4a-4941-8a6e-91abc66fd42f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.251729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "b36c4f0c-e8ef-49ba-b248-324e7473bca1",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/vqmkn6spf5rpp1lh677m1xdzs08:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Dirk Shanahan IV\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2x8hst23jdx7cygaksp5pu7f0ujqnabqelo98j0moc2t5263kqhns8lstzdnq2\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Margy Will\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"myxbw1g2jgwn9t2ofxfye7dqv2fmyj4fmp0gwl7yd27olv57u4j72k5oagqjtmq519qa40c4quqb786xxqwnpmcqrje4fa4weyb9il37zk9co4mtuoetfvmsqml9i3abetj1l0ug86462vwsbaxfkws4qyxep1\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Thora Lindgren MD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t8jll4kps64ex2mk3ni0azr6tp70biu3bybyfbtzmkavuwxemye0jm83qp8gud190sndh6oknk2bwo808k93yujbb1rowz9ryy4pbmmqacfckavsvzlckat8mbqoy47imcdahavdhelk845\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Benito Wehner\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gyh4i3uhlxjqasi4wafhpmk3ac2\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Horace Cronin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"zzx245\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Franklin Osinski III\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8ezpsw6ztv7f92y1bb6m1u04qx7uj44gt2ulk6oycickpxcapb2htfpu0ukatj8hgo6gay11adixz3nxrve294ki7cstgnyaqry3gdyv7n92bxlg508wvubdkz\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Sharyl Purdy\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"hkixnvcirfnvfmd0t227r1co596cga90mt65iefmuig2bbip6ye5o8dqhdkzatk1ts83ym2784xv2uzvsa809qzju2dkv5p162pzyuwlkdpxc31fd623nmqrwsz7kko6ke6erja7oa6d2i\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-07-31T08:45:00.249335Z\",\n      \"id\" : \"yo59\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"hams8dkdu25oue9dy9ban8zhwk67kr24qzl\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Dolorem enim aut optio aliquam corporis incidunt. Eaque itaque ipsam sit. Enim perferendis repellendus ad nam numquam necessitatibus. Quasi non quo et ut.\"\n        },\n        \"displayName\" : \"Machelle Hickle\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 555765968\n      } ]\n    },\n    \"rowCountExact\" : \"rwj7bhtomymehpltcu0j2gopurebb22wufyuo01cbrnwyaz7x5jpf1o2uvfqoixikb3zpf9xxb487fcnq75bls6f3wz6ouc8egfaavr2shcwaqjght1pmhkpj9jiu9v1\"\n  },\n  \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b36c4f0c-e8ef-49ba-b248-324e7473bca1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.249774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "c07a3856-95b2-4ec5-8e28-dfdf782f1600",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/dq7n5bm85le2fpgqgmmcw0hhxuozqhb9jl3yft2tjbr72i1e30tyy9wqzmq5mmongbvbbpxvjl7vhlyf609stxber89sw9qkj26zmo:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-04-14T10:28:00.246858Z\",\n        \"id\" : \"tu9j\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"17v1olmdhi5jj97z3cdyzi35tiy32\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"9i4rf6qipdirgqmspgbn1i5fpn75b4av2s9ho7xq14ievcbqzzqebq4bmcc91naqayops4pnjs2oqwr039ywit37usw9qdrjv1u27yffqimgx2xo6i7hqv4vag5ycwbhlcf5t1xcr01ncqwcb0kmvwxjsr3wkiwfq3u6a850184g3\"\n    },\n    \"rows\" : [ [ { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-04-18T09:29:00.247097Z\",\n        \"id\" : \"2i9m\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"vu2ur6vye11f0pwk8rlyusn49ersaypo1v4vdsw34c20wz851a3sz\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"dil44403qv3s1mncw9avravcnb6z287c0sz55g893sp3srlbkuicpo3rtp44yta7mgi2d1me7cfvf5jf273ztltclorglqo8rb0sijkv8k8tvy96sobcr9f6bxbx7bvv84x\"\n    },\n    \"rows\" : [ [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { } ], [ { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-03-20T11:34:00.247329Z\",\n        \"id\" : \"532w\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"341p0we76pep32723ahggurwbjslqlincvu59ik0vx4sqs637m65ihdbtg28xr8nzv1nof3ifwmv8cwrflloykjh46xenfvgiegxo9spzhtx90omcjkd6vove3jk2v692llzppe2jxbl3uma\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { } ]\n      },\n      \"rowCountExact\" : \"jlcsadc0aoblbjgoh7180fm82eh9p37k37z040dm3ixmmi17k850873a85fqk9m3\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-02-05T10:17:00.247522Z\",\n        \"id\" : \"gokn\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"joi4z8d7od2hl8hazkvlso\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"fmyu5v03r2zsoelem5qnxsbvh4dln2zgvyhpi8j6z\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { } ], [ { } ], [ { } ], [ { }, { } ], [ { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-03T10:45:00.247721Z\",\n        \"id\" : \"07e2\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"0brk9f9e9rts6asdrz2v7l1lad2pcrdm5s03eip71xa97jy930qx08ezx5979t5tmp45fpdj59qlavp897fsq4p9bdrjihc9h3jio3zcxmu6xhg1spwwbl16zxe6hgo1tq0ykhljia1nia4e5ej154mbylru0t3ekioxd23zcz\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"exqkumg11i8q6xnpmc9bfzy784840faycu8w42ykufzemhafx50apg2lfvejg3s1inyzfptu41\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { } ], [ { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-10-21T08:53:00.24791Z\",\n        \"id\" : \"t3j8\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"i3d8tfrvyssit28hnzmkpp1ganib\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { } ]\n      },\n      \"rowCountExact\" : \"tvkto68d97l2ecuitz9lo3wu3l31i4e09os5v64jpz9psqpkqwb8f79rdfhq5m4hlaapds50f8jpggr7dzg5rkr9e8smilnf8g0x5x7kdu07924muh5umezka8b2j2ufcenyk97nr1eunvj8x08wzxkvhru9892pj08fsbxozdaiiddn9uf5v8kwyeocrt3\"\n    },\n    \"rows\" : [ [ { } ], [ { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-01-27T11:35:00.248098Z\",\n        \"id\" : \"o93k\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"u6fxiqwahiuawt61t3cmzixv9v1kj936m5et51hq4xp35he9pksvyql8sgovq5w8n5kopzr9a5d0irl0h59ob1k6eli7\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { } ]\n      },\n      \"rowCountExact\" : \"j3nr2qm7d7yslcn0vxvi862etw54ug9rzcs3r7tode668wfp6m2yp79d2r8vwxs4qvttly121ry29bum9olmh4ggdn9xe3443k1noqriompoo50k2ca4ot212n0g8p8hrm3e4pe3fsoky5vlbdb96qn2k0l6yt\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-08-17T10:37:00.24829Z\",\n        \"id\" : \"590s\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"9j3ybuw946fy7u4cceon7qtckvrnb1xr81retkulxsbqid11kp14fmg4aloyhdljuhn5e7si7mb2h3g98kgu5aawndc42qok3123mt3avdsrtkl0ip5adar8pvc8icb2qf2ty7ebg7n0lnvio3t3tty\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"dwb7g5dzpva1rg4inaoa87n4gkyzgw2pj1m5g1ls2lg81s4tf4sx162ndm4th33ay0o3vdn2415h3kq1ua9vvrowqrndppcma3lxhon0tu8va1c702firlu0rlhpcxia7017n60ufnu1d2nul6u0sx4y0gtw8v\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 1048304566,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Molestiae quaerat ut qui aut est voluptas eos. Officia est error. Eum saepe et. Quibusdam quibusdam hic iure nesciunt.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c07a3856-95b2-4ec5-8e28-dfdf782f1600",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.248631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "5a410c34-b531-4405-97ca-7bd65fd9d688",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/apetcs0dal07al9xdaltgoauwhnsi1flneswi1nlkk57h13m613oxz6thohwry8m2t64ce9ptolwxhg42l1lkbazuhdf2a1f5fbf9era3f2axibfpq57so9ovb3hs43y5wj29:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"ez6pelpu4dx7uy90zo1fziyrlhtosegnj6ic4c6\"\n  },\n  \"commitTimestamp\" : \"2022-07-09T10:35:00.246709Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a410c34-b531-4405-97ca-7bd65fd9d688",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.246766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d5358509-9fcd-4269-8f58-602dddd47e39",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/1vz7hjsibcajttfuehz104xyt9zhr4s3ifqze5xmfrviu7g3hvx5eqmr0iq5320yw4fkyfy0nn7jvqjrm3zdtytv3q1ta3r96dsvxr5kax73zfsrxejo514096jmi5fh8u3rnntrlrbi8mz5z2q3hz2xfdyvwe37bfomr32ne:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2022-07-11T10:17:00.246481Z\",\n  \"id\" : \"wey4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5358509-9fcd-4269-8f58-602dddd47e39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.246648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "16d65c83-d5fe-48fe-b31c-3e69eac50d26",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/2w244w0reil8jcfboymwddc12r3s3nnonwnne60lq9hl8yv750ta3otbrepi:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"sgxmsqlomjob2pu1umgwbk4v3pxi8nyhi8cdkqo90ajlyuuny978tbdabzoszi4ou8sj4h0c8y4yg740hbsomj9oozfuhmubq1ovvb1bnk6bk8ofk48pzokapo97c10y7egibpfwn89gz5d8pra\", \"5vn0a2am5jjelf85dojzdcmaa73qfcj7d829uzifqdbkmsjr6s252o\", \"h5m9bch0hsnetz4ffmb1yeb90sowi0ogl72t1wr0r703ya8fzvnnn21i3cssm2l6qhlpketqsal46rlden3azv7f23egjd7qs33hejpqiep2hsuo90bcb8r\", \"vcvuwlaqv5vj2008vnlmhq6lwtlxt00g2pgxlolqkvmfw8dg3gohlqbgrdekgnkdcrx5yt56aeu5cv8zxsqivy0th0be\", \"ssbgpgcx44m07lzikisxx6pdupnfaecm5srqbvzunm2lacaujsop9tairzq9s8icek\", \"6ylywlrjz36b13u4o69at89hrak1yr7lk44tytxjkuaem6yays7vnsoctc744wwtg3ldehayw3ghy7eot5npqtvc0aq9s0npu46w4lk7vnd1q8sknafullpzsx5kt3y3hl122506puwa16xgx2uo\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16d65c83-d5fe-48fe-b31c-3e69eac50d26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.246442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "92b693f8-db51-46a4-afe2-db7a6340ef36",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/0d7fuyx720e1madmberbg25eu3g9bebh0s:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"sd97xqkn7\",\n      \"description\" : \"Vel quos cumque odio et. Non accusantium reprehenderit est repellat et. Quas dolor corrupti cum excepturi quia voluptatem dolore. Ratione necessitatibus dolorum ea et qui alias occaecati.\",\n      \"location\" : \"sitxbbst7kesu9jdlcmf3oa4l1sy4sbetlqpunj8jtkj48guqcd0ebp61wshipgcjq4kzrrp989ytn36sqcvhgs4b316zlibgs8w6ehhjtn7tw5x5chkyzaa67q6\",\n      \"title\" : \"Perspiciatis dolor enim accusamus ea debitis molestiae.\"\n    },\n    \"role\" : \"e58q4ei23rhv4h6pe6hcjahcfvg148mr8awflgpfbdl9y04o5suu2i921o2i1gil96k4ofsevb67wmkigryzn9kkoc72t8q0o2x4n870qdcxf6hmkcgsl\",\n    \"members\" : [ \"9h7ujesvm7x4of3dfxotc32woxzhty0eqcpq4tyfl583e6opiy5pvkmc4c69l17i6xl79ksqzxzipr12t32ni4iaajph08j0dcwwld402hdwlxev1lskwuf52l3hh\", \"lzls59fq20soqyngfwwoudw8ubc8u38950xvkud65yndft8v2jn4q5rkhua51764hutfeipg6ij01ffm4c\" ]\n  } ],\n  \"etag\" : \"consequuntur\",\n  \"version\" : 71019394\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92b693f8-db51-46a4-afe2-db7a6340ef36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.246339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7f6fc659-f0d6-4ea0-a4b6-e8c11b89694a",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/cxsdzub8sb4i9evn3cyt3jccvzagfnd8i1trd6d06zdv9wxl0v5l2yvsr7j5uwejkrtv0xuyh7ffgq3zratewym9mor5jw989oedmylv8uyxvoz40eze22ajriunsqlueznoubj6w06jhekwyyrplsuwbq4tvlydv5n9ln73xj6zucr7yahtcr7ehngo379:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"zhemlpm4efizqsqcvy8dnfzwrsepkkwgivaz2eofmstndbtlx19mj3mh5570w8lq7gp90hh0s65talk65af9gn1ngdm94l7agya6064v1gjoier2pdxe4rmt7ruqxbw0jjqw6mrtsjp3lanxo98d9nkfvgftunrq7n5thc5lt7bjmq2gaj768f36mvec9boe\",\n      \"description\" : \"Accusamus doloribus dolor inventore ullam. Beatae quaerat optio. Voluptatem incidunt quasi. Et ut culpa dolorem excepturi debitis.\",\n      \"location\" : \"8wsn1rd40oxlltqcj1gt1d9velinwbc9m6zr6w8uz614ya8kgcx30aw0zl3g68sonkbdxrwaui09aurbuetmb3p4q20y5ua4znd5lnbwt0px17y5p7ohlj05iexq4hri7ujwuoil8zkwd7u4p\",\n      \"title\" : \"Alias quos saepe animi libero eligendi.\"\n    },\n    \"role\" : \"jrwztbuyd3a6fafknmwpwf61a3ikm46ugq5xsblyek2w1rgkv6uuh7kalf44arjmfcav8j4wd5yj0pus9ufaetput4h\",\n    \"members\" : [ \"08ily0xi72utbuucgqc8o7brc8jr7kp9hy6kjhu12um80u4re9qn75jhuti6phsqqv50eg2fopvioet0i8verffbbvjzwk8hu\", \"i4xkk82zgkfsgxjlx9t6ztqjp9bcs67ra73aw3oaxurctzoea\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kxyon68mct9yq6etwmwludyfcat7ch6ys90jp532oet76cvabvz8vomgez9tq0qd47tzva47gmdizpi9curxzw1le9mm4w2keyh0uh3tkjdu35geg5kubg0lnkqrfpnw6uo5nracogls11pxm8yty72t2vvjew48mwmfpq8wb3\",\n      \"description\" : \"Saepe et adipisci aut rem. Qui non facere ipsum nam fugit. Non amet et consectetur libero cumque.\",\n      \"location\" : \"68kf6cxsfx8optjg0svrc4q1glabqrxg6tv8\",\n      \"title\" : \"Iure nesciunt modi quidem at aut odit.\"\n    },\n    \"role\" : \"xeob95oao0d1afqyr8x5k4a12httumik8zrqy8l9tt9xqtu8ilb28kqkgwpwdmedx4dt5q624wkhl9ae4j2ojs\",\n    \"members\" : [ \"ulxy5wdzy7y1sy82dww1jdfifi9b09suugk4m9jft4mfxxy3jk18rza4l709k8z79v1cmxjbfy0l2fs1zzq3k1g84z3wj38ouubr1za4w5a\", \"br2ehabnmzb9d5rs5rgpkkcf6x2ekbl5mtybx1qrgsvy59cduengbyyd7p6y204bmwfcqn7nhs8mv5qsmepz44u9tcxv5nj1j77rxsg9v\", \"nnpcgi54udsjbbxv9qdkf7a6noqp58olh1bp69ma7nlq0uf4a01oi5qy0rn3dirgdt07736a25uzk9va5oxp7\", \"it6d1ygr5igph9421erp6i0t67zof7pj7y3lp1xgbpjt\", \"zpf6zd9yayax8okb13il4fmhcqk2bym5cdourxbsk2fc4w75ebymq28tdr6rwk7d2n054kaf41jb0frwpgm4ktde\", \"k9us38sxdbhh23odq7piv7dqr2puabvj5cyxgoxovv763hc3x4c1cipn4na07aaw3wscrjp4nyxyzvrdzcb4dfytg8wfl1nc2q8sbef30ztt0u2sonl6hhnqk1fyoipvaked01oaw60aoekk4u4owlsw0b0qiy89aknsac8gx\", \"dcs4g4itd73a4ej4m4zsypc6esiufagiy6m57kl7hvptgi19nygpkf4dlqju3wj6z9n62ekfps24krr1c7mil76kbcix5slyj16ht8ap9rbgywd3o3tto4pazpmfnr1vv1l8c93s\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7qk619pmaeh6t4mt7q0ugvf242czo42zoois8tal0x2sdq5buxh0n24eu6va\",\n      \"description\" : \"Dolorem magnam beatae ut aperiam similique veniam et. Consequatur cum quam ipsam est. Suscipit corrupti in nobis et fugiat tempore reprehenderit. Sed ratione vero atque porro. Adipisci sit maiores ab.\",\n      \"location\" : \"mqydddu7w7rhoycy4u16fqkzkg1ma2d1vqji4h2imsovm7dn4ftz60n5aolzy49xzdqxkeyx4g1t0yqfkk9d\",\n      \"title\" : \"Iste voluptas quasi deleniti numquam.\"\n    },\n    \"role\" : \"p6b1ibq3osfm6j05ydwi5b6uswhck0gzgbi2p5mrq22ci1qe7q1xslvavvps\",\n    \"members\" : [ \"rfryr7vfkyuv64cs0u5sn6ldmkng7vj48qystsz1jbvtbxlklyc1rn2zmzsidfs5mkjd1dr3y1wpvuvqkovhs92j5lpcbvw1mipkninre7nqxt2347mbc9\" ]\n  } ],\n  \"etag\" : \"consequatur\",\n  \"version\" : 1195174818\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f6fc659-f0d6-4ea0-a4b6-e8c11b89694a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.246074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "5dcc9473-3704-4c8d-9749-aa1d3265181b",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/osr4mcc2cj530dgy71x08at5hj4rofvapl1xgvh6zfdpfwy1kt5fqbu5yu4ga6x7m50r4soz7bjxk24w6ijxxe8ht60tx6wp6s/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Foster Konopelski\",\n  \"error\" : {\n    \"code\" : 1923003369,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sed at ipsam magnam aut dolor et. Corrupti quia quidem iste occaecati necessitatibus rerum. Quia quos qui voluptatibus blanditiis illum quia omnis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dcc9473-3704-4c8d-9749-aa1d3265181b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.245433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "c26bd63e-f94b-4c0e-9d21-23ee83944878",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/m9ol9oh96/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"li5lm66wfmclq67d5oxgk0md1ptghy0cfugjxzwnsdk850nk3rxersc6qqqun5cf1uyvyzuvaxzp5c4sj\", \"hr1ny5k12fm8yhsbgf0uoy8tlowsyp77t0ajkl50ll761lpnw1u3voqey0x3hrzze5buqutti15gwainvp3k7klhb72l64ylsp9v2ztfc4ayklb85yjr5i2iroroh0bxf1s3u7w3ks40vglx9diik64bz0z5a0rze4ovpkur998tvc8igaciwxgi7ncst2x4mv\", \"h0twbp5obect8p228d3zfhgpj1chn84eh8hrofqhva4pclqbt2qcp8zulg1atmih1b3c0ybfgqp0q7yax9hluyndiy3sfhm0uu1qq8bsmn\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"3ur0fzneiqpnmjt92u4hukdtba5xkajm4c4v6ew2qo1ynvnei46vp650yopq26mbyng89b67g3s3ny47u8pb8rbmnlitpdddoty6m1233zgzze3r3bkg46hgd6k3vj93mwgp6be1np2ef4wyrf4n64tedtp33i8fhgjaxasdds17j8z0tuljk\", \"ghzwqhq780icu10i7y9lihm0ko\", \"r6qqgpe7yo57syn5wggdmjlvo9bcbzoipt3fwe6xnwn5ogo1fnjx1ou8p1cp0ea\", \"8dpyzuuptwd0wyouf5cc4penv0sv3eocss89islstt6dys5r7xypo2j2mj7vtvxad3e4pr1x1z8wytgfo980vmfdjmo2n9c1agfot1nz84m5nhathtwa62z4mmzatwaox7zdv5av\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-16T08:15:00.243668Z\",\n      \"upgradeTime\" : \"2022-07-30T08:18:00.243702Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 574402487,\n    \"createTime\" : \"2022-06-03T11:13:00.243751Z\",\n    \"displayName\" : \"Beata Bogan V\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Neville Ritchie V\",\n    \"nodeCount\" : 1057557644,\n    \"updateTime\" : \"2022-06-26T09:29:00.243927Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"omteyaxbrx7ntjjmd77nk6fe5pw8o7k21gwln3aboy63dzl7idev9dl3djh5rxqp4a\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"6aedm7371ccvz4f4a2th1zrirmvy21b6au4pcnwy3gysuk4sizjqbfjaix2uhgeenhvrw97wd8qf4jiphh4u6cqker4m2bpwmjvymhjfo48c1bg6wgkd83sn3mi6o6tp2gjeip5g64ncdq78z0ufe22hgzk2j291cwpjfzwqfr0m\", \"rr5jgsq173m2tgb1d7tkgubty65ew3vpt81xxvojwj85scw4aw8vg3e4lqhepiehvncmgczsult0v7ugtqvu8xnw3vd5nm8pxc5xmbzgp6ar6aq8vvz30nuywl7pagb3yf0cydfxl52a8c0pykulhlo5ckd8n39jwjdudpk0ygwttdni7lm\", \"mps9aw6wcp6ef0thwylep1wl48juriuvj32aayifvv9\", \"4w7j12tr4acrl7s1mp19ed87b3cp4c8rxihdc162gzc8vcpbqh9fyjjpwdqt0njg2tw9psvx6zhc723n44ntr0kuev3rbx2ji6fmzjuxjlorrl0kbjorqi95cnsdqixmxg2252eth2sxcau20yv5rfdj3mdbve4x4oujy9ahnm6y6ff56chuief393xz\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-12-22T08:06:00.244011Z\",\n      \"upgradeTime\" : \"2022-05-31T09:54:00.244043Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 1452032458,\n    \"createTime\" : \"2022-05-18T10:27:00.244084Z\",\n    \"displayName\" : \"Rodney Batz\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Mrs. Meta Torp\",\n    \"nodeCount\" : 845595847,\n    \"updateTime\" : \"2022-08-16T11:00:00.244219Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"dsu8x83n884hyxufnofg86i71yk1q7nh6hygdehoigk4jm8r9jbm1wtwt4fxpg7ui9mlwuytcf9y5qnztmkgcu9uo2pi0tp7q5eo5kvqobpyduvwq7vpqt0ru9aran7m20gxpf8s9re5r0nne2eu33c67v4toqv9jfa7jpsx\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"burugqdvcxub8ovlcrnln10krndwbqbqw3xh5caknq8o8ecdkxvoybdht0d3aivdbnvcv87bli8yi92oufs0r8ksu1tdd1fyqs4fxvkdbxshnqdbrlvvsvhvjbbuw1q02oe6lniegj9ax056uvofwdcvkekfvrlki9v19wwuxg7f2sndcx\", \"kwtln41a0r4wm496rr1dwq7w33t8l39ueq2s8v6mgv8jpjbxjftmv2mn9j9zm1det4eoa50q1ghgigugp0qf5u3lylrn3\", \"dei9p18h5z8g56cg3afl6dv2focpvwxfnkfubo2tbv0othv2t7r4zxxbdij91rrgymws8908f8kxz82bu35t3doogv0z9nwq6kjue5dtxijzxihky0mc4wrenvihpk7yolkbyys81o2ddrgce685k0c0i5uqe67seugoc6j2sbstcrcr56\", \"ygbdhzbkevfsc6t0crfeg8uo1aehxo8c13p86rrx74d4roumh0jxcmcfe695lp6x2zw5e2rv6wx2qdhye9uwxxfy8uk244n2cecwdqujbi8m5bdtuuhfwpoc2c4jtdm07r6ndielbke42rh4x8n\", \"1lkxf7lu45quajfzkptitazar17kw14q7hm\", \"z1f75jfa4briznxvwjulzzhekxw98fxjhie5xq92uzysowizoe694wqgs2wenkawol7n8hij5d8xaio1mlm1j99qv26dtbpheh7nkjzq5lq7tcu65v6jgx0nwneme1fm39hbzdqn1n40tqctyvsib69scj712968tz7mfae6d7yymxzj0uems48hezar5k5fll70q\", \"tyvxfsmkvnxpz2ogowrqw04r7wx650sad7\", \"rr60nhq2im34\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-06T10:12:00.244311Z\",\n      \"upgradeTime\" : \"2022-06-08T10:58:00.244341Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 1999958166,\n    \"createTime\" : \"2022-09-19T10:54:00.244384Z\",\n    \"displayName\" : \"Dr. Silas Emmerich\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Marya Cole\",\n    \"nodeCount\" : 66362532,\n    \"updateTime\" : \"2022-05-13T11:12:00.244519Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"7g6mlytkdtm97g6huzml5imawmdk\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"t4kluk1ryhnpbi72dy2dfcq3vg9lr70anqdjnwtzkmmv7x3jyv3lcrmjin8kfc21c9ebsbwkjh4gc00h1g8nvr1q6bsyiyy5m453pymvnuje6w1vy4y\", \"us3nvbwtyc4cu1yp80k7zouyjxd3ikw06od6nzuhtgy3p3udknk7e9j3e2rac6kf40e99oe895kbbxq98\", \"05b2orn7a3y\", \"rtref7gbnd1lajpe5mmxacpj5i7jycl1ioskhziy5tt\", \"ctunpoyjc4pwvwgcw6gchpvxn52komppq7v5aq8eomwkgqj586kie23i5129vf71we95rvm2\", \"ujmi61z7xaebc8jlpopnpmmx0x9g4lv69rncxo5orn1k1x5rrinjc6ghx9uet9oarub3whegw64o8zveuntyk4emkecw143984xzmi6idtyh3w4t69r4ih90hsjhw6zhcz1rss5s3sfzuedgrgq8x58jj0ruxluc36rshvjmci8nuuqrdz932otz8l9e\", \"dkknxxjb5l9sphap8ar045bv0i6syrem4dz\", \"fm33qfbghryxm2ni7x3xoardpq33exbdjrzw4ik1afe73mdgze5o8pi1dnw975sqp64say27dthmh7znr2velvny1v2u3p5pwlbocrgpv9bdof00u9p5xwv6lf9dzqts58xnq1a4n2jphxdupyeij1dobbljx2p6zs4zxgxa61nuy1g2wq0\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-10T10:09:00.244608Z\",\n      \"upgradeTime\" : \"2022-10-13T10:40:00.244637Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 1288665212,\n    \"createTime\" : \"2022-05-19T09:55:00.244678Z\",\n    \"displayName\" : \"Betsey Barton\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Kori Hackett\",\n    \"nodeCount\" : 1834853126,\n    \"updateTime\" : \"2022-07-20T09:59:00.244808Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"j2dab0tmmsztcte8qeoug452b50wo45lc368hc29iwgygie\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"viwxx3wi0zl345l506821l41r4n9ex0q4992yeg5wbbf7zqbqrth5u3ajdro7cmlteexmsbcilvyuf31buklfaskrws19evvrblz9yhypypxt0ckf33qh4dv2t83\", \"pu51uc2q9xx9qkfrbkhi4esm1b52f7pkdp6vnfd16gsh4hi7jejl9caeqkh9tt3civm2dkoc98gk72xwex\", \"3u29asm8uqtx2qrnkd879cgim67777dvni6mvvlz8g02cyedt8g4m655fg8lo2ce1qoydstphfhxh9ufuz86jn8mpxynxppouv3ntv8lu3xg0zalgbn8az8nyao7ndhyncrumizor2alliyqwnxmmn2s9n67154juz8skn11gixm\", \"sxlbm69z7lkrqmkeqyp6sjdeghh1ljezsmbld4r6sgbx71585u42se424ey47hpemb1s6p0sdcfdw0vvspp14r1b6jyv0ij\", \"8w59bzp95rm9vr3bym0b0hjmwn8xfudub8dtfn35exo2d7wjwy2uhua3owo73ypx1ltnqahcu1a5j8rmfptwzx7t18yw8lfyd2xec0y6pz9ix5i7uu5w2wi4cgz6bd5uck3h0qcrcj4hrbnn9afgpc0ln46v\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-06-27T09:38:00.244887Z\",\n      \"upgradeTime\" : \"2023-02-01T09:28:00.244917Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 1823696551,\n    \"createTime\" : \"2022-10-28T10:02:00.244956Z\",\n    \"displayName\" : \"Minna Wunsch\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Shea Carroll DVM\",\n    \"nodeCount\" : 2086246750,\n    \"updateTime\" : \"2022-05-17T09:10:00.245092Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"e6wf3z40m0i173fc1i\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"j7wg4bdoy6cjg6n5pqa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c26bd63e-f94b-4c0e-9d21-23ee83944878",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.245221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "2ee03c34-aa60-4ec8-bde8-3bc0bc072537",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/scb6q02rw2/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Alphonso Lowe\",\n  \"error\" : {\n    \"code\" : 1608063709,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quis voluptas voluptas et et. Vero quas maxime eos vel. Animi ducimus dignissimos aut modi provident cum qui. Ad architecto voluptas animi ratione inventore laborum. Provident nam unde laudantium enim\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ee03c34-aa60-4ec8-bde8-3bc0bc072537",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.243562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "85e1b3d6-035f-4b56-8959-31a244d50c52",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/73hpy1fkb1xi4fz8j376avlzwb6aifpogz21cdur55gsn1rxl95i0xoqmujt3381mspsf65qqzaiv9lmryip8m5zik6c3oatxaq6m1dxdqa24zc6/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"2xd50fsear75iebp4f15mzltvt3jto23k1efco6xv0rfxv4wadylawwzz0xgzdmdjeoe12m63icv7tgqsk28d7f4cey4s50ztuqqzgp8ql2d59oi92rm6ofs6u2959jiclgr9mvo049o22gxn1b7uw8s4e5d5osip9udbozt1whezs7m1mlnwy9\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"AVAILABLE\",\n    \"displayName\" : \"Maximo Blick\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"f9bmunbd5edy4n2syjdp5q9tu3jjifz7kvxa8he9u84x9gzg7scd1ysmj9q3fq28g9vvvo4gpi8az6oz7vdtwc3n\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"cqh3t1wtzxe6t9yxbmygv9\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"m11yss8mkgzh2pc4gv8pjccxugm6b5phdjuf8mbqotazb0zc9pb8f316evbf6kaoyyvtqsy1v4x6tjz83ezykzzsi2ud3pyulagw7sdra45vy\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"te38ej8qzvbeexknzyvk8raffuzkmdgae7m88hs61lqf8d67ya2i1twwybo82isrgnm21b21wnvs6rpbbswxzk4esfpuj9mweb3jmlkfm5tcctcgbbxp7ylxl9iybc3e4jpjdjyl54lcy5jpdgpmfx8u3u6odtaiwygu8pv11cz05enqi2c\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"yw3h3m7qng6yuq85m7w7fwybxm0vcrna59f5drlv39o7vr386h4dyavbi3b00oqxb2xt746hf0pdmsedzj9w8miynlj7uvkyct1opgyqogyy\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"6ufkds9a00cc40jt4qe5uq0lntaxi74jhp71zojhamcw92owecw03jlii6xh3qv1aes3v2c2bmtgw7z7ggl7vqctzel2thy53y6s8l16x8932dml0atqqpwba6ygg02bm4pbf5i96bu1m7in4kd9d0ev7ayjj4uy47ibr2yizs2a8\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"bkvg41b096konzu2wted9yqt7tlpu6bj67py4wrtsdn49byymrqe\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"sajxdnk7ilcad3myutxa8sivwgxt5pu1c1jdvac4lc62bdozu\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Lizeth Mills MD\",\n    \"reconciling\" : false,\n    \"etag\" : \"veritatis\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"8bhceepxvww7ty4f4bi1daqwjj82hvjxx4b5lyva03ensxd9itui3tzdjvpqzm1zp3mv08hgdhhkirl81q90ww2od8rd161ln8hjo2pqdu2x1ei9ooe445q\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"wklu3cpkgrn\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"byt1m107f4ud05y31t4q0u\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"dlcxrandlxau5g69i8iduh4teyoly4blohncqmyj1mghh58i61foxgf\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"0p48rmi75gdu3smkldfiep3z\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"i583lr6hf6w5ot8ii6ikua6blam594s0zj29aon2hqdj73xeo27whs8sda3bq0b2vibdgwfcsfzk8ba74k5hnm4swlqz75wnv3fe2tbakt9veup9au9l3855au7zs3t7o0be1ofgt7vlezo022mcmhpd32rvce\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"6b4j4gm024nqewsrlrev38w\", \"n7zpjwsd5pt88nuri77twh2egdur1l35k5tt2imm3ntf1f5cxlw84udqi44oa3xuigq09b36izl97unm8j6wfz8fxv0gazs9qdz1oqtxl2iqmrs3yjn4nsj1siz8h3cyfns4quyfpr0fawtgfrt85kag7xg2391\", \"pzu7s\", \"up23dot5jw3tlr7ydx56rj58r9950i6oy89lw4qh4j2twq3xr4dsgn6dbr5ohjf6fd7wgscoo4yrwfhj7bq74ddmr5\" ],\n    \"baseConfig\" : \"dm2scc8t9emlzxbho3av7qs4j41pg64rxi26ndo1llwodgl6zmp7mpx6z4sh2xwa10xgoefr2\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Adelina Stamm MD\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"rfuah57wyqxwjx7tcxbg2tso7u3k9dhz0iz49xdkp9hesav1nw6xg2ybll6vhjqhqdloc1sgibzmf6qux70orzo1\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"tuyf4lnbpe5xdc3sgshr7hcin24wc0bt8tqaq7oqf8r\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"2jagour\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"9o2qevq83r2h5dvm7w3i9b9iurr9l9xz1tb24lcqyui4b40erprtz98zwkucotk1dv\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"uxrz7mbxhktisw1eami34cxw1wy3fn2pxvn0qccn9gp2whrxy0s87vplealmvf7xwud2i9jgpprw0xrrwkm3xzs6eos8\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"lsubnvggseieu52l3lj84m8iihykpy16k2027h074t4bdxatnikew16nnnwnwhvobjwpj5t5s216e9k1yhcri0vuggtrwzmzmhxo00s26svz511weybmucc2z0ap6uugxbmndt5h8vsl4ktcolsrw4tq57vzo663ztx4eev8r3\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Joan Hirthe\",\n    \"reconciling\" : false,\n    \"etag\" : \"reiciendis\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"b9ctqvptt8brneofm648e2hhh80tx69knarfkuubx62bdf10g0yo92drcxjwc22sjq\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"4nsaapmt3ov1ux6hb3\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"0npua2nsxkmdulp94616j2ac38i2addh7e4dgfh6fcoohc6ak1n9rni40osa\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"rmp4eue6xgomo0vy1rwi4ssevbcgi3ptl5z7572jpbl4t36lmjnie6va70eu3g3maes6newfet14jot7oj395mqf1bl0e5j8u2fq15te624t5z3q4fff65i91wyxoixx1c5z2hdcbvjow36qggzzw0rl4i3v8sdgwwl86z4m4bg472cxlpr64hplk1e7nwycdrv6\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"uckmux2ks7zsxr93tue06m0okinsqv3o6ji6n1dc8nkb229aa\", \"ycmm6jv0abtu8auwx7lnticvxisnt96ei3f58f2gtgivo3z3o7atrqsns2c98kpwvg8j7voidfv4s9gsm\", \"a08jxdkgyops7rkvxdf9oz12jvgm7v7oyb9yg0wim9vsfwv7sr038pw5pbwn3vkm\", \"0vk332yh0cwag2cqip7xwup\", \"x050ca9xh2r1w41wadpou730p3oygzoto6s7ank452pylujeya35q7sw4akaac1nye2uhn0lpd71tvudrea4ho4b5yth0ac5uzemth6f8mse3r8v8p2e8wgpsm497pi0au23vllmz2ihbn5se4uzt5rz0610xper7i\" ],\n    \"baseConfig\" : \"ukv2gzhbrp0shnpw4xt1ywskfxkc0sw3uaoeube2k80fyyghx5lawwo12x70z0ywah46xo5lmtehy173atdr5ygzg1ydhbaw0i90lc34i54e89h2hnln1hknz57ushnfyf\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85e1b3d6-035f-4b56-8959-31a244d50c52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.243332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "3e717fc0-ab49-4b88-bda9-661ab3f5d58c",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/iuib3r85d75jaj9nmhlqx8cznkg2qq0x6a73dt81nutv3jwv0s0stsxushuqbnrz7tdokp29f5bo4q046c621k8bxnpr0lmf2rcjqt806fn00nrdj4j25j3amvnnffhvyjcba74fvu0i6/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jordon Casper\",\n    \"error\" : {\n      \"code\" : 1884674786,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Occaecati sed exercitationem fuga aut ea rerum quis. Non aspernatur nesciunt ullam dicta et assumenda voluptatem. Libero totam dicta est tempore illo odit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jenniffer Ratke\",\n    \"error\" : {\n      \"code\" : 1844059037,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Non excepturi non et quisquam asperiores blanditiis. Labore ab possimus ut est consequuntur quas. Tempora incidunt omnis ullam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Karlyn Pagac\",\n    \"error\" : {\n      \"code\" : 1872043634,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Ullam enim voluptatibus quia est et voluptatem natus. Libero quidem impedit eos tenetur. Neque sed porro ut impedit eum ducimus officiis.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"03lldhndevg5n2aqr11g3hqrv1au4ux1sbny9dy8pynhccx3o18qa83khjx1jlm20kaeotl92fa5jl2h1rkpsdysn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e717fc0-ab49-4b88-bda9-661ab3f5d58c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.242273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c681743d-35f6-47ca-b3ac-a00d8d59a7f7",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/9g76ai4s7h1w3ui09cu4wvygqgn4lsntf3di2var7ici79pf395iewyd7hc3heg16ojcvlw4ed4ffilhh75x1b2mc0j0y7gqrk7svjp974n8ewih7hzs3e5hr0ci0k667xmylaijbrb1ogzv0717uat/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Eveline Glover\",\n  \"error\" : {\n    \"code\" : 31705380,\n    \"details\" : [ { } ],\n    \"message\" : \"Nihil ea sit aut enim quis qui hic. Qui autem itaque. Molestiae fuga modi quo. Ea architecto omnis sunt. Nisi et consectetur sit perspiciatis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c681743d-35f6-47ca-b3ac-a00d8d59a7f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.241774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "b5e12c4a-a54d-4ebc-99f8-513bbfaf5d83",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/4j650ckb2exs5tchbj3k82616p1hivn3vajsrc7jhotae4echzfw3e2bhvheja6v14qt569fc0l3onzhcwj4aza3lp9guem5ha8hqzp43krvp6zbn/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Rosalinda Haley\",\n  \"error\" : {\n    \"code\" : 1945398460,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Magni aspernatur quas. Quis accusamus quibusdam sit maxime minus. Beatae commodi molestiae nisi aut cupiditate. Quisquam qui quae facilis aperiam quia voluptatibus. Maxime et voluptatibus aut pariatur\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e12c4a-a54d-4ebc-99f8-513bbfaf5d83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.241554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "10feb05b-b2e6-4b99-affe-e5f23d9f2e8a",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/12zbqtoq4brmc0bc4r4mnki5gq4ag8us6rf7tuqdrb5j5idvsox0mqx9e8gbidh6m1zkqf0v1cklys8250pxm6balm2wy9kvps72m2atu3bemvz5ynuwvi35mjf1bzmutfqdl98dfo7kq9whbggv0w4h0gmp7v28gro9qqaufe3oq4yh5/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Keven Hartmann\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1063229254,\n        \"details\" : [ { } ],\n        \"message\" : \"Voluptas laudantium sequi minus quia et earum in. Officiis quidem rem dolorem sit ut inventore sint. Repellat repellendus aliquid pariatur. Corporis rerum quia. Magni est recusandae facere.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"wa10di8b6dt97q9f9mfk6dbhjvemrjr8c3o19lsi9nxrynkmml1mg1931s9t5rg58gmvdetcag6kjese9dkpogs09zg0ugsls4fnm\"\n    } ],\n    \"versionRetentionPeriod\" : \"ssvt207875mdc9hf099t5v3kobou86ok1qu1sm05qilgrsqro3d5wtlgowummisr1pkl423ks2oxon99g5ejqk6ma32e3nkmzm9rt4nnig7o7ormlussjbikdx5pxistgl9df45o84utgsnl7rn8viexiptof15t8lffq3gqi7k8g8922\",\n    \"createTime\" : \"2022-10-29T08:29:00.238076Z\",\n    \"earliestVersionTime\" : \"2022-08-05T09:34:00.238106Z\",\n    \"defaultLeader\" : \"y5wrbi3soevce3m\",\n    \"name\" : \"Osvaldo Doyle\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"89i9wjcc9z790p1rwxwhz3ltaus0snm8jy57gx65lxry4vojewde1yj5oi4b1arz1rlwhtbe1kqpbkta1d1j7sxmrle\",\n        \"createTime\" : \"2023-01-14T08:05:00.238239Z\",\n        \"sourceDatabase\" : \"gpueomlkkoa0kq1dsrvjol9lo3i5m2pzihuvvpxb0s8h8w7mzsjl5sh2t4q2vbewk58fzyhw8uyrsrxtkdt7plmo50vafombpmiu7v0j4lc1pp4b24fv6ro\",\n        \"versionTime\" : \"2022-04-30T11:24:00.238295Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Aurelio Zulauf\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1611115595,\n        \"details\" : [ { } ],\n        \"message\" : \"Doloremque cum vel dolor quia suscipit sit laborum. Praesentium optio et nostrum. Eaque inventore et nulla at voluptas molestias.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"mdhk83tp9xe8i09hdi2kx0q4uwzfret66\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 412348053,\n        \"details\" : [ { } ],\n        \"message\" : \"Eveniet eligendi quidem labore. Nostrum ipsam sequi sequi nostrum reiciendis. Et soluta sequi.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"xyx4po5zcuy2fh6ll39qkpja2qhcmjb91r66ibtdmurzoz7j50xckzbpmw8egli8yhum1oarw2j3xlhxn4tgnlaukafvwnhuypw6a88w8ov4l\"\n    } ],\n    \"versionRetentionPeriod\" : \"kg7ti849wy0hxaggx4o2fl65w2dul6dfp33ie1pj63lvtrizhw51v2qu1jj8iauj59erizh8nktjrtoxl5nf4bec0tef15lc82caxnn9osc1d2mz7i1juavg59z5ugz45hvhsnox9ozk79r2\",\n    \"createTime\" : \"2022-11-16T11:04:00.238595Z\",\n    \"earliestVersionTime\" : \"2023-01-03T10:18:00.238624Z\",\n    \"defaultLeader\" : \"r3mw41k9ne3dpfrai0b0beoe5h3fihalxdd\",\n    \"name\" : \"Delmer Glover DVM\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"5kwsxcd9l5hnth4j0klbkykklehg80qwc89qaks0qou82ef9ug79hvf9n51qgbwki5pkn29k72zwhnwpk46psf2qvlkn02axug43m2\",\n        \"createTime\" : \"2023-01-10T11:50:00.23874Z\",\n        \"sourceDatabase\" : \"9eug3dc2gi3c5lo60jhqvc2od8yd94y3zgg0bz28hrag7mldiq4qsarsvpd474a6uwwhl2xmso2anh0hcl5pc7atdk4fy4ykzrkbxb1zyi83u0i1p5h010k8w0uqvxmktmlm39f43zfe0c1fmnjdlsq47rohsamz9vafbk\",\n        \"versionTime\" : \"2022-12-13T11:42:00.238793Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Collette Smith\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1347842061,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Maxime consequatur sit consequatur. Magni et voluptatem cum et. Ipsa autem earum. Ut corporis quo cupiditate et saepe consequatur.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"iakifuvxc41qsxgtloek8jnnxlvtqlmb1h23t2pv7v802qrcqe2ytsakzp21dzxftgp51ghlidgbgmvplohjyblc9o8chima0lhulz0oro2fhgebusyvw3lz6sm3g5tp8io8vkrz1i5l5x1g\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1342946576,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Mollitia labore earum nisi cum quo dolorem dolores. Autem iusto minus non harum ut voluptate est. Hic reprehenderit architecto quia ratione. Delectus enim inventore dicta velit.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"4agirfspjm0cjef9xq5xlspodu7eqraq00iii3w6darav1zzwud25pj058yax968425uk3wihzz1vq8yyf8cutu9pkx4ryxltcprerw620q3vsa5ju2rdvf40bo7f127ede0ej7xopypky4siy37kups3861l8p00msw2j5ftn4vlia\"\n    } ],\n    \"versionRetentionPeriod\" : \"g36wrktcynq6znl7zjnosl6g9q6uo58fn9e1uhem8ewho7495i9t7z07hq4moiesctpbe8dtufjt4ypuf3jhlp5ifqb188w98eru8xuhkvssq\",\n    \"createTime\" : \"2022-11-06T09:58:00.239138Z\",\n    \"earliestVersionTime\" : \"2022-11-20T11:16:00.239166Z\",\n    \"defaultLeader\" : \"r04ea65vvmolo8uehtp2xjsob5q8xivocaeu2sp3lkze1c5myvd74m0vgrfe0kd4y8e3ldzq2yrsf\",\n    \"name\" : \"Sherrell Gulgowski\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"w71223119272ntjwfrbrq0lqsfu3bjxhjaenwek01e7vumgkrj3a52m2ansdvy1hilqhoxxvqw\",\n        \"createTime\" : \"2022-05-12T11:27:00.239291Z\",\n        \"sourceDatabase\" : \"mij0vbdxpqj7n46yxaut6pseo6mzb54mbbpeecthub0ij5r8m8sqrkgzt50i4c4mecajrdec75yiirz7ttldkhw2gubj9nlt0p34dwhfdz1ecnij832cg14up7x38\",\n        \"versionTime\" : \"2023-01-13T08:31:00.239338Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Marcus Ankunding\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1810295836,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Ad aut voluptatum inventore culpa possimus quasi. Id autem non placeat laboriosam sit exercitationem. Consequuntur blanditiis et. Ad est voluptas eos explicabo rerum ratione.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"b5imppjuyl6bbcn5vgn1fw4bc0gn4py\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1738569198,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Enim eius quaerat distinctio ut sit facere. Qui voluptate explicabo voluptatem et. Quisquam voluptatibus aut dolorem autem.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"vcsbx0qd03snsaoacp404o\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 817977474,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Est debitis qui doloribus aut. Dolorem adipisci deserunt a dolores alias. Dolorem quae sunt. Nam ut ipsam voluptatem atque quia voluptatum eligendi.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"28ejidexhnp7qsjrr7eff8r6pynua99qvf7cbkhohxwh556e1wjqapbh5fcq9dkpv6oemxd15eihm9vk4854l7j86pdbluwp6osp28e6s9cfh0f7on3lf0f5tvt7lc5x3\"\n    } ],\n    \"versionRetentionPeriod\" : \"gsfsg8qfyjyv8nr7r9frmbehzotwls5dkm6rt3rqjl0cvuuhn0di9rgaryyooyxf0s7okxqub4pxmxppj6uue765lvou817eypivzl42kk4hdn7b4tjpwos3g77knqy\",\n    \"createTime\" : \"2023-01-04T08:31:00.23976Z\",\n    \"earliestVersionTime\" : \"2022-07-13T10:33:00.239787Z\",\n    \"defaultLeader\" : \"8tzwt8lj5n92sruv076c\",\n    \"name\" : \"Filiberto Goldner\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"0gdfecs53bwqtfuedmeqqcgvofzhdwuzuaj6d5\",\n        \"createTime\" : \"2022-11-20T09:50:00.239897Z\",\n        \"sourceDatabase\" : \"95he2497ivqzggwpxu99a921nskgatygg4cgfm2epxmu9cv2s3nq3p61k0vzvkq3gtn1y5xk68wiiqqol05dxp2ohoh2pjh2wmbj0a3g0ljr3259tcs7o4n1t0iflqyd89vp5ko1j1oena0fu26nwa1mg4nofmswk8k08w4m3u5a7f3f68itkw45fkj5e\",\n        \"versionTime\" : \"2022-09-01T11:09:00.23994Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Sidney Greenfelder\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 116763085,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Vitae officiis voluptatum nihil blanditiis. Perferendis deleniti repudiandae pariatur aliquam. Sed maxime libero maiores dolores.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"deipaa644j38azxbe3zx1kh74e60vobg6hx639990zbwifuy3pxq185cfuzgxxas4vkcr7aju76difsgiwtdqq4j1r6n9xm3asahbl\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 853624669,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Ipsum est quo rerum et aliquid qui. Voluptas omnis et quo omnis cumque eius. Dolor temporibus natus.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"wekvy1ejcgx81rn\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 606310360,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Quam doloremque possimus fugiat officiis et. Vero non perferendis sint distinctio earum ab. Ab veritatis eos quaerat dolores deleniti. Blanditiis consequatur accusantium ipsam nisi dolorem.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"9hhg5i\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 109504376,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Saepe ducimus nihil inventore quo qui. Laudantium eos atque odio necessitatibus voluptatum qui eaque. Molestias ea porro labore debitis fugit. Voluptates rerum omnis molestias. Illo magnam fuga explic\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"z2kjkcf6u3gumsem0vkpht1vjs6p6h3gwd4mal8av1x7jswxs28w5iyh7jvvpn1z4gstc7iffqfrotnut62bqr1b98irp1uvvul35fn3k4u4l6rmz3654bep0spypx3gx75\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1268595943,\n        \"details\" : [ { } ],\n        \"message\" : \"Nemo delectus distinctio consequatur culpa explicabo quia molestiae. Sunt inventore quia aut est quidem consequatur. Nisi facilis assumenda et facilis nam. Asperiores reiciendis sint consequatur quae \"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"w6fx5e88dcck91dov6rkvxv3o2m3f5z85ye0whsevo0dmmgsileoy0sqssqj0lrueh6qs9ellom1tx7\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1920687939,\n        \"details\" : [ { } ],\n        \"message\" : \"Quibusdam dolores id ab autem corrupti non. Eum aut adipisci qui voluptate et. Occaecati modi omnis. Sit quis autem est.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"vra304y8xb7ozhl0844dmcvdse2\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 261622539,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quod animi minima ab recusandae culpa et. Cupiditate natus tempora impedit qui. Consectetur vel et est et. Laudantium delectus quae itaque itaque ducimus. Cum impedit accusamus est voluptatem asperior\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"p5ui4oxv97vljj1ef7nre\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1163170285,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ea ad ullam. Praesentium fugiat ratione esse doloremque. Omnis praesentium voluptatem voluptas esse distinctio sequi. Ut dolores sunt beatae natus dolor. Commodi accusantium similique non.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"vvop57yileaqqorwudniv11fpxyno07ty4cc7wcfh7yavvcdehvgghbp5ecvj22wd9tukkurbmnu1rmfd89umuldt\"\n    } ],\n    \"versionRetentionPeriod\" : \"fjntk5x5flu47e2ellvdpxbyi679y8li7178r4z8rhyrmud9f84m9ijvojy6wod4455rl1b4eteveyvecbm9q5rr9qlmtdmxel3un2g8q0zolqgcljod95jd2z\",\n    \"createTime\" : \"2022-03-21T11:21:00.240968Z\",\n    \"earliestVersionTime\" : \"2022-04-20T11:08:00.240996Z\",\n    \"defaultLeader\" : \"9euu0y287y4rb1atp0q\",\n    \"name\" : \"Asuncion Raynor\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"5mocc4qj530znf28fu92olqjhc3iqyrutiml8bvzf89dr45i2qu6gv0n34f27okmgbeo4efgmci3xgl23h\",\n        \"createTime\" : \"2022-07-28T11:17:00.241107Z\",\n        \"sourceDatabase\" : \"s964pu6q4k6qyfnnpg1ywrle4k21hhalgkme6vy1jaf0q84d0rjs12sbqx851skwcvqt4edcudxkf9ehaz6ioxh6gftf1nk\",\n        \"versionTime\" : \"2022-11-26T11:39:00.241151Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"CREATING\"\n  } ],\n  \"nextPageToken\" : \"mkwww9sx6kynujdbpeqwmnqdbj1uowd891ay23w9syvrznyz3u41fic6s2vfkg5w2l4zrsev4jv7b0mrk9871wnvt2unerupp548by6nbyt7ve9yu08bz7pk7x4m14kvzvhw18oq6nlhz8j5oyc9ekfxb2vvd5qymrk0ydbzjbbbxoz6m0agdf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10feb05b-b2e6-4b99-affe-e5f23d9f2e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.241309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b7dabbd4-5dd5-4354-8dbb-7dda30ed8cbe",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/ybjnvezy8qvf8x53z6qx5ylweik42p8jo4pxairt4j74ml9ngdbqx8j9ji7m4c611imeogtl8exmoo6pns21y63wk91qrw6fzhsodjjmyf9/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bsfr3t5pdlqug0xbl5xq7jc22vs3jriiy9v5qv0wyvtjjlq0pwyt666fxfn64pk9bvi62jhf1fg8ioqlz291j5gpdk4rw3rm1qyy5dpdyildvqhexcap6fa\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Ms. Jeff Bosco\"\n  }, {\n    \"name\" : \"Marc Bahringer\"\n  }, {\n    \"name\" : \"Marian Kozey\"\n  }, {\n    \"name\" : \"Nedra Morissette\"\n  }, {\n    \"name\" : \"Harold Streich\"\n  }, {\n    \"name\" : \"Ian Connelly\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7dabbd4-5dd5-4354-8dbb-7dda30ed8cbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.237829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d5521518-635b-4805-a00d-e6f294a43e5f",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/xz80lvy8nh6f6mbz2orykl66g07onslc4hkh7s4lw97s2wq3ctkjq97cpjpo0fg4eucvyr5da2g49wpncjrgectoprqolyu/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Catrina Dibbert DDS\",\n    \"error\" : {\n      \"code\" : 1738047553,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Atque eos consequatur dignissimos ipsa mollitia sequi. Rem tempora veniam. Dolores sunt consequuntur illo qui et. Et odio occaecati qui rem eum accusantium. Voluptatem quo veniam quia est vel.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Herman Prosacco\",\n    \"error\" : {\n      \"code\" : 2059630017,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Rerum voluptatem veniam cum a quo quia. Nobis labore eaque. Velit nostrum eveniet voluptatibus vero minima. Minima ut dignissimos ea consequuntur quia vitae debitis. Neque ex autem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cristin Schumm\",\n    \"error\" : {\n      \"code\" : 470340439,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aliquam eum quia illum ipsum aut ex doloremque. Minus commodi omnis. Voluptatibus libero consequuntur laborum. Optio voluptas at accusamus et suscipit nihil. Molestiae voluptatem aut nihil id rerum ei\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Alexa Jacobi\",\n    \"error\" : {\n      \"code\" : 431233612,\n      \"details\" : [ { } ],\n      \"message\" : \"Quaerat aut voluptates velit enim natus cumque et. Et reiciendis nihil magnam. Sint reiciendis molestiae quibusdam praesentium officia a quis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bernita Kertzmann\",\n    \"error\" : {\n      \"code\" : 1311724288,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Veniam cumque ea unde. Voluptatem adipisci maxime asperiores quidem. Non enim neque rem magni officiis perferendis. Vitae eum esse qui voluptate ut.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"xra60za\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5521518-635b-4805-a00d-e6f294a43e5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.237442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "7a4a8c3d-9fc6-47c3-90a6-35ced118800b",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/eh9hgydf9ttu79yfyyha1w3io7i0o1utase1fvuth5w8m53ud4f/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Don Gerhold\",\n  \"error\" : {\n    \"code\" : 365520501,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Doloribus sit reiciendis et qui. Ut et aperiam quasi enim in. Repellat rem dolor hic ut est.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a4a8c3d-9fc6-47c3-90a6-35ced118800b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.23658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "6c6f640e-b9d9-41ea-aa71-996e5d48a588",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/c5bvgfrz2sd3blvq5a2jidc1ny5poyzfn43a2pzozgl93dqdyn4mj99xo6mom9ddbcc6jlv3l84inc1yf0m4m69hha4c62yvs/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mary Carroll\",\n  \"error\" : {\n    \"code\" : 700154219,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Pariatur voluptatem delectus quia voluptatem fugiat. Consequatur eveniet voluptatem quia id laborum incidunt ut. Ut aut veritatis voluptas odit. Dicta voluptatem eveniet sed tempora exercitationem sol\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c6f640e-b9d9-41ea-aa71-996e5d48a588",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.236378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "1e98331b-7142-43df-9df8-2ffb950df9db",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/h18eol8r2pkxkj4oqnaop4kxel20e825i6mx8q9hrgryx6v97tfzufo1tq79yufxsz4pf0dkqkjp5n3gm3v8/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ary4bq7sm50ffcv99u4mu4jmgwzu2ck16z6x95bj2yehfoa55ab8m13qyna2sjgyz0hgp2j5r3vbzre67ey7fz63baikig43rb5vntpf8erh6u33fh\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 276178134,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Corrupti architecto labore consequuntur corrupti corporis expedita dicta. Sed consequatur voluptates similique quam alias. Qui commodi et molestias exercitationem consequatur. Repellendus eos perspici\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"wu3gxk6abiy46ts32pl51tk5qxkf57we5seficz14g9ihkkdxkuso1a23z5b0t0tce3kp5ic57xegm6dm6s452oesgbpo9uzez\"\n    },\n    \"database\" : \"2wtjrpxq0svlza1boycxsa0ywkmaecy1q9f66xhk8fm2xke7nqy0xi5rjww0dp3fdt\",\n    \"expireTime\" : \"2022-12-25T08:49:00.235475Z\",\n    \"referencingBackups\" : [ \"4evr4brf7z9ik0o9qewjledpbs1epggpwpy46i83iunv1rqyirn4hbpyrihjqdno9ul6sigz2namuw8gwkbbpze2n3lcc71i6f488j3cbqzarvxfwv2ly3gt21j05\", \"6nc3zuxppk9xh0r6h765jvcqerss8y95dwst3hp3btp205mmv7wlbkd13zhoe3gnnrox1mbke5eyle59eu8hsv2oq5\", \"g3d3nbayuk3olczu4210qtnkzo7dl95rh51a49hcsvbvea9sdz2po9w\", \"neplileo5fjp8z\", \"r31o3a0d08nq3dbn6rl9i9s80d768lkvevdw25pf3xjtp38zllvn2kebtgzw0uts56lmrg10n4k3palr9du25s92d9qv2qrnsvtmqawnw4rcpw5urlkw198q34w714y8au5swfl0p\", \"mta1cwywh\", \"vsrfrgev2g2of0ikqabmsa489pm8boc2ugm6ng1uavlach4wr8ohs048zg9g2tyid6veahfs30wppv18k3q2i9h6f1lbnxn7au27kfk142zy7jqczyvaixnoi46iyq\", \"byoalano2l91hvf9h63pwcplfuzzd5nxmz4dmai6k8jre3ikqpy5x0s7cfauu1up6sfy1n71qxg0zhkpdppw0zbp94jywlk2d5g4klojqjhvjo4euctf44xvxg1usd7vyzo8qv7ecyuhkp3yq96dh9edhkh3apu665qdri34j6yiwknd8hjy6o\" ],\n    \"createTime\" : \"2022-04-08T10:45:00.235547Z\",\n    \"referencingDatabases\" : [ \"71y9u5pxfokxb7wdb5hlrudhjn3y6465aiug3gyncl04ntckiqgiu6\", \"r8wui3yna0inb69hw20jcta611k2ivt7yb9yfperid944a7nhfoqpilwzrab\", \"2nmkuydh8pjngh9igar3lnhqsf3q2kzu4n7rg6h7pm0sd22nu1vht92jw49nw7nbbaethi098z8a2rm1m57dszu0bilftv0nuktgl584xwx9fgc52il7sfivzzbycehznsbmhz9\", \"wbfo7at02mmf9o1i5gbtqm96y2yl8xgp9uhcg1vj9fupfrqnbtwx8m9jywlm0oj522e10k923095qob3e35r8up10o1ungf81qx24h9cigbria4ou56gxsa0lheasnl8nnucomddt3s2mbw5rf4s4lxwfg19gyx7s35iv0fejyp7vi8zmymqhav9noctyx\", \"i19gjut0gqig4\", \"199pdgpp78xa6xd3g2ucaiz3bgyt8xardv\" ],\n    \"versionTime\" : \"2022-10-15T09:56:00.235608Z\",\n    \"name\" : \"Many Pacocha\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-04-14T11:54:00.235702Z\",\n    \"sizeBytes\" : \"9308lb8\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 330047904,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Veritatis corporis aperiam dolores voluptate ea. Aut nisi est sed ducimus. Tenetur ratione occaecati inventore deserunt culpa rem dicta.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"gzguh\"\n    },\n    \"database\" : \"4a3s9m2m9hm4wkfg1g3rkyixuuvp0lksgenp07n3pe6faacsrxel7xeua2j70oxfdgdgpp8dxmuxxr6qdp2bv7cuy3wzleph00nmskkwrwyfaplqfqahar3ocx0bwpf4t60firkn4f6wfk4scrskv2k6a8qirfgikfgd1j3cw86cf2\",\n    \"expireTime\" : \"2022-10-21T09:54:00.235866Z\",\n    \"referencingBackups\" : [ \"xysz186th2gad16wap1392astwkcbrh91913zwfpyq0ni4i9gjuhdde9m7atu2aft8u6fdzhheesjgt143p53jzsch9v2r2oz6kjn16fqzp99pyq71jtdnebdq3riccexc3zxpx1c8vl33ykl80y15hwx5dd78sn7dsi7pby8eeqoinxa58sqgzayv7h\", \"2f926k42rikwbalo4giqig17fdait9lfwogm6m1x9clf5jax4gvnufm0przkyspa68tmosf10y0wx1x44gg3r1yk93ddf93mvbkvketert675jh1b3pxzwj7cd8u1y6l398wqr\", \"dcc26wymznjcrlvnuc2k8qwxp3hgoei1sgqcp1m1zzz3xt4b1psz073hnn3irirha02lzc1t09618eyi7yo7ie0xjky7qwivwittdromx1eknr43mes01qa9m42xcp8hhgfdziyi7bt0\" ],\n    \"createTime\" : \"2022-08-19T09:26:00.235913Z\",\n    \"referencingDatabases\" : [ \"j4zsg81y75z50hs0vum3iqjfmhfr5mfvk9\" ],\n    \"versionTime\" : \"2022-11-16T11:40:00.235947Z\",\n    \"name\" : \"Andre Brekke III\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-04-15T11:31:00.236038Z\",\n    \"sizeBytes\" : \"8f89wzg3yqunuwsb1dos6y8mrcfi2b6rnelq3nlpzr1w7v9wycf33xmcidar51lm3owhm0hgh8hjtxzxqq0qq9ucdf7encsonxjaa3if1pxpg660zgelz18jywvwlgclimh8y82upvyapxeoag9cjgo3nwx869cxiyqfvjy\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e98331b-7142-43df-9df8-2ffb950df9db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.236133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "081d2825-9a74-46cd-a3e6-60b03c29daf3",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/76hwko3sqdach6j7rzxvkxf22bx6sin6jram3rt3pdavqwrw0fmjo4c16l5ime6qib9hutu/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Amanda Stehr\",\n    \"error\" : {\n      \"code\" : 1825440363,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Exercitationem qui enim molestiae eum. Mollitia esse optio laborum libero aut. Dolorem aperiam et at.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"bhlpdg981d5xqjyaxk5xhs3z7lsbsoia\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "081d2825-9a74-46cd-a3e6-60b03c29daf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.235274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "95d65bee-c21e-48b5-8627-d9a734e57c33",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/rqoa8u0k3koxt2bg4ri2cp0k8ceuuim2tuoew3dk3700qowbmmr3hyceusnphgbadoziv2q91ckbpexl6nkpw52s3j2yklp7aqos35xcbjzbsx6uk4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"6cisx9hmrpeznqrbyy09r2z085sec0xgqq50t7rh12ygfsj8p977x5gc0s317j\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"e7tigmdzbe92pcxpbqdv71fog24yej2shuwagoe6fgxeuxf2xas5w58cwtcj9yd9nx0bsws8o7f8s2frppausv4dvmtfv60r9024snsp5wfjjjy0e23g69p34n2vs4bczgsplhqx019gr4gx918aajoa5eaag08alkbjy1x0rgm6oo0iy2bppeb68dfck\", \"fdl8gi8139q5uexc2jzn6dysidxai03od7hbrx44czdcw1vckrv2\", \"9i1gzsvp7h2mtzgp8mjw8bl1q0z9ri6n5ifm32yrc76dko8pve5ajodvdnyw3fmw1wyk23hum9pdmu0kowyymbboq1d2cfl\", \"1432ndqehy0kdchubm01immf9bc55tthwbe8bscy1k8kniynsnb4ipwqcn0w75rk8kilk0bueiuwmluqgtt8gfy1tktmlt68oo4tx99ghkeonjd0p3rgadt3afmdyla9oivovop051mfmrvwt\", \"8yrbk6yoj6sqi5p3v3wij9d5ihht79rs0axfgqks33lwfviqtkc3sp7iec47g4ywxy1ym3cq1wqsknogy8mc5g5uny0u2eayqeomnl02p7j3xcph5y7o3mxz\", \"br2g0wmf85f89fd6nd4wralg32c1jf61xx9iuy19msexe5k6lqjq49hu00tmy79e1h40s4inqnaj0kjgy722n2gm4p4qghw2dshax0liw6habzk8nlvvsnbo4ftg8uc6qjq1es5hv\", \"bqvbfz2sndiz18rfelyswx469vazaibsm510fgnllqhcnpp0yfkfkunpemooj0e917w3lbxovh62waxt9t3ohcomenmf13w4466qmgjcyoj3o93b2rdeuudhag2j0sa1c7m8h82af9ycwwm68ckpgobpwmfahqktzm0hme250xtqnajgtxnpaulrl5tvv9ps1nlhyyq\", \"kyo4hq662bvrhfyefxd0o44fxqwv4a0lu7fchdijb3nyvmiljxgjwqjdf5fx01fihb3q0s1kyzld5bgddmmz8200g\" ],\n        \"dataSourceSeparatorToken\" : \"9ohqht3v7f0xghtykypmpu7p6ze9h02q1ff36qezvxx8m2svchq0t31xyf1gaw42miwk9g8shnco3erro6ztgsw6v52a35dw513x5kt1x2cpjhjbyc1j2pojket7qn4vdc\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"efhkvyrklj2fuvrou6n463htwtu1r581419mj9szg1yw57uv4b4cvdgf8lvzom36wq3hqz2uu5xl0a1n3m8stf7w5xcj7xjj20qbcbvpgdq8ctblq2gkomrc5vvf3h0bnlovxmzi9u3bj0xo2dfdwtzy9gqxa7bbj63pdnonm8as6dy6euf1sxnj7pmwz2v\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"tpfax8rp3iwo4fz7bnfmmwvq0bc9axw51nvspye3ct2tvsvsajxr0w1qxqd4nbj28t0y6w83a4ejgfhfnzr2tzjyxi6s40ekk86qo0royv1wqdbsbg0lophyd0b3xqzyc33pe90eflilewn4xl4lnin88ohfa4g514ozdgk6xveykaralfse8ytayl0qm\", \"423piyuqcrc873f02l1u3n9vowjoscielp205jd81d7vi7la0029i5esrzo97fbal1a8l8kx7r0bm729ohivbcqqdai5d818lsv4xaqsi7v8sa93l4trj49gioflbzr4h4511soz1okjnu76lykpw48f5ltks0lqlklmi8t8tavfzoz4yl5\", \"vv37vj61t4vh07lhs3qvx66sq2di6gmi20uwb3y251p1hj10k1qveu0jrcjfgc2nts46afojwqbh0f04vgzw9n74odywki8v92tc1awp8epfqgdepf905x1gt3w06mezy79efk5orvzi9899uncdqw32d706fwlrc7xs0e0z3v1t91feyohlot8fycm\", \"untrz8ciwcydh36yh65n0bm6png50mtw83wa583acpkdw6a61oprkoawfnw7r69lkx1k0zquk9bmo13y2f3kra8zucob6jjujyp1wxrasls333nkk6z7p1\", \"lj6ulxdx62i1id0mkj09sdslnaxv69ag2del1xexo2t64o05u0ma35hppjsmat64vrfck7xmnt1ouecr297cep702c6pn2r8ovkjlmj7fxioj2cullq5f1np294bp7nblziuebku\" ]\n      },\n      \"startTime\" : \"2023-02-16T10:37:00.234461Z\",\n      \"endTime\" : \"2022-11-16T08:00:00.23449Z\"\n    },\n    \"name\" : \"Nathanial Gerhold PhD\",\n    \"details\" : { },\n    \"startTime\" : \"2022-09-23T08:58:00.234577Z\",\n    \"endTime\" : \"2022-10-26T11:40:00.234603Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"1bxi2wndkgs2j9p2sd6fulyb560cxp1rerns5cxja1810inq3qabpu2md0lmcgcw16brtz4o8jkzjofinwbgi5012iso36usj8hl17vrt1fgkb8ebr44udmaklcpmycp6ydpytb99up0qecxfcp51zmvzudy59mk\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"qdywnkuih8b38xchg7vlkt9wshroa9cukoak0g\", \"17ntep5cs7mxk377vu6chmg9\", \"npno6ohsr9b34pu1222g5o49r7mjmivjaybmhrqw7wppj\", \"j0on1kkkyg4d\" ],\n        \"dataSourceSeparatorToken\" : \"66ge7gcasaghq0uatjew0mgclisazvq2tims4r5cgsqirpbj8w79o5h4r2sp3oj5lpov5rgcyvtcuzpeemr4vmkh34o86sal7860m6b2gfy8bnqc1fcvstfpsiqmg4j2bj4tbeg1tj\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"p3n8etchhj3quzj7d9mtjiwq4ayokntjuk2k3c3zvszdcnjb4r12syykbppp7ybbl5ukcfupo6mhqlckjokavmv8vr58ql8uxuw46zhc8xgtqhrux43v84nazli7ovddb51wnd9vqe\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"d3zyyr21eog4p5ju3zmsdxb62rptag0mech\", \"ejwtm61sztvdxmchz5bmzb6yj3d371kzcgpfxowvdloffnutevy01i3sg5on5l541uv3k8k2kunj233ejm9p95r7v6sbnru4\", \"7lbql9a5kl2hmzauns669vq06s0tzsmxyitckf8debntlbplk4c9am5hpeqivmp2bu8i4chdr1xh2g4dqctq5idg559amxtrjobbh8m0bj5itob3\", \"t5zcendvri499jm6hq4egke48gk\", \"qavjq4n2k9bin26im3zjqax5paum0rb3djqritlznijci99dy8785tsk8ro51xmnr\" ]\n      },\n      \"startTime\" : \"2022-10-12T10:29:00.234784Z\",\n      \"endTime\" : \"2022-10-17T09:04:00.234813Z\"\n    },\n    \"name\" : \"Mervin Kris\",\n    \"details\" : { },\n    \"startTime\" : \"2022-04-25T10:26:00.234893Z\",\n    \"endTime\" : \"2022-12-16T08:01:00.234919Z\"\n  } ],\n  \"nextPageToken\" : \"w9x3kqs2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95d65bee-c21e-48b5-8627-d9a734e57c33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.235026Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "08f4e9aa-5882-4848-9c2c-ca65793fbaed",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Mr.+Saturnina+Mann:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08f4e9aa-5882-4848-9c2c-ca65793fbaed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.234235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "bc09f619-c6e3-481a-be61-877dd9bad48b",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Rhiannon+Maggio/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"ll95foegq6df5zh928y3ml308fq5euandlyke7amyqs4af6rosf1rm31t3360du16ebiavo7ow8hhyhyl0d8u70juon08d3pc936t2c3x9xyg344p69fbow6nitk4d83k1j9le2rwsia14u75ceu6hxadrydmvf\",\n      \"hasPii\" : false,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 445486742,\n        \"depth\" : 1982026471,\n        \"endIndex\" : 272853996,\n        \"dataSourceNode\" : false,\n        \"word\" : \"rf6gjjdl2t6fypbayfcx9ao763i6yda623sjq9bvn7fjw6dg0plqs5idou2ode8j\"\n      }, {\n        \"startIndex\" : 1834169709,\n        \"depth\" : 875242349,\n        \"endIndex\" : 844075448,\n        \"dataSourceNode\" : false,\n        \"word\" : \"nkg92cvcbbt2yb3quliu8pm9vc7itejnh4e0h1q4m9sc67lvaky9up7n7tmtk5t3sht8fsqhjag6ba4mx6hnuljpfbi9ltiwkl6i9b6p3a4hlow9j081zy4bva9p0795hzgd23qmgd97wm9qczayaf7tr\"\n      }, {\n        \"startIndex\" : 1809505147,\n        \"depth\" : 891526954,\n        \"endIndex\" : 131423452,\n        \"dataSourceNode\" : false,\n        \"word\" : \"s0lkmz1r00rm9bmw92r86g5xl04rmt831wnr9avxr9rakm2z85l8bc2uih577c4bfive4s157rffgt6qdatq9qd6imkhf9hgzgq7b2i678anhlquv6hduo5l8vllaktic78wjj\"\n      }, {\n        \"startIndex\" : 2051862030,\n        \"depth\" : 1400717729,\n        \"endIndex\" : 1776269470,\n        \"dataSourceNode\" : false,\n        \"word\" : \"fh32c2o8jaclhdykikxpgxwo64xv6z1wwvpsf5gabt1p1l0d62yhu3wimmmcu1wcwa2gqgeq\"\n      }, {\n        \"startIndex\" : 1108919096,\n        \"depth\" : 1035908450,\n        \"endIndex\" : 1717251632,\n        \"dataSourceNode\" : true,\n        \"word\" : \"7r84m7npt906yjpdxg3g9e8325sj0afiflqkb9l5ghqirg9zzmg67nuphy3md2uw45siw0948nxix89p5c7djv4h072fpbvr79t3kajx3og14jbnqxcluzz2\"\n      } ],\n      \"endKeyStrings\" : [ \"5fypmmjse6bnvd217f8ccz0fvcu4mx7rw1ubrjwlehxwdwpsds979\", \"3xfdsws11fdsab9ee4lcmtfhhfumcpmct1f47zutpjoj82s3f2geqjcf3pr\", \"qwrmrgp28mu338yv0xm3znxjv17w73fym3d6tams7s8e1xzqglmn0eo8p9zx1vams3fe724hs73ista1vm9p457etwv9ytq1ffbu9mwptrtk0lgcfaehayh9wbn9iszlqk7jw0tw7xc3xh8rs070jq6pm0712l48sg5d7coamru0kcz6ckjtdw\" ],\n      \"dataSourceSeparatorToken\" : \"cer5hjd9ymf7bt2f0w398w0u6\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Quia reprehenderit vel. Qui accusantium labore qui optio impedit itaque. Aliquid nisi ullam. Voluptatem fugiat qui ratione. Sit placeat sint molestiae sint aut velit.\",\n          \"token\" : \"zmkbvoykndzp5m4bp82k93j0cw9z3k3uwq1kd2n4y91lbha48d7z2mk7fdmtn6gvjin2mo8fnm62hyqan\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Laudantium quidem debitis laboriosam et rerum aut maxime. Quisquam aut nobis rerum. Dolor sit rerum. Eius corrupti aut assumenda nulla libero eaque. Sequi perspiciatis dicta est porro mollitia natus.\",\n          \"token\" : \"fxz39k3h4t8cc68m3kmk\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Omnis a quo occaecati doloribus id et. Quia sit fuga fugiat. Cumque impedit sit modi eos incidunt molestias dolore. Ullam neque voluptas.\",\n          \"token\" : \"1retao5uuj3vsakwsrtydajkohrqrp7a2m88pgf8rm1j7p7n2pgi1vjacjcvovmya1n9q9igf6yyoufmoe9x79dtymaxig9sglwsw3fqcn1wj9ccc6qt5d8hyo7ws657i2i1bn104fi913e54524f1dxga9su0dom7c80siswoep2z8umm54wg\"\n        }\n      }, {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Qui et eum sequi explicabo et recusandae. Nobis explicabo perferendis. Ut aperiam aliquam ipsam qui inventore a.\",\n          \"token\" : \"iztyst5n0yn9k8bvigttek6wh3666cghv1ot9omalg12zvipxza4643t1ls24fkv2r0md69mi76buaw1x13v649pzm9flyyus8fsfebae\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Nihil consequatur ut nihil a. Eaque corporis repellat. Doloribus tempora fuga laborum. Et minus ducimus doloribus. Inventore possimus reiciendis.\",\n          \"token\" : \"62cede6a4odkdbfim7rmam6qbu5i344487okm3ayk4sqi65u9f5viavlmvudrgba7fpkplw6aswqewi39l12x0v7gvb7o4vbfau4ulkuisjw54ahny5l5y3d8o46697ipod2ia0hdr30ozfnm53z1ktavjwlirzol1o9\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Aliquid omnis et occaecati ut tempore deleniti. Dolorum illo illo. Consequatur repellendus iure quam dolorum. Aut quas voluptas esse ipsa.\",\n          \"token\" : \"98bvclcnbe1bzya6wgr49wiy97dvqsv3ja6ct2cp633rnh14oqgeuobkkwf83hip1had582w2i64mj8gl7of71odixdttlr739bv4z48za7uowo1d3ymw8zt0eq51vutdy0w2ggkyxt9q3j8by7\"\n        }\n      } ],\n      \"keyUnit\" : \"CHUNK\",\n      \"keySeparator\" : \"0xxow1u2a8wldqp2hxlguw7fqovil7kjzxn0rfofk0yv6nrpy61y21czsi4m5czwbgl5doktjxg6fgj1eki9ff00ppf987ql4mq5b52wpxxi8iybhjkzeeskbzdzplm52u7pbgxrwo8jy0o7jikbqz8j9mw8pd7h92yusvi6x4e94vw4k68t3db4fz24\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Labore et non beatae voluptate vero aut. Non est quibusdam excepturi consequuntur consequatur impedit facilis. Non sed praesentium ut. Iste voluptatum molestiae. Sint tempora sit perferendis repellat \",\n          \"token\" : \"172czjjc3k4t3zerx9vspdsqkalu26zy73kgizvha\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Provident qui aut eum et. Recusandae aut consequatur aliquam libero. In et deleniti. Beatae nihil ducimus facere accusantium.\",\n          \"token\" : \"wn435gzq6syipxd4fcuy3bhe6nlcfx56fppjdrz18uno1evo02xjwfjx3ggutmt2kkrbo5wbh2pf2wqty2aji0jfdsi0gm0tbvkoaig890nha2mrol0i16ltp46163yqgj82yqxxtnuctk35yng\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Mollitia a enim. Rem sunt est inventore quia illum velit omnis. Expedita aut dicta nobis. Velit repellendus facilis porro deserunt. Facilis saepe quis dignissimos ullam numquam qui.\",\n          \"token\" : \"aog4q6feryja54nyh6vtotb7focqohj6aysrrhwqfdim9hcyyypl2xhpvbdkafq15u9snprmyufg\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.728208708417519E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Molestias occaecati saepe quia doloremque perferendis aperiam. Nihil repudiandae necessitatibus ut. Quis quos velit porro quod. Quia reiciendis quam.\",\n          \"token\" : \"wrw3e2k4v2w41alz9ml3ja5shn5onsay8hjoosx4p8yz9vhtgxduy7wqgy6xewzayqdllln42ywzh0gploi7nl2nfkq99gwegpvimpri9c\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Beatae veritatis quis quo odit. Suscipit vero temporibus quam possimus tempore deleniti qui. Magni molestiae aperiam assumenda beatae velit quas.\",\n          \"token\" : \"hpwi1sl2pjv6n64vktydex8z21cu7p8wjmn5x9m1tb5ktzdp4afahz7uiy6qifdbe0b94x3kyh0n\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Dolorum possimus quia veniam molestiae et. Explicabo est aliquam eligendi. Quae repudiandae quam rerum.\",\n          \"token\" : \"lnch9gm6cz3xjetyps5b9u9nz1we2kta6gst3pnvqd0j7xorhscvfvcs43z6xvt72hw42spl54idmxv1mn1xsnjb2w0r8pzr4\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Itaque dolores aspernatur numquam aut laborum recusandae. Dolores voluptatem laudantium fugit et. Sint non nemo est ea natus autem. Est fugiat ut velit illo unde. Labore architecto ipsa dolorum.\",\n          \"token\" : \"iy5wgemvk9snfv5dgokjp\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.7808507981278444E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Commodi rerum velit nam ad sit qui. Id ea consequatur harum consequatur aliquid aliquam minus. Maiores ad exercitationem. Corporis eaque quibusdam eos quasi.\",\n          \"token\" : \"vv1by6qlkokq18oi5tmkgc6wo35utk0ons5v04pa4qqnpd5hr2zwqz2c9m3z43k1xbsnrdiab3fe0uwumjt28u5jkxeh7zw367ecvjweiq1\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"y3kuea6ybg9hh4xuty515vlon66u0duee1\", \"g3siqyxgo3nz33d4zbs9120jds4mlood99s43btsfh0qvjzw0db5oso49bkt0sy0fe3r93pacv4a1y63kv7nvu418q1bf4zljnt525bvfqc\", \"qdiv8al9690rbizh0jcfauh3bms55n4aefkb0tke0skdz1939mjfu9dygdl1yfnlesp8djm5xbv0mkfzizzx2rey9mzo\", \"1q21lmksiy4nk0fkvehkmin9f6q9ijo6tfsfz5hzl5idqdv5z817\", \"jrx4bfgoydbjjhll0alowbdz7xjt108ca5hup6a4caf303a5banxi6nuiu0e39ear467wb0llgvnole3iljiwjfttqlh5dwd0jne2bsjbbdjuvn4bi6xiovccuhu4ap0zzd5g2wagg4evtyusdz4\", \"zu1cjljeoo83vvzfr2\", \"hhpunxidiida4xv9ebjmg11m8kw5fyylhxtggljwhe27vkuv42ccyvi9nzh6ubmw7kprt2rsyqon\" ]\n    },\n    \"startTime\" : \"2022-11-29T11:34:00.233816Z\",\n    \"endTime\" : \"2023-03-13T09:59:00.233849Z\"\n  },\n  \"name\" : \"Curtis Gulgowski\",\n  \"details\" : { },\n  \"startTime\" : \"2022-10-09T08:57:00.233945Z\",\n  \"endTime\" : \"2022-05-09T08:44:00.233973Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc09f619-c6e3-481a-be61-877dd9bad48b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.234139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "99f340d0-bdac-45a8-914c-a579b8950981",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Mr.+Nichole+Jacobson",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 314519752,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Doloribus itaque ut id. Ut in debitis ut. Itaque ut quis itaque et. Aut quo quam perspiciatis at aut.\"\n    },\n    \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n    \"kmsKeyVersion\" : \"68b4qiym8nedm41a44wbl\"\n  },\n  \"database\" : \"gfzfg3xxf5nvz9lf63eiwn0wiqxa5kvywzpzohegmvbamsparp5uu2qg5qpt9l63j42ydz1y9qwms5deptmarwzyx23uuebbeoz5w9xdkuk20rv\",\n  \"expireTime\" : \"2022-05-13T08:58:00.231578Z\",\n  \"referencingBackups\" : [ \"vl7dl8nrfcfe5jeunqx3lzcucc4hozyowe2\", \"g59v4khseaw4xi4si6elbh95eh5g8syk17cnwmnwn7slgxb4zxbwxz62u72droxze\", \"lyjk1b5xuivpirkpmiy4q2o6vyeu5duop4lxrmfzhwky1f4punxj3ww2o8e5dbeq1idf0r2y1\", \"yniuwqjbpe2uxtv8dcwwalq8dth3s1u\" ],\n  \"createTime\" : \"2023-01-29T11:02:00.231632Z\",\n  \"referencingDatabases\" : [ \"it11zmznxmgw3aaz9y6iqc5ggjb\", \"ldu0bu4w72354u7o4uxtynalmnoi653fjo5jpwgdscsaqu1oqwkfc3lqdje4mbrxnr6cp4\", \"fq6r35sbumdj1e3iifl6p57ji4wsopbabcabrgtpm7cu8kwwjjjxhko9mtxnva5n5zemolrt3t08h2rhvy\" ],\n  \"versionTime\" : \"2022-12-04T11:24:00.231682Z\",\n  \"name\" : \"Mike Schamberger III\",\n  \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n  \"state\" : \"READY\",\n  \"maxExpireTime\" : \"2022-05-14T08:37:00.231785Z\",\n  \"sizeBytes\" : \"avx2x386jr2qm0zo738gim9n0720rib4osmk5cuqpeo47frgbtauobejxxis7ajnnrxyaakbxzkb7b7smy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99f340d0-bdac-45a8-914c-a579b8950981",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.232014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "de454c6d-de26-41d8-ab1c-24fab48d16a2",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Elvin+Brown",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Antonio Kiehn\",\n    \"error\" : {\n      \"code\" : 820123380,\n      \"details\" : [ { } ],\n      \"message\" : \"Ea nihil vitae doloremque magnam qui quis. Adipisci temporibus ad minus nisi. Eius quia officiis impedit eos libero.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kerrie McDermott\",\n    \"error\" : {\n      \"code\" : 214035171,\n      \"details\" : [ { } ],\n      \"message\" : \"Quo dolores rerum deleniti sequi. Numquam perferendis dicta eaque quaerat dolores voluptatum incidunt. Repudiandae nostrum quia. Nesciunt adipisci dolores amet magnam omnis accusantium quidem. Ut eos \"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sammie Mertz\",\n    \"error\" : {\n      \"code\" : 542164931,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Doloremque fugiat nobis. Deserunt enim porro sit. Voluptates voluptas voluptas sunt ea.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mike Lehner\",\n    \"error\" : {\n      \"code\" : 756961609,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Repellendus error eligendi ut molestiae. Eveniet ratione asperiores ab sapiente unde. Voluptatibus nihil possimus iure laborum. Quod et quia nam rerum. Quam animi natus et illum.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lily Dickens\",\n    \"error\" : {\n      \"code\" : 1449079295,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Fuga dignissimos sapiente quia et. Ut sint laborum fugiat. Magni et aliquam dolore tempore recusandae ex maxime. Ipsum dolor ut nam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Antoine Wuckert\",\n    \"error\" : {\n      \"code\" : 849620173,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolor fugiat ab quaerat qui blanditiis et enim. Vero repellendus vitae repellendus harum facilis explicabo hic. Aut numquam velit nemo.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"p46uiy0khbjtt3v9d4dsyabc30awjjpreauo5s4wwzumm2iojq6npmvw6tkiml8o2tfgpszurxqfcw17izlhviuyep11hjxal4666ta360lqhklluycghxm705e252sxv91mpjczxe2gwy5ff8t7acc6dwk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de454c6d-de26-41d8-ab1c-24fab48d16a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.23139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "e73aa17e-31f9-4afa-8193-2f65790b0e25",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Ping+Blanda",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e73aa17e-31f9-4afa-8193-2f65790b0e25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.230354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "8dbf8dbd-2b32-44a7-a065-acbbcdd6fd68",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/ttoc8orf7knpdeqsonr1lggn44c1h5a0xf44o2r5hbk2nqbjjf84fz6qy7psnx26oyiny84a38yhtru9ibk9ytcpc3vql4ixsndefyftzv7oy9hqtar320hs8fpremneneydan8xb9bfikh3g8anii/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-08-24T09:57:00.229264Z\",\n    \"creatorRole\" : \"0fwmkh11dvvelhbq7y82ao2i4pyt52wmw6p48tcjhj9wr1o7g31fxb0rlu4deodcaqazbpewd\",\n    \"createTime\" : \"2022-09-05T11:47:00.229307Z\",\n    \"name\" : \"Tobias O'Kon\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-20T09:11:00.229387Z\",\n    \"creatorRole\" : \"xcm0cxl4b0lgsxy51qaf241tpn6b7en8jotekjzcgvt6jvasvlrtl0j36oj4m5zndrzmsq5kundzvsv0jqoj4ouma72m8021gylvlz74tyxfxgoddwrcgf4cd04xqdnvuh6e2vhclfdmsfeo57fyrf34f040b7vrpeu2o4mlevejpstj7wsqdv3yovu40\",\n    \"createTime\" : \"2022-11-13T10:14:00.229432Z\",\n    \"name\" : \"Yer Heidenreich\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-01-17T10:16:00.229511Z\",\n    \"creatorRole\" : \"5l4viachoi4sfmw2wf4lorpzjhq67yrzis2vhh3ntpaicedfh0fxmsxysbsrxw8exonbax\",\n    \"createTime\" : \"2023-01-01T11:43:00.229549Z\",\n    \"name\" : \"Kyle Legros V\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-03-30T09:43:00.229627Z\",\n    \"creatorRole\" : \"yevllpf2j2k0xvju51ffh\",\n    \"createTime\" : \"2022-05-23T11:45:00.229664Z\",\n    \"name\" : \"Albert Bartell\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-03-24T10:04:00.229744Z\",\n    \"creatorRole\" : \"z4x0tly166zb2pxngdqyf0hkmet19g0qqgit1av1gnh0427ktrs2sekcfef2lvqyt5ic7t4libn20yrh71j74zm\",\n    \"createTime\" : \"2022-05-24T08:37:00.229782Z\",\n    \"name\" : \"Lou Ritchie\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-11-11T10:44:00.229864Z\",\n    \"creatorRole\" : \"p2j6zlb1bn57ojakg3t1z9za12s4lm76jagmeb8sj3xmtsh02delidob7xif\",\n    \"createTime\" : \"2022-08-30T10:50:00.229901Z\",\n    \"name\" : \"Haywood Okuneva\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-19T10:44:00.229981Z\",\n    \"creatorRole\" : \"2joqb5ixux3a5nc3szhilhqd284p414jgfra9182dkeqlkpmsiszwupvyyqb0bxkomrurwljfjrjrvqmi5e73rd07yzbcu33fvve2p905xmcunfyf0yrciaiy35is70qw\",\n    \"createTime\" : \"2023-02-04T08:35:00.23002Z\",\n    \"name\" : \"Alfredia Gaylord\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-05-25T09:07:00.230097Z\",\n    \"creatorRole\" : \"45b9fvu4ow4uph9sku9pilz\",\n    \"createTime\" : \"2022-07-11T10:01:00.230142Z\",\n    \"name\" : \"Alexia Collier\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dbf8dbd-2b32-44a7-a065-acbbcdd6fd68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.230265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "799fb135-eb05-4c0e-ab93-ce8911f7d6bd",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/riuqe1dkimigmrrjxhprwl6mhc4fwgnkojmepcrb9scmuc5ah4wkh5p7mc0qcj41ft2qauvv9drcshzilrqjd6s24e480rk192vh763v7hs7jq6jxnfg879wc2b4ohy1ptsoxihax0fq0uw22juu2hf7pim33dz7c/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-09-19T08:24:00.229037Z\",\n  \"creatorRole\" : \"11k5wq5jpomd5bg1rc8cjw328q3uxe9ahevz70ij1ieax3r73npce38ntz9hihoz2n27sl9g01r7kvwcyh4t53cmeo6lgnsw322ayd0ekp6otbvr7sh38or4ndzj26zuy0ivi4j27i1gd704wn59ey5ec9jbkrazub\",\n  \"createTime\" : \"2022-07-04T11:41:00.229076Z\",\n  \"name\" : \"Julio Rowe\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "799fb135-eb05-4c0e-ab93-ce8911f7d6bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.229219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "6ed67647-1b9d-4c51-ace3-9d25596b38b0",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/02h324lna1drkd02qsl8q/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2023-01-04T08:46:00.227949Z\",\n    \"creatorRole\" : \"0zvjnon4qkt3ho\",\n    \"createTime\" : \"2022-03-18T11:01:00.227997Z\",\n    \"name\" : \"Sean Lebsack\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-09T10:02:00.2281Z\",\n    \"creatorRole\" : \"6v5vkn1jqob9ach7e8l53t2pge6lwkdxgqizoolxqggak6nqflc9kp5ezf1t4fmaqe3kvqbriz2an8c2hmp43gnq9cvifqbiy8pg6bldi9mljf705q\",\n    \"createTime\" : \"2022-09-09T11:12:00.228143Z\",\n    \"name\" : \"Kimi Hand PhD\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-07-26T11:06:00.228231Z\",\n    \"creatorRole\" : \"hxi2u5bebw4a34lsyu60expneyx509vp9pvmixz7q7gxbjelzx4pp50vg4dd4oedr8udvuvoctcvsr9ewt5fqvblz86iohp3kio6l9dbdg8s8fqata0sdxgz7i81r51jejoq4gn1x669ks4rq1risy0a5a4p2f8prjar3\",\n    \"createTime\" : \"2023-01-04T11:41:00.22827Z\",\n    \"name\" : \"Kimi Collins\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-03T09:21:00.228348Z\",\n    \"creatorRole\" : \"xt7ccz57n18p7junpf7dfq3f21t60aq1acn5qjxzi2rqdwr\",\n    \"createTime\" : \"2022-03-30T10:24:00.228384Z\",\n    \"name\" : \"Tera Bernhard\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-02-26T10:29:00.228462Z\",\n    \"creatorRole\" : \"o6relkreyeuewh7s5i1rqunptgqityqsuc1eehsnew84z1ejh2stqhezsvhhz93yizpcejvbmx4yapy8y\",\n    \"createTime\" : \"2022-07-24T10:37:00.228499Z\",\n    \"name\" : \"Solomon Nikolaus\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-29T09:46:00.228577Z\",\n    \"creatorRole\" : \"atae4uyklo5z7zq41sjxf8qbjmseb9rx2z12vvxwzy1ps42ma6ox6xz1363qcyvap0ovqqtiaxo0i2xh81z7n83p111ttx\",\n    \"createTime\" : \"2022-05-19T08:07:00.228614Z\",\n    \"name\" : \"Franklin Von MD\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-06-06T08:49:00.228699Z\",\n    \"creatorRole\" : \"70n60y6d70al61c\",\n    \"createTime\" : \"2022-04-30T08:15:00.228734Z\",\n    \"name\" : \"Nicolasa Bartoletti\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-02-24T10:06:00.228811Z\",\n    \"creatorRole\" : \"qnoack57j7rigk32812u1sg65jzv48vwhkwypfi70n8v6sxnh8wrlbazlf7jybxtmqq4hzivc8cjc05lz930y2dvyuok1gla\",\n    \"createTime\" : \"2022-03-16T09:47:00.228857Z\",\n    \"name\" : \"Lavette Bradtke Sr.\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"i5vtpd3elq7zu20ssk60v17yp4keh708s3lsfp80v7xb1f86urm6ovbr48ucqtrfrsla26j8rsib2ver\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ed67647-1b9d-4c51-ace3-9d25596b38b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.229001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "90ffd657-091a-4552-9de9-54b8f557b1a8",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/qqtjrvh5v8o2a614d8oixxu4vnqsojpii9pb8vgjfg0tneecu5/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Douglas Purdy V\",\n  \"error\" : {\n    \"code\" : 651938269,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et ratione assumenda illo facere delectus. Reiciendis suscipit est dolorum. Quis corporis voluptatem natus repellat. Repellat et dicta necessitatibus. Numquam earum velit quaerat et qui unde nostrum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90ffd657-091a-4552-9de9-54b8f557b1a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.227888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "4c17feef-4b6d-4188-a25c-b9695ecc91ad",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/lqr9m92p6gtldhbgyl54yghkmx2g587btn6nlw1q5th6y3okodx62t6duh25ujt0jb560frgn6rd864ezz4rtwlpj0ibfv4dvktnwjvs4op20mk7azxj3p8d8eo8j5eudwocgv1tr79l6swu8ko2qdrpb22an7h4dosqgr/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"rfc67hidbg0nzzujvl6a74yelg9n87lst6arlmr9h2pchigzdtaa7rxsnp5a9rrljkhv7h9qsoi6iryah6iz5asxoxrntf6mexmh316kg6dscb373olpf4bqomwea6hw9x4jnydsej2h\",\n  \"statements\" : [ \"sydi8pym3puqbtwlrsa8dmekuns52jxe4xt019cktcnuy4nkp1nklgumrnp64qzz99r1o2n0dxqagw92z97zphu9lfnioclqlyvh\", \"qg3o1tj5s5ovlnzykzrg2wh9c8n4j\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c17feef-4b6d-4188-a25c-b9695ecc91ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.22753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "a10c5917-dfe0-46e1-9d2f-3a5c51ef65de",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/kf6d8xfuhv0q6n1kxs3enklons4yvjx8m",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a10c5917-dfe0-46e1-9d2f-3a5c51ef65de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:00.227355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  } ]
}