{
  "mappings" : [ {
    "id" : "ba9cf082-4fe1-4649-8dd7-fdf8aee36c05",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/e2w5qz52z4z1ghpg7fg5bf1zvxs5q6aac8d3azuw19uhfbqpb8ay8wd9il7dtarfmk0g0a4y49dhehcjgsv8gxm8jabfc78a8ydrsqifg03m0ecssdxzp234fo8rupcvqllajmy8dq8epfu:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"a09qx5ryqupg7gqmh1tc8qzi3rhdzcvgq6gkw49dq81gstfveec3v5padze09kts9nwdhw9qk2fvgtnmx0jfeb08noup6w8otv1h6xfwnb0bhaa4fb1wroqr834wkpk4ie5j9rjbbcrj0q84b66m7lx98vqltlxx2bdh43l8\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Dr. Diedra Weber\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0r22g9ulmw76gaurdnu6m62cx69knlxgpetn08apt3x5j3iwqrk35dtnxxn1\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Barry O'Kon\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"rfrsusneg6bhuctcpkntn9f4yb32kb1trv1kkrjosxhfzf8s9ff4ozz8frvx49m1k1f3tmezrkjg8c76xdbcp5yn8d95q6xysdopo6cr0itose4jpghcfwihn84niivj5ng1hzubc\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Sean Jaskolski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"l2dg1ljlpxxqu4kr66nr7iou20a1ms0pny5uvqorv4g81awobtkl48jtjfmag2jpbgz80figt110rcq8r30gqliv5rpd\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Carter Raynor\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"11xmax2hw4qxublxf3byt7ab70prn4pv7xr6fwkmx7cmmvepwum76c8dj91v799z4sktpdrbyaayf5juzbujx6cqug70jrwqu3gtn9xc8iklm3c\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Miss Reba Reilly\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nud8m3bko8vozdysyw893svhhiskw6p3j9q1plbxtugup8wn7il8d705u0l2ea1j8y4382fxs62uglgit739vlk2bnskkdxy6gc5ll3jolsvtccwm0ox7xhr0f3iqws1ctdfirv9irc25kfqmhuu7351ckcqw6e3i3md1qsl1k8tepq\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Omer Davis\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jklv7l3v1qp4qgyebinzz7hdzvj832yvixclq6coeh12linogjyoonta2znzgcmvo6tyxq0lygrjgvbzldaly7uplqsbn9jqpf8s3kioa437ccmziypydnjrastociit4o4g48bfqpr2fwp10okj5w04px8yve1zq8z7gqu6py9077zlioykmppwxk\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Tommy Gleason\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"q4nymzyc610duywtrtu6kyue\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Lizette McKenzie\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"zyu0hzn6wadu226ml2a84r10n2otklfofb7gm8ekujkbftsi6zt7pf79ksf5826kpqtwdon5rsgct2fuvx2s6j9kqfh8bukeqvbvcmo6n79eywd8k3mvt155x0buefso5f2q8nrrf64gd6ozq59fr7izaus6tq\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Sang Osinski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"fxm8rf9op17157u0tub9i6grdg9zo9yjvy9zcwnafg6jnrjtrv1y5xmghz94p0uz9czr164gd8duh9799b9f50xixnwwdnv1sfl7ve6gog1nomamf662sa0ltjugdb\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-09-21T12:09:40.004548Z\",\n      \"id\" : \"5wl5\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"m6p9vubkcbm4mqf8vdh8tj30cmmputbbkdkre7vecjp00i47zit272tzbem7f0f5gqckc8hn7xqohm8dcvjsy70203afauwgy4yh55t69haau77b8btp95y1dczqebi57r9m8i6rrwsjixp4dv67\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Et nisi et sit et. Quasi ut a rerum dicta magnam. Eum distinctio aut.\"\n        },\n        \"displayName\" : \"Joye Quigley I\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 57502808\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ducimus in eum incidunt laboriosam quas explicabo tenetur. Dolorum odit dolorum eos temporibus ea. Quia ex minus sit esse hic delectus. Ea sit est nesciunt at. Ut eos et.\"\n        },\n        \"displayName\" : \"Ja Considine\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 1684736353\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Cum accusantium est est. Molestiae vitae repudiandae. Voluptatem aut qui explicabo consequatur dicta illum qui.\"\n        },\n        \"displayName\" : \"Tarah Renner\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1470806296\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ab delectus amet ullam et. Incidunt dolores et sed ut magnam aperiam. Fugiat quia quis magnam sed voluptates necessitatibus.\"\n        },\n        \"displayName\" : \"Krystyna Haley\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 2051585848\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Molestiae qui accusamus nam accusamus autem tempore natus. Provident voluptas doloremque adipisci provident aperiam. Est harum et voluptatum quia in dolorem repellendus.\"\n        },\n        \"displayName\" : \"Arden Stiedemann\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 2061022195\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sint totam et nihil. Qui est quae at molestiae debitis quia corporis. Facere laudantium dolores consectetur. Nostrum dignissimos quos suscipit quae totam accusantium.\"\n        },\n        \"displayName\" : \"Ernest MacGyver\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 643130958\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Et corrupti sapiente totam qui quae. Corporis commodi similique nesciunt doloremque ea pariatur aut. Cum ipsa aliquid.\"\n        },\n        \"displayName\" : \"Ted Will\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1262124381\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sequi aut sint officiis labore dolores. Quia ut aliquam voluptas fugit. Et neque rem quasi veritatis temporibus. Saepe et velit nihil voluptatem illo dolorem modi. Sunt aspernatur quisquam ipsum id ex\"\n        },\n        \"displayName\" : \"Miss Dick Langosh\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1740029691\n      } ]\n    },\n    \"rowCountExact\" : \"q3n119nbwo3j49sary02m6j08x\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba9cf082-4fe1-4649-8dd7-fdf8aee36c05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.005678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "362ea509-484c-495c-bf44-79dcda138ee7",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/hlxt06xmuallcs7hqthy0fa62zixh9hr2blcjq0heazyd3acwka0u4pxzky7bkwpduxibtzg53jmdrblp3l20tzug0e6i272dh5ecf81x2gy3flcd7j1u4v3drpw5t649wt578ljcbyukq5x7m4hn0r36l0bdmki3wq3j74m15atz6rl97mx40xqg45rpxfg2kbfd:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "362ea509-484c-495c-bf44-79dcda138ee7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.003748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "cf3558f9-e208-43b7-9202-80d92a26c973",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/fage5823dbzov0rmcnsoiqurq28wy50a1rt3r4tixvtkw59krg83ocd0ope1bbipqy2bt8l7xyw3m4dj7q77zw3k0cj7vfdaqaocy9mj2jdk53vkcatj36o3as:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Francie Champlin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t34bhgjtfxvk53lf67r9pja92n4hkvhd5js1xhmrtqhchkkl20xe65e2h98j0o8hiqwin5ami1pkrd5t5whjqccjd6du5uk2w2sdngvy59zv0a0\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Mindi Kassulke\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0h7cpundoe8xec0zw4ovmx64zyj7imbed9mek\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Dannielle Jacobs\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"99ym5f19kwpwrwze474xxegco71skw702vs9nw985jfxiko5wxryvrnpd10\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Lamar Kub\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"7ffsa555bvk4ux9nszf41ijjj3nr8tzhr7ggo8eqai4oriufsx6nll7u0skaaail73qm8gy4emebesnbcd8h1jxurlhenovqlolitdya10a9cq17955gxt0y3t\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Johnnie King DVM\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gca12t7tfqg4vny2ajyl3ryf52r3jl8tb41whnrljk82yajr7cm9rswpkd6fusd33uwuklkegacdavyk31w3h7l24bwe4yw5s4x1yibc7g0dmbt7lb6j1frd0uk40iffmkd3kajegtpqnoakfe2\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Dr. Consuela Bins\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"we2rzf106nwlh14sctabv7qzc08ehtcklspr7ua2ckjkvsn\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Felipe Sauer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"21xbxildyl2awhw99r44joovadekyg3q5yh2nbzaenx7ec12tfgakzxt2a7rtn6pwbqsg797ca33voe04hzdqhwgmq153lv7knkg5ftmzdaqm10mmdh8mto92xfke6rn5nbg4wmpcgz6gf29iqqsaf1ndu91sa5x6n3yms\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Granville Strosin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ilw4d7fbbf267l3nw77clrv6lv81cnlvfmgsgu8rmnu8p3521bg1uqwwrq88jc15uyu3w1xphix2ltt0qgdid67nafgm91i56hzgw0sqeaonucb38\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Cary Mitchell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"tyzjuuiy0l1uhfvrz7ztx8azf8r8d74oviytvr6hkyb87lgkmozpwj4\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Margarete Beier\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"74o7nnokq2amgo8xlq4br8u9rcqc154yp4yegw93475tp2z2ae0v4ygrpt\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-05-14T09:54:40.002615Z\",\n      \"id\" : \"08b5\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"f2y8pa1g6klvbrp7yr88obby3czl3v8jovtx1cb2noxxpzze4jkaksecemcbp26to7xsyn4pdhowhxn8orao7xtt02h3s4afcpbrsaam09xeb1v8241nhdsi5434uz2ex2bkn7i4clxgyopvbyrve0zumjq04moxi2s0m9dzagfu7onjxwcp\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sed tempore corporis. Aut nostrum neque in sint doloremque sunt. Illum accusantium et nihil.\"\n        },\n        \"displayName\" : \"Verlene Kiehn III\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 1508079197\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Et officia doloribus ullam earum quia. Necessitatibus occaecati minus commodi. Suscipit numquam et et voluptas a.\"\n        },\n        \"displayName\" : \"Cornelia Waters\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 832328907\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Nesciunt eveniet atque aut. Rerum quaerat vero molestias dolorum eum quaerat. Dicta omnis inventore voluptas consequatur tempora id. Dolores quo est fuga sit soluta.\"\n        },\n        \"displayName\" : \"Ms. Joanne Hansen\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 952319664\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Nemo nemo vel. Quibusdam maiores praesentium fuga iste et eius animi. Ab est voluptatem molestiae tempora.\"\n        },\n        \"displayName\" : \"Carlo Kuhlman\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 2037255448\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ex non aut. Eligendi id repellat consequatur dolorem optio aliquam. Et nihil molestiae possimus. Architecto id rerum enim ut porro iure.\"\n        },\n        \"displayName\" : \"Louis Streich\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 599491202\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Dicta dolores consequuntur itaque. Eum ipsa voluptatem ea. Non in blanditiis sunt nihil id.\"\n        },\n        \"displayName\" : \"Garnet Friesen V\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1021329926\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Aut magni vel debitis earum id officiis cupiditate. Consequatur architecto est. Voluptatem non non molestias deleniti quasi soluta aut. Consequatur a pariatur.\"\n        },\n        \"displayName\" : \"Ahmed Bailey III\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 902868671\n      } ]\n    },\n    \"rowCountExact\" : \"uimi1jmu5tf5abe5t78mn7ojz3qicl3mr4e1aqh4v192zs8qnj558cfnzmijxcr1dcj1heoaq3ckxnb5amfavsveu5lnwk1w34kc8giy2b8oe4xpo5ole03z8cgfl0ljetx88jey4qm870obc67728tveui57d3uwc3lgb\"\n  },\n  \"rows\" : [ [ { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf3558f9-e208-43b7-9202-80d92a26c973",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.003688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "69583358-cd8b-4cba-a999-e8bf8a3b67eb",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/eq8eh32rw59420mqehqvlziepg9pr2ziyc7a1bryzrgnn352ic1i9n1nsx0r9htq7wruf9phsop1npzfqkz8ijn9csc:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"56dzm3td3q1wcp2ckhjt1n8u4735y7230bslljemrjys2u81xiae11q60xuhbungp5vyc9aaxu04o9iaqeqzwz4fhfbacvmnb4d94ogp6jmz4cqru6j1dtrgqg3gr41c6lb2jpg2xrhiopu9ypa3bmxrgv28dyym\"\n  }, {\n    \"partitionToken\" : \"t2hrc39dy5ubb759jv7r4h4dimyzeq3c8dgd2ccg789jd99s4l4nb4qawsl9v6ytfb14366kimuhacj9uwdddpvijsqvp5cvugonhbx1\"\n  }, {\n    \"partitionToken\" : \"lwqetuxkjpufem6rx7mt3pu49ncbwfy0mgyftiedvew0ae0fvm67zkkea233ciyn7umfyum4f8pcb06m8pt6qnurbvulssyjgkd6nocw1tspnong7tnerh4jzlragfwb6z50iv321tmug63c0e1ajh2j6tnwvy7knua8h710pavinvx2sfvoq6welj8r7lfh2b9wx8gp\"\n  }, {\n    \"partitionToken\" : \"qjohtvgyyomvea93a7t078xv417b38kazkpco58y1c82bsk26v8vp4pxfnj4louicoyozwxvagik9xf3gs4h1oz9i6l3xgv11fe92m1rbolsman1h3hr10fvfoxie9f\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2023-03-07T08:54:40.001585Z\",\n    \"id\" : \"tdzs\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69583358-cd8b-4cba-a999-e8bf8a3b67eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.001708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "8307cf6a-45ab-4c3b-91f8-0bb81541f0c3",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/jr2qtrl31rp0k7wkxofcyzqxcw9dx54arrhf635lvo9u1clpetsxwyuf5adf06abt2h8xa1gkz4t869fbewrp92njkmnw:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"3sw6463hlyp0wlrpjgdkoxfi4vngj16e3tudp3em5uk1gtvrvuow877oijw5ny5e5hfw9dhasqcetjhbkd9mlei2k1o8qzjza4hpl1w8f\"\n  }, {\n    \"partitionToken\" : \"xgwi7gx8o8swj7eg2y426zdi0mwuzw2fa5naxswmwb46wlzs7nhzv2cq3aqtxtpl400man74ul449iiky0fuo9lf0zp71ww\"\n  }, {\n    \"partitionToken\" : \"nan5va3izma69lnvrvum3f7clyvzfpzs8nu4ar5odt41cjcwqm3ubnggmp37vl7du6nsabqzxqc2lagu41hm905qixt7r8cwklmdg6thm97ic9noguyibnve2szs71nrcqnsv57oeeh82qv0cv0hkvu4uke1rpnscg20vkvmvyu9qjlcucqfgq9khoeuos59pk7dcziw\"\n  }, {\n    \"partitionToken\" : \"ianhh1mcok4v5luoqyzo9j4iakcvo97re0itz1ucyi\"\n  }, {\n    \"partitionToken\" : \"136qcimouo1fodnqvrppzjwsjpamzvpkau80cm1hw4k\"\n  }, {\n    \"partitionToken\" : \"kyy6ta32qm4cexvmfsldyj7nh0r9ehxu08og14tafe23pm073g\"\n  }, {\n    \"partitionToken\" : \"bssid9klsanba6hmgs5zvb2nq34aohy1kt546mz1ab8gvq6kdubbo6lep80kn4g9rmh3gfu1axz1cdws974v05fpjxy4uwpeyoj686fz05ndu8hiwqv18qbrqg0qazlzuq87p5cugqkp8gn7nc46gva0wky1ewigv8yasuazi5msw3rxcgbh31ks37um2bax57sl\"\n  }, {\n    \"partitionToken\" : \"20mhufuqzy8qmjv7w434vd8xonczz1y3lkufdoxerv16r3lw9w7bmisdloen93tzg\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-06-29T08:41:40.001319Z\",\n    \"id\" : \"9b8a\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8307cf6a-45ab-4c3b-91f8-0bb81541f0c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.001478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c7b66629-d77d-42bf-9f47-bce8bbac2e67",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/lw7yytx4mlmdgtsozosz51ftzgptxqaais9jx7vaoqgii7hbs36wx:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"dqae81f0v0w98k1b5dc0m4fnhex392his2sg4rcq8zxqcc8x6osgpo8o4uw9l3oqklv72qebfmr1nn9jacirob9qcoznhwg8ar\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Gerry Brakus\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"hfnty8\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Brinda Willms\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"za4dcyjwx0jthia0yc74ydb36waiy3kkp5m0pg8lri6p5loikjjlgbq6imqifiysklum3jzjn93iv2smh0g5u4ss0o2hves4150oo7517usnilsr60citxosuhouq15fwifte1wo19vm26n93i85u8zil\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Lloyd Okuneva Sr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ufruyc0a2ncsxoqlzfgqsf2qv05cvb3c1boh93fvjcjazc4r9c6ayqzaksel9qksv6c80bsypj6dtv96bas16w9vv5ojpxf\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Aracelis Gleason\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"r7ouuyi8vvzunlcrj2l8t0fzidcpgh0srxq3pmnmmhgmm6nb67wvj1j7f7www4o\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Miss Lelia Farrell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"pl8l88lvdzqwgtq7sscdq7m6x6li56x2gebcrr5f5pu8nb4mguakwf214hbnxy8oblquo69hy7ru129dy4mwlga4ne\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Joan Greenfelder\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"oraxjtc4wbhytjof6l11rq495dnwlnlkjtu1peo51c37fhmkw1ef95tz4csgusxahalahdq0qb13k2r80bp97uagm1st4rs2cxwaignhtv419rr8ucquxcfma8n\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Sumiko McKenzie\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"degw7qqr6jtzdhfi9t\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Katlyn Schaefer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8vauuwjrylgvqx8snqndmghmkvafqbt9nazz75n8591ahxw3p85wv0ynpy3ps2c110f5thevd4ugcsrx9yhzcpnggeisffhybc892grs12t2\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Heriberto Kovacek\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1utp78xsug3sg7usskg6i743p3d31ueuk5i\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Josue O'Connell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gs19vie5y9geywkvg6h7j7kb1x3q15imkoukfb7o1lug67o3f4bmxk3xa0bt332esf91s458dmq8hmmhhy48b68bxwtnxxm73hadccalx7hy4bcdj6dphybwrm3l8x4nun8n9pkvqcvpho06bb94bk8kkzd6k4iv00kh1dlt39shdhpasl2\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-10-21T09:02:39.999814Z\",\n      \"id\" : \"b00d\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"xvj5x2lbx6sr9hr3jx0dp0ap8lhrn5mjyk8atc92d5ji1ymrbj7eyk7cnb9kovv4hxwwzj0kk01pwa1aik996olazczfae2z9yfhepa01b7t1h0h\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Sint minima et nisi libero adipisci fugit repudiandae. Accusantium quaerat qui impedit. Natus cum voluptatem. Architecto qui et.\"\n        },\n        \"displayName\" : \"Cyrstal Boyer I\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1113472498\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Natus ipsam unde consequatur tenetur sint. Animi temporibus corrupti voluptatibus est aliquam. Cupiditate et libero ut quae delectus. Quis earum rerum praesentium. Voluptas tempora fuga et.\"\n        },\n        \"displayName\" : \"Veda Bins\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1338823437\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ex totam quod eveniet et. Deserunt qui aliquam eveniet qui. Laboriosam illo assumenda rerum et. At animi temporibus neque. Ad ullam omnis totam.\"\n        },\n        \"displayName\" : \"Ms. Mitzi Lesch\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 504380054\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Est enim et velit et eius. Enim consequuntur id quaerat. Sint veniam numquam.\"\n        },\n        \"displayName\" : \"Brad Deckow\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2021734306\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Distinctio autem adipisci. Esse ut ad. Ipsum nostrum et ducimus. Quasi qui consequatur accusantium. Ea consequatur quia repudiandae maxime quos porro omnis.\"\n        },\n        \"displayName\" : \"Waylon Kutch\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 981353820\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eum nihil architecto possimus aut odit non sit. Exercitationem perferendis commodi harum ratione eveniet. Blanditiis quo cupiditate omnis et. Repellendus ut doloribus. Incidunt provident temporibus ni\"\n        },\n        \"displayName\" : \"Marion Hagenes\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 421278862\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Explicabo id ad eaque autem in. Asperiores quo non in similique facilis. Libero doloremque qui eum eos quis velit aperiam. Incidunt rerum sunt provident omnis nihil qui. Sunt officia delectus aut veli\"\n        },\n        \"displayName\" : \"Emmitt Turcotte\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 1618798074\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Quo illum occaecati excepturi libero deleniti. Nisi voluptatem doloremque illum sint atque magni. Qui nisi eveniet ullam. Vel explicabo corrupti molestiae et deleniti ipsa suscipit.\"\n        },\n        \"displayName\" : \"Tory Mante\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 1973177522\n      } ]\n    },\n    \"rowCountExact\" : \"i3cpnyv84f5ai4wo95ppw3kbs006avvprrju0g52vhujx58gcpjv1j95iila6l3z5th2b3exqr0wvo19ntqefezyq00onmyhehrcs3idzwa0ltm56e3t9sfy\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7b66629-d77d-42bf-9f47-bce8bbac2e67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:40.001111Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "71e6f3e9-25de-4edc-ad17-41bc080f7c76",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/ti5jrzx6d4muccczcdtv5okloi89c5eq3cnfnnwjiffbls1venh6tq86p4dwkjd4hv7uj5xxf1bxn9as54a5fypv46mxk323qj6co3yd5g77iy4l6wg2mkfj24qsru1unk8loxzbbxrlas:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Ms. Rickey Casper\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"fsvuwb8q2qty2g9gl8ukfikascm45xxp6onia9m6f8g15h7l5ppkv3ui9dhsbqevtsfbwvqrhk6ubo8ps9xr3nzm5xzffzbyokghohi71tn1p8mvlzqu16wup060hk8qwphlctnhib87vzj5wvjcfjnn53iw0d274u43al2x43l81fimqap\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Jennette Zemlak\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"quruh754ih57mzevnymdd3h93agl8mmpw3ij741v8ujrim9k85vo7qx1zqmorp98xuou2b0sua3yl4pw39pn9rfh984cjx2jmjb2051btm8bbj383t1e4gkxibpsdrsonjlggjgxla5nlatvpmu9a2i9qb8hb0z6fybwmb25exk6a9rpdsa3pu9awyu3jqz1s\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Hui O'Reilly DVM\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"qu6zxrx2mte5prhagz8qthkeho6troemeu6p67fvinkl7nnvhzqh1dznpbln30fghm3bi185swori09ds56jlejr12\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Dr. France Hilpert\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"vaqe7jwclpkobldzkrmgo86xxm6en2qgx1iduvlk1qp844f1daiv4dnnpl2s68o7lwu4kuf6eonhd6m6ia83d9a5jiyori9nsa72ha0xaeaunuqezbgg75brjuh7epaslj3f177umsynxe4lmhhjb\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Mrs. Man Morar\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0l0bp7rj97dtotewhffa7u3ga1j0tugz91l7ja5453qbm4ozpotqfh1lgbfg9my90vmvvef76phiforifc9o3akjevhse2ndbv7sbi5sgv8jh93pwczgxu2ln3aqbq3rysbklqwkdv4xlvsbrxnarcjcr5e8g02qi4f1fnvfiio0gvuoot83jhh4j\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Dani Leffler\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"m1ohghvm6eiiisyhhc9i11oxw4ktgmu62qwze83sc9gu91o3dk32h4xpjjfzppe4bmrydo\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Patrick Barton\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"iy9xgwna7x0iuw12dna0ssdyvjypfxm59h7ygtedxko3lvbrbusure308t79xu8os2zv70kvjef0nsphfjnnkq57j9dqxorwdq\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Mr. Cherrie Emard\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"yon1e8v16wyqb6p6qgn4kmqihz36o588aupld6pf4wrxiw52f8gyquaopvpc7ap89eqzlfg20jsbvqw4t4mw6z5576m2ns7hvom6j9l2tlluyml4zspoqwspbvg4a49ebjxpqljcldu7nx57qzhb9pj5hfkd2snbq3j1aniytv6muszz2qelr\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Calvin O'Conner\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"17q63ehtq5n0hckkelgvm91il7dixa62pg16ttnxtrjw3wwar6lgzos2g5114quk5uk2mdoy1n391evavycn5u8p2oc69fja110mivozah54bybb8h61b01y3mmjsgyw9t868u25xxdckubigg61j6ra4dkr9unp5qpf5fw087qp9zqbid4rvfx5ozdzvtmie\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Alphonse Haag\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"8y4x3u6itfyy4fusofcuwsc9gh4tm06s83afitd24yz6mf00zieee66hfgaqzy87\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-09-20T09:19:39.998448Z\",\n      \"id\" : \"l58g\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"cjsgxb9puau04we0n5ytbwyo5pa5gelob8ilrsbrv8ft41xdk8z1jmx64jy3e76f2gm56olmwgwd19kzq75s9seu9c1xrwlt1ruh9lz5fjdbkckmj0s\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eum accusamus omnis quibusdam. Consectetur voluptatibus assumenda. Est ut non velit et tempore.\"\n        },\n        \"displayName\" : \"Russel Mraz\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 22915840\n      } ]\n    },\n    \"rowCountExact\" : \"728p8vvalvxwt2ay723a6n1oc2jt0ifibaqzcft3pm5i5nsvxxm3g6h27545brzm8gilagdfbygttxkq7ubqn2iwa894cfwe8ue6ztr5ty448saxy70b74ubfg6d2yu8lmc73melyrn8jb8q8j4lj4p65lo1u78j500w4erbdz4\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71e6f3e9-25de-4edc-ad17-41bc080f7c76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.99889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "7b30fb10-5c34-450f-9152-4ca9a63e39f3",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/nublinbxna7er7vehmn9p05fipirqrmr7sbafxmc87m8q1x53k57efgeri54qx8bznku7ezlyee99t8ua5mnzmpk34jch4je7zpr64bihvkms4ex:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-07T10:55:39.995764Z\",\n        \"id\" : \"b47l\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"qw7m9ko94xl6zl5h88nyv0bieflwe93uy7hz66zlf22smnjlqhl5g8ey6uaowxcqvvd0rt7m5g3666jifw7673jw6dj7o24eyjf14x6\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"yy46hxjs44hnxapunzinfa31w115i3pw677r4mr2dyg3vyqm4ilesl1nsykwg3r9gxe5boz5x8qgfayc9s4g0k5wtgu\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-04-09T08:44:39.996048Z\",\n        \"id\" : \"1137\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"pl6qcaemrqg6ecqy3ohfdsz7xr89m53s1wfu1zw8a2yd9x10gmqk6yr4x47oyb43bdwuwc6pfkqdlkmebnoofv6islsyl3gcccsp4i549ye2w433gt0pvva4nwgbgj4by1chl4onhavkth60cyu5u8xv5frr3bfv179y6i4bn24nvku\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"re13ul840a4qz6hkobns1vm6txyuasynmvnwwqn9\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-30T09:02:39.996268Z\",\n        \"id\" : \"53zk\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"oy3a4s52tigm65twerisy0fnq0ifhcx78b7hcm97scjsp9cx1pmlr98dx5xwi16fv3cxgb3307g7hsm2mtpg3f4k3mw2as6y3wqdhnrilrb3qrjnxz7up1wkoq8ihloqy1laih8giosxoyaghsoq2\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"vnog4e7s1d4m9tlrj3gm4tbaddolejo3so8doletijfyd192ocddqa0eruaw8d99uimaupjg81x92f0wwfhj6ud5q3p70\"\n    },\n    \"rows\" : [ [ { } ], [ { }, { } ], [ { }, { } ], [ { }, { }, { }, { } ], [ { } ], [ { }, { } ], [ { } ], [ { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-02-06T10:38:39.99648Z\",\n        \"id\" : \"0qzb\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"hbn4992p0uck052bzoivyqyqdxsolbwj2zxlihox8acj2l3at8i4uz6tv4fc8vfk3ccmb74px86zi12um6xf1suu7mdkykv6s9s0skl3e3a4bprhwz3\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"ifz48u4ndksvhgxz1f8nv2x932sbgr25aar1986fntv7kaz63zfa64wdzvzltku9e1xwmt4ky3uqkf3l7p7hzfivhrgz\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-06-15T11:58:39.996713Z\",\n        \"id\" : \"08z3\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"lg77hco1y8riblymyhxdmx1diyf46ib0jlqc1w30ch1ipxvhq03fhnx2b4wzcuhj36vrjv8wy0qtnpo5zgcx091a9w1zvngmuce1h5rxnny3tgrv4npvt3hoyfs4hltgv56s915ynz4c3rejm3p5yhtablzi09\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"omlwk2r006jsx94t346xyhyrh7pwrmb3sa9nk126hd3yshatbiad42abkhzji486g9d8hvk92j9gk8zya9ki1jz9sd1xdz3nlpai39l839cbastkbchosxltetn2b70f5g8u64x\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-12-03T10:59:39.996916Z\",\n        \"id\" : \"631d\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"f62wcn8qtqgecioepl4rthlexe703i2fj2klt5ce1giixmrgng2v\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"7954p0o37b8rwu4qto55twv9c5sno12dh4zd0a33fm9nfsdxaaih9703asm7ovrv8fz5y22o5rsgc7g68r\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-08-21T12:10:39.997122Z\",\n        \"id\" : \"45iz\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"7g4vj1phbx\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { } ]\n      },\n      \"rowCountExact\" : \"6c6vxvcc93oddik4k7que9hc998yehz8yj3q9eoma9lagidfw79kfrfkpv2bptg94n15dh1llt1r8327w0\"\n    },\n    \"rows\" : [ [ { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 331325713,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quo autem autem est magni totam. Corrupti voluptates alias explicabo nesciunt aliquid. Quas ab soluta nesciunt. Est aut repellat minima dolorum tenetur.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b30fb10-5c34-450f-9152-4ca9a63e39f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.997505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b7c8c603-337f-4b9f-9bd0-3520b63df5cb",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/l8ubk4uqb6v4k3ugorro314hixfeuc9mlw2stj7ftzej8gonnybcvl7zo3gbltlk3izgx5hnra4boysg6wqik7hy250bh8e305l1gk19rcwre:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"ngmyvoy6r11xbphlzr0aolf4ll77y583mbskkqv92v6cpcsx4uhknwuqno2othdm\"\n  },\n  \"commitTimestamp\" : \"2022-11-28T09:40:39.995624Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7c8c603-337f-4b9f-9bd0-3520b63df5cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.995679Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "b058b981-f7e8-4d07-8b66-9d704ec0202d",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/c8aqtsvunwa9cef4s9anyf3m2igu0:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2022-11-05T10:02:39.995368Z\",\n  \"id\" : \"pks0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b058b981-f7e8-4d07-8b66-9d704ec0202d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.99556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "91430393-9531-4905-bbf7-6e0c20842386",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/7np2ux1q14pnd720xdi1c602a8yhocll0iziesw1abrz70bafhj108jdvdmu2dccls0rxv8hwbtawq6zgzc0ym1coi70teg8znjxfkl4ktmoh28n74r3d6i4oxxihmw8dul1nsrs2o3sv8zlhb29oh6v3k610qgyniei2u2fss8m0flb54hn12li6bso5y1dip2p:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"vi243l4dfl11nl6jyewfqr75cwdadgy276jute2k4i617bcyqb231ckjja1ac7racknln178eye8bl0ndnj2u626m9dad0uiywbalf02zpgarao7zsodldvkmam6qj8n2ypj2cthpzl6czl6hcgea\", \"p8dk44nfa14gderzlurd3y2qki98rk2jt2h1s6pxfj7r\", \"wnpnvnny6tqxp3ivqu1i0zuxhxco4\", \"8x2ebnn2c1hgc5tm0oexo15wsk9ug0mg02ja9f1zn4bwwskauw88l8znw369m3nhlvean6rcdloj\", \"osbucnsbzlzfkhix194g6\", \"d4a9py078pbw6mohxe2d00fjma3wbjx94ehaumenprtcidzx6zrvgqs7uxmone9fs7k71vob1cgmmmt2r9e1z45wipixcy6gmbcqq20brph7hpdzb0symh9jvgl2qiqj6ul2d6lmstbpjvvizkt66x97xwsndvj9zonr1octjq0l\", \"3n9gwmszkvhpwxj9g56zizm5eqotpo458spgt5yxpo3m1lj8njddxqmn1zx7wnmyx8lqj5ogz983zstb32ufr5ffrm9u3jf6mwcdxge6y3r9o\", \"504qgpd4bn4cm7c1mjid0xagtabjp5jmyniy52yppiy3c8dpqjfi35imtqp4ctmcrcnd5u09c4v3h48ahywo82q6cvlv5qat821r2o2tc5zau3t819tqw3gz6d6kmssg9nyo3h1cdk2\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91430393-9531-4905-bbf7-6e0c20842386",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.995326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e9d89e60-6c65-4ad9-a36f-4fc0a3d84b6f",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/ro5g8jfdsw4asdd9u5vkjxfw8i9wx6ya2j9vla0yhhd2zocr2b8r1xq9o2hzz918p5ziw3aqf9tb1qklc5cibw8:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"btsgx1og6lc4pcjhfqsbqgsvlna9\",\n      \"description\" : \"Aut ullam aut consequatur aperiam unde saepe accusamus. Dolorem laudantium distinctio suscipit accusantium totam. Corrupti numquam ipsum. Distinctio at ut.\",\n      \"location\" : \"03tvwf2ji72vokk1nse3vfew4wkcm93w98m82izah4zgjody2l56os90dpfe12iotb3t7a901d8fn3jmhvpy35mcsgc56wp9s5828g3n8r39vonlwfw725\",\n      \"title\" : \"Aut voluptatem maiores optio maxime.\"\n    },\n    \"role\" : \"q59hoxtgpbftpswyjjuhupvh8skao2lrmy0s\",\n    \"members\" : [ \"rvr4to1jrgal1d5o61yixgxa0pq4fagye2so5ohw1aon70uban75uj4eslyb6a4nvdynki7lq92okq3zy4kwsq7t042fb3y4vb\", \"sj4hz2odvj9w4gd8379l56xg21ivdfj47yubk9fipszkcvfr7qlk7t0bt\", \"h9crgy9gzkjd5tnge85q3imi7ox1kqlk1gxbm6xqed1eapwt6enzd0iea34xlvy951po075wqfbds837wsfbderjo8h92lrdma907mhmvhhz0xeu0k02srbfp89d6gy8a2sh7zdcxbbr1y7mmeix1xotp\", \"dzn34pl7gyut91hzq9ehuraahmedh6lfsz2znglja0t271rvxvu9kke0nmb17rz231slmdd74f1purq7djbuqtn8n9v1k8ntvo2huot4omxjqgddc\", \"bfrtmhidihx994p3slle68zv6x2lec37i9js2cvby1rdc3x9dqp6x2is5nwov3puhz\", \"rj8kx4oiedjn1aouxyc4lcq27qkp6r4260v168lvg0a5v6ffue4nx2i2qj6pn2iyvuszy1dfhdrwjow4b3vkvwxcuoswqkb1hh3cjz6w9bkkg4iuv03jfw5gbd\", \"kmj18x9ydw1kaf8avez25ne2t2smweq5tqarzwpg718oee2rfz\", \"b565du03qvoa1a1jdsuxcmg7djbqmiu6i69bieuf7rtjgq9v14sfrzvcgcb072gidmbefy7twr54j4ecjc7r7c3q0fgueurgqo8prbfrpqoovgmphdiytbw1bbu4sq98zt6ozducesrdc5665y5bktx1b\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"fs19cg7twbsbmwsnr6h1umf3j610a1myircxh1m3mam9vdnscorma2nomwsjpxcaugyz5p9of9nqc6n1994q8ah0t3zm7c2zzfcy1n3y22y\",\n      \"description\" : \"Aut cumque fugiat ipsa quod itaque possimus. Hic nulla nihil animi dolorem. Sit sapiente libero accusantium optio consequuntur animi. Dolor aliquam nemo quod dolorem. Ut numquam dolor impedit deleniti\",\n      \"location\" : \"d4enft6128zcj5cs8gx5c7s6bvjfo4i8abe7eb1qrgaf5p6k40h3dwvjj2i6cawbr1zg6g9hw0k6ccqcmm5w8qi925iofoc17wqxizvymargtsdo2ef6q8ogwzex2pfcord2e5zjt982nyrf4ocnqnaghcy2srgxwex8eag755vm25rjwd1fw\",\n      \"title\" : \"Eveniet velit minima non.\"\n    },\n    \"role\" : \"w3f89\",\n    \"members\" : [ \"fpbaogz8b3imr8gbnvuwyhuvauvdm5lmiufpydmtj9vpzl67cy6r3tobz53ud0nclx35qd56u2cdid9jlw71li5tqwnjqcskpneauchm94ufdfpwux2ujk\", \"eic61yilybqais33ekz8ym7iuxx3yukntqrl27ykg5681m95afylxrjjojowuwjzwgfyykqbjjh5r9yjl3on268\", \"4r067i3xjxktzkorij7c0ciprbcqyqx01ybibtpr\", \"dd5nuw6brzcd2n2d5ce0hvh9699xb12sc2k43vtkluvi2ctmzq73kb4h560pvr30yv96dnc473bir31yqnoyut4l3ob9op2q3xabtlalct2wbttaq7vtob19etjnlb\", \"js3nz7v9l60p3sdwl682jmy6h\", \"qmr4ncvgl45s1ofntp0r399mubqp3y84xe7zbz7qp9hcupf7cq\", \"7wyiyuh64uxnvtsl4v8w6lrwpe2on7j89kcu3hl5px5ltn6uyrf383mf3v\", \"dcd684zgkdf7dvxvrhvka19x11w29f5tj1t8r9jhkovo90lypwpjec65rd48tmhjyet126nd10o8ett0pslvg4omx41kgnvf93zx0n94hc0cqoi3wugwzy0tf69m\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bxz8mbe87a6j4ptsn8p05bmw89s7ewnxcnipxpw6v5eoon1qn7do2k1hz8e2rzhxztwp795f1xyjz4\",\n      \"description\" : \"Magni corporis voluptas eligendi. Assumenda ipsam quasi. Exercitationem consequatur voluptatem eaque.\",\n      \"location\" : \"mf7vl9bu3gv0u5ikkxhvyskrxovtpzz4swnl8kw21yczo66do8womnjji5omm64f7lt1n8x70vxa8tmrifootenhdgvz2apttpknif2ks1q3pc0eystwbi1erpw5mowec0h6eoid1ngzclm68j3\",\n      \"title\" : \"Est aut aut occaecati autem et ad id.\"\n    },\n    \"role\" : \"f7lomo9mqe680ke2e5s73926x1mhfhjwg2tomp1k4nymngufv7c5eg1q19xh87ghxk61h73jjwq2564g1j1qh2uysgemytk6qrj4jm9h4bxl0mr8aarka37qfzp8mng1oru5nhd5ivgjbbmeird\",\n    \"members\" : [ \"kpk7sjp53qz38ih5avrr5mnogkgcz\", \"mf6mjv63binfkk1wi26hcn68c6g8m313bs2qo2cyyh454suekb1g4fg1xo1sn7vwzxfc81zpq2yfiexc7zna2idwci1h67o5m5o4xlfhtqq8o4ew8b49yv5xp1pywhex42lq1wgl5ljrm4xtdq3bfyc1h1lpwrr8yhnqlcultu2iihqw8tp534fvv140c85nbe\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1yp6l5rmbgwe0ub1pet80h79n8dsc\",\n      \"description\" : \"Repellat ut adipisci similique et molestiae. Fugiat beatae iusto cumque dolor consequatur est veniam. Blanditiis similique voluptates iusto at aspernatur totam eum. Et optio deserunt et repellat. Ipsu\",\n      \"location\" : \"rekwf2b69iiwregc6sh13177gjle7xv19znsh2\",\n      \"title\" : \"Dolores et corporis consequatur molestiae nisi nulla rerum.\"\n    },\n    \"role\" : \"ejgsokkezlglp92nfkzj1btummn23qr0ecyehxsblxm7jsuq6tzazcesheopz9mupzza8p2sv38fzl\",\n    \"members\" : [ \"vinsmdo4ktfda1vv8\", \"93cece3g211m331p2il7iovlliixtq47damkax0f5sbbabhv1e140kg\", \"ogvr6u0zokmqwr8xb297ul02aeftuli0or1yoyjfxv4hdwajcmdx8wi9svusy5nejp3grs86nq5oo45397jt1j5ietdyiapc8w6m799m\", \"4dtwlvlj1ykzfssd92ncidzwy36jhcmkfyj2z74j8zhecgem1qipe9rivtx7hveeku4qzsr3ibj8kqtq1quyvs928deou990zrxd2q583y4u0apgkrwg4tclq99\", \"117en5cqk3y5bi7c3bs15k3pv1xku19k\", \"veq4tzi85onuz84x19u0n97g0g07h8ttp9lo3tcbkfewx488tvqb3y8gsrm0c04m80i8vyp99zjmyexcrb0jxay5f8v7tgk57mzq7w9q8zl7\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"llcmztwzgbrcvxs8aarn4fqnxk3onu0fkoni94wwuq20l0uvtd38nshojs9ox2er3bywp54k5la80m5o5hk0kp2gomos27itnd7jkb8c8si6o0k10n7cny5y7j1t7e2jiv4l9cfld8m7jgc0t5j8tne3mb1q3ts0lww0e2vuv0fmaf98k6c76cxp81vljh0o15\",\n      \"description\" : \"Molestiae et labore consectetur ut. Et in libero neque at eaque sit. Aut illum officiis perferendis vitae a harum modi. Nam voluptatem veritatis corrupti natus dolores in. Velit debitis dolor quam ten\",\n      \"location\" : \"yh4it0fdjg796dcikkcmlyle1lgli\",\n      \"title\" : \"Est laborum molestiae ipsam dolore.\"\n    },\n    \"role\" : \"m3s8qoh50lt9vva\",\n    \"members\" : [ \"gg8by8598xq356bzt2bth53hccrtwcfbjzdmoxbaxfxjadgqctgmo6wh0rdg1963yznets08ccap8odjykpzdrbqo3ef8f\", \"tnqqbgn9o2stc2wckxnobeml95pkd9c3sx9893x62qa3n2l4lgejk3aybyxzzrwo7pl1fbn0n4hgsgrvm9c64or0aa4i4a8m5huvj1cepou73p1alhdphn1mqn83ati6tikk8k56eeeyt3o0c094oymltbdplwz4ccrr3w20nejgxsoy9utkrd78m31g0oi\", \"f0pklzdq3oyxh58qq5c3qqwtyg0wqodxisdz4qe9500dzva6rxtxxt5ia19tm2yf\", \"xusvx1ahdodkzq01kxug3jonw341g9p4jrqsv\", \"ds3bx7dgp7icr22mc1x2rnpe0h3b8ert5rzmeke061rmrrycjb16a5b0abqjc1nasxswlfmhy7lkpwqkbpgjx7ak2mdh5pdppou9lp6uewmn1cq8bzaie6n3vmzelr9ox6datic7a\", \"4hdoi8e5nccqb51kqpx3hlwhv028\", \"zeovxc4gdhhsugxqofg4o8768756h7j1rwgp4vaw1u0xa6hm55213qo5zt9uoxlqeo9aw5bst5taw0dkvgqsdxzzcv85zt5ij72n164w00goxqe75421yoyyyz7id2f0q0wsi5kgmuouzorrb7z619zodxa20dfysb7c5f38foms7affpj0mseh\", \"vud45kvb2hw1gdcc312vx2je6xk666v3ifcr3hrvn7k80wgm3ju1q67h\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xyg7nbmam35gcxmvcs\",\n      \"description\" : \"Nobis delectus ut dolores incidunt. Harum nihil vero. Qui non voluptate. Natus enim omnis dolor quod.\",\n      \"location\" : \"1nsa2kjm0ywbxw\",\n      \"title\" : \"Quibusdam ducimus laborum blanditiis voluptates nisi minus molestiae.\"\n    },\n    \"role\" : \"h6kghhshlqf\",\n    \"members\" : [ \"867wz9rmdtwzdsarjkaztnd8onwlejrr5q9nlp2tsxk0j7ddfmye1np0ii1l64es3p4a5uer95gezwyqwnci45a97fpzv1lfuamhl22jorhhpm34t041bxyew0oggx3v9w0pu4e2owiym9f40d9agsso46h5kx8h94uc81zkd410wqblh2k5odwm\", \"cnfjoughnctpx0wxqfpapohi82mluiqzkdo19ys6shyt8bzd82fzd2jllyuclsohc3smvfn8mo7g9wom7knl0u8q08yh91y6718mwk8tfb9g9b8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qp3cipfynqycfl97zqvi00hi2xupcjavt9oo51nqbaqff9tologi582wiuzmtm6p7by532ton1zrvo2kww73mclmo56aphpnstfwhdr7jhaovlpqzho6pr393bssjlkzvmdv2569r9h94h5kgnz2l237wu5\",\n      \"description\" : \"Qui tempore rerum esse eos veniam. Consequatur est corrupti ullam fugit eum. Consequatur molestiae ducimus ipsam voluptatem odit.\",\n      \"location\" : \"htumbmn9o3icxqzn8z0mpz1mxwtvmtt710qk4v3qq9d40nyp0wxzipw88t2lml84ysa52njxzk8k6gjhzn5w706xgje4j43pvkrc9motqwu7rla4\",\n      \"title\" : \"Eum perferendis nobis dignissimos qui officiis nobis.\"\n    },\n    \"role\" : \"r8buyydy4xeidzq0uv87dnfkjpmm598o5qhdzyujoq1divqfam2xvlg40rr4qsenoesfv4t72kpwjhwvx0uszw6ttki05vlswjun8w563dxyaa9qctjfda3fzq0iknq36ik21qso3piw66uyu9relx1y54t1q8wkd9ib5myx160i2wix\",\n    \"members\" : [ \"5iy11wrcng88lcv5tl79nzsniq4epxvz0swvhqp7i9mjds5qgi9ky1cubfb6wmbrnnus2o9me685faibri482p166n1pvivb450503y9lxmsx22icwkeljp0zyldnishx7o4tqujx5dw83ahyk2t3kl06ob0kx\", \"mie3vs8m98ypbov9i5vb08sj0wuy77b2fcgxbpomk7wq7go7x3j3x68s7w6bwz1z573t1lzmbjzhvoqtws4bb1rrf5880xzguzc1vl2l25y9zk5con3xauojcddix4wminya7vx779i8volo81wm94jw31xjsjknronszhsx0mmoudqbgeqzd2vfzpz\", \"cwywimpfujyinhrk6mi5j4di5zodvqg7ca35w7lqwumjic6q6oyp3onbmetlz2znx1f\" ]\n  } ],\n  \"etag\" : \"culpa\",\n  \"version\" : 1563590969\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9d89e60-6c65-4ad9-a36f-4fc0a3d84b6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.995189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7e1ccd0c-25e7-4a56-858d-e92c1a57b20a",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/xmbl3mb49vosvshxw4qvvn8merfnymyharm8s9mr7nwpqzx75ebxeggjc923tr9glx5bbhni4lfh7zxpkvkx2s78jrblacaeh2z8opekukjnb9nop2cadx7cd0nu308jfv5tm2r2p04sax9r2q00fm6e8o1hs8yqkopymnagf55u8ih4cpq7upl9ybd:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"qv792sin9l3fjkczpufu32sr2hjzexx10rpxg0aik8vqovo0xc621uudo33dnx52nxptsq38rm7xxsiirqom47zpa20tthp51w3nre9qbfi0991k6cfczozem5a0130072k185nska87x5ln822bz2d9x618pqjgxpai7yypecuacgw3f3a6jnmp7rtzcze\",\n      \"description\" : \"Veritatis est ducimus et. Magni dolore dolores quasi perferendis sapiente id maiores. Harum velit repellat vel aut adipisci. Vel quisquam aut. Facilis et deserunt omnis consequatur delectus nisi.\",\n      \"location\" : \"3wusplb92jghig8n51xwtwivmtyam1cqxze8qp1x8yngugwnqazgmx9tbsw0us599ds6r8dqyql1y4gcb0xojng62tm2r949s\",\n      \"title\" : \"Perspiciatis voluptates cum.\"\n    },\n    \"role\" : \"luf5eoxo8mflxasv0jsogmec9qw0k3erymopcnunqa6zhokhcsfmjbd9ve106llqq8enxmkol3fhnwstmhu28bkisvjmwku1ftycw3xi5a7bfvrv7yk2lmvmhqa9enjwk8jckdbpvmh1kbws1phfco2uhnhr\",\n    \"members\" : [ \"upnx86l98xsxkaf5e9clrzc702y7q65f93t5ym4nfs92jqyfi8mgc2n3t0uk2xm13sv\", \"g1hegdy6vdplkbjzi2xum5j7uohno8j2z57n2ezd3ywp8ixsgwdqofkm61a1gimqqama2u8h0nk9xxlkq8va6ej9axbw5ek2jfwkvtuj0fipqsf6i3ruoil6qg2\", \"tj3yeus6nqyub5ehbdrynpj11u9j1frks5bqn3h5jxhezgdp24tjkjji7j0rjrruz4fdwd941iphkujmz7s4mwrjap59ogt6c0uagq6lx1m\", \"talucij4lf6yu1zb2hcbjp2zplxj1ear5ishjvu6l1qgozf0aqq6qm336iyvfvcz61ndkyjgcbx3osim1oj0ljn489fvz5nv82r6axc96sxo4bm8kqnd0rb6uib78b214b4crrf2e16\", \"75r\", \"gl621vgwc3d7m7qbadxwdr8ubzap3c38uzf1fy048azdp6qhcccp4b01mf8cx96910hj99jr\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bypndwcioh8ldwkjw8tnzofjr9zr8krskrbrgsmcs9o8k0f2zvmbnlhqjb5v35r0uhww765ktywlzav5lo8nh06czkszo1s5xyonk0hevl4l326ilw6m3qvvh1dzmy2bvpq00zmzz9vzec\",\n      \"description\" : \"Sit officiis iure accusamus nesciunt tenetur. Eos consequatur magnam et ipsa ea. Officiis voluptas sit. Repellendus maxime quam saepe nesciunt ipsa. Temporibus eum rem dolorum sunt quibusdam doloribus\",\n      \"location\" : \"nicw26mtudhjis4b7b7vl7cal9xyoiavr9ttgo33cs\",\n      \"title\" : \"Minus et at officiis minima accusantium aut.\"\n    },\n    \"role\" : \"popwjthc7h001n7zavty21uftrd7utyqcnnzzetcfd3blwvyf6ztcjwid8xjznn478445736pp7xv8rkp2mx3y78krhgsfm0uk6ntujeacjm5dmm5rz4xq\",\n    \"members\" : [ \"bs0lm9l8bn4fq4mwku9wiwaplm3y2rr3mvnfgrizcj1g5yhwnhk15i2j9n4hag2ktujk9u3olmodfveem9wz53107flesu65mwaturh7pesuyrxs\", \"qdaqiq9vyo1acbeep493bkzpwityl5efd0oji320kpwnuw4vlqzyj5m0pt3nmn9wgyr68ignm4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"cqnhzlpdwd27ckzrpryelvdpfdylpzuavxci7e1lr5by33vps18tife2cc3j82tetjh0m2ccyfhcliyfjjxwj8rjss3yjf634faov5hxv6wl\",\n      \"description\" : \"Qui debitis similique illum laboriosam doloribus dicta est. Fuga qui quas sed. Animi neque repellendus qui necessitatibus est vel et. Voluptatem sapiente magni at.\",\n      \"location\" : \"mfphj6ypk4m8jei5d2ekvnpmu46frm366by82s33b4s20j164p5j8b1k2kg6hxjw1rc82biml8smjm71reyl71x23iigmcdyd36yyy9nmipdjpyz\",\n      \"title\" : \"Rerum commodi qui laudantium reiciendis qui.\"\n    },\n    \"role\" : \"21flf6hbbooc9z9nni82g516srnj8lmt83jlrsqyfa4j6trpxwfr7emu2is4e6ukeyxnu9wkbyvu6pmg8mukeba761iq5sp7lr25ecnl461dupvjyvh\",\n    \"members\" : [ \"y1v364n01ic08bqmjsttobu9aqtyelc89qvyh2jkzutfydmo391e8ey2bex0jb\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"slgonnaaztpgs9r20xwdmd9uy7q6r3vografn03shgo8ffgy5w8f9sqrv72dt82dq0ptjjoyqt9gzg\",\n      \"description\" : \"Cumque qui recusandae et et illum quam consequatur. A rerum ullam. Porro omnis aut ducimus et possimus officia dignissimos.\",\n      \"location\" : \"dkx7ft3t9cnf4z40v3malwwapscdzjtmg6yb9nyv4o8x4qpen6slfi207d4n583hhibn3pc5efxo9simjs11o9l7yfxsmgc2dlptr6xrju9rj5bmgjt734qcjngnfhfnv9k0zxa9w0ub0zhgxnwnykwclwccdcc6kccqdfam\",\n      \"title\" : \"Sed facere voluptatum harum.\"\n    },\n    \"role\" : \"h50b3lj0s1euxxdzou4ygoxswe1sq309gcad9jz37jbp9mysk472w50bku3800wlujy07z1n9qa3t2nw9xl202yx9lx130esi2gmsap0eyc19l2haj7z6v560r7op8k8l14qvj8x7z4hes1j4r1f554pkorkw6kf28xgqngf4xcd2u3g2xvkk\",\n    \"members\" : [ \"cymb0ypc96ylingtmlb6m084n9eb5qj96sf9d0nfisudw1ub6auh79n58heo4khhcn2t6p1bdlkk6r\", \"4bg5eoqv3pfiql0ug3j32adi1t02m7ufxv1lfa2wriolqaec1718c0p9qlsp0b4r44q8axz8eaw1pliu7rnn2kh1smkr2tk8dz53gfy1ss6xsgyvsik8k6p9b3tbf34ycz1mkl48xpmefc4jmw1in5c97sedl7l5hwrlfwi6pc0nxu\", \"rysd8bj2kdjaef8vj0w9vtkyc7d635j1c5dizf911a0pckmywzj1jhzah5fx16mmjxrv6ocjli0gvren14\", \"a8rilmyt0p92cnrj1w2opohmgogmcyfndf5uvgdyrdid540vjtadv25pigv41nisfv3htnigiy84y9w9xg1mi5day7bgo8txubkqd92a8vq2v4cd7m8whstf8x3scvi\", \"wdb3cuf7adut1n87x8arefz6phu262ncg7cc0poqczv16t5nt7xtu5ul9ndi746fivlh8veqhmtjc5r2rea5qbsoynvduzlv7vvcyas9b84oec30ljtm840jxl\", \"ye4te99l9scgjo0dm942j6yhhmuifmf9htqxfrp80nned4z9ybbbog6s22ifuob8cffvw2n4ti6zaa1gdqqh8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"6g59miotdh7ll2yqu6lki5rw8m28yv7f2dj4d777wh4uvpiwbzs4akmu2xjiw9ushqrdsyi0a2hbqssp4xjstp3gtbp6qq031yutguz8bqi30wsqtvf4j4ku2jhzg2ijwtrblgs3g6iamsi3i76\",\n      \"description\" : \"Reiciendis deserunt vel iure corrupti fugit et a. Fuga nihil mollitia omnis dolorem velit voluptates aliquam. Velit facere ea et quas sit quod repellendus. Rerum exercitationem esse itaque veritatis. \",\n      \"location\" : \"tse2jjlwk877tn35r31r5qtm0hmvnt40geu1raypk0p0fz36hplfm5w330h2olk42xuvo6pp1cbiohhjk9qpdyvtn2f76\",\n      \"title\" : \"Fugiat eum atque soluta animi harum ducimus.\"\n    },\n    \"role\" : \"a92671wazpwgnb7sspppwd21qwj19at\",\n    \"members\" : [ \"0adni77ltd66tw37vtznsxrzdygpu58e3z3zpbnvoer8pv4rouqt0wy46km04qok2doho26pbf7guytppdhk1oypjq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"uwn1a7r9qthpmyjb40nru4gavu9nz35s0dl5ipd7oop0pqgzc9c7vzmgothe7gim0kxj9772wjtvvh2ldnqsoxd9l5b2gslku95jy1o2vpetkxfodlx9ell526zbawyqm90y1cpbsy2awmq1t\",\n      \"description\" : \"Consequuntur omnis non odio quidem tempora nostrum. Recusandae id ex et optio molestiae distinctio nulla. Et praesentium unde enim. Sit vero tenetur accusantium vitae modi tempore illum.\",\n      \"location\" : \"jfo3x2lbul4v2z85rwza6abyatd2fo62eirbr29yf74w9xgh9pcuvr8jajw2phwj42f5cg7akmnrrij3ggxjps9u93kf9ra8o5ipop7m51ku2r2bjxyng6ulljh0376sboyj7w2s5alk4v85qj30d4gyuhas7gw4sogk\",\n      \"title\" : \"Cum voluptas inventore autem quam quia eos dicta.\"\n    },\n    \"role\" : \"162xi2hxnfbqu9qie7dxqweuupj8qi080q384jdojvopkmbgoldaehav29wz64q9u3knuf2zg8rxcjnu0m\",\n    \"members\" : [ \"b5crn0tz2gtolg9mqryzaalrt2jlm0er2pkvk3fwb5q4vfw361ry3uwzqqmh4sholb6m3sdp1sicqlgiwjou2hu9a\", \"knzytz65d9bwubhuf9y6q9vwteot42c7einyaplqh8hm\", \"hhq8uzqoivnepw9udk3epp9v2kgfjeo6mepaawlpk8llbf7q4rtkyud9fg0z1mszc3u9heqs7v8ypn7114nhpavmwjq3ohphm5eiz5fxjv5ajqpzp3uvkcxs\", \"zaxs9yemdabdgy725nfhsldlaxs2yww9fjoy6vdw8wxfhuc74s0e78cehw0gj7btdd2z0dtpdxs97csfmc4bkfbkt8wgoiof00kjp5ji5g0nj1jkvfhd696j\", \"v8scmdcmnwsdn3ifueis7nrze3wuu94ilv1e56v66bmhi1dbc9mm4skgcdr213c8145o1wz53n2iulmp\", \"z1ub9om9s1d2v7n2cnvpogdt84svyq07wwhfv5brptf5vq6gh4en3jpw907eh6cch02rxldomj849kkaz7drl8twx4en38kn27gcnbkcdlm94qtrgwb11xdkbm5pkrlczzrx6417817088j1ajce\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ug9hgoawz42nrvg6\",\n      \"description\" : \"Nesciunt harum rerum pariatur eius enim consequuntur. Commodi et qui laboriosam culpa quibusdam qui. Voluptates maiores explicabo vitae quasi exercitationem. Quibusdam eveniet possimus quia nostrum es\",\n      \"location\" : \"x85zmps98uym01n1yzg7bvg52uprmd25u0vbmnfau37m5a7bg4ytjnrod2m4bya6i154ehr8kq1t0wxxgkyzg\",\n      \"title\" : \"Debitis corporis sed.\"\n    },\n    \"role\" : \"jqhgjafnko4qnttugs4rjsc5khki8rhb2sk2o55tjpta5romgxf7pq26cki3kazenep23ja34nhsikn0kli8zkzudqk0xznvzov49bhmtakmoxlndm9s6yg97bw38cld52rsn1me26526t3sihj1v5ea7v0fp4bqm3p6buaamzp270rewbamgpdq1ulgg87n\",\n    \"members\" : [ \"sqsbdz4030z5r2zqoabgf8w86rgltozpd6utqbwy3s35jebk7lg3fn5tnamiosm23sud2ubnp77416n41bkl1v8lgbgwlh1nmcj2aby15pcp7ud7em7\", \"32f3mpguceg4t6kijvp6816bomambx6v9hxx852fwn38igneurunqey94eipl5jnx7r8j2houcs\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"zunylnc40mfhg2p1dtcltuo9v2sfye1hq5c08vnc7a4nz0e4k26ekczi3e4a6b1e2l0psiu55r7giek1ixf32a4db92mr3y8fp18d5qod1y\",\n      \"description\" : \"Eum consequatur dicta. Magni quae eligendi mollitia illum cum et. Rem eligendi necessitatibus facere illum alias eveniet molestiae.\",\n      \"location\" : \"bbdt55n0agz25wvgltmcmntfabquprnw7tzdi8ca59d2ficandh2s81ww\",\n      \"title\" : \"Corrupti quia sint sit.\"\n    },\n    \"role\" : \"5sp5fuc50hzc1mm6jtnb661edxc8xnd7gbzsw3ff530l0fomfx57ugfrfxn5dakdq4pdwq8ckhrd3xptkx4eailxzmxgbkgx407jmogjuaqn8rufbqt5vh4ut4qcl7if5md3qtqcyv6lt0md4fdz7hrgj4qkx05pqvjtg67g\",\n    \"members\" : [ \"20pb5hqd81hzqznp9tw665j0vzptgs8p4erjysxrgdqfzl9xp7cmwn2xsfsx5ykq3lnufim1rfcz9zdeg0e5d567ycajhhi4opkg4p150jmf835z7cu2\", \"erko3kbixgpzvyqbvxwlw89xjba3ae4b2omoopc7go7h1g7l0nipfhphyoyy25t46nkuv0gnvfd2z5efb5ppfkqhrzw9rywztlj1p2qd3y59crtsvwr5b3rmnb6ypdoboxl24vzts51nglndpnzpvf8nixq3o\", \"0wyd5kzjpnc5b0i8bntiyhcy8s2r8hiax96hcb8vdkqz3x0ou2obwcarh5mr\", \"v3qfxu2wykqcefm4lp26joje0d\", \"288apzw3kk7k6k7sref6fknmqkmiafntcljc6ooxq3yl0vnl7pjipxz6mo7vq5ufmns6vrs9hk1jomgxwm37y8ousvtam6cmwytnk7vysz4h9hgkn7xo1l6y9fqstlsq9tku1t1lgsf6b1tefjvbtvq9syo3juze6uma\", \"47mplf68ll309vngk63yivq5yclhx6821eni2odmd7ycuwauo7vbg8pf28m6ynhhz2fx6l896nkuzzg8pn4o7wnt9csz047i96a9l0u74of4k3zsh1uhbuovcrjdt0lgcnr3wnwuw2hkxdxg7xspcvwpe5tk7x8qjfjy1j3gdl6e655rcjysyj83nn\", \"3fvwtmsq2gvgcr5c0du4ltjcp5hs4763kvna7zshoyw8l6gr1tosuo8xdzqbf52o1fiyo0wlwp5re8d83nxw0p9xtk023npqvwg8wb6zw9pdr3wolzgsnl16o9wry59i8t\" ]\n  } ],\n  \"etag\" : \"voluptates\",\n  \"version\" : 1888376412\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e1ccd0c-25e7-4a56-858d-e92c1a57b20a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.994114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "8882beee-4d60-4d6a-b3df-b63b3d2d56c8",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/hso91n7eb82136xainf5nwf5xwizxtxenim7j7ymvnn8kwtpfm39t19bux0d389z7zicizjyiiv7a6w4cmoeu0ld5gjl/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Twana Weimann DVM\",\n  \"error\" : {\n    \"code\" : 711556852,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Molestias et natus rem perferendis. Quas ducimus et ea quidem. Consequatur et deleniti. Praesentium accusantium et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8882beee-4d60-4d6a-b3df-b63b3d2d56c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.992907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "bb022ece-fa79-45e1-9668-843e39ff757b",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/hvsseld494277a2paoohbnbebibwyk9elkttoqubt6bwk76moxqvjsahyl4g4308djyh7cza1ydb1opcwx3krs1zpz1ic681ue076s6vrch7pqw9iomb946bzi0cuaz5bmmkndp4msq8xg0br7wk64bask8qlmkuw7oqqgie36ti/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"44i14blxpsmij8nlbfqp8lovkzcpftr5o57a49sb8xzzf8jisz2yux1et6ksaagdfk7st0\", \"tl8a0pcumfcysgp1b3j4uzwsay4zqi3r5w2ymgw4fx4nr60ea8uoojjn9ss1wd1rb9eyni9guhy4lpqpltj12st96jpunqrcwzm2f81mdg2treagshk4s0bkjq6x9uri6ige1y6jahl4xfunb1sdz50reigszp31n7ndyo1xroqjqhwkqkvjj1uj2e1\", \"rkg78gpmbjho1l4qbi5gvmo8qcr2z133cy5lf4dv0dewuswtrbzwq0d24y7dray8oulvnzzatrr7myrsx8fjlw68dtr146ey4le0u\", \"y64vh5csl2z5bsi1ft6vthpi6acge5k2zz1uloloeygbskx3iifsoky78d5lp58apsizc4yz5v00u54akomikds1oolsz4b40t1jiz7dxgy64bf5d08m50049phpy2084touj7azfi9nnar4olhhj5dlx4t\", \"gabq4hzspahub3wlac0r6ql1oco0nytetbr4p6wjb1hb8vyl4dyovgx33d3jotx31cwubmzo9xz6yyp8obfwemgtxpli0uul21bplons077iq2wfuwfb8xq4e9ggc0baamuk7thjnp\", \"yv9uvd4gtbvixkvakdsl68tzxgccsz7o9fo6l0yturt4zjra806ipdbymngg1hhfcvcyd34akzu7o0sh21uerj6nxh3kilrhiqe7e1z5ajivrpzlpfrddj\", \"v3d2ohw29qq2rp7nas9kdfbaaizhj93ocmcmhnqxxbhgt9owjkjjy1ymu1d99iqldnypit8uh6nqgh9goe2r0g7twd1uy2225wffkrl8yrhsn9iz44popl\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"x6uo1i243so1hnhtrvgrhlc4hp3bo6zkwwr02bxtxdz4vs54bx25lh26ry8qpbctfq27i3vxxqcjau4nuwy5yjhxxh92vskw7wt89kowq4jitppf8xpts7qaq7yks36hc59o7w\", \"6kj29ktqai32ihjnmvydyoxmq24\", \"4xyyhdbstyezipp0wi1tsxe4i01kzcwhbq5amfw6jna0ggoldre1hgp1iv04emabebp774qf56xoo6im39ujf0oj8qjbgyx74g645z7zkh2wtci2j290sguuxbzit08m7iwmmt4ig6h2b6x3p9vw4hsdpk281nfhdz70ou\", \"nkjcf4garf5zz96reikdjimsg8wgqflf765zci9sf516u6blbgh6vuzcqhk8wdn5mlv7ksa74vzk\", \"fxk3q49iveeagblstcfxaj2vg6pb182zksy0i1q2wv6xbao1yv6ua8c12bcy310i8pcbovxjpheqft94n2uy1pdejddyge2mnbviaolaqr2pe2x1kljtgulb1jh9hl9qdz622y3emi92nrb9ffhnm3xfcyukn5b691k2yfe\", \"bfsn4how6qc9glawat7xua73xvr6x5cayxttwib8u0nmphefc58l0xqx149k07hc9z83wms4fuvivmspwr1q4q1rolgd6rq4jeb9c4a\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-10-17T10:27:39.991868Z\",\n      \"upgradeTime\" : \"2022-09-02T10:51:39.991904Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 2100725530,\n    \"createTime\" : \"2022-07-21T09:32:39.991951Z\",\n    \"displayName\" : \"Lakenya Hauck\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Echo Mante\",\n    \"nodeCount\" : 1130112720,\n    \"updateTime\" : \"2022-09-24T09:24:39.992082Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"cvmmp7jkw\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"ku8cj9tpft0jcjlas2z6khy3fll0rl5ghamfrf8tiemyzqb2i2lrxajavsgbwdr66banig9lptbjzh0350str41glv4s3j58ob4ugo8abxvg2btzokumey79w9568adlakvn9m67g5u8\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-31T11:46:39.992153Z\",\n      \"upgradeTime\" : \"2022-06-27T09:21:39.992184Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 1378805874,\n    \"createTime\" : \"2022-05-21T10:32:39.992224Z\",\n    \"displayName\" : \"Dr. Eli Hackett\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Miss Jann Ritchie\",\n    \"nodeCount\" : 755138601,\n    \"updateTime\" : \"2022-08-09T10:27:39.99234Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"dqc9ep03mzyph22p9qsvh1qxgdc9uvrm4\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"pfgyxfjhlr9nnwy9qesvna1kzitc56bpunmekvq1s0ljuh6ccroa214stot4lrcwe61h4upann6safl4ewnv0po3h7lma60y8rtgkcfrpeq6k4li5mh1wixz2fsjfqdowqiamths21ij8xlgwz9twgkhswnjn\", \"0mynrffdkrm2fudks37hwz52r5cd5aobqy\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-03-24T09:18:39.992406Z\",\n      \"upgradeTime\" : \"2022-05-14T11:45:39.992437Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 168221461,\n    \"createTime\" : \"2023-03-06T09:38:39.992479Z\",\n    \"displayName\" : \"Millie McClure DDS\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Doretha Mayert\",\n    \"nodeCount\" : 1496345389,\n    \"updateTime\" : \"2022-03-15T11:45:39.992595Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"n4eylt6mc5i1uuabxc74ii9mhfx093hntdlhmi74j02939vjl2g8xsmroe1malz3dema9qt3bs94b7j9aie467ruggpak52rzylafg2r9dvic96kngb4759jmx9842228fpzhdl04y87t2w19o80d5vkqgjqm405sbojdz61h13fq3tj76hkpchezn9dv\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"fza1g1jx6aekigbu1ox6xo5j4ap2mf0vnkkq20y54pqy86n1bkzcdoexwbkidn4pknaqcn5pyik4wfcmq7k4rl4p9eepnoaylxqmgcrh7nk46dpwxgbh9rr675c6ma\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb022ece-fa79-45e1-9668-843e39ff757b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.992726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "ba95edf1-e4d4-4e3d-aa6e-50866a1384a4",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/7wmdn7bzn5yab8ieix94tfk2cnt25aooq77ofzvw53z62uoeggg8dek19bpxwxmo0qo9o6k5zq1wyqjfgc0jwtyemmqsv4jz3ss0dfcma1oh0/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lavelle McLaughlin\",\n  \"error\" : {\n    \"code\" : 56125836,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Eum esse ex. Soluta optio officiis neque facilis. Eius nesciunt nesciunt et et deleniti. Commodi sint corrupti illum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba95edf1-e4d4-4e3d-aa6e-50866a1384a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.991726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "aef554d9-aaba-4026-aff9-b07d863f3b2b",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/sk6tpmf6jazgjgfcfeqsczyq0ktxuho2pf7shaa/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"gph9os8pblvahof7ik8ww07x2b9uavk2tcbav9fqud1jfj18zzgr5d1mq1is3qlajnzrbs2lnhbak6qwwndjurtwmtp01qpbqaux6\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"FREE_INSTANCE_AVAILABILITY_UNSPECIFIED\",\n    \"displayName\" : \"Samira Mraz\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"zhmprmbj0x5djkd20q0azv86qkrcynqyh7meluxvshnrfqfos6au01kuntvt5nw9ld49k2rhftt8dlflhuhi5cer91ccf1j6oqkrvafa95qldoh32okqo1s5036cdixpgqfbfxfiaxa9y818n3vym7w4h62ljtr93p4lggh8uuqg9cnxdrr36jwomczvsbpvg7k\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"olbvqtggbwj9iv5ghwcvgl2acxl3stfhp1h2g82bpuyiguly7x7geu6977ydmlti90elv51nip1g3nbb6bzmu404v7ikflvgkqn04gcmncmrmvmf16e6i4p36exr1ypzurlyhcsms38yl27u26z3kh1dayvri3mj63ujgylokubtk0dsb8ip3hzc0p4u\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Maybelle Abshire MD\",\n    \"reconciling\" : false,\n    \"etag\" : \"aliquam\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"3mmyqxo7ietjia3dx7gvzqctru7brupzec4j4p2199ohkbm8ei4isu32qemvagsrd8f0l32rpug05y615nb65qqqoukezu5upg3q0e9mxaasixl0jgw67qexwi2o1\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"6ajxpfjdzbq2rn7s1sl9m\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"a76b2rivvpns27ippvzh4o338r4h5wdxencdjz39ikevo\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"1n7ej368by6ya5u8dkrms9nhl5fs0oyhlr1bg7zl616lo818t3xia4bqtij00o3vrn8rcbenopgn\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"6b1z8yfscaudgnm1yf731us9uln07z4vt\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"zne6vqbrorpl57khvf61pb5tntzwd3xda00x23s2yhqfnxevuvi0y6bknfa\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"GOOGLE_MANAGED\",\n    \"leaderOptions\" : [ \"cbx6agcm0\", \"aga9c17ih1lk6l2iu1erud5e2zb8kwfsw3a2j29mmzdgzi0biewb19icu6dxqu1lz3754m17lfsje7yo1evmcbzw1lhywkcszp\", \"gvhlem8x2lc1vtyxky1b1kg0p885zdnrn1qbpoiotz0ulnev097eonux8gut4wn81f0pgzbvfy1ptbb8ka64pva9jz44kx9xdgbs46yttqsay8b48xsh4uuc3dk0za0wylx4c64otrjy8if\", \"isehmzvira5xnyfboawl8j5yfuxwx52s0ypya01y9ygoqe7rxphcv94f64xmb6aukfd85g75av2fwqlzpcibcwm8y9maorm9fis5ebuaicwt6f8mnpwy4l4f8bhj1peevxdc7miutdpubd1u46munbryicd6u3y1ae1pkxvpc6x3dz59lhpyp32yui7ueu1ivbzhrr\", \"ece\", \"x6tionfea1er2504pvps2dpqf\", \"f7qa3wfpai7ysed8yjqctayqi7531xxhmw22nm9g076644ks1ozy0uf7elndzplkyudnaops8m4gkoqkj8pvbwu4nmbor6ysmpu6vf96he7h1aii62rc01x826hnp26eizzyf3b7c3h89q8coybopxjh5xhvgmzdzmmkz\" ],\n    \"baseConfig\" : \"33hywwzf2xa6n14ikvotr106gmaa0whx9e3m9z4z1q6yfvsevj2yvnvha4qmrzfq7uq9op9qykv7tgmt5geo29o7cf981cdsmqpql2spq7azlytp70huhx9l9wgntvrh3bgej5zdjcpzs3uobux1fh\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"FREE_INSTANCE_AVAILABILITY_UNSPECIFIED\",\n    \"displayName\" : \"Clemente Sauer\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"46s83a71w4rb7\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Juanita Trantow\",\n    \"reconciling\" : false,\n    \"etag\" : \"blanditiis\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"ruo7e2gdp25alo8k33mttmito6ux0hhvr6i2cva8b1gvreayoronzxhqwgmbecv5zs9bi0qd6248tp9ejnxcq66u62kf2l5bdb0aodq9tm2j9qmynjkqzoz8bxn\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"1dynv8grmel1ib8ge2h7qnpvzsznaljqbzqm5gd7npoybwggvdprh9i503u0p3nik9fl3ifmi1xopdulibwt4ser49qxo0kne71cifnh9exghejtnmengoeanz6wdlivfpws1\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"peaktfwzpzjx39edk1o14uh2235js53fd2o4xz65q53gxfzf5xfqg8g4b9szx10t7bn6z9r9nhar6asjy08jx6tchcn8e1b9odsfnoo04if8p4yrsidvsv7r2lnio\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"tii87t2jp614qqytraqjipc3wee0ke6dqhf60v1b4ijpcbmmkj4097gh0gim9t4bdai77fn5ae4mpirhmdmhhltv13burcco2l5agr8zztmxuqzqri2\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ey06zx0xlobey0mmsnpm8qziat260o2bezyh425dphzjajxqfurfikl0f251p4d19l0059y2vetsdmw7nlfwgutsocfxenhfuyfu8seq9mhq6grx7wuckqai4vx5jjz3etfr3d5rmyiwp3e4nsoxouxmcni7hxoi0\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"75c5fg21s43ebw19d7se38ttps1xxq8mvxjg6pcaqjhtmb\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"6gqonrjk0yc22ndy7wyaso7ymctgup6krw03eyb3oexnwk59jp8mttceilul672awrfels6t5jsubszs9g9po81ep4wyu276kanqh4xxz2thbokyldtztaxc771mgs9csaoepqz9ie4fxwzlr4\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"GOOGLE_MANAGED\",\n    \"leaderOptions\" : [ \"0lkvw8nbc1lhbvoklg5c0ont7m25jm186famwen6ininz9uxyuwldo1p4\", \"qit1j70cnzybaww5lvzvbgx2edetmpax22qcpvtpcn0in32eubsabtl2qrqtda8ltwjh5mchy8jc4nv2x8umk79rye1ml95u50oc7cavco318es5axzp9ah3scffeubc3vlg0p28zvcpsxkkon5v6qytl6kigti0m5tif\", \"3p9uvhy2d9sbkhow9s85qefzk4k5w4spchlsfogsmc8tztlcgvox8zy3a2agr69zzzd202qrnzm7j43t4u22tgvpna0ua99g5cublgfmchlatsd40tfkcq9hkzmfgu6xxukg0jbxbm2xhzr7ls30jpccz5smfk9kksv5cain32ltjit0m8tqdk4swdl3143as3q808du\", \"ox4oc90zbrr3skq11zxsxtelspe6sssllqmqs7nn51\" ],\n    \"baseConfig\" : \"m2p0fr4sorne05xxer4pnbt3xj85jtpn2rol64ldrqk9fvzid3y0zsvqhpcu75umpo0e63pe25jpkuxk94osbim7vhbuu3dkimsrq583gik5jcfzxtceh1i5iy60y3fxib9r8i21p7u68yxedb7u3xv\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"AVAILABLE\",\n    \"displayName\" : \"Donald Durgan DDS\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"dp9bgf7m42ctsop64qmvygeks6bg\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"efty0w8dt5bohncjtvfsh6gv937ub9hir1iwv43mih8zllsmqp8wpdtck4dj1v2psz3q48cccrxybpqajc250nqvp3qy1dvfzh\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"nzpkrnevfy1g530m72ml35qql5isp0adx7xfo3em\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"77ymvm7b3yw41iorh4htg9vhs775g103072j0pj553vj4ndu4nh2kp5j29zifm4d25zclfd5iuhbkkebzxw856c9wnzt01ane0l8r9pn7otjrzxkiqyw3qyg4pn46zvz11\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Doug Hodkiewicz\",\n    \"reconciling\" : true,\n    \"etag\" : \"suscipit\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"gctxbixbjg8dm7lgv20pcbixuwv0kzgm5zuoctktt\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"6y76tavym2gzqs7iqogvongqi6z23da5arfmhv7khdxmfzl1l0eq3i1z54oazvsfg7cqs2y4pk30ptnr3875japfvg5a9a9ivku4\", \"8awr8hw0qnozdomwmw46t91e2fh02cwch3j1kxvcnev0xashlyqbxi65e1j7y6xqqdc7s8fregt6yxayxtynrknpc29etpbrujmq5tpepisycz\", \"5u7cn8h5rqxx60vbat2k60mkk2t6f8vhaewguebc0bedf95lli79kscatxlcxgnr9y7fo1mqrutmktk1cadn030az4t1ntu\", \"oac4unl9ignu062qct5qoagdqxp9jz812uq\", \"4y71kxqycq9w5eupc5c24vjxgn317isumfj0akv3u1jt10406an6eenfr8tm9sxpd86brknri\", \"8zi2\", \"x6kvdvf0xpm28pcmh1xa7mud8de1zlff2rzhu8376cjr70wy4xedoddedfkcka5y3ccelhv\" ],\n    \"baseConfig\" : \"x60t05scotkjt0q74y7c23jc\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"UNSUPPORTED\",\n    \"displayName\" : \"Laurinda Ward\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"ofjrs3t0txs3gu9knjkx95e1sglkg9cvtpxrak81w7bqpmw8qhstpqg65oaho8re7ps08avogvyppscjjc1zsq9kqm9t069upzphcwbeufveb091ru03pcovetv0c4ak7\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Vincenzo Leuschke DVM\",\n    \"reconciling\" : true,\n    \"etag\" : \"eeeet\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"mr4sbtoj46bm7qi2jqp3orbpry9meuqell6e0p5zfcked6rl4nlx0u1jy8em9uj7mdtttwm88dikjvd29kl2m1et26b7bk32bvylqebnjugcpm8rco4uam0v25x8fnydmgo62m\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"p8hh219aocxaxx03dc2pblnenl0wll9h0ggcx5tr2r1sk2c61gts98w9fqkl7g84vdkxu\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"zg65q06f0zuwoc23b80cfqi6xt1mj89yyrojd6hglz1nkwsh5iaixgeboaxijfs3fhsgclaur5abejlud1wuaxqgm813jywhza5crldy2gmrlv6erkpjxh5wj4mejhujkhry8qr4ei1aa2dszwids9towlcjzgguhzj4hgijos2qqfwgmlj7pr9zg8l27o\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"mflh62cfvt4lm6l7g3t6aqnp4wfta\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ejzv8q3ickn50c6gsldg4473emr6xb7\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"z5l0ohhplo31nenexf0roni62qshsvetj2m627ytzfqljd9fkendye5muzxgn4okirt3ywwbkuykq1w1b2rr3ybv2pj92c91vbbv9cz4h9o7qleiriscrow50yjespzk6xzwm4n4doa0ga1j285rpzgsaowt66d4z324joc6nfnivfqkana5ugin6xyes527e8fac\", \"1d5lzbo6h2tbckp4qmtwevt1b3gcdwq48hyexv7nrdbt7ggs5czifnafn8xby1i\", \"609cmdtxa32a985ylvx7fibvp6w\", \"dq2xeli5212uyg57d5s30mnj22unc27thyajyd1us19sb9tm8l2\", \"qees801qaw1byp39nywjlz5jiaz5d16iud60jnihighgmquv8bj78quyq4pvxmtdl02dkz8qv8hb2l0cop43ok7mllhd6z79iv8wsgcexmpty94x6y8apgymo1usuwl7ivc5vxhn9u5a60yc2\", \"axq52rhr2ec668j6r1v0iajykm9xe2j1o1s8hphvmdseks8z2j5n03jdpyyo78vogdm4\", \"zexkwr4c7u1ef1syi66jz0pg4zemnalr9jbdgzt3hks5u55yead6ambylivqwjoh4nus7gsdla0a7wh3lz8havk\", \"i4n2vgdie2trmc9f\" ],\n    \"baseConfig\" : \"ol79dzk76bnozkwktx7wwrbr71jye7z11ale8bywybppd25hinbzi77r4vtiodmtico994nov8cdtikebdi3ze64spr7f4k09eoefeovn7pp88fnyxs7vw6d6mxuevpojd1pexwjnkdbhwqfd056ji0zdknxqmo10xnerugrvrzskzivduey6v\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Janey Swaniawski\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"jbo9srni0rxayqcer9gq3e993fh2vqos7egqt7wan8gfwjaotbkwgeuhdlxblxeis89qcliq4gdojaumx6wfcubglp91nhmn98st3kq85g998g1lzdjr8h4mxaitwdyimzovnkso04cp\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"0svhs5pjg4s7cgr5f0fafpn4zyfz9eb8jxs7lku467pz91aifscpqn98wlng2v5v89j0srxcz7tfj8bivwq4ozd96pw37jel8v5bj50n46c2sm62nyh091h3icfb023hyltkuj1dvdbc2um2b5crtszxe9jgsbhu2ek7j0\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"vsbc7ki8aechs705dvnjwbhvelb7kxy1e9afka43ry2zdc8g3rkw7sf96a0e4bm9f1ufnqnpj2tol0uzsocgjg4139geepr52zackc\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"bamhyrjp0euxqqttb2gnjugwq726tqod4dndfhvcj4m6jmlw141nfd4nj0noo8mh6r42e6l8z6p41zael27mfd90o0ec9coc17ovxf90p7xnr4jxfxhyyjpshpzfhf7cxajfcqfpep5wl5epx95wtihj63zyn4bvywxottuioa9hw7v\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"dxcl9cid2x39mmkyth3t5g8f8ugszw9rpgmjaqj82onmyq6290ezgwmd0bwsag059ry1c5bf7dd5wn03ztwo3ycl01qklu12igg1s3haetuv9w5hg63cten0rbw4wf4i0u5v51phvqjzneekw2yw23moi5npbv41393qnyszuu6dc8yzvxd76dii1nc\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Zella Spinka MD\",\n    \"reconciling\" : false,\n    \"etag\" : \"aaaab\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"osdm56nkool8xn2n2gt63b4ggmprxb1jxayfeskl269kjy55xlqz5x00eadag0sacr8sv0hgoket1c652g4pgwzzx4wuh7ktngd4ay3oebsfzsx8jbtlt212i0uxd6ux8cygx9x3f5jg5vpml8kub7xtlmjmjtpac7rnzeczo8v6fcafwe9cig842uzmrafkqp12odk\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"gul2b671cd4419dorpql7b2xg1qsd1hnvizsafb41sqkzfarm0cgoazb5aais0he\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"ssup1c05i2en99ezmwlcsfn653fzrqrxupokhq194teivbkjy7oyvoh76p23mnahny3bzbubbmdjxhbppuenhv2jkoai7vr5batv3cfi7uji5bv04gbrv7teqi31oefu7143hx16f3cehjp6lu4556e45zgvarjaer48o22vf8rc3n3y4i19\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"ui8puabupkcg1kp63w1phv0xf3afee6lk5b29qwsmcjg\", \"dt4k981naol922ainc7ijre1auivb0h62oice37ig8yti8dlgj1skwcidgkk73wyiod1cu151a5s23h6cu2ynesembx2toj5hj5dm6xxvvdezjkokhewcjkn5n99icezsrl2n166p27ndt002bnqv67z7bh9h0l1m8mxkt37fhyzrgzxp503zzoa6wdl8\", \"y6iuex6gj368keju316h4qsu35r8lbqs81229zn9coz0v4658ou\", \"mh7g0phfvluv4p53nbfd2lhnj6wk4405tx7\", \"em527mfexis688fbvhj7tpht7we031a6wuda4fhqfsgml6qr3ugozpdbagqxbbisfqb2onwqojgb6l4legp02e5ftmkeawulf40i7nx3mpw4jo4n\", \"3i56nqac0airnh780xh7extfbbsu5avxtck8xbwiwq1g974k9jwsnhpxrlmg86ygybnqm7zhpngkxdqznkvbm3izqff8hsgz7boaorwy\", \"mvwkdj0npdw8rfn2ht56ov9x3sxw015ztk317pyyxuk3802bg5giadbqgmt37vbi8e0bzlliougzfkkd7ydmw4knfta6eahxxhc5vixk35x1cv0lj2y4sut3fk616ar4hvkk\" ],\n    \"baseConfig\" : \"btoffziyq4o0xan0gc48zce3zylrr6n2ubs7zb3xjq773uksihojbyucqvems0t0l6xz0j2puesg9rxyngalof6s8rbobv2jsaxvdeky98i9qs6uum6lhkrfu87a3awxvkanoulwaw147f3ff3pizgp5epz0qyx6jycwtf9inue5ngs3m4ibt04xehl81yn4id\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aef554d9-aaba-4026-aff9-b07d863f3b2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.991551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "ddc1734d-85db-42c8-ae11-65235e0f5bac",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/h0qjocynxp62/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chadwick Balistreri\",\n    \"error\" : {\n      \"code\" : 333639432,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Et laudantium commodi. Fugit sed dicta dolorem qui numquam molestiae. Eius non est.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Emmy Predovic\",\n    \"error\" : {\n      \"code\" : 1935255596,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Laboriosam ut doloremque. Sit doloribus minus eveniet ea quo voluptates numquam. Voluptatem perferendis ex.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jayson Kiehn\",\n    \"error\" : {\n      \"code\" : 752787217,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quos illo autem repellat explicabo totam. Quia est veniam tempora ad eaque. A sapiente adipisci perferendis. Dolore et est.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shemeka Boehm\",\n    \"error\" : {\n      \"code\" : 1909740244,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Porro sequi quo. Commodi quia aut. Est inventore beatae magnam officiis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Luisa Harris\",\n    \"error\" : {\n      \"code\" : 236003462,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quis id accusamus vel sit illo. Blanditiis libero iure quaerat ea non. Fugiat aut et magni officiis. Excepturi provident vel. Voluptatem eum reiciendis dicta ut blanditiis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ione Towne\",\n    \"error\" : {\n      \"code\" : 1226385981,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Voluptatum qui odio rerum sed quis dolorum consectetur. Tempore non commodi doloribus rerum dolor voluptate. Sed non excepturi quo enim. Quaerat excepturi cum porro error numquam ipsa.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nelle Sauer\",\n    \"error\" : {\n      \"code\" : 563513684,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Aut labore sunt natus id quasi culpa. Itaque aut optio consectetur. Eos excepturi voluptatem natus sapiente necessitatibus sit. Beatae perspiciatis maxime ipsam reprehenderit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Seth Hickle\",\n    \"error\" : {\n      \"code\" : 1628219707,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Deleniti eaque sequi consectetur sint. Dolorum aut aliquid. Dolor qui sit numquam rerum autem. Quisquam quibusdam iste harum saepe dolor.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"4pl1pgapjrbovvqabcmwnday3mh8hdhdfgseyni8yod6qnglgvu1yobls240i88c7dvoszr1ubrxulwdwv41kxxe92uvnq9d7gtiejw94uatp1k8iioe1l6r9s7xw8mnclbkyo208v2vmdviul5ys7lwtujz6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddc1734d-85db-42c8-ae11-65235e0f5bac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.989731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "7cc7e2aa-fb7a-41b6-848e-ebb931aa1273",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/le5t1pxbd0l7v0w7vvljcutjax18rlk5g8bv1srylyln91xk00oaw9nbsptnt4m1curwy8fnfknj0xdr8qim6r9mmmasr9x10hlcfl0xtd3yyu8txlkn84o0al4flt9hwkcrh3whlzzulqqd10ih4lqq39d/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lavada Klocko DDS\",\n  \"error\" : {\n    \"code\" : 277110299,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Consequatur sunt eligendi. Autem tenetur unde laudantium fugit. Corporis voluptas eligendi minus quisquam ipsum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cc7e2aa-fb7a-41b6-848e-ebb931aa1273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.988901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "24a3d326-3226-497a-b3bb-a39d72172975",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/d8slk4sku3gwec4sr81i2lkk6cbn84h2ucf2xz0v7yl6s2e9ucopo7rr0ix787uty8f9k826suko2fyc4eyxfte4rir7dw3850dij8bqvvq8h8yw0p1ob41ksled5eyzuslh1n63fyfsrc1iwbb4kv1/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Pat Stanton\",\n  \"error\" : {\n    \"code\" : 1126889527,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Incidunt ut perferendis sit. Deleniti quo provident est est. Omnis sunt omnis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24a3d326-3226-497a-b3bb-a39d72172975",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.98874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "da4f13da-7c3b-4192-b819-b2ac539a75f8",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/dsg8d75nd7ch0cilrboyg284idtsalfz9a3ux2pcukhltyvo7kerpnwulvgyl8rhbv884tjxvk0a7vxudp4/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Necole D'Amore\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 309107874,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Consequuntur dolorem modi maiores aut cumque beatae eius. Accusantium est itaque vel. Eos qui facere ab pariatur. Impedit eum aut et quia deserunt amet reprehenderit. Non aut at earum aut autem.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"2yc2snuv2d8o5gw27jh1uvif3apirugmi83x81rm9vz1tfl8tsb8p9107vggdch674sd8qryj1f89arxuxkvuqp9zdbi94tk5q7uzyc1itqdafpo7ltss1j2vdqk49bm1jm9xgwlst3twl16a2l5k8qect66909d9l0lgh0rgjfzf6hztfg\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1389445541,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Eum beatae in placeat deleniti. Ratione at voluptatem id praesentium enim. Velit dolorem qui et illo voluptas. Eum laborum ut dolorem provident. Sint sed natus tenetur voluptatem et et qui.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"fyv33b0mfurkrt38q0hluc5iajdd5ofrfm65aqdzz6wtfw87uvtvv2ufl\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1013190716,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Nihil optio maiores cum nesciunt necessitatibus rerum. Dolores ut ut vel beatae. Odit repellat et eum. Animi reiciendis eos et. Odit et quos ad aut perferendis omnis quod.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"qzitwsapqbntmbuc0ltjsec1pvvtr2kty3nc0eubs9zllzvkjft1oimbkn49nktqtjzxktyv9czw5jhcymqa7vei88rlgl1\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1357979760,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui veritatis porro a qui. Ut nihil delectus quibusdam unde modi sit. Sunt consequatur dolore. Reiciendis ut dolor aspernatur laboriosam praesentium sunt delectus. Natus eum expedita.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"2lvc5wcfx2qi4etp4xo5fk72uallir3gpxkugmkqkncvzw3pp93wfug8uy25inndziubusyva3sgla1tltmlg9dtr63tg1fkjoe0fanyy53mj9p49vbzxrl35jcife0vpkvpmoc76hot0dom6tszfmppo4qfcaa4\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1804626787,\n        \"details\" : [ { } ],\n        \"message\" : \"Fugiat autem rerum. Commodi repellat neque sit sit. Voluptates dolor aliquid. Nobis excepturi quisquam sint.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"qodvppz99xsrh3qigmh4txpxtv93u9rp8hayqy3xkeduhjsgo1\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 912945797,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut occaecati quibusdam et. Culpa ad tenetur aut. Rem aut voluptas autem aliquam provident.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"06rkcgxp7fp1xh5yju8vs8x0ke59vnj\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1991229094,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Possimus dolorum et mollitia. Molestiae eos et hic incidunt modi. Perspiciatis optio dicta ratione et. Optio nesciunt ullam.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"9yrczx7d4kyrv88twg84v3zi1u7homi57e4c1yaqiw4ljkvogfx95g0zq0xugwm68x6b308h1og2cpdd1vm79cwspvg9wunsajl5nr01ug2c0hixp0m1kvp5c87qo49qp4vmz4ie43cqt3q775tluat0bb3prbs53n5mc9yhke3bj\"\n    } ],\n    \"versionRetentionPeriod\" : \"dib7bhuo3boc75tb6qvzsyysv0sluhylcbumqfp23nnxh9jqcm5czeikrpq645ly334q2i5dcbqrtbqkly5fp8hdi73qrh5kng7hbhogahmma6yah56walaml22d5t7nj459t4gl\",\n    \"createTime\" : \"2022-05-23T12:04:39.986376Z\",\n    \"earliestVersionTime\" : \"2022-08-21T11:36:39.986405Z\",\n    \"defaultLeader\" : \"0iwiyt822dv6q60umaxugszaqpsynmzghmse5ez8233iz4s735i2a7tdeem19dktmxbfwpamanwlucyktq8p33a7o9qcywbcgomm8ulfkqwey4ojun4dren26uw17lpodqvnw5vxbqqu0mnshzh8oav43etqvnu26skddmp8bnf1k8y59f7id1pffg4f3tx7b\",\n    \"name\" : \"Del Nitzsche\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"9mgoywo7fi8yp9xg6ocxzc5qxdlbnnz3ggq2fl7zzwt9ewot6xxtkw4n1bc5uio9b9lrcm7uwrckk5fthoi3y799s8s5j1zxqekakjlgr753e3nqapyp1cf8\",\n        \"createTime\" : \"2022-10-12T11:14:39.98653Z\",\n        \"sourceDatabase\" : \"k56mbr8s1oag11g36l45ao8qfspxr3j5nmaeov4ohfd3ttzgqmgrk26as5yltddggozkw5epkm7uyltua\",\n        \"versionTime\" : \"2023-02-06T10:54:39.986578Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Zane Koepp\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1140039486,\n        \"details\" : [ { } ],\n        \"message\" : \"Aut doloremque dignissimos veritatis aut eaque. Asperiores totam cupiditate quae voluptatum quod. Dolorum dignissimos consequatur sapiente voluptatem sed repellendus.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"mgqc8efm35594ektv6sjn2ytarni3bhx5ng9b4x48oza1ey4v1pqd2b5hubk4fyxdgpyez0vya171\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2043829818,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Et et nesciunt. Omnis et amet sint asperiores. Illum est inventore et. Dignissimos quia voluptatem necessitatibus sint. Nam ex et expedita.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"dgxdwg02dkilke9a36v93xzygjzs8tddenasrszguoox4fc2v4ma8v1z0tj4om0rl6v83drh7sjoo6w26nz2pdzm9ou2ogk76r26ygcmp8gkibrv9fzteip2zae3yisqtb1sywy\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1682566637,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Id possimus nemo quia. Odit iste dolore voluptates officia quo. Aspernatur magnam ratione. Exercitationem dolore in neque asperiores libero.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ws2d0dboxfvhvam58zpooonzkjwyzva08t4kbrwevvhvdjr9iwsb853qj2028aesofpwyp5i26xxd18eqt9g41h5fmzlt5exp3ngq3idig1pfd7xwhowiz6h9j1virdsmlgow2njo51nwiflleotrr990w24a8f54d1cehlnwov\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1571529898,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Vitae placeat repellat et eveniet in voluptatibus non. Rerum similique pariatur dolorum eius placeat et non. Porro consequatur tempora et.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"0zg3f5e1fh4440osiwx34bineusa76w3wzo661g0i81k45qvmarfncf8gzp01ovv1gwzxfpes9742g3hxoubswolmlhira4xs6gfcbf8ssxvs2zcsk7suxhblvnzvlptkivlvpokz2p6v37im4thv53i49st6sr75fyimovnfqo4fq\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1764367275,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Fugiat recusandae dignissimos vitae. Nostrum aut est. Delectus assumenda saepe magnam quo sunt. Sapiente nobis architecto numquam occaecati voluptate.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"aixqnjqzvflbl8d9q65lq016ojkoqz6wtkv6l6dx14frjzuj09l0zx1knb8nqrontqyc758h3qdxarxt96uvrjd0rk53ae1g4q1tqvpc3423nfiiur6qif7k5nn81oq716p89demfemwqrp00mw\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2001104115,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Fuga sit incidunt sit ad modi rerum. Necessitatibus fugiat illum repellat repudiandae voluptatem. Repellendus aperiam soluta ratione et fugit. Suscipit velit dolores enim. Voluptatibus minus porro bla\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"sb6i86erygcenymgwma\"\n    } ],\n    \"versionRetentionPeriod\" : \"kshuf6cf0brbywv4xo0alisowzzrxsen2x3ktey6fewwq7pf11cq26m4bbnamojrsv921fbaz8ti90n07xeo3daq27b88su6b6ch4iqv5s01ocofbku458vfj425t0f69mz8y6ptsac6iimr5etvjn8akkpintmp8n2\",\n    \"createTime\" : \"2023-02-02T11:06:39.987123Z\",\n    \"earliestVersionTime\" : \"2022-07-05T10:29:39.98715Z\",\n    \"defaultLeader\" : \"wbmp0x1p6fepl2yr9ox2zypkhkkl2i019za8mo883qhbh9rslu9tm7zbtvm2n19s9md9qgeky1zt85d6db55obuhlq61qvcqmrss04w5pmaauv3z5het7x7eaz0d5x2h9bxidtdrezp68milkfdpiuu2414vujz\",\n    \"name\" : \"Jona Kemmer\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"tb9f5gn5lz4g89c166u52g1326fof3fsc79maf8e2fg1\",\n        \"createTime\" : \"2022-11-18T09:13:39.987253Z\",\n        \"sourceDatabase\" : \"g1idejuauzj1e93xhyug6ron85lbbct51a\",\n        \"versionTime\" : \"2022-05-15T11:10:39.987296Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Toby Lesch\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 19475799,\n        \"details\" : [ { } ],\n        \"message\" : \"Sit maiores recusandae fugit dicta quia laboriosam temporibus. Voluptas numquam repellat ut optio praesentium nostrum. Et perferendis sint dolores qui nobis eaque aliquid. Velit necessitatibus esse it\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"adbypa4pum0q2tl8udos\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1389980405,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut enim architecto vitae. Dolor enim placeat vel labore debitis blanditiis. Sed eveniet eaque. Nam harum error officiis ut natus.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"n6flzb2u7p7ugdo6hwco56c7oqy1adsuq666ya6awtsjodpl9k6gzqaynxy5r4paweb34cjdmbcz29ec72ynjasyheaku1uxmq5cf4e71xtf90lbbyewmclvuzy7ps7h4v7efzugwdd95n2t0opcjy691zi1vclrmzrout081az1iqq8rgb2ec67ni2z1e0voso\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1953666197,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Et aut necessitatibus unde ea. Praesentium autem numquam. Quia accusantium cum neque et temporibus.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"bs7xei2c7g8z4hkpuj5gkhd4mvscnpsiwy2dk47h4pfqgca80btzqp3oqc09ktkvxktljbb4rz1pju9ne0a8gtevecux9qa98lxcxlipta3akgvynr7ouxiw6vl4ztuk4vcks5o5x94ckwufnf1tjanwz8id6wsd\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1920036566,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Eveniet eveniet saepe illum corporis mollitia tempore. Magnam consequatur est error. Dolorem eligendi quidem ut sint quia eveniet.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"dbpw1a2nvasaqv2233iczz5z9py5oh38s6rwh49bkx0s6hx1476b9tk0orn9qx6a0wi36blhj7jj041z83fwamptr6ukw506pnov8bsqvoov05btyyz0q9knq65erraf5s5njj4iogp063aqfyc\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 754809285,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quam sequi harum nostrum expedita. Modi cum adipisci. Tenetur voluptas atque vel.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"qep0nbrpu9knrxpfybnrwn0xyfd3dclo5zqxvis2bybx384dy1piy80jgcltba06zpiy0c9f8w2g1kgy8zb2qiy191nd0oh5pbwyci9nt9p3b8n9jbebkppvon4747wtfiupp0c07woq2kveg3il4tydaw9skdlmwvegl8nbu\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1380663582,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quis itaque alias architecto magnam omnis. Similique vitae laboriosam. Deserunt sint sed voluptatem magni. Laborum recusandae unde fuga nobis.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"357i44zii8f29jhyvvgoioemgf6kgc0eirrvlyy5mj4n6wdld1da6hf1f\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1124787181,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut rerum itaque aut et veniam. Modi vel dolore quia non et molestiae rerum. Earum nobis pariatur nulla at nihil eum eum. Soluta totam nam nihil minus inventore.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"68r4w1d5kl4er0prcfzwldpal2or9e619b2jsjcvlwq4y9s4ji1yvl7ru51ya41ih40wdi9rnzmle9j30my07gp36t2j3ikohwysrmpc36d6l2lpwzrrfabqior9gc52527gt3y34kuzttt0es03hvdh1jd6te25eo4qg9ee2myof7tr67o477r\"\n    } ],\n    \"versionRetentionPeriod\" : \"4ab11jjd9ue0mxfxobpuohuojsvl48alo77atd1zddhremw4boqvkuzwzgnf91bk3oiwixfl3032dlzg42gcuqn\",\n    \"createTime\" : \"2022-04-19T08:41:39.987896Z\",\n    \"earliestVersionTime\" : \"2022-06-29T09:56:39.987923Z\",\n    \"defaultLeader\" : \"og5c42hgszg99ob0p7p0p9g4a64qaka1nh8l7dn1vtr0afntnmb54tyfh0qcrug5l3yf6mje3sxyclie6v5qz5pc6083qmmaushk3ytkq79zaftip6nzzdcgs4g08v6plufrgpiz0slkk06bp79dtef3zug1nlfljv2wrhd76trjyks5emmyn8joc79ss\",\n    \"name\" : \"Yuko Daugherty\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"82obfdl6kewvj8wdnadek84f752u6i5x1945ra1kvdp5orshzu2082df30itiivkd384laz3mq5h75agsxcx4ghi1w73uj7jvd2swge\",\n        \"createTime\" : \"2023-02-07T08:58:39.988026Z\",\n        \"sourceDatabase\" : \"8g19t8vfrezn3dooiyaou3c63s6rci6ghlbcaq2r5m3z8jge3t9d0v2ky\",\n        \"versionTime\" : \"2022-12-27T09:42:39.988069Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Eric Schiller\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 661489495,\n        \"details\" : [ { } ],\n        \"message\" : \"Quis delectus eligendi quae ut. Unde suscipit necessitatibus. Aut enim nihil dolorem corporis ex repellendus porro.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"r7iexstmblg6rc0lgfks4sigs1djh7tik8m9parntyy4esak4wy3t4ygmqqriptqxrrrd8ih1v3yaf3yqaguhqzyg8ns6rz3mp686os5mwq00hb\"\n    } ],\n    \"versionRetentionPeriod\" : \"j5fr20h5ic2nfek26d4nb\",\n    \"createTime\" : \"2023-02-07T12:12:39.988238Z\",\n    \"earliestVersionTime\" : \"2022-10-22T09:57:39.988264Z\",\n    \"defaultLeader\" : \"gyk0ng9a0zpaln26jgbh30mnzn7mzksnwm6ijbngfwbzesm1jgbnjhj9xykjexymprpc80pvl5mtxmutsoqyykidcu5yio24ln4u60tl32u7y7vmk5zbnfl3domgtd0dkqgnsr1rcx0xh53ox2ml0iu7f6rc13clkewjw10idgw4qi0nzbphbj0hbqz78syooxqf41yk\",\n    \"name\" : \"Armando Volkman\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"1otm0h1fwep8ig0n04eyz26erclgvuk40wed8v4xj5jvfvsrl1n3kjh9u77sp1kjio8kz0cacmuow1anl47yz130p5tf7r9sjo7gwcq6drcm7qiuea6sxc15iygt0xisxh3ogmlxgxoq3ji6xa0gprff2rqj4egx2d819cuiflivcsvyyklyzfsexats8cv8odjaxvs\",\n        \"createTime\" : \"2022-12-29T11:28:39.988369Z\",\n        \"sourceDatabase\" : \"4uvzyuknvqn1zfb5uwirpa0y33thh1e8vo4xvl0o1f6mo5xubkxbhvsij9jrp8sbo05w2mw68vsm15tt4qe2wsndwpt9jfbx638wb8bfb3vjcjrsxkiokhtdpmy7tuliyi3l6gibcggrykjb1759f0br32btkuc1fr3ff9zfvompzcmjlzvlr3neh3p4cq07arnf\",\n        \"versionTime\" : \"2022-12-26T09:18:39.988412Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  } ],\n  \"nextPageToken\" : \"hvrb8otnr8grr8zrnpkhap0h7n5qyf78r4w0vu11rwphi7k95hmq9aox4pce4jou1wois7h054vgmxzoov6m3bl7w9drur0q7wrmkd0zwtsvvtiw2dyfkf04eb1kghfnxrecx08ugqjwexm59a0b7z5a0sqa57de7lozrubhgghg7zb3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da4f13da-7c3b-4192-b819-b2ac539a75f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.988567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "071487db-9278-4daa-b32a-5b2671c3b4bf",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/0o8gx2rpwr3ojcn2nfxk645tausppdrhpamu6a50y1rs0qywyfzfelzglrfzo9c27l24zrk0ycuaydjaghqwpyfdo22se69r2kk90x74pl3kdbx2migfd6mx8yfg3mur8o0mlznc7kguqr1v/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"9qkd0imnl80f0pmjxtvor1y4vpc24wx4q0tydevgkru1zhkov1t0h1g17g5rehb1ntdnt7c84m37yss6ki7qw5hehf7ia7thozuujzi4dbwx0m5hufp1n2peqrv43abb1fux0ydwrzr7m7sonrgs\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Alex Littel\"\n  }, {\n    \"name\" : \"Mr. Alexander Kling\"\n  }, {\n    \"name\" : \"Emeline Dibbert Jr.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "071487db-9278-4daa-b32a-5b2671c3b4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "e96ae42b-519e-438e-9e14-868b10d3d520",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/wpsh2v14opb40j/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Otto Kessler\",\n    \"error\" : {\n      \"code\" : 1305653112,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Placeat non tempora voluptas quos quia odit soluta. Dolorum molestias et pariatur optio tempora magnam. Quis id voluptas ducimus similique commodi aut explicabo. Est nesciunt odit laudantium cumque ve\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jasmin Borer DDS\",\n    \"error\" : {\n      \"code\" : 1914444942,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ratione vitae aut. Nesciunt qui molestiae velit dignissimos. Eos facere aut ut eaque voluptatibus. Neque unde facere saepe. Atque libero magnam illo velit doloremque rem repellat.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Salvatore Goyette\",\n    \"error\" : {\n      \"code\" : 1814919228,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptas eveniet fugiat voluptatibus. Dolorem dolor perspiciatis. Eaque quisquam omnis quam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chadwick Crist PhD\",\n    \"error\" : {\n      \"code\" : 1453211002,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Veniam voluptates ipsa. Iure fugit odit quae laborum ea necessitatibus. Tempore sunt deserunt molestias. Aut voluptatibus pariatur laudantium error est.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Donny Bauch\",\n    \"error\" : {\n      \"code\" : 1689614231,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Laudantium natus alias nostrum sed. Asperiores qui aut repellat. Consequuntur et vero beatae aut aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Krystina Lind\",\n    \"error\" : {\n      \"code\" : 384829622,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Sunt molestiae nulla quia autem tempora. Saepe provident facilis aut nulla accusamus quidem. Ut itaque unde esse ipsum maxime aspernatur cupiditate.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jamee Braun\",\n    \"error\" : {\n      \"code\" : 234124913,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Officiis illo deleniti voluptates et. Non iusto adipisci. Laborum quaerat quas ea inventore qui nostrum aut.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"bhlu2bxu68213k5nkqwtld8bu5gr3i632axtrzts7zzb8spe5ce1rx7hw7z6fag3dzvmvsx720p4oi37kwu8a8i3tvn2he7spso4u2vhe6mgpx7oejuniabxtb6ylmm1t2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e96ae42b-519e-438e-9e14-868b10d3d520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.985518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "9d01ffeb-5bda-498d-9886-59b29f014097",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/u9j9zl8p28gw19ozudettf1l08y767k21u9vhpaje/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mel Altenwerth\",\n  \"error\" : {\n    \"code\" : 1015408044,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Quas voluptates ipsum. Magnam dolor alias in natus. Dignissimos pariatur nesciunt nihil autem est. Consequatur eos eius omnis deserunt cupiditate soluta.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d01ffeb-5bda-498d-9886-59b29f014097",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "89b86fce-6e3a-4bab-8476-813061fbb46f",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/te7849g56c9jwu3chtxy0r/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Venice Green\",\n  \"error\" : {\n    \"code\" : 218338524,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Dignissimos sunt laborum consequatur. Velit et molestiae aut aut. Nulla nulla nobis error rerum voluptatem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89b86fce-6e3a-4bab-8476-813061fbb46f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "5c796f88-fe51-4c1c-a04a-06091dca420f",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/vpu3qef00244x8y0b2ml3vkg48m7q4ko9c5nm1ksv3xv3qf4yourx3m0f7k5hfl88n8ggu89o3gktf4xcyxw9m0jyttep7roekcad0qilggy2rwhsznzdxo0ontio3zw5mgbl40dwoqdegheb2notvlxdhldg81csptdo5to0ygqad1x3plnzhisdnw0t5pbbw/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"oyzedilviv12q892zt2o1jge70pyb4l7r4zi3w7m7l8ac4ttbchgp3vgtwsfsr4l0esw13w5c3oaep9odthuex7cj6im742xlrqxu2\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 128983757,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptatem fuga voluptas. Amet rerum voluptatem et. Hic laboriosam quam dicta cum laboriosam non. Nisi alias ipsa voluptas est. Nesciunt exercitationem eligendi perferendis voluptates vel.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ioibmg94iqvvk0x445e1ipeout150g4k7wlau4j6dyqd\"\n    },\n    \"database\" : \"0l2m2i85anufqdc5qswef2uk68dhd94ds2ihijfwdirqc6k900v4abkshb9v02yzs7q7581tqnaki107cm2v32o54lkrq3es5fgg3122w7q7s\",\n    \"expireTime\" : \"2022-10-06T10:08:39.983816Z\",\n    \"referencingBackups\" : [ \"fkbtklmnlacxej6k7bdhj8gmmidrrfqdr7hq807b61embtguwns1z5cewiimk0991ije5bof9eeu3nw673uizn3xmoai3rf6zqa5sxl6uwfvdoeldo6cu5ovsfl0905way5elqoh2fe3p6thvsd2hxhl1ww\" ],\n    \"createTime\" : \"2022-04-04T11:02:39.983855Z\",\n    \"referencingDatabases\" : [ \"6zhtdaocugzgurazze3cfio4704oqhdz6fcacgkjuwkargnisyxoad49h32n26eblw7qed8efj3qwihzequ7maaot7n3h639zjz3dr65oxbiet2h\", \"e9z7uzj0j1i6nmtpk30abtjfq1flqa81wjgve6nvrxjlnj08w7gchqoatfuwdcj2grnjwblep1tu2zgowc2onzrism081nn\" ],\n    \"versionTime\" : \"2022-10-13T09:04:39.983898Z\",\n    \"name\" : \"Jenni Cartwright V\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-08-05T12:15:39.983984Z\",\n    \"sizeBytes\" : \"rdldecnf7m75f852nbs01qzda5hmwe37zaka8o6n5501pkgf9qqq0yi2wnfruy9lw36ptpp5laww72lvizs3k9fai\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1136791560,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Voluptatem voluptas eligendi minus possimus. Labore aliquid qui quod. Eos quas impedit assumenda alias. Eveniet sequi mollitia aut maxime.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"9ux0rmzpkehf0il6uc9cb0kymcyxf\"\n    },\n    \"database\" : \"pzlwdx96e7r69st02vfz6h97oz32h9f5rdfcorcmhvaoidet7aifer0dj7r4lz390hw9w7hky1if9hl99cmagyfj5swq9m29g7jqedz28uitvgubc2bvlkagnajwtuneue644k6jp5mobm6zrw4reyjgw0kdyjzqfvs\",\n    \"expireTime\" : \"2023-01-06T10:16:39.984113Z\",\n    \"referencingBackups\" : [ \"0y7krn3kxyelu20nmzdxc0uqaftoous2clwdw9nmo8o2rebv9kk3g32mjt5dt9tqa1qko5x5lmtjh5mog3fct\", \"c08l23jav6nqjurnb16wqydcl30kvrrw170eyfbw7i6b5ay982e35ijt4lh00rqpnrt4yovjmzeqijyhlp0tjwdlsypj5qjmgaen2ktx4cfns58siddanxwspm9qthhc6cz37euzl79yzh3auvo\", \"9b1tw0b6iktaar69wgg1sxijklplr01rzifq625gx36teski07go9wl100enpmem2nmrr6y62j4u23qq36rkrl2pznqgs06n551kjv2i8d38li43jc0r1z3o16\", \"pkm228fr8kkh0gabfg70hjmr4bi669bfksla759rvkic6qt7uoqqg1swadvfw8ws82djzwj\", \"pytc7f2qjkqppcolt1b921iqzf96omf828hsi1iek3vvxu34xlsjzn6mi96zwh3y5c\", \"uiyrr9iewslkqmm9ke21jrih4pb96yugqsf6lkxyp8xbc692yr4jvk0iiwq145qe8ejpnsb45kqd0r8m134d0ryuwf9liugg0nou6j40b1c1hyalzkmqhl6qgort3zgka91kp0zt5v72nd8iuebacwyp0gt9vbl3u\", \"cpp0wmoeann8b15jk99n7ut4wzi9vi1ub013pl2mrhi\" ],\n    \"createTime\" : \"2022-05-19T09:00:39.984179Z\",\n    \"referencingDatabases\" : [ \"dnacyqno7t1ad1cdcfdv27hzow04wao0y24i6fudsix1k3ekxbd5hv1m6rgxs4gtbzoaoibft3zh6dtc8nid8n33f66sx2w9ljyidoob72d4omm84z2iszn5z285oyb75vaxlklkq8uj\", \"12d3woaewoqjsxaem06klfsq1wkeynlkmog8tjr5bqhttxp649kzn3wnzmc\", \"bwsya6gmq5ejc1fnvjv8i3gf2o783263znhlk67vzg9thk2j377rmddacb10b2ojbwkk4fweebvjp2l1xjme2yrxtcg6jaow04s9cdfy2a8yuh6ah4wbgig8\" ],\n    \"versionTime\" : \"2022-06-04T10:43:39.984225Z\",\n    \"name\" : \"Ricardo Anderson\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-09-11T09:31:39.984303Z\",\n    \"sizeBytes\" : \"5oxh0yh82ko6l8x798k9maauwa76gm5fkpd9jpvrsdwsfnonubq81gfmcnu6q732fg4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c796f88-fe51-4c1c-a04a-06091dca420f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.984398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "0511dabe-0dd1-44cd-98b2-467b8c8c0dc9",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/27rkhhmmrk7nqfltcmp0lnlbblmlzs5pob8raswb5/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Antonio VonRueden\",\n    \"error\" : {\n      \"code\" : 1849679995,\n      \"details\" : [ { } ],\n      \"message\" : \"Necessitatibus doloremque deleniti nulla est. Fugit esse assumenda non dicta. Ea culpa eos ut enim dolorem placeat dolor.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dino Leannon\",\n    \"error\" : {\n      \"code\" : 63325308,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Adipisci omnis voluptatem perspiciatis explicabo. Esse doloremque praesentium. Commodi voluptate harum est non est sint.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Eugena Hintz\",\n    \"error\" : {\n      \"code\" : 238135421,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Accusamus libero et id. Perspiciatis est rerum eaque labore. Consequatur laborum repudiandae odit quo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Seymour Labadie\",\n    \"error\" : {\n      \"code\" : 1592806204,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Esse odio voluptatem consequuntur id nostrum voluptates doloremque. Veritatis sed commodi qui quibusdam omnis blanditiis natus. Et reprehenderit praesentium quo. Esse beatae perferendis rerum dignissi\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"swf0olyh3440uny00djgq1dsqrwvo8nja9oi6l6a2gxkvbru7dzaitrb8zuaml406i2wlunofhq0y6llpkq94ks422mp6u8nzgryvcoy3f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0511dabe-0dd1-44cd-98b2-467b8c8c0dc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "6748faa6-94ee-4bdf-84e8-f6d424cca570",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/ucv1juy97j5opzsjfl0fqnhnpfr6j76arjdb1dziobheq53k0q6r4liahdyfymli2jwrknetnw7qhl2se9ymkhotpizvijpar6mfzi8hu224m112veswbg7kjpcsckbrydx8z",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"cw1y\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"4gq84clvckvj6aqhl47gu9kvkj5xp78681arym6jk950i5ot8d3u2t66t9iep8tyeznx0uq6v41tf2x1xdksj9kmj31o8rz4srn1yjvcw9ta9rdymd036567h1j0dmu4sgas37bh4d9awawqaox3n9wt3731mzqeealpxwdlyfypfcffqenzbsbgmie3yg0at\", \"metdjpjnhyan5b290djnf5yidvs4b77anu4wutcipl6kzqfii93tr23lv3j70zx4ao\", \"6y0ffv8d8omj1l1d5ph5raeuvbf4v6jbbfon6g4top5fy7wt6lj8s2kh8azn5ls736ktfpvbor66q08d3rni5u5kowmbg4n8i12kk05pwbdw1v1sx8z055jkpn68vsmn5d564hvok8vld0y34n2nc3qdc5myu7jjl1xi8yty8o29tvsusqp9zd3663\", \"fzmm1ykfl1jiqmhnb6r5pn36diqxeen2t778bqu99a34achr1o14ezrh85xkk4kqdwv9gft6\", \"hr65k88kv6vn6s51qgejbrct0abo3n77w1dfqzkwbxqpi8ud3g8ki5nmk3jmf00rwjf9oy06k10tfmun3ue162euj7pelkx5pd7tcuinj6v536pllelycu03mn0i8ch8x8i3b2l53pw\", \"2twd1zo6ncea8nog2mtqur1lcx8cviifanlncg70iraksod3miegzgqknvl1tpuuzd7qiznmj5tls2x7tqp63l6tarf6\", \"qnxnye166k82po5nfw0yuz2j9aphi8ifert02zkgxjdklv6osbmn4eaw7g9lqru0sqpnbntcbp9meypspvswy00di42iustehki0pyyr0ggkim1hmhm2ljhb6a90hs8a31ab8tshkmbk6ngtz3p0oj2asqp8grbc4mh5f4sic5d0\", \"bpp6tpo26ccuy61y2b21jo51y80prnt3czfpaworbmfib777wqnyasullxbembdfd4wxky3kt8nppnyp5u2if0xwbh0opgkle0tnmp75verq1iq1v4uz7o91z70evu1vr013sa2frxnr2nv9ozyfuro0v8qh0t2fobwo\" ],\n        \"dataSourceSeparatorToken\" : \"5ow0yj3fijx1oiiul2tq49i98w8y1\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"n8ym4z5jb1z05iuydkbyy8e44qjaga7ab37rhfvyfw8gykklff3zuisduatbjk0nywmid\",\n        \"metrics\" : [ { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"p2x408abtgcd1rcr8pfqkh3l66bc8pl7vd7knpns6ug90vhxd6h7gxz3ry14z59erc9n5yortxkz3xrmkxnbssvosa91\", \"gmnf8fagb1og491xwikhmofcc8o728r1a57ndno418ne4tm0tu6hqxp29ves1f9h6wdlqqsxms5zkdd1as4l8vwicx9ffszc\", \"dq7bufr6arkg5sqdbmb2qwkrkvfyyaba3l398n84kfaojc7u7w9cory4jl2qipoyiroklh9w06za13dun62ynqas9dh786jjfun9riu5t3urxeo1xo7nrxxogilt6taoowb309exy84m95427ugnat1wqfx6lk0nfzw6k7z6kk8b\", \"50g94w2y4s8ty0f894pvp9iwfsb7lu3a043j0qmon8mxy0jxt7xsq4k5eaoj8v76zyhwbjvu3d49qk4601py0jhw89zhhm69qhlvktcncycxl\", \"s6e3t9pqcav81x7huf1\", \"l43dppvvo4jjlup6kjevurezd8d18pakaub8t3qw1z336tne0y1h7u710yg14b5jfgna7qs67kxwn3g3vo65o2q7r02hhym94cbd5j59e8tbz8yzceufqleggdgv155axsngp5kw3hqbmbzs6alc9bqr8v9dah2oa\" ]\n      },\n      \"startTime\" : \"2022-10-02T09:17:39.982306Z\",\n      \"endTime\" : \"2022-12-01T11:23:39.982334Z\"\n    },\n    \"name\" : \"Herman Hermann\",\n    \"details\" : { },\n    \"startTime\" : \"2022-05-09T10:29:39.982407Z\",\n    \"endTime\" : \"2022-11-02T12:08:39.982431Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"agdejuqg331mzomjlqtuo\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"j4kknd63r85n0vkdb9bfejibctdvezid03o5dgkpjsclofk96kcgmdb2us6bp5ujtg0ylfvip7gjiolnb3grdq7iso2hne1nrygwdqxqt1872nf6empksqarq\", \"22g0ms3ca44igc9iez98cjl8osr91lcnj61qeub01r74lkppf7y1qqag85kfhdlc1nzlv72gusi6glk1fvjew2vxg215gc7k9pshhrjv5yzduza6algjkg6t37\", \"ap5g4k\", \"nuekxrdl4rivy1jtrjqg999husza4ht1pc6o2t5hqumqz9ga9iiqacjy3w5sdy7780399j8fmtfbhpt12wpzt1c2kpjdd909sui49j3jt63r8o7ji7ckm5jrhfq3z5ocqyew09itqyisb6q8huiwper7ujxicvs3gt7pbm\", \"nqn\", \"ha2m8t0ge4g7outli4h4hgeyjmhbwap9nasiy7vybog4vqhy536qpbg8zaq20xyz79dzpyzhr43qporukhoq47c51mkxsxq1bohgxw91r5lykiro13b9ibgtcmpz8xvghm0i6zs23e0cefmhlhbb8nkhpfnx9ntjl9up5xdh2wjoqy3bnmowoc\", \"t8r9oel2623ea75d6mugj46fod04em654wx85sl2v4cxnsn87araesan2onzs23fney5f06yikr4yg0bfiegnlic4bhnczpwx8b14qeh0famp38evpq6h9miy2awk1k3zpgw96bjwg5k2hwi2zc6qh3p96qz6nx87m41arj0r86x31y1c97u1pr\", \"2t3rbalz1aaslbmkxv0k05ulsurp222oukzxi0a84hoa586pd4m35ylqrxb6888my94h52v182vvpxlvx5a1bm2tlxyb42f49zgmb1ujhlg2ecp6np8vfwrf115aj6qif6iya75ydnmsc733jl621cqj367lpmlr0o40wmy8\" ],\n        \"dataSourceSeparatorToken\" : \"aic4txeh4pnalu5gilyupsruia4wgm7asxnvxed2zylyrujgkdp1wqz7uyv3ouq03irf6iq7wqqs6eopkrlrptapaqie\",\n        \"diagnosticMessages\" : [ { }, { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"6r20y1f28ybjsmu9z9glr7sz7buexfrxfs4dql3oie54inxsbw6rlchtqqu8gpayy7667x6t69h1qj4oywefies6qyqhy8fmv8xmoqxa\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"l76gjk9u1u4mkc4naxjbghsr26epn9709i4vnb8pa9av51x1x9kml77e7v564\", \"x3pgd8eaoaim3yx4lssmpouz2b9wqdu\", \"mmnz5jcm3qcbqqnw9xs78tgxz28g9gv20rdwjyxlx4mvd6ww356f3dgigtx74eqzvd1ztopblx3h1ubjcyp1ouldlkaqm98wzqvb3gpyo01u962ssvibvjt9m5oiey5yo0agk79vt33puxuo00vd3kmdjqi9lstyi\", \"kdi0qm5i08fe81cdkp87040fvy33n5jwbkvbr1qevl1iz5zbvpgvj1hhw0agz88o6tm81ibyypzqaco2kk8frjsobfn4ltxqq4f1etuiek\", \"1kk1hzslg7zro1kia6dw1oqejdxbe3katwtyupn3sjtnqp4v6hcxopc4z22qydmt9fmgnvsp4h23c6dijzx6k487pzn6wi044ag9k5xkhnj9bopdx9pz22sux2vzee6qa47n4vcb9bzu33ebwjfs6eqq7kvtl6kn83af0tke6xv9wgydlkgt4w42sgeww8ysw7xus0c\", \"a8uyttyec7me63rk5mtfdqu6dl5c91d44cz26gqaz8m90x3oun94xk1sqvnspfsyyv6lviq2zki5u3poqk0d6u77ledr6mmn4j3yherqoe8gnw42r9gsf1ksgdxbp2b29y6zactdl7efohxjuek8h48qi1eakk1vfqjvhl7w4nr6cgsxmukp7vayy2kz\", \"unyg4z7h52okar4vhxcoqftb04phc2t3rirjsqjngbo2yupdfjqnnq9qy6u313fgpwe8tipzp0fc4j0eci4f2smgrq4ixtahmkj4ffxggw5uwnjcj54sj5yabouvl3ez0bdrilar\" ]\n      },\n      \"startTime\" : \"2022-11-14T11:00:39.982645Z\",\n      \"endTime\" : \"2022-11-23T08:41:39.982673Z\"\n    },\n    \"name\" : \"Ranee Bechtelar\",\n    \"details\" : { },\n    \"startTime\" : \"2022-12-11T10:30:39.982741Z\",\n    \"endTime\" : \"2022-09-05T12:18:39.982769Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"korttshwtsncpk\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"w9o63b60dw8ihx2ojgrolmz50ychdowuheh142g3x5stssvwci87fur11fh3124m87fxff8q06vjpmnph\", \"ms6p4kdh6rgvdcb4nfpxn\", \"4i6byxxut4npil1arnizjjb8nkz15d2lvpuv4m56g6awtqyw2p348xdukbxzt53rr4ok5va5ce4m4up6wd0qmy695w9mrwd9cbdq1l0xtz6ba2qq8wymkmqgc16xncb4g6h6r8\", \"bha1ztnip9rsp89y4c943zzghgfi80uwed7vna064fktaspt9qan9q3uizmvc6ac5dv9kykz82dax793oqtv81wraha2b00osm2d4m36gkm71fmno1hx6u69cntuhn0q6tj9kxumhsfxqrfep7h3i5uiot9x2h3\", \"8pt594a9y9eoo544ybhb1wwc4cd61b0wmwfn8hdhasi77rgyhw0muvdbh0rdfggvc84skm7vm\", \"j1gczzdsh3karjm55lzrmic37oj0aye1h2fsb8ee8vva4tcqxwvvyotrkru6xh1a8e9xoimuh05ngeyhkogxpzko2qwekpf1d7xxnip48x784iscr5xp9u0ho37i4urdzn4aktuh2vofl973txzi0pdeij78hh\", \"973fma2r7ymyb88g51ves9whtljv5be5ktqucmsp4d9g4z5t60vdrpe7gqp3tg75zmduq6euaq23\", \"ao0xqwv2fh6clb2jafukt9erxqkghgn\" ],\n        \"dataSourceSeparatorToken\" : \"73zkmufrzt2pdg3krgrgzruzhif6em9z9myj1tk8hps828einjcnxxr8ltjjmls4nqpjupun0lntdyyb963gxa6i8iukaz22idh6s90xl7i3f5o0ytbc1\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"qfkww49emecqwne6edq0i9er49chudzn7thfi0s2r6w2erpz9v8n2qg45dvtc7kl1blzk7ugealfycbrwico01n8c3mxy1qbdcu87jusxvvr76t66jqx0am8oo9571lr\",\n        \"metrics\" : [ { } ],\n        \"indexedKeys\" : [ \"xe1qozrgh6uqhvdjmpz1glzjabafv4jw3xtgrvwuwg20c6hkcvd15t4h6sm5cun1pv8zo2di9oa8589ps7c3zmpsubnfed13xdg52yd510lk59pqk84v\", \"iphsoilgp0\" ]\n      },\n      \"startTime\" : \"2022-08-02T11:02:39.982944Z\",\n      \"endTime\" : \"2022-08-22T08:28:39.982972Z\"\n    },\n    \"name\" : \"Dr. Wesley Kuhic\",\n    \"details\" : { },\n    \"startTime\" : \"2022-10-12T08:48:39.983048Z\",\n    \"endTime\" : \"2023-03-06T12:06:39.983074Z\"\n  } ],\n  \"nextPageToken\" : \"lil9b9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6748faa6-94ee-4bdf-84e8-f6d424cca570",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.983182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "48954266-9b00-4234-a3a3-0e0791cbb9df",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Myrle+Gerlach+II:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48954266-9b00-4234-a3a3-0e0791cbb9df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "6c043a69-95b9-4570-a668-7d7cb0c7e9ef",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Allena+Blick+DVM/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"bn26pib1ocktixgfhdocdluf3wwd69tsp3ru0n6rpv9hvsb5ufzy1idk2y93c8bazoqfbdxvf4cfq9fyl0mk1e19ez7btsjgfty689oqc7ldoh8now4mgyze5ctns0doyozcrye7pjlikj54cex0rh7s9gj1iteisvlnu40ji92h2rzwhjim5f\",\n      \"hasPii\" : true,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 1252109592,\n        \"depth\" : 1425482466,\n        \"endIndex\" : 1889982178,\n        \"dataSourceNode\" : true,\n        \"word\" : \"bnmy85pdigsyrf6vih3ift09i66tldri8h0r6dt72gozbyxe27009f7feuq5axpj4su65u1e5wxn6f4nimeqrbs0yacn00yxpemovv5ljilngekepsxpay3obfwabz6mrehdgl4uogqqiap\"\n      }, {\n        \"startIndex\" : 861167253,\n        \"depth\" : 313752014,\n        \"endIndex\" : 873091739,\n        \"dataSourceNode\" : false,\n        \"word\" : \"eomzcxe7wi3i29tocmbq47223dw1a835swkii4fpvn1dzux6ed6rjm2rzc4d1dq270hj2ivf1sjr8dh6snl9ypy8tespp0zdqgz6ibd23fkj9l03gukezgven763k19t7j8wtaxiorff6fnanrr8dsjkse4ao3d423yfbjna4jtm79wrvalqw09oahv67q670\"\n      }, {\n        \"startIndex\" : 400214698,\n        \"depth\" : 126693697,\n        \"endIndex\" : 1416579202,\n        \"dataSourceNode\" : true,\n        \"word\" : \"7380ueorbsotzaw5uiied7mc8shsnk\"\n      } ],\n      \"endKeyStrings\" : [ \"qt89tk3zbt7x96i00wf1jt5nqecqjqnbheqh39y61fbwylf4grepxma3evc6fqsxmcrjlj38kbpuwi6t3unukbg460rr52\", \"16t6ykjuc6xx20k08jxtgnwbxcfrf1gjbejvads9fsy322pr9m2d1iwtsqhhfh3oziq1ans9katzk5xtpkgxtz8vxeubzdfkxdxv7pbip6p8vd6e2jskjn25vx2aq7w550or8bclkaqc7bu1i7zqoxcat3l8ktsjrgj\", \"gsbj78kiwktk0gcjajfun7p9e7j1f3lzom58w7elkdyc5bmz11cc3hs68j00bolk1di878olmzt8tveq29c22zybft95jauernd6c8v63vh3v2oqizlqh67me4p3tb233jz7pf\", \"po2dkaco5libfe7ds3fz838eeh9\", \"cy4j9gvtxc909nau4z06f6845arma59mw678mfika2o0yje5mov88sh1a1agnlqzltwsy9r3kocm3o5xrpw0kzq4b3b5afknjelxtm9vhqz8l47ynciihbyhc6ia3vbvee1ysjp7n8fbftb5uf4zj9ud5vnxryuq2unuv2y4rdm4hmi2k7g5u8\", \"nrjv4lek4lyezehvxtq9ebmv9e0c7lc0vwn0kbz1n872tzrz9le2d\" ],\n      \"dataSourceSeparatorToken\" : \"uqaodri908ebdbfru4rc0yrxgpvmuz3rl9sznbx3g8o6ddwk3x8rv62s8nybx9nxgpdbkw9zs6y4x4cs6he6n5gmzx8cjj38kx5d49u9ecbtpm9b47lgn\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Omnis qui in. Maiores omnis tenetur dignissimos earum. Non labore optio. Doloremque rem eum ut in voluptas. Aspernatur accusantium facilis aut necessitatibus ad.\",\n          \"token\" : \"ug52hlxxmbgwi8ktctz5hvhh38n6tc46yeqf5iy3gx2tggz6km3url1c5k8rzarbyb2niim7wzj6qbnzbcjapveb4a6ix6odlgcf97amimbx29aop0ccr9kyuue8wkj1kw1jqrw3ip34duubri28kbc2tigeoywe5xczthxa963knq2bvec1\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Corporis voluptatum nesciunt vitae omnis aut dolore hic. Eum ut est quia quo. Ipsa et eligendi tempore dolorem non. Aperiam est cumque accusamus reprehenderit ab cupiditate molestiae.\",\n          \"token\" : \"w6pxffn3ptxgoqvrnvz0sjtyhjj6s6oz543xtw7k0f1mrxq91qrg92365yxcpzgklxgmxtt0twymuxov8qq0xubafaqg6epvdtptn5yxed014468penvmzyek0bgdvcbkny\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Iste veritatis reprehenderit sit quia. Quos dolores vel facere labore beatae saepe. Consequatur reiciendis est accusamus. Ipsam omnis eligendi eius cupiditate aliquid.\",\n          \"token\" : \"nq4guhyl8l1rmode3fhck81e9xn42emauqeygj3rkwo5k74c4ct4rdxatm2gbkdavmoppntqhvc0qits4b924mokd8vrrhh6k88ba7a1ltvk5lsxfmb9h9qetkyh6w21apox2a0te0rloh3omyan5201h1kqelbsl8rg107mxqbbj4o4yuqv\"\n        }\n      }, {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Beatae non illo. Quia atque illo mollitia ut. Laboriosam nihil minima quibusdam provident et.\",\n          \"token\" : \"hqzwr8gaub166to3dpg4r8ijql6epe0iczhxrdujf\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Odio qui at. Quis illo blanditiis non consequatur ipsa qui. Amet quasi mollitia.\",\n          \"token\" : \"zcg7w4r35sc1cnloxa0ry4an8hgfk29z1x97hfiwn2rlt2tkggdbilwme9pge7zi69z5pqsfucawxa8rkj0sefqan6kt66l6a04kjoc4mm6xxljtiidv6\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Eos omnis soluta et temporibus rerum nihil molestias. Vel voluptatem odio voluptatum animi exercitationem. Iusto voluptatem quia molestiae.\",\n          \"token\" : \"y65msanqn8kfxt79dn5o0t23mzq26mehvgao8h9nclknf23w\"\n        }\n      }, {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Praesentium voluptates ab in libero. Nesciunt animi autem impedit non. Occaecati quia eos et consectetur. Consequatur nihil illo velit ullam nesciunt quia.\",\n          \"token\" : \"gmmvkypdfmwcvmkhgnd6kgotoijwj553qknmckj1harmf2mxsj80v73mxlbzcz6dg3c4ayzhz3rl5bzatd43x9ut0qcj14s2hapyydxgoesgypjsvl1svm5i6z\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Veritatis quas at at. Sit ipsa maiores modi quod rerum perspiciatis. Rerum et qui. Aspernatur in accusantium voluptatem perferendis a velit delectus.\",\n          \"token\" : \"6u8luiwjwqtuyjfu962c8rw5hi4jejm05f8kxhwr9vgvjhvju4zl4xv3r57qmly0xzkvbfqzdcstvz5b5bmjt85zp980pg3gixfegoxk6l3bp6a0guakvgi2ygv0e75nfaxxdcuq1a7zys6ue\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Debitis labore a maiores et sed nihil iusto. Explicabo facere eum enim exercitationem. Omnis pariatur doloremque totam excepturi porro. Consequatur ratione accusantium.\",\n          \"token\" : \"a636yx2lodu81sc4gh6uuhufkfcrsg85fjh6clntu0vo40xqyjnhtqd205946q75f4rl2f8du09b567irnys3idsszhlz2y9wc8hlfheeksxwo3\"\n        }\n      } ],\n      \"keyUnit\" : \"KEY\",\n      \"keySeparator\" : \"unqib6iji1iif0f9llu4o59jjmsgl6h1lmn9x511bpnrva0fqf3udxrdzetmc3tmx3pfhsf5vb2hjkokf83mesln0vf41bxpsh02w3mjuk8runqlx8ysk1vu6o904fuo1kp8u2jrgbf6pwnxashfif\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Enim veritatis aut nulla voluptatem consectetur nostrum. Et ut dolore vel omnis. Ut saepe ut eaque cumque omnis iure.\",\n          \"token\" : \"nzdp568b7h9ahgd0djbxw783jv3jenve7c8s4f6su9axvvdn8gmzkk2edwvdx5aiuhkqmh5v5879lx5usyoumd7pmo3c6blcrhkj491jsgydn6z3k53nx9q8s11am34uw0wcpfp6zca6lpvvmdxgxxc3oxfyory93348d3hm1labsz5y87woyxgq2q\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : true,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Ex cum aperiam voluptas et consequatur. Vel quis voluptate et qui nostrum. Eaque et dolor molestiae. Neque cum omnis ut culpa magni ad et. Mollitia necessitatibus inventore voluptate.\",\n          \"token\" : \"48mdfx87r24opcpo3jaw1ed4ntpsjukk7vxewxpq2z56z\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Sed nihil ut. Omnis sint sapiente vel in illum nihil. At sunt ut.\",\n          \"token\" : \"zmgsynlm4ouez1dc60v6cpr165fp7tpbn3tran6w7nmuh1gzvetjs4nvp2r20st95ymckqeiey8wh0zfo0uy4owricj5opkbik8tegt8dwzhznu8tbivu17g7v3e080o94rmycbj7ps4j6x1fx1h3jekubya54703yiy\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.380096878488788E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Pariatur et quo ullam. Quo quas eveniet nihil aliquid recusandae nam. Ipsam sit sint itaque saepe molestiae esse consequatur.\",\n          \"token\" : \"wwv04r3h84lwb9gt2g7a42n0doj82ln91pfpnes3e7hti10w09765wee9x0af7ailjdpiw3qo2sxmcbgnkkqvqun28hyulqy04czwksyqip1tzlqud7auxdapbsyf9nqlt63hfrqocijg6yyq833eclsik7k1zeyw219981786xtvn73m4\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Dicta minima alias aut. Qui alias ratione in ut. Cum reiciendis veniam non labore quisquam. Maxime reprehenderit sit id.\",\n          \"token\" : \"smn83cvp3odqis3hsb9ao20piqt7m1wa17maqpikd5jtc0sfchrcik8e7vmabca5q8vdxgvwyn0wugds92oiutgeizfiut9w0hiymmyx7e8ukn8mn4to2ogt6fi3c46vqmyh3esvw3uva6b9hh92wyku851173wphj8j\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatibus velit enim voluptatem. Alias magni mollitia ut libero enim rerum. Perspiciatis consectetur incidunt soluta iure maiores tempora vel.\",\n          \"token\" : \"bu7pwj5ph45cm3uxhgpz3k2p45ficffcj1qvnemzds6umzbkdy55by46rw4sgiymw8o3edd3cc37gbl7\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Aperiam dolores rerum neque. Voluptas veniam est provident quo et tempora est. Consequatur asperiores temporibus enim qui.\",\n          \"token\" : \"4lm5sgfr5eq8eflsdgvue9y7o60pb739agrebq6aqcmsnezk8krt34x9h\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 3.2968803991989643E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Eius beatae sed minus impedit quam. Magnam aut dolor quos sit rerum. Sequi enim in. Dicta provident quaerat necessitatibus aut nesciunt. Et ut hic inventore.\",\n          \"token\" : \"23x43j8huhwiwfuydvrfn60cnntpbrm1unxsa9i3b8xaewsctjdqe73i7wyul9m62z\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Nihil cumque fugit iusto qui repellat qui odio. Dolor soluta adipisci cupiditate provident quisquam aut sapiente. Sit atque non mollitia qui blanditiis distinctio. Facilis natus necessitatibus accusam\",\n          \"token\" : \"vcdhsz4wtjzbo5csrrrt1vzf11y12bgo8tpvklqaft0jrdflicznlwwlauzsr3i4qslwug0g7qp6bmekdqk7ay3ifcah2mbva58ru81kvii5992xb0u6f43mhferx1e7c4ysowq1ttnbzuqc2u4244xw4zhiq08mcae0lhaeh38hok3pksgztb15so6qgjlixqeq\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Ipsa velit qui ipsa. Sed harum assumenda. Consequatur laborum eum.\",\n          \"token\" : \"vh3modr3u35je3jnszsgke22zshat25y1xhz7i2l8eu8lvqyfv8ynrvf7h15vtf6z2fhqtza852il6octlvxodwxn1\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Ducimus id et nobis deleniti corrupti. Iure veritatis nobis provident quo voluptatem. Ducimus eos et vel occaecati. Neque quia praesentium laboriosam quasi aut ut minus.\",\n          \"token\" : \"is5jxu6iolcm2buie2phvr9j8r6s2hfs24frnvgwdap1y7di7j2bjsl4nwv4ksglhyo1yx3x00zzgihyy9hxq4bfp7yhi78e5ktw659rbap8vfmwzc07zdqk2x07gw7igq8da63cvg37g47nmxp8nxz7u9shd5oh4jcj6u9ek3i5qr6fvjs15lrgp8u45\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.7485703357008114E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Quia culpa laudantium tempora est. Officiis quo laudantium aliquid. Voluptate sit odit eveniet dolor et aliquam.\",\n          \"token\" : \"nq5acwwjbcsqcum9vqvt6yo77r4zezstn7zpzz7vpv45dj4sfnl55rcnk673e261i9pnnoul6wazo97m9um1v4ygjlq4xpmbzw5odqg6wuv01muw3pmahka2bf8rd1leojmikly11ul8cpaife9z38n8yev61kbzjv82c5bfaweoefv3viz3gimnzgv2ewbudso8q\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"tsuiip7vu5rbqplc9hpzs6207ewz9k5so847l23lbvdnmzlovvsmgdrufhmtkjhcrcio3can6157m5x8tpby0aylmjxo5tfi3rd4ghdoyrja\", \"bbdcmjs67mh1q113pm6grmybmx5e7axrfpdd929rroc888t7z1oxh6xtpjzgxki0harfc4tgqb5m6itkyeq2py4bh\", \"odltnnijyxx\", \"do1ejbebbezw6oug0xk3id35neqrixy07gbilr5ba1x2wmo38jaoda1v3lxp32cgmprsiybkopyl8ofhawlux9w0ygi9jecc8r16bst2wof4xy5p5ccp4sd5fjooeo71tync5mtis8sf\" ]\n    },\n    \"startTime\" : \"2022-12-29T10:49:39.981713Z\",\n    \"endTime\" : \"2022-07-28T11:05:39.981743Z\"\n  },\n  \"name\" : \"Mr. Suzette Abbott\",\n  \"details\" : { },\n  \"startTime\" : \"2022-06-01T10:57:39.981835Z\",\n  \"endTime\" : \"2022-03-30T11:32:39.981863Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c043a69-95b9-4570-a668-7d7cb0c7e9ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.982016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "ec3672a6-ee63-42a3-b251-48d5d64bd929",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Pat+Sawayn",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 185009701,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Doloremque magni voluptate dicta excepturi. Sed nostrum id. Doloribus officiis dolorem et.\"\n    },\n    \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n    \"kmsKeyVersion\" : \"dcupw4k3auzyr1ks56r3ny8qw7eky1ao07w3cg58hc22lk8dzhxn9hjep9cyqeaty79bqpvw6es18dfuj6571mtiq54980rml3ossfyukey5irfuaahq5qiqfx15g1p5dzae8qj10zrpkw2lrohxbw73z8sdt6qddkq6ctg3p5p76mzrbg7jtqq3a7git\"\n  },\n  \"database\" : \"jrgipkog5o7zr3dgtvy54a3o0hkft86mao6wy3jxagx166r7gzkdbhebtdofdlzbxfgun9c\",\n  \"expireTime\" : \"2022-04-20T10:02:39.97969Z\",\n  \"referencingBackups\" : [ \"cjvirb6nq7fmmsb565ct5codikj4mwospey3i9t8pxl8jk17x6ltq6ulncupwhtlhpir6w0glw603atgydt9qcqiu8amm94002vcfxe3s684gn15cw41hcr3vsh5hmes9javi7koc516p1ytmpbwosy1qows04bimmlt2ilcv28zrm7t6hw0jrfwyr\", \"gn7n58pp7jf9u0p5zlvgm2d1ek0alydn2pnemzuoq37523g5gi0n5ck05lhleje9uy3i3uwjp2fc2bpa2vr1pteoqj6p30ja2cbcbtje0vl2w4jg5n6830335d2uyntvp\", \"r813qfi291zsy3dndm6av1k7xhgxruvur8fzc3bxb9ht5zxflgha25obggadjda2c72dg9ywgtdsbpg3oihi0hv9gi4xsohx2he8e1ee45y1oii9j95xe9thwli5er5an23wilgkuhq9899ftpwnhk\", \"u6k4rk0dl70jorqi8cb5u3b50m8qw8j2lfyg0ivo7nu5ouo490wufub1x2eljpvbscyka8jj5ky4nhbkfm460zk9xllhnwycr709edjfbplkhprrypowc2z7ry1rwegdgzbywrrp2jz6eqsvvlni1v59fl2a12t125vkcs7n99futre\", \"9wc1auxjuc1hi5b4zswfzq47ltskzuii70ed6m57\", \"wypeu5ei20u6xm9gp6gdtwhhqyv93m774vb21b39pfexoi6je50hbke5ombsa3z03wkh2ptf8ma95ztv8xkd\" ],\n  \"createTime\" : \"2023-02-23T09:58:39.97976Z\",\n  \"referencingDatabases\" : [ \"zqciatc3o763yn4uous3ci9z07ezwauizytn21p1sc5c5zvdlz0uz2jg7pr252ln69utq25c8whvxs2xeebg5l9g7e3xeliwikb0injqte6vnnxs6m79tdozs12920oesfckzkogm0s6ei8azsypkc0yissstu4dt\", \"76npjbi9vhw4bnfd8cdi4fb1hk20pk97ifxnnni7g\", \"cp2s1oyqnadwwomm1fni1842fmsqm9020a1mj21vxln009g91ga01frh5b\", \"f3t737148cd3gunc97depulm5fst4wzjp6y83sh9uh0ciyvm2vn5znl2wnols45ga5obcnd5j47crbsvcvlwlsmas2tm3ka\", \"he01d0\", \"4zicmijwmuwn9eqys5lk6t9iej8em9dqz0o5plqyq9t06suaqvocf413v0f84ghepkfrpj9gd140ycvg9adcl07jn3f5fpsnqjwp4qcryl6lygmkqzfema4r9dvu85e33y\", \"0v5mdiutp3d49z6py59ps9lkjfetktye01ebou42yqw08ejzte4navmq4bwog430k6r7bbh7k1dnxftibo4tj51fz2gg3djasinc7r2wj8xtsg\", \"40brk5w24oix6m33thimhsvexez3g\" ],\n  \"versionTime\" : \"2022-04-27T09:03:39.979835Z\",\n  \"name\" : \"Theron O'Kon\",\n  \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n  \"state\" : \"READY\",\n  \"maxExpireTime\" : \"2023-02-18T09:42:39.979916Z\",\n  \"sizeBytes\" : \"trt7mbuw3umql4gizr9hzqpi61jc2fxtybe3eqfi2mnh6s3i44k72leuaol9knel3rju8rc2soniyir15opq40szwbowubt9yo26flwt6s1zzhs4g3y9xi4wztav8s0rxi50go0etqlevgxjnpmwqohuxrp0zhlfy56lal06vpc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec3672a6-ee63-42a3-b251-48d5d64bd929",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.980124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "0e8e7e6f-0d33-4abf-a354-8c439d091582",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Miss+Ernie+Friesen",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Tracy Mertz\",\n    \"error\" : {\n      \"code\" : 296268129,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Ut repudiandae sit quia quia. Unde sed explicabo asperiores porro sapiente odit. Maiores ut et. Delectus exercitationem doloremque omnis.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Annamaria Wolff\",\n    \"error\" : {\n      \"code\" : 1250165903,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Odit laudantium eos neque quo itaque. Aut qui commodi quis ullam neque. Iure ratione tenetur quam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bradly Kutch\",\n    \"error\" : {\n      \"code\" : 1259221094,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Aliquam voluptatum eum et unde vel libero. Dolorem harum et a et odit pariatur. Rem corrupti pariatur quibusdam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Terry Quigley\",\n    \"error\" : {\n      \"code\" : 209126346,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Veritatis provident et aut voluptatem corrupti sed id. Quia corporis consequatur. Distinctio at et eius.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jacques Gleichner DDS\",\n    \"error\" : {\n      \"code\" : 1718309725,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Consequatur quas rerum sed. Debitis ipsa reprehenderit. Reprehenderit quasi facere consequuntur.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cleora Lindgren\",\n    \"error\" : {\n      \"code\" : 1547757758,\n      \"details\" : [ { } ],\n      \"message\" : \"Cum ipsam quis quae quo nulla placeat. Fuga consequatur eius consequatur voluptatibus laudantium. Consequuntur molestias rerum sed qui molestiae.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"ftkhf0nss7n6emmxj2p5eqss7z7x0bxsxi6lstgbn8b5ore1wu2sxjpulxryvzddd9wg9rq1t11xuv3o5rhod4x39ujtls13kh6jpj14wmn5pqahetaiak7pm85q9xcyl77989jp2vuhn7baxouicwvqyd3iknb9uo5vbtngv4n967ly4tv2som4r4nt8utux9f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e8e7e6f-0d33-4abf-a354-8c439d091582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.979556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "15578e08-e5ea-49c0-9583-9a0eab59744d",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Kam+Conn",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15578e08-e5ea-49c0-9583-9a0eab59744d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.97888Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "635b121f-2270-446b-baa0-e988aff3d612",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/zgd35jm1pa4sqlqloenpy18d16wov40tq54dwofucq27snclwpzqkj7kdnc48g3aevm26qc9qe4my6li3cgr2mgqhxyirgsax03hqt14n0m08j8aqnudx9icvlmp4fsy/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-09-20T10:01:39.978562Z\",\n    \"creatorRole\" : \"qk1p2z11dgg70yv9nuo589r79muv6mu7cqipp9flv7v3cpz0c248vspnblvwn5jkepkr1huybjb\",\n    \"createTime\" : \"2022-08-22T11:44:39.9786Z\",\n    \"name\" : \"Genaro Fadel\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-05-11T11:25:39.978672Z\",\n    \"creatorRole\" : \"1fnk2ty9m6mgsezoiimhwpsg2reds1ck0hjaivqa50lpfbdcj20fjs860938i2jx5jdmyv8jcgi\",\n    \"createTime\" : \"2022-03-16T11:05:39.978709Z\",\n    \"name\" : \"Kristopher Adams\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "635b121f-2270-446b-baa0-e988aff3d612",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.978806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "9ef3530a-4159-4fe2-8125-012c4080483b",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/wmsqyaa8g439ekucn7ytspia2pdno8q8y9nw7ktvu20ettpje6yt7f6hosie1hcwjmanz3z8qjf57d0ljs2ropz4yj7dacwvlf66lggxzpfwpfnsuarohi9tbp4nyebf2prh630vtlx57fyhkeji3bk57gs0bib2wpst6bjiwnojgm0f3iuotj3fm3vkqi55r/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2023-02-02T11:18:39.97834Z\",\n  \"creatorRole\" : \"gs2efkft9f4s3nsd2yfw5c33ej5708hfrrr9osk742lk4ri1m908vapm9m5twefgyjw7b6dnnrkkjkx04ikwsstthdxbgc3ijb8q0ph72xufh00uenvo9hfh0zpz1nfu318c5p94x19ot2s0hmhshpeu0utfmqhjqvlbxupxszv\",\n  \"createTime\" : \"2023-02-13T09:04:39.978379Z\",\n  \"name\" : \"Miss Mara Bogan\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ef3530a-4159-4fe2-8125-012c4080483b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.978517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "8b1bf4e9-6ace-4f0e-b3e5-f764f869012d",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/lhzmxdeqi99o8etoixrcgoh9ew6ldt12olqdd7xwjc4mgqfts97mvjc18kgsbhm5nqg4lcm0c2uzyc0wj1f0p/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2022-04-21T12:13:39.977683Z\",\n    \"creatorRole\" : \"kjs1fx63mleu1r346rc9pgb3de3s4t\",\n    \"createTime\" : \"2022-06-24T08:49:39.977727Z\",\n    \"name\" : \"Fermin Willms\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-06-30T11:42:39.977807Z\",\n    \"creatorRole\" : \"19z8dpskmb5fb7xw0sy9pg8uwzr52waxo2cxkyhydj5h5ak4bjejgrfr84jrpo0vowpicoz33taw1g64knosfdsdvp7cvzd24dt3hu1z6i9k7i408e0ukxw3qjpcyqaz5s9o3dftm\",\n    \"createTime\" : \"2022-08-05T11:35:39.977848Z\",\n    \"name\" : \"Dr. Santiago Homenick\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-01T11:59:39.977923Z\",\n    \"creatorRole\" : \"xjxgzd691q4pxc3\",\n    \"createTime\" : \"2022-04-02T10:34:39.977962Z\",\n    \"name\" : \"Eldora Buckridge\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-11-27T11:13:39.978032Z\",\n    \"creatorRole\" : \"nyjdjsqnw2a6wl9of235598ebd5wx7mec3hay9n47rj8mhhulhc5ru11ipwqcjg12inynawk74mapymfbq4ttdjkssnta65ecuqkkr0486ngrjv9nlv25unhmauiug02v0u5zpk7vgxtielwatuky5zufqlho1tkvznl2mvd03eb1e767ezj\",\n    \"createTime\" : \"2022-08-01T10:29:39.97807Z\",\n    \"name\" : \"Rosenda Wilkinson\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-10-04T08:40:39.978139Z\",\n    \"creatorRole\" : \"ddakufyvm7invlb4yzml9v7h8s730rghh0d9yf4lz7n9q02jkwazucsxftegarrd1c7t5ap09ooz7d95bcbe5yehx8usm14mwhvhl1pp0s9a8ttejb4fquu8yck2\",\n    \"createTime\" : \"2022-07-24T12:03:39.978178Z\",\n    \"name\" : \"Jasper Stoltenberg\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"wcla63v2yzenzawr13wxwt0bxao89z88slxdgqjyvmsfhmi7o2qmyvl75wpfb2ecr8ht8xyzxgrxryzx8adudj67fs6i2comex0yjyn74yi2k94ja22q8z0vv1a9a3wx4aw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b1bf4e9-6ace-4f0e-b3e5-f764f869012d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.978307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "77038e56-82b2-4304-afa8-ec326917f6cd",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/glxj9pw20x777g82godsdga1vr5dgwunzlo7cg7p5ykidoe7ctb34ew2jx2sx7ikh4k13lp3t26el0d9s373x0rmkczap8tbcmp3sma9lq2zb8sgpl586vb4bs7aqvpub9ypqd/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Barbra Reilly V\",\n  \"error\" : {\n    \"code\" : 801579338,\n    \"details\" : [ { } ],\n    \"message\" : \"Sed eos culpa et et ab. At eius vitae velit natus. Autem qui est earum est. Ex et ut omnis aliquid dolore. Eligendi sed rem dicta non magni consequuntur.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77038e56-82b2-4304-afa8-ec326917f6cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "a0685700-5735-4a2a-9910-12125643f5f8",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/zwohzt0g6qg537a3986yu6uy9su2q6362kl43hrbja4lhi072tk3r5zubdqwrtm8dbdrf8zpuqoj42/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"61hu87leakfx1mrfepwpi4is3m5jaa30fj72rolktdqhhegrr4aujregesp3j05zt1uiura994r6airfm6siafeorw4asob9yz3qu5phmbeo4q5rqyg4n8d1c8gdsti4z2smtqq4fszsfy5v4w3omuk3fuwz4np1r4ef1dce9uyl8d4nosa37\",\n  \"statements\" : [ \"3pyh2sxlem5h05gz4r5cwfbxnw9bof92wwiutbr8oc95xrktm0v9usqulheiqngisrajmq7su3yopr3zde6j7fclso8btwvp3udgt6dz0kf8nx0npe6ix1npendb00gm2w435zld6xc88w1b7hsjxt5zyks4nr1jzjqinnb8ks2o4l8o59fhyn0vspa84m42ou34nlia\", \"2a86quhc8it10xdte55v9avmy1uh5jjkuo2neba19cqaa9puye95qjzg9kfa7mel39evfe3qtynrogozpotwghpnr79x\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0685700-5735-4a2a-9910-12125643f5f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "8b17b268-d60a-4cf7-a732-1509bc1d6b1b",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/509y99ix9ejzc89t12515yhyql0xhd7d5aoiyllgty5870jzvh8vecs8mftrbo4orskl425zr32tsakj5jnue5utj8ixwbteqrmdy9lewxxjq2xkf4p73m6nd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b17b268-d60a-4cf7-a732-1509bc1d6b1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:39.977174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  } ]
}