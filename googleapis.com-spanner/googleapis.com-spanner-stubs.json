{
  "mappings" : [ {
    "id" : "ec8f0222-37fb-4902-95b4-0c8b83725739",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/hat0i32wocsg9p6rw:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : true,\n  \"resumeToken\" : \"4i6x0daxas8dpbqvlbpl6vwhtj2\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Ronnie McKenzie\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1xnhjifxsccsv91tvze87ockaiawdqbzaf6ayiqarymvg7pf74okcp9ew9ghdxe4hjha7rv693i6ca04yn6y2pagj978u6eiusy6ef5gmv12w664aiypki87v97ahymqmu4y47ysy5eb37fw\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Beula Corkery\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0rk22o1xuxx1\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Dr. Annemarie Volkman\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"qrbelklw3qdbbl41xghr3k\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Jammie Stroman\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"xuphj0762gi8z42t3ap5pjkoxe6gxn4qq71i8squ99nljlcqx2uprae455oqrt6tqjgupjojfcihkdygjgf53m8zi8ehn558sksk08b90oo91p7pugfdreqpd5d2iyx2doyk74dg9cpb61j6pqcy9qhl9y1kax24ww1iouy3l5tdj8ua9y0nvf8o3dmf1tk2y87\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Luetta Mitchell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"z66nujkkjgg9yf8y62oxztijv5ilzz4iclz1yycg72s05cnobbqa4kwi3m1g1tw4ntjtsv9rsmskw4kznwhf04hqezu1tdblr7hocqayidzcezbegk4ph8wog14k69mkvjejr4lk5shjvqo67xexa0uo5cfy4zxhbd440kfe50anggimkthdo4ztcordw28hq1t8jqvj\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Damaris Toy\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"o0vqngesw6ek7phcswgytknnxo7zo95wlp6vkqogz1rw3i6kavte8se1lmvvdgymlzs3i5zrn6p9yvu1dtynn3swiyqmiqv7gp63i9dmknmmkfm\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Annette Schmitt\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"hrvjx3gv087smmg2zcwsgsq1db1oh62dll9d32uf2nmguyxyelan26z59h9ujmk4h32va5mjorht024vzx8wn7ojnztzrd3bvd3jic1fjv1i51nh9yg6gq\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Ms. Vasiliki Medhurst\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2b1jqtq0repsdoy44bz6kpioyn863wkux0kyggot2loiuyga8rc8mo74n8p2so5a0lck6hwpmwph17dgumpph0rdvcrl9zvzex60cxe0bh4l1jx5iyk03xf7ij98p71is2ss2kpxp8ene0zfbhfhbvim8hfychgnaz0459tewfdj0c0k\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Garland Schinner I\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"zv4hu47hyokwnq4j1nuysvculf96pg2489gzontfcpy1kwdkkl7e97no49jq6zr2\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-01-22T16:54:25.401854Z\",\n      \"id\" : \"0u76\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"fuphhauhyt48i1azt53bvu9j6j789zjkdj75fu7kka9b4a67udoeqbeowtvp9vnht3c44199rzyeyi39na3berpe4qy4fcnrou2z4tbxdwgm4tyvwclxfsg0ispm3eqtxc4pz32ybpc6z6vozf001sgd55yapwlhexqrim69hec\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Doloremque architecto minus id harum ducimus. Vero ut dicta. Praesentium natus laboriosam omnis. Voluptas dolor est et sunt sequi odit voluptas. Voluptatem nostrum rerum labore.\"\n        },\n        \"displayName\" : \"Cathryn Robel\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 840969155\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Dolor maiores quis vel laudantium expedita dignissimos ex. Sunt aliquid qui enim molestiae ut facere voluptatem. Ut nisi nemo ut quo neque cupiditate. Sunt nobis accusantium eligendi accusantium. Quis\"\n        },\n        \"displayName\" : \"Kimbra Carter\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2072123511\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eos delectus sint voluptate cumque. Deleniti quia tempora. Doloremque quae debitis. Deserunt hic quaerat ipsum atque ducimus.\"\n        },\n        \"displayName\" : \"Noella Bailey\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2102755422\n      } ]\n    },\n    \"rowCountExact\" : \"eo4zuc8bkxxiyejch1hdml2h15wi0xehazbu7cil561e9n8w8kmuu83ak7bwubonk233augv7u3d3zrpisqbd6gir\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec8f0222-37fb-4902-95b4-0c8b83725739",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.402401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "af0ce681-b702-4f1e-b7b5-50411cc5a05a",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/yyl4nqu3opxv8iuchfkmbkbtzmablty3a32stzzjhu4kc5cwfocgvklcs4ubxzvvntqxbrru7tv9h7lopxi3ooj0pl:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af0ce681-b702-4f1e-b7b5-50411cc5a05a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.401106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f2ba8b70-445f-4271-883a-c502a895a4bb",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/7e5124b5szo5p3j8ezocg7kswvij7w:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Dong McGlynn\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"odgma6s50x2usmrtrwo0mv4sml\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Lidia Fritsch\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"3858lq1ifvsx3qwt9cpon9sh3z3ajf1y52p79oftrp1f9eeey7x07vynbshh2i\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Charlie Swaniawski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"g5ah7wx5iiznmbob6pcrhfybcdkf8z4dxoytcwf9rlqoefia9bz3ti51tzke32mfri868akelobosaowf1trz4qryfwxcfz\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Mercedes Kunze\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nc7nqby2t3a7de5m0y2dw1o1gm3m5f4egrhuv2vs546t0xbe28of840s005chywwxplg3dkd2ubrbyibrcp214uo3nf3vp3hfj9da0cyd0btmgp8v1t1baee7ux40ecz11askvcyan9bx\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ms. Arron Beier\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nuiop4apqj9nlnb2dvnm8rnbx3vnazd1o7be9n4f8dezh7\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Hosea Becker\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"51jronauibllams0qsys711mi9nl0db2m2g24owyznqib6lio2431m27adjl7rhr2x56i9jonz1xifkwc0tsn4qgmhdkmcqnnviphy5hcugpihsa393jst4hdjfqplzc96jxdwswys9ed56jx\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Deangelo Lubowitz\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"evdoy5kct0tkzao0x5x4i2r4tdxvcthe7r2qz3bmzfntcy87t0y2tbdsxq7zbu4eabpv5ho1ugut35qpfey2slh3hz0hboveewvaxtpmgqu51ka49roqe48h93sg0tl2ydm4m4frjt7xdi8aapgjjo6q5u4h9fc2k2lcl5qqpei4clsah2rw85bra5aw73efjk80ti5\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Reggie Kessler\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gx14h2qqatm6af\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Mrs. Janey Reichert\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"qqka2y9uk0niydcini78xmoex2v0anvmb44jb9y2ezx1may5dtw1m9fbohe6ivk1agew56sd73y78hakysnows6ikqp34q4qqkwf6nwhr6z6qek1ztpkhqrfktbhj2ue0e7s5z1ssyb8f2l2jruqmwothepovvjpg06\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Robbie Torp MD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"10vdjmcopyza8x9fvggm1wsypcuabnpkep1r3wmdgv70mrtl93gj724awh8odmo2q3mwuocuzsx6go67s2vptpm4duc30r32moxboeoif7j0yp4aihi0n434hwo50gu8e6\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-01-19T18:05:25.400285Z\",\n      \"id\" : \"cx77\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"zdqr1exad42dpc1v5bdhgsxp2yrgjygf3lhpayuqwui\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Repellat sunt libero. Consequatur culpa velit cupiditate quas fugiat aut assumenda. Voluptatum fuga eos. Sunt nemo quos excepturi. Non aliquid voluptates voluptatem optio accusantium.\"\n        },\n        \"displayName\" : \"Quinton Conn\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 778570213\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eum eos cum vel est rerum id nemo. Suscipit porro nihil commodi iste ipsum. Magnam sunt rerum pariatur rerum autem velit a. Perferendis eos cupiditate beatae sed est nihil ea.\"\n        },\n        \"displayName\" : \"Warner Torp\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 83850758\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Qui accusantium at illum totam eos. Consectetur quod dolores eius dolor quia. Praesentium consequatur reiciendis non neque quas rerum.\"\n        },\n        \"displayName\" : \"Tressie Miller\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 754842817\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Veniam aliquid repellat velit recusandae hic cumque. Blanditiis rerum atque necessitatibus id. Amet consequuntur aut aut cupiditate repudiandae. Excepturi mollitia quibusdam at.\"\n        },\n        \"displayName\" : \"Ollie Schultz\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1849443919\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Consectetur earum aspernatur incidunt architecto consequuntur ut. Distinctio sed ducimus ipsa occaecati qui et. Sunt non aut similique nostrum nulla rerum.\"\n        },\n        \"displayName\" : \"Wendell Hilpert\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1495342487\n      } ]\n    },\n    \"rowCountExact\" : \"dt5hmlogdq87kuct1dr5194vrviegiyo4ljp4\"\n  },\n  \"rows\" : [ [ { }, { }, { } ], [ { } ], [ { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2ba8b70-445f-4271-883a-c502a895a4bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.401059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3331ebe9-e757-4685-9b17-c358d5fb6c8a",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/07gwdwgva0smeoni1z3gzypm453u1n09j8k9ottqz6iodfvuqou0tud6iz8o2nyes9o5u9apq4rzgfgq3a0ddw3wjftc81i2hiponiyjan1tcwh6mmlvhourcu2hh2dsfa3mk:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"zwngw3epb5jp1avxv4omv1mnsx7f3gero6imihuf094cp3dsnvw3kjjfixzryii0smkg5onatbllvj0xwhtwpdmeeyh74hrmy4471mq757lg85701rirtv1psrdyv1kok7wvm1el16pdm3ky3k\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-05-27T15:19:25.399374Z\",\n    \"id\" : \"h3gy\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3331ebe9-e757-4685-9b17-c358d5fb6c8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.39949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4852a6b3-44c1-4d54-89eb-b7796a1deac7",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/cymw9i6au8v1r2461xbdspuwbto4syc9duk13fep1gsf1bhlrscf33h5u0aocqg36d8ubbdh978bpp0az5bsxympfixoirrsmo17lkdi9rn4xs7xwu33w:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"qn7uhlgexhoq6c0oa4hwue2ywqheowu2txwr07xs12nd3gocrs6uhoj81gloxfj841szsygwhvczljj61dopyllq64x4pmpvfokeki15brfa\"\n  }, {\n    \"partitionToken\" : \"igcy8xswp27ymw6d3yte1a1mut9jom0c6svxv35ql8hi\"\n  }, {\n    \"partitionToken\" : \"nelsgxir6sy7ngs8dm0wijcwonqjy\"\n  }, {\n    \"partitionToken\" : \"thhrthb717r4j2hzuyd4jpm4qmuo6nrkpax1h2cclrpfc8284af6ed1wz258ogkjnp6f5qicr3uddcoj6xlr7hh0nfdgs6\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-10-22T17:53:25.399197Z\",\n    \"id\" : \"8mji\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4852a6b3-44c1-4d54-89eb-b7796a1deac7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.399319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "62029430-8d21-49fc-8525-14fdce3b27ca",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/lryj82tdvgkelgv2g7xdz2xe28byov50fu9el11h81u3xj:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : true,\n  \"resumeToken\" : \"w1v8zywo0xg4\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Mr. Jeffery Moen\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"o60kbf80qdo0kl127cnh7kc033ninn3uiel046kgpqsfqf1ug5z6v6n28l9q312wcx\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Julius Fay\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"3vnnkele416biazrshiog3xgd7c1gifht9w2a0reulzh4bugzryr6qie19keia8i3zn9pl\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Mohamed Klocko\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"u1splhrq71olf07om47ujyatbyzl9ohfvj1n5zdj0qniwnd4jxuo0zqtkxw54emxob7id5o82noayc0yl9gy86hc3496i7yv5plf5foi3i\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Winfred Gerlach Sr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"pf7fwto12bbnypix2sibu44evyp5kcy1l5ybd1ckqapnrrvs2mhpop8lymef5rxsr03xh0hghkq19kie1ogfj3y1t2zx570ldekcwddrut\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Felton Sipes\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"mehlujmw1g05k15nze4e3dco948crc0jt522426zd9z5aws37bwiayza0whms2w83ptlzq4agdv\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Jacquline Bayer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jwgmlabi6ezw6ibfq2lmbfp8qo5cqk1eu10duppfxaoyi41hrbc4wlg\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-03-21T18:34:25.398183Z\",\n      \"id\" : \"h296\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"bj32tfe40nodmdddg58nycuy82suny66y7qosb9krk5n6j16sc1mmptvfmty2e0icyvypehcnuwyd29q2wulh4rgw6nuapkea8hxo1xyqv6m81bj9ajtsc6vona1gbc2behx4c99f2v1xqmvdlzdbejiujuze7s64fz\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Est repellendus rerum est voluptatem. Ut ratione dolorem quo ad. Ad ut sed eius quas numquam accusantium expedita. Molestias voluptatem illo saepe vero quia.\"\n        },\n        \"displayName\" : \"Yaeko Jaskolski MD\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 654745789\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Tempore reiciendis eos nam. Ab delectus aspernatur. Dolorem harum sunt ad ut molestiae est quo. Minus aliquam ipsum nam.\"\n        },\n        \"displayName\" : \"Mario Daniel I\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 772537815\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Placeat qui et quis est. Id ut ducimus quibusdam. Incidunt iusto minima debitis molestias incidunt deleniti.\"\n        },\n        \"displayName\" : \"Ferne Tromp\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 418477899\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Laborum dicta voluptate enim adipisci voluptas. Aliquam delectus harum. In mollitia illo consequuntur nam omnis. Dolore nobis expedita. Reprehenderit recusandae et aut.\"\n        },\n        \"displayName\" : \"Nikia Waelchi\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2027053605\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Hic saepe qui voluptas ut omnis. Alias atque autem ea laboriosam nobis. Et aut ea sapiente sint in voluptatem libero.\"\n        },\n        \"displayName\" : \"Brian Terry\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 1723134163\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ad voluptatem illum sit dignissimos qui tempora quis. Accusantium dolore fugiat cupiditate temporibus. Perspiciatis nobis repellat minima voluptatem. Rerum vel vero quia veritatis molestiae beatae off\"\n        },\n        \"displayName\" : \"Barabara Mraz\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1973381575\n      } ]\n    },\n    \"rowCountExact\" : \"lmhwb9fc0f24i0autjfas75iltzlt9xnhwti049bxkj0tgznt76nb8cermf4y6bfzj7k99uapjzioqrjn7k47owgs14edefl513odqicqe6q4lrgysn7x4lzm1vcji1q9yhn14plnctftbflt9ag8q\"\n  },\n  \"values\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62029430-8d21-49fc-8525-14fdce3b27ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.399092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8d924a97-ff45-4f86-aeed-8d43051f739a",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/cb8a7ircbvrjxw8dgtvaf32f5e1jw9kkl75yl8x9:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Oda Hills\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"cph5jkzayy2at6p6w8c9qdm4yr6j90gp1sl76npoi15ui865foq9nnmrr8w9euqakqw1c1oloworzfuim10z4qdsn6pqla1zjuvvuy9obns9lxl4vafm3yx8nfslb1krvas5zf0qhu3s802\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Quincy Jones\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"129orhoraaq3xqxaw9d5w48zh90p2qx0razebc3a1qmg6lzmd42z1bfh4zk8hrzl4xooz77wtq7ufqa6z0hiodc3pyc5phcj4wq1qhrowymo8evwh2\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Yang Swaniawski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"pfg3egiyqb6tq5h9k1pi2ae9jdxwlcnnxj0fcy1zelxwxwyarqht1g42y02i4xt9u219pygmtqmm9uva64czmv5jd045tiawkbz0jwvbhe2qpwdw0tn1d6v8kdroipq0fizpo6qdflcx2q4mtu5txu3ljfmrkih8fz0zwlh9gbl\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Del Schiller II\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"3jhnhoh8hoxjiboybehyv33prh3zw7w2nqctvzri350z5jni3ywqoeb6z1p9pciwhho896s1f4h8ilqdr0x8wqrh8bmky4igsn7wot0mmv78385a7sx6r9vhqseuu78wuq3xn4v1sj5y34zl7yarbudwlglkhho8hw3fe4wttbyunm1sbhp77e\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ozzie Jaskolski DDS\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"azgehqj0hq6o28yn9b3q2rb5cbnbsg1unyg2bj7em2xqyeld54fzpvzgxr2tekp3kylipq\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Elias Schulist\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"saiajygfuispzcunywmfwy51lzc61lec3f43yqcglumhycy1gl4t5ob5bmym7b9oogrju4gubcll8sla5k\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Arla VonRueden Jr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2qk1so9fd5wu6fshaoqb8\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Sheron Volkman\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"JSON\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"4xm96enkbgslu8l3ve82cp97lfkqe01f7c0mkv0kk2djlnqieevzr74uen3j7ozj3pogavt33ihwdg7df5hkmjnjb0ql4uzjzjaw\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Neville Balistreri\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"q0bwelrnxzu0qyjsgu1i9hw1kja1pdo1n6vs22gezf\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Scott Fisher\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"145qr24dsbdlvq5jsshmi8hltds5wasdhyj75xo0j7oj2s0aa83mdqa7vo0h7y1lq0jndu7lsf6h7p8h8mm8rfosgeqzjqwz4qu0n5q8rowhqivjghu\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Shin Schmitt\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"nrmagfvgsyeb6h1e\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Tangela Wisoky\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"5qtss7vq5mfosjcz\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Grant Schaden PhD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"h2r210\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Mr. Zachary Morissette\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ru70zp1941om9kzfl33iu6tc1nn8k6ffs6dsmuv0qmgu4ke1jchafwdlveotk4i8xdvm7y3xx8sx65kane0b5vynb7c3lk\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Dr. Lindsey Nienow\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"s3ecu7ep1ttllzotq77cbtuc47s182aztjkhs835ae5o601bme3\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-10-18T17:11:25.396899Z\",\n      \"id\" : \"44q6\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"z14j5ivfbkpt81v89rlrxw5jv591a2s292ywnhho0zdy3vsjlmscqf5xg5a5vw00pkytbvdnp184h7p2dxi63p6m62367diob4f6f9z9xi17a3o4tfvq9ku8p793n5fpax9qo\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Consequuntur expedita explicabo quibusdam quisquam at iste. Quos molestiae vel eligendi amet eligendi fugit et. Recusandae et est dolorum velit ad asperiores modi.\"\n        },\n        \"displayName\" : \"Kiersten Abernathy\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1884310329\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Itaque dolorem dolorum perferendis officiis. Quae est aut voluptatum rerum corporis totam. Eligendi et impedit. Dolorem provident fugit recusandae veniam modi soluta nemo.\"\n        },\n        \"displayName\" : \"Mose Reinger\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 475938821\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Omnis omnis incidunt id odit molestiae sed. Vel magni tempora nam et repudiandae. Ab quia at. Accusamus nostrum non ut occaecati.\"\n        },\n        \"displayName\" : \"Etsuko Gusikowski III\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 2066012288\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Omnis fuga asperiores excepturi. Explicabo qui autem esse quidem explicabo voluptas modi. Ut unde itaque non qui voluptas.\"\n        },\n        \"displayName\" : \"Bryant Larson\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 723227499\n      } ]\n    },\n    \"rowCountExact\" : \"ze82u93hlnfr5o7pq2j0jqi3jeu94am3yxup4li70353lylun78fqqx9mg26v8y5yhw5l5mutd7t9lsu6vueuc0zhmzq5uaoe13q1roozwoehymtvp9c21l2cz200biceaiactygy8yxwlynj1kh4qlkx7q6hp31bi3mho2izt334eo0ev8ar\"\n  },\n  \"rows\" : [ [ { }, { }, { } ], [ { }, { }, { } ], [ { }, { } ], [ { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d924a97-ff45-4f86-aeed-8d43051f739a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.39763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64b6bd3d-efa8-4ec4-b385-c1957da03a56",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/d0v6hkvwj8jfdipn8m6by7qow8larahwqc15cu11s5fz5p2i2elzacwkp0cfr81flcmzz0f2laqi2splnj0ztrpuzfgd290v6ndo6t3xp7htdwyk1pksq:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-06-21T18:10:25.393963Z\",\n        \"id\" : \"rk1i\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"mdb5z4i4y43gw5icp6dofq78f6vsyrqk76s7222jd404gv5bcbkxdcflcdjakyayd4t9rkaehzr9ddadd0ghpodmgdlfmx56f1qz8ybbrx2zp5gft9y6xu94hyagor7zpvepz5v3iiyvye3h8aeybf3fkgmv2g924fi\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"1hnbloyn1y93i13e4sd1958k1fudmdoahhy6iejxykrl7vzimqwnoxc7usups21z4v8jh1x5zpll2ctlkobn36e5gtb25oh8iaa0pj1a70bjvkh2q53uh6pakzj6bvuun3ixyvrkgyt3fj8xy2gvyi\"\n    },\n    \"rows\" : [ [ { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-04-06T16:05:25.39418Z\",\n        \"id\" : \"m9te\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"8ybkll44kjw53u7k4fv8ldjvz0ndjhtuoqmn7szte30id6eg7mqg3mt4jfji550pr359nnmbuegryr2f1i1t65h4k3os5ue4333t5roai1on2rr3gra2g3ybip4v7tmftdnkdgluvaca5ok9i3vnr8dtpbxbu159w5\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"9dzp8micv2ronaw8ypmuizaay5ofgbyy4cas8ulohx2hg6n97wiu7fv0dtqqoqpyhlhqmmiwpk8uem414t0xg4kkjgmj4s11reah8tox3iep4m31z2uxkqsrewg898h49dv\"\n    },\n    \"rows\" : [ [ { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-10-13T16:14:25.394369Z\",\n        \"id\" : \"72k6\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"tipx6qv96yqnbwun43onljwxmi8fx8v1uw2o1yu53ep8upf6yypmct5rt0wob0p7cecce3v6uj4ah6k7ptwvw6zs0e89w12gqi90uujz2idx4s1meiym5bqw64z\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"fxz48kw21es33bku70jpqvl6cwiezc9b53fg5g8nhc3ac4r7a13b09gjedenhhvejxk2laeswc1pgri6ecua3wmqwd345sf56muq46aqbhmz82b2jh1ojvxzlbpzj9vjdgjw3l9oya6jx5\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-05-02T18:48:25.394583Z\",\n        \"id\" : \"z214\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"96d2df6ywejd2\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"zq567b3t10kxylqgwvds1t014983ixyul5we3shmyfxdnjm712su4cwo8koegunf\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-11-02T15:48:25.394796Z\",\n        \"id\" : \"7ykm\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"suqxrpkex7iv8wklzz1edyheo2aq61drlwl67ctozowtbs7y3iucmm3bwakuwn3njqhjmnt46zg7uuannva4w52tbkmrwxsey7220qp0vyp9l5d89ap0fd3ou1kurywbpokxux40dlsqk01a6fntjoxgx\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"21zkudf2lcixrfzy6exeyc6dfu5nu7gjhyl9mi82emqnfw5v0tth\"\n    },\n    \"rows\" : [ [ { } ], [ { }, { }, { }, { }, { }, { } ], [ { } ], [ { } ], [ { } ], [ { }, { }, { }, { } ], [ { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-12T16:34:25.395003Z\",\n        \"id\" : \"7i0a\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"a9k0rn9h2lnglqxmk7mc0wg1v2j1efcz7wglurthsilu8xqdrsumyd73tonjyoil0b1ksr8nbz3qqxfzj5zw00y2yo9mbni1h09hwl9o7ry9osm1d33pub29xleqy8vt539\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"3mmlkzfd9araw83c864g9n832tebdyo9t1u2rqrg3gckzmlf22p6fjynxqp1jssw5jd2hexu12iga3di1g0eikvb6mvmnoojks5efsue6wpz9irndylrroyc5rxa280r2kotwr0briq80k27698dxg8zdrpsv9bkqoo0g4j3s1zw096\"\n    },\n    \"rows\" : [ [ { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-10-27T16:22:25.395255Z\",\n        \"id\" : \"kupv\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"tgvrzkzerm3vyrfx44jy7um03sihsfpn7h6r1aey9zcipyoih3g58orqozsu4arwsy3huuk4g68jnmxkvc5g4ezxy3mdsqgqgwdlrracf3dvfxfxegpe0nk8qmgglhoq\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"fmbtq8rse3jsa9j6ol295q69fqdj4t5fren27svvgrsmfrgvk6jhfhejczm10afoao7fyvnll3a5yksttjfwr0m7e639bong293gd9ioeh28bxtkrwl7fxoxiurwrpdzyowoq10eujvbili49trxdynpnfbdyni5nl\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { } ], [ { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 1104386415,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Velit ratione tempore omnis doloremque magnam eveniet. Tempora aperiam sint sapiente blanditiis non. Ipsum aspernatur quia qui. Omnis odit eum iure dolore et quis. Ut rerum voluptate et perspiciatis.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64b6bd3d-efa8-4ec4-b385-c1957da03a56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.395614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "569e9e96-3733-46e9-9ac2-68dc232809f8",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/ex7cd2ngczkg2z9qtflpfx3kbyfmjqcrc053tmrdpv4u631wv4rxijl5pnfxgemiqpvuxzzinhdtw5vhvhz49k8yx4qmdz8z6ze12c3pbaj:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"lm3eqr342zn7ws5385c9kqwhyvnhwu50qftvdirvakjihjek73viztiygipptg5e8pndl38ozr0h7e71gi29gpnkxhf16di39jbmtrz00b7u6t1ujjjv7ecrhrtkl34h6hntpqnov05dzov37msvlkds3cn7ku6u6rpbhf9mee8ox6modoj9duxh80d9bccsrl4a\"\n  },\n  \"commitTimestamp\" : \"2023-01-02T15:36:25.393848Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "569e9e96-3733-46e9-9ac2-68dc232809f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.393896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a610c7a-57fe-420d-93f2-a782c8de0d83",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/05yoizub1d43dih:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2023-02-05T17:11:25.393619Z\",\n  \"id\" : \"aw84\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a610c7a-57fe-420d-93f2-a782c8de0d83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.39379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a5bb60fb-1169-4f62-8378-d9523616c6dc",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/z2564c8bntliiphw1saibbtpt1mz0cjc783kv88smv:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"8yaympscezzetvg5kwjt5dmf3ba2gh31raokg0l9zgxy4fgsio5mf3xpoqbo3v1opjxqaaq44j6icjkbhzrxbjl2vumb9397m\", \"olyop4j95d42thqp8ren9przt94hg2p76oa\", \"5mdyhwm2b3vuu22ghd5i0r5296wre8ostu2zpkqwdgd3wo9db8yvexmmhhqrvrp1qqjerua6hn9co7pwzaol0o2s9cwtc9drsngc27vejjat8pz1fq1oxk5ymm5lyoyxzct42v1vq8slxiaku907qhzfm0y35yaiz1z\", \"lfc131wbriz50wrwdfhzyvw3ekk8t5r3g2ytu1xy75wolqluu8zjgeup03a231nms2u96sdotkkccw7b2y6572dnvc6y564mu54xkx702w8561q8qv18m115mwn1snok5zdhw8t655n3fcwkhxdy0h2xuup7ca6fdm1pm66fau\", \"9tw0492xmnqwd0xhkmd0h843py4e4gkw3t1jpu4vdfv062n3tqg8bnlxzt0h\", \"nzqv7lhznu8e2h6ani22925or3r5i011s636rmehz4cfgxpjlhzam3ul2kfvl0yqbtirjk02mms\", \"nmr1xwxqexf9v145suryk3k4she4p7nwjwfejvbtx7dgjxsv58dflvl2xxnhliewzqwcl5yvwq5o3hed4vazlk110x7mk3h9exm2bhws1jzpt84m51udjh0tq3rl\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5bb60fb-1169-4f62-8378-d9523616c6dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.393587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "de21c918-ac2a-4c55-9459-9a6f53213ea8",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/uzqwgkhhbiggu7y48qc1h54gaaggjwc51aak5ovjg6yb2rkkuiagg300at1gxghu80nvvpuihhaa8k5zqz8cmh84tmqms13kzhq96wgj4llwgwog98xp3x:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"884doue9o3mbbule7xf1xu374l6udvy7yud6dlgb07fg4orrjvfscwq11lhqnlindhyti3tkn5twiivcrkls0q1fiu7rbcwpax7q360lgl7kpq\",\n      \"description\" : \"Et perferendis quod. Vel deleniti possimus saepe quis quas doloribus. Suscipit nobis eum quos et.\",\n      \"location\" : \"u1cd1dg2xcqglgjj2zqndt7iz6ydyh3yiovvzydqzem0sq6\",\n      \"title\" : \"Iusto est harum ullam possimus quaerat in est.\"\n    },\n    \"role\" : \"7qq49gqj1orzn0d5aedd2tqyl32kejcfo76o57fserbvskcb5m9qxb6c5p6vt95xm0asf8aql5ryf80rc5ug3mk25ykzdgtomlqij1dh739107hqpm6f5xxr432xdhhby3euw14h2jkrpj92tasbve878bgxek5ir5ria\",\n    \"members\" : [ \"kkd43kxm6c5mlt50868oy09o3jays4744xphtip23qvmt9r8dt7w81ddvltueuijxd1zmnys8p7b6l1v7ppxunh26ubxktb3aeu9cv9hu99eshx2jozdphk8kvac4y3ui404q95u9y96go\", \"6asuvleoc13rhjskxahea8bomcfveo0ud79iokzhqdqfbrbb7na8mtmj2xualqvbs083ws5f5nyp94rog9phzc0uixbhb4qa7qrykcpsmutq7fi1suwuhyl95ohg\", \"aa2d52ekf7gs116k4fo435y\", \"0ylzz3jm06o\", \"gh18b5xvzv0k51n67isrm477lizez19xdaivpbxdb6vt6nbq4wex4rbx5tdk4btzvqcdc0yt5do9d19jk0zndg27pva46uq8avpyl4g2k7ueb796vzy6ipk0u0254gui6hr97bj461at\", \"7wq9zt80fxugk4s3y3vwvqpzb9tp6m0imsgrsibgy2vaj6uzsw5jkacjf0xlz3puc3fstlid4c8x7lewy34jv91x8runf3oiy8xh7pq1dcrsljvfvdmhgn9a91ptn7g070ldg2v2oqxdnzx64ug9nkvgvbkl93m\", \"811xiqemr89c45sjzcux9abw15w6ne7lftk0iz8jew\", \"6sudza19nbekmvzk317kivhu3c6avpc43zlvbq4cfy3ye2crw9m82e9oetmvgx96e1gub5yx6upyqiapq7a4gklda1orhz4tm7ju09eg1fs0kszabzdmsvmi0wxkhhds9p37dqho2pxsjzc540ajjhsumpud5uj4h7ya2mr5qf\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"skytidzop0lq00ykm4lpbe\",\n      \"description\" : \"Iusto ad aliquid consequatur repellat quia molestiae velit. Voluptas dolorem consectetur sit veniam quas. Praesentium voluptas beatae et amet quibusdam maxime autem.\",\n      \"location\" : \"mhqrf8j7tccw5qe7x6fyjtal5o6qd206s93vu05f65cft5ui4mrpf6qbstfl9l8vkaurhu7c5bq46b0u6laiy9gnse1w5dkw5knrk0i5rb05caz80m6yv0syhf3lz1vo4dyfskhawhczkzjbtu5vepbfab61l1djts2yjocojs0qpfozy4c\",\n      \"title\" : \"Expedita ad perspiciatis.\"\n    },\n    \"role\" : \"8paw9p7cbb1mgsys6op9y93c0ty369cm2ehiza2eg4297m301ti3jz1orhy112c004d01q3yy7pyk3fg71zznxu2kvxy0kxouayjrohuszmoaothq26e5o68d6lmbo2h38lais50fx5nysytri4by7nvo3g2gar5tyo\",\n    \"members\" : [ \"p9mvqpkmu024rph10qcmherce3vzosd7ctg4twxy406rzpfq86t28zwztzlecrdmf29gr4o5qemacgb2098qqs17l8x2r3f8o0\", \"mausux895iy1t91nqy3fhsez4uhkrxgdjn47rzytm14bolur40ynzsb6ym0l0hxenopll5jgaqatz2fqzyiocsxp\", \"9glhdqhfwchjp2cfmhqbwelmxyufxdyztm0gzcx8ucvs308heovmrcdzk2x2f67zas3a382ujhu5v5uc5mlxh8c4z90eed\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2kvbd8qb3dzlnnrgbi63nuitt64xu98zx98cltqtqjz3wrbti7mzaxuw2yoxctltvwl0tuvmlzbwidy4fw5bvtth9z3t00ma8kepowoktqa0t72t6pabesq9it95b7n6hqs4\",\n      \"description\" : \"Officia est aut dolore. Perferendis id placeat voluptatem ut ex quisquam aut. Aut voluptates consequuntur hic odit voluptates. Et tenetur praesentium omnis odit.\",\n      \"location\" : \"vi1dufon4puz2g4nacpj64pozsn2kfhjnbv3anf3q6fy2uwtr5knd1ot1fxvp5pe24om9x8li6jbt6clqd21wxlkz1mv88icljfxytsnaobdos0froiiwdqybfnzsvqz1rdo2enmcstf6583amcd9cwr3qruab35l0cw00dubxcwldsl3flembv72s3t5ferx6w4x\",\n      \"title\" : \"Sapiente non est non et aut.\"\n    },\n    \"role\" : \"8ky7jb7sv6ce35xtf3e4m6a8b0sacua18nb4ncqk7c1dv70wxa6e4ujrl4sxmlswuionotheqnr5ppak7u1kyni58s0ixrun8u1qzsd2ak2ke75bzyar3\",\n    \"members\" : [ \"qj8f709zctd459yradytimuiv3oyj4jdnmuh5ikzwcb3noi5tfxoj8lecnurec7zhdg3m5lku9iqlhrgygj69mepsm4yj8c1uh2pl6mldwnjuhj9d0r6j3rm3e1\", \"dm0p8bahdc4a8e9kbwfkx6tepncxcx89q0rakwr38qdms9znsql8ylswrf4j0q0\", \"x73rlb47rt1s87za7yjb1y28ee2cowg5nfnqk9p1c8gdo1gw3th0jr20t6kqxk1ru\", \"dx1iqfct4ig519ks8bcgc3zfapl3hxuj5cfgirpecv8zgjpa6jkq3x9mlceptxqr1ohec7pfzkhl6iw5wudppmnua1sd21v1bnarjd287jewzzbcsuk9y1slpupv8gseh\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"tzlfdwfb6fao3hfvaz8lbu0xo0abrgwa8m4an9rnet6nc10ok6qjdeiachtr4ijmjmy7x572ax62xli0c8o25b5eulydsm9fleyov072frq5kywr28f22yijm61mf4o8zk5024ev0f5kcjas8knvujnjhmasp52q02fk0mv\",\n      \"description\" : \"Quidem dolorum aut animi maiores at a. Aperiam quia molestiae laudantium quibusdam sit. Ea eaque eum recusandae blanditiis voluptatibus est.\",\n      \"location\" : \"q7nauh27vx028tsac5qqhgx2p9n5m46es1xrfwk4xw9lby5m01az7ankze11lp972od2zjbblgiu6svhqnjlmogl9bhgta0h5vffx807iu2\",\n      \"title\" : \"Itaque cupiditate facilis eos ex adipisci ex.\"\n    },\n    \"role\" : \"6jujbr32nc8s4l5rlruyf6c97ee5jfugvdik8n423353lzpn0rpeiznwxwf5ubzycb1zp1hi1p25nj280g1ibosqv5qpg1ovgsbcjd6aj889nrbauqr9noeubvc22o0gdthm23f6z06k0auam6hgdpufylvcsbujmdy71f\",\n    \"members\" : [ \"8tziokxblp9ydcfuyly1vvtziy9mb08n91o8d05d82lirk62rde7z5e1db14\", \"npa4pwfrtoghsl5219vn1e3\", \"5khw8e5x0nl29en9abmvb9dq10m7ver0ulqmxf8xij0po011581f9bugeqa6oz4osrn9l3ftn4rpvm46w8t2w6gvcbdobbraxtvok6iwvezfm89fsiiv0ro7v4bvrgijh0vtp183yzjftyy10fm4kkbxkdjp9onvjwa212rllpotc\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gs8hanr44nbfzefmjrfi3i6hlbclspskxwpmtunvs41\",\n      \"description\" : \"Minima recusandae qui mollitia quos enim. Optio est saepe quis sed. Iste occaecati quaerat. Quod consequatur unde corrupti. Voluptatibus tempore error.\",\n      \"location\" : \"qwpivpc5c9x30lwobr9e481ko589qcw6wzmygvlr8ikx0zpf7cxy5eiislcctzfqr2qj3uy7edzu0fwplr1l7v98t460ud3na6dtly98ie5egxay6s3oejw3oaqgabrlh16m\",\n      \"title\" : \"Qui eum maiores.\"\n    },\n    \"role\" : \"v6hr5pzy18tn6xbis19hmdqfnhy5ybgdo7gj4bgddmyi42vzae7i6igpkal81ac6vx12mc7q9z9lmbhikqs1jktefj15mbxxl581id3xj66p3dd9ae51wt6ou9kxlc7d0a3k0em6h3xagghjs\",\n    \"members\" : [ \"m5sog7du893vth37wrkju3n0pao6somrdmj0svtbq1xohyj2iqc5p6kvoovofezn0h9qrwph3dr4o060869ootfhorpzvkejebefc5vwr8eoynfjya34o6\", \"rdxvdjsmuqvy73ubvtarxmeyc4wep2jvdw960zv9yysnat0m1ff14bg4utg6hfu9gfgf7njerst75t18pkpdcfg9nhqfvk1gfblhpk05i\", \"pmew6y4znlk0bc39ul8kzhqbis72q9ugva90i3ev\", \"shipx4d7orqc23pcvl0ks6x79k0zdi7jjrfdf9dxyyrwzdq76pd57qskpxfwhi11nbtmjcwo1yhy7lzkowdzaxkzohp0ej5u7jz7yhict4112vsj7rboicxtymjj1tcozgedkfrhycyxac0g08nfaa7hbz\", \"u79u3web63d9w3nhr5vxz39jztg3ofh9w26inxxg8oggr4bxk69f3ji19pht04q20otojy3snat7qub\", \"ybd0rc7rc7joiikjt1altcva4dav6hkbazxa2z8vqcja69mvy75e0cllaloc917ma9in7kl25kutxk1zeppg4oe9n9t4qit158evujnkdqkbo1r8j3pnk0uvjveqsx2lxtjibd2ei4da7m6hyguzskcmt5wiz1f8to7grdhz8oa44e6rjqqg5963jc0\", \"lniag9h8n1bj9678t98ctsj2naof1u6wb7ttvivbhe489ab72yk3p0j4jivsokft9z6xltr4g1n6tsfw26hwer8tzl\", \"hxd1razrb02h486i\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"11sqoeaaw6r80l78frhg5ilddx9nf7l3j83kgbmnu048dxnu6o4fhk6e11vexhu88qkski5l9anrkvufrjsenw7etj0er08xyyrvq928qc4imnki7uzmg0da0ej196f75tfd0y150ag50xdr9h9rsrm967t1m16\",\n      \"description\" : \"Molestiae corrupti est a aut inventore consequuntur. Quas quasi et. Aliquam illo quas ut.\",\n      \"location\" : \"t6cp1ssvnnmalw9765cpwiq24d\",\n      \"title\" : \"Hic consequatur perferendis ab non debitis.\"\n    },\n    \"role\" : \"9frdpwb96vtrva916kom3fs91wy43iqifur13\",\n    \"members\" : [ \"ye6b5y0a5guo5rmy92w6j38v32r89yx0lb953gv2bfcbo4s1tfgorr7f1bmmzjpxadek3esq7dhtelluvb7i7rfs7xuopqpiocdxcb03k4\", \"65v71rbqdgu9z7i0fkbg76umxvpi5yszi2q4ejeweh9f5hhiau9285coxsw83bqkblknp8ssie1l1oh683k4qdz2i6lrnhok3e1xn698pekfd9h4mxsewx86bkkkge884etq342qa944gjpgrrlh7nm6a9lu63uxgr4cpzr4q7rgusm99pfp\", \"k5a55z8yky5a6emm4qdw0s1sfwrok3ckatxsf47vxcp3ylou0savsqjnzqo9nenx3y8hel\", \"gtspuwrms431xebabcffpgihluyivbk5o212p74rwqbc1e7p30f134hnue5k6aojiatz2pbnvhysgxgr7x0qww2urp6eqmjbp6w41gx\", \"awkdh8up7u9dbh60qgmtrwl4siwqe5d2hid7r3t7by2lwsmrg85c3myanuzwp6j3z167ptk5gc4z6jt0nsaekatq6zmzfmq45zogogdo11cgw\", \"6ovxkurn47j8qdroaumfk11p6ph6wuoizk7dycztdaisjhxiznd4n5\" ]\n  } ],\n  \"etag\" : \"voluptatem\",\n  \"version\" : 1973866617\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de21c918-ac2a-4c55-9459-9a6f53213ea8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.393495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a6c9bfeb-7f25-450b-afd4-53f0fa269c7e",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/pmai37vldxiomdygkq553cu0m51jtbyurahykjkhrn0f57bw9cs:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"1jlq7pu4ujqpwjobfoz9es3zw7ad7ajqc\",\n      \"description\" : \"Qui laudantium quia. Veniam et non inventore expedita provident. Et voluptatibus quia atque minus. Aut sequi rerum et ea iusto. In aliquam voluptas.\",\n      \"location\" : \"44109g86j7\",\n      \"title\" : \"Voluptatem harum dicta veniam ut officia.\"\n    },\n    \"role\" : \"psj6orninique1hcyme4\",\n    \"members\" : [ \"5yogeu9uc8ncw9kg1w50mk7xgiwpp28sn9v6v5\", \"e1wtj461ua30zjs8qmoqx01ei4y35v8bg5smt8no2pzs9wr2e47ph2eooof0\", \"07i9i5wylotue1re2zdlcuo8o4o8nsy0x5eej2j41kc48l7\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xkg8uapi7msgzlrdgapl1gc6f42bch9x1zrmy46koqdq2a56xb8bfn4zvqgq0swm0tq2vxiptvursbjnzbhtpbtdmpiyloh426qznt8gaedvek4rb5c7foqe\",\n      \"description\" : \"Sint voluptatem eius cupiditate quibusdam ipsa aut quia. Non quo qui est nobis sed. Molestiae omnis aperiam aut commodi consequatur. Repellendus nulla odio deserunt eveniet. In sit accusantium a qui.\",\n      \"location\" : \"6czq36t3qjozpqy1dzfwldk2x2qbb3z36t4o982x38mx827kx5i1ayqktpgbb12o2c3aepulkbgnh3lq213s1cizognp12szp7yaz5mz2n2uborel8swxzmhaj4hvd32k7zmklcmsij52\",\n      \"title\" : \"Quae pariatur molestiae veritatis ut non est.\"\n    },\n    \"role\" : \"kdau50wydbvvkofoh88ih7e3orgbeodnxocf1rqzpbznq\",\n    \"members\" : [ \"2ac48ouhdr8or8jq9bdjlkft61e9wx0i8qrdvig304u9z6w5aztcafjwiqgkgu2eoypr0nw7e3slhhdr20jne0oqmu1qkhqfylwq0128qycroatwz\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"jrqotbp1qik52hk0ngddna8kb0wrbt021doqikt8svc2nqj1r9j1it28w507mjijdxz2hhylmeu87sxe4w\",\n      \"description\" : \"A facere ad id mollitia. Soluta ea quo. Qui est ut impedit qui aut et incidunt. A est et et quia. Qui quos dignissimos harum provident et eum accusamus.\",\n      \"location\" : \"bc3eispt67ytf92mcm935jjud11pmtqp8fufnhert85o0i81wj6ymxarect6jorppqmneicgd2vkd8elvtihgeu939plmm72ux3yczssg827naw5t1ptscw1bl\",\n      \"title\" : \"Non voluptate aut aspernatur.\"\n    },\n    \"role\" : \"pwb24x9y2mxelf8uwaqjxeh7zwi2683d5rsnfbxn3ky0ra6l90beb1mr4uj\",\n    \"members\" : [ \"0kijxav4id9ye93x56bk0iq2ljqlf7v4rcq4ixewsc4q12myv5\", \"l1pmnpswtk611curn4dvsyorwx464r2ncctqdml67umaf1mj4o0i0qa81vu62mh7sh55n5lz2dnqakto0zxad9460xuzae95qrkis2z\", \"w46z9o0bcaslaea4mwslj1jpyhgv0hxq8phvbgbntfsh5fv7mat81um57iapve7jam8eaaf5phdk7464urk7zv8993rzcx81ozg\", \"s6grtgtx3wr0n0p6amj5isk7nm0hyvicqjtg7atw07tgxzra611c7cbz0v29dd0dws90bd2r6eowpxd7r18lne7msa2j4v66tlgn849287vdsw2ss8gsaz2up5lb3omhduztf0a5ddfm9cdqbxinaya8sr3qk1nnojlro4lfr037lyg1on90p81cy8qi\", \"ff26iktc1j2487cznrh3r7zmvk6k5emf3nzg9uttypntfsk81a49e2962h9v8m1uj3gb17bs7pp43ga6gk5h7ermzokayok3jzjmsiqu6h2ckd7vm8qfuywrsf3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"tv4dgoq9iw2vrr3l9sn754h4ywcqow23k7jc202ov6q3y9ftf2dfa1q5f\",\n      \"description\" : \"Velit vel maiores esse quam ut tempora accusamus. Est et omnis vero et qui. Quaerat odit tenetur sit quisquam qui. Repudiandae ut magnam debitis. Fugit et libero cum est eum.\",\n      \"location\" : \"tme91hz8bsu53vizyaekqua6tq7xv85l6iyq7oh4o50eo2z334lbottgtl44uflstuqnygmqz2ssver993z0\",\n      \"title\" : \"Voluptatem deleniti quo ut.\"\n    },\n    \"role\" : \"nhdgpqw396gjogpamigf65dhtlsb1lzgnp1r9tadujc8niegoabhknugztan2r1co1myroz6i0thzhn3dbe5k8dodgzxh4iia0nrxvcumyg1fldxlhwxlj4xqed5j0q28qqn3bwe5ster5nlrl8ibr6c3iq7qy7tzll\",\n    \"members\" : [ \"zbhutsv5ctbeqx3mmwxlk5a9dq08xo2lnu6asj7uw08mz0ugsiej9t3vawf6r1wpx0rxgdha82z\", \"7ij4pnt6m02tx83pv66y9dsxs8n95ahes6o8m1hbml3gppprc6gfrfw4tcjs3erunvxb5smrltfgk4pdiu6653wkvpf258fbk2wqzqxorz5gz3pij\", \"47wb5rfilai518coqlsadpu7cqo3uu2ytcwg4ipfrp9v7h16jgo95ye77yjtt86qfik28i0nnb2bbck9m3dezh84sja73144t\", \"dfqhds2xtv1vjqhlt9oieek46xxzny2vbo34kkp1yzd2r5of2nwqmo7om0w9l60ns8z2\", \"9ztxbwqsra8gaj3tctwuxac8bqi40yk24gjz10ruruqzftzkbwyafk7w0jwv146b1bm5ko0eh8lrdgznlnmfc7w9kc0yjdvh9gwfgc215ux5q122engngqjn4n8z02ftzrq24djmy6mb1z50hi7tayc1fim7h3nf43fgiv9v01rv2vy2\", \"ru6u4bv1mcee98bsjesag8rdyuea3ls3d2ii21v1rieqz3z78y9rmj33b9gbodudm3kg1l0myspkr6kse6qyf92cyqdbdqciiixqtfjxukgwe3gc1hkkfol9fugsmcvgwi913j7t96f6nz7psz3xu3jp2\", \"n8le4vhmxfial3hcuuhxohvk9eaq9mdtjwkqf9j0g8ij64whwcwsf3dtrti1wqwvdm82xhpdyev0vv4xf4194d1yjqly9meui7bkifo\", \"5od9wdst0w2xk1jg2gay2nu5rzlbvz8lg3h6wl8ttihn5fs3em31zxhq6bkam39i5yg8zbmmv1rgi5hrxj88d0okraharcmi88c19r3zsh318i9p29ovs30qhk23uvliv3qk6u2i0t6c9bc9zdhi4jr65goi7nu2ftmhug3xs7kvvbre831ax3f9aonqu8nurs\" ]\n  } ],\n  \"etag\" : \"necessitatibus\",\n  \"version\" : 162675680\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6c9bfeb-7f25-450b-afd4-53f0fa269c7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.392673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3c22d730-416c-4880-9bd1-08bcbc80acce",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/83c46m4dw4dmmr2k28f5fbgh5me62p04gkuvgwuqkbnkdzbk47u55vpg3hxwjhxl4t3h56f4dkt65c9nbod2ar33zozo7zwbwv2iay70iibop9e8g9ydthbhyoyi23x1vn5vn3b5srlb7ikonsfc6prb4rj2retc2ryjwqh5612pijyvbuhpg/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Oswaldo Simonis Jr.\",\n  \"error\" : {\n    \"code\" : 1947176435,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Autem cum officia dicta tenetur est autem. Quia dolorum itaque magni tempore voluptas aspernatur dignissimos. Non nisi dignissimos. Enim ut eos et voluptate in sequi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c22d730-416c-4880-9bd1-08bcbc80acce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.392073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e28147a3-a84d-405c-9ccf-9190cd818d9e",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/bjg1r4htdbs7emghklohlrd7w3y7ksx4smy36whrdjd5fnwwqlbs81ue0nxglaiyoww8p65q4zrzw/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"rscmv0c0rj6t6bqud6uv4blj7kdn6kcn35vbk8qluec5n82tpvv7wvo4md7sr6qsrjos0grvxmm4t2zbf3mdijo8km6f78en\", \"qhofmjvnsqgmnuxn1qefg3tjml9vu88sk4mc022tm74qmfgjo8f6rbzwn1yqgzcmuiuqg0g0szi1l1s6kgb3l9gzwzfgbk41ij7whmn1v8rwe80a20evjduyi7h6n53cfoympwy3q97eej756au1d6q0vuzcx4tfmgn1ae5lqn5g5gqxblxy3lt46fqhb6b6xbt5qvg9\", \"szf2mze191o094jdg8p7lxvbnllcvcrdnvcqbvi9mtvneysgtv7hmvewonvticur7kwjl0ui5qefd26fafxhp48229eetodlptq0iuz8zdzklcq0j6bnmfxrxjy53lbq53poshghfu3260brv4lr2anqsf3ig512npes252be4ixcx\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"p3yw51u2i2r0ran3mlei2j3sxq28i8yznm88m5aglt8blsggsy5woc7z0qu0p5gqdx92p8yn5qgmqy3msiijha94bxdj1lei5pj7larzoc8d2\", \"8xd2oe5dll6cdmtt71kzkka46b1cdzavbc1oo8sfhypvuco9ka8wiqne8s8nx3gpqfp5g\", \"l905zr4owyj26uwjvzb4ie9hrcz5ldltyx2c3b7t3vibbeh9kpbd5zzkf7bpq20jqahth92rhy0j2kavxa2jaevwom3e83pzm4qkcc853ijmztc1fud9bh4gkm702c1ksjvl806xldlpzk3ei8u6o7zgtoco5m8etqu82t37\", \"r2bm2fscettohtl57uvhwqtysomw8pi3zyodvrbqfz6cqxp6mzwxwennkecstzq291fg40xzrdq69mxcy9u4781hp4wo2pnk32hcoel7vq2hgtp277wauq9hh0ho4urnlhs\", \"kcumdje08bvh0z3guec2eq4vnb415epkx5xug9qtkb9aope6n80xl47gacm2w4la0hox4mm78uwxvn0ld7vp\", \"4q0tq1p0m92j3iqx852nhki7sctgj8\", \"e8aio6a0rqut3n7v2n8ioryg9fzpi9egr0juoenun3adupxor6shx9orvpzrmrskzfzivifzbsqauheu6yw3ztrgyh0g21ljm0xqigh0c8xxuefrmqxnr1ex4qiq8jfwood0o2nrs7glfabgneiedbb4oli3xl7bcagumhjawy6c9k4e1rvkgcocihbbgnlco2xobp24\", \"f3kpcsyj\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-08-04T16:59:25.389825Z\",\n      \"upgradeTime\" : \"2022-11-27T17:30:25.389855Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 996075389,\n    \"createTime\" : \"2022-08-16T18:49:25.389895Z\",\n    \"displayName\" : \"Sal Klein\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Samuel Olson V\",\n    \"nodeCount\" : 2089731677,\n    \"updateTime\" : \"2022-11-30T16:55:25.390009Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"i0gtt16rbcsekn4bvnsgk4afyuc80yjureb6qiixqwtquvjdc03af2f9ogzuc1blkofmo6lk6yy727qf7h24t18gi7uw5nl8igxebuyu3yxkwkpyph5gqvemxmrnx45tclu0jmmwzg4ihu3i5gw9ny926hcazkid03cgl5ki4ppjzwccoirsrr8zcwr68m\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"yo4ahd4bu82tdg4uyf2uxtvdkzm7ogog0d1r63pdmxm0cy4yqcddwbikpdyjzqymisa0eporwenng4zz0u0hgplax98ncx3z271x6hka8j7oky52eu9bhlbjq7c5wr2o64kdu6h15b41s59a\", \"nnjj82hxhuvgaw6k3xro5dfi7j0t5lrjcemn674lx4djb688gazj3nleklg0ny2ynyyad0va4ngk6b8bk6bnt76l5efmt0gpafasq3zkokhek0irswkvyfizlzqkw17ciricwhcv6qqnh1yea8csewlwabktbzpkjs23smyom9lo3ukrnb6un2j\", \"h106gzvzguc0tssxtwfbtl9f5g390h1blngmnl9n8ce1xilei1jcqmeyke4bt3o4js7xb6fuk2rkj44sujgp1cn91audqz0ungb5n63sr9szrnhtjmiegcmi78i9qiznhr3kxi7oln0t1j89szwg1ll3q4f26b6pt\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-07-18T17:31:25.39008Z\",\n      \"upgradeTime\" : \"2022-04-28T15:58:25.390108Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 722620788,\n    \"createTime\" : \"2022-09-20T17:39:25.390156Z\",\n    \"displayName\" : \"Brooks Schmeler\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Dede Gibson II\",\n    \"nodeCount\" : 2063993723,\n    \"updateTime\" : \"2022-12-11T16:22:25.390266Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"qquz7uiqbdbafn3irw73lt47sa02p9m27jxt885g580qbf3yhm1deom2v8txywtzmf5svo6p\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"ndj8zcvylzsx8sndeuisydls9s9zgvmau9x6fb4910m4yoigjov3of915bgzi4\", \"ctytcqvlzvgl85lz7elpjcdmzx1\", \"jec4cry6wz1pwz6mp95z9dx35jerh2\", \"fahwepbtir8iklds4qr85zjo4gkyr4rnn7ch1y8o3tz8jkiwybvwv7ww56t8j8dwwghpou1r2jnre86425l1ax622qici65kh5u0tvpd6zuxltf119mzzxplzlbdvvcybt8ei0kusuy3tw15j6i5g7m1cvs56\", \"kp8nep0d6sagdv4nuwtdruaau6fdiaa37gzwt893qmxs2e5ntaco8mc9o7pbgqmxy6mh1p2523e66kt7k8ho4ace3uusuo4x29jh6963ewkrffq8v6pdjf5ecaf8rcx9dvvdcsxo8skym9fjv5kgklz72rfqdi7n7j98ba7mvb6xfvwajr\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-10-28T16:38:25.390339Z\",\n      \"upgradeTime\" : \"2022-11-09T17:41:25.390368Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 277199122,\n    \"createTime\" : \"2022-08-13T17:43:25.390407Z\",\n    \"displayName\" : \"Tamesha Greenfelder\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Shane Zemlak Sr.\",\n    \"nodeCount\" : 2001949120,\n    \"updateTime\" : \"2023-02-09T15:09:25.39052Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"yrvoysmm43geno8vx972dsgiq6u9l4qoc396xxrayeh22amkhtwsmh78i83pbjnlb8uf6x5z90brk4mnog373i5hjtbe1prv72gu4ss5vaze0hnxyd97sba1rarl40vhg82zru30b3kiarewrh4\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"43clkf56hkzmf4zdvd3bl72yp4mrztf9egd5\", \"2jy5jxphjafqrie9u3jumlq4m13yks1sj4cf5pv3s9x\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-10-18T17:21:25.39058Z\",\n      \"upgradeTime\" : \"2022-05-20T18:36:25.390608Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 676862814,\n    \"createTime\" : \"2023-02-28T18:48:25.390647Z\",\n    \"displayName\" : \"Jessie Gottlieb\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Burton Purdy\",\n    \"nodeCount\" : 268656111,\n    \"updateTime\" : \"2022-08-05T17:48:25.390755Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"s03jt5ft9iv4j6fx2v6u0j5n75sej58czdxu2nv2ipd7kv9gmzv77b4nh0rsd1xvreyrk3syulzm3jqrafylsz8grvmopirwoxb7dxsxbka0m2iqyeywis5h9fmepbamnp4hi8tvrdemvbyl58gznoxkcym1v6n37rcak2tv2kqbw0kdbp4zevt\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"rwnccgs7v7qhtlajm2oclq62bz687d31v6hoslb7rwz753l25q4k9eis3vrbp6e7ppoqrqu1h1986tx426bcu4hfzxkye54m3jp0jlhlppiu3\", \"mwc32xn3kyxbub6gupsmip0kgz1qo3wyt17q57r70lw4cldtkxshny7rwfb237xpbcnbk5dup7tf2syuzwklh1t0zn\", \"kjgj2ss4ae3ufzomkiis8jvrck3og8maqbqcb1idm4pmkgzdhqf1xdpbv1fcnrra0j4h8l2elifnsyxqpzugzog66\", \"h1hxxw2bm54qotryjbuunwg1ymoeueqte5jt6wba7se8wl4e8saax4banxfs2bs3422prc95shza50jnlyaj6yc1gs745c9c58o00m7luzrt0wj6iwmxp04myb0zwhhh3637ix5dcvux7z1hu\", \"a22i2rx79750es16l3b31rbkk2aoujmdibmtc318u4jdqsrfwap\", \"816ahx72riimrzftxkgrbx6qq622nqnpzis7hh3h1lexmvfeediyuzjjp9pm26v3lozlk95dbre7m1c1vuvpyeq2nz83b2zovwrynlb1lgwca0oyiamg9j1827blner9cqvg9dfy3f8kjhx862wzp3akg7l43c350xrlohcbq9\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-20T17:25:25.390835Z\",\n      \"upgradeTime\" : \"2022-09-13T16:48:25.390862Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 1230075414,\n    \"createTime\" : \"2022-08-02T17:36:25.390902Z\",\n    \"displayName\" : \"Russell Boyer Jr.\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Otha Murphy\",\n    \"nodeCount\" : 765171913,\n    \"updateTime\" : \"2023-01-18T18:17:25.391012Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"snlebiydzo4tm6qx9uou7z69n290crq42yv5d8vszqmdfo1wxkcnkaz2mh0r8briclucjugt7xabug2228wi14efp9u6k6gwpf70soy60lorlor98d33zef6pka8ysn2tw2wn5bxi8iwa1623sa\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"cxcwhl0rbsvkkculxi3xp90vnfcopz0kyyttb8uf13m7mrezzirwivonhkdyf9tyat8ub12b70d8udx261vxtwwtwv0f60fsxpywsc3x4ocfoqvglz4tgp73dmw8lk5fizjbtx1w27j4927si5avye9psp6lf9vyman\", \"88pnor1x4gf37ytl5ys7x1b8tgwl5zh4f13h6m1e478sizc946ilnqgmlzjnjy8m4nrx9m0y4v3o\", \"6h7dxnw89g514i093rl9vr0sa03hfaxbsanwydyxvmagvi99grnfhrj390sqyl6odyslu1y1tjjteli4uw3lfh29g73dyi\", \"3xw5ulvovflepzr\", \"kvsv35a7us8f7wiqg30e1mgb1lj5464c5ymsbov3a3u5kzz3mbpgl6gkqs1tmgr5w0hzd1eyle55n8dgbk2oh1jif876oyq4s15aove5mwj3aj6qkmag9bhv1a53ww2\", \"elh65cgn4n53zx511sqfmoj0fyxgxxxf0vjrj2jxexezoh8pn5hi8x6vokz29t79io4tsb0aiz15sqyt2y6hjba3zk3hujask8xyezkx1hsnbqzx7ktgu3z20wid8330mdbn76abumkn5vgv2vxuyfb6dfxq8ipqbmgr9day3fih7o89z28k18kn4rywo\", \"3rwgflrlkxzz86v43evu9wl6azjjzyocjr3c43y9rpd923b27u6ofsj1qlxtfjfg9ctqnbj2d6pqgqrmwk6ryhls869ldujldkg26h7jrzou2t5kh4h2ei35jpw3gf59gtk5cadl8eu94wjrfi9t\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-06-26T15:07:25.391095Z\",\n      \"upgradeTime\" : \"2022-05-27T17:51:25.391123Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 2073063345,\n    \"createTime\" : \"2022-11-23T15:53:25.391162Z\",\n    \"displayName\" : \"Enrique Turcotte\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Marco O'Keefe\",\n    \"nodeCount\" : 178261203,\n    \"updateTime\" : \"2022-09-20T15:32:25.391272Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"ox9brnyhum0pl9d86mgqvy8w37znk35tqtpupw7m\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"v58qur34k3swhz5sxhum6c447qmmq5jxkza17\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-04-23T15:31:25.391332Z\",\n      \"upgradeTime\" : \"2022-10-09T16:49:25.39136Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 1535399169,\n    \"createTime\" : \"2023-01-31T17:19:25.391401Z\",\n    \"displayName\" : \"Glen Marks\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Carola Fay\",\n    \"nodeCount\" : 1076741360,\n    \"updateTime\" : \"2022-09-27T16:00:25.391513Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"f43osc34rfuu4l256ptilijqvwcx9y58iy55mtpdxjt0y2d9mv1wmm67y4rl8c7sdaw\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"umsmbkwt7svn98lyxp11xrnv5fj8rswvary8oc997me00bloi6p9vy9h6cse0gcqhpterfgbinnzcev07mhz8qb00dqef3ule8ewkqmn4mr2ju881qoin9lun7hp3tg6114msl8pdvlhhjo3qpur9tutihrqhyyktvvvj05l5zplf1zt773hdff4736i06yjw\", \"6hleosocidtqs6wi3wdqowhtv6vtlmy33dda1wurmlgvmvz7jlywx6hrqihcw5uz524g1px0guuhtulzy38eibwo4i9wqtmgajtfgfa7rlcz3qhvw4m80nje51j49savhp147a7ljte\", \"1ankft26x62heomv0reopx7341603fxsfse3mlqgepfs2drkacw1gno02de2wksbpxsyfqu4ojjf4nhui5no2vgpiacc8gqzlv218zencchv12oi961t\", \"bcy8g9o6gqacpef0umg9qwdbzn06bk29add48ufda4uwlx9yc364w3wy1u52jeerqys2wkooeka0bkp5gjq3jp82st1ne103w97z0sbao3efdc1bciovlrcbbwk5wt7xotpbst8zd5wu0ck1so47c9wxy4lihm350jfl8h0jw8u\", \"fklyz\", \"64jxfwyauiikiai3l0qv9qk224qma9omgnbxvax2muqys68j6ga1yr7jbo69v2zawdd5izup8ij6j9cuk6mpthi5ab1va9mrlkniqekvm86nsxniou483bkg0hxg9ieqt3a0a8n8xnnaybx2i0ide224\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-01-02T17:35:25.391593Z\",\n      \"upgradeTime\" : \"2022-04-08T15:10:25.39162Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 1894920101,\n    \"createTime\" : \"2023-01-26T18:40:25.39166Z\",\n    \"displayName\" : \"Man Klocko IV\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Wilbert Halvorson\",\n    \"nodeCount\" : 1249358896,\n    \"updateTime\" : \"2022-06-17T18:32:25.391775Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"lsauuikb772qwzvgbt61z3yzwhmd07gj5egj\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"lcgn22ugtetiiko6psvrxtda8hcnssuw8csxdnfi55aya9jllf14lz30i1wdapjiy3vfopffe87ojricmq9dfd24uv6jzuxvw4cninlz2i7rx0di8y0w61l94q15qohls4bj022ijr6g3r3h7j8mfhproj6nol3iv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e28147a3-a84d-405c-9ccf-9190cd818d9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.391904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9f0c4cd3-b110-4fd7-8418-e5f2e5cc14a8",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/295xg4fxen7cpxvws7nvnqaph62djj812937y27aqj72rvod029vh1bdcwjmqxv73b2lwo32yjksoamq3kdhxjn6jaqb1mlr8boo8e00olu8uzt6wqvpd3lb6lrb4br4m8e3ct51c6xhm12t8o77ja2dwec2nv7r1kw5mwe0dilbto4d/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Linette Cassin DVM\",\n  \"error\" : {\n    \"code\" : 1114973182,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et laudantium et id enim repellendus. Dicta quia eius reprehenderit doloribus est quasi. Maiores saepe totam temporibus non. Omnis tenetur libero cumque velit et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f0c4cd3-b110-4fd7-8418-e5f2e5cc14a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.389724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3078bba7-7c5f-4c6f-9d0d-403fc4fb74f8",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/fby2r9skonngkb43lmmg24fid39afvajtfmh0pcez8cc0rwoxnhs2i9n56veck8cj6xz616q8dluzbc9y46fdckkb2xgvsjhtntinf2x8tov2bzxu2srcwjdj012353omicryxh2213vf7lwmp96806nnf5tnocd49jevhip41wi83nqtv85c2e9cz7gtinag/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"gkpjhcs8cl7blzswpdchx86ooiljukx3dc7\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Kurt Harris\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"8u68nua47vqwssu4wbfqhs9fvosze1gwxie3r3ep3pvsvw53pfb07ywddb4aavpkjz7gneq89amvv4q8uuedvcq6gbwxk1xlbyxa\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"vu3t1ptlmjkqggi1yyhz6ef4mbjdijn3ai50pm15wdxqvqwaub8mxr7a6kmun3hgttbk6fh4\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"c4ml0epi9jkd4mnca04ddkifr1664bzotj0naegr4lqxv0f64sqqr06uig7l99fi1p7rgir1qauwcvrr726yr6k015vzie\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"5917elo5eonw8pv7n\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"s0rmy03ovkhfnbwxidzvninmavspbfzyn3jap21rqgj15y8cfym2kg29jyho0dl76iidhtza1sgyu81x902dbuj9ucco082k9dsddu0\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"kopwz7967qgfxl0p3yd1f10g05tv4bwd2tgyt6sficbtyfnzv6y7g9t82y6bic5p1xg573sbjw8s5kwlx5bvo55lya4v36fu0qa4hft6s9np0lzi1l2jeel35xeu3ytlyjgcn\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ibtflhadrur8slf3uh8ukhbl3jx31ud92grvw4o0yrw1h6djggm6ehkji9s2ncgpes8cpqyx2be6pyanzbt2ge6tg121e80dl7ev5795ebkd9fai02e9a893wiba7yuopcogfnrj8783jfqkme55hnbqvtz3welvropffqw3\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Ms. Gerald Pagac\",\n    \"reconciling\" : false,\n    \"etag\" : \"rerum\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"y0h7yo1m27xfu0cuxdbjzky0gnkdf1ia16l73dtfnm7r6fo010cediz329iorexmf0g\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"yt2ru77q512i6dkf2l3ivblvk258o1ios2lurrym54y67ahrjhnjwad72w9ek4ml2tnvtqj0q70ts\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"sfpesvzye83x0i3pd8swbdjkikstqoe2vpdfyw4mv1fi9z607dd91tkhfaypvzl61y05k757pu027k2t3nkt9cqqw7n23q7tc375fsm8s89wvgnrxvch0rv4j25jj7rr2np6rmbt0mjd5ig2tkht1v90hwfhr42o9qvt7b4qh0p5fn6yrjnd1657mkqs6yswr\", \"rtmzl34bl0ldf2228lm7wcjeuutdhkhergy5wjkcaw8ghcxyme4dgbcgn8athivfczg9jnun1h46qi26rl8r6hgqkd5hg7pu6r52oo\", \"1sssyux50aj1hap3hiib91ahd3oqfixna7ejyomo4f3qe8n\", \"q0fpxrlm2regb2et4ce6gfyezlbelw8uop2ymeklan8nhccr625cr7qes8uvlmrzzgn18dtx8t6sxbijfjpclhef0jbdxi4rvcjl73ld0ya3b6jkz3h5ydf2kmg3qmz9gmwev5csd5653e4p9j5c7u074djt77z3xwv9p75wk6oa63pgflof3ta1jtqkc4d3vw510\", \"lrs2yso41xgpw6k1x2mmxvh6okigkj7is65x5cy0w97gdidll3b3nr802ibpfz3wdd6045yh\", \"w1vwmi79ez9xu1slzn0n28cclkn6nw0rzm0tylim7p90nwit2v6s4d45npknua7ejfrfrl0ciapcqkoj478c1098c3vhq3gvwqhadsk9v6zzv4l19iysqs2ppdbn67nbamwnkjfuhjtdmlykkowrlu3\" ],\n    \"baseConfig\" : \"n3x14zch24wiwv2nlt53zkfcngn2dovu7ka9i40o5h3te0vbfxkguhzk6jreulbnb66\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3078bba7-7c5f-4c6f-9d0d-403fc4fb74f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.389565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b92cfcc-8cb4-49bb-a289-b3db947edcfd",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/siabzcr2yvt9fnloz0n3l0z13u61ynvo68dnlbty4hmqs3tcqkks22jpfzpuzc1zn9c2utg432gkit3qe/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cortez Tillman Sr.\",\n    \"error\" : {\n      \"code\" : 1987567662,\n      \"details\" : [ { } ],\n      \"message\" : \"Error delectus ut aut quas non. Id a ducimus commodi vero maxime rem. Tempore ut tempora. Tempora assumenda omnis ea odit voluptates quas in. Aspernatur laboriosam dolores.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joseph Powlowski\",\n    \"error\" : {\n      \"code\" : 1353570296,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ad laboriosam et placeat voluptatem nihil iste tempora. Officia iusto ducimus voluptas nulla adipisci. Similique dolorem et. Inventore consectetur aliquid ducimus qui sit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Frances DuBuque\",\n    \"error\" : {\n      \"code\" : 1149153884,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Autem unde eligendi ipsum. Assumenda est animi. Error eius aut deleniti dolorum illo eveniet quia.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sindy Hayes MD\",\n    \"error\" : {\n      \"code\" : 999330642,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolores officiis autem nihil. Labore placeat pariatur debitis aspernatur sed architecto. Quis eos fuga iusto.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Arlean Bednar\",\n    \"error\" : {\n      \"code\" : 1567884029,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quam fuga quisquam. Earum unde dolorem eum. Et a quia nisi numquam.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"lv2arxw5jh401na1xjkfmyn2cicth3ccyk7mabzqlpx136wivxo2upv5xiujwzv4p6i9xfqjea23fz9d80vz9iqama2ryrxnycf9tndxpy52fja6hmua3zvp15yyijnls39gd5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b92cfcc-8cb4-49bb-a289-b3db947edcfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.389131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79474175-17f0-4b5a-93f0-488747e82a21",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/dh8c55c60piq774208aw544fyzjm9jg5i3g8ubc6ydsuxqbss427qtnrnou8uie32ylj3ehz2glnzu5q4f2wzfxw1lx9xf1tvqs32ddbi93ggne3wi9fcnb0nn88p0dp75c63w3td9sa5pmewg3zexldfhwivkpe1854jm22jjr1twsx/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Antwan Fisher\",\n  \"error\" : {\n    \"code\" : 1107821124,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Totam repellendus est. Commodi qui quo. Voluptatem et culpa sit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79474175-17f0-4b5a-93f0-488747e82a21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.388606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32f2ab2e-3641-45b0-a217-d2d15259e5c9",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/5c6f5c175cyzkzve1nm3tvdybbp601pffflvi29sry7sf7p6k5ul4jhbhb7c8a213au86a4u8lvohru3r95jbw/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Werner Hilll III\",\n  \"error\" : {\n    \"code\" : 378991193,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Nemo voluptatem cum non porro pariatur incidunt aut. Velit consequatur ipsa impedit provident et voluptatem nesciunt. Rerum nemo vero et nobis sed.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32f2ab2e-3641-45b0-a217-d2d15259e5c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.388455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7eeb73dc-8f9c-428d-8207-e63fb8de4ccc",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/3o7n35r6n703ymdacvwwytmgu1k7vt9ca0a0c4qnxq2ohnobe113d0swub8jvixxc1mumx0ybvfr3ncv1u1m370knovj3gxn9zoziufg9mqubgkro1l1xwa46pndkz3yleb1fxlte2fsxgtb1cc06p1uz6y4ddc7ohvmipmogs2x2mr2vh2rja2vmiub3/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Lynn Keebler\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1954282315,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Molestias ut sunt. Voluptatem cum officiis saepe illum. Unde atque numquam enim aperiam.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"13ay3pl0le5xy8ukq135c9pax7dx\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1031171216,\n        \"details\" : [ { } ],\n        \"message\" : \"Et quam fuga delectus maxime et consequatur. Totam dolorum et pariatur quia a. Expedita qui magnam animi consequuntur modi. Quisquam excepturi dolorem voluptatum culpa enim quod et.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"c0bemveverdq6sgbnion8ppoic9rqwqxhav29zxns0cu0edjqauttb0gwiivwzgnfqwb9w9ydlkfaqgw0ofbykbod6b\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1636306705,\n        \"details\" : [ { } ],\n        \"message\" : \"Cumque consequatur animi. Harum doloribus eaque recusandae nihil ex. Cumque corporis voluptates. Voluptatem est sit suscipit quaerat hic.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"31p2wt0rt1y3hmcophn9dsplbudgds5eeli0nif0puhy6xbqiiiy3jeypt57oohq44gwrg2ndb0op5s10smbd82g8t760k4sryqzocfls82qmlbfuiuop6orssff\"\n    } ],\n    \"versionRetentionPeriod\" : \"qthg7qb63my9n4xnkp8crec0c9tc9ydpfh951emii2odlojwgpn922cjib4udlnj0cd2m8atga0y8s7oax5uu6tiuedibpxuv2xyqrzdfy0vbao30uwebeulkg2djer65ctdmgwjp2\",\n    \"createTime\" : \"2022-08-08T17:45:25.388011Z\",\n    \"earliestVersionTime\" : \"2023-02-13T15:56:25.388041Z\",\n    \"defaultLeader\" : \"rk3ugjkbhz0ob0xwy8orp6jb54vkxt\",\n    \"name\" : \"Rae Leannon Jr.\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"dnw9jn7m9q1x3wve1ett1q8vnc\",\n        \"createTime\" : \"2022-09-12T16:44:25.388167Z\",\n        \"sourceDatabase\" : \"ll99tjszk6gft2d6kmihjbzuj5tlwzzimii28b\",\n        \"versionTime\" : \"2022-11-06T16:36:25.388209Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\"\n  } ],\n  \"nextPageToken\" : \"xfxy5bpezn6xevueg2z57z9qi44h5x6l6egf235iz0wngxgzyea2ukb56zkcsgyl3fzd4iboouz5xqa42xyr1ays08axp03jrqm5xsvt2bb19zfwsioc1ht3m6gm2raukpkzsxaswvk09xkrons8wt97i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eeb73dc-8f9c-428d-8207-e63fb8de4ccc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.388299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1eb5b372-8186-4fd5-bea4-7ad8b032cb5c",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/a2j7j0j0ksijvn9ik2r9qot5iro8bte01grp09468hhcxadn/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ex4\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Andrea Thiel\"\n  }, {\n    \"name\" : \"Jene Barrows\"\n  }, {\n    \"name\" : \"Kina Hagenes\"\n  }, {\n    \"name\" : \"Mrs. Hassan Purdy\"\n  }, {\n    \"name\" : \"Marty Brakus\"\n  }, {\n    \"name\" : \"Clyde Casper III\"\n  }, {\n    \"name\" : \"Jane Marvin\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1eb5b372-8186-4fd5-bea4-7ad8b032cb5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.387683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4856d247-08c2-4002-bd45-941a9cdeed9c",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/749bussjn036cmbekfioebcvbxvib0pci89oy65v4ea9snhqb6vtt19ibnmyfcdnq3bccsy60oa4qwdt62086kk2sj3kjvucp00xe9lwrz4ud6r0/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Willette Koss DVM\",\n    \"error\" : {\n      \"code\" : 1333541755,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Pariatur necessitatibus qui qui eligendi voluptatibus recusandae excepturi. Assumenda a quo et qui laborum exercitationem. Fugiat aut eum et minus voluptatibus sed repellat.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Minta Armstrong\",\n    \"error\" : {\n      \"code\" : 1069709834,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Corporis unde animi nulla ut ut. Est et labore. Doloribus sit tempora.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"zb02beyw02dhj13dwn3hbn0oot7d1o6i1bwu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4856d247-08c2-4002-bd45-941a9cdeed9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.387296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a7fa1eea-f63a-4e0d-8827-8cd822c61edf",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/ytl9eauwgrriqg/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kasie Welch\",\n  \"error\" : {\n    \"code\" : 126235967,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Non et soluta dolore rerum praesentium. Rerum quidem dolores consectetur aperiam molestiae. In quia sunt aut.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7fa1eea-f63a-4e0d-8827-8cd822c61edf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.387016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d389a244-b04e-4e20-88f7-10fbde6e2732",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/h18jqldtknnmlue1ykww1h73yziqabowgo7khkds4q5qfjl7xucg58fr420ybkvbg2x7a6b2wtpm890gm1hohjg34quyd3v3myv1uj8et4hsoq3cco1ndfpgyc27sodk59xb47vpumatzo4/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Neva Kozey V\",\n  \"error\" : {\n    \"code\" : 154065227,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Tenetur veritatis quo modi pariatur eligendi possimus delectus. Vero occaecati et porro. Quo expedita voluptatem odit veritatis et. Voluptas eum eaque nihil velit. Vero numquam itaque molestiae quo er\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d389a244-b04e-4e20-88f7-10fbde6e2732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.386853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "be762234-fd3f-45ce-be12-5388311b557e",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/22j12vi6g6t81xv93s6x2c7445qx1l94efa0vphqlnhhn38rpdlcy45mj4ymd9sqolul35q73olufay/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"3liu5t2c5da03hwovi61weiuwpe3gfvly2spva31kznb0k2w7r7wf9tl4o2xfe2pke084vb6idz72x3cszzx4vfouhradivj1l2kleimde221ctlep456vnhurm2exx3h9rxyh0\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 549129675,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Impedit voluptates minus sed. Perferendis sit qui et quasi ut at. Eveniet vero tempora numquam expedita consequuntur pariatur. Dolor consequuntur consequatur quia aut neque ut quia.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"6nl1canvlew6skuff0w1lx282fqbas5kuj2moxka2najyun8lq7tudvtmnlanncwu50kegxebcflrk1zsumqnz699uht9e3r9jgjmja7oiqu70kwlf8egja86rhosvsqopt2h5ktyzsfurd33d614p9q1e66jftm21l5hztko9dvr87kaps6odzn\"\n    },\n    \"database\" : \"g0l72526ispr106u5uw82c3uzl4l1hcdx0btroqnj9511vuhqnzm583sg1cqe96ara0x0mvlqofhmoy5\",\n    \"expireTime\" : \"2022-06-14T17:31:25.384093Z\",\n    \"referencingBackups\" : [ \"b11hp29qj8znwij50stgmgcki3nlgi79t6lvr\", \"dbfntvt739ykk8p8ousj8rfp66xekwww78bamy9uwl8hnfkgjorvve2izb24zm8ngwqvt3ov2pwhorynwqbazveciutjkdugp6dm2gdyc80s57o6qhat6khygrv2ee95qnomm85kfnxyh7hb\", \"uj1esqmh1jg2dpl1mkm0zwd64l9rk615awiimv6ajxe8mbgmmpyxh14z8f8njld7i9d99yxwqcbbgnywuv3zztnmasm1jryvdjcfqh5104ld6hzr8ghm4oa2jstxf1cx70bs0kjenx0kewzq0jl6xx11l3n3gqz701d54wkj7f7vpxu74o\", \"j30d3mogbzgrqgq3m0r6wmbknjdjmn8tw6kd4aml3simxsz5aj6ft99d2v72qvshvqbzc80u6soiwiw592q0suks287jk\" ],\n    \"createTime\" : \"2022-03-25T17:59:25.384143Z\",\n    \"referencingDatabases\" : [ \"pzt05eecgdhhzlgz1xelgpo50zxteqq5thpb04w1na0xkd3q5bnzg11msjxncfwqjvcsuflqh49lgo9ey2o4lly1illpcy8rj6c3217s3vxbsrfs7g0q767nliyd6e9cjs28ax4f07oxplw0l7h\", \"99i2nl6b174oimiwplcwtx4k923ywrwl0anqmk9\", \"dk5ow96w9pgb109a8pp6a1smdyc5tqj13n7m3guuc2bxy6se4m6kkj9vhx3787aofnj0lunait484zckovupce10623xhybzj1844vv020s6q80trcx9miz4u3og6e8bpabqqqzw4dm31clpg984t9rsr2dvpojj8kz48oz556a5lwnzd5e3224ww\", \"lt12rv9yhm2x3u4yk5a1ewfkgqifondi29ffvb9tsau55akvt9z1oj6kjil09okn7jzestv57fpctkbavij14h58prwryh155sgdpkba92v3g9x0pc6jrur4i30ov6m8f8zazs94ni2igvng0fm15y2yrr9q73oq5vfeaq9cfdtqhw32qa4sqm4gfmi3bsji7k1h\", \"zld3x16qyf94jk5mwqsqwn5aihzadxehteoqss1itjwcm6haqkjvtnbqpjry3uyzvqxaxt3t02m6l396xnby0plau8pfozjzg902junc3gkqtywb9yzcla44lhrnwlmt0emjoouhv2kjlew7im7dfmkjxo7yambpr52x4zk6ergumh3scqv\", \"qpndin2hdkkg75512xr62tsg\", \"rv4qdhb5wbujbamudmo05x23rkuxwyeeeq4kscu2kbfs1egf591p5rw41i0sor3yjtaw6lvgb\", \"gwjwx6frfxu9z1pex8dw4brt1bmqy5rl0u2lp6cic3l8\" ],\n    \"versionTime\" : \"2022-06-08T16:28:25.384212Z\",\n    \"name\" : \"Silvana Mraz\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2023-02-05T15:10:25.384295Z\",\n    \"sizeBytes\" : \"5d7323i0pjhcxgw30wy8s7kilniyym9n24sv349qhuke9ftyehjzmkls7adxo4d467t9wncleebybk0duqtxbeng43uoqav8z19spvfkcmipe9r7o9ozy\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1947757765,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Consectetur laborum enim repudiandae expedita vitae voluptatem fugiat. Ducimus voluptatem doloribus quidem adipisci dolore et. Voluptatem quam est quis. Accusantium dolores et deserunt in et mollitia \"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"idlurxvtr9x6tv4l0esglqapi8dsmcihyivs8hchunpn5qr1g0mrltbzwnknwnx8fjy2phn7kdvean6c4cyps355zx6rqutc2z5h659nh863t\"\n    },\n    \"database\" : \"ujuewxa276x1eh4tncb24re4i6v7od1g1r21ltiteg47v6fzmqmrfa8fd3475kgbup15on365dbr5xbjap626l1fp1iv643tl5jxzra1vseozj3xeibh776l33y64yfcoeoqsdyguilr60s24k5ywy3nqepumo8jxwgwmqjhnnk0fdwxhcf64pfwft9lor9rw\",\n    \"expireTime\" : \"2022-06-08T18:09:25.384433Z\",\n    \"referencingBackups\" : [ \"gib21zoikr5mfyb4\" ],\n    \"createTime\" : \"2022-03-21T17:21:25.384466Z\",\n    \"referencingDatabases\" : [ \"9qq1z429rhr5iin78350bievp2r2em2v5qvwjm8b6ao1l6lu9kgo73e1t2yx8uetktdbni2i8v64jt8vruamojo7bht2cgynes3pv0d7m8alm2s8xt9qrjp46eumqigfqx1rpnweo1ippqebt6yyv3o2n\", \"5vvfqgvi54qmlpza5p5wxc3l32awybz3j3l31110vjm\", \"0lz6tjim2ob5ni2hfsh11x9fhb3rkohqpf8d87fblcu2znh234nv9tnc5mq\", \"gthk10ksu3vnf7nqhuvzssu6fig7rl56uwcb3ovys9hgu9cxpupa8x331aj5r8c1otakuvhj2a7g1mm\", \"omnqi5roeejd3welbt28wpp6ai0csigady0bjiqfq5i3wbc0tia2jiy8c5f63s0z9c99g11lrd9s9wn01z48bws5teg6h2ybiid4mygwilk31depszoun98r1ajheive3j0h8w2zhlkwmgm34fo41qewxc0q3ar8fgfcydp6hu8tgivz6hu\" ],\n    \"versionTime\" : \"2022-12-21T18:24:25.384518Z\",\n    \"name\" : \"Rasheeda Lang\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-06-16T18:37:25.384598Z\",\n    \"sizeBytes\" : \"q07eh8w7obfgqf\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1845841740,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Qui itaque ex voluptas. Quas eum quis nostrum. Et sapiente aliquid quo et. Magni voluptas eligendi.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"fipndk\"\n    },\n    \"database\" : \"2luc546hicbk3qqlwh5vr0a30xp7txt0gbnl6wkzaxbp32bl64f22t0dqbfrhyc9i3vjezb3wm8tbl2orq4ctfbkdv98j87z2qbya41hodwos79eiplif5x6f7olwrkyzaxvi87su4j4utli9k9mmjhcqxzioxo1h1h112t\",\n    \"expireTime\" : \"2023-01-06T18:27:25.384722Z\",\n    \"referencingBackups\" : [ \"pl0zfw1tapljgn4nyxyam699ldu7mnx7kgkp8w72rc4bqm2grxcxe7sex8cp2ra1v5o7feg888j\", \"0xx9tcg6ddg19caxn4yrds83dwd91a18g6b071gyalu0niq0m11d6m\", \"ekc3e0vxc5zl5irb1mxcsu9pr5mwn8l3\", \"11xx1ovsxlai4k9guh5ffswiedxq1cyz3ionerr83oqzx13w97dmm767428pjp8w1uvo8m8oejyhfu7xjxfj2ngvt8qvqcnagpoekwg1ouvg6wa38xe2o8pqrsup59uq46t8860y7pjlp6bfc5tb7qrftzlxd5irh6tpcjfsczs6k0757yuf\" ],\n    \"createTime\" : \"2022-09-29T16:38:25.384769Z\",\n    \"referencingDatabases\" : [ \"z8os8x1rgv9uzdk7cg6xngb8gbylrpbxliz53wwe7167093j3sursq62qxun4tgcl7hw7ngrw3n3mprzaq20ses4pgz6l3t53zotwl1gp1u62697olnymswj1yyr1rts0xnshnejdzhh0z5u3hggczkvmdixte\", \"q5mkqg8ujmcty6lkhkn5146nradiv1eewk6annqx025ojdr8xwclimmovmrek1db4n9nu0cns767v39fde\", \"tu6s4a1msmgwak0azgtr6u9aeoxuxdwudllneyp1dcqwgjnk5xxst7r4noua62r7adf8aienet7l510h5apz05742ekhlveji8nx1zb91o42xvicr7l6kr6hxokll211bkwcer9zwj3\", \"8121ekiqf16vchpwre6kq355i1k5vvceapjbyf\", \"po6imr8kqnt1cs4gex8lgpil985xwctwqnedmqz4qt301i8y6o6xcjvxve5e\" ],\n    \"versionTime\" : \"2022-11-16T15:14:25.384821Z\",\n    \"name\" : \"Timmy Von IV\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-11-18T16:10:25.384903Z\",\n    \"sizeBytes\" : \"6kuptk7j6g40sjexlwnbgdhpvnjchq6y8srgf7sar6ox05tdvx9xqv9v8u3xbsim8a0v6w4h4wxbhj81qqudv2yf6rildks4zni9j9z8gwoux12rxbdine821pe3jxpaom4yo4p7okdtqrealswxy672y0d0pcvavzffyyuqnkns209d9y1t0vw5xkr\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1642168407,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut et quas vel tempore pariatur. Et maxime quis quia. Praesentium quos et et eos et. Quae laborum dicta necessitatibus dolorem eligendi et explicabo.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"ixp4wqprz2pq2256jhmd5tzh8fu0ym902nq73hf7a8yrp9xye82ufufacb1ljnai8lxnypqy93b4ygfe45m3xxy8y\"\n    },\n    \"database\" : \"c18zmxiqsyv3ri8o270mkwjec7953zk1w58u9ncqz0ymwzpxcvvu0wlqxcvf6hst1mzovd2nods0tau0arve4i0cnnjfeikp8aegrdkxoir2lncl3bcr1vxmmelgf3l41onad\",\n    \"expireTime\" : \"2022-12-29T15:28:25.385039Z\",\n    \"referencingBackups\" : [ \"i8j9xufep9h98e0087x1zbfafzypjuq0ie6tecsyudlzcw091t3cb3as6u0qouu6a5jwv124r7yba90xxpjden94bzui8p2myohth5e6m6ehmpy2iv7h3zjtc4pmk5n0pyf56cgn52rci6mqxk6cnllivsnpiaoglt721xfepjncc6lvqyo8xf6pww1vk6qe8p\", \"764y1147neqiax4oqkuyzcl9ysk2nlti4p0atad4443hbfe4smyh5gu7f5oxhz1vioh1v3d0623pcmpk6iwx1z33fdbhq4zv067vh05898s0mdw82niixvmo7zvgxzwdb763dt53n3n2f2jdt6v3jqjyjcjs3u3lngledyvamvotdca9v3zhyr9qyciq\", \"ud5ju3ea58547xaoara6nmnbeledfned7nwefonlrf1mo9srcmxe3wn54a8pg0lyvg\", \"wlu2gpmlp58wesgukxwfvmig8n4099t5y5e3ufmld7g5hrww9hl3x1y6mu3xd1z6r2cg1zzyl1f7h5te3t2qmfx013ve6a9cvdled5uchhqzcjd9dg8kfiggen62wc0691mdmlissv5opr47pm8dqwqkc46e1b3o2zt1lc397oosfidj85\", \"5r5llgmu3ttl0v22098kme6v5h8p03jyqmp304mvgw1b234vyc8mt8z9dgrpxx4hxqbn4yqicl4pf5a90xn4oqaqnzeayr0y8zlk6hm78b52ylkpbum3yvv5f6enwyuo1o805axvkg8urn8a8p71r8i38t92qxzz5q5umz4q\", \"t2tu3nebt68ddmumm4o6bmwr3nw40g\", \"crp74a66cs7tvfr9k9d3hrb2p4w9cxf5k16uck55qfz3xnkky1h6rmhxzj9s1u6znkgui6fp4nqxnsbmlp1nykrk1ningtm3vxrtjw6ccrfgk254g0ddmj0blros\" ],\n    \"createTime\" : \"2022-10-18T15:17:25.385102Z\",\n    \"referencingDatabases\" : [ \"0rkrh623kspvj7amurpvcymjzsa2osgx1xu2b3mf06o4a26ua9cplifi57oozab6hqz1j8zr4oayjt2xnt21hon5o1zggzyroq04pknlcn6e7podybg51oybj1ydhb4k7posowkzpe10f97omhyyp92fvg5hnlp9xwdg64lzqha7pzbgjdzrpt0bi16g6z9i3i3h9\", \"1d3x3t9oqet2xg75eryamb1fy1vtqw5zcvsbmgqgabhm2t3\", \"h8qw1vhier9avjo2q29848vf2zfi40ntm4pt0roiwsjzgakjxihfedt12rhgpnzqjil3bzjbb\", \"vus2rstfhg2kougr3q167kh14weoojnnsxfwuknt4\", \"2pvktdhzhv3whk83bojurqs9wj2s7uaijjuj08bwsceowrprj6v1yxh94h54dn592ekow0dv70115ys1c84oos6j6vlnmct81jlh0uuelyoswza\", \"l5dmv4qz7gu0qowu4pn7r8vihbrbi30cfgck2w6te6n7iq3t23p0hpvw7xmhgzqfue21c880zotemx0u29w8l0b0p8y7b1sm1u47uiz82iybnwk8ixsh6gvnqhlni6nwixo93cg0zf7kzfzs4deg0pe\", \"46n8ttp13zquwq4ga1i6q569bk\" ],\n    \"versionTime\" : \"2022-10-17T18:02:25.385162Z\",\n    \"name\" : \"Eric Bahringer\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-09-07T16:38:25.38524Z\",\n    \"sizeBytes\" : \"cvvh40vkdx6d7t2dvhaq9e6al23\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 233313856,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Ut dignissimos et. Maxime unde debitis eum impedit et. Voluptatem dolores voluptates libero aut dolor veniam. In cumque rerum sunt eos. Corrupti omnis repellat perferendis ipsa ut.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"t19ej56sab6zv4am7sv7tzjft0hoqqtdvrljb8ck9o20w7xnthzxq60i9tzjydxfx2m7ek8skai94a2tgdkougwwjwv4uj1jiod6yhafelr3vozh0r7pqo9bkjdzo9raee41ne6npcg9w3rlpm37\"\n    },\n    \"database\" : \"sti1kdszmr4sxplhomat15ui50jd7rvo15cp4k2xmx7ojnbthxynyb8thpojkn06slw2msl0jv6egrnbs13z2uk87dtp5a4cff6fm3gwwpftzqdqxnzabere4rja4snu2x9hcrz4djjh2bzky6ejv9sf3r2bz9ig4eej72n2juur3huklnmfnlvfchdjvkn3lzoe5c6\",\n    \"expireTime\" : \"2022-06-06T17:07:25.385373Z\",\n    \"referencingBackups\" : [ \"l1v48tru5w73bpihfkqu1o5ov44tsblpbuhtbaypbfrt7vmqhkb4amn7mp0n3c9pmi\", \"pjv6rtjjqqfpssb2cfh9j0qimovecmla8hvrk2h7qe7zk2wgjbtzo26demn8559ugkv8nnoqbunmm6z6h76gxyghaoddqf7n5qr9yorbvkhivcrnhvyag1ptar21zd5datva\" ],\n    \"createTime\" : \"2022-08-28T15:36:25.385412Z\",\n    \"referencingDatabases\" : [ \"4tmmu4sg\", \"sidqyu070az0pcwrxwk6i8uamd1liyp1xunff0kaxf0bswoeycq5snwldrl30js8bj2o89v64a0xq71\", \"5qj7mn31c3to54fu1npurhsr8bg9qsqhqxzv6t11zcs3yqslytx67g7rqoqtq565xkpcrjuvxyl\", \"zlm3hkz63aqtwuv5oglywm0sob9wv9k0fv9mqd1kshs1je05h62aajsr63fedyie7j09yecy0y7rig4ipyo91cbd0kggylo4snr4ie85h069pl2xsu35qw6ii36o2q3huxg35dv5du2dxnbli3zokcha80vwbl3d1q4\" ],\n    \"versionTime\" : \"2022-07-27T16:21:25.385458Z\",\n    \"name\" : \"Corey Weimann\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-05-24T17:25:25.385537Z\",\n    \"sizeBytes\" : \"7aq\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 930714928,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Iure sit debitis voluptas. Voluptatem eius omnis et. Repellendus maxime sit et fugit debitis natus commodi. Non nemo ipsam blanditiis.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"o7q6n56e95iz6bxev6nephtgbhq3os72wjhe36cv1e6nc42uz0t40ttf6f1d1l7eyzz2fr9pg78916racbxp5w5261nr156emrq8jplhetfwql48gdc152pseloxpx67kq17nrsvedzy5lc4pw\"\n    },\n    \"database\" : \"9hesdaho14zan40l95d4ie1ppue1ofhf73wxhkd0wi5i1fkzbvxt1q7ej811pg34z06494ae414nnmigjr3oxffie8kz51xlqg8f3yzuf8wodjpbi9ydbjqvazeczvmccr2q95tknnshvjxyfnwuiurvlsrnr2vbpi44aizbqzejaevv\",\n    \"expireTime\" : \"2022-04-09T15:31:25.385669Z\",\n    \"referencingBackups\" : [ \"ita6bwpneb4ijy6wefntm6m5xjo9w8gy1uotp1bkxm1t05vpm3zrxssr5qoa3oja7ukw23v17nt5yq913gshua7jvz6nhbok8h70f5hs6t93pda6xttw4774b2sgdjfsci\", \"w35vlb2nhw3wo9p2x39jk1estlh66hgkr7ucae855bsdp8y9gnbmb37dnxskga1g9s9fnfkbpphxhrekt5xi2tcuycznccag9hatm3iv0dcgaeamxaqa6vhh6tbzrbpsn6d8olnq3amejnxxjsnmoy66g6sgr4xvwumh21mvh4yf\", \"lomdt9vbn8q4dvmplgxa7kngkklgha16n7ytxxi4khhqu46j2a0o1h9mmamulv40pdtij4kkv9f22h1639vsjm8wc6a8lddbguqyfmmd5fk70lpbnq\", \"wh9o7sgqzdv95yg4jy4bnuuxnan57w0nqedins65wio6p4l4sdt5tpmgatzmwa5kwm25kgs1m8jwgin6r009jnn27b6a6ihole2rn4qesy0wi6ayv5g0wqnvmzbu1aop91uvgcgsqg1lnyakd73l\", \"razy3fa2wfd2d01dkcxuk7kews4dyiruth\", \"jhqvsiy7o7dox9xbtwz40xt0c8ca59u6gztujp83u438aib2eq\" ],\n    \"createTime\" : \"2023-02-09T17:48:25.385727Z\",\n    \"referencingDatabases\" : [ \"m0xs6dvjyuuekxxsrlia5e4kp8ezbjr791r5j59ann4uks7baoszn40owf6cihypwq7u3ildxt3gba186dl1\", \"usu6ufrpd23melb3tom4mj1tfn0eh8lhyjzel9yz9bl0v69tjykvobidxvu3onk69mgcigufjlnht0tqdzkx2da2nzlloqz892bz6nzh6sdgaoga4q72d2xed763f82kxesgub9lqw3ybqwta4ccuasjt515g6tciqt24kgnsmgq\", \"ymsyn56ckhjrlr08pax62ofkag3fe042lfp6sojdetibzf3bjzaoi1i32lye1a3ngo0b8g935re1h8f4k1dtf8w2ql39z06m7e7i8s5suq1yrry5s6oilmtx\", \"8wvkjprgod1p02k9nb1fj6ylz9o8w35bf8ufg9k0ca6uqifzhpmge6qn80hv3kh8c4bjjekirktdb8y0smjxeh7qj73se487daty44jrr8u86wd935vagn2ioe566htg50cbyjbr6ym23ji6czyb2h32zg3x2idpbb05l42h2arj7zbypwoxka\" ],\n    \"versionTime\" : \"2023-02-22T15:14:25.385776Z\",\n    \"name\" : \"Lona Emard II\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-05-05T17:23:25.385857Z\",\n    \"sizeBytes\" : \"hwthdx4gn79p4r6wx0qx58gk9wv2rhvvgkmaodbgg97twd6khbjev4w6nrac6y1sl36ydal1happw5bq5quyd65fir8z62ms4fh8\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1714743835,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Placeat veritatis reiciendis quae voluptatum dolorum est libero. Ex repellat suscipit esse doloribus. Omnis voluptatem ad voluptatem labore sapiente dicta necessitatibus.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"2ifyonifo0dir80l9k2jy5yno4fyzib7arwp6floitfcxov8xn3v9ca9akt4fjouf4vn8p19127057qrv7r1nnwlj0onz2xezymb2m7gwhdy663aqqz6bbi5ii686yrpfnaq5uv6lwlkw0edkvxppfcas4lp\"\n    },\n    \"database\" : \"2ulkumgxjzuelktpaojp7ivsic39jxtd3fw0c5ipgun6w9dx2yvde219yymktjhh6em9m9p0bgwhdraqgvdo8f9b1k36fmsrsr8zlhch49j8hyp6g1s0i7w10k884bfq02y0u2rdi0uw2z0\",\n    \"expireTime\" : \"2023-02-11T17:22:25.385987Z\",\n    \"referencingBackups\" : [ \"wud1ijk36j4edaozphtr287oqplxxnv2vz6h4ztnt5uj1b5mu1ctbess44t34s9izb85s\", \"s9hhtqi5mmg21i2729g7dtjo4mqq1o7fj0xuk8zewk24c8pt6u2esyo3ozgz4qxm39qhctyia8ecu2fqz9ydb4y2axy4720quduxn9vdedeog80nxf48nrw5b4mfobpw5kizg731\", \"y9xeptpzirwf6z1d3wkpdatyuidsb31qrrwxanzroszkaz2vm8qlyc7a2kyxnuryhykjtmy18kxtn9qvr1o9qodaxwqr2xe3adx3cqc34dyli2w97aibdhbdcm3iywugpa0r8330y\", \"spevlqiy8\", \"ud0kjidqyh97\", \"yficm1eox2skwxdpcn23tolgmy1ch5jk515f2p15vtfrp7804azo4by2epmrqo8mrrcuisclw0urfs86hixy0u5o6qtxdghd4fbxwg0y\", \"tk7n87onewkzdddzqawmb115jc6k8cc8jw0ivsd9wkm3pdz9ha6i35sfohm4ecmwrh26lr21dy91286sc\", \"p038u1ujithptiu3vt1n6bzxswl1z6280ids6vp7dc34wx1unuqnleidlil0kv8v9zfpptpw6n2kvwbidwtddrkjnfbejhq1u3shopzlp60xq7o83yxtvt2g01wrsu2bpp4um16medv7y3b4npu3m8c0puun0h9xszfmrx7chsy3jmcsixwvfgi9njrmm\" ],\n    \"createTime\" : \"2022-08-11T18:05:25.386052Z\",\n    \"referencingDatabases\" : [ \"z2lu9hucgcsd7x3lv84sym30s6zmp770bjeefbpey2dfm08det4k8ofpfnruos2yedeal8m9drhppotvj1xgc63nnkk4ufa25rh1ftfthhd0y3ykt32a5m5obkwo6wl287aed\", \"wgylupr5nuskvf22uje93f631u3zb9kpz4xgljr5zgw2ue3r7869rgspc5yfikxbva0egto6gm81m3msrdsf1v5yc74i8qsh0wdtqibc74ctybdr13qv57rhwm0cw6jjygdj8a7yop563oug7u6xy4ovf6u9esjwgft\", \"stdwbl46nkcyqatnlqoo9bkqcjxgb23rh7tv12ackyifiqdj3nl5j8ugvnn8w092xx71g09kegdg8n1hnthydxoie8228uf5qka6okz9eec9gzoqdssgogug\" ],\n    \"versionTime\" : \"2022-03-26T15:57:25.386095Z\",\n    \"name\" : \"Leon Ebert MD\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-03-21T16:43:25.386174Z\",\n    \"sizeBytes\" : \"8m8s7w6mynjy39g8jxwqc2hgo8rtfibmdosr3blj8jhjeqhsn0owxr1s4cj4bj978d6hqgyrxd0qjl9kd1tgi8mcx3kq3a5dbiqfar783zt5rc1qrrqlueo17xnbsyil86x5cgzlo539ya5g0f0l2kfeci0\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1580771908,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Vero laboriosam voluptate ipsam in soluta. Ducimus minus similique aliquam et. Aperiam eos est nihil officiis dolor sunt quae.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"tj3yjubivwb1nc2a57qah4a8t3l2xb5ywymeawmtqrii\"\n    },\n    \"database\" : \"kpl2cy13wf6ep0oape2zu57ex9u4w0eqrvgynz51iitdg4aqvk7yprc16pj3tzd91ib0h7tawag9b052p89v2y4ed6u2zg0rkdempe5jt880u0kbfbhrzfd79isx7g23q5ctwsxf1fhwgcdo2pqidspfixkcxamaf6t1q15ql0miusft5mpscfertxf61qq\",\n    \"expireTime\" : \"2022-08-31T14:55:25.386307Z\",\n    \"referencingBackups\" : [ \"v7aqvb163efb342p0xvjefige9ugms6q22bvw5kpvewi40uzd5upzsljiffi8o2zbbabqosdqhcwgmj37p7c8bx9y7t2jg4bqzstfk\", \"v2gylckn01q53ct3q8xpm1ofh9axsfwu8krec2bcnwy0qko2stov59c\", \"1k6ljar0ckhfv1a1e5ici6uihh71kpe3slsvcw5ncn6vee4uuf78uwysv7r7a1zef5k6zcbqaqzrr680x6ljk630l46ynmmga50zyp5tx58pe5kvtf4ydc2r24np4cteh44hxkm0ol2afr5rw9wp\", \"6bkfbdumrp4ug281zl3eevw9doufxodi2mmbojep9lh1mq0rz4pthiylp5ud3c3egc948kx9kdpjt0plvo66p2nbd467ffxibjpndv0g1jj3srotz8eveihatg26uyhvs9rvttbkxxftw9bo9oqc2ymx5g7gg0411w21wytyb62dhzm6\" ],\n    \"createTime\" : \"2022-12-30T18:52:25.386355Z\",\n    \"referencingDatabases\" : [ \"at9xjks180aahj8zxzwgcs5du67hbe7mnfi3vk87zx0w73kpt1icw9ed3wn7mih8umiypukdwjj4pc0jsxlqafe9en92fsmxs92p\", \"1sny1l3l4b3l33ji32xig0x5x46tqqzf40mgcazfm\", \"2irhc7f64dk8ysxykus6gym4kad7t5c248ahy0ajiy3wtg8w5w\", \"nze9as5bhv\" ],\n    \"versionTime\" : \"2022-09-11T15:33:25.386399Z\",\n    \"name\" : \"Luigi Gusikowski\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-09-13T16:20:25.386491Z\",\n    \"sizeBytes\" : \"3no1owtyolmexuyr4ziribbjn0cxzc9o6gnfme3twplsgc5vaqou9kh\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be762234-fd3f-45ce-be12-5388311b557e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.386648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a680bf53-fbc0-41f6-ab5c-6656ea241817",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/amu5en5215x3hgrugqex0erivf1nbuwqndd9qqsey7a3ew39hrjyi85132liedznse0fawdi35xicm4lzs/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Criselda O'Conner\",\n    \"error\" : {\n      \"code\" : 1093030748,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Vel quidem quo quo aut. Alias aut reprehenderit. Eveniet dolorem dolorem omnis expedita tempore. Eligendi quis explicabo ducimus.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jeanetta Bergstrom\",\n    \"error\" : {\n      \"code\" : 995350992,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Aut repudiandae unde repellat ratione vel. Nobis adipisci optio odit. Laborum inventore consequatur. Sapiente aliquid mollitia impedit tenetur. Eos culpa qui amet est aspernatur possimus voluptas.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Pia Hansen III\",\n    \"error\" : {\n      \"code\" : 313071991,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quam iusto distinctio dolor est fuga. Saepe voluptatem corrupti quaerat consectetur. Beatae quis doloribus consequuntur nihil aperiam facere laboriosam. Ex et et nesciunt aut quod. Nemo et impedit com\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Luciano Moen\",\n    \"error\" : {\n      \"code\" : 181046275,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aut temporibus autem et quae optio assumenda ut. Iste culpa dolorem perferendis eum ullam consectetur deserunt. Temporibus ducimus provident sapiente aperiam itaque odio. Aut consequatur assumenda eos\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Omer Beahan\",\n    \"error\" : {\n      \"code\" : 677178649,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Modi blanditiis dolorem et totam eos facilis. Nulla nam assumenda cum aut ut consequatur minima. Voluptate voluptatem non aut ea quis. Odit voluptatem vel inventore in voluptate amet. Eos molestias vi\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"89zf9qsfdjlgqflf7qk113ahm98qr81llsmtunquutgkmie95jocktbi4blm46a4ykzl0b7nzsb1e1kf1egsyg2f9k7own5ou5nxy60m9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a680bf53-fbc0-41f6-ab5c-6656ea241817",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.383939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cd61ffd1-3457-4757-997d-a3f182b93e47",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/wdvzo8k49k0kuxp3g24kfylq1sawia13k488djypfk8sk3tnxo8kdlhxmwj9c9d1hzmlazwrg56mfnuo8aj6tsiq4084pvg2c8rhzwi4sgfkrthv0qq241a6f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"802malk4fkjpymxk3dmkq3fgfs4d3j69w4evhs1ptath72hp4huqd8\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"vtds8ovwsw38pa45zkpg5gjvsii6i01gj6nqj6ji8xpcb4ei9nx7nnnff72t41cqunfiabl5f3lstpwdk729nvwu0r7q3w9za0l8seqoyu3a7q4akd200zuru65zt8rsql4osvtw1p9kdqpw0xpyizj3abvy916lw\", \"dqa6fjboo93dzp7e4lys2are87e0laksuv2j3l9ojtmoca1azmwzkkiy7zpefsd40h74g8r5mmyp5h34cawo7pah13nvfaltewouhtrrj23vxr1v7t7zm6bvicpv5suhwwlw4jiey8qnhvjx9n49qjhji0p3kjh9u9nuamnhh4qswp4gp84cafcrtdui\", \"ejk7n1ran57ii0wx1mme96rn8ipmfykuzsplbpek03770qy764v6elyfl8pjnuj8xdnwfc76uug5ogzat5j12tqj9ets7rjwmyy40yyapykdp6vw9jtacqslbil0f6vx3nq00vylw4iacfx\", \"a1terivn30ot8tcr0f96fa1ruzfkig7gu1cx764wgl7ezjshsa63jt2p8j7svqzgi8k9dyzfht4zlqcfdh94cxsetc\", \"9agjy0s6uib63u57pv5yrxop4u4tebi5qe7ox754i6aiuqdu2skag0ijddbtawmluarxhmybfv03wsavrbzhlongu1usf7agmoxvjxr7o4dtlbg\", \"zk8d2tcesxhz10mceihwwo01gp8bidamsti4zo3jlz8j6d9t0xydz0963m44x5ml137oxybcrlgms5szhd46so0dxitp8a93mvb7btym97s00ko7f7kmw71utctcycf1bv\" ],\n        \"dataSourceSeparatorToken\" : \"tftx3sdcb5j5shquranrrm41ra38v6m2o2ji9nbwfrx6bdakr87wsfj00n2esqq7wv2lqc9m9fe1gqa0vlmpm54nhwpcc090pnz1737yhqpnkdgzm3lx6f3pqexr3bfhnk1indwowtrzq1bwddrg8ecv7q9t\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"4adrbjtc3h1qqu9whn0424o9yoqe6kd618ig56ib8ggw6qdty1eah3ln6y941kkan9en0lct0\",\n        \"metrics\" : [ { }, { } ],\n        \"indexedKeys\" : [ \"l0wqwjjmoygvv3eq9qfdm703r00qf4yhdye0fp6yhq6ds620bhkmve9jr3252ubhdfgsiqxdoq4hqnyr6hr22t74h19xsgww141eupz5s3yxyvjfsbza8s7cnmzlqbv71415zdaa4\" ]\n      },\n      \"startTime\" : \"2022-06-21T16:31:25.382799Z\",\n      \"endTime\" : \"2023-01-09T15:09:25.382828Z\"\n    },\n    \"name\" : \"Carlena Kuphal\",\n    \"details\" : { },\n    \"startTime\" : \"2022-03-18T15:21:25.382898Z\",\n    \"endTime\" : \"2022-05-26T15:40:25.382924Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"7dm6rmgstekdm34tuaglq4kfgrlvsk50h24hj02a577y8xti3212xxd\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { } ],\n        \"endKeyStrings\" : [ \"pta4bxexa4f6kgoduirl06s9k5j4sl1f4e3y1emld63fjp16yfqbqam5n94orxcfy41koe4pc49g5pb8bk0mnji3zu1shv5jips9c1yiuldu4ypn\", \"fs2zt8cfi2353imwczlnqkw05fxzef055bwkkmd8duacnf\", \"8p4a34a71e4nhx7tsdsqxjyn6q0pibwqq7xvrzmtdfze65ti3yoiou888ta1zd8ob4shq8bm66xd485rw12x5322lcstb6p10erm\", \"2hty89uiatmhxo4\", \"x3lepa0c09b235gt8h260ac5bkvxlpl40krehqjn0k235shq7rcriko1483hc2mwv1eb6gw5emfgnv4378dsijshrn6\" ],\n        \"dataSourceSeparatorToken\" : \"fvxd23gjypx1vx2i7xln8xqgemmzi9d0vjuao8po2ncdw9zqxb3frgud2kxe7yabjoticgrpwtzgh02fx5twu683ea975wji0ffa7immahxwqa6senf3h1lrol26548vk0nwsryuho3nhswuaotqls809hp32s8m4vwp3diiyabrx5r48pvydbmrhio2sq4ss38hpq3\",\n        \"diagnosticMessages\" : [ { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"ak0ecfzn30jnbqi979113udkp4svu65i99eg46g5vx47pk4ilw67qpmgkt878fs4wa2wna6gan4n3ayhpsi5asf3thp7fmx59fjq857nxafa1rii82eo7cgk3ouhdune0of69j9vgho\",\n        \"metrics\" : [ { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"5gz74y3uj7kpm3xfh0wku8gypy5v0ibc87mlzmy461k43zqbdo96o60hhycm6oeuqx9ro3fyn0k43dihymv9arkeadl88ano338ojxzfr0otl\", \"5u8rwkn87mf31padi6n314ie2w20h5u75a1iwlnh45vp7081wnw154g2a73jbgpgjh00dsi9b0evntdl22q5d36jq0qy31uryg2ft183p52vj6z0jypbljpka4afjnlr2f2l69pslqgjhfhqjxc34nddjj448zqozytnh2xfgzy4qqqs\" ]\n      },\n      \"startTime\" : \"2023-01-19T16:54:25.383075Z\",\n      \"endTime\" : \"2022-10-04T15:35:25.383119Z\"\n    },\n    \"name\" : \"Kalyn Schuppe\",\n    \"details\" : { },\n    \"startTime\" : \"2022-10-21T15:52:25.383192Z\",\n    \"endTime\" : \"2022-11-22T15:03:25.383218Z\"\n  } ],\n  \"nextPageToken\" : \"2z3x6fntas29z2gtjqxdzcl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd61ffd1-3457-4757-997d-a3f182b93e47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.383325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a73b91ff-9b79-49d0-b200-d641dd7a48ef",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Lynell+Bernhard:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a73b91ff-9b79-49d0-b200-d641dd7a48ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.382604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2d73aec3-c9b7-4470-87f1-bc9182056d35",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Luanna+Heaney+I/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"em3mpoaz8avw430fboflsuv9rjgqzz4gub4uzt6zr7wuava9qomzr51q16ztfz4xxghjkuaaeuqz0wtjmons\",\n      \"hasPii\" : true,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 1169283527,\n        \"depth\" : 1362676127,\n        \"endIndex\" : 1444014382,\n        \"dataSourceNode\" : false,\n        \"word\" : \"pa0yhb7tkrilrx9fi3a5fgjg5mvdmq617k2m4mncrdw9pvje4gjqh8uwhip0on0fi5qmpcna5oq\"\n      }, {\n        \"startIndex\" : 2099959844,\n        \"depth\" : 323914572,\n        \"endIndex\" : 1562966283,\n        \"dataSourceNode\" : true,\n        \"word\" : \"cjhuxvwzwnx5t35ok7qlh8488e2olmg7uxz2q1s7b6mut66l479tz213uamgfygi3gxnc3kr2wpmthxn67b9kultnb1pkezojaor4m5oihihryibuvwp6k9h7xsfv0rmzknktcw5e8sn9gisianta4jckny6\"\n      }, {\n        \"startIndex\" : 1786367592,\n        \"depth\" : 345276043,\n        \"endIndex\" : 665797039,\n        \"dataSourceNode\" : true,\n        \"word\" : \"u1pxyxvgxbh09dsvlmiakzdyqi9qzcshrteo4rwajnpc37vn72wz11jus4r7w9yy7luig5rd3rubrvo9gxcxat617zf9h1u306md2gn4m6f17tsiq18orsqa3fl509ok6dsbvw5po0jr2w2czti6c6o7ooy280pg7zpkyh83hl8socw4sdgayq8nmukcun1p9a2f\"\n      }, {\n        \"startIndex\" : 25002307,\n        \"depth\" : 1866672005,\n        \"endIndex\" : 1318109473,\n        \"dataSourceNode\" : false,\n        \"word\" : \"m0zyovmyuuvyuh6jkw0jgxw6guzwj54k3i0s8z3m7jz966kldyygi3k423rixkvlksghq0tccmq635hp4qtlubmuwxgcdryrirmznptffb9ejxs1240lmfck9defqy5mhmfr8cddkw4tvrxsy\"\n      } ],\n      \"endKeyStrings\" : [ \"76518qn0bg7zyz52th4zqbyy9nkd7yhrwycp293xp1z7xkbxqk4p57lzr8u2r3bddrsbqob2w\", \"askjmrtn16bytm2pmvos8aqzjs545ziu29ueteqi3oj6nz579nq83pmx2a2217y4hy\", \"q3i45p2hnz6i3pxgvi6zby8db4ho6xh6rl9vepiujvk3qzj97mxg6143vbjevco3vsgins7p43oazogisgvbuoj6q2le8l81fa9249hslpt2t5b2k4vd9c1\" ],\n      \"dataSourceSeparatorToken\" : \"ofiks937l6jewkf9bbgwpf5exljylunlu43m7y5w09dta8yko9d1lsnhpdg6h702goe745wv2av5qooon\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"WARNING\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Quae et dolorem ullam inventore consequatur nobis. Qui id illo suscipit quod asperiores doloribus sit. Ipsum animi et omnis esse voluptas. Natus asperiores et et est.\",\n          \"token\" : \"cb4qfmhrnbwfv3svzhfnjxomp5kk8aazxldxk7qc9gg5msxs2cagb2ivfns4cnfgnlf1oum65whtsqimb5jc7fdy19fk2t5x9h5dv21k257yn0b2r6fyt4ltqf5zuzimnngak4wsctvg5zc0ohuun4mqflrpfh4i9mnus\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Porro nisi repellendus nisi quia aut. Quis aperiam asperiores qui aliquid. Quas officia praesentium eius pariatur dicta laborum nostrum. Dolor est doloremque et. At eum ipsa.\",\n          \"token\" : \"vikvvx4s832b8fj5prrk8uslt6ukj66s8ctny7syqth5moh3lza12ox9es1toumy0ijx1fr9z8cnfo0ye09lyyvgglc0z47g3oshqxds0w575k9jjrgmqphdkp4kdvi1w163iew\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Tempora non aut sequi explicabo possimus impedit. Accusantium aut voluptas laboriosam fugit dignissimos rerum est. Quod veritatis ut aut pariatur qui non et.\",\n          \"token\" : \"8x5h73i9517pmyuwn76m1ny5h80m6tkl3vpvqvr52mr9y84yvuam4bc4pnms9n6i1xdqqfzzyrgjsqx3v0vt6dze9sfen09f03y2mn2\"\n        }\n      }, {\n        \"severity\" : \"ERROR\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Deserunt tempore magnam saepe iste at. Tempora expedita odio voluptatum voluptate molestiae. Incidunt eligendi animi doloribus quas reprehenderit praesentium eum. Quo similique autem voluptas. Dolorem\",\n          \"token\" : \"i6lg5leo9v6qq05nk8tr32jrtvv6fvnkajtrx1ky39gfm9msztclmxna30i9ndq4tdfdw5eu5lf8vijbntvlry007giymar4fv8bcrjv0b91xs1p5jf5a8m2mpf5cqytpr8rzlwbs7gv8e36414rvrm4r9r6tzwybnrjjj4b\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Eos quia sint a. Iure vel repudiandae omnis atque. Dignissimos doloremque labore exercitationem culpa consequuntur libero soluta. Ratione necessitatibus nihil quibusdam. Neque enim nam maiores.\",\n          \"token\" : \"jth1kpodf460flivzq7k3mkw4toy14cavpiwdkagxm8b\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatem est et. Eveniet rem pariatur. Quod est quibusdam fuga ut nihil. Repellat saepe voluptatem soluta omnis.\",\n          \"token\" : \"7hoiwoqk3jk3lhuhiozisgieybenetzx71y\"\n        }\n      }, {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Repudiandae enim similique iste est odio. Quos accusantium saepe. Dolorum repellat officiis tenetur iusto sit.\",\n          \"token\" : \"x315zut9h5m4bev085l4tlyaycrdgj3lao3hq7r0i0btdnmqwgw9fd94t6werfifeo4m6c8vc0381dit1nejogn6j9cnyjotxwawppeguses47vmccph14q2inmsy15nkn265a0xdxziqqlur2zw\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Enim ut nostrum sit. Occaecati iste repellendus repellat id et. Dolores totam expedita aperiam odit. Similique aspernatur id. Aut sequi beatae labore.\",\n          \"token\" : \"dp4iav7vnoaj1j730rqjm6xll35wwx3m5hwoz13ibwtiz2f5ed9tozun1ix4w73cm62rha6b13b8u04744nmi05khm6xm69almy3y9qa45rkl12rgqdy3a6i94m1bajhkcf8jz9fyq1yl6cl0d25hh572mf23t05dct\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Nemo magnam modi. Eligendi dolores quae sint. Sequi et quod.\",\n          \"token\" : \"aewgotf8ptvvp8bj4cuhnbbt1tcu1g0j5n3dvtp0wouppi1eu08ejr83m1jubtee\"\n        }\n      }, {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Illo harum explicabo et sint officia dolor. Nam omnis nobis. Aspernatur at quos soluta.\",\n          \"token\" : \"ez75iqg1kkvun11x9l87uifw4xf6us3bz7qoc1qwfe9t7bbqbmykm9m2d65it976di0dz5n73gzmkcac0c1mxs6b96dierqsish0rr4e4\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Inventore quisquam dolore. Error aspernatur aut ad. Magni quis voluptas consequatur.\",\n          \"token\" : \"9ri2ez76glqwofx93ih82rl8abh3t0i5a3v6z2whmi60hne9rlo8dcqkawxw7esqi2ga1llejx7r4wj0zm12izzvyw99cjtbbehszdr4rwpncjod3hzg24dh23r\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Et non aut non commodi. Ut possimus sit eius neque sint. Natus aperiam consequuntur quia voluptas adipisci adipisci.\",\n          \"token\" : \"bftcu4zhqqmr7fg0xndjxja852smyfu47a09aks63mzj918j1yoomh2ru4bcsmqvfly\"\n        }\n      }, {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Sint eligendi ducimus ratione mollitia aperiam labore consequuntur. Sit labore repellendus. Laborum voluptas repellendus aut. Optio impedit qui voluptas saepe.\",\n          \"token\" : \"3iihtdiw29ysk\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Aut esse ut. Provident perspiciatis et velit quo dolor quidem. Labore veniam ut animi eum. Blanditiis qui tempore harum nihil. Ratione dolorem assumenda distinctio delectus corporis est.\",\n          \"token\" : \"w7e7pp8s9tn6b6in3xh8p4seds2oyirex6itz7utbatgrxjzfkm00wjrawhechqq5lxfw5b0xdjnzxy8rp\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Qui omnis neque. Pariatur autem quod. Voluptatum debitis sapiente enim rerum neque.\",\n          \"token\" : \"d2199u66al\"\n        }\n      } ],\n      \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n      \"keySeparator\" : \"ysu\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatem quidem ut quisquam qui. Nam numquam et nostrum consequuntur optio. Sequi eveniet quam.\",\n          \"token\" : \"evh9cmr42gbc4v8etkcjq8u9adtz2sak40fwddwrbytndf\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Libero modi temporibus iusto aut. Reprehenderit suscipit quis cupiditate quod impedit. Officiis magni eveniet voluptas. Natus et rerum quia. Itaque aut nisi natus doloribus illo.\",\n          \"token\" : \"9ilp5phba8fos69mb6igo22wsk8va8coxf28wt6snipmvjwpthsa97fgaojoy1ljvloygrbjjtp29qsr5iighfdcew9qay1rljuihuk1cmve9fdamzfrh2lcw8w4fcvsmuuvs7828101za2frqfdghbmsfjck2sjpiwnx5w9d6y380gke\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Itaque minima nobis occaecati et. Quis modi tempora sed rerum. Mollitia inventore fugiat ad aut officiis excepturi. Dolorum quia dolor in occaecati quo assumenda aut.\",\n          \"token\" : \"a2d924he7a2kvzq5tu4z6ilv8n39f4t3lv1j5tjzpga8szhj390975al1in03b3gbyqei237l4w6cbwkpkf8lhnrbs0txtbimuw8ufqc9m448k59bitikvvxtz0x0mvy8rjdcwpgs3uqky90dv\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.7245622536828746E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Sit nisi expedita unde corporis ullam omnis. Eligendi non sit. Temporibus rerum est qui aperiam autem. Totam voluptatem fuga. Quis dicta molestias laborum ut.\",\n          \"token\" : \"2o33i1o1u2ephnogioexfkngljq682dhlfuayxzbad88mqddcwvaabzfbkubv175k5fky30pvcy7rde4kbpnquxscdjlz41rb4mibwhud1vpsn6azju1j1uz8r9d5pnrix06fqb\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Autem deserunt accusamus temporibus ex. Tenetur porro saepe odio aperiam exercitationem. In provident itaque reiciendis sapiente. Quis soluta nihil neque debitis voluptas. Et itaque quia est nihil adi\",\n          \"token\" : \"fl9rrm3gqq1nlcastf9pi1b9a18kyptwd3mlt8f03jh6cdu5l55tw3y8taiwcaj5xu6fgf53tyhitver72359s8puvur53qx9de0ladyzd2hwjdii8247zzouiccw0ugtnlg0evp9ebxzpnqfgi3ok9kr49rfrqdj\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Aut sunt ipsam velit nihil dolorum omnis sunt. Qui ut est eos autem. Et sint quisquam nulla assumenda blanditiis distinctio distinctio. Quia et optio excepturi libero at quisquam.\",\n          \"token\" : \"hknkwv1hwb5836d3lpdaky22h1k2vgmrk8r7zdej5qvvlxtnkm1730xji4v55z1du2tzydtobxgzsf17fjmbb\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptas molestiae quo adipisci voluptatum voluptas adipisci aut. Et exercitationem consequuntur nisi atque. Sint voluptatibus sapiente et quasi et. Nam repellat fuga laborum est.\",\n          \"token\" : \"btjsmpqvp0xa2kcpx7uoq7eeqh3338drvwjm9ntqs42oyzsw5g5g98m89y8okr6n0p2dt3bccqcf83su0i6fzflvff01oh7ddkdsmi706gvug56x4b07cci6xie9dvj4apw7wum3usmriwtj4kclwr523tb0p56m5oya0qq52\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.0083811964467395E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Autem fugit saepe quis. Qui odit saepe et vero quia architecto suscipit. Mollitia magni tempora eos veritatis aut provident quisquam.\",\n          \"token\" : \"42d984d42jl2g25gkpi4265bj5urdtxtf6exno3hrqn0yh5vt888ngqnxk0mm26xjmu67xczny5x5h9eql03\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Totam est voluptatem doloremque veniam temporibus sit. Placeat laboriosam quo optio quia ut possimus optio. Sint maiores neque.\",\n          \"token\" : \"e54fg4n66wan3k5hg0oyzprlfncnzhkzd638bv1ssi2y266wotdjjjatnsrmzpujjfboxipvu68ao1lu4xqb4o0xn5lowosc671b193t3\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : true,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Sed iste sapiente nihil. Non officiis voluptas nemo sit enim. Vel ut repudiandae officiis assumenda accusantium omnis.\",\n          \"token\" : \"h9izaczd\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Rerum recusandae quos magnam. Minima nobis esse. Qui sint nihil molestias deleniti autem labore. Illo ut quae deserunt. Est iure dolores voluptates voluptatibus vel optio.\",\n          \"token\" : \"ks08qsis1jfhdszwe870c59z1pkrzpk341o7yrczhkep5mh9qssarjxzezl41qw4q1b55mfm0wto87krysuhaoynfbrvh7rl5rt1alcjxwcbmpv4\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 3.225098686061763E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Ut est sequi sunt. Consequatur similique fugit ad. Dolor non non porro quibusdam at nobis.\",\n          \"token\" : \"j93jiiqd013fkg6r3cqxg6ifwiq4ywg6pjcpun4xl3i8x4cy05lbev6np148dal023mg3pjuf3rg794sqlb59b5ak8dxb7d16h4er7zwxixzebu2u1fan0rbd8hbrvyi203x218mzs\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Ut mollitia porro qui ab nihil ex nihil. Ipsum nesciunt enim deleniti et qui. Sunt doloremque ducimus provident molestiae expedita veritatis est. Nemo sunt totam quam temporibus neque. Facere ut vitae\",\n          \"token\" : \"7hexwjg1fag6t5eh5qm5m5\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Quaerat ducimus sed. Consequatur consequatur quaerat fugit animi. Eius excepturi cumque ut beatae deleniti.\",\n          \"token\" : \"txfsj5tu61jo457v0x6usanmm2xx3fej3omcy9m98k31xdjkkyz1hs8o6v3fzsr1m1de6xwkpg95tfaqn0emydwgg91q8td7jaqw1vk24vsjwfo\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Iure mollitia velit eius. Laudantium neque consequuntur ducimus harum eum atque. Labore consequatur voluptatem. Officiis quia est aut. Ipsam qui dolorem nemo.\",\n          \"token\" : \"lg0l7jjb3f8c7vbs80xwj286t3od9o2opxj3mh8568wlpa\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 3.7159246175784984E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Ex similique vel nihil aspernatur. Unde quasi cum eum ut. Dolores ut perspiciatis laudantium labore numquam. Voluptas consequatur officiis ducimus et. Odio maiores voluptatem.\",\n          \"token\" : \"o8wys3rk0sev\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"yvaj9z7v0ap1ahirrislwc31bqa7qrqe5ivk1r5f3ys17gcqry27n5zrjgftfrdzbsl2sqdwsmoxybq496pozaghhzvvy6ymd5rfdnb4titktfsx4km931lvq4x3e2tjvoglto0jnxq9j64tdp11udn6tejrr5xk4delygsntop18lkdgb\", \"ddyo3pe6nq7cpo2jt5\", \"47khmj9ieg2h04t4zwxkhyxpablxgihb5n3gevl8ldgv7mfsl6eg8uoovzz8xxc80t1paxkxq5f5fjogigkodzng97kholor8o411soeeraqw7x362ctgny630bovh5khxew1yjhj7ebdxk3x6ti9adw\", \"q8ozx7w35e5rb4o5tu11y7u7y7tn2y2pttt496j31svqnra3jt38cvxa4bvl62hvr77rebfipkvoao0qyo9wiqm2boy0sqvbzmec9sl4te2u3wrfa0eou44n0k1xaz08reygtw0s0a2a66u9u0msnl\" ]\n    },\n    \"startTime\" : \"2023-01-27T16:53:25.382187Z\",\n    \"endTime\" : \"2022-10-06T15:28:25.382218Z\"\n  },\n  \"name\" : \"Keshia Morissette\",\n  \"details\" : { },\n  \"startTime\" : \"2022-04-19T18:26:25.382304Z\",\n  \"endTime\" : \"2022-10-05T16:37:25.38233Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d73aec3-c9b7-4470-87f1-bc9182056d35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.382516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "89e384e4-d057-4909-a1ea-adace827956c",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Peg+Bahringer+V",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 1402332282,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Qui quia voluptas. Et autem aut et nesciunt eius quo voluptas. Doloremque dolor asperiores voluptas recusandae veniam. Ipsam labore dolorem. Temporibus laboriosam aut consequatur ut aut.\"\n    },\n    \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n    \"kmsKeyVersion\" : \"kmeasugnt8bsiqb2hh1y4bmdnn2id\"\n  },\n  \"database\" : \"wuqxut9wvi6d2vj9ur1it6mzmplc1veqog2oqbn57rc6h0l5gwufmhyjboygz10h0wc5cjaa4earorolk8z2fcptid5jfv2jllwag6iqbhn46a9x1c0io7v8435rx3b\",\n  \"expireTime\" : \"2022-11-02T16:18:25.379742Z\",\n  \"referencingBackups\" : [ \"4l5kmcfc02kzwjwczqpugtrb79rub9xkg\", \"nqihhbysdfvqo6j6or8b2kj9hwzm9p8q71m4514k5d555vbk3aicbns9ey73gb5o7dlmr19wm8g1dy9a4red7otmyrar94uklwnwmlkcyc75\", \"fma1iuv5nkk341ng9fjvrguzl0l35nxynq1iv33qkwp9y1untiawvjykx745t4n0g1n7jo5847jjxpvrn1xulqrocw1hfk1uuj5gfj1rl20j7hc0hya783fq0icd4a0s0zi56nyekhi0b6mr2jcmpu6bvadw72wxwrie9xp29nsiu34jm9nevht2j0868kcydt9nzj6u\", \"juzjeq30uxe0u6y7kk5g37mfn725aftrgrf4konlegfu7nznvwp8um6zawyt4nug7nbcu4owe8owfmau4hihz0x6w2e6tb3yim3b6x1li\" ],\n  \"createTime\" : \"2022-09-22T16:14:25.37979Z\",\n  \"referencingDatabases\" : [ \"0bb9yc8yfg6h5n4x8j29c5bsruuhxaa0rg2afvgaa0ywf03r43ofgtvhcku08axcpvhmcsd8msrr4oxnyj6y77n5s7m8mquh85vxeplzvs8u56dq2nwad0flo0zipmfzv1eb572kijqsxitr9dprq17r6zpezz2oyk64xzqeayw3\", \"irprdkf0y7bsq7r2g40mwlb71hz9uu5p2m00a3zkk9yujmm52xe5ee3sfbq2yj1ze7hpx6c43rrqjaqn183ij8p4wuriz3dlmgbvmw5d7l7wd7f2awst9ctcv07q5aseh0j1my6w2363rppjglgrv5kuw\", \"9ipqv7545uh9xant1qeppo56igz9jkv5z01lojopoo649nllz442e3njsn88yp05fkpua\", \"bktq61vg50orogzxsqxw2i7dh3w\", \"tdgf4uivzs1dvdvv7e732lwvfpuoreqxphsfr0prief8kac8x222ixhzcqgemsbcia7sle38bbyr19tnnnmr6bla24wdmxigdupsx6kazo00huzd0f\" ],\n  \"versionTime\" : \"2022-05-25T15:36:25.379842Z\",\n  \"name\" : \"Shela Kihn\",\n  \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"maxExpireTime\" : \"2022-05-18T18:28:25.379921Z\",\n  \"sizeBytes\" : \"d2wcez7tg2hz5jo5e6hjp0yr8pvpyxna6pzk0l5loo3tm4npcba2rr9f5zwhsuepk9zjb9deu72btx37oqh2hayaloze21t0bljt8gx0uoq03bxcr576u2qduphh5dr7ce39yryvs2k1wc0rdt6kjwcqahn1ggled3vkyon8g9n6uxa4fk0hn66z34\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89e384e4-d057-4909-a1ea-adace827956c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.380116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a730502d-a70c-4b4d-8413-1f6d4c6a462f",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Mr.+Georgianna+Ebert",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ned Terry\",\n    \"error\" : {\n      \"code\" : 620532019,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ad qui reiciendis dolor quam est. Autem eligendi sit. Eum dicta et. Reprehenderit tenetur sint unde id doloremque. Est sed voluptatum ex.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"p7x1u74ohnv1eso5bgjp45c3jzy0eydfjp588z5im0vww20u1jks6q4rttmczl435pfg8e66ykesdbi6vxuacfongfjrtgjr5qdto2p3u2u3s2b46ex2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a730502d-a70c-4b4d-8413-1f6d4c6a462f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.379612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9091cc89-a446-4a71-ada9-8d803c85d095",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Luisa+Walsh",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9091cc89-a446-4a71-ada9-8d803c85d095",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.379408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e4646119-8a26-44c4-b72f-7d3cc4cf5c07",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/k564nuw014k6xq1zc50pu0oe0y4dlnmjpgftano6jjb0cdk6bxrdd0nlseeoh3nqr36ce8qb75l4dpla1weozaiysek6g7651b2gnkno0plqs9fs9zuyk6i5gzsm8xbq5hx9e0rlbrlbi272gctwpne1z31lpu9alw2gycpuczcrdn4x/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-09-16T18:45:25.37877Z\",\n    \"creatorRole\" : \"brdojsvf7b7e3rmv80g0zq0yhepbb1zco2n0o2ido71xx6q2tcaad9fx0vxpthyw2ki25np6gjw2jdsrds301d7cwu5naj3slzb1hycwpp2ybwqkw0oxj5ubsuutx7b29hg5xonwdjuwza1r348xvt6lliv879\",\n    \"createTime\" : \"2022-11-15T15:43:25.378808Z\",\n    \"name\" : \"Deadra Zulauf\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-05-10T14:56:25.378878Z\",\n    \"creatorRole\" : \"9nyrw6bmfu2quo6kkr491hbuan9clsc2rqnrcvkvjsi2xgvkg0ok7aucv88tu3k0\",\n    \"createTime\" : \"2022-12-01T15:35:25.378913Z\",\n    \"name\" : \"Wilfredo Kshlerin\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-09-30T15:27:25.378982Z\",\n    \"creatorRole\" : \"sn9k54wes41af6\",\n    \"createTime\" : \"2022-09-18T16:38:25.379018Z\",\n    \"name\" : \"Ms. Young Walter\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-05T15:17:25.379089Z\",\n    \"creatorRole\" : \"0tgvmyon1eyg564g5d7ofbw3mflyiq71723s7fxajucj1nlzfdscop1eovljfr8ui0boibihizspzcgx5usxdg1gmud5\",\n    \"createTime\" : \"2022-05-28T18:06:25.379125Z\",\n    \"name\" : \"Luis Hermann DVM\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-02-02T15:22:25.379195Z\",\n    \"creatorRole\" : \"9q2u1eyxhxtd0cug5ly3jw24vw7zbqt82et6bwtbd9ef4uzlbmgiro6tp4pljf1hb4r1d2rbc7odhf6jh9sul3uuzi3cy15c\",\n    \"createTime\" : \"2022-07-14T16:48:25.379233Z\",\n    \"name\" : \"Roslyn Abbott I\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4646119-8a26-44c4-b72f-7d3cc4cf5c07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.379339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a252882-43ce-4515-85e6-3e08ed5fdc4f",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/sgvhhmg/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-10-25T15:32:25.378579Z\",\n  \"creatorRole\" : \"hfsawe1a9lgu7y4v5mkhw2xyang94ecb36w58b\",\n  \"createTime\" : \"2022-07-11T16:32:25.378615Z\",\n  \"name\" : \"Mrs. Lashunda Gislason\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a252882-43ce-4515-85e6-3e08ed5fdc4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.378731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b27ffecf-4329-4ec2-89a0-cc5678262009",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/13speu8yhgyuo6fwcgc1hknv7f874wqjl4hyzgwhhe3vejlftakyq2asr67w7ads0z1cbcz2ik2fighs74m3mq62632fmb9ry6ecx04aglhxqsx9nfuo6iydjuvy3hevteiip2soaieywdl1tj0snwi3ou029iwonhumzw60yn/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2022-11-09T17:06:25.378166Z\",\n    \"creatorRole\" : \"88fi3iv4r4cxt0nxtknbpbzqiasb5ic69jtou9cjsc8yu1vs5thchosamndl50soyzg0anidthflth5mf8u3gztf1yr6sfpgeqor9jiyfowdity\",\n    \"createTime\" : \"2022-09-12T16:32:25.378209Z\",\n    \"name\" : \"Porsche Skiles\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-07-05T15:41:25.378291Z\",\n    \"creatorRole\" : \"ikds9dlor3lxtrp9rvmh11zo4cpe38i9beefxdsqps0djijd600941zm53ceh21j1vuha71hxqpiirczwm6pvxirlc0wn4pebr6loewq2z9m4ugbgo7b08uckydkhxik6txw\",\n    \"createTime\" : \"2022-12-19T17:30:25.378327Z\",\n    \"name\" : \"Rosalva Block\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-05-19T15:20:25.378396Z\",\n    \"creatorRole\" : \"2q7mzqkbl598gzm2jnud3tt3l9int00ei98u66h\",\n    \"createTime\" : \"2023-01-27T18:33:25.378433Z\",\n    \"name\" : \"Man Nienow III\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"06qszcyvvep3m6yioj6mm19yw4mv7as3vbwna4h3sa0wkxoy0od3cjm17vljfg4vv5pnklp2ymboealapr9zj4yclmpzwl3c4jg9lnjeyw5pkd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b27ffecf-4329-4ec2-89a0-cc5678262009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.378547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4898799-cf64-401e-a15c-e25fe45e2850",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/n9254dfptk0d0r7eup0xvelhe0k1wvv98o15cad2yqkeilc79cg7b74rjrxqrcfubniei5bfcw497ebop1/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tosha Balistreri DDS\",\n  \"error\" : {\n    \"code\" : 1606309305,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Animi officiis fugit sapiente iste neque sit odio. Ut nobis mollitia quo aut aspernatur ut dolorem. Labore voluptatem quidem natus voluptatum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4898799-cf64-401e-a15c-e25fe45e2850",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.37812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "75da2b8c-1a13-4c39-aab2-da3d448a2290",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/rd1urefilv49t1s4cct358ytbrne56qxzfidomubdwu92xfhcnlp4rvf2gl7mflkwylkqimz4r3zgw4r4vku5iiz6ydeac0yr6yjosh8yc/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"frry3uuitre1u0a2490gwti5b1u1k88mnmk20peg\",\n  \"statements\" : [ \"jn5618kotw4z5bkchp94wc67tttbxy3igfsyvbxbciqm1p25kinahb5ayyyfnfbhtyumaj3mso9k7at7dwjr36aayavfh56zv0zddq0l1a8wmal28kr4g98ctcd8mofdcys19i083h76zh56d11kwf91jlaazsn5\", \"14p6v38oe1qltxk6l9jwscviz62nb\", \"bbttr4oc0x8lt2sedb220kgesfv23ru6xqctrzxsw57s0rlqfo1cvdnle3enb7z90wl7zvsyimadrjo2w41ijty88auhinxdcqkjproagktces58z394s38e14k7abeu05n8p4sgk4vml3c957zla0klpqjm0qo90l8q5y2da8w3nohytiw69o8sh3w9glac1gvesx\", \"6qorcs714xzjm4n3q92e9l0k3evdsie0lylzykwsxmfbmx7heptd7u4tmd14gvpnnf7m4ubur8k539dmo8syn33gc7vub8vct1fz\", \"p875j4knppqx\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75da2b8c-1a13-4c39-aab2-da3d448a2290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.377915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0b5165e-52ff-479f-a76f-cfddde75605a",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/xya7en67u",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0b5165e-52ff-479f-a76f-cfddde75605a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:25.377791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}