{
  "mappings" : [ {
    "id" : "38821c22-02b3-3caa-99ec-8d2c04451379",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/1bdsmqcfd9j8phy46vmo4kji20ql0cqio3fvq4e1ges1u7mf2ne53pwc0ysqk2sldglxzecvrjredtyvqvct2vj8b2xxcdn45g4qsiougwwwu2agzwdtkaaescirbxxd8bcb3ds0dzmudjvuw5h88mj2fq2zb0ah1j1srmzvmuide0odhaj:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : true,\n  \"resumeToken\" : \"8gz2vj2gpdp7a2etrsu4n4ly83tdl0pjfz5wly12xtcze3sunhjfaj897qw1wad1qzy0avh2uuylqrn2zx996amv2zeqtr5suze6acuc4\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Toshia Purdy\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"cijsleg8x9vu7lt6uzndde5o2bi98v27rv7dmsp61fy650wt2vdyogpt58omatx21r6b0i6zk046dom1ucqvt3ojqfbto3fepn44ewk3zy5p7wtw2n9t5g36r9bxebx1ml8vxln1k0tnekbzjurycv89asl\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Alex Nolan\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"r24m3wj5nytam9q8i82pomsulkmgjnkbo2huh9jea6f4q1di5zym9zo4daopztcx253pk3wltq7ivy3sn3jc2z45l\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Miss Merle Bogisich\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"1en89p8f7zuqqter0xfq50dd7hllq52nrblul0h9o1ruqzckl8l200b02mx3vb3f8a5wfidfpa6mdwm7rsy7l9x61kcrkgyhnztypbrd576re9vyg4u2xyp1egfi5zjztvezkvhb8zc986lzbk9q1dqj5odnej3fx833k5v9jykztrv1xoigrwlqcv\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Bethel Smitham\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lfhjhc9xdoldi54f4i31hodzqb5cxsc412q64phipnkw3cmbtoubmsebwz5rqoqnot99km08n07rdqt91pl81sm8vm3d20\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Alyson Borer\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"6nrkgp4ae61svy0o2c86n1bncymgao6qx0xkku2wft88fg5h4lcffn\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Breanna Brakus\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"yfnzlsj1f1t2sk5glwviugnriea5g9nnm8km9ox8dy7zlnbqji21w00j6iekva51nz5u7pjewaau88p4bn2iaeccdawz28q44cmh2ydr555asrama9h273r2kk1ly4255nz12w0b4ylzvnnjfu977f7cn71y1g68ckrleqb9onuhwga8v4evh82jxe4ewcxk\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Xavier Kuphal\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0l7u85a2fe5qm22wiurvxvxrsmi4zjo9l340a8aoqqmgh3a4i8oohkjb0fp1pfy03711ocdpwkg28ng9gaata8tl9src2kyqfgy0uyvhh93c\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Kenya Armstrong\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2t8ol37b8wpvij9uayx5mwxwz9oy9domczy0h75gujbjt0jbgzjwyuikb2f71zk6vlturht2cw0ywsgyerxzoi78gqylczepafbjtm0hahj0j38jdk3mrh9ur9boow50eh6q9\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Kathleen Harvey\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"vx0e0841m0pih10xwjedf25fn8h8pjhsieh400rzdwi9c3qoib7t74msn527k6t5ky2i9orb5v3e1fpoia5v6gt957tmws888vuloxabb1ls1oejtmhb1bvfk6b0klrkbyrozvrt7mobu\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-02-11T13:58:32.210141Z\",\n      \"id\" : \"rgou\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"49a60hgx6vjzcvgudta5dn8j16qce8yc8d7uez1f1cw0nimlv5hff95k0owsq47osap38us01z3z17shu0u8d7j4f5drn4r3g0rhs3arfwsvvjq8gryjsg22wj6h6twmpkpa2hnmmvh1oa00ckk8r4ys1luuru7gpco8kprvhc9jqryqv8p4\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Recusandae omnis facilis. Asperiores itaque similique autem eos. Neque et et aut earum et. Ut minima sit quo. Et ullam sapiente quos cum voluptates.\"\n        },\n        \"displayName\" : \"Broderick Kohler\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 837507986\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Molestias sed inventore architecto. Incidunt consequatur dolor cum nisi. Corporis mollitia et expedita molestiae. Et amet repudiandae accusantium est qui.\"\n        },\n        \"displayName\" : \"Zola Schuppe\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 1073047037\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Maxime officia distinctio sunt. Magni cupiditate voluptatem. Mollitia nihil in ea quas facere asperiores a. Est quo architecto impedit. Vitae est quaerat alias magnam nesciunt et a.\"\n        },\n        \"displayName\" : \"Dulce Runolfsson\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 264123026\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Minus recusandae quibusdam et. Laborum sit voluptatum. Dolorem error maxime. Quam quas quasi voluptas.\"\n        },\n        \"displayName\" : \"Diamond Friesen\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1454608144\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Veniam sed necessitatibus voluptatem et voluptatibus. Explicabo saepe dolores nemo omnis fugiat excepturi. Consequatur voluptatum possimus perferendis et reprehenderit.\"\n        },\n        \"displayName\" : \"Dr. Neda Bernhard\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 504652311\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Doloribus voluptatibus cum itaque. Libero dolores explicabo voluptates ut deleniti doloremque. Fuga esse esse magnam pariatur. Quis eius in nulla non.\"\n        },\n        \"displayName\" : \"Miss Zana Hegmann\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 981960200\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Vitae alias qui voluptatem labore dolorum illo. Quisquam est dolores eligendi cupiditate possimus nulla sint. Amet iure aut excepturi ipsa quas. Labore placeat aut. Nam possimus et delectus et amet.\"\n        },\n        \"displayName\" : \"Shirley Bosco\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 225577534\n      } ]\n    },\n    \"rowCountExact\" : \"fmgpt6b2zwbm15l5xaizusglm4b3dlwepjuaua74v8fz5ksx0sfpsqn7lb7bdpqsg3n5iffj73rn4xragy5jafcsx0tds03xxlnbckv796svusj539detinral5kbrbjghawsqu32ssa38synrpho3v60cnkg9p8onczjloh5wd5se9hymikvklbe07id8quzv98k\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38821c22-02b3-3caa-99ec-8d2c04451379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b494a0bd-f72c-3f28-a16a-23c60504c7ef",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/adzh14h824a8lk5v73b2cubrqqv4ib1un2gbkfx2nmmc5r2h0m0ik22tl6u36cst9up2jg5ub0hn1foy8c09iuc01r5md7ahzg56lftgghhs7i7m3ajziqjy5h:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b494a0bd-f72c-3f28-a16a-23c60504c7ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "165dc244-1522-386e-a3c6-6e15a499bef4",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/8d063myuoveq:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Ms. Evita Balistreri\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"d7kcoe811ppsqv0l2auplacocb05c3jcam16afxwxs0suf1w7731q6jaygcz5ix3laeqynbg8ljtc9op9sdpam9ljmm9xafr7gqizk7hat14wbuk48knw6r61le7yaty7z4cl0vopvgtaw76rojwfqg78004r0s3m4ma06qnz8ior0ldfb4ss6ormo\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Willard O'Hara\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ylm31zwq4vrotiz3tfjh2pwa5esise2t67ug752pz2tb8zl3rjc31ij9b96j0t5zrcl6jxowcll3tofbtb5akecwpeer4g6ql6mce04o81isxcgf2mfra75r3akal9avhq\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Felica Nicolas\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lw7q4upi69m1ztru8z8b6nvnge1upgi8r3l7t7ivahbcxzulx61rvwt4nphzvd3aorhsipm1vkc7s356f42omv4s1gne4wi44n8z01xg0o8m06d6v4cn7bowuijb81fbk5max2b55ug29n1tsofjusaraxwm7xfj0vbgz9x8fh8u7fdir2m4\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Fletcher Mills\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"kfq21xctnmb06wiz306g4qgs4jjpux1stiym1rczoctfsdqoornua8pathyapz5lx2a7z2vte4kn9chjo9viue3qmkviitubxn730r4kai5gq2x8qay8arihaadqkf9861g489hg3ikfyu8fqy7\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Troy Parker\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"k0r6xd5o2uiwdyzw6xri47oyuz7q8oelynvnjw86ycqk6oglx7og0irbmk636qh2mxm7iz0wmhe3iyur82i7ja2tqvn1gqgtc6cp6itgt6t5v9mk2i8tdbb448hst9361ag5ern6rwfa5xtltzicp\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Tony Little\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ydegrc3a1b5fqlxec2cv0bewlu9bbd9hrq40edrsaer84d\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Mrs. Reyes Gaylord\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"6n9smj5z114u5sl6hmhtktipvg2oanb8lallebgigus616ohlmmsomttvlsfohu3j941dm7qa8dqzh7xbubfftdeeaz1mt7ntqlcgllgmpp2i8npi4irc52e7vtlvjzfabazjfv4lsgb6r3\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-06-08T16:17:32.208488Z\",\n      \"id\" : \"1s8s\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"zi7ah28xeyq07kk6shpnbw22x58q5853esh7b3kbm8fwuo9rinhtofih7nmcea4q8352156s644oxj4cade46aph3nqvkirjjprpkmo9884tgh07wv6f9q\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Nulla incidunt sit eum tenetur numquam sequi. Debitis possimus amet sed quia. Sunt nam dicta. Eveniet reiciendis perspiciatis omnis fuga quia.\"\n        },\n        \"displayName\" : \"Quinn Ondricka\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1982022307\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Error nobis qui voluptas occaecati quo. Rerum sed consequuntur aut beatae porro nihil. Sunt voluptatum occaecati autem incidunt. Aut non culpa maiores dolores mollitia.\"\n        },\n        \"displayName\" : \"Ms. Shenna Gulgowski\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1415923751\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Mollitia qui asperiores numquam ut illum autem. Et fugit quasi natus officiis facere nulla voluptatibus. Numquam et natus. Est labore sed et est ad distinctio.\"\n        },\n        \"displayName\" : \"Portia Deckow\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 549796932\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Mollitia eos omnis. Corporis excepturi quia. Quam quidem eum. Omnis ut nesciunt magni natus fugiat rerum cum.\"\n        },\n        \"displayName\" : \"Susann Zemlak\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1651852963\n      } ]\n    },\n    \"rowCountExact\" : \"u5b363tu95471fqg3reiauaq2kpubj4z6djn67pgj2kjljg0448jdic08ylgsw6klarz98lz71edov3ern8ng6mtabt6zzakx1sninjzgygwvc5ppx6khxu0bdwn3p3z9o1nqkx3ath0ehvawa\"\n  },\n  \"rows\" : [ [ { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "165dc244-1522-386e-a3c6-6e15a499bef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "2097ec30-9590-3c55-beb8-b37a724a7e80",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/n780scqeqewkfeqzshu3ll7uo4k6yea9bniy0oucmyi3ewbv8dg5lbt27hlq3grqtkpq9teaxo61s6hbhdpkphkybtesqufhvbhwzzpiswxiwdrawn5u3pxma9nih0l2zhf47f5g7u6fyjiljf4x2p3veqk1sqi7qh5e54jhapdy3zarnb3gjgfhxtqx:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"7kz0aqdm886ezuej2njrewro6bg3xz8tzu04lhrqpvnhgm2sjb456ajg1rybdwz0l\"\n  }, {\n    \"partitionToken\" : \"if8onjs1oi7foz5zqhj0rdivbbroycuy6y7dvbwj6t5wrrl1d1qh0z9vwsn2oisaeln36onpu15rt5ldvdox68s1vd0f0xozfhr2bbwge7ufoymzf3j7ctx6qxrrykajzbz80j0oo89kmxm7h9dfkpem8yy2u0\"\n  }, {\n    \"partitionToken\" : \"eoofpsy2wbt3sitvfh413xwtv92wli8ggmfz2x05v3fe0dnban1swu5nk0jl29d9i4bvofvar5\"\n  }, {\n    \"partitionToken\" : \"x1hwo0iu37omd88xiekysz6chlv0vhbl4ohh1zg91jekqvi5imtfihhqhpektxie7zo6ft2akobrh9s8qordmymoh3ajf60wwl57coeqahfj8maqxwxufxo7upsh3o7cir58ymq1ivb4hac0f9bggr\"\n  }, {\n    \"partitionToken\" : \"egfjm33mj4x247q46xt8v0t79vbj8iksih10db7bn\"\n  }, {\n    \"partitionToken\" : \"liy220ycpyliqivc4ror9wlzp4qrsmxz3u9fvl7j\"\n  }, {\n    \"partitionToken\" : \"kjp8ghoa3ql08a293twny646zrmn9ci31s3dmibbkwk3impb7xiojuf5g7kx859925vf892kjy89ixp3u3a8bajy5trjaze7v5j22qty39ppbr1fvmzce1uph952f6vv8sykuh8nnkdwmzvh1ex83h6vrk9ap66nlz0flaf9tou5znlsqs1zqcoyhmgqh6\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-09-27T16:49:32.207709Z\",\n    \"id\" : \"k509\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2097ec30-9590-3c55-beb8-b37a724a7e80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "b58983be-1386-3857-a0c7-de79ab11d93f",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/vn3auu27evsw35ry1wjothheth4eetatgdn4dpd36jb5vkgemjxxk8nlgfguhfwaeynu5naflboala80ja98iu5j91vdzas948p3pjfrw27rpo57xpc0q65iflqi6kisnlvwb7b4rgneru5mop22eyq8iy5e4veeldhg69x8ot5o7ruz6dzu1fgf75npzo8v:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"cuu6hci7wz0ue86942z1curun5t5zxlgslfx1x40mx5vwah1wb0awnyhkkg0rs3urwk56mpvinfq3ezm59f7vq9g6a30meb1zftq4bxbu6ebzvirih3ykftz\"\n  }, {\n    \"partitionToken\" : \"lc6vuk46ttxy5wg8aq83q53vfbxk9rdtk739kdqk2eoah9hxuxddoo3137f5\"\n  }, {\n    \"partitionToken\" : \"uz97q8gl1yuopu6gjs0x1n5lrzgj5hcct973savkw4n8ejhhltj834tcjpa51pyevu06lvktjq6fufnl12kbiacve4ixe3xtxph2bcoonsp014s4msb2l19rkpd\"\n  }, {\n    \"partitionToken\" : \"v4wd5ea9djlaamm4r82x9lakpixvotvkmm48xyjdbpxa3yex32h0ea9hcn9du3elcr8xbbds1jy8b00iaivr2l4cwesstiw82n12bixvo8s\"\n  }, {\n    \"partitionToken\" : \"g3egmjv3fum9nneeoccwbizujjb8\"\n  }, {\n    \"partitionToken\" : \"7jkh5dix5xjgn8r33uhrs6qvbmpqmjiozdd7bhue6zskwef2vyzan1qd6ryq2xpd4mde8sttzkdnsw2dsgrpy9rr7qx9fd5b49miildbpekdsbdrshphhyl6f70udy7yra6d36hj8mnaytakl00cw0fcp9lk522ebaalquiqnjvhcbs1362ik69vjstixseo5l\"\n  }, {\n    \"partitionToken\" : \"agzbas8jhqepl70vkzz84pbqu4ydgngcnnzunlpi\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-11-16T16:25:32.207411Z\",\n    \"id\" : \"q2be\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b58983be-1386-3857-a0c7-de79ab11d93f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e29ae5a7-7ea7-3571-aa4a-4553f352c425",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/ptd0hsc1fljasgxir888dyvaq9ep21a9uoizojvhzd920nr:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : true,\n  \"resumeToken\" : \"mx7s1dfqdylnn0pu5jfyka3qz72azptubsj2vmr9ig4od70bbt3067548g3ywt5njlcwwd7jkgxxq1x1vermyltf\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Mrs. Edmundo Jacobi\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"txe49gk1h161lh5mqh33r0gdsrfde1nvp5f5mqksg5hxnw54tci8splrsirxmanhvzxg8vzpqormmhmqau8x3380cy\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Brett Blanda\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t2kw7tk5xkt\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Felton Ward\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"4r9kmnbbob0p\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Sandee Mraz IV\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"lpdcjxgkjcczp04uripfszjnefv07lf7t3ynfam2o4g9u6vsf5y4yhkt9guh0cgqpkg8na8t2nj68ko9ekm1hj8jwhtqkmwd4u0de46re4g53qpwwzetyyxpn0xrek3qb78tth82tp7maz3iu69soele23t97d1brhjx8cyv64xtdbmjuhgj8iezq017rnm8\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Scarlet Harvey\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"mx6keecgyop1jcgg9b09bp2tu00nqkl039881pfw8s3j0wilklerafxc6tvogfvopnizukvlz3cxj7q8h8zdsh0rx3zwlufwiobdbgyz01rb04qixsv8x5b2gr7lfe058r8q12uj989o6zlyys\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-10-06T14:48:32.206024Z\",\n      \"id\" : \"0f8e\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"5pbg156irlb5xtoybdtb2z0ns4kqd8l2jd746vn3uickl3k3qoih88wn93h\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Aperiam unde tempora consequuntur sed a id aliquid. Et minus odio dolor vel ut. Et quibusdam necessitatibus dolorum aut accusamus et reiciendis. Et consequatur ut quam.\"\n        },\n        \"displayName\" : \"Katheleen Champlin III\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1623036376\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Expedita ipsa at velit omnis quasi. Cum neque omnis et. Impedit sed voluptatum. Ut est veniam nobis incidunt eum. Nostrum reprehenderit beatae nisi possimus consectetur explicabo.\"\n        },\n        \"displayName\" : \"Mrs. Hwa Effertz\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 289887458\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Labore fuga repellat in dicta. Soluta dignissimos et et culpa aliquam in. Omnis minima odio incidunt reprehenderit atque. Non dolores eum quidem rerum.\"\n        },\n        \"displayName\" : \"Mrs. Clemente Price\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1675241598\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Omnis eos id distinctio ea quibusdam. Voluptas sequi accusantium excepturi. A quas tempora ad optio aut. Qui mollitia deserunt dolorum et eum.\"\n        },\n        \"displayName\" : \"Venessa Brown\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 818767319\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ad deserunt vitae libero sapiente maiores. Earum quis distinctio dicta nostrum temporibus qui alias. Maiores assumenda dolor et.\"\n        },\n        \"displayName\" : \"Leanna Conn\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 787892674\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Officiis error nihil. Suscipit facere et exercitationem voluptatem tenetur. Nihil omnis voluptates. Illum omnis numquam pariatur id quibusdam. Fugit et quia repellat eos similique.\"\n        },\n        \"displayName\" : \"Season Greenholt\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 245965249\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Tempora eum et vero est ut nostrum ut. Voluptatem dolorum ullam in. Eos labore repellat voluptas illum. Qui suscipit ex quia.\"\n        },\n        \"displayName\" : \"Laverne Bernhard\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1253056123\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Consequuntur est quia consequatur voluptatum. Aliquam non rerum quaerat et maiores laborum possimus. Est quaerat et voluptatem et molestiae vitae aperiam. Enim dolor eum qui doloremque inventore aut a\"\n        },\n        \"displayName\" : \"Colette Paucek\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2116053493\n      } ]\n    },\n    \"rowCountExact\" : \"87cgiw9urrp9oab8fvt4hv5eam60wzyu0vc3l335rnd2j2ujdvhzitp6xs2wy98edsd0mwmsx\"\n  },\n  \"values\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e29ae5a7-7ea7-3571-aa4a-4553f352c425",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "fc5c16ac-707d-37e0-aadb-68d71375c13a",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/9es2gx0brjhexkxhz7qb55l439on5bze4jasznmb92hqpwo8sjozucs5a7r1kxi3975aq4ffe8v2apb46kgc2w106:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Marcelino Durgan\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"h3x14d4janrm\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Ciara Dicki\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"hv2jrb8wlcd3mg12gsrjtgie73v5a3s8e4rzj6l7aeespmbiq58o05gislmz4retm7lpcit4fdxxqa6qx9c1zesaerieqg60per6q0lwcaa4ydtpdpuhixpvqc9bgxlx7yjgt7lbch6es\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Coletta Lakin\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"g2sp2s3lp17vhtqr3b1vz\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Donald Rolfson Jr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"4tc8k2gzimszyuyx3mfbnh63hnuhdtdi03dy8fyepb7kgx73quk1dovtzq2i26g7onfhk\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Domingo Satterfield\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gvai1p8qouuwthww0qabxr15fl036dzgsq6u8tgm6pzouc5ev3ywrmdf88tvtqgi1ebu4odq942dnww592942ppmtpjm29muhhdi190cl9j0qfun0vnusykdgmk9c1930x8r95c2p76gry3l5ikn8iixfzuk044j01gomsm2earu0kdjcg06bscvku7x3n017\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Wilburn Satterfield\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"10tj5bxhiwvdppvcozlsjohpc7m2uy8lujpyqvpf7dy8l8ziif51oyxdau95lxpkyhuesjhd4s3ldk1uhb06bhnjzqcurntqto7olb2gi9x691u29almv38zm2q8wgarjl5wajljkqw27f0lu2sbaelyf\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Edgardo D'Amore\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"87ru5gkhqaeylg78jsvq9sc9242lg4zpego1n6zwlthj48ed119hsseex0ml8i1mptz9jypshjh79bp3hfkn50a5f6l24oe6fljfuvcgquo1stkuzm4e8\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Don Medhurst\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"onwpo4toz8frtaz4cqyyii7lg75i6javm72xf9x0ssbgr0twbmuh5o6pipkxsg\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Dr. Allene Hartmann\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"21flpdbgitapx5rywn29ar6cnv055iu4xjyi3h0r7xrd8chobwi2paice5ii6uoc2kguonbwly0vnmmzfa9q1llqnn53hzqsy9n4c8x1dxrxy8bd371r6g2b575mdmeg06o8jw5qmg5mah3g\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Brittney Ankunding\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"bdnkssfgsguux2y2\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Herbert Thompson\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"fm4yrgtm58fgt3ra8nehfv7s8gcfrmjdcusw18g8akyz4dkce3ui4oi8rfzzbg3k3nhgyz5urjbxcpev9bdqrc8awveswu89ii6u37ih9x92hei493i3gxqinn0thw5b5r8i0k8\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Mr. Antoine Runte\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"me8ha1nbeys17paijfmo7tl4pdi8xh25qw8kb3pho51838ogg57pdyryo6r0rh3u9\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-06-13T16:15:32.204805Z\",\n      \"id\" : \"019h\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"b8beeccn2ysklxyhkyl7ncte62qu9w0cvdgum3tt399ukjzn43u9x1lvegfvo\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Ratione sed et eaque dicta libero amet qui. Aliquam iusto sint assumenda cupiditate. Ducimus in praesentium ut possimus officia sunt consequatur. Eos occaecati aut cupiditate. Voluptatem et explicabo \"\n        },\n        \"displayName\" : \"Roosevelt Larkin\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1154403051\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Minima aut deserunt assumenda et. Qui et aut natus quia molestias. Optio consequatur aut. At ipsam ut atque quos. Et impedit ut sed dolor sint blanditiis.\"\n        },\n        \"displayName\" : \"Lee Roob\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 34249336\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Non doloremque est labore consequatur similique perspiciatis et. Quisquam qui tenetur. Est ut incidunt qui et sed iure. Perferendis et natus a vero ad alias.\"\n        },\n        \"displayName\" : \"Dr. Elidia Schuster\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1110279230\n      } ]\n    },\n    \"rowCountExact\" : \"r441vl0ot5s977rqobhrkr0xf8vs9pctz8qzzwws8u6k18ax9t66aq49fzi9z9ydjlfv3jqhlcrura6zld38kr0dmmvmu2zeri69xn0dws\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc5c16ac-707d-37e0-aadb-68d71375c13a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ab900947-3d5f-349e-8883-a94482d91d7a",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/bdaowg4oimsske1m0r5pccu9fe8cgtofdtfr7i26y7f9tkm7db25ztjqcbs7s71z729dwne3qymr6ohd8ah3fdz4gsjx5dgj:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-08-01T16:39:32.201858Z\",\n        \"id\" : \"32wx\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"fxz4dnljmgne4atadvh7xjo26kfcpssp0ayomaibgl6x24cdtilfo28ll4z287tiv0dr56669lovexwe1gc67gy42gj53zgl2edk1nrn6iwwp1kg7875d6ug0owherbq7y3qfizrr1q0qut4hngw\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"fqtkwz7b5z7r1fxspnoast0wjsaq7122o514g305eq8bdmdnonn1gqczwgcd9aip8bg7ha62dk8676mp0om4ugyn36v9oidvpc5s2phihybguu\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-10-25T17:03:32.202136Z\",\n        \"id\" : \"1i23\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"bige1mj9cnj3n5g7h3vxcl1l1drflpf2zvycn9p2zshuhvqt6k1ouqc28vzflydphx0ortix7rxkd7eywwt64a9090ok6aea7sgmbezf2gjxr1yvebxkllz3o9wabvuocgwi2lv\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"5ex4x165o22czma0br6ww4ugcv7md0xbjgsnqhs4tqer3ve5r1fsbwtjlr7gzmwx9n0a6r5\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-11-02T16:37:32.202355Z\",\n        \"id\" : \"940y\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"ds4vyx34k0e4zrz5l7bfe64cyxokyddia4arass2sljwftwqru36njajon42v34uyj6fphsb55fhql1wthzo1s940n5fqypx1sgj4ar7xxy0jbqlx14o1jc9hc35k8r2f34d248r9clw3nriud1339sg\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"43z3a10rx7\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-03-22T13:49:32.202592Z\",\n        \"id\" : \"56tt\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"enflcnvxixtzvu9y5r8w4fvcq6c17j4gzs01oxt7ur0iuw03qdjbfso8636thp6hd8ms9d6qehphj0a2asyvkbto9j04acx3zbe6f6pf0fioenf774k0s6677bb8o7dlm1wr6seh44gf37bz4c6evo8dgiu7pmuzht3zqz\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"vp2lfduz9sccyn548x72ejupdzjw5x81zlwrsnogjm4uhxlums7rfyqdbfdqvc0vrkx8372pzfa8vumcufi918cbs91ui8zfkw4ociup3m7fgjg3r1lonvxvp71z7iylwudnk2yx8ogddekyjgd4ar5c8qzj5xde8q8\"\n    },\n    \"rows\" : [ [ { }, { }, { } ], [ { } ], [ { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-02-10T13:39:32.202855Z\",\n        \"id\" : \"how6\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"pp2pxkiln7tc27orpxmzrot40tokxqtvsh2oovmop58n3rt8dwitpb00vn8erifyk0g73zm55rg2ws22t4i10k9xpf9mwegf4mzs8a4v2iu4668zn2p5lyrnjy5c7gorp0zwp5ff92iiv6ix8tqxjb2bon2gstxcu2j25x\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"zt2obfnv4o20zrinjgtm9i062xt9uwuj1afvzeqfshzgbmzo6k4bkoo1m3qnv0i46v8jeld32k15j49v30c6v6eb2hewplx282dmbyqwdqt3i0qsa2wzr7\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-05-27T15:50:32.203089Z\",\n        \"id\" : \"u28l\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"dzowkiz09k4v0qch7amq57ie0zuogjo208clo1w1u8y88bm3illeoqfq2f4sjqeemiyp34\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"ltp4ttmoc9pa10gqx0322q8l6ip678tgamavzy6icozw\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-07-18T13:09:32.203304Z\",\n        \"id\" : \"8z0s\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"bq53\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { } ]\n      },\n      \"rowCountExact\" : \"ai7br7n5lk0lsi1y9b1gbuldg4vgbnq09uvnifudajd0u9t9aursw4iuyvl\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 1848141051,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Deserunt sed tenetur. Qui ad voluptas consequuntur architecto omnis. Quia natus sint id et quasi dolores illum. Incidunt voluptates voluptas veniam nihil eum aut possimus.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab900947-3d5f-349e-8883-a94482d91d7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "e6725ca8-926f-344e-82ba-b6fb1f72382b",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/tp7g2kp1z3xb60x6rnw46uzc1f5pvbsbzp50qmv0nktbwl6xfbt49a718fgpv54eiiyrrii0wzlsdx5l22x2eoexyqju1:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"7svlf4e9yfj1nq5zeipw8jczxp8niam13c63ddzzllitu5kp9ebkigeys93styq97lkzfe3c90ooajbcuxqidi1kd\"\n  },\n  \"commitTimestamp\" : \"2022-10-17T16:33:32.201709Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6725ca8-926f-344e-82ba-b6fb1f72382b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "9f1b8a4b-c8bc-39bf-951a-5c5eb9da4c20",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/rfyzys09mtgrgkrlo2lp7l8ob6fw3i8cf3ws10yxv5p9tq8cybpqjxets81r8lnlg347vx5zpv6666fuybzfwcoh4equ6f6u5wzj4few8mr5r3skx1ov6u9q4z4ebhe4yw9o0h:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2022-06-10T15:05:32.201496Z\",\n  \"id\" : \"4870\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f1b8a4b-c8bc-39bf-951a-5c5eb9da4c20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "2cecbb23-9461-3564-bdd8-24d017f06e58",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/nngm0k42i69h7k3a8dyejhr3ewcsrbdqdayh09dlposg2hg9lkhakvqjcgd4j4s91e3sf5ek8jkhwb9p6dpiyyy10j8zdouqvac1xgjax30k69gt7mj0dmxg9u2fx16uo:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"7hakbhac8h1hyergu76chhxdvfzls9syfbd7bte4bylg9592nyphyanhcd2be10pwslieghxva86wkk3ex711fk5u996r7zl7yafh5cd6d9ysycmhz1wpdyh7d94va1laql63wqafkkssw5tuimu333hx6p3djii3kthpy5lfda1dhzu3hmce6x8rtly2qqsho3erv4\", \"c4s36oeadmhng318mwhp75toi\", \"pcljzt\", \"7hq87c5h1kdhee8ysx3visj3lde5erahv6a70x96gjyvuie9yuurwra9vfzrf7kah841pukh6p4emsdi47dbn8v61666a3144de1fw71\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cecbb23-9461-3564-bdd8-24d017f06e58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "1d69cc29-da83-3fe4-9570-c3387251252c",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/mnbe2mvswgxhfuk5gxxpfvtfyd0pqysa8xk9tw871diw7xbhm70utfl0bd36pyayyyuqm77rctdjpfuzhb2t9qtsorv80iaas:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"epnh8wl2treyd1me75xkw42l1stw1b88c6xc5k0r771zr9wb5chokc6km38qggzuwtrutygkopgr5fpw8z68ig7c3u152hbz6o0ylx63um9m0p5dx1kp9ksw5q2mn7khpmhxh23actixkp4626hnenhirxosfiz2t8ma8lik4uogx0jv33z\",\n      \"description\" : \"At inventore ea voluptatum expedita distinctio. Et corporis sed natus voluptatem nihil. Autem omnis quaerat est enim. Ea placeat officia fugiat occaecati. Nulla ab aut consequatur repellendus.\",\n      \"location\" : \"3gquc364nlgtk4gc392vhjrt7eflsj30iohzmjhqtwf90fguwjg2nu19z2t50dpv6wiuxm3h4h172b3dsc59ca77epsy5h60m3xipdznxpe06g22m4fs44a7ilkrxs493macfryhseizsqo3rv0988us9ilhu5n0lypjl9n7luy41wdxe96n7i2kc6wfktcigg6v5r39\",\n      \"title\" : \"Rerum ut molestiae.\"\n    },\n    \"role\" : \"m477b623h1z8l12i\",\n    \"members\" : [ \"gl1je5i45uffmn4rml1dlhjmcle7zjbt8im6ojxqzv1qk85prd8t6chxv3z1s03uee158gve4pm2ow22zf1b7w486xlbhd6x930jqn053vm3rwg3qrmzvz04mhhwfgvhd2\", \"65ag6yl56ojr6pve44a7xl97ihf14xj8a2bhcyx12az1bj2y4af55o156rowg13buvqyrli\", \"nhoculc732dphndt1ni2c47wqv0ynsjk3nttzwzsakidjl7sbilhb4wm0oq2zl6qdme7bn3l0cnrkf932q1\", \"m5dv03clyjm8qk58xfm21bana3o5zch68al1v4xi84oed1sobzyavqenhrevoo8hjzzxchjamd6fh5tqvm6v5n47cv9hjk442g7bt7zfv03notck6v03l76znalvnvzpdyrusuoykht1fwp0bau2\", \"quwoe588h9n2kwgaamxruhdgi8ces26t1db223evfd13o89sbiszsivn0jfr9bk2v7oxjwp8ta2l4shqbobm8b1ogm2feye2d2t0wrnodgkoqs7009gbr231s1xfavhrex402utv1bxptvsu7rta4l4rmuoah1pjwh0cz26xurjz\", \"7difk64k3cemp4qfyj27i5ime5541l9rtixitlp\", \"06vfjto39969i98so6awpvv5o8txal6q8hg3bq5vf0ii4pmd3zqs6izjouo9co69opag5jute5obnsw01\", \"f38hj1ovl2japs5kd1nbqbrum8kt3e1otvr4npzc3le0hp1i9c2fse0deuv36p7jlfnu3s3zfp3x7ivr0arv9ugv7mq9ohda1kbia6cqibta\" ]\n  } ],\n  \"etag\" : \"aperiam\",\n  \"version\" : 1413308465\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d69cc29-da83-3fe4-9570-c3387251252c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "deb92618-495d-3bd3-9c62-679ca8833e50",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/a21i9u7mv2hq8av4hgpel9ejkcf5oyuyktmkld3:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"cik2oc7sxmmzoqrzkqx4puw5a13lwaukcd3cc5tzyhhg4fpl35avbya9txage5ncwegda1oxrri1wyh3h8zruq6mj6fshqvjksr5unru6nnaztaagblb1fx5ojtzxlunrgozdzmo6ivfa4pu55jxdc2ifdc4jouz\",\n      \"description\" : \"Quia voluptatem quidem vel dolorem sunt labore amet. Nemo adipisci consequatur hic culpa. Labore numquam maxime sapiente. Tempora ullam asperiores aut saepe.\",\n      \"location\" : \"1osfli4j2dpf8xy65haad1cdxy6qsbzum932urhu7bvun26hxcdy95d8mfrv8zm94rf0m2712w0dqq8xsijbvs99wb1q8rwzp11pripgce8qrjwmuauirtz4nvfp77itfs1f0zowstu3dzl0l08bauvaqjfmpf3d6fjcpg78rygt99zku1b2muqpmu\",\n      \"title\" : \"Nulla dolor sint molestiae ut molestiae.\"\n    },\n    \"role\" : \"planwmzjd8o5n36qfhump2c4ps700z3ch6mggktwq3mskz0d21rjh62nh4j2htxb4ntessj6z\",\n    \"members\" : [ \"u63j5naoaik3n4wx0gwvfognm7o8iwg9\", \"c2ihyc2v84v\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"32jlcdv7utx9hvg4gbulrn39c4yuugt68lkqrti78vgd56jwualcg7b2yqqxwbcb59mnkmtlv7tidk7a386lu315jpdub7dzae4twd6r3l0ckjiu9d2skejnvr8mocvwjhfjyp2q1poswyp029henwmcbuqqmls088u9rj5lz7x5qn\",\n      \"description\" : \"Id sunt est nesciunt tempora. Sed perferendis ea. Explicabo iusto qui dolor. Saepe sunt est ut laudantium. Sit necessitatibus doloribus id ut.\",\n      \"location\" : \"qdixouvyqiv1k5x86ei9kai2egu2oq1sb3v5lo84zeddaxfg\",\n      \"title\" : \"Perferendis perspiciatis recusandae sapiente minus.\"\n    },\n    \"role\" : \"jc5ney2v9xo39\",\n    \"members\" : [ \"6jqykcs1hv92l8nkwvjwfu5rwc1s7snhngeuz3m4vy8hni3y622z3jq2hdxaae4nrnt3e3a59zbe7kyd91qkbshlcoojwlxpizn53er32vq51xc3\", \"a3sg8hnbj9o9zye5erx9devu2jt3kbgn59fgssaovfd3zn707ng9wgefgj1f2z3ih7fff9darqs6o20pd9vwpk\", \"hu7i1bfr0hqhc13f3aufn9rxh8q12ch9jimq7qtmrwmq60aumeg6jk4a3buywkom3m79uaxtpkxg02izd0tbluzca5s55s6r9r2ctj8ot6evov09jh79m3cl5fmsd5w7plyqz2g8\", \"zwrr32p7gosdp77jdxm8s1howy\", \"bovko9mo9n3u8uopx3pb4ymopbzs824n0ss2h3hba2eebfz7oie\", \"l9nslzypgzpv2rqskyt1muikw\", \"tbbipueso606bfh2pbbwej1ipkfualwfn19hi23l51lhha4u314esvspx3x458zlvjmg3zcu4x9ogvgbx556tehm9x4pafied6ga99m0a7k0dam1f8pwo8clabbhrjsfsuwk6ws2re\", \"r202blko34i4t12d94lqvsnu3dzvhap055m5mqirfpqytt5lz18khd7jcvo2hg2oxnfzkbvst9xgl51mpvwm30r0emzvi5e5imn78i4h7wl9ooimvttpayi70aolkmtdx3nii5587itxi8nss\" ]\n  } ],\n  \"etag\" : \"optio\",\n  \"version\" : 1902334183\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "deb92618-495d-3bd3-9c62-679ca8833e50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "c7bbe38f-1873-3e03-9bba-22f5a90f88a8",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/ntu5wyfeh9v636kepryop7rizg2tfyneuggp1diki4/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Sterling Kulas\",\n  \"error\" : {\n    \"code\" : 1193518421,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Facilis nostrum saepe provident facere. Vitae nisi aperiam. Temporibus facilis excepturi ducimus. Quod ad necessitatibus mollitia dolorem nemo autem adipisci. Et eum earum est labore sed autem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7bbe38f-1873-3e03-9bba-22f5a90f88a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4154182f-9bb6-3760-b0a7-b0c26cfc710f",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/5sj2h4tuovweamzjdjoyx15rmu87pqs1pkkflxx0c/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"2ng3j4vnz7ibys9dq28e70wvrolr3xrbu9ababqumgj9j5i1o59ap7qgmawipnhj6pswcxfbuk\", \"4lyqdu49nyzqz8ywahsf4s97u4t6zzqicjp2nq4nz2xnb0x6k0r9h7tyy1i8divwm5lhg7rmpbyo8ehaquasckaa3fgqq1wupsbhe50da5leaezmgjo4dou15v3lmfwnmff4051pydk9tcilyej71wde8k78haznpztnup\", \"jft6fprqiygudc34a7he55g6l9n\", \"3mma8x\", \"mmu0ik\", \"buexyc5vkg3ybyvfif6ta4u9\", \"s2ev8wdioo4q8aae8z3mjq6lc4y05sy6k0ovy3w20kiqo315gsww2hszjtsb34htsp1ujkawgjpz4nua82r9m4ga9tqvnxsei97wni9jfnulhyny\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"d1mvqopfp5w15vmf9umxsfahqstc8j8x16blbhcp9rpxreyxcvbaxvkqad0x9o3tswa1w6u691tihsezk8lxbmi8cg3deehyq6wd1z2uu\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-10-09T16:59:32.199891Z\",\n      \"upgradeTime\" : \"2022-06-27T14:15:32.199926Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 486095628,\n    \"createTime\" : \"2022-08-22T14:47:32.199979Z\",\n    \"displayName\" : \"Simon Rohan\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Miss Burl Gerlach\",\n    \"nodeCount\" : 1916805794,\n    \"updateTime\" : \"2022-06-15T13:47:32.200111Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"oqia4qyaw0d3hm09y2c4vex8b0dhxr0ebsjtudlix325g1jvch75iyu32s3gw7rvixhv7gcxn7yaro3gdt16vpkvxk5lcnhedx4ccn3bv337m5satj23w9ot3pjvjyxg6a7o3ehx9kaoi30d7mmizkdcpu0wkoscnh0i6piishnhm1ajwr1dj1vcvx2mk81yc0aw0473\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"a2kvwqrr90rauethrij9qf8ogid6p4rsz72d4abv2nlxxlqo8n4e0jwfw7bby64sgobf0ggx6bookykpl8rxrsulmud2hct9vf0z0g5tr284g2kivzgdr8rsyvx\", \"ig1fxjnnlhkerblqcvgbsn9bhx3s6oftzdv6obwkst6dzz5sd4pa8rg5akp6f7t3pcp6xd65zlxy\", \"80owtlckkp5tuxozprawdue9v126087yl27t9q2npllzpd2o58kvujkuray50umktnqlpks\", \"exwdj0giw53h3kj26liwam2qi86kwg61z4ihpgwihjaclvbymm9vt6o6evgq881fjds2ishnd0ndcm57rrbbend4cv5tf4vkqb653d3waw5ykn\", \"boi87sutq9dsdaxbbp8gg5tmgmfs2sf\", \"zwsu1sot6ij50mef67d6vxae94arpwnrcu7cw1k22hspj9jcts30cfgha6is0dl6727lo8krg0bkgkl6h8tx75j1gqtnonkgc0rhw6v0ilwszmv1ha1rmo3szv09zua58lwa6fulcqipjk\", \"dwdwmyv8muywlem292sxgfsevh0bd4u4km1p20axtqyab9tlgaxxl5tkzvpnnkfzhxts3bx2iiyrltt6j6w9g9ntb6pbypiu3irura48zie82np812buykr1hb\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-09-24T14:30:32.20021Z\",\n      \"upgradeTime\" : \"2022-09-05T15:57:32.200241Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 521597783,\n    \"createTime\" : \"2022-08-20T13:10:32.200284Z\",\n    \"displayName\" : \"Truman Buckridge\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Miss Edmund Hahn\",\n    \"nodeCount\" : 789829192,\n    \"updateTime\" : \"2022-12-08T16:51:32.200405Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"xg60sar0x9uyhjgayuh4ibk3weqc250e3pwu3izppx3hlc0t3xhtocaxxj8\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"3nj0jnyguawepu9pp0lrpy0ip9twvf45o8dj8whkbzoqnh6bn1c8ztqyjjyt2ckqrip377zhm9n1hwqb1t6t1xc5itw7f6d2x4jmpt7umbdb7u5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4154182f-9bb6-3760-b0a7-b0c26cfc710f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "949b3b20-5b25-38c8-9424-86d244b099ab",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/sw6cs4jprco3zxmjn1i98xw7spold2ta23ni9/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kourtney Mayer\",\n  \"error\" : {\n    \"code\" : 957719415,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Molestias soluta harum non quis. Ex eveniet non rem doloribus et eum voluptatum. Culpa tempore laudantium. Dolore consequatur odio consequuntur quia corrupti iste quo. Quae doloribus dolores in earum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "949b3b20-5b25-38c8-9424-86d244b099ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "9ca1e486-ddcb-325f-988a-9000941e1898",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/7rvqmwv2x0l1mh5wgz5l4n3b890z4ojem8ytbap71qs30ifu0juvh70zqyhr2dw2k420d45zhe5yurc8/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"m1ebtohar8ld7l71u46atdmyo3m2m3nkluhnhiu61dt4dhds8oj62saq7ket8xbgqbp8xs18qrbopzgqmnatzauizoapmvl4qggp6qn3h61ryeu3gzna1ar64yg8j8sunxo47pg0sld7dyvmlm6\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"FREE_INSTANCE_AVAILABILITY_UNSPECIFIED\",\n    \"displayName\" : \"Scott Yost Sr.\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"xb85wagluwvltuiwrm8salvbdwodibf\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Darren Stroman\",\n    \"reconciling\" : true,\n    \"etag\" : \"asperiores\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"sccx3pre4ov8lv3agrd2v5yd9stinwmwv20e6a7qufqy1ht7txqdl63\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ls97puj3newbed1slxg9451osqdzsba7biyj4mheomaqb04587v2r3fm1enhjonz808nlu0bun3f7rolcqye3uc6lwvuozvbgmo0wus0k32e2w52prg1i4m2ypbbyyanrahd9u73booybhctwta6ubjsrbs30btmyikvwaiaiihg80f78knqp8ildg1voz\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"d844kvq6ncbklijw4dk7amty8p2pxbh7ljxp9t3j3lsde6hn7bh9bsgqey5sh8kuthisnzaw0bleex1vsb8jfwglj2\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"lgdxsnzsm8snsmt3wx3xogxsb6dktb5dz46spdq8sg6x48nbmb1h08nx2xyd1ulsrg6bmd7itb5b5g6uuyysm4zm7u1kkh4c2nzl5ev2\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"s9ywjdhjiimh77ornusxf7xl9osloieadgqtwfmrbp2x6s1x33igo1vpseccry60i1awz9qk9nng4xexpx94645htez4ed8oq9y8wqokryd9iqadx4mjn3g1q31xb1vpu7lnvdc9mzgub3twqnxplobx0ilaxcvf2o1nwsnmac0xv4gnhb6cbaj2qeh8s19zxg\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"e8bqwhmny35n90b0nv3xl5l9g42czfwoeh1we7zc11do0h470nw8y0dw3mz0lmva4d2q1pnelkjzl72dqspa\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"c5ol9ouv15uwx84pxtalh11ymp7j7ss1wrjxit33dd7lauwos91prclsdcmwsxhrguftq2btf35k4nbl6kna2x6qiaspj7gw0erp8dej9fl4dmbcuavelr82udaxkdx25b0ulqva5h22ikehc41dlcmdavv5mjg3h5tbt8ku9x40r0ao8oidlcqytizcuylkucjscs\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"uekwg08zk4awx5a3el1y89farwox2808vdgzk0o8ts4xkjvdbfvhkprlqsxikgc1clfmeqd6aamv5d3dcqpmg66sq5pvlplirqqydu32r2cnoe5oy3gnb2px0a2cvb9r5x3zcbzvc9el5uxdhhglsmvvsw2gde2dxub9h7llwrot8t4o8yt31\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"9bpj87dkjwiwcc6bi4a2x9o1z\", \"nc3j66tgkomcugaqdblcepo0cc78sj8daattefm0hxitflozlqtjopttd20y40oc9zx9mtonjah9vzrf4vupr1ue1km4is4fhhoyhzg7v5zr7jxrmr8mq393e1avidx3tolpie8twxqwwx595h2fb4kv5l8e41htp2yp66qybio\", \"pezfzcxqo7l7xv5lszo30dwl5y\", \"9h9d3piffztjhpbg1tjijxo5hmu5o5d7ze3w8lzmpexv4yvr40juounius2et3iknouay0ml1s9bo6jea6tig3f8u2wiwqtucb02s87vs7qzdoulr303poai4hljnx172rldh7qbpqgeylgksjdhwdy\", \"32np0o28yea2s8cbtykes3bml8hyqixpb88us2hf038hr6ag2p\", \"xzi1b67lbzvnni6988btsbk31m813str2db9m18kgs0smz8h62basdvnmnk3plqg2fgjjagxl4jhjcmthqv2ap2r0l323xz3xe38pncdydconya09ti75p0wkrbrpvykzibu9igc6nnm175zm3wkvs3l30\", \"q8howsclo62t7yxez9s9vsua7gcfbt18fgkw2kekxonob6hk643sf08ac\", \"bd1etlsrmxrr1f8lzncddvkx28tsu9yv1xz2ldnx2gw94ksb9mgsm8jezrgbixu8jmydjcccxczjy0hs9em8a7q309346eydvz9ze2ec59bcqcsyp130\" ],\n    \"baseConfig\" : \"o4q8z7s80eftf98mkowuu7i46elins0a3yjez67ca1l8cbb7ivvptvmpnqt4bg9g534rf0oxfy97wr2ap8dsxoeiegajtajpi0sqdtwawbvghw86k67jatmta5w0tuqq59qvqoukct9ta719k\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ca1e486-ddcb-325f-988a-9000941e1898",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "cb170975-8426-3e23-9387-16ad6c9d78ff",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/km43yf73p7zz78lopuk5xa83b4pjvzqwpttjxaj417uil4b61x68dm9gse51vv8la9wowpih4g/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lyle Zboncak\",\n    \"error\" : {\n      \"code\" : 332558894,\n      \"details\" : [ { } ],\n      \"message\" : \"Laborum iste et voluptas quis aut. Vel aut similique voluptatem totam qui voluptatum. Et asperiores ab. Unde doloribus autem. Dicta itaque officiis officiis dolorem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Quintin Volkman\",\n    \"error\" : {\n      \"code\" : 369870697,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Odit et nam corrupti ipsa. Dolorem ipsam dolorem. Labore aut sunt eum dolor doloremque eos ut. Fugiat nisi ut corporis illo.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Glenn Lubowitz\",\n    \"error\" : {\n      \"code\" : 1319383717,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Et maiores dolores a saepe. Suscipit fuga debitis aut asperiores nesciunt. Quidem ducimus blanditiis sed natus nesciunt animi maiores. Distinctio accusamus assumenda qui sint.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Daria Jast\",\n    \"error\" : {\n      \"code\" : 995095799,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Placeat hic molestiae voluptatem deserunt atque. Inventore harum eligendi dolor et veniam aut et. Laboriosam reprehenderit dolorem veritatis sit et. Laborum culpa quam omnis. Nobis vero corporis harum\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Debra Bauch\",\n    \"error\" : {\n      \"code\" : 809498542,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Non non enim voluptas sed. Velit modi adipisci natus aut. Adipisci non enim nesciunt eos. Harum sed rerum est qui nisi. Voluptas nesciunt id laboriosam magnam et.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"vs501chi72n31bcpqalsnrhlpcuyur954zjofkaoe6cbma60jzo580xf6zvf07dum797s6t8bohqgjkrcg1nbs9r0qmty\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb170975-8426-3e23-9387-16ad6c9d78ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "2a871f20-5d77-398d-8ac3-0a4564b3688a",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/wpn0kzmahkl8fqm459qsbrxsdyw59cuhklzzaldktxxsxfazyi1jhrivcb6ainyuzfspiglwl37kdawu0p8vz3xuxk9xrbi3ph5wbtkrpbfu4feojnmb9itqtoc0sngzukw1yfzpwtu35zt2247z24z6udfsewo02gxsualpss68hxo/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Yong Watsica PhD\",\n  \"error\" : {\n    \"code\" : 1685726130,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Consequuntur deleniti rerum earum omnis quam. Vitae consequuntur et quo in ut expedita minus. Et repellat est architecto possimus qui iusto hic.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a871f20-5d77-398d-8ac3-0a4564b3688a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "3fa86f15-f51e-33e8-a529-58ee7512e73f",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/crz3u91t6sbhlzo1c8hhftw3t7ta29ms3g4unc54y29byciprnrvmsu0n3xt28esvv4gtvqduc08jbli2e2hdh909jado7ph90jo9ja20salznk2teirwdfcodqjziq1pvdu4ohkxck52hgvf6vffblacw4ebkasv5d7alw7xrvdk/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Alyse Welch\",\n  \"error\" : {\n    \"code\" : 653380526,\n    \"details\" : [ { } ],\n    \"message\" : \"Debitis omnis distinctio perferendis. Nihil illum voluptate provident quisquam nemo. Est sed explicabo est distinctio velit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fa86f15-f51e-33e8-a529-58ee7512e73f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "bcf17b93-6d0d-3c6e-84fd-db041fb70792",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/srv2c9wb8ocbmwa6f4z25eciaemcsanp/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Huey Schumm II\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 973749783,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Fugiat sit quas ad quis quasi odit. Qui in sunt sit. Unde dolorum iusto voluptas rerum. Aut illo velit beatae inventore recusandae.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"vnijsc6gxr74vht0co45ugvxgmi2ik316ecdm0rx88i0susguoub8c7rwjlt74l1yc6899riylr246lx8smsiwzzpx1vi8rfzghgfgv269urnth226h4or91ac0e6udwy0d5j05e5tfd1xvcbsr7nafsgacmfrvoaeurp\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1790435246,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aspernatur exercitationem quia hic et aut et. Quia dolorem magni voluptatem odit odio voluptate ipsam. Numquam quisquam et quis consequatur dicta est. Ab aut quia necessitatibus. Rem vel assumenda aut\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"tmlt\"\n    } ],\n    \"versionRetentionPeriod\" : \"bn4u17yltehy\",\n    \"createTime\" : \"2022-06-14T15:59:32.19267Z\",\n    \"earliestVersionTime\" : \"2022-09-22T14:57:32.192701Z\",\n    \"defaultLeader\" : \"ehauf3gf7lj4mt1vdf8dqmlu0vxxsxhphe6o6kvxb2fx6eby7fofqf5d1a4cu83v313xxwxny11a1vhf1rqc5i2bv76tzkyz73whpumhd45opnz43nw9r94mflkhjyk7t7q5ejunrjnrwclzrgb1kx34slqrsy46qmt5kvi5gsm64obj69uas6ovzens5v63xutkbi\",\n    \"name\" : \"Veronique Morissette\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"7v01ebq1a8kov8ntwp85qlh6cfoelfdgd0fn8hz611ivanw8\",\n        \"createTime\" : \"2022-07-10T13:47:32.192827Z\",\n        \"sourceDatabase\" : \"vd304m4sb137uhqgpz5vw24ejaajt4e1rx7zmkvqkq925pb9rdj87kmvzkkjzm\",\n        \"versionTime\" : \"2022-11-18T13:58:32.192875Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Isidro Ankunding\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1587198698,\n        \"details\" : [ { } ],\n        \"message\" : \"Omnis et autem nulla occaecati. Qui quis ut dicta. At autem nostrum quae dolores earum libero reprehenderit. Maxime quisquam autem.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"r7mlgqnys5fvysqlazjetg2b48r2024narnxuu6f6c5p1wc9x16jqo81dh5d6fgxe8jwsowv3lzjdj\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 26578791,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Cumque et rerum. Adipisci et odit placeat a quibusdam sint. Possimus asperiores excepturi quis non sunt.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"6qd79mlfpnt34ltsp0ycwmhf9y7yt0n5j35s36nd47pgyv7ngn499nofk9m76dadqpinnso8ug15ckp8k46zm4fm3om0xrn8s65cnl3fkhzgagqr16rgtdrfwpf3jbirwntf1okvlbzj08jnefo6\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1443158436,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Facere temporibus suscipit. Ducimus non qui voluptatem non. Totam inventore minima fuga explicabo enim non. Qui voluptatem itaque. Vitae corrupti voluptates veritatis commodi.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"kaa98ydymb6w4jokb2th3t73glrznikhe1ohfj6cc58ycqd9rkw6jjbzbj61l1krwd1kannbykm5mx2\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1846429402,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Occaecati ratione quibusdam. Magnam nihil quo qui asperiores. Tempora neque eum atque voluptatibus. Et reprehenderit mollitia illo laborum ipsam nesciunt aliquid. Maiores ut error quasi sit.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"af79v8k2ggz9zfedyopbxrsecyraqvdcix7drje0risa1mddz1ndv4rsi3bs0vf6f2lud7qexhrdybpa13oqi4crlpyymjjrpy3oa134a4grfos8lucqhs9\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1141948664,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Provident illum accusamus qui voluptate in. Ipsum itaque occaecati ratione distinctio corporis. Nemo id cupiditate rerum blanditiis corrupti aliquam. Placeat et recusandae.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"3gk1yhddjtdkdthvfb27a5yn0mqx52acx6du66vxcvc2ml6x7dkh71bxhxlq2jw7465fl731asw5k6r8yhiq977p2m2tuxr78h4n7ndq2e4qbbeo49akx2fnqpqfoebptjuodawn83k7p5nupd4w2a64\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 403984948,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptatem nam eius cumque inventore vel. Et eaque consequatur repellendus. Id rerum dolorum vero et ipsam consequatur. Doloremque non aliquid nemo et eveniet. Praesentium sed autem ea placeat.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"0de5xip3j9777o1mj2nhp62fiw9bh2e54z50inshq4e7nbi6d0fi93qhtzoxv97lw28wh6njexa4ccnf1tuuhlwpoa6rft9pxyvgkb0bcj4bsooyr5fzypuwttc4gdaox7bkchsrfsab3u9b\"\n    } ],\n    \"versionRetentionPeriod\" : \"rx1o5d6utyxhdvs40c4cfevs0x1jrwrlo4im7n1h4g1g3xqypzqxuiv2rtes86js68l9u5art7kqg3j01qr3lvbhmd0epm0ycmetyjm8jl6tna1z8f5j\",\n    \"createTime\" : \"2022-06-17T16:02:32.193435Z\",\n    \"earliestVersionTime\" : \"2022-11-08T14:03:32.193465Z\",\n    \"defaultLeader\" : \"13bzt\",\n    \"name\" : \"Lemuel MacGyver\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"w15qk29zyv2u63ydwsiogpapenua1wpurjw7btd18lrfag6gccd7du4g7nje6oat9e6lf17t1p7qxkll830ohneqyg39\",\n        \"createTime\" : \"2023-02-23T16:00:32.193577Z\",\n        \"sourceDatabase\" : \"ystjyufhrbr0vv0uvxjkdfz232yy18p8tc4aq4n2eeqbid3h0olsbprokwci8f357qosrc24dc7i2ad16q7usshh63p5jzwxiaoi5qw\",\n        \"versionTime\" : \"2022-08-17T17:02:32.193622Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"CREATING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Ellena Durgan\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 480907875,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Quia ipsa id est quo quod soluta voluptatum. Est alias atque natus culpa. Tempora temporibus officiis similique unde aut explicabo inventore. Magnam et eos laudantium cum sed.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"knsutb05hf6uj4v2zk1jzukocty86916p9p377i5rh58hcmrqgn9zc4ys4b5eh0k2c1zujvevxcqlla7avys9zzv3am5xvt6yn4e963s6fjg5yilr8a0eby41xab0gc5e8p4kp7137yb74mq2dylklbxtn43x76lx15yfb6js5d5dte9r43gc4\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1148317077,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Omnis minima vel iure ipsum. Impedit non dolorem. Assumenda saepe aliquam error.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"bnoglwq86vchv0405hw3jy29jptjg4a3gwzl0vmuxyiuk2s33bpg3k38ey6vyscwc8mh344kd9s75lfuivfxbcs5kd2pqr4zjth5t8tthp2copku6qqcnahsbv8up29xp6a8ou7at3ht5b9jfyv46\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 132512586,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aliquam laudantium doloribus non vero. Est laboriosam voluptatem rerum sapiente blanditiis quia quis. Assumenda est odit nemo maiores mollitia. Qui aut aliquam odit. Adipisci a quo dolorum iure aliqua\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"d5atoxwirlqu83wgm85zflqyodn936e6k6xtx9s7vub91qqhsk7p20aykb8d7p5gum37ylp5ove4bh3xzu3har8pagsnccsvzmym6kya8strmy5g2gpnnmlspb4cc8qfmghrp0o8r6tyotcqjohyxhpuvwa3iw8s4mbgryaxncrazkp7s9zmg\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 985065,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptate nihil et. Ut quo quis excepturi recusandae aliquam. Dicta ducimus beatae tempora excepturi vel. Asperiores aut numquam.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"j3mg2kymgtchnrbycu7t8id9k4bg59gl\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1700649824,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Eos numquam dolore quas quae sunt sunt aspernatur. Aut voluptate sed sint accusantium quae facilis. Blanditiis autem consequatur perferendis.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"eyqlzonfiaqs0ygyju213ie0sr4p034322izqgcnth842qk6z43ee7e3b65arjplz31snn54uo7jfp6g2xibhl52j\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 3235006,\n        \"details\" : [ { } ],\n        \"message\" : \"Libero quibusdam veritatis quas nulla et cum est. Neque eos aut. Non perferendis culpa hic ut.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"f7e46bltao5n9021sb8siwygyjf113ncfje08kya09vp8gkx1l6j6yguhpul79ud9cu602ujii1jb1zrd34abpnr9tsmrntal0132tth9575s9uw5689gk8buh3dvcy3rmqqbd07kwxm1lhyakxptdjporlpxt13ya\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1354802701,\n        \"details\" : [ { } ],\n        \"message\" : \"Animi placeat quaerat itaque quia quo omnis. Ea beatae fugiat et. Tempore praesentium aspernatur reprehenderit. Libero facilis provident et voluptas aut. Voluptatem molestias laudantium aspernatur mol\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"z18i2marzih3nvbczhys0nue7d3r7nltevcej8rcpr9wsm2yewkc739ee62ibnuoxw62hj9v6w7usgvuzje4tashc012rwxyd49cfw2jn4kv5s4czs3h95c7ib5x\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1586465061,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptatem voluptates aut quia ab nisi reprehenderit. Non quidem repudiandae et voluptatem. Maxime nihil cupiditate cumque. Unde incidunt nulla voluptate asperiores voluptatum at.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"r8nta8x31ojn8tvlls6aoxq8gocm1lkyrioe56j9cs2s\"\n    } ],\n    \"versionRetentionPeriod\" : \"b6csd5py4mdpk2vaqkm8w0hocfpw8vjiahdglryye9j0c3ia7gt2wzzwcjfeu7qb3rou1xm0wooittea1atlm08ddagx05hemp2r2esdtykwt441jgxgvmbnf\",\n    \"createTime\" : \"2022-11-01T14:30:32.194326Z\",\n    \"earliestVersionTime\" : \"2022-08-21T15:43:32.194354Z\",\n    \"defaultLeader\" : \"xfjgzp8jekuq1s40fjnjvt5vjb5zfmknm9lwj0f3ur55n3dvgfwr6bfqxucuwbib9421r6e7244fwacftp3i62878hs77hbfajjfx3t2amzyqlrv7a3ozz2xkco9kmat1q0qy8o8823zz8svd29\",\n    \"name\" : \"Lory Kunde\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"1x683olfcwlaar4ljlphl4cg2ylxqrim0cb6wisf792cegml9yvkycromlqlzrzyar\",\n        \"createTime\" : \"2022-06-23T16:26:32.194473Z\",\n        \"sourceDatabase\" : \"by0btau0q94jlw56smg40oe50mismpp3xfv0i5cy5ss6zek\",\n        \"versionTime\" : \"2022-09-03T13:24:32.19452Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Latesha Collier\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 989423058,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Necessitatibus at soluta est occaecati omnis eaque. Occaecati quibusdam vel molestiae voluptatum ut quo. Blanditiis ut quod iusto.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"bfx6qx7mp0n9xjcq8tuhszosflp2hn56d146bj3dfxqcjfjp3pmyee8aq75pdy8qrotp7xan9gdj7zzjg12oum8z48f1g0pa81xnsh5dg4j234v3yzr4tku88husndpswq0o11zyn7xacljemg4c1c1xrew1ojzd8o1995g0eb3t2v4gc4nyzs\"\n    } ],\n    \"versionRetentionPeriod\" : \"qgpfbzlnnjfsbirtbftbj8z4h7azxtmcarblbx5gnebnlpsi59yzkg4r7qnmv621zvotnwgzqqjbs2gu7r1c8j94ke4vcdjzmstcbxo6rlkq0yn7k91e1nzqievhc0uoq6u5zobkjnupxtelw5zccuok5i4xbfl2saqdz5kwtm8r3brywtb69554fig\",\n    \"createTime\" : \"2022-11-17T14:46:32.194705Z\",\n    \"earliestVersionTime\" : \"2022-08-07T16:39:32.194732Z\",\n    \"defaultLeader\" : \"se9wu1gmcz7c68yfj3uwprwyjxif0cb9av4sbd0457gyd5ssljdbyxbc9m4bwnck6v4zzui0dbr4zfsnkpbz93yp5figan57ofe4aefkxg91pbsv7sy29qd52251md4q1rmn0c64kaawboftbtsmel94sgdgbhlw1j05957ij12rarllnhuyk4shhx\",\n    \"name\" : \"Fausto Stokes MD\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"pneigd8gvas50hs2irrszvi5gj9uwdviv4s5qnv0po54h3l29mdxkp905zkv3rop8mf90e8hi7j9r2j5439to5yd3ui9lxz5a3u224k8a7mgfjnaz\",\n        \"createTime\" : \"2023-01-03T14:33:32.19484Z\",\n        \"sourceDatabase\" : \"lqqam39gfli2uqx3hbimuvjv7kmlzazv3jd8zw9qderccd14emkp07ac822qqz1qkii97hi8m6m1ih37x6cgomjsk1pwgfkltjacoa8rg4uhdj7nxlmb2nfv9wvzlmvvhafs4b8e7xgd0xu8icfu5q2r98mv8pxss2lj4toaxp4fllmvkmi9f3\",\n        \"versionTime\" : \"2022-07-14T13:13:32.194883Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Chloe Wiegand\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 111979695,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Animi error nostrum nemo. Molestiae suscipit odio omnis voluptas quisquam. Occaecati doloribus voluptas alias vero atque repellat. Reiciendis molestiae in atque.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"qhs6pma40slkg2y0fu0jxz\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1714726007,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sed officiis amet dolorem nesciunt recusandae rem laudantium. Rem ea ut molestiae. Voluptatibus quia quaerat debitis est enim.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"cf0l1uz6y552hglqh9dryxjetdrrarajtltyxusx0xuqh4aer8col6a0gofhxulgi0j752afqvmbp3d5n0fq3kwaai7u0ylkiybshk9kpe3pziylpisbjfy6b7e7y8hprhvml8molim1646xwf4vl237r36n7wm0b514aoxe9v7n7ul8yds\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1346997845,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Id ut numquam similique numquam reiciendis commodi qui. Temporibus optio quia sed aliquam. Est a laudantium sequi. Unde animi perferendis voluptate dolores laudantium voluptas. Illo dignissimos omnis \"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"j8r53cqjawl7cushc79c0uhog6faqacediemqbqyagcod8n8lrmaac3ltqag9r3\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1079867691,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Illum reprehenderit doloremque quia ab. Amet pariatur et doloremque et debitis aut et. Nemo et ut et tempore adipisci. Nihil ipsam ducimus qui eveniet nesciunt. In aut velit eum quo omnis architecto v\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"l1gl1\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1244456944,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Reprehenderit natus error voluptatum. Incidunt sunt qui nobis. Occaecati voluptas repudiandae et voluptatem. Rerum dolor consequatur libero id corrupti beatae sint.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"eyy9yycofw\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 383852569,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Impedit fuga nisi et omnis et. Repellendus nisi voluptatem quam enim. Possimus ipsa magni asperiores.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"s1hua7jfcqcpopoany45k8mvacs1kl4ctubopbc7xng1zwl1qaor2agifoxilvlqv5q\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1358566403,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Recusandae eveniet accusamus minus. Ut molestiae vitae qui magni illum voluptatem vitae. Unde est molestiae sint soluta sint suscipit autem. Facere rerum itaque est. Rem veritatis deleniti neque.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"j3l1ben8svgoa5sylul4n2cuf0ix0pk9ur57y3ywwb66u4h5gvf1efqez45ocbxji3urymx6hk0bsavu2v42ha0av37d1fh4fnbnfspldfkk0ov9zhucet09nqh7ew2ed8gw6hzc7rcxfitir9feohzaksir0sq88dptftw1zwzphwtpmwa6t6kn4p7tu5emkir\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 674179656,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Et laudantium quae explicabo non. Et et sint repellat architecto placeat. Neque sint iste. Laborum quis et est accusantium consequatur dolorem.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"lju3hfj7i3og0b6z7ovgbadkn69tk58knvepd1jl31rzysadf25xp1kdt4h2rn2mzsjl2yvuc2t4qr6op2myeb5v55ttacq2zyt8kfaekckwd8rqkmnj2xf1nhp0a6lzic54sukoo4uojkdb74u0ji3g366oihyivf1ydyz\"\n    } ],\n    \"versionRetentionPeriod\" : \"4seavoov6kpljx3ixp3ve140he\",\n    \"createTime\" : \"2022-07-02T16:52:32.19561Z\",\n    \"earliestVersionTime\" : \"2022-12-05T13:34:32.195639Z\",\n    \"defaultLeader\" : \"twiqtximgkd3sdhps17oa2u68549etcmr266rjg7tr6c5esrfgjg02andofj5sjl3uvgim6iajkl9twx2lml1\",\n    \"name\" : \"Tomas Keebler Jr.\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"9mipdpmmgyiveqm25411ctd7nopdr9xrlmwji2hojerwmnlctv7iy1b2cq9qa1m3ivfcatemz4xjer9w44r2o8hktxfvf98oo11bo62hcx5v5xga4spjgz01ccyr17x855t553h0b3zkzabun3yb75ccrqfueofoipsn9zr5q\",\n        \"createTime\" : \"2022-11-21T16:38:32.195755Z\",\n        \"sourceDatabase\" : \"q1yqwq4w26s0enfacrpsvera7t71387bzno8y6mlh252v8uuq8wv96iv0q1btb463g4e0zzjy9xl\",\n        \"versionTime\" : \"2023-01-11T15:20:32.195802Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Bobbi Schuster\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1028481313,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aliquam quasi odio quia neque quia omnis a. Neque vel sunt voluptates consequatur molestiae enim voluptas. Aut sed est deserunt illo esse placeat.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"n80a4pgc8nnt5g5t2kysf03ay93rrp6mk9zvaai8519hmd7c738kfiyrifrv1o8he0csv6mu3j0mjbpt8cmvtm4e9yhat6a56v1qvac7w5akgl9kjt20tq2\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 256276412,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui aut ex rerum ut magnam sequi ea. Et sunt qui rem dignissimos aspernatur et. Et eos necessitatibus voluptates quae ut. Ex fugit dolores dicta est.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"rk51vv4nahxhgt3mbxu3o8soug5ms7f8y7dzwrwsf7c0eou2bw79s1dcb4hpdmzu6n3rfffs6qnavohfcej3vkm648mwqrib7cjcjjg1fg4n60bw13wch9g7x81nckle8au2hubdxzdas5dbd7l5nn2o6k0i2n257au6j4pe59\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1244651247,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Enim vel illum hic quod occaecati sit et. Qui tenetur temporibus tempora iure vel eos fugit. Aliquid ad aliquam aut autem officia asperiores. Blanditiis sed eveniet aperiam. Magni aut magni est culpa.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"2ojy7847plmtfl8z25gv2ja3m6tw40sf8zj1ki19azqvc12w7cxpbsee6hfpp4esey2gyfqfryr9lrxebnv331cca0rsphs8gg8udt6pih35xwhps1y55is0g8\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 939445095,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut dignissimos similique dolorum et officia. Accusamus fuga qui corporis officia a. Nisi non mollitia repellendus. Fugiat architecto deleniti placeat. Facilis totam est.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"b2d763oeky6yuk3akc2ozrxz5lmkbmwzyiol82c5jrr4qqz8gvvgq0gxfasvy66zplh8turu752zmxoj23gip3tpghm3rczfujrf0x7zrzkcsdtld59zczcpgqoi4233g9zq4ofy3l5edh10tw9q3embmyksei63wy12j27dzboata51jcpcuethmg86l20js\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 830314928,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Veniam illum non nesciunt. Quo officia molestiae consequuntur sit beatae quia. Molestiae sapiente quam provident qui vero itaque. Est dolor itaque id.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ekb5uxh4svz18ptzzlgpu07ikbitbzrw2be3lpk6753kkuot6ihb4l3ait1fm18jpreg702slk9dzov2d55akeoci2c27vi6rvzix1tzj\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1010813386,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Tempora mollitia exercitationem consequatur eos quibusdam. Mollitia voluptates ut itaque deserunt aliquid. Dolore libero facere qui tempore voluptate.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"dfi4oxdwisr1tjiocqf0stfp6t3fbq55bdo3j9xfyui\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2088276675,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Quos autem deserunt sunt a. Quos aut nobis non non aut sit. Velit provident iusto. Voluptates voluptas exercitationem quia adipisci. Adipisci ut molestiae adipisci illo est.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"71xr2x0uyn61shbcu18q3ouvbk7ood6xx74ei9p3dfot8xhuzn9ipd707ohopsl7ymfyfxelz0onm7ym4nnkhdk103e1p6d2gwrn0dt5c6ozhar5d00pof6hu5j153oihhm61ayeo02tyyriq8btq3\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1293489748,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Ad officia sint ut. Cumque officia et maiores earum dolores molestiae. Reiciendis non voluptatem aperiam nihil architecto.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"k2lyuppixil775cjdioo68hc06s3sj2buj0863f1h4p53l6rjkim1wspsg0gnf17v71r443cy\"\n    } ],\n    \"versionRetentionPeriod\" : \"1mqziiq74r8tfhyoqcl10n64gd152gs59jhc9blain53ziao9vl4\",\n    \"createTime\" : \"2022-03-26T15:34:32.196549Z\",\n    \"earliestVersionTime\" : \"2022-10-04T14:49:32.196585Z\",\n    \"defaultLeader\" : \"o3bm6m8kdogzl53fx510t9il4efwg9bbgyakaz2ywlrz6ehipyeemz5athzdkssah\",\n    \"name\" : \"Ivan Lockman\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"ctd1aek7zix6xfncyks22liwcqf1f56utfphjucegxc9k0h86eqhdxa3cxgm5x49\",\n        \"createTime\" : \"2022-07-18T15:55:32.196693Z\",\n        \"sourceDatabase\" : \"pz9cocrf0t2kuqcwtzktmvcceaastk7g98gfmzbsndfkl9v4pahcof2ahhm1d0by36o4zwx4lfso4j21hd7w7ytlrbd051tux6jk1z1bqzy7hk3tk6ol81bhemrcrnkoqy5y6bnd4yg9jkwmynlamoq3imsqdhsc0cjnvtbyazr7tyg64nt37759yx7\",\n        \"versionTime\" : \"2022-10-31T15:39:32.196741Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY_OPTIMIZING\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Marilee Shanahan IV\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 343680908,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Eos iusto laboriosam vero inventore voluptates. Aut numquam illo ea est nihil. Molestias fugit deserunt laudantium magnam molestiae est voluptatum. Quis quia soluta et et voluptatem cum. Rerum officii\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"v7d4zwt8vunczt8yt1m51e0cynzxf2f9k1aggil\"\n    } ],\n    \"versionRetentionPeriod\" : \"gum84udkrw89lauj547bwa5xf85v\",\n    \"createTime\" : \"2022-05-15T13:33:32.196958Z\",\n    \"earliestVersionTime\" : \"2022-11-19T13:26:32.19699Z\",\n    \"defaultLeader\" : \"kir06s\",\n    \"name\" : \"Rena McDermott\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"w027d1kmhxbhpslfo2o8s4ovnwls3isl06oqa5ufaxlyshtirixw70wogph4dhyxmev7belwjrtplbvdrzw7v647jq1klrlth3b6vrhag8ijyqn74id2lquxw05t1gzwimfvs4i9q019022xb6xhx13lrfcg7omf2v\",\n        \"createTime\" : \"2022-03-21T14:44:32.197101Z\",\n        \"sourceDatabase\" : \"mkger2wdaahcx0v9x4yb3q1irdq6wo6yjzydoypw3lz0x8kdeqmw3q7yclpr8bhvyskjcv2fv7pb5m5wv0a7rozxz6by1pi86k5vq8fz18f28e3wzmktg5l7yk21zjqdo5812yfce5506763koiggdtkq047apk\",\n        \"versionTime\" : \"2022-05-25T14:39:32.197148Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Luther Cormier V\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 785274900,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Nobis assumenda aut sed mollitia commodi. Repellendus est non sed. Expedita aliquam nisi inventore commodi ex. Voluptate officiis dolore ut vel eius. Est quisquam autem non.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ueq9ng3dgea3yoq2wo1kum2xv923clf3qi93tm3qgqf08d2nsf3bguod2b21nrypn03u3w89g64fkpoznl7tg3o959lxe8klscutrug0moaj7tgfojpiwb26wlb1t59eamkzrx9xy5w\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1342586323,\n        \"details\" : [ { } ],\n        \"message\" : \"Distinctio mollitia in. Voluptatem maiores soluta. Ut tempora laborum ullam veritatis. Et inventore beatae explicabo eum aut non.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"iygxz\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1168512139,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Repellendus enim debitis est quidem. Voluptatem sunt numquam quas. Vero iure dolore maiores dicta praesentium optio possimus.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"bxazhtmx4bp9vp04972ozrvyzigr81uk5rs5q1ny2wcaj7d558eqm5w2qgp7ju2tkhxakzxrqbo6cvd7hdxbfsw05yxgaf6gl1dqav962l1q228lrt5mmi9ul5kj8g9dba2kz104j531ozynysr0n835h8pwdfo9q1iohogm\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1944653661,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Vitae nemo dolores explicabo est ut assumenda. Beatae est temporibus adipisci consequatur illum. Reiciendis tenetur enim. Laborum magnam commodi quos et.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"3ns2n3wqms8zo6e5qybimr6b\"\n    } ],\n    \"versionRetentionPeriod\" : \"w3aogwl15x4ofoudnxhi9xpzdfox6dp74nv51vhsc8\",\n    \"createTime\" : \"2022-08-29T13:38:32.197543Z\",\n    \"earliestVersionTime\" : \"2023-03-09T16:48:32.197571Z\",\n    \"defaultLeader\" : \"c5azqquvuhlhdpea83zlrefv4navcsiq6njkk8uthx7vtuxbw1rnvrg82p8972ywc2fsvt25fuqcz34vji5975gj4ii4m3zn46wekped293y80u1gd2hyrqqm7zhah3t5my8unwbw1lvrklllah5dj4n8\",\n    \"name\" : \"Mrs. Edward Corwin\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"euuefrmh2d0qkrpd2diqxmyb1tgrpjej1bw6su8otivfo9w5xu\",\n        \"createTime\" : \"2023-03-06T13:40:32.197685Z\",\n        \"sourceDatabase\" : \"lhratd6dk2wvlk3ltcewfqcdy9rksrgr3kdegqsl3zce6ce93qpqp3rjnysvn56vu9y7p8liqanf9hr39c91jy0j1pv84y98kcqopemj0lnosffjv2mbx8anz1oq6ns8z29679rtkry8b7g5cw4j01mxu6fu6f144xf34c3tbpqkc524meb3z\",\n        \"versionTime\" : \"2022-05-25T14:07:32.19773Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  } ],\n  \"nextPageToken\" : \"87pzgu2ure6rks0vg48hc2f9i72nh1i29w9455qa7djcu7owzrlxek4ot5tmbdfobtw4caad184f6xwg13\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcf17b93-6d0d-3c6e-84fd-db041fb70792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "fab36cff-9418-381f-ac8d-c57f2b4177d6",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/oqui95eqyx6gsd79bj676edsvzef0wyfgqvm7f07uq5ygj39pjd3o4isw1zy5e21tz8nar0cdj5oy1mtlxytkj71r74d4ly/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"v1h\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Mathew Blick\"\n  }, {\n    \"name\" : \"Jesica Mraz\"\n  }, {\n    \"name\" : \"Boris Muller\"\n  }, {\n    \"name\" : \"Krystyna Kohler\"\n  }, {\n    \"name\" : \"Francisca Tremblay\"\n  }, {\n    \"name\" : \"Miss Laurence Waters\"\n  }, {\n    \"name\" : \"Sidney Wilderman\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fab36cff-9418-381f-ac8d-c57f2b4177d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "816b9c04-e757-346a-b432-45ab60f65aa5",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/5zca0tuzkqk7v1tzp8cvfcsd71t0rdr5ry6lc5x62fxtiqtx6zib0c1d15udv9mu5vhmnmltu3uhdejf7s7atbt3x7eldmcetohs752vmzmra0vuo9n72m5utji2b/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Darrell DuBuque\",\n    \"error\" : {\n      \"code\" : 319136063,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Voluptates voluptatem excepturi alias eum fugit qui necessitatibus. Aperiam corporis sed incidunt asperiores. Officiis cum et voluptates quia. Omnis tenetur et.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Titus Cassin V\",\n    \"error\" : {\n      \"code\" : 489538704,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Provident voluptatum et cum laudantium consequatur. Rerum sit odio voluptas minima. Minus voluptas est.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Randee Weber\",\n    \"error\" : {\n      \"code\" : 1403032691,\n      \"details\" : [ { } ],\n      \"message\" : \"At et accusamus aut velit nemo aut molestias. Ut error nihil repellat est. Voluptas quo sunt ex nam. Labore ipsam consequuntur et et pariatur dicta alias. Eos sed placeat nihil et ipsa.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Terrilyn Legros\",\n    \"error\" : {\n      \"code\" : 495692906,\n      \"details\" : [ { } ],\n      \"message\" : \"Sint ut vero incidunt sit. Ut hic neque. Saepe dignissimos perspiciatis cumque dolores unde dolorem. Eligendi dolor est. Libero facilis eius iure quasi cumque qui.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kirsten Wolf\",\n    \"error\" : {\n      \"code\" : 1512012476,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quam id eos nobis ut possimus. Enim totam ipsum. At doloribus illo facilis. Qui suscipit eum corporis iste.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"bkc5y32ejcx2v0svqrsrry7nkwq9ejbobg6u0vcu2or0t67efatgir9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "816b9c04-e757-346a-b432-45ab60f65aa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "679ed6c5-200e-3d2b-ab90-18782833de26",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/q85k95w6c07f31dv5ix63lxaz1q1zr3882av4uqu6l8uw79uh5zlbhgltt4ttuhsn8ubtp8hb2fx85ccglayms5tmpnwwbsuftgavasubg35beku78x1hkaw8f47fx/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tammy Jerde III\",\n  \"error\" : {\n    \"code\" : 730330834,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ut qui dicta aperiam blanditiis. In sint eius ipsa. Id nam doloremque. Dicta ea non fugiat nostrum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "679ed6c5-200e-3d2b-ab90-18782833de26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "5ed6a960-765c-3765-b8b8-cb701c152205",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/gqbxa844n0ixlm/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Hank Simonis\",\n  \"error\" : {\n    \"code\" : 404371796,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Nisi eius ea incidunt sed. Corrupti ut fuga rerum qui corporis eius. Ad vero voluptas molestias. Sint voluptatem eum rerum ut rerum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ed6a960-765c-3765-b8b8-cb701c152205",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "599a7e9d-bb7f-3fa7-81f9-0220e4c99004",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/5opiuovqgjqgyh8x90p7ej2z1sdf7py8qk5kp15tvvp6hnic9dyp9s0p9so1xcydbyrb1chum5t6jg65qhnybl5m05d8v4vnpul3akhotpsnfc04sd2ylumqbyoix1zgjjxfxnvo383ztv/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ci6lciuuv6umnf6h50la9g1ucjpbbs46lzquasebodakw\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 698748178,\n        \"details\" : [ { } ],\n        \"message\" : \"Est placeat impedit possimus reprehenderit voluptates. Neque fugit molestias. Minima doloremque natus quia quibusdam et cumque.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"57qe8ylpgp5g9jlqk6n6jx9n7pkeybmv44aglymufuh1fnvf6mux3l7do3mx92q2q6l1g9pycxlrfauk6fq52h3lh8kedqai5hap5\"\n    },\n    \"database\" : \"z8w7n6c4mg7xcd6nr602k84fs1vt08zajf58xwca587tl8tlil19vwcev8jt7lu3e17fr4l250hf7j66fnhrt5keh2sl5byq6329yfk6i6ceaiu0q30sqz3im00o2jm3lumhd5k5s8mab1wljle\",\n    \"expireTime\" : \"2022-08-10T14:08:32.190171Z\",\n    \"referencingBackups\" : [ \"rqx6fivlaob1rgppje4qdgckidv4sg6eyn3syfip0d10nzb1blh6284krdv9pjaqwiraff52y\", \"fsdw8yxop17iaro3i0wxkxkrs42q88jxxqg41k5f2y9pojkixlci6h75fpigc06d\", \"hrhslpp4z9cci32xk52susuup67wkpuo5ticfyr0ebsv9fussimb9yunb14zfuy5jrpf015k\" ],\n    \"createTime\" : \"2023-03-02T14:19:32.190219Z\",\n    \"referencingDatabases\" : [ \"ikt7hnn3u1remix1upxskemr7xfkf8tdbnu1yomp8tdrinl7gomugp3k1ibj9u66zon410ndntkjezkr4s8ob0tt15im4y8zr0v9yofr2ck79kqrl5k1n04mc2kqs9gi3n4o9y10izkwzhomk6a23u27qokvtd92jc59jsirihu10xxc5gizj\", \"bq62u0hy68gqdxazh1mulgfb9fidvbat7v3mztrfgdi3abcz2jx9qnkwdll9alaxxu1elko8052sc5ybroiubwjrvhrc6gckhf759z5hdhbehv15wu2hqtyo3dt6lp8t0jewx0x2kzjkz4r0dk5507f6knzu0om2ywynuwsg8ec7s6y0cfbixmhb6rsp35qaqpms4jy\", \"rmz7p8xt9g6uccuiu0ti2vqsa7mk7npt1eycd\", \"wvgfh2enqhd7obvuq3frf43mk0\", \"e81j6jzn21buwofo16xl9414jage6kusaza6uyvq8gfpobwx32r5yk\", \"ac03uivv0jaf4\" ],\n    \"versionTime\" : \"2022-09-07T14:06:32.190277Z\",\n    \"name\" : \"Willette Wisoky\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-08-28T13:34:32.190363Z\",\n    \"sizeBytes\" : \"jjkbs8fe71rspfqxjldbv9g6cxnqcjus6mvzkdg2k2xfvwfev1j1xjupv1digrqry0lchpuhl6faqrm9qier99jm4klwbssyxxm8amm5skm3juhhygq5w2d9xpvd79mcgm2x41vdklpeucuu1ggqh0hmpcjk146hfqi3merdxz44y8n0ud2z9l3a\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 499920928,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Nostrum nihil dolor est aut ut tempore. Qui officiis autem ea. Sed sed temporibus et omnis ut.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"5cnukklhhisq7gd652nhgbfbc6gpwm273tubiav8ou8kx4ewre2prn88s8eruwwgt8xfuxgo3ndfbezkqsar5z6w3zgtxjx48vcwkmo1ojg0xrsts6p4tqk325de1j7wmwgm1oyq9w\"\n    },\n    \"database\" : \"yp4v248yucuqapt9rdqdt4dj7uipu86gawfbrv9gl6s9vtbbu7biscd4xdaxu29r9qvkl761frwj7hgpwe3k7odrbxv5z00q5a0b6sdijlaai77ofpa0iksrm8r1hnk6yt6yxv5v\",\n    \"expireTime\" : \"2022-11-14T16:35:32.1905Z\",\n    \"referencingBackups\" : [ \"cc1ywqrs760ra4d6fyrtzt0nsjjntt19ps4ucvrk4u9d8enfs9t50chs7szo820t\", \"metyqhve9pt5chj0ny1fcmokc2fvzhcom023my8dkt87rkrseot1v29kp6f3jyyaqjmbahezk3ieyx4tsiac3i9ulkct6173i0zebjphhw3k8yzvznawke41smiddpxqh3ns7j8bupgiiu3985q5g79q65yamutshkddet4k9\", \"57ez39pr1s9ubco2rygnfifd7dtzcikze08urflc5021qs0zy6wgmomgovnponija6vbl7gvsuybgfw8j\", \"12s77zjmstvu5dtojyc6poafnn6zm7fwqovca3gn7kctw831nmf91p8mw560a3onlpbpavwc6r79le1iybdylsn6t5lslpss2jnaipnh4kbholj9y4ts3avhp6gux9ldm0wakxd2a5ue13t5ryon5ig210vasndpknuiqtvnvtujw5z2wbt0xvrgof9dben44w851\" ],\n    \"createTime\" : \"2023-02-22T13:24:32.190548Z\",\n    \"referencingDatabases\" : [ \"39icdhotpmgbm\" ],\n    \"versionTime\" : \"2022-12-02T16:36:32.190582Z\",\n    \"name\" : \"Alycia Corwin DDS\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-07-31T16:44:32.190663Z\",\n    \"sizeBytes\" : \"3apne1pnow5od8fv32elkwpxsr9to7gg66hdh32lfac7eq1913ef2e4wdn756dzi06z8qpjxcd5vngs85iy8r1xpxlh7i5scmgmvdb8togppmk1156a7x\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 380940565,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Fugit laborum quibusdam aut eum. Suscipit et unde tempore est fuga eveniet. Aut minus id dolorum expedita.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"g6tf2xxps4n6\"\n    },\n    \"database\" : \"4jneo7vh3afkiapbwbqojh28bhnpmm3k09wu2dpd2svrl3lhtsaj6zi65o4k90joi3nhzz8d3c6ms9791giofvk93uquehr42lccw7il3lgrpaaq5qx2y7xfuz1ezqmrf4jrm465ys4kbpzcxrhev6g8yo5ub7tiyo8xkdxac9wned0k0bkonfliad9cmwffa4j0q\",\n    \"expireTime\" : \"2022-09-22T17:01:32.190799Z\",\n    \"referencingBackups\" : [ \"x6eopr2dlnr83oso3gkui89c7pws7qur8zz1ia4fplcp0w1ivcepphdaghm\", \"mbqg4nulofnpxard9l7d34i7nlys3xod37cztvc243m0kkxybrnayzfrq8522r023c0avqogf5cm4uqhxoc1wa67in74tdzbpfzrza5rim9lnax2glqrdp5y1m6h8\", \"yz87\", \"xvb62isc7ku4ghb2go5q8sbtgb329q9eqvfr14onqymy1s5esrv01q2rj99jtn9wvldqwvtz9asos8pc6xo5zy3pg07ufyi2r9ujvyjbkxfojdrjm7fq3h7cnglpcaec2i0ihdqzsjcfnrbzi4hfxl2u0dehko7k1dbu\", \"a2omze0vr2dsrd95nlfxyp8bkml7fbo2ti10m4qjv8v4zxcca7\" ],\n    \"createTime\" : \"2022-03-24T13:54:32.190851Z\",\n    \"referencingDatabases\" : [ \"67bupvnglh127jp19gai\" ],\n    \"versionTime\" : \"2022-03-25T15:14:32.190885Z\",\n    \"name\" : \"Kenton Turner\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-03-23T14:20:32.190964Z\",\n    \"sizeBytes\" : \"rgxu0yc5s73v9ylo59rzqnx9xkvp0v1bbe07m4jr2b1i5up8s803kfy48li3v9ghanprdyug7ju0raylvwa0gsi0x8e6phk0esxlwz3ojee9jblp6m\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "599a7e9d-bb7f-3fa7-81f9-0220e4c99004",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "776057c1-79af-3ec7-af4e-9018e212c0f5",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/n0yhwq2kpwlhs6yzlsthqkk50mawl07jh9nqfywokt2mspd5y69rzqzebmg1etn8eew3yooqpedkt9eeh7hgyexbteiukwve0sz02thbpt3kbwnb2bzfra2tyhkys08jhiy6yhocv1uxz3hco/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jerold Mitchell PhD\",\n    \"error\" : {\n      \"code\" : 815511137,\n      \"details\" : [ { } ],\n      \"message\" : \"Debitis illo soluta velit minus consequatur illo id. Est provident exercitationem id est. Labore eaque et sed deleniti quas omnis qui. Earum quibusdam reprehenderit laudantium voluptates optio illum s\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Belle Boyer\",\n    \"error\" : {\n      \"code\" : 824176683,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Autem maiores delectus sit ullam est quia laudantium. Et quisquam nesciunt. Sapiente at doloremque quam voluptatibus. Nobis dolor mollitia alias sunt dolorum totam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Elwanda Hermiston\",\n    \"error\" : {\n      \"code\" : 1158658404,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Mollitia provident porro quo. Beatae fugit voluptatem. Similique quo culpa modi. Veniam est architecto. Corrupti cumque atque maiores rem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nannie Sanford\",\n    \"error\" : {\n      \"code\" : 1066727716,\n      \"details\" : [ { } ],\n      \"message\" : \"Laudantium aut consequuntur minus. Corporis dolores quia perferendis possimus officiis. Sunt et possimus voluptas. Consequuntur nulla aut deserunt ut quidem sunt.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"o76hoz8keuklal6r81l9vuhg3jg7owpy8kk7zmhmraxpekjl06t9as2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "776057c1-79af-3ec7-af4e-9018e212c0f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "8643f32e-7c1b-3e0e-bd25-8843f67aad7d",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/v3i27k7xql9y1qe0s7tr8ul565px491cu67fhbrouy4yz91cg4tvrj4ntxe7p3hdwy2y43",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"frsumifw9voq15d13cmpnc9yf2gckknsiosij3xvuw98mz02s6eukbep09oww9ktiap5c5rbhvdzow0sl0tx20aeawd3ai0x444p53xva24z0qa4h4xpf50esq6d4w4hgruszv472kiw5z19pip0b553bslxdpnsh29610j8hzzlepp7pjkks\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"lwsil3l51wao8tgjzlfl2ztfarertt3b3dec5h6usug6c9a37nzs9d4bpeqeen26hgv9sxatgwscvurf4pqz48haz3i3gnrq7ysz8ws3plg45fg5v43pjgaesdcj3hls0y1i3eo2ydpyev877rl7zqvjjtdtw1g3sxecw7zksi\", \"dhjdwj9tx51ria7ouljr663yx7luxruhn5e7iyke52r07x3cz594a39hk3q0t2tu8g0odmypl6j0a16mrnzlxnrprlbc01pzbdb3t3uev2atvsjb\", \"qi3ovfdlsu9yymur1j5cipjdy7f3oiob6lao7a57kf0zxjs7lw4eietibdy930h0qduts2acmzoaeikvrxpn\", \"qsnbl8r3hrqc6mvjseszfutfppoksuiv6eqbz\", \"25cc888mpjotmyay43tp5rmolue0hzvwkyc381784eyy8fvy5l9k0vfep78l5779deagiyb33dowekolwsuv6debsaa96e77ut69mqqrr94grybekwdzhpbb2r5xjc6guvnukmik39nlqhulpuxrvbeyizch2hve69e8wepm8lw01cz68904ya\", \"5cyp1nehlfs249aoxxtiasp108t75exm1vprilj4mmuv2398fjjz9a9m5xnu1fwqoikgwccd2etksw6fzz4hizogzwc7b1cwxsbxgtukzmc2fklgj8qpj59p7lnyozajdda54s49zid42\", \"kr42t3p4tqs6hviipu0j4sb4hlwja48ciunpq54808dnok55odxno3zgvom2ue2rz77jy521nx4mf3o71rotxogmhjb084y75kje8mv2grw1xtfacx622xyrm5f68r9a7qnppwvoy3aebmy6yh25wik3qg3z\", \"t35pma2wa5eo90aaxmyvdfzy3xcly0mfqbj5vghel4468ze6zn452xvi1epdnzl2tnd29mre7zcp84xd0i4mi936otgi46qiafbcfxb78g\" ],\n        \"dataSourceSeparatorToken\" : \"8hxohr5ndwo593cnvybuw4g3pillbn2d9dlt5c07yojwhaq5lpkypx9ui9fwr6ov90op3nfurip888m7hftni21qlszob3jvaox4osj4ujnf7dwinei54sv4s4bbtadmvdcz4zsuu7rqherav40luyr7m9powpifrl10qd28ya7uqh8yhy2hdsfga6cvdi3vbek064w\",\n        \"diagnosticMessages\" : [ { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"gjwmsyvmlkypzz5fuy6e9c3y81umoo27nbey1fyexzecur4v3u141hsu4haj75l3e00v8pxze44tcu8wxqzkp6xhj5asdeefuvb065botb3mtzzzq4ffinka2llwg4t2d6u5zn320hfd7n6kt2ms3fza\",\n        \"metrics\" : [ { } ],\n        \"indexedKeys\" : [ \"3lmphf6\", \"x5kt2h5vy0rs1ol8vhe0ud5s2o3gu4k4jg26n\" ]\n      },\n      \"startTime\" : \"2022-07-08T13:32:32.188951Z\",\n      \"endTime\" : \"2022-09-27T16:35:32.188979Z\"\n    },\n    \"name\" : \"Miss Ward Heaney\",\n    \"details\" : { },\n    \"startTime\" : \"2023-01-29T14:27:32.189052Z\",\n    \"endTime\" : \"2022-03-16T16:05:32.189077Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"h6ielr4zfkz5o146kq2otqwgk4k9k7qngwxg4ejmk6r0rg4nia9tec79lmkcp3yovfevznfd5kpg4a2prsv7cfuit3x665zfa27\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"sgocfcgj12kvhbxn8w5p2pna5wgxncxcg0cp3ohax4\", \"a15ozkx76ihif2cg8bsntsfee4ma115wf4mezbp6qjdorxpmjphjhjrh42roty7k0m1for35bosuxe1yc0jr8xwntap3egity66viwrvps2sw2stffk8au449879yiiz810i5u9phkqp6v26wvouue5dx3qsp8\", \"ox7cqmcz984g6oea31qjhua5nxdlmoy8qaipel3zzy2grml41xyphg0r19wfvr09s7g4nu6kmdf6hn5yw3s27qc7ajdfcvu69z\", \"fccqpo4ax8fqxdpwb3m795zvl9gtwoe5wpw1vcznwnbea9qqr846151jb5mogvmh4xt5ytw0i10tg36ldrwlrv9ifm34lguojay3ch9h9ajzzdvpknfvu75fa38lexm7msw46q0fplrwblzb4ms\", \"fnd7wwut4kgvtyztbe6fq006qd2x6eg7x7wykki6qgz\", \"7so5iq2pb28c93xc9rei8wm5zxgc0wmev2b5smjvpyc6h7dujb7y424njqfh2d7ozy42rvo44qv25dxxxc1wlfr7090lj529q4bzc4r8mx64n5ck59v1we39w6uxyanjk551hjlvovgjk3j3muy5tl0janls7mtc9od42iteultkzeiv4wsonql6hmx8vuy30\", \"a9gnrzpq4057vkvs97fircx3j44f0gbna9724ymz8ugp9px15wz7xk1s2254y2rpwjwe0k3i8ulhgogex5mn94sy2tjpa1asz4i4s4rspld0nkwd0dg7qxgnmqx2554sjyeqoyoikkv1be07\" ],\n        \"dataSourceSeparatorToken\" : \"1x79dazuxw1nwl4udsrl93y8l8hcn\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n        \"keySeparator\" : \"ruhpz710xx1ql23sdjxvqjyf5svdkagtk1nteuf43jw0mmdmun3xw28pbscamnpyasm7iu429d0sscv775r66jrrhmoasjxvjbtlmpr9dopaz7xi1a16t6ztc0bbaei96y0gupgatszmz0royn2qrfgi18izih9w3w7\",\n        \"metrics\" : [ { } ],\n        \"indexedKeys\" : [ \"cijs4rdamr6ymzgwrckw25txy5w1rslrg28s7c1afztnlvhq8yahvuc4xm1hsg5q767nyjzkdak41cm36rszmpk67ujgsqcxuwx96vt4kyvdid8y3enzvq9djzzxzv5143fbtq2qb4t2wf1ocxfzuonyavh0hzc2ybqz94jtugnsnd7xcjstv7nsf\", \"tvd58v2qmyx2g5qv9jnjklqv5g1ftfc75szsq8k0ivekuyl94tbz8xtm0ez\", \"99daxetufpzphsbof2yv57cn7k1do37b3vniox7nkf9swex63b5y\", \"vs9v0l8liiqgmqsw19cgr308qlv2t49tnjx9m8ifcb9k1a3k5hj0t9os2t01ns8416g8w7vu8u\", \"xqygrqu49tz2emsq7il8sun59qhpvpfmn0arr142xsy891o131ztasfrkkt563oap7ke3qvt0e83er2rb4fozhqwwqaxa2dahfi\", \"zhdimoci26dczh470qa0t4wv9oshoxkx3fzctrsukd05124wlud13tx13irqsw3fl5nhxeauzy4mqhnlnrlv4w24b3p50zfpb84dc62m2ok3q4wze3yyoa26d2hq05bl42fs0r8xcvdt96prmtpjsyfta9v1eb5c\", \"13hodqewvlqok14zqss14ey3d33x9fz9\", \"9ohq1dbntduusy7rscah4wqyyv9wh6okb3vcqn5btgvgm3j4ufj28wwqkxrvltr1uq11qew8uvjo4962rqupex2hquvsnr2eejdb2j5hhu0gzfjezqiz5k7ezc1gcy7\" ]\n      },\n      \"startTime\" : \"2022-12-20T14:21:32.189267Z\",\n      \"endTime\" : \"2023-03-07T16:28:32.189294Z\"\n    },\n    \"name\" : \"Loise Marvin\",\n    \"details\" : { },\n    \"startTime\" : \"2022-08-21T14:28:32.189366Z\",\n    \"endTime\" : \"2022-10-04T16:17:32.189413Z\"\n  } ],\n  \"nextPageToken\" : \"8upp21x1ok53dupo48xbeidsrazclf7e21btnr3b0qru0wc9j15mnsi3qpovc0hsopb78p4sza4bxg6omh6snn448cn37jsww6xik7zhb1onkj4zjge1r8qv3324nc1j8ce3w91qthn1dk5f77zqx3pfpmasf9nltvs12apzswqx9htsegwa3ocebpn2kwbey4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8643f32e-7c1b-3e0e-bd25-8843f67aad7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "2fb44a71-850c-3c11-9241-41cabb9b1901",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Carson+Farrell:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fb44a71-850c-3c11-9241-41cabb9b1901",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "9c642b23-e66a-3a28-986b-c155028a0442",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Vincenzo+White/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"6j88yydytb0ijes2kskdzgl1mg90v09cwcqsvl8r85zwvo\",\n      \"hasPii\" : true,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 1913384230,\n        \"depth\" : 385176135,\n        \"endIndex\" : 618596817,\n        \"dataSourceNode\" : true,\n        \"word\" : \"zhnrfn3vbxvxu6ewfnuobbcedu31ecsm3b\"\n      }, {\n        \"startIndex\" : 1307487020,\n        \"depth\" : 1136610745,\n        \"endIndex\" : 502278525,\n        \"dataSourceNode\" : true,\n        \"word\" : \"cnd0z4reb51v44fe8u8zgl98dgucdktx1cnxchjjv02gtid27fql56uxb5goq4zcj1i4mj11hfd1fe9xt4gnw77txju135j8lwrfcvixrqc9cvx3gupzq6ndxvx9zhf0j520vnkmbl8124fm6g6jvlkta55vbe1gu5i\"\n      }, {\n        \"startIndex\" : 1540213734,\n        \"depth\" : 1863740216,\n        \"endIndex\" : 1026310757,\n        \"dataSourceNode\" : true,\n        \"word\" : \"d30w0njqxzvm340n9zwv135r9mnriz282u4b13opcrihbtd7yxsxzq9fyoh9l692fnti9un8tcbwjgbgl9iyywm7feeny6es9gelo5ageb11iuor6prxlaftmwm4pnwtarvp16bph1hwhi5j9vqe5v555eydx4l2smds1x4\"\n      }, {\n        \"startIndex\" : 749237642,\n        \"depth\" : 793525972,\n        \"endIndex\" : 111286196,\n        \"dataSourceNode\" : true,\n        \"word\" : \"qjnfq5tak\"\n      }, {\n        \"startIndex\" : 1715803046,\n        \"depth\" : 37161638,\n        \"endIndex\" : 678039510,\n        \"dataSourceNode\" : false,\n        \"word\" : \"yc80k2xe1c4ae5nk6tc9xhwel406t22mdjmsvq5eb071251m2228fsz41oqr98g2m7c09lk922eymek1dlx61kkhegfs6oldpv91d8rfbimoqig8p\"\n      } ],\n      \"endKeyStrings\" : [ \"20c6klqvwt5t9bb66xaxz9k94gjzafm99p490hjeh8emkp47vysbgwcg7jaec436dzgz908zvn47adq4aivb597gajb\", \"fj7qo95vk75hg9cf8wpv0j2c42vux9mtc2d5ibrqs3d2iry058lhow71wyep9o3rrolvy3zmoq00tefchclzo3vu2rl6ta5hpgyoaz1bqlluy8j2jtpfy1g99dplsg84ovtov5hmughfpgey7vgse\", \"r5isqxahz8a1g86ztpmx632ukuy0i4qx2f6olx6scu9kyo4j3llxmktbzjgfzb9r1aqo7tugiuh572xxw0naqxmzdw4qudiisevs3wwlu0bec2uhymk28e7ebklw20co08csqwdfuofphdrifbzspq5w3\", \"j8m\", \"szbt4b0mtkpw3jg327nu4wwv9fcrsghlopplws7twsi4xpl3z2rep5abrisl4od841490li3qjce8w2jwt1rqfa8datf5nkhe8yy265ndpnwapt6ywkjxt5pijy49a74vg4m5cc3park1nhlseqx\", \"s3ew1pddex5gjukb8xcrbvb2h2er0\", \"9eosu5qi3qmao4t6hzlajs49t29jkuzrfm93vjjur986k6dxgmpqxz12s13mzrg5tgh2upcqg8s8wt1it586acke7aqtka56miq6vea8tjmkmmr67ukn3z9u7cmb5w9g2jtq2k7y6zrdkuh3n1vj4488r6ms8hbya8pved5e8qnc88p24keyymtusdrx79tkl33hti\" ],\n      \"dataSourceSeparatorToken\" : \"xsojngm5dnv25ab8ehq9c6xtj29dz0io9e4h19y24h5sw9rdih217t7m1vkmmqvufp4bfn3daxi9pril7064mscgg8hiuhcoge733092f4070grrp0s98fh01aw3asevs90fcm1795d7d3y0j23\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"INFO\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Nihil odit non repellendus occaecati labore architecto omnis. Sed vel officiis eum sed nemo. Ullam possimus illo velit praesentium sint.\",\n          \"token\" : \"3ow250gxo3jkdwj1pv3jb8b95ieqqmzdlvmjvg3bvp1i7qoing55emvectj08kje0gs47wix7d7q29rq3i06zt2sn8wlaulqnvipj59l5lymraqhrjh5787redjuvj3v7srfdqkblr3gbc7dkkg274l3gu5ehvgynzlcjvs4yxv6oo6wc9phdcrn\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Maxime dolores totam qui qui libero ab. Non provident velit sit dolor consequatur. Officiis ipsum doloribus eaque nostrum eligendi provident. Rem qui quaerat doloremque iusto. Quisquam ut aut voluptat\",\n          \"token\" : \"yxln8i75vhmme7tsbtx4tz2nqbcznonrpnlllpjd39016qh4bcke1npaq0bilkd2449583lwnki1m4l39oqc9woxxe1eoq9\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Eum est perspiciatis nulla enim vero. Sit molestias quam odit tempore. Eligendi rerum officiis consequatur animi suscipit. Ratione qui quasi iusto aperiam labore consequatur.\",\n          \"token\" : \"83exq3muk5fgdkfa82s6ynr5hcq19b15jtzgmf8qxy6g86y7jact5uqobx5jznh04nj3krvtt9iavwy03wya4b\"\n        }\n      }, {\n        \"severity\" : \"WARNING\",\n        \"metricSpecific\" : true,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Illum sint adipisci fuga earum adipisci et. Quis voluptas rerum culpa laudantium in. Accusantium aut rerum omnis non.\",\n          \"token\" : \"pjpxdmkwuo7qmyeir5apgowpc0zdbb1rqbyimdmc2rxfeqy50k5axpa8pxql049bcq7cki5xsuj\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatibus velit harum nostrum ut in. Consequatur consequatur illo ullam sit vero. Perferendis omnis sed iste velit voluptates.\",\n          \"token\" : \"v9u1s88f9\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Corrupti excepturi aut minus quod. Tempora maiores corrupti vitae numquam ut. Repudiandae quo aut est. Qui et incidunt quia vel. Quos et officia.\",\n          \"token\" : \"i8lqwuza1xz88muen\"\n        }\n      } ],\n      \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n      \"keySeparator\" : \"3df0039x67tqrwoja3k1f0220f1ants9g1s2ikvqihh7rrdcmgea2p1nh4artai11hum0xz1g3fh1q5cl86k76i64gnom0\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Eum enim corrupti consequatur. Qui totam id molestias ut enim in accusantium. Illo tenetur excepturi voluptas aut. Quam similique aut laboriosam explicabo.\",\n          \"token\" : \"xbs1q4c6ds5745n7pzi69or5wggj7obkibvycwpo07z0mjvdj9j39u483wpjqnek24q2k83h0mlx2i2dhth4q2ph48p9x3qbpp1q117zwm3uxuk91j1btkpc02jed\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Temporibus molestiae qui sit deserunt. Quia aperiam nisi quod sint pariatur assumenda. Et ipsum doloremque ut.\",\n          \"token\" : \"rznu112vh5n0ll6k4ch53e9td8l9bwyeskt54pchg89troajp8lhfd56jrx9il9npq4ji0br3dx5l5csan811ygu0jtjomb85rfetgvmq06c4jjipx5t19q92s8p565co\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"At aut omnis iusto aut cum repellat eius. Eos fugit repellat fugiat. Ex eos tenetur rerum quis sint consequatur ipsa. Provident quae repellat.\",\n          \"token\" : \"8ozhnuymp2ulmpxzq7sow3k32dfxbjnycywb463v6wfl5dn0onrx05\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 8.563382603065543E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Doloribus impedit eligendi dolore et. Illum nam dolorem omnis magni voluptatem eos veritatis. Nesciunt aut id fuga. Laborum id temporibus vero esse dolores.\",\n          \"token\" : \"0tnj91t1um7tqxhm8wfb\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Dicta corporis qui facilis ut. Quas ea dicta id tenetur ipsa. Tenetur voluptatum ut omnis eum sequi. Accusamus nisi quo corrupti itaque. Omnis voluptatem et.\",\n          \"token\" : \"qast2j2mlw8o1suspqzgva9yb9x8mpgf9h966ii99oxfyk2a72ya0u4xanmyg9gwqi8m9llpdmxa1pve49zstxpnibwhzhvw1y28u14y28a7k04wplwjzjjsnok6nxshuz0kphuvrer179ug2iq2on63gzq94\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Saepe rerum possimus in ipsa laudantium reiciendis. Est ut nisi reiciendis. Aut vero at sunt.\",\n          \"token\" : \"o18gpclu38ij0kwhrwd3ri8y6l8gc8wuvq9gb24lztcdrwfklxtjyyqiy6md4nnc116zk9imvimis575fzfcpdd86fhnlfh90y17vl4rd5o6m3sow49axqihriiy3itqc9wa0lphx0qia49ktqp85u\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Possimus aliquid exercitationem. Tempore quidem ut quaerat commodi laudantium. Exercitationem et officia ullam repellat. Sed possimus modi ex expedita non dolorem. Quibusdam vel non nihil.\",\n          \"token\" : \"eqa87dw8xzoq\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.4482714829134202E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Atque est odio quae quibusdam voluptatem. Ea incidunt molestias optio blanditiis. Dolor sit excepturi dolorem consequuntur. Mollitia et praesentium quia occaecati. Alias fugit voluptatem cumque ut asp\",\n          \"token\" : \"4uz2x5soox3olu02veqdztd3rrzlyte6ia3d2lyn2cmzxzk8pn8xpu\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Ea et rem voluptatum corrupti. Commodi quos ab sunt perferendis aut ratione impedit. Quia consequuntur aliquam. Sit vitae et consectetur occaecati ab vitae doloribus.\",\n          \"token\" : \"53yhwlljdxai\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : true,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Eos architecto aliquid dolorem perferendis. Neque impedit repudiandae blanditiis. Harum autem dolorum modi sequi eveniet. Architecto ad aut accusantium reprehenderit qui omnis. Blanditiis quo odio dol\",\n          \"token\" : \"ujvgyutja59oc4dyghn0kjf3lyty0nl5ktgc8ewokoj4hzti3bskksd2niy7m4aghhhur12n7ybvaagdfmbs0tkm0c9giuhktzvllems7on4xpfb95wwcsrlfb7ne7lpu4kvhrwbv5opkchotpystw25h3l2wqyoi81a77d5k2v4xkn12lbc152ya\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Consequatur id temporibus est officiis accusamus enim. Impedit sunt nisi tenetur error tempora maiores. Soluta accusamus vitae corrupti aliquid explicabo.\",\n          \"token\" : \"iy6pvqigogc76akiewoiio1300ego57iz5cx63qft3z30exadfh6twqzpx17irqkipole7dgub2w73e8qlv3ueli8tu7b72rm2s\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.2614835833705454E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Consequatur nobis ducimus corrupti incidunt sint et explicabo. Velit autem dolore sit maxime. Molestias adipisci et dolores quam similique ut sed. Fuga consectetur corrupti placeat blanditiis aut eos.\",\n          \"token\" : \"wmxrqhe042y3xbzubgoyaopw5gm3qsuowrugr6jvr5lxdhmzqugcmsy0e1qbj6n3gbugme113cbcn3ss8nwfqcqyaqzx1klzkwsrgf03vtkui7ihztwn64wh5d6l8sae7f7pwn7ohl5trovbg64cvlxibg5bhyb8n45muubhgchj5z\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Magnam tempora consequuntur est quia officia. Est quaerat rerum. At consectetur maiores asperiores eum magnam et.\",\n          \"token\" : \"gutf8bzrrczc5kli26z\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Ducimus cumque necessitatibus odit quisquam fugit. Neque voluptatum iure maxime placeat ut beatae blanditiis. Aut dolor aut consequatur repellat.\",\n          \"token\" : \"f3xj5b8t4m6pglb3b9xymfif5lffoitetuue9cviy1dk3dbp4kxcm0ukzjto79n62me5y5p5tdzj8antunmb464544031hmk7ckeq9zdo05a9jnsa0f445vqudignos9veyzr0lv00v6nl0yooap7ioj8hdnv1xwmxuikbdn0bp5ankez7h\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Sit adipisci accusantium. Corrupti quisquam ea autem quis error. Nostrum ab ullam ullam. Nobis reiciendis assumenda et sint. Maxime aliquid veniam est eum corporis.\",\n          \"token\" : \"wb40rc8umymxepdazkw3rfawamvbphf3fy9kap4dbj1qx98el9qda5288w1yopf9e5qubh5yvqqoaqio7c75dosmaom6jnbkvhvjes6ooq0l5zt4s6a9csqwpt61jfz3dponttcvsv3t7jjqnun9ioud\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.765301476936905E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Non dolore amet sed quo dolor maiores temporibus. Debitis culpa esse et minima perspiciatis illo. Nulla architecto dolor totam quia. Facere omnis molestiae temporibus.\",\n          \"token\" : \"79tmba8dbolmx3zonrpved4raeqautazqp4ic17q1v4jh8yxhifi192ahrtpq7rc0a41mhm9f4x62nxqs27hrj6f31pqf5r1pkapqzc78vsxudeqg2zshpwv2awc4vhxtyg8vievq71fp9rilxhjquzcj7gmxqimj\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Aliquam illum aspernatur saepe perspiciatis voluptas molestiae sunt. Et voluptatum cupiditate impedit sint. Nesciunt quasi illo provident ex sunt.\",\n          \"token\" : \"miie6zkl6ntwdtp9k8u4oq8rzof7mf9u974e3jm6m0f0zvw8aupnsriszmv40k2g1gaa9m0w\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Quisquam aut nesciunt modi. Quam aliquam labore ipsa reiciendis. Et voluptas qui odio pariatur eos est possimus.\",\n          \"token\" : \"brdpi2qyzkbmkfzkvl0mr12qsg45th4cq12xjhh64tm5b5yssbeck5e6liv\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatem inventore eius facere vero est. Cum maxime doloribus qui iste. Qui ut sit nihil voluptatem eos. Qui quia aliquid ut doloribus est asperiores.\",\n          \"token\" : \"1o8f8rsbrlwk8j2maqo9zrx53d2tso6tbscp1v98r4b74\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.2409988834386908E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Et autem qui exercitationem. Odit corrupti saepe unde quidem. Totam consequatur aliquid enim quia minus. Quos cum vel neque. Suscipit iusto sit maiores et.\",\n          \"token\" : \"j6fkc6vb6hv9rz3usc40iy983f9hwyz1qzaohn2ohffsssh1izxixfkcsgmy6874ndeic6achrixcn0g\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Id ullam quaerat. Quis et eos laborum eum velit. Maiores et et nesciunt odio.\",\n          \"token\" : \"9k5u8d6dirdwnfp010b0wu48zeszm9ohvogiwt71vsziqhy42y6iqgq40o2db8m9powm5fmk1jjeyuxv9i8eiroyo8xnjhom2g1f1cz9syhbr3r\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Quaerat magnam atque aut aliquid. Similique perferendis impedit earum. Voluptas voluptas totam quia.\",\n          \"token\" : \"cnuye7mb5z4uyyshn08ewa2yn9e45d035x86z6vgnqzotbcothurs17km9t1cxxpu37qpiir2g1au7ciu84l8sxdpye1ft0jjn8kno7s2el4c1mi5y5wzxjav1uu2izhhlvpn2j977nyh57oiuuosmke1eo5hirkvn7hbis5a0k\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Quia dolorum a fugit doloremque praesentium dolores aut. Officiis aut dolorem voluptatem qui. Explicabo veritatis non commodi voluptatem accusantium distinctio atque. Explicabo aliquid expedita ea iur\",\n          \"token\" : \"qnn0f187nqe9s6b72134toe37ljqxge6870mphimjs8158lusldgapaxds89bc44f0olytl4kcu7iwxxdssbop2n2pjobt2knpn2q5ibflv0yyn248zbvngpnagzxl19bmclpvwpzi0j35vj53z5f9q3neafugsyno01jdvsgq1lwy1vho0r3tf9bmek8gy1nuq6zc3\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.5881881988797877E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Consectetur sit ut reiciendis quia et et. Omnis voluptatum non laboriosam non. Odit sint corrupti debitis. Voluptate et quod.\",\n          \"token\" : \"5fqpn533tr40c4hry1l4l9azj4ooygok0v6u1hko87e1hm8ze63mx6or9lerbgn40quiyx4o66ii6977rc745mgouc871ywyhx4t7hcndf8j3tvoow\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"xyhi4c8old8zp2k801s39b3jubrw7pqfh60ouv7dctomx7zldjjumkb58qdpjke5gnrmefrcfrp2yi4pf9ihh5vqwt5hsd6k61sa6x00ds5wul4b5iz2kyveegn20ma2qall8mj9735w5ym38ekxmzq1twnqxtr5hz8inkf0hw1lxnfd86ugvfocik02y804zb\", \"v29fd2fo7x5lxbbqpwanqnvs9z88gfe76whwp2vbqkrcr8ugjz2e457fvyzf82i1hj11ksc85o0ozt8v09srr1rotp6tga\", \"fxqhh8ntn6s33ueaee6ik9arvw76dnnab1sfignhzw4844vpq4cwm1g40ywte3jtshf\" ]\n    },\n    \"startTime\" : \"2023-01-28T13:41:32.188354Z\",\n    \"endTime\" : \"2022-11-18T13:32:32.188385Z\"\n  },\n  \"name\" : \"Alica Witting\",\n  \"details\" : { },\n  \"startTime\" : \"2022-08-12T15:48:32.188484Z\",\n  \"endTime\" : \"2023-02-21T16:56:32.188511Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c642b23-e66a-3a28-986b-c155028a0442",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "2f3515ff-077d-31d0-ad0d-28bdd6bd21a6",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Eva+Fahey+PhD",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 99848909,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Expedita dolor et alias dolorem. Dolorum aut ipsam at atque minus. Maxime aperiam non labore delectus et.\"\n    },\n    \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n    \"kmsKeyVersion\" : \"xpjoxk9g71fu8kezov8zl99uf3i6ogfjcv1k50x628kn6alns68f2itcq8pc16ks311lohi5zc\"\n  },\n  \"database\" : \"j3hfhxsh7o585nhvp6cnanonqw41gip3lno1q2e\",\n  \"expireTime\" : \"2022-11-01T15:17:32.185701Z\",\n  \"referencingBackups\" : [ \"j0ekli8li28bam8yyy7gzygw8eoa5aus2lmxyf8mmn4af26sv2f4qjnz1j64czrvehn52h7ztll4v4eujkmhvu3flnzkcei9fxdc1zajlfsi4aqkqjrbyo18q1x1jd3htssuz14afmh0hum73zseh71mu22t3\", \"8tz7e22sthtd2d7gfvcormu7e7r7x4od68wkz66qb3sibjdh0gq7hucedit2xuuhyj5ifiw7wl6o4x1kndecluej8rl0cxh0qco7rw76rupzu7041f7jakzrz2jd2r82nsf4a2sdbnszc6d\", \"ojvahz3huapya3zkzr9iw8ar4qdpb0tcjaxk\", \"br3yk6gxeo0y76x4vi6eiugtzo5udbu6v910yyhaekq4pm6lsbegwwzt2z1uo5yduf0npxfhn223x4ajfby98qqxi0ip1hqi9ag6nzwkt4sz1zw0ra8cnstvm1ycin7p8d1xrn\" ],\n  \"createTime\" : \"2022-08-21T14:20:32.185757Z\",\n  \"referencingDatabases\" : [ \"nosfllbdc2bjv9z9fmc9cgntspeiqxxwcyxaavb6w31aylreap7imumpx0bk2e74c0cq4v61zlcsf8brffjr8wyt4mliqfjm6n11n3tvi8qcbdsn4c5s61lmdwoqqpe2c3yywhgwumd0tsejvjmafhx3cueb3erj83kk2la7\", \"qwb8c3la3bxm2zh9yeoxn1asweyezza492dmhne1cymlko07yg0fjx93bet72jj8v5t41l4jim868o9a48c7pafexeg07p1m13pbqy\", \"m58uglnrxl0042xu6f5lbo5vuydex3jd5jsr3dcn1k5s0xtxq85mtz6jeexhtkvyiy8chweg39iqspe5eamp8\", \"e5ocpbzljzanst5ik2beja3xujv8qzkw23t2kyftp9iki3wws8bv025jphi6at7v3rd34to\", \"ohxxkuhle9e94ovf7au9wm4ezrbfx8gh6ceg5mxr5wgteuk01rt7l77g2frwo5edl8zncldyhhr8vcfi5m66mpx5pqnmbxv8w4lkwzevkgr2a60r105an4ihw8x2ni5zhk7za0oc4b5do0mikwzibgu1jyrc0dmrvltpu02zzo4j053v\", \"njiwrb4akxrhw9kkqusosqzquczd2dth9t3jjbn5428evjjztlppz7cbc0ntu6wzgcxgmrb2x78m6gwh9tyqnogh94p90yre7crmso9tjv4kw6iucwpvorsm6zlqcbvefvvl5e7uvv4xjd7qi6wf9o28iei\" ],\n  \"versionTime\" : \"2022-06-02T16:32:32.185819Z\",\n  \"name\" : \"Derrick Kemmer\",\n  \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n  \"state\" : \"READY\",\n  \"maxExpireTime\" : \"2023-02-01T13:25:32.185905Z\",\n  \"sizeBytes\" : \"06wgi3u1nvlm2ze8zwpjl2n4mi03jg5zy78erby4z21swfo7molw6quuifrc9uv69qp6ipsa5f06ejcq8j99ojn5hhvbv4mcrztxn2q4n2z37qa3ryhb6tbaco5o003wp9bffp5du9wx445f55im12m9ljzj26heq6jdheoe2i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f3515ff-077d-31d0-ad0d-28bdd6bd21a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "46574176-9a84-35bc-890c-ddc6b0da1201",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Dr.+Roy+Oberbrunner",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Michal Nicolas\",\n    \"error\" : {\n      \"code\" : 468530165,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Tempore sint amet et maiores est saepe. Autem iusto recusandae molestiae debitis vel dicta. Voluptatem ut quos. In eaque est similique quia. Alias et perferendis fugit molestiae id in.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Quentin Watsica\",\n    \"error\" : {\n      \"code\" : 312429080,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Porro debitis provident assumenda. Aut magnam ea quis. Non eos sapiente non necessitatibus molestias accusamus quis. Corporis ut cum nihil laudantium. Corrupti ut voluptatum eum.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"ylwft31ogd8zgypmxc7lrh8374ucytuh8yrk3l9nvbdcqyc7tq04puiv0zm6l7gqb8njaq4i4r9cqqi9nglmbsa6haj07fzu2r6ebfp922s61z7sdqjwvcmeihpvnufdnnbn5bprimird5k4pes2je60j40jif\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46574176-9a84-35bc-890c-ddc6b0da1201",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "97dd0b8c-a7a6-3c76-a1fc-ec3af1508eb4",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Beau+Blick",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97dd0b8c-a7a6-3c76-a1fc-ec3af1508eb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "011435f0-6fcc-3414-8157-dc65741b54c9",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/q5ggz1bypguh10h0o0w7nic0wekp5xbnzlu74cjualeqd6idc8rat9zuqcoibwvuqunbz5saycilu7pnw4ccd5vbhe2nl8ztwpfw6wmkmaqxirf05nxstt5ve5l8wlv5x/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-09-18T16:29:32.184679Z\",\n    \"creatorRole\" : \"s0rywqzqyga6lryork26m4ahhw9f86jea6higvvgy2ga0ipucroyso730ni3lgeljvcbx4mac9dbbd1j6v9l9fqbti86qt808ndpkxy69vdxtxi9asnjf787c6ihh6pbor0f5lq7jmf5hi8yrz8b0gfyahxbwox6\",\n    \"createTime\" : \"2023-01-13T13:13:32.184715Z\",\n    \"name\" : \"Dorsey Purdy V\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-04-15T16:23:32.184791Z\",\n    \"creatorRole\" : \"iv1bv8ybe0um9c4fo9809lfwrstoei3vtb1ogyuepkmg99i0w9c1igpc25gn9hgpzcb3i1rhoy9p8oso44cyfwddatwv11khzi5s61zdaiaeut30imq4zeyysqfcphj671l3sjy15451mtackz4db09xw2zn65odp5u0ayxizb7r\",\n    \"createTime\" : \"2023-02-28T15:54:32.184828Z\",\n    \"name\" : \"Meta Mayer\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-07-07T13:26:32.184901Z\",\n    \"creatorRole\" : \"c5oz33mpd3rf9enwlcin1vn2eqhfyx9l17r3ujr9gsh4fk5xz48qqrs6j8najx7\",\n    \"createTime\" : \"2022-05-31T15:39:32.184938Z\",\n    \"name\" : \"Mrs. Stefan Dare\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-15T16:34:32.185012Z\",\n    \"creatorRole\" : \"ydhhhnp9tco5moxz4\",\n    \"createTime\" : \"2022-11-11T16:31:32.185046Z\",\n    \"name\" : \"Jefferson Beatty\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "011435f0-6fcc-3414-8157-dc65741b54c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "c3d354d0-a019-3d36-b4b2-24a6dc03440e",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/0bh7hwecgtmuz37jmt9t974h9j75g85uogdtcj22gmx0mm9seyihakaq78ledufu5qg8lq3j004sh0xosh/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-11-06T16:37:32.184459Z\",\n  \"creatorRole\" : \"yp21g9t348nnkr7croox0cvypckaj66w4wltqkic2jedtgjohm\",\n  \"createTime\" : \"2022-05-08T13:24:32.184494Z\",\n  \"name\" : \"Wilton Wisozk\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3d354d0-a019-3d36-b4b2-24a6dc03440e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "372340f4-cb68-374b-9861-66c9a969e0be",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/t1u6r50wl1sfbakoi0w1j8amnxm7xdmhctr7s7iwwkxw7a3gsvvuwlqh/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2022-12-14T15:23:32.183782Z\",\n    \"creatorRole\" : \"hken\",\n    \"createTime\" : \"2023-03-01T16:19:32.183828Z\",\n    \"name\" : \"Cinda Purdy\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-03-26T13:23:32.183916Z\",\n    \"creatorRole\" : \"ts22w86vzbgtptjgb8zkn4yfqnw3fneyup3anp5iyshesd5v6t5o6n2w8ojqioiyk9yznnee0qbtets281qaaanqfog9rufcz4n7ukju813kvfyr56pdl91stui296vjb0rj67fv34086xktucvzft7qg0hyzy9j52qr04mrz0ruod6dlh\",\n    \"createTime\" : \"2022-04-28T16:57:32.183956Z\",\n    \"name\" : \"Dorthey Gleason\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-17T15:08:32.184031Z\",\n    \"creatorRole\" : \"02my1so0rbi7fqow3di4txon86c8fj4agnxu97ahh9qfp49rb2bmdfrnnn3bnftut09am6e5j5wb\",\n    \"createTime\" : \"2022-05-23T16:56:32.18407Z\",\n    \"name\" : \"Jeramy Lang\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-05T16:03:32.184144Z\",\n    \"creatorRole\" : \"u79vmbpl9i4gnrv2vmyv9sra7sxooqvar35xesrfa0d53xvg9zfiasstx058n8zihu0ipo3tq6uoeverfd5nspcjv1kao8p1vknoj3l0rw7zeyz00ccej3wsold\",\n    \"createTime\" : \"2022-04-30T14:45:32.184182Z\",\n    \"name\" : \"Palma Murphy\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-11-16T14:14:32.184253Z\",\n    \"creatorRole\" : \"7tyum1n77znhsuv0bt3\",\n    \"createTime\" : \"2022-08-15T16:51:32.184289Z\",\n    \"name\" : \"Miss Vince Schultz\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"vs2bzjxhr20lrgnpobd8iefb77qqjps3wfmsvngcggtzsqlztlx4gga9urelsuwnikf5exqpvvj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "372340f4-cb68-374b-9861-66c9a969e0be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "38bd575d-b1ee-39ca-9cd0-9c92b16a6d7f",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/57ulofx2awk4ejug0bxy0efsdto2p47x26r9boy4jcpoai7obao79y2jrwjykjzkbfhwobc8vnzczriaz7la0t41q1906keze4ejubrlyf2hvbqszt0ulkl3n82hyckzx9keua21unayw60s8818/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jacob Graham\",\n  \"error\" : {\n    \"code\" : 2012298993,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Eius quia temporibus dignissimos reprehenderit voluptas. Odio enim similique sint vero dolor cumque veniam. Unde pariatur et perferendis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38bd575d-b1ee-39ca-9cd0-9c92b16a6d7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "f4e621d3-d0b2-3f7d-8c16-709c3fd6a606",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/3v7rh4n4twn6t9gy54dw7z9rgvxit05z8fvfbr0r8vsmsjjbxapd7pemyrh6uc4vxzfb2ozg3sqroqbrr6bphbj7vx66mmg1t09jwh7hrurp5g2bzo5zd340vfrhy24hd57wzox8vchh0m0rwc/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"bhp4lijddquxqiph4fl0mok1u0enbnjvb\",\n  \"statements\" : [ \"runt0n5mbiuhkwnt9bmq06wkuu3myafghk0dwwcsn4f9qy77h38h5o41uooq88zq3gjgj3z1k2oafi1a6nawfljr93ekqkjq9pde4kj1mzpmg6gc1zoypct7iuec7sz5q8cn48o9p2wyw49sbm\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4e621d3-d0b2-3f7d-8c16-709c3fd6a606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "38d12d12-11ad-3767-8edd-b1d5b73721a4",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/dmxg42pear97cbu0pelgbg0dbz1wdlrw18lvndd6qks07m4r2lns9ql157a8n0byotetenx4u0f56v3xzdo55z6hc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38d12d12-11ad-3767-8edd-b1d5b73721a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  } ]
}