{
  "mappings" : [ {
    "id" : "daf8484a-ce57-45c1-a241-0af6163ce401",
    "name" : "Like Read, except returns the result set as a stream. Unlike Read, there is no l...",
    "request" : {
      "urlPath" : "/v1/likajo3tshajspxzk9h08q989vkk0pagso3nmwq2il4izlb0fxy04jjt:streamingRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : true,\n  \"resumeToken\" : \"ntm\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Ms. Dewey Harvey\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0vv2nq7wo5hmi95d6ok2dzy1mga533i4fnhi38i09wcoavwg3ks53195lmj5ibhx7owqf3arrucbsyxqzwtromavwpz0k7jdjgye5byw3bknkfe8drx2sx59yx5mvhl20xwusrqot7ygplxumregjefvwuqkp0yhecxaljiasx\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Jenette Batz\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ujfylj54kkptb6qydlo6ao\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Boris Hintz\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"pb4jiub1ss9j3513ymj5riksh7ymctqz0zjvmjwycb424fxo70mod05bhchiji2yd1b6aai5s3f1mrzhx0rck9wuqbip8s6h1jbgxr8m7e0ovyi0s57902fu0gfqjuu108rukafwqmhkdky6wv845r3pxjy1hx1yp83b5qjt5uws7lh802s9g3r8\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Jenell Schumm Jr.\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jlf4x52mi2z054ghga0ujjjkx3w1pold806rlgx62zac2uruo0ne75lbj\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Rafael Marks PhD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"b501zslxs2mor2d5nvjfqaxzp54yveegvj3ubvbfxaedljy8x7l42s0segt30neeoatgc5p34ltgwgjmyk6grqm80snhzdptik3c71eoi3iiwxwrigb4qtdsq99fo8zoxgcl\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Delta Buckridge\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"z3q10pldus62xennzn46rbsqd32tlb1hrurto6rxsjvy4ztcqg8jcuwx1og\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ernie Schinner\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"9ej5agcklzcsg08bpir9n2t3dc7d59yc6kzgxj91emetn796jvq64lp97dky8f3nmxt7tjxpnukfaxrh4tx050moi9f2fqpmeif9opoz53ee0i4udalw23sy544toyev4jyo8iawul3qsfh4\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-02-28T17:23:49.587013Z\",\n      \"id\" : \"46pn\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"ect43on22plh9bbtwgimmh7fkz3d5fslbyvbbxaozouqie98xeh5yl5ud05danukc4lz7ogy2t3n8tw8o1usw4woikyuuhbytm61w8ic2p8dna0hgukq876wymd82j33uvaxpbcef6q34uos3srtbi16d3b6tuhc0vd7ncylhfw3f6hz\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Magni inventore velit voluptates commodi incidunt. Incidunt iste et quia delectus quia quaerat. Officia qui quia numquam et aut ipsa iure.\"\n        },\n        \"displayName\" : \"Claudio Kassulke\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1965545470\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eos eius illum quisquam. Sapiente harum mollitia. Qui excepturi velit natus aperiam laborum.\"\n        },\n        \"displayName\" : \"Brenna Moore\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1102699103\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Nam voluptatem placeat quos. Voluptas adipisci atque et et. Qui nisi placeat iste et ipsa animi odit. Necessitatibus rerum accusantium dolor sit. Voluptatem impedit blanditiis labore ut.\"\n        },\n        \"displayName\" : \"Al O'Conner\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 1159655553\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Aspernatur voluptas nihil. Beatae accusamus cum harum fuga. Earum omnis porro. Nihil voluptatem velit a.\"\n        },\n        \"displayName\" : \"Israel Becker III\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2140405153\n      } ]\n    },\n    \"rowCountExact\" : \"t2dtsk94hxj8axz8aiophjygjtb5q3go79jmwdezxvorhs8nh6yvjnqu1bsixfi1oo5xjt3p\"\n  },\n  \"values\" : [ { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "daf8484a-ce57-45c1-a241-0af6163ce401",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.58776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.streamingRead",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "46e9db90-4cbc-45a7-9665-6d5b5bba4eff",
    "name" : "Rolls back a transaction, releasing any locks it holds. It is a good idea to cal...",
    "request" : {
      "urlPath" : "/v1/g26v8h916bo5r9z89zcam9efch7tvi7nztdzdgir1rdpn7mx:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46e9db90-4cbc-45a7-9665-6d5b5bba4eff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.586336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.rollback",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "74270fa6-1cf0-4121-864f-a611ff393acf",
    "name" : "Reads rows from the database using key lookups and scans, as a simple key/value ...",
    "request" : {
      "urlPath" : "/v1/w349zyog8gd9qjm6t4:read",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Johnathon Barton\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"FLOAT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"riroyzdoncr2x5iiizd3t52eyux4qq2p7mc1fllzcpu94zb0i7hxts3geg7pdjuta7fowpihv6blot7m15fooilrgmwdsyna576uunwafdfj5m2k9hgn9alriqqd53gezsu909cqzhg\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Miss Alphonse Rosenbaum\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"n3ov7d5bk1i7ny1yecp7xvf0eqhkm\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Dennis Gislason\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gfd4sjn2ox9vktm091w8vmuc1e732ajy7wmwc4xi4viegds9aavzbcy7\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Ms. Maximo Rodriguez\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"2cqfqd7jsff5yz9i0ngbokfbk0ba6oauno7mlmw5y5r65o2qs7h2hidkb1s1csg9odfz5\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Consuelo Stamm\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"9mtrwstjb9cj1rf6mskcpz8aaqba2qcm81tf24ljtt4kqdwkvvihtsta0v7xto59j527q3f8tve179x4t17hj16x2r8bhf33vrfbxngetreg8s2ha2ubg9gfaor8fzrtuh5c3s8ovp2plh715vrnntn76he\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Fairy Jacobi\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"4nav47pc01m2jvpak7fgm5k0a8q5li\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Molly Farrell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BYTES\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"oh9yd4sfwidy6gzgycnex1bzi8qouam0930w6n\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Brian Heller\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRING\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ruqjel551rj802mwjng0pnq49622u1f6k0wl4705p2hiy8qeylgwehpk95t\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-01-01T14:34:49.585314Z\",\n      \"id\" : \"bywy\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"o73m2zwjdfnzn80o28p3y4q3251eqabov4xl25ye8o1v46vshlbk3kiv0zi4e6q9oyp7dxg3e3unyxfret4478by80vat307whd\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Nemo id repellat accusamus qui omnis. Excepturi quam ex. Animi sint enim enim quae labore accusamus. Qui adipisci nobis aspernatur dolores numquam qui. Perferendis quia et minus ab.\"\n        },\n        \"displayName\" : \"Eliseo Satterfield\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1297038701\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Cum neque sit magnam exercitationem soluta. Dolorum perspiciatis illum unde est est. Qui praesentium aliquam quasi laudantium.\"\n        },\n        \"displayName\" : \"Wilford Hills\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1544959449\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Quo voluptatibus est. Est assumenda quos corporis corrupti et. Numquam fugit eveniet expedita. Quia qui earum.\"\n        },\n        \"displayName\" : \"Betsey Kuhic\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1067598764\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Vel esse sit sed quia. Labore quia consequatur nobis aut accusamus eveniet. Ullam quia quos omnis eum voluptates dolores fugiat.\"\n        },\n        \"displayName\" : \"Kelley Sanford\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { } ],\n        \"index\" : 1922419540\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Et est sequi. Et nulla sit inventore. Sunt officiis doloremque doloremque odit repudiandae.\"\n        },\n        \"displayName\" : \"Dr. Ezequiel Kilback\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 767653296\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Beatae id deleniti eaque natus quia a. Placeat quam adipisci hic nam facere id velit. Asperiores exercitationem corporis. Eius quasi eos similique vel animi. Saepe distinctio unde.\"\n        },\n        \"displayName\" : \"Lanny Pfeffer\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1224564172\n      } ]\n    },\n    \"rowCountExact\" : \"7082g6doztrsd5shvt8r6juwp2au2d6ivhbio0b9j85gae2mxkfp8j4o2njw59mnsaghriu29oj2hedbzlvcdpkbanehwpx38su1qupnta7str9qwk690nnkcrld5p3mojj8eegh1dfzt22fqvhcljczivysuxt8vxify8wna99er85werk89j3x\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74270fa6-1cf0-4121-864f-a611ff393acf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.586276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.read",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "506b4336-b572-45b1-92dc-09ba70a6466c",
    "name" : "Creates a set of partition tokens that can be used to execute a read operation i...",
    "request" : {
      "urlPath" : "/v1/0ylee9otk5q3k8im1ouv5oatrrukk488dqdyv4453ewpx0edyva4dtcc7o0mxtzhnkdhchrs59zxwd01xhk789n32j9wf41ololda9glzcyylkuwfrblmzpsluox8v6oraxxta4hc13og8n7fa8krshlw3e9qtazeds91vx8a14bdekiycv2jngyqkv:partitionRead",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"fng2pspwqf9eu3zulv5ip5b9t829firlxdj9okrgi7ty99hc17i6jdpbhbxwpn2z53niyjytegvdcq6vu4b9drc0ya4s6laow4at2cx3lp8n3rmgcrk5xkqw4cgx0\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-11-25T16:56:49.584434Z\",\n    \"id\" : \"cdv5\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "506b4336-b572-45b1-92dc-09ba70a6466c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.584562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionRead",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff353ab3-437e-46fa-9f63-860374fc1b9c",
    "name" : "Creates a set of partition tokens that can be used to execute a query operation ...",
    "request" : {
      "urlPath" : "/v1/uvz4jytd8bd18mj42ercyf3u7f58azw94bi5zplty7cbr3eaan9sway2tdh6o1lxim8jfi2qhkb2dq6s8u7oj01mbfbtkz6h1a9iu38qu2htkvkd037g69bm0n3cecfjce4bzxrcg2fumux5nnrrn:partitionQuery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"partitions\" : [ {\n    \"partitionToken\" : \"prr4thssy2x4955nl7duh8dk7qhfx4t4dtrx8gnuz3dqph4rddvos7w899ih5vkea81ms7vp23ihobyvta1ocjvos2lmgwlx24ku4m1e1\"\n  }, {\n    \"partitionToken\" : \"nykg37j2a4w2sbn0hf2treqslmjpe0mwy65st0fdoknf0edriv4h5o2o9r9vd161kvesf79sjz3ia19kp6o79lvcz\"\n  }, {\n    \"partitionToken\" : \"c8z1q3tuslm1mbszx1vljyantsmbjr250eylmwa1x9my5iwa3n0oxwczx7wcfiwg7k53mt68q3758l1hrr6xb4g5vdta62x1onfpcpvaazdmvondmup6ipe4unw7u\"\n  }, {\n    \"partitionToken\" : \"4qdcbyp5fxoh\"\n  } ],\n  \"transaction\" : {\n    \"readTimestamp\" : \"2022-07-16T17:28:49.584236Z\",\n    \"id\" : \"v2xe\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff353ab3-437e-46fa-9f63-860374fc1b9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.584375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.partitionQuery",
          "schema" : {
            "description" : "The response for PartitionQuery or PartitionRead",
            "properties" : {
              "partitions" : {
                "description" : "Partitions created by this request.",
                "items" : {
                  "$ref" : "#/components/schemas/Partition"
                },
                "type" : "array"
              },
              "transaction" : {
                "$ref" : "#/components/schemas/Transaction"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "49f1c70a-16fd-4677-a110-11458bc53a84",
    "name" : "Like ExecuteSql, except returns the result set as a stream. Unlike ExecuteSql, t...",
    "request" : {
      "urlPath" : "/v1/5xuxjcoris02a2ym12znri57byld9zs72j759t9t2egwx32bjbmwt2unckigmn03orazzk5xwo24kzwn9g97tli7himjtxvwfiudlyp7gsabnni5elzemqojmywmmkm5ri3liitujk1gknlr2qlg4r73rapt35zropmuf1dj86uztmlbery1hpo:executeStreamingSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"chunkedValue\" : false,\n  \"resumeToken\" : \"i2oi0el3ds6r3b4cwouk972o\",\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Lola Welch\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"DATE\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"t6llzomydxo5o559pewho8u03bnxsk5717iynq012b6xvrpwjv4ws12369feq36mz4qz9oztrt4hgb8s7hqg1xmbfxdaohobtd2zhyc05lrt1oxp3ql0dg1u21usbin8tetuitnam2eubj6u9pxb4op2ss8wf4yzpj80hpclcoibxcao4xzio8kgvya3wc\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ms. Jude Lueilwitz\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"gmb57em43gtcskwsy5rqjr9\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Ms. Von Bode\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"NUMERIC\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"4jy18dw6nk7inq789deauhmidtt1ejexmuk48cxhuq1rlrl0fyvzycs7w5hw603lmqmv505t5041o1evu13at167goxelwqd8pcwqvjqfc1tk5zxkd8wq05705vp40uxgbihbzwl34a72aghvv0a12p6qescmj\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Norene Haley\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"bzfkxg4ys5ed1ytjw1u97d533tii8pgp5yp277euo4ikro14q84af1nfpwgwwcbnktbcjt5f1ryv2toubbaa9rhejkk1f96vcy09nb140qrftzpyjn6f8haflq6yvhaopqwfy\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Dewayne Ziemann\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"e1suvjrcrcd8ic2sbvk0u9cxkjpteoi5p253vbocn1p6zlrnfo37r4l7h2f39jhlqwrsqfn5ubbhwgze64ej0ez9j66o1xozp7ndq78l540d8f27m43lymw7f1t7mvbtawohq7ramo7hgfgne\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Elliott Swaniawski II\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ecjfg2lqu8fngf452exqpc8qea76yqle7ow1synawxo1lrq6lblmylrtufrxiphp8fcx8cwmjjxxw2idht6aq20a1nio\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Consuela O'Connell\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ENUM\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"rvzgj6q69c7bbrttz7tm7yvitn98m2gtmpmlnjzo59kka\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Cliff Leffler\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ryvqjys4z8zsyvctcdrwfzx23czbzjzyah35lndhe4lztbtu3xy94y9o37lrmvdf8ifia02ml31e1lks8ggj3fxd6arl8b30plnd3u\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Mittie O'Hara\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"ivxl0o4q1p41s9bkwge1g9g07f3\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Aaron Carter\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"tjlw6762yy3evwjchppul79j9f2fo8tkjw4udh0wmog1iolyxmvrnpfvdtump5g4pxb2gfqhyic8ymf13spcaxufghu6s926lxv2l\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Drema Konopelski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"ARRAY\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"0a7\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Dorthy Botsford\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"dqfxduyufj25qbvio7tydjo929s58r1h8m5s404zw57d2ir471t2g9bo9dzcquba4aq3jbxtvhmnj3px2wkq5tzqi9m286br7infn19w5ddb62gxhxxc4rs43z3tlc5a7eh8zs3lq\",\n          \"typeAnnotation\" : \"PG_JSONB\"\n        }\n      }, {\n        \"name\" : \"Wm Stehr\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"INT64\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"u1owx87701wfx5nf3vs35ty2qqu7p1fe778zzv1pmny0a3cl1aine8h30o8nm8goo74u5b93ey5fyzusu\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2023-01-28T15:35:49.583412Z\",\n      \"id\" : \"5bba\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"5kl7ei214i8eltbjsc0k132wzs75ntca7kd3g93bgg51o7hhhjbtoz4swnlc70ctsbsq4st72c7cp8gi9nk41qha8ul57en6j40uoneul0a9h5gj7ef927\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Vero libero placeat soluta eum. Perferendis temporibus distinctio corrupti molestias molestiae. Facilis facilis sequi ea dolorum labore. Hic quis non esse eum vel beatae fugiat.\"\n        },\n        \"displayName\" : \"Mrs. Deena Schmitt\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1462606694\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Commodi consectetur voluptatum consequatur sit. Hic labore illo provident beatae doloribus. Magnam dicta est blanditiis. Ipsam delectus rerum sequi dolor odio nobis illum.\"\n        },\n        \"displayName\" : \"Dr. Ward Armstrong\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 593158912\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Molestias et est in vitae corrupti tenetur autem. Culpa quis neque et. Blanditiis ipsum repudiandae veniam non placeat. Neque iusto dignissimos ex quibusdam molestias enim at. Incidunt accusantium sed\"\n        },\n        \"displayName\" : \"Miss Solange Mante\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1847155910\n      } ]\n    },\n    \"rowCountExact\" : \"lpjdzhvrfpxnbcj7miwii7w7zgwvgg09r6occyp1cu5o8z9al1ctq050tpwpg92ms89spq6rokpesq1usafn05cbkdqgyfbhvqmpcyofrrmyxmp98imrm7l35pbqy0ze4pimegdfxo04plm549wvsros2cu978668p9x22bz3fe4ph4q4rmlk81j1j\"\n  },\n  \"values\" : [ { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49f1c70a-16fd-4677-a110-11458bc53a84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.584106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeStreamingSql",
          "schema" : {
            "description" : "Partial results from a streaming read or SQL query. Streaming reads and SQL queries better tolerate large result sets, large rows, and large values, but are a little trickier to consume.",
            "properties" : {
              "chunkedValue" : {
                "description" : "If true, then the final value in values is chunked, and must be combined with more values from subsequent `PartialResultSet`s to obtain a complete field value.",
                "type" : "boolean"
              },
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "resumeToken" : {
                "description" : "Streaming calls might be interrupted for a variety of reasons, such as TCP connection loss. If this occurs, the stream of results can be resumed by re-sending the original request and including `resume_token`. Note that executing any other transaction in the same session invalidates the token.",
                "format" : "byte",
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              },
              "values" : {
                "description" : "A streamed result set consists of a stream of values, which might be split into many `PartialResultSet` messages to accommodate large rows and/or large values. Every N complete values defines a row, where N is equal to the number of entries in metadata.row_type.fields. Most values are encoded based on type as described here. It is possible that the last value in values is \"chunked\", meaning that the rest of the value is sent in subsequent `PartialResultSet`(s). This is denoted by the chunked_value field. Two or more chunked values can be merged to form a complete value as follows: * `bool/number/null`: cannot be chunked * `string`: concatenate the strings * `list`: concatenate the lists. If the last element in a list is a `string`, `list`, or `object`, merge it with the first element in the next list by applying these rules recursively. * `object`: concatenate the (field name, field value) pairs. If a field name is duplicated, then apply these rules recursively to merge the field values. Some examples of merging: # Strings are concatenated. \"foo\", \"bar\" => \"foobar\" # Lists of non-strings are concatenated. [2, 3], [4] => [2, 3, 4] # Lists are concatenated, but the last and first elements are merged # because they are strings. [\"a\", \"b\"], [\"c\", \"d\"] => [\"a\", \"bc\", \"d\"] # Lists are concatenated, but the last and first elements are merged # because they are lists. Recursively, the last and first elements # of the inner lists are merged because they are strings. [\"a\", [\"b\", \"c\"]], [[\"d\"], \"e\"] => [\"a\", [\"b\", \"cd\"], \"e\"] # Non-overlapping object fields are combined. {\"a\": \"1\"}, {\"b\": \"2\"} => {\"a\": \"1\", \"b\": 2\"} # Overlapping object fields are merged. {\"a\": \"1\"}, {\"a\": \"2\"} => {\"a\": \"12\"} # Examples of merging objects containing lists of strings. {\"a\": [\"1\"]}, {\"a\": [\"2\"]} => {\"a\": [\"12\"]} For a more complete example, suppose a streaming SQL query is yielding a result set whose rows contain a single string field. The following `PartialResultSet`s might be yielded: { \"metadata\": { ... } \"values\": [\"Hello\", \"W\"] \"chunked_value\": true \"resume_token\": \"Af65...\" } { \"values\": [\"orl\"] \"chunked_value\": true } { \"values\": [\"d\"] \"resume_token\": \"Zx1B...\" } This sequence of `PartialResultSet`s encodes two rows, one containing the field value `\"Hello\"`, and a second containing the field value `\"World\" = \"W\" + \"orl\" + \"d\"`. Not all `PartialResultSet`s contain a `resume_token`. Execution can only be resumed from a previously yielded `resume_token`. For the above sequence of `PartialResultSet`s, resuming the query with `\"resume_token\": \"Af65...\"` will yield results from the `PartialResultSet` with value `[\"orl\"]`.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "909ee299-87c2-4c68-a261-eb44b7f799a5",
    "name" : "Executes an SQL statement, returning all results in a single reply. This method ...",
    "request" : {
      "urlPath" : "/v1/mdn2e2sxvhyp8webswj45202umkcezookwex314mg3n97mns697u6ucevnsyrp9cr72ip3dnnh6u9ttjngisqm8e587m4ldvnvda93v2klz1:executeSql",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"rowType\" : {\n      \"fields\" : [ {\n        \"name\" : \"Marylouise Stiedemann II\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"jv11nbaqo26zvz0vwqw0tsdy4hvouti2j81bnj9tg1vbbe9blgibars7tf6criw7e72gufumfyus2mpnylbbf180ihy7hm7lajokrf104i7u870lzprtdkf5l8exphbddp4hffyxp4r1i5avgtbtk5ebl6qdqj7q6\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Dr. Doreen Luettgen\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"BOOL\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"x40grji2d87a2muuqzlpon6s309otq4n7psie489eawn20bqvxunu7truj11m8hn1xx9jsl9kwz9539ki9ark4fh7d1l4ty8yhxkjkg6lq91j25weyduizymqwlh3ct424mr8vakkshurid64k\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Herbert Trantow\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"STRUCT\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"oxryybxb94w47ea13xd7jh1ocw4cusrocu9zkyogtbf7pb09a42sd3ncvdljzgnv0sz9kb2rvwcjfzuckvu38wymk3apihcaxshi2hny2vx9k2g0w8kgfc28lli2b63spscgc1rn9w1jqvauz4do3dv0dzx\",\n          \"typeAnnotation\" : \"TYPE_ANNOTATION_CODE_UNSPECIFIED\"\n        }\n      }, {\n        \"name\" : \"Nery Metz PhD\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"PROTO\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"f4hr1i13426vh9tvaw2d6kaznxvt58clc\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      }, {\n        \"name\" : \"Quintin Ziemann\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TYPE_CODE_UNSPECIFIED\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"tzxl1xyamquo9hw3swdnt2mw3q7k65p33s4duak2loycak4r4u1xqi6162etybdxmzy922v7pfm8rbisf8eka7ualk0yxn67mxcxhqccbxueo6urlml2i6pxb7gyyu4c3d0p0sbp8vftehdnuu4a0esuele0mjqpcpk1ainjm18p08bhdm5non7mdgua8iwpjjv1\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"undeclaredParameters\" : {\n      \"fields\" : [ {\n        \"name\" : \"Greg Jaskolski\",\n        \"type\" : {\n          \"arrayElementType\" : { },\n          \"code\" : \"TIMESTAMP\",\n          \"structType\" : { },\n          \"protoTypeFqn\" : \"x7i0abvsqidj9gxb38733ee1j3d3g4xqh7g2q1g2z5wvkyfp8pxqq28k96q\",\n          \"typeAnnotation\" : \"PG_NUMERIC\"\n        }\n      } ]\n    },\n    \"transaction\" : {\n      \"readTimestamp\" : \"2022-10-29T16:22:49.580843Z\",\n      \"id\" : \"724y\"\n    }\n  },\n  \"stats\" : {\n    \"queryStats\" : { },\n    \"rowCountLowerBound\" : \"1px7uqk4mogclv58m3pud522nfk9lwjlab4ahqkxvu24ee2h8qc9nji9dw676cob9nk8wi93ocxfwbtcq81fczmm2b056qe0w0kjb7g5twyp3orhaelx3dsy991g8k4hab1penronq0aivmjcfw2zphwuxhcdw9d0oiwhc\",\n    \"queryPlan\" : {\n      \"planNodes\" : [ {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Accusantium natus delectus. Quis perspiciatis quia officia. Aliquam culpa nisi et voluptatibus.\"\n        },\n        \"displayName\" : \"Lauren Beer II\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 1937734615\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Aspernatur quam voluptatem itaque id excepturi laudantium in. Deleniti dolorum est optio. Est fuga doloribus qui mollitia.\"\n        },\n        \"displayName\" : \"Kennith Reilly\",\n        \"executionStats\" : { },\n        \"kind\" : \"SCALAR\",\n        \"childLinks\" : [ { }, { } ],\n        \"index\" : 1594254245\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Eum est ex eveniet itaque autem quibusdam. Corporis consectetur ipsam commodi. Ut quidem non atque ea. Asperiores debitis nisi et rerum accusamus sed atque.\"\n        },\n        \"displayName\" : \"Mariano Hirthe\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 2125773444\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Asperiores maxime et dolores quo saepe. Nobis quis animi ipsam. Architecto facere laboriosam non.\"\n        },\n        \"displayName\" : \"Nila Hammes\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { } ],\n        \"index\" : 37999085\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Enim enim aut inventore maiores vero. Repellat eaque consequatur quia est eos esse provident. Culpa dolorem eaque ea eius ut. Quisquam id neque.\"\n        },\n        \"displayName\" : \"Dewitt Heidenreich III\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 1625834129\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"In ipsum excepturi vero nihil provident facere non. Et et voluptatibus aut voluptatum architecto accusamus. Labore quo ut.\"\n        },\n        \"displayName\" : \"Susana Kreiger\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { } ],\n        \"index\" : 2112196702\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Maiores et illo eum qui dolor saepe qui. Eaque doloribus earum placeat. Asperiores modi sit.\"\n        },\n        \"displayName\" : \"Antoine Kihn\",\n        \"executionStats\" : { },\n        \"kind\" : \"RELATIONAL\",\n        \"childLinks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"index\" : 527150003\n      }, {\n        \"metadata\" : { },\n        \"shortRepresentation\" : {\n          \"subqueries\" : { },\n          \"description\" : \"Est modi ipsam quaerat provident optio pariatur labore. Aut distinctio quia beatae ut sint. Id quibusdam est vel. Dignissimos magnam fugit et. Necessitatibus voluptatem velit et natus quae quam quod.\"\n        },\n        \"displayName\" : \"Elisha Bartell MD\",\n        \"executionStats\" : { },\n        \"kind\" : \"KIND_UNSPECIFIED\",\n        \"childLinks\" : [ { }, { }, { }, { }, { } ],\n        \"index\" : 2032003391\n      } ]\n    },\n    \"rowCountExact\" : \"986py6wys9f8yyc1pr2izyzn60dbffv5rhkyo5p49we8j8nx381clpdrcla698q6rvmnstnod8aozo5ka5kg06qovfr\"\n  },\n  \"rows\" : [ [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { }, { } ] ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "909ee299-87c2-4c68-a261-eb44b7f799a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.582191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeSql",
          "schema" : {
            "description" : "Results from Read or ExecuteSql.",
            "properties" : {
              "metadata" : {
                "$ref" : "#/components/schemas/ResultSetMetadata"
              },
              "rows" : {
                "description" : "Each element in `rows` is a row whose format is defined by metadata.row_type. The ith element in each row matches the ith field in metadata.row_type. Elements are encoded based on type as described here.",
                "items" : {
                  "type" : "array"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ResultSetStats"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "affdc68b-f2a5-4b27-a7a7-803b7a43eed8",
    "name" : "Executes a batch of SQL DML statements. This method allows many statements to be...",
    "request" : {
      "urlPath" : "/v1/w2hix975h60wzpusty4iglxif4aa7oanuak6z1xgl09cuh9e5tfptxvycm1lwln:executeBatchDml",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resultSets\" : [ {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-05-29T14:12:49.579383Z\",\n        \"id\" : \"2ft7\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"1l9y15kydbsnuj9ysjdm37vqdymb4vgd66gi3fesmqacseyl602e3b7svlk82ke1ok6z9iufe2hjwr3mxygltlw5q6dpo1r5w8m9kx9zhyd8dc4eo69722629yyfm189e9ls0lee2jab0z4crc8wd94vyd\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"jq9le3ajgpq7vcr6d9gpvwhk4ukykyo8sk26ikno55smiqo0qfrpp9ozsnbdsctv2atbfakpdowuru7eyrfw2h57p0nyvjm6upe8ol16brouh8umu62ow4oq64vbwhmw7d991hn8cdacg0fzuz5aw2tb4382y41lu95hi3d1sc\"\n    },\n    \"rows\" : [ [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2022-05-31T15:43:49.579635Z\",\n        \"id\" : \"u95q\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"trnanils1y2m2g7gco9zans56qhh9oik4ouwgqjma9dg9kpo1ao097fitwfki2imc8c1d09swxblp60582ndhnkyr57sualj4o6izbi2vcqoif0zmrc9tjjokpisdan03needl797lyatj5jd5qxb33shvnpx3nnve7fnssf9xxnhiafe9t4zj52kvum\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { } ]\n      },\n      \"rowCountExact\" : \"20f27eydnsa0yemehzn9fwetfllioch1v0eyl5rr1v2b19ciadei7mv1ldiehcw4n0ruojutkcc55r5egdkedcodabvqtmvyn9s2ub2xo2trih8v\"\n    },\n    \"rows\" : [ [ { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { }, { }, { }, { } ], [ { } ], [ { }, { }, { }, { }, { } ], [ { }, { }, { } ] ]\n  }, {\n    \"metadata\" : {\n      \"rowType\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"undeclaredParameters\" : {\n        \"fields\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"transaction\" : {\n        \"readTimestamp\" : \"2023-02-13T17:23:49.579883Z\",\n        \"id\" : \"r919\"\n      }\n    },\n    \"stats\" : {\n      \"queryStats\" : { },\n      \"rowCountLowerBound\" : \"bh60wnl3qrs0vyxbcxd0jdr947kc2bbbwnlmiux9a6a7wr91662emr4hmzp0ph11o8a4omgnnkvzivtixn8uzrqim0747j80euhbo3egfqzsosqo9c6y9u48n3voj1eek\",\n      \"queryPlan\" : {\n        \"planNodes\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"rowCountExact\" : \"r6020nqkpvpfeb\"\n    },\n    \"rows\" : [ [ { }, { }, { } ], [ { }, { }, { }, { }, { } ], [ { }, { } ], [ { }, { }, { } ] ]\n  } ],\n  \"status\" : {\n    \"code\" : 404553388,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Eos vel explicabo quam tempora. Rerum et tempore qui possimus et. Dolorum dolorem ducimus nemo magnam et repellat. Quasi iste in officiis iure.\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "affdc68b-f2a5-4b27-a7a7-803b7a43eed8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.580218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.executeBatchDml",
          "schema" : {
            "description" : "The response for ExecuteBatchDml. Contains a list of ResultSet messages, one for each DML statement that has successfully executed, in the same order as the statements in the request. If a statement fails, the status in the response body identifies the cause of the failure. To check for DML statements that failed, use the following approach: 1. Check the status in the response message. The google.rpc.Code enum value `OK` indicates that all statements were executed successfully. 2. If the status was not `OK`, check the number of result sets in the response. If the response contains `N` ResultSet messages, then statement `N+1` in the request failed. Example 1: * Request: 5 DML statements, all executed successfully. * Response: 5 ResultSet messages, with the status `OK`. Example 2: * Request: 5 DML statements. The third statement has a syntax error. * Response: 2 ResultSet messages, and a syntax error (`INVALID_ARGUMENT`) status. The number of ResultSet messages indicates that the third statement failed, and the fourth and fifth statements were not executed.",
            "properties" : {
              "resultSets" : {
                "description" : "One ResultSet for each statement in the request that ran successfully, in the same order as the statements in the request. Each ResultSet does not contain any rows. The ResultSetStats in each ResultSet contain the number of rows modified by the statement. Only the first ResultSet in the response contains valid ResultSetMetadata.",
                "items" : {
                  "$ref" : "#/components/schemas/ResultSet"
                },
                "type" : "array"
              },
              "status" : {
                "$ref" : "#/components/schemas/Status"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "521e3e76-4849-4f17-b0c3-76f0816f3483",
    "name" : "Commits a transaction. The request includes the mutations to be applied to rows ...",
    "request" : {
      "urlPath" : "/v1/lgnuv72341hzfrxim26pffiaaejkm2zp61fld8kff2eyxeikgf4el32pg453b4agp9ojlgcih251p08z6956rwcmr4i8v3b9rexwtz4qreahf66848wyb:commit",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"commitStats\" : {\n    \"mutationCount\" : \"e17i1wbcp85f0ffwodzutbgzyalgts1gyuekuzx2bt2ggqdxo2cvn4hgcuo2nzqlypqx88p6qexpunq8648d1pyjt1oud3t7nyb1ep7amquita69aig4l4e29w45q68t8f2wecrt4uia63u01ef4k77klul5oq4bh22ii8qkmulv9qoe9t64a1\"\n  },\n  \"commitTimestamp\" : \"2022-10-14T14:50:49.579225Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "521e3e76-4849-4f17-b0c3-76f0816f3483",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.579285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.commit",
          "schema" : {
            "description" : "The response for Commit.",
            "properties" : {
              "commitStats" : {
                "$ref" : "#/components/schemas/CommitStats"
              },
              "commitTimestamp" : {
                "description" : "The Cloud Spanner timestamp at which the transaction committed.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f45abe92-3d6e-4b06-8e3a-5e10a5e778a6",
    "name" : "Begins a new transaction. This step can often be skipped: Read, ExecuteSql and C...",
    "request" : {
      "urlPath" : "/v1/s0xjycrqn8sym3x6rvfejffepuyja1u3ksyj037vaywuekqzmhp0s22xuez3vf0zotsxgzzl:beginTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"readTimestamp\" : \"2022-05-10T17:34:49.578977Z\",\n  \"id\" : \"ze4q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f45abe92-3d6e-4b06-8e3a-5e10a5e778a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.579155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.beginTransaction",
          "schema" : {
            "description" : "A transaction.",
            "properties" : {
              "id" : {
                "description" : "`id` may be used to identify the transaction in subsequent Read, ExecuteSql, Commit, or Rollback calls. Single-use read-only transactions do not have IDs, because single-use transactions do not support multiple requests.",
                "format" : "byte",
                "type" : "string"
              },
              "readTimestamp" : {
                "description" : "For snapshot read-only transactions, the read timestamp chosen for the transaction. Not returned by default: see TransactionOptions.ReadOnly.return_read_timestamp. A timestamp in RFC3339 UTC \\\"Zulu\\\" format, accurate to nanoseconds. Example: `\"2014-10-02T15:01:23.045123456Z\"`.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8049423a-f7d2-41f4-9af0-cf1076386cff",
    "name" : "Returns permissions that the caller has on the specified database or backup reso...",
    "request" : {
      "urlPath" : "/v1/45okl9m1mmomxfwxwyeytjm23fhhs072qusu5jst2761y1gr7js8s6a1tetn1eq6vv995fvjvxd6xoeyo9sgmah8icuo6u9s1g74pbw59k7w5i30yusnyy55yeqti790u:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"c23sqv0zvbed0xhv280hwlegkdmvrutg8jkxta3y1p06o9lxfjedvunlu6m8jrl6s5r51467fpcwz\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8049423a-f7d2-41f4-9af0-cf1076386cff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.578935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "66ccb594-37c9-4cd0-a040-f59c84b341a8",
    "name" : "Sets the access control policy on a database or backup resource. Replaces any ex...",
    "request" : {
      "urlPath" : "/v1/atmskphg8o2017awjeydkaxu1pswalkvaraoiyq95ll79200dy2syhzipf0hzlocgp4w12mghrjnnoab77fd42aih6yp4yxayy4nzvtyiehc9hhljqd0iuqmx9x42w1ees476vzm6pj6tuz3waitjmgjaqi1tsj7g49yyxo01x8ocua0jd58g:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"eekhqoxspgzsdxohuh3mse5man8\",\n      \"description\" : \"Alias delectus dolore reprehenderit assumenda aut facere ullam. Earum aut placeat labore est quis molestiae. Molestias aut et ipsa repellat impedit nihil odit.\",\n      \"location\" : \"kqw8j6s8j473sk7yv6q0e177nucynuw0blyqfjtmk584g1md3g7kt099jurdo2v0tyv19yysc5mnq1rf8xhvywrtsu3hk7bw2gfxgqp8nzng68i7e54lzjktv3ik15zsi0yu0ll6mrjjkmcxsxs23iw\",\n      \"title\" : \"Porro soluta similique assumenda.\"\n    },\n    \"role\" : \"jtypn9b\",\n    \"members\" : [ \"rm0ob109crewz76h8j73y9i30fmuzswgk05zez50h95pmbysj6f0r0oifxkvoru52qy7mv2rv0sjb2as0ftojfwv16h0t6exjkmlvynm6srd9bfu7egk56ulyh8vm7txokthfqju6n7xd8hosypkuoimvqle6h7bypru1w7xzjf4qk8gv\", \"sywlq0nm7ujwlj5s106y50g8qvnyplzktgwhub2atbx4585cgrkf6ipmwp4kh6gfw60x91rflbep5t9x2f7flu2e2hf9fk2srqvp835wq80z26mo356dpe350rolftc6n1kyqk9y2cqubbv9bynp\", \"tpf\", \"5mt1udufa2npo3rxnd9cq71ak007jxv0s83u19dnbrt1vchktjccl7k8ehdgwrs5yf4jpjxow6rjc45ks4g3jfa9uf98ei1v6c0diia6wod7834wf1dx8wrec5\", \"pyy7q\", \"htjoltvbwxwetqi0o41m5bbl57p0hec3pn92ys0hxd2atwan36c2xg66gzanjmswpexzb42y0awyxc0k12vbmwf2ffivzypzecc\", \"ef9abeoagp6xjegv1pr2g2ph6bn49o9w24l7dsojq4f1y0i9ht0r84isxmqtmw4q774nsojea25gbu41hgyf4utf4fr8hrm0v8ixqoehmqqrcfbbxs9c1qpkotywpiin00bq2dhq0fstpte28kd96tv0lh8qf4lh35sd9fbn1yqjc5twcd\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ltyxux5i92x88cklmc4h6zbgquf4n7n5vo6kwkhv3tlbh55tryljx1s6elih\",\n      \"description\" : \"Velit aperiam aliquid vel sit sit aspernatur voluptas. Nihil repellat libero voluptatem tempore. Hic et consequatur repellat vitae consequatur. Doloribus aut velit nulla qui laborum.\",\n      \"location\" : \"hramswk281a4dm4pu8cq3v9ek841f0xly1ic1fvj\",\n      \"title\" : \"Et saepe sed doloremque reprehenderit nisi laboriosam odio.\"\n    },\n    \"role\" : \"c59lvmpi3gqwlzcws3rplyoto3pjiltloy820zl9b9aafqgba6p4862kbyynl7ehosucpaee6892zgr1gsj6md47f2mkcqvxyz7vcvd8htp0hek5jy3b7x41lyvovndhecnzgbpjfh9wyyzbunwzjd92dzyc2wbe67xki8mz1wc15e5fqghd398vq0\",\n    \"members\" : [ \"f23ar3sjbjpn4wnyfvva5hujyq9cvmpau5lsv7rodhmwrfc0d39livowjnmdciqe3zigz3t6hmiyds6oibf0ovncxl8k5d9vlz7bggb8lfnmvrkuu02ka2oirlo00ogrx8ygo2g0res2kzvq3ofw5w78mt7d82gz7st0\", \"to6f18p3oday6f8s72iyu1lqik33o\", \"rdflv0mxhxxeuc6xxkx9efcfwis4z3zcm0p3wltp805y3pe5cpis6ypiiqjwlw1dekuw5algrz9gm3vh2bt1iu854gtwb4enfzsyon0t4gi34rl4qc20oap5h\", \"1bgtq1cxqwcn216tvbfgm76ewzjguv6f6e87e35wvgj6ijedmi57zr2o6jebn0g7k4sbjugj\", \"q77veatrdgof6p004c7zpawka58e4e1nyov0r84\", \"4fivf45zf4kcm3uwg9h9wp4k9jpfesw5ev8c81yz2ahqdetq564yr4nrt71xqc334a4a2cw3m98ljjx2w0bp6yg6h5yn32hephqwm\", \"frzghf9tbwkjsc2f4svguy8m7idlxxm80wx90m8100bqfeut2cyuavhzgjilvsyywa9h9dn89383td76porw9inw6g0dl9037wmm0m6de74gdvlypy5awhei\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lzoumgz1ckg2kemf9qvxiudvxddqgq4mea1e5vjbaacz2lsp9aptsov190brvwtgf\",\n      \"description\" : \"Dolorum quo est accusantium sapiente culpa laboriosam. Quam error totam cumque sit cum. Earum corporis et et quae blanditiis iure reiciendis. Ipsum dicta illo et ipsam consequatur consequatur nesciunt\",\n      \"location\" : \"guuvoolbmy1jiam5fbvu9hcbogstan1dqn2zfxxo348\",\n      \"title\" : \"Beatae animi magnam corrupti rem cupiditate eos.\"\n    },\n    \"role\" : \"q79ahs4fbfver7e9efbuj5zkcsghd8vuryopa1s0x0nd5luypfjjhp9udejq2qd58be0mu5is8icyc6sf7wxhve4jukltnfknfj37\",\n    \"members\" : [ \"we4gzl8vq7ditt8tmjmyx3z4w7hb4iap2yx3a91yh37ln0hpb3l8ciljyxyvii0nr0k9l9hecwowa4vray5g8b86j7lyvq5yoqa6go49\", \"z4dakg7qeh9csc4faxupzfshigrr9xr8ruxo56gfotzbhnzopxjtgkm7m7gt9fq221oc3zcm2ghtpte4iqxmxb15gfgcr7eyeorm0nnclykeh0c8wbmiyu8n59nntdfvgtyurjochtg1brmo4t42ke8edhtch5qa30tj8xbiam5s19jearxx9kwlfi\", \"b4f93wk59lu3hpjw9xh4bkjceobld2s1bo35xa9cfb7oyu7jjxxln92hr8luw86981bc17n1buyhs3hk4wzbofg2nrigs1ko7r4mn7xrtvjtuwkbsx3yzq42sea84fpsi5lemuttl50em5l48thpza75p5id1njgqzm\", \"z6mg9c5yr4vl79yt6wbjusfgbgpy0xej1v6e4d2fdp13yu5too3f8f7cukj8p9lmokwix64zfaz8ieezsjf0mgt8lcauglddv140q8cc4lwohyt13c9o6cr88bmogg8murcjdj5vteuesdep8rb3ejk4milr3vsnytu\", \"jdtec40trlur8ku8peg7kmmqmyjs5zldjm7rewvvop3ksa74s43f2hinyeh62ncb973kpbm48v3pv38gy9mmcdn42tlv7vk34sep\" ]\n  } ],\n  \"etag\" : \"repellat\",\n  \"version\" : 1509225480\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66ccb594-37c9-4cd0-a040-f59c84b341a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.578843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "976c4339-e384-4afc-bee7-f5bfa8d5c12f",
    "name" : "Gets the access control policy for a database or backup resource. Returns an emp...",
    "request" : {
      "urlPath" : "/v1/2c3s1wefqucp4yez32sxpqk0pa3f1boz3jmiksro8xfdfar2dp0emm4x9zsaa51d7c040dkmn6ivny5pytiuqo3f8hrzrmxp1imn9qag0bz9qop7t4tsd0dlo5e0li5z6f41jzksvm8tjs1direo3rc43pjn:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"1t0kjt9obhqel1ny5l6k3x47sl9nzk6fwwcz8ocvyf3\",\n      \"description\" : \"Quo voluptas dolorum excepturi eum ullam quae ad. Dolore ratione consequatur a. Et maiores vero qui laborum consequuntur delectus. Quibusdam aspernatur provident dolore.\",\n      \"location\" : \"axiln9ce37crpfsxpska9vncwsy7lgvqoebukzgxdhfm05iymhmb\",\n      \"title\" : \"At commodi suscipit est eum necessitatibus nobis.\"\n    },\n    \"role\" : \"d6tnoc6l9opuu9dnbyj6wfd4548\",\n    \"members\" : [ \"wasg7ua2ij2vu5wrw0ufkqhyl\", \"5vp5bybxm53mr9wp47nmtaaogdb0hi682a21t4cq3h50fega0zc6nhkj7ut6z4sganl2zw44rg4o1n1uom3t8fdta48t2kulw90czjsnzhu2t651pkan3uazg6qbwk5a1\", \"k3xot9293yv1474myxz5b95wyc5cdurea229xacr0xxfml4zykh6vqeax2l0nqelkx7e2dk4ll12p1rsbhfw1smcqeq0co6huh9bmy1ssfkr1isoasfehaennqf\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7hwnrxu4qe5a82h2n5blqg6qzxgqirr3xmmnklxlswgm51l5ev8eedxlxtozgw8y6239gkfsn2z9lkww66buayfky2w5nanay54dhdzh3k0f5rnb8pj2vte09pibs73vviqm1auwj2t7jr2805e5fll8faf6hm\",\n      \"description\" : \"Est minus qui eaque nihil natus quaerat perspiciatis. Occaecati est repudiandae quis iure dolor fuga. Doloremque magni quisquam accusantium fugit dolor. Cupiditate vel sapiente repudiandae temporibus \",\n      \"location\" : \"yh3z1axu91qtix7af600e4z0tec09jwpxtjd6j5lhxol5u0ismvtd0s6pjz8004g96mpbanzyrup9bo54pnil7lhe8q5p1xtzw1cfigw74p02jf1coew4uid7ly7qw4ka8cm8pmc\",\n      \"title\" : \"Culpa iure similique repellat nemo nisi.\"\n    },\n    \"role\" : \"f500ka09nvpn2mgxpdi8\",\n    \"members\" : [ \"s2fq4suux7o7h9y\", \"067etke9i83v6gnnh6yxmzqyrhta9bukvfrtocndxdzo1z91ff4uuwkrtg70a96ahk696qv9bw3f59gs2a25vdci0v2xxldu2q1y34sgh0nw488jl4zcl8ie52p3e3odk5k7ytovda477qpi4kopg4ikf4mwc7lyhc2apdxt59m4ihvmgvsiblc76yp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hp1hlq6ukrrzn01v85rr4zg9zq5bva0\",\n      \"description\" : \"Rem hic rerum. Fugiat minima molestias molestiae. Dolores vel quaerat ipsam magnam ut. Quod voluptate ipsam explicabo optio in similique. Quo ea voluptate sunt beatae unde et.\",\n      \"location\" : \"a7b36455arfftb1vzoqolji5k3blwqpe4eiyg6fwj3h8nwwqxtarmtfzcvkb67rxd7nuc8pnb0b4ipxskr27p4wfhhwa0mg13v3hcylsm44b77zv3qanu1rbblkfeotr86hjcbd0k1diqu09bvvrvkp0vf2oblemyk275423q11zjlubys0juga\",\n      \"title\" : \"Enim error porro.\"\n    },\n    \"role\" : \"cd4w1jbhss3wkvjw\",\n    \"members\" : [ \"7o4mtqxl32t8uexmmriqqsh97kpgmsufozassc1ajmdyckk3f8cusmuh3e316ig73\" ]\n  } ],\n  \"etag\" : \"dolor\",\n  \"version\" : 2031259504\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "976c4339-e384-4afc-bee7-f5bfa8d5c12f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.578244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6184797-41ac-4446-b840-1e63c3ce79cc",
    "name" : "Creates an instance and begins preparing it to begin serving. The returned long-...",
    "request" : {
      "urlPath" : "/v1/uwlgp9bqexrxia1v1yjb1ixxpwv4loc8ijvtxgmel5xiqi6gu5zec1x4wspsal5uh06ycdvuxf552x7j24h6gc6e293f5qrvltcjdfouyjehiuvfjledsu0r46opm0z4yk45ez88du0z9ewyfhtzhkaac39fo7l5mzn71syqsa02jskqphmevqy48o5csul1a0/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Aja Schaefer\",\n  \"error\" : {\n    \"code\" : 416655499,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quo voluptates odit sunt. Officiis pariatur velit qui enim voluptates. Qui ipsum pariatur. Et non laborum saepe quam et vitae sed.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6184797-41ac-4446-b840-1e63c3ce79cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.577703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f6e744e0-6f19-4f2f-81fd-6de753a77d45",
    "name" : "Lists all instances in the given project.",
    "request" : {
      "urlPath" : "/v1/gkkbichxtgxectlt/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"hrnwhew7641apx3yzyor6bi5przezm7ztnauahq7x55bb1zr6f0mhiltd56jqfnk0qcq10jrsdsmbr51m58j92b78ha5iej9ng796v5pwqtfjh4a8tnuk46dq021qs6jlqblldvgkryhq48g7tmowrgutxnek1p0af6iqvp0kl0g7kqp40dk7\" ],\n  \"instances\" : [ {\n    \"endpointUris\" : [ \"mtynx1lrk9a6syaaek9bsa0vzxsdvu5j432xihq5jt89hvsx7xr7t9legwumv3qehbussdti0xnadg2flqubqmzm45zc8ttcyqmlpk2x50fm8dnw2b4q3j1lvzjbje9yvn2ggpa3i205iufd4xjap6n1t\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-10-24T17:44:49.57496Z\",\n      \"upgradeTime\" : \"2023-02-24T16:02:49.574994Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 284394656,\n    \"createTime\" : \"2022-12-05T15:43:49.575049Z\",\n    \"displayName\" : \"Zelma Reichert\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Waldo Pouros\",\n    \"nodeCount\" : 1060618961,\n    \"updateTime\" : \"2022-04-08T16:07:49.575187Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"config\" : \"i0zra8gfxiehh3gzofzkc1b2ukqxcbck7nvafhd66fcgtb\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"2hfqr7xopyydpeboiha1jmbt5yct90b83f9elnqwl8t5o3f8k8892e56y\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2023-02-16T16:37:49.575261Z\",\n      \"upgradeTime\" : \"2022-09-12T16:13:49.575293Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 1517634957,\n    \"createTime\" : \"2022-07-19T16:19:49.575341Z\",\n    \"displayName\" : \"Haywood Koelpin III\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Dr. Nilsa Ernser\",\n    \"nodeCount\" : 820996362,\n    \"updateTime\" : \"2023-01-02T14:47:49.575468Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"oqj41h1objt4dg9yogotmf6ooozwzf81ys4cng0cjifyo71oim3h14nnfx9r2sbyd5aegnbz2qiwbqxp3f1muydrm8vcmbhlldl3leapqujh6z136dukfzs\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"8r1mh02pkmxb5ctrmmhfxe4udh4fkx1a7ce6fnz2vta08y7c8wzdfhk3wfb5ryvx98ajhj7377isz2q2ru9mirtl1yi78y7jay35zbhb2o2kzownf979jr288fzco2wiuujbglf2y9hjccxxk8tjaz44d5pxmrvjxdh\", \"hsbh067hlwzoit4qt1323jjjrdbvt82l4r35wndaqxc5eon5yptq9hiubyv3lr2gt6hz37mcr3gciixh8rrbh76khi78va721gw0d5\", \"sjdjzjj74hqr66vcqxs4y2gp3uv9e609tafmq6zq2a1ksb70vvlui9azcjj9l6cjo8k4l683ig7cbltmojaphkzqtgg7y3w5o3qagb5r5cwag5xl9yz7atxojoytb302mrzg4aj3bt0553he\", \"1vb1v89anc8cc6ulxw5w2c70b3iy125ok07wvgm5gjxxn8reqdnirj7vme\", \"foufyh6pgy2x3pd867h2h6gai7bebxgbdiurmvjrjc504qmik1kjjuttc647xenr4t4p4c4hjxo3orpk7zicbk83kh2l93zh6jp7p2z2s4be77ezxd9fidb1j\", \"8t4a6tvqk5n\", \"f78r5t8s9ffq9c891\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-04-22T17:33:49.57557Z\",\n      \"upgradeTime\" : \"2022-03-16T16:02:49.575603Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 526003003,\n    \"createTime\" : \"2022-06-07T14:38:49.575649Z\",\n    \"displayName\" : \"Ms. Asuncion Denesik\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Dante Metz\",\n    \"nodeCount\" : 1736687676,\n    \"updateTime\" : \"2022-08-23T14:51:49.575776Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"h219uukrhq76cqvblfks2o8b53bexq41vlzgukefyefx06h35z3usjqo2l2h53hvl3g7k6fv8onfunytilvmyp1fl2vd2lrg22scrdh6uu3fb5mbc25n8604zbkc0lao2loh0wt2wlomvpp1ns8ttxy7iay1ryhr9g3uv8f1e61q\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"ptjsqsvwh16nu2kxlx9w2cq9g51fbf5f9w0h9f8yiihzyl2dat4kj4grfiglilwytmbrstddsfl7gfk3leh3e8oby8m\", \"fvjgq4zsiy0bjha868vzxrhkc90v8mp2zx9uhv95e72q0fwu7p0tzk0t7acbpmr6afz6sjmctqmws7szolgoh0hzccx0tzwm42vo9ov2dfo9r5087kc2\", \"m3wx0opsbf4up9u38ddgyne7pn14sebsny0bbbrhzfbayz4ynd2ji16uiw4mcnhda83dahaf16eekaj6edxpo\", \"7h8vu9n2i2nhjjv5r3be11p785gmbkhvh5x0m29xxmutow85miy7rl24bw\", \"2dhwngcx5qwkdxs8xedavbwwk8hom8xhsu0h2dkw1uhc8hmy2v69cukese58sh3lc7wvu0l6hq9uhbmh70yyxpwxwapx6de4uu1\", \"czc0i53ttp1aggxocrxa0jlugaj61a2on6si53glape1dbyucjzq3v0f756w2ut81k9s8i1fj9fc3ko6hc377q97kjz993fmxp2xzj3b0xu31gz2qy6p0t1syrfouo1lpyz\", \"sk8cc9oxzbw8pw3z8ebmjrg5i3tf14s0qccqx69bcejsw7u1jyicylk8jbub5ktqguchxacqy02m6hprovfin4cwjdehu6j\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-06-10T18:02:49.57588Z\",\n      \"upgradeTime\" : \"2023-01-20T16:47:49.57591Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 136938941,\n    \"createTime\" : \"2022-04-11T14:35:49.575956Z\",\n    \"displayName\" : \"Rudolph Nikolaus\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Weldon Thompson\",\n    \"nodeCount\" : 1983258256,\n    \"updateTime\" : \"2022-12-14T16:20:49.57608Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"k14zh0kml4s6j\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"rqvhvybcq0yjdb78ahr3s4c2vvk9eq211xremm27k9b7iy6eu5o595znn4ihxgtcb8mupdtr\", \"oqrzt91cgocnb1xf9d2fwjqzd6bi20n1bn1c6j50kbttq23j66t9b8flsu3vvz7wvp0n0pddznm67gvsemxjab32fyjyhc30s3vaghijcclfnd98h3kmwa2ieeai8m4p5hrqut7iyz1wp6sxrrxmmr3ilhwcbbkd4g6u17qjb378ukytfi8ufw\", \"0t4pwj0ffep5ouh8amlc9uga0zgqdzm6qrkv1sk6j2vkt7njfnrfem6xaz3ntoz2f78azrbrfmuxlkxd6cun7qb0av0uei6ftqovkaca81mx0piqadnr04t89yohlz6u5zgij8svmvbseeuzcrjey6ccqm60clo1u77\", \"ys50gamx9k8z4fwgujbtj3v5xt1q4ksr1ii6pxtq5a19kquxwc7xyzpfahik32xopwu4ozbuc1uk6no2v4c6t84i0wodepg6q24q4v0ci\", \"ti5szo31fteqd70lou3k8\", \"8lo4v7hoj0qgx9p7lzxybh70eh6409ur4o206aillg4c8wmur18ri00surwv331y4eazeh0yx1jfg13c2wadjpp0ubvgycx1gawk7altm1u3rkjlkv8k8uqshc6n5m5wsd6hwsfu0gnvzdd8duljvyk2s7xc80vnheb5qrw404ayp5z13bxoh1xod4uf6u6r66hv\", \"lcd245d3215mfhu7w6z3rxurdxgfhxaq92dopyus0zv39vixbdbbq2y7ayvpkqu6vzbbwo2bek16cjyfrtk6nij76pwi06k8liwenr1yo1ivcae239iz11\", \"i3r7c2q0x29l6u777lsxlttyh5a38jpsb\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-12-03T16:36:49.57619Z\",\n      \"upgradeTime\" : \"2022-06-22T17:55:49.576221Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 551042275,\n    \"createTime\" : \"2022-03-31T15:43:49.576265Z\",\n    \"displayName\" : \"Francis Dickens\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Miss Gerri Marquardt\",\n    \"nodeCount\" : 1441265796,\n    \"updateTime\" : \"2022-10-05T16:45:49.576386Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"yn1k4bkqfbus57d3k6dahsaiuk8xcdxu0\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"pk7rs38be7npcus95am8dd1bxlayqmqhcitbk0iusubrfihn09b7nw5oyrpqkbrgs24a6i5feghe05ib50e2o2y1jek0po5v49xfwd352im4rpmapsazozuejggsi1v7kro4ayflbgia3wx3bx0cvoa2ie0erenm18cn\", \"i52hoi09wxlknsr7ul8e3v3i95f5toheeh1twts9d1ukwg7w84ka9dj9m0j6u0v7tcm3w0y7a6qvnwsl1sgvdt34riwc8axxy6u7ya4dlqlaj1slmxsok7l1aaf0t73hlu4msknl8qg4efymoztp2i6mmw3t1u93u2svulnk6zq5ykd62qinu26rz\", \"wg4mnukw9wwccz35hbd6t8qwnluse5191q6r87j4lr811cx9uzyd2dmimuf3gqrwvtjiexpu4j8gzrfcqdhr1ov8xuo3inucfj5xkrydxo29e6d1fk6cz2lmm9omcm38k9ih2xxqyd5cnnalj9t4rmbvnavetmh4sbwq9w7wh819hqrb3tu364un2u\", \"8xtq8o5mizxm9tgcgwqnazq7ggrg232er\", \"ht8exdrtvvqhdhh0qiigwqd93vy27zwrswk9l6f963hgrijwm6wzo2ocdxacb\", \"6heps07nlaylrcy0is51gqajrkkk1r2ygkg1400ccdfld5nbzwkzrmvreiz3jjj24ityjdhncfzicpgl8t44w5g7buifvrhkny5bqz8a8d7tj2c06a4763q\", \"8aoqth3fwoc0prikvwf9jlcurctb05nbkoxlg7ttl3b107cwgflc7k4583geo8dju43klgg2xrgwdehica51rqbybcsekba2tg69thkbzenty3sovjfy\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-05-25T15:51:49.576491Z\",\n      \"upgradeTime\" : \"2022-12-03T15:04:49.576523Z\",\n      \"expireBehavior\" : \"REMOVE_AFTER_GRACE_PERIOD\"\n    },\n    \"processingUnits\" : 231917564,\n    \"createTime\" : \"2023-02-22T16:06:49.576569Z\",\n    \"displayName\" : \"Simone Leannon\",\n    \"instanceType\" : \"INSTANCE_TYPE_UNSPECIFIED\",\n    \"name\" : \"Mr. Tasha Reilly\",\n    \"nodeCount\" : 1934175119,\n    \"updateTime\" : \"2022-04-28T16:51:49.576697Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"wuku86ci3p62sytesro12g79by57g461eplm5yro5nktldysx60sftzbq11xdpbg721c7la8qt24t0xaa60bvzffjjut4k5y6ns9avbk7nfdmcu0k496u61f06kegme1j6o0qlgiqhvvstx9dina7z\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"81dxffeizl\", \"owz34gtfvz7ttivhnr5aiw6fnmg7upu2hz461dd3rtzz\", \"5oag4qzdkwmhsyobqmjjb2fqjopaow0z33nal2v27g18os9tkrux2pbagobo8v9i\", \"qaxm4pzauk084r94sgt7ydhgzffvjgkry14iiuekfkt8norjled7pgo5z6r46c5d0je4c221bfi4rho62lxc4ier8f1vd326xw6sb1bkyyqqiz2lj52904rlnusf8dv43c5j20halalgqu2\", \"285ljuda26qx3462c9eya7f3nvpnq3rb70ez0nfe9lko7dnflqkzn1kn5re95a269m16n85bv3m2y2dgx2x\", \"dv6iaooxzp9uy9fm37yxgqntylbnvehnp\", \"4ay5vlgh95hho99nfq8fadfgrwev6yivt3lzd6beq4bphakqguas37i8jldzw10n8fq0\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-12-12T16:03:49.576801Z\",\n      \"upgradeTime\" : \"2022-09-02T16:06:49.576833Z\",\n      \"expireBehavior\" : \"FREE_TO_PROVISIONED\"\n    },\n    \"processingUnits\" : 677960753,\n    \"createTime\" : \"2022-09-20T14:23:49.576881Z\",\n    \"displayName\" : \"Celia O'Reilly\",\n    \"instanceType\" : \"PROVISIONED\",\n    \"name\" : \"Maurine Okuneva\",\n    \"nodeCount\" : 909122493,\n    \"updateTime\" : \"2022-11-03T16:04:49.577009Z\",\n    \"state\" : \"READY\",\n    \"config\" : \"9fe53hmlz41wtvo62n5fdbc74d3bhs8z6dvtssbv1p615ocygnql2fjjb388qhe8chw1z3xfdpjgg7u17ws9y29hhd3dflgr6zlaezry6j1nc7w4l4gjinsau5ak4tw3xv6e7b50tx18u0cuit2j0ne\",\n    \"labels\" : { }\n  }, {\n    \"endpointUris\" : [ \"0ov5dh6wmnqakx8wubhw48wwg4y1ov50et27ul6xyps7cs5y4q1i9deujtnfnvjki3gu3f7kl9evdpmky4mwbxgpqlvq777pcuax8vjfxn5e7xxu42x8zyvwt2ybv33h27zatxphhsc1a78o5byrey1158rd6ttqetshxs59\", \"7lcwp11o48w7dpc0nnsssalu0gklck6yfdmtkh7wc2sygjcjrxmpw0yk61q0j103ff9y674wyr5e0oxvoyig0zr9313yk30w7p0k2rfe0p7kv4t2sflmt1qgjengatq1798ylwisz9bz6qyya6edfa2azbjlj8mdr184njz\", \"zef711skcmx0yhb25p0ckydy5d7zgya8dwudrp2ntcy8788e6bvnsd97e4oo408ql07bpnt2se7\", \"d6tsvwjcqp5htlh3hgkfohsgfgnr7crd1d1x7ypbuvn83tc4rmg7upgb4cea2uco1betmdwbmd0xc5qn\", \"nxq5lkzg2aa6u1k3jwxt64jr1gcw0jdtun50fymsk0boj3tbyr7anyvmqcnab968qg0ch475l7pl927ydro6byfr4vlftypswlv5fb8ol2ckdn4vci6h\", \"k0b2k68qiqhkdrf0yy17a0mhqx6jp1d530lirii79as1nun2yhwk2oca4qmgbie267p0b89tmy1y6zzf5kip846ztsyrk8djx0mqwfbx5p2s2a96zpjcsjoflpvn5tkpdsty2b2mwb0tpc3cetkfc5ya171eabtr5r15goz1\", \"vcukl4vk4mxg6wztev4z4r3lo46hhgxhmx9bsis43ajir66wrl5zlq5e6kzmx1lw7x2dlbb1xk3rwv1phhajo1vydw\" ],\n    \"freeInstanceMetadata\" : {\n      \"expireTime\" : \"2022-07-26T16:04:49.57712Z\",\n      \"upgradeTime\" : \"2022-04-02T16:53:49.577153Z\",\n      \"expireBehavior\" : \"EXPIRE_BEHAVIOR_UNSPECIFIED\"\n    },\n    \"processingUnits\" : 827083564,\n    \"createTime\" : \"2022-11-10T15:25:49.577197Z\",\n    \"displayName\" : \"Louis Wyman I\",\n    \"instanceType\" : \"FREE_INSTANCE\",\n    \"name\" : \"Lupe Johnson\",\n    \"nodeCount\" : 415552238,\n    \"updateTime\" : \"2023-01-22T17:50:49.577317Z\",\n    \"state\" : \"CREATING\",\n    \"config\" : \"5pvngo8g52d025x6dbyshbw0m6az7ruio74rh7jcujgzpbwyy9smmrwczwlc724ycqpvpn4s0e4n87ufiqdajt0ac2jsyls14q2gw5ptgbho32g2jigl0zx7vf1014pg0r8xhs0\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"x0292zf8q6apbaea1egdqb5qbar1df0y2rqb9w9tlnbnucxlajwhq0zg5skrrazkb9v94o8t5f9b7oerglnbx1sz3tipvabpwhlwj744xzeoxhiikyxna21fzybersjrxk0vq1fu2k5b4tsxu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6e744e0-6f19-4f2f-81fd-6de753a77d45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.577487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.list",
          "schema" : {
            "description" : "The response for ListInstances.",
            "properties" : {
              "instances" : {
                "description" : "The list of requested instances.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstances call to fetch more of the matching instances.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "The list of unreachable instances. It includes the names of instances whose metadata could not be retrieved within instance_deadline.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed4af5e4-1c10-45c4-9699-d48d5bd6d28d",
    "name" : "Creates an instance config and begins preparing it to be used. The returned long...",
    "request" : {
      "urlPath" : "/v1/stpbusedstuz0xo840uye8xvzsu10wx166twgxuieuvkxpwpludmsxe0lfv35jjxbhcnn61wgd8wr7tl72xycc9l1qtnlwfxj5lexjcgz29d206oreiw2nkhsqdpxbirn5a8gre2j/instanceConfigs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Myles Morissette\",\n  \"error\" : {\n    \"code\" : 160226457,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Autem fugiat dolorum vel aut. Odio voluptas accusamus porro soluta pariatur provident. Sint sit veniam pariatur et omnis aspernatur praesentium. Delectus velit consequatur molestiae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed4af5e4-1c10-45c4-9699-d48d5bd6d28d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.574865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d3e433da-2557-46a5-91d8-3cdf609cf8a9",
    "name" : "Lists the supported instance configurations for a given project.",
    "request" : {
      "urlPath" : "/v1/8b4a2h958s2byfbdtb4rwaiks8wll28hsclz7qqczfx1ul7esxo9opbw91cduwa3zgh7yto73qrk87cypy0w8x3htulron78fp22cbnl07cercno00lks6q5vljj7787v46wwby2ubx15s321dl5xefth87t/instanceConfigs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"fjyvseua1ih6ioxjz8eo01vivgm7tpj2ie1kbzku6djcdi22pz0niqu68f8j85a7pdngy86zontju97jl8bov8ze017aj4ykbpkr50rq3nbmnk4ee8mylk52ef1espxjkuj5wwrfmgpl6wa457iuik0xb5otp426ts9iv3uptrmk6wv9\",\n  \"instanceConfigs\" : [ {\n    \"freeInstanceAvailability\" : \"DISABLED\",\n    \"displayName\" : \"Waldo Labadie\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"tjnq9juv0gu431tghs47j8lp80sfhzyzk7jo6f26bvzwab6jyke06c6vwp3r8oy1o8usby90xyewybaebrr52b2ese9cmunaenxsc75xhqsvj7tuba9vky4ylruvr8pdtqjh9x4dkx4e95bpewde40tnn8lrbjtm5fhmtdh81m8lfetdt93huradoun4dbl\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"2dbg3qr722rz3547toxhtde6h2c3w0o82omukrvl2sgyxogcsqwmu1x6nl6adit3hpxb7mrwj7lby63v1yxhgkexs1chnp0ixy511bl39ls03nq70uwzrvfjwpxurlkh1t5ryh2o0wtn3axhucy3jyt73tu7d1z4l4euxtapg1bbj04e1u2hz84mtluww\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"djqjulpfmsd9xdo46um12qovosb32qr0p23yjzbk97ds10aoqecqb81zn3julwsth4eir60g4arkxabrb6idt5v17qtov17co4knrqgojnldh94jo7gwcteo6vc68j35tyc0nzej7lq12qdur8vpxblsqq8464a0uvela9fp6x6echyu7maov9d1tmid4ai\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"3yufqx6i27p1ru04hw7wge9h28mq2dg8qrjul5aki1cypt1h3l3pywoqy949jh4p56e\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"2vvgvfm90brdu5tnfngg1b5bx214gr2ngpjiet7u15mrt1cc1hb5th8nk9t900q6bvew8wddj6ltm4x6f9ur3i95g7m5fa1k0q2lzofj1benwdol8z58zi\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"name\" : \"Tyron Farrell\",\n    \"reconciling\" : true,\n    \"etag\" : \"eaque\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"q6l2hmah1y4ubhl2usturza5vz4ueuvomm\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"pubza7a56f3w4ondch0gtdjn71dl\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"yi9z6k3qcspv716822td4vkc976rmsn72yqq8g28sa2nh4yihgamdb6ltgon02bapt991xod93a1zpu4l9\", \"jfe7phwzazgb83oa6vr4jqn577oiviku6tsorw\", \"0hx1czeem76b0t37xyj11js6m5padkxwlsvpqp33amv\", \"1uu54y11pt7i51l4gh3z5qylz2am7m\", \"hcsv1x63f4lbjy4egpo\", \"inp4xe4idbu\" ],\n    \"baseConfig\" : \"3nxfvqaynbx7ooc6wq69pgow6up1n44tkecmdukil8dppz9lxlirezoe3v46ppyn1hlw6bb3xvodifl4czm1s33sa7ojee8nfttm7kbqqyjwza6x\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Hubert Bechtelar\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"382hu7tje1vi5zskcj57kkks39b1ufr7d2czj04zl1vim7bgiqw70092dmx07emenpibnrlhlfqw2dsveycrhm6cxlizbki2m1hoj6np3is9e1f9wl1ybfy7dd4vovl3dwg6tiyieuy9h\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"w2r06v3hml93kauo682bj0rxieb8943ykgkzkt0ko66orlcx23301p9vy1v0zb0yq2qnerwp4otj0ex\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ybo5wagwdk9fxdhpfr23o6fghp9tuu2stw1dt6wt1hcb4zvtum00lr84zs06hqgll1nvw689yi9nwhaioumtgzzyp989u8gr6t15j2j1l4wu7oto1k2njgbtq\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"gont0rdwaadmfu3wxq9uuw8hz00raxjveeta0p07soz4qga5vf97wxdxlzv7glgxpvvybnzn0p8e13dw9ghnb1fd1os78lr2qe3o7e5b3aurf0tlmars3zezxhwe1w9vpj3hid341dc3orm4czlmul8h6cp5njxd2ix\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Eleanora Skiles MD\",\n    \"reconciling\" : false,\n    \"etag\" : \"dolor\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"fh3xq4y2uf6loq2k09yea6s5ejubulg9awgire6oe09x1hgp4uidyr74x6ruoishk4rgivk09ftf4ayrozanpkt1are0y1ovoyuvzukxs54buby8dbksf1amc3efc1pozh7fkesvf6r82j4vrbq0sazfgdd86mdqgyfba96m9h6436cclel\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"6qvlyolxit3w5p8t466b4mu2w5imuh6kpkzcu39kfh42ko25lycud1u2mbxd1w21lp1hkzjl7fwnrh1h0zn5yyemrp95azaohotnxjapzm9iiryzij6443yy46bp0x67myk39hvihi5wlbqhntui3ukegma5gc2gvlu4ofcm4b\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"r7g48jwzeguhmrijqj9ojp8j86gvsnjbcjqs30eqq7kawc9rzzjpy0wf8a55h26t70tjby4g\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"u8on4z962sj3234wnf1d8\", \"tdvoewa3jm4ayw3p3xql65pe5nrz6aib0x6tfyqtykcm5ag908903iw18wq2b0cd9810kfli2fiixxt6kc6pdxstnh0bats1xaaqkp3vcymm\", \"qqc42bu2u60vow08tmkcayqwtsm96nylm5n8liqr4kvs6vtros4choxt7s7dobnp54pusm2bzvvj5ps4tk\", \"ueby87q44lyksbdvfww5wdrqlker8dhalac7xn07yndkfjxvq4y2pxc47v26h0fieblcbqqa34nsbi64u8zotp3dmqu0qd7d5vipagzup0mhql392p\", \"ogpi3qdq4cwf3o0ykqe53uj56647nb03qzg1n7b5fzv7l3kd53c4znpxpj8jgirveq6dmhtjn0mtuwq30pb6pqq9no2cnly0dd2bjk5012cmku7gd\", \"14icunfo0wigvmeia2l8\" ],\n    \"baseConfig\" : \"7fwu43jt4a253trxqt1k889x7xkftt5vi7tzh01b3hn38r2j1tsce5xwyw21h04rf7ov2ac9mqj6tbt7cbvlrhve9z5m176n50crgi3nj76m76vsn46law4addlujdfqlmmjp2iuu7oyf6muy3xmfnssiuic58o1foj3vzipp017k8uiwp35q4dp3889a7dnmr\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"QUOTA_EXCEEDED\",\n    \"displayName\" : \"Lucius Nitzsche\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"rnv97zqjgpao8c8khnkdgrpwdk7fc8ciu5bw04p6uatfsok8s3eivx8mtkndow19d58dz7ck0armaqcfb33c2qhljgv1dtxp6p20v7bhf3i7ra590dvlpn70rrbxyyovey9dxdyntysv\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"6ss03azethdfwttk9vibphpeq9wyt6ce\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"g58d0arxmp45zngzceqb62lvtfhlyugvnsx23iy3m4qgguf31we0mlqpns7g8jfxby754zsvjbir3eh9or2jkgincdu4qgsoqmicp930yxwhc4ytau6mdyukh9t9b5ub3ln5bkha6v\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"8h5piohfpgnxn8exto5b5uebmypyzw5k3cyc06f25au32rv7ck6fza\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"knbap7d4y9tg4w8g4kafw1121o7thwtzml8udj5ee6u2dzg6ee8nqyucub0hdv6z1hrkzyxhk1xq9a4crcd7wt9g2z721c9pdqc269efffbcybbwqt3yd5rlhfuj1s2rpsbnqsv94y48vs20p1gs902d\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"aaq7731pp2wmlyg4ullz0u4ahxjp3u6nyhacvopvbgntnn0hg8m5uw5ninliuflsitb0p8k9toa14un48aqdqh676ijqvxyivy3pe4ikxyzm9ozxybtnqe5auw8ix05b7skeq3e3halh6gmzmbxg2nc4x7xghjygsj63smikn8dxa3is0ql3bjp039dqaydg\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"4r8apc8dwa4q4u9jwply2yx0a3d66mzgg\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"6h7zdg3mv2htizeowbt4rkkq2qxwlx3gk403x9fh657rmuiujyk4980lc7qx7v3c2la76doaffiff3ridqpmezyhpm48y8bm4o38oixa1ra4bdyzxdombfv2phe3g1quz5cc\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"name\" : \"Boyd Medhurst\",\n    \"reconciling\" : true,\n    \"etag\" : \"laborum\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"ia3kn35immmh7hfyha60w4y8a19iustfz3ygnaruzi9tcdds4ft6fudfab8wp66y90motwdgi3ecr9l8bl30htzlx4zt9hilx56mdwsjghkj8d3i0uez3xwm59pb56rs5f72qk03jdf9os2zcekmkt0a\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"4emofxt8t26c39tuh71luf4xu7yyw6v1inb0bos1zq8ligkneo003twwrgt\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"jvl0nqcl3ykhnhza4jcx1s9k6zo0gmftoztjq2fusy4uzy9gak40i4b3\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"iyxpwrnhw9d6cplipprddhsfx4p3dqfjjuwn2t\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"o5ieh3lt0vj22cjmv84gddftc5fyn8kn4xs2a8thg3tp7vvtoqdzgzfep7cs93umc78eb17p8jxj48qgnpyd8hxwst\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"0e6f2g56ca4syuzwti6hb61ykpwdogg1gfd6lpn9wnw8sswfr4cujfddyycz0p7al376sfhsm8o7opxofrr7uku67cmt1jw7634cb4f481dxu9kpp47gcp590uubca5q6mws0e90jbq9porsyu8kkeui3592ju097s8l4yqzkafodafoc2zouapyl3dqur230avxa\", \"8qwwudumohuck2ywbc2yn24a7kns1dchuewdx4b17dlx8i26e4o3uhdnryo5vc9sqzdgq7xdq2effkhjkn5ya26g0wy9ah3ggqgsavtsf6l6a6v4j62zzou56ngf\", \"crg9qvdgdvx1vsxevtqjozymxssmnb8hnniayh9hnlge5c9s74eucplgz9nlgduul65rhmtemqxku\", \"c85jbtsrd1d3a8cgn3d3bj6m7z3kska00xo0plr9uzkvkpuwk6ge0unsb1euz7t1izveh3g8ucepw4iepwrzsl4647ksaccaj74du8mpaw41un0vzav4z08i3h0qpdznb8gcsqhbx22\" ],\n    \"baseConfig\" : \"x71y43edmrwut2puuzxdufpacwbc1g6wf4ncgdu8v2fwdn0mlmrmr7ykzeb8q2zxe1z5i452p5xk4wzt0qi9nfkyifc4vyes2i9fhm3iigb09b70u4dtn7jpergqmii07uek7yw5y9clam6j4nl0aozcad87hkd6y6q1uokejetb139o9\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"DISABLED\",\n    \"displayName\" : \"Dorthy Koepp\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"c3cysf5cmiiac2ku5hzj5ymmbtjq0i3ump51l6uarh0u6140l7rfc4xzanhimu5160t8j1c2h\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"6tvw9qide50tmkv94s0lhebr31tla8q3nyk91rj56tmy6bj4rnqyhziyjjdhkticj9wvw85pntmhbvagh\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"46j7o0j7ivjhuf6o5w3y7soqhvlmijtny1pvgawbxv2n24s8inm1e2sh2ip4dv28vpb8bhvufi4vyoqwkreiabddivruw3a8bxaehdu8htu\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"jc27invli7pu9082gbr54efdixxwrq1vo6o1aohhp2cnnovpkh77hwr6ub8y2j1vrpioappbo5cp2lq73tw85dcacse7v8gs7v8w6zsb9c9ab3h4ivo8zga623wcccchmhyln9pkq5491q3z2ymvwdwh2u81cgdjbntyw21y1mf64j9g1nigrtjsiz83ofw5\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"yw9nefi6euf7zem9ht2aq8rjntv6rqttn7er46dxhigj8ltoog74dhl6nzlburvyja155sfxr7862hj97oxr9sgvp44tzpykaxq11fzdhxzwrblwajq2qiaosw40m5v9zogocuey\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"name\" : \"Mrs. Wendell Goyette\",\n    \"reconciling\" : true,\n    \"etag\" : \"molestias\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"fx3ikhouk7gb9ktzr1bpg21ytfjdbaxhrgkubd3jvo6qts2b6s0c1h1ydpr0ytupt41028c4kjke9njbvibnjkhcwmwp0546s6qde10rokbxa8n3pkzmc7oy1t9n5d31ghjstzxe646rwx2v958aqadu1vsfqzrz29z6gnl7qqq1rodb9hgnj09\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"m3lqi7bbz517ozhok4d1hx7s6ul82spcew6mei5kkzi9e9l2og637ujo9typ55u9ylp042jgffjuc55fqvotindhw38y3i4zfq3\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"pll60sbo7qixxlcavblabj4q1ir2pb3twvuw0b20kcrs4pqmj5x93wzw2s10f0i3v5lle6pxpuftr2o3\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"mc7io\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"h9wwockibjsbrnw9wp6kuntnxq61szt922ivtxuuwi56gy3fsqwcvbxy46p2cr8iafn9c2t69rr59zod24jdg29ccl2xpy039wke8zyxngl50do8ktnc1z\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"tr7ljau5vb9f8r3kh6hd3h0ihcho9k5ds0qf9rvhja0quc5wj8dscu0morp7naav78\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"9ztaznftx31s34fypncc0p629hg7pbsgclmjbmaxidujygoqp14785tou3a4nlju\", \"ttbnsxs422u7w0chjj27zez6pvxnn0sa5v0gijr5uevsdfomg1jhtrcd5cy21bttd3bx3kcefxcy337s8w2eiyxm13x30gysyq5mwhud2omo2btwfslwbttidza0a812br78nk9jkbfgpfpp54adqitw9qh4buw7i\", \"r3jld3yyi8xn6kbs414yh6wnuz51kekakgv13wbcd2t99tsc1n2zk8ul0nuxnsx2xt9gho36xt0z8uxdczrkc05csanik2f0nxz1d1vv7lspcgydh8vrazqcx7zxbq54tli25m683tvfz3sqereex78ihnoe8xkngoixsycjtmz0bwnbpscux9kp1ex1r0\", \"kk12ejf4pyg5tv2mz95ckdv8wzg6qbm5ei91afk0euevi858ymdmn4n1hboo57u94fznpm5j4em101kjgwtgbppji5pfqq9bzn1bvuylob0uqzv6xgv7\", \"wvtdm6y7a1p77ggg2xk4deua64hgw1jd1ou2v4dm8irst8l2773gidx6weoyzsxirhb61okzo5dd53fe00n8vknwbi7yq5ef2205dclxu8l1szwpznyh79f6d6xnhvurqomy\", \"3gtw7t1nv7fk3tdey622b5tv6338bvnl1ivywmvkxtq6nqg5nsgsvik0kc7oe5zdr225rureomzx2430slyy12jnmlf55hd9eejumlfjxtn47balvqbnj3bojf9iwrpzbsnobd48syf4p7smx65782f31cn34g6h3y\", \"21qm1c14perk0e6dcmjdwepz36gg4ccx6dqrkchvakthg6l6zmo9hcgrcwytpfdjgx9g5n4hlrt81c59dsjwx37mrd8zwlopgppm18tbguepg68fjrhyvd0p6gtgvakb6xhtuk5g5f4ckfn3q0g7gdtkbixmpmnqd0pxnlsu1cn1q0y\", \"gl52ya431gbzdywr5ynbo2kz91nmyk\" ],\n    \"baseConfig\" : \"ctmge3ku1xcfel4r9i8kbamq6bbzaa7pfuv2pba7s3xqqr5tynvc6ryelx95vkzgfkh1ctv4fv4f17ha1\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"AVAILABLE\",\n    \"displayName\" : \"Dr. Scotty Reilly\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"xjgd2c0iddbmvb8kmfuhvcuxkujvvz6ze2wk0pjty8i5xh9ionyfhtpif3o5z9i9i5t1ffotakaa07bv65c3ml1mw4fejh9e77u2zm82t93e5v3bg9cixaa2q2voup\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"o5hxzh3bqyhxdz32a\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"5wb0u4767xtbg2nr3s38jpiw6s8ns4l52fh3tto5fax9dgk\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"yvr9l9uv9n2uqhu19axgcuk9s\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"name\" : \"Granville Hilpert V\",\n    \"reconciling\" : false,\n    \"etag\" : \"ipsam\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"lman51cm76yt5h9saxdcqyv86k5zjp8e290arnd0n1xp9lymrq2xv6mf8h5do02lhpldfevsm2jebbarpq70rygh9jzegsgxrfgewc6pc6q5310r0zeamqimry70x83pbenn683kbo\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"xyuekknuv5no31ra4b1mwpnughpnp6xsqelswpd8emzg81xegc6cyzurxcx0dtqb7150be2\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"yo15zh5f0jz2q5sj2lpd9g4yvwq3n1skzyi91cbmigcii9g0epxnpoenewptnl4rb2re4yg5fkf\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"4ylrxolfx4iiq6keqxzvb8vulv8prxm595i7zelrktneeskcl63ujegue3o9qpchv3r6za0bw7cp0c1ru31ouo7svmejwi18gtipqv7jycxq73jvauwv32fzmoj1eo57iuhfenfj4zy2opm1jyc4rki588ugv7b44\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"kfje4me27ram1e31f69uu1k6dvwhhbfjuwejp1mclfl4ut0fkg2k6kqjrhxj7g3rykcgq6k93pokkl9pqzuuwet92t7pex1gey8iqzaihrrxrntj82rtvj59omzvt\",\n      \"type\" : \"READ_WRITE\"\n    } ],\n    \"state\" : \"READY\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"pva9gl9rhh925yfbb1ihgldwpzm6jokxgdi8o7ciixznf7z0y1obqpjpeeq5syzzcavdd5mlsovo4atvv9ahf7ldnafupbqc46e5mtp2s3upn7fh3mbsjt3sbwtoal778tat1urdgh7ijz31orvctzd7ecr5jzxt0q8r4\" ],\n    \"baseConfig\" : \"kzz527di2subbcpixcs6fp2cbypqdnsf9rht73\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"DISABLED\",\n    \"displayName\" : \"Anika Jacobson\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"4l6l0zathltqt5k\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"42nlp0iaxwy9ex1v5pqbovfnmao6f60kq5mfhbjh8nan9h9lgof1npzitqcx1euam66dl5mhfdg3p9x8qoi4h7jipkxuqfyfs9q2a59w5f4e0d6fe4olnedxe24lzm43p77bc4ivbzt7twacps\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"name\" : \"Rashad Brakus\",\n    \"reconciling\" : true,\n    \"etag\" : \"sed\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"mhai5mhjhjy0ngbmnb7cml61o6w3zh3l767y9rolz6tdi5rz41sntxvbtr20zdg6luhzss38n1azoe4m3ks1cfig0y8crs7olx0sc0y4yx63okjj3cgemv3wxnzw5iyxezp1awm5vpxk8rzyomjip\",\n      \"type\" : \"WITNESS\"\n    } ],\n    \"state\" : \"CREATING\",\n    \"configType\" : \"TYPE_UNSPECIFIED\",\n    \"leaderOptions\" : [ \"vpaeech\", \"wrtlwimjozcd4gq5fqqbrr0cda5vyrq8dsl3shmvgmo1kycpignz69v7lcrr6sjyowcy3ptad4065jd93fkij3z3\", \"773gedzww5klezq4hrbe4qsh4ikewxmnugnhsz93tusjg6castkc11airs3kopyblfhjyzhjbd02w0wufne\", \"vfpvsqqyv6pc4lk48xd4k0nn5za5vbx8dalbq0naaabo6lphzj287elynj3h6mgo59o0oz6g0uhi7skxibwkl6qxi4yj4ck9r21w78q5lpxkphqxlziheviginairk4xkvo6uirwxlyatt590hsthdw9\", \"x4y10zpirobfjxcahepsyz0fc93a8yd3st9jln6nn1kj28ftavc3j3hxazo1zc2dvtyhg10y4227vgmqpczjf22azkmqnpjbzw0wvjtujnsjqnnu6degmpnq0e8em6iajasrv3z\", \"1gristq3iscy42m6zw128anh7digheryheoz3xv2nzf8pp0lin72jqoqtxtrd\", \"fkqm0riuddq6mdi\", \"f84ze7oioktobhknq27h816fk19kezn1ud1b4sb5ogswcjlup8jtvouhye55q7b0lh355xx858qklr2163hbjs3pbnd1ozq5ug2v52fm3htkyb00rwu5w3iygtpixpr0bfmzofwbgrrvflq49y2o3z6dhb1okb\" ],\n    \"baseConfig\" : \"tv2fitjcxwpuwzp72k1yiwagnwkmx039sufw5wcgm6fwlu0xb2gmry9ml7trnc493ra980cvnv85z3wqsww9d94kark0psz4sfvubxfywfxbhbzbvrc3do0cgx0kgrs519fh535otrhqsc6ln5crf68shotkjf6c5\",\n    \"labels\" : { }\n  }, {\n    \"freeInstanceAvailability\" : \"UNSUPPORTED\",\n    \"displayName\" : \"Sherika Howell III\",\n    \"replicas\" : [ {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"9u6xvsnxlwuoqh3mtb3adqa13c5zgz3s1inopov0z2rpiunnm03jnej2wksbepmcwybc1o50c284zdj3z75bs38jmj6a4e3w51sxgw6ipivt6hyxow5uobpnpd\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"rmz27ysg82m8hbv5eonx7dw2blfbq05d7e9q9seb4hxdg21a3qy2p44iyyl9r88gdnu871mgqi8uk3583jznkvdytwfte0w2wqfxgjowjpgax3hyigept56b863jhd95g6cp66k867hmr28jdsm387f6sp52bfja6r9n0wna03etd\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"9uwpz8mo51rokjdpf19w8\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"wfmyjkratdavg3xr44xlt23l1nkdlxcbcjkik3x92\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    } ],\n    \"name\" : \"Eunice Spencer Jr.\",\n    \"reconciling\" : true,\n    \"etag\" : \"maiores\",\n    \"optionalReplicas\" : [ {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"8965lx5xsfrh23no4y758it5yzx96xaoexsh9ndm8qgfawdmnww81r6oufefmnegyrlyrqdltvmevr5gojrk1d209biguze5p2yomu67j\",\n      \"type\" : \"READ_WRITE\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"fz6szr5plhob3933tpfbx24d1z\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"obvo4nouoo76lf9nvlj3lslmbzv1w2urp4c8\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"g55scsu0qj53ahaoimrcbw4oivgem1vai60sgzvftebgeiq1wutpsxvyhj3vere8t4jjy3ddykzi3ps6ttupz01t88tj6w08hpafwfb54u4pyu2eok\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"ycxx4ve4m7ybic90l2mxxnhr4doylxg2v58neukxa3v2i3vum9euz3bxgcjryo77kensw8r0fjqepqn6uyxnk8490ry\",\n      \"type\" : \"READ_ONLY\"\n    }, {\n      \"defaultLeaderLocation\" : false,\n      \"location\" : \"huledyz6jirattvbitdnjgkx039k6ifohtttpojv7mgf1dmocqswhvuqi3mpw4skuxfmufs83v4u7r673gnx2lmhjlcr6n9\",\n      \"type\" : \"WITNESS\"\n    }, {\n      \"defaultLeaderLocation\" : true,\n      \"location\" : \"ho0jmhxsf92wkrij72d7e2wruk0kv3n4nyop6qfrpwwm62574wfg8k673d44s4z0upkf7cpxk6wxauqy2makpfdbucsncoutteoh57\",\n      \"type\" : \"READ_ONLY\"\n    } ],\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"configType\" : \"USER_MANAGED\",\n    \"leaderOptions\" : [ \"agx1yocunulh809genvhiuu5st0apl9v2hlbhlvtcmtykt5oduncnbagm1dkfby2q2hcsycaun0p1m8gqbple8lkel610g8rxvrq\", \"ewaepqgkkgre8m867jhwqomywhan76gtxbuy2il399vghhvcesrt1cffl9duwtl3iwx84zv\", \"gl9zvxm0c1d6by024hs9kqx221ac8z7wladmg6pkogtno14xa454rqkdlzd7meinh93zfjtb06snzpmoo52oyoe1\", \"jxo2pafm5ilip8rsola4ytill\", \"mw6tijq1rrj4gmqztlw10ol6w7jg5k1hzu2jh10ri5tuwipjh98lngj4nnz3jii99xs6lcuyvd5o9zhpsvcbsqv1zjkpw1bl2gbp4kclr2knyvrkqo4rjwh4k2u6r3rsgs17ghc9pkuv9hygtcw5lle1xd9uetbnjsw9cfvlux7z9hfpm204s5l\", \"8usdv96paqtgq7fvu56oaptui83w1vhvv94gwvpwshz8wrfqirdd12axzqyugmu35i4wyzyhynsyxad32c69nvz4mpegsmqbhsmlu5wnv79us8tjjwrg5v3qrspnnw4fsw7f2xba8yuzgmk\" ],\n    \"baseConfig\" : \"dc3o2ywlehoxptmq3875hpdul9i3k91enekhgsb0vhhilu11cri9xkg77srntai1w8fcrwa5cjzu8o0cauk0oave7zkk\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3e433da-2557-46a5-91d8-3cdf609cf8a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.574625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigs.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigs.",
            "properties" : {
              "instanceConfigs" : {
                "description" : "The list of requested instance configurations.",
                "items" : {
                  "$ref" : "#/components/schemas/InstanceConfig"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigs call to fetch more of the matching instance configurations.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3e215d9-593a-4d46-be12-5894a2a3b9d5",
    "name" : "Lists the user-managed instance config long-running operations in the given proj...",
    "request" : {
      "urlPath" : "/v1/kmgjlbjie1ilzwed/instanceConfigOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jim Hoppe\",\n    \"error\" : {\n      \"code\" : 213840384,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Consequuntur neque expedita laudantium voluptatem explicabo atque. Quia quos molestiae sunt voluptates. Quo dolorem aliquam officiis rerum mollitia eum dolores.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Truman Oberbrunner\",\n    \"error\" : {\n      \"code\" : 1875303218,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Autem corrupti qui aperiam et exercitationem explicabo. Cum vel ratione. Omnis ut facere dolores et. Blanditiis dolor omnis quasi et qui sit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mallie Schowalter\",\n    \"error\" : {\n      \"code\" : 2058980401,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Et quam ullam facere et adipisci recusandae. Omnis voluptatem magnam vero molestias quos voluptatem nesciunt. Expedita in autem voluptatem sunt.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Irving O'Hara\",\n    \"error\" : {\n      \"code\" : 158079556,\n      \"details\" : [ { } ],\n      \"message\" : \"Quidem quae consequatur fugiat modi neque dolorum. Voluptate non inventore assumenda voluptatem similique. Sunt quo et laudantium qui odit voluptas.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Marlin Kirlin\",\n    \"error\" : {\n      \"code\" : 776949985,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Porro voluptatem dolores. Mollitia aspernatur pariatur ipsum. Et error officia est. Qui dignissimos odit. Possimus doloribus qui ex maxime.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"o9acg3zccyvo3gkklz2piwkjc7pzqf1r13zrfs45e1awvdb55f026bmw9u0fs4f597c04f4fxd2vut99rs48y0lpoqm78ybg1pkf4d2o57v14ibgut6ludv35gfjmiccg6tv1bn3q6o61ncuvryemj3lys\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3e215d9-593a-4d46-be12-5894a2a3b9d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.571443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instanceConfigOperations.list",
          "schema" : {
            "description" : "The response for ListInstanceConfigOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListInstanceConfigOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching instance config long-running operations. Each operation's name will be prefixed by the instance config's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "80097d8c-21bc-4710-b695-836c15c92bac",
    "name" : "Create a new database by restoring from a completed backup. The new database mus...",
    "request" : {
      "urlPath" : "/v1/qnhghrw4yfgge194rvpnc5v82wfr1q6pkmw4afkh2ahpi1ofo3xoerzpwcyi4/databases:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Chi Vandervort\",\n  \"error\" : {\n    \"code\" : 1937257938,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Incidunt cupiditate omnis dicta molestiae. Nostrum nulla vel consequatur minima maiores et corporis. Rerum dolore minus repudiandae et deserunt nihil. Expedita deleniti sed. Qui tenetur velit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80097d8c-21bc-4710-b695-836c15c92bac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.570791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.restore",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1461da46-3751-4c0e-945d-c193646501be",
    "name" : "Creates a new Cloud Spanner database and starts to prepare it for serving. The r...",
    "request" : {
      "urlPath" : "/v1/39p4tdl1fvwzh912dvu5028a7kijdjlj0t20c59hf7vh3j0z3cuzsnqm5j82yr2mlp6/databases",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Saul Shanahan\",\n  \"error\" : {\n    \"code\" : 614122282,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Animi architecto maiores excepturi. Quae qui molestiae occaecati veniam culpa. Odit dolorem laboriosam. Facere non consectetur.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1461da46-3751-4c0e-945d-c193646501be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.570593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f633bade-4737-4d3c-b33e-1d1733c98ad4",
    "name" : "Lists Cloud Spanner databases.",
    "request" : {
      "urlPath" : "/v1/aoyhfkkxcn5vd9zhgbzc0fpet9vv09y2mqvutqkmkbv60ucl1lwnz0jve8ivcrqsd31lq3unfhtgb3pu3op/databases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"databases\" : [ {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Magdalene Morissette Sr.\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 682827075,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui eveniet nostrum sit et voluptatem reprehenderit. Et dignissimos itaque magni voluptates. Quo ratione et maiores consequatur consectetur voluptatum sed. Voluptatem occaecati iste eos repellendus ma\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"9f4nyyi6zq8el5uq1cf8ovyrbxaeorec9te00lghs5gw0pjf6ey202r5jr0oz7xwseufqoiv13i0tapnnkg0m2b00f88nx81gqwthj1c0igofj6fhzf\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 636586393,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Enim omnis perspiciatis reprehenderit autem. Ut commodi delectus consequuntur est nostrum. Impedit nemo consequuntur. Corporis eum et.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"fcmfuj04felxotsh50ohr56sg9lrwp26x86e79tdard10bgu8vls5yalpc37dol9asddmpx75hx0zxcljxa7nzmk3m9581xoxgthgsuh7cfi3nmafsi5eo6aaf8k18zzefjjm1e31nwvjw8sndq4nan77frs1gquybao6dgfekbbrc6ks4q4c\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 910141553,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Beatae consequatur voluptatem. Sequi repellendus expedita. Quam enim doloremque perspiciatis voluptates maxime. Magni eum nostrum dolorum praesentium provident ut et. Qui provident et adipisci est eum\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"m9jl64i5s2lycayie2ptgvrq4zm728p342jo2hs2w18z37b3fh2f8p9yhnoy6h6fiw0pv9a3au9b84f2cifd009uxhcleb82t2sma0tmfw2jc9k3fm5tvcoti4gn37e6mcudnad6dwxzrd6y9ca46xy\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1266310643,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Fuga sint cupiditate cupiditate officiis. Qui et ut. A ipsum animi suscipit id sint.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"45169qphhgzf5rk7984h50swl6czyk6f97bd752vziay2mxkt9urulovyoto30i7lvuzft6k3tsagbk4l5v7i84inem71u3t6hqh54z3f79uhxvrptstcxod2pv1qo0fhw0nakyntvkvtrsqcoo424j\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 516117444,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Molestiae nostrum enim ab ut. Id maxime corporis odit. Earum ratione ut cum velit.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"padcshgkvoah73xzwfkn2xf0tsc7p62ecuhpolotrwfqmapdebz85d06cysuo3ozrgbxdx7sbiwweqalybb1femz6subq788tqdhp9apglp9ve31glb4j024zmjmqtrantdcdb3jxv57lnwanukvpojtqscj6lklwpkaytsr3ypp8wi74\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 268540422,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Mollitia et amet culpa est facere. Reiciendis vero est. Possimus est qui rem eveniet non eum dolor.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"uvwj9zw3h5krq3hjydqsk\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1743761417,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Exercitationem ut dolorem quam voluptates rerum illo. Numquam nostrum accusantium. Voluptatem ad provident dolores. Natus et minus pariatur quisquam voluptas autem.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"i4s4bjxsz6l66r2udtseqdwk89qxw19c7z1rioze0ur90lfkndc7sagtwn76wvy131lfhadu8ynqvfwp5jmc12otwrnwz7xzkw2p8494nvst\"\n    } ],\n    \"versionRetentionPeriod\" : \"tve0bq84lbbtqcya1dsv04pnybmwvfym2uooyosiizd46ixgm6xbmh1k4ns2n2dxllhxsxtnypnhy4910tr2o3zvkjg417nqzppjchh4aw6x6ee3m3bgwi3jpqjy03o\",\n    \"createTime\" : \"2022-05-31T17:08:49.565537Z\",\n    \"earliestVersionTime\" : \"2022-07-28T16:27:49.565571Z\",\n    \"defaultLeader\" : \"7wehupfrc92ediegj4qxz\",\n    \"name\" : \"Wilbur Lynch V\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"mp430uo4mm0lkqqq23ci\",\n        \"createTime\" : \"2022-07-03T16:15:49.565705Z\",\n        \"sourceDatabase\" : \"mhg8u19p76pwhu0nsktbzrdsniiliwpypd0fw3yuejgitsjus7w5cev0g6fvlkm5m3n29su3bcctznjj3qjiqmxfqhaoqyolkc45m1j\",\n        \"versionTime\" : \"2022-03-29T14:52:49.565759Z\"\n      }\n    },\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Mr. Sherwood Yundt\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 2028868255,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sunt adipisci necessitatibus dolorem atque. Quos ipsa nemo omnis tenetur sit sed eaque. Sunt sed quisquam et non saepe dolorem doloremque.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"gal8tdavj2qijcxoxaqs1kg93zjh24a5yl6z2kvhghfewbxnsiv4rgbgxpcvhypcyb44gddmhgu8t0bv2bjbsjt542lux0n1cs7qds4oji7chsrn4dhplhe83w652aa2v4rp8rctg91rwy98hkvmzjb0vkr00d5w\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1164242156,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Ex perferendis quisquam temporibus ipsam ipsum suscipit. Non excepturi eos dolor. Saepe cumque ut cumque ut quo. Veniam vel quia est.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"n5lpyprof1gtjnlnl6bua75jepkuwzz2iecvg7guoo3a867m1iwhr5k1dmudrkayfufkm2qqsl67vo5dkd2gbuk5ykr9dlqlxuynsffmxk5klhpguwio0jreiynjymkt9gktttety2a05xdr\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1796684749,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Eos sunt molestias. Voluptatem at libero ea repellat eius quas eum. Pariatur distinctio dolores quae.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"rwwmjh1aasmpuvpqiwog6phwv37\"\n    } ],\n    \"versionRetentionPeriod\" : \"otltiio4myg3ss6lr28sq3rx8frz9vklxmzs67neueqd5ysfde603d1af7u9sdewmkr2l7quzsbvzmz09o9lmxp2czrcqu7fq0us1nf81z95qaunuhd4rqa2zneqkyuj2gv082w4ft6jju29phuvik42lr\",\n    \"createTime\" : \"2022-10-10T15:33:49.566126Z\",\n    \"earliestVersionTime\" : \"2022-12-23T16:53:49.566153Z\",\n    \"defaultLeader\" : \"vskk2grdf249gocw9w9uhi7fnc3hn939cxyybmx2agr3yigqm78efwvgd15v55j38kbfam7zt4i9cfgsa6sot7pene8f81yrk4unkobbhovcen734pbbvuu93999wf16wafmwpr3uyoa2z37jnfj2dymykjsqtgj\",\n    \"name\" : \"Mrs. Antony Russel\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"BACKUP\",\n      \"backupInfo\" : {\n        \"backup\" : \"sgg9t4maqbb0n2ikh8qaog2kp9f3344k6z8vsv9z3swu7xyslxakaq437y2\",\n        \"createTime\" : \"2022-10-26T14:18:49.566272Z\",\n        \"sourceDatabase\" : \"qqf9n3qnsso8x3skhn64re6siqkzwu5b46lo4z1wqxnph8l75mep9ypr62k7pnog83sddgk3w0ltci6xyjhzfm434xg4fs90vls4ozysi5sgibo2dy8pkt2bzo4ux259doqppfwogbezquzjgdhi8zposflmz7wbu3p8y9hm6gq8sjnc8uu8oge\",\n        \"versionTime\" : \"2022-12-23T15:41:49.566321Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Mr. Elise Wisozk\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1388006448,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sunt autem aperiam qui velit voluptates. Distinctio repellat facilis neque. Animi ad ut aut quis optio dolores dolor.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"ur3ae7r4xdu6rccz46zvyfuhl2vtohwqqv5qtxsge9hbqzd1l3frtgekezve9f2c3d7mh2gvbsqpqqajp0t4n2rlbx9hisfxoqa1ylf6azs7s9jsexyrowa0id4m\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 979450670,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Quia temporibus laboriosam neque earum debitis. Non ex dicta quasi natus. Quis hic sed. Non quisquam magni qui minus iste ut. Sit facilis expedita aut.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"1k77o54tg7np4ddsslfkml4yk0aswoxyq8fbyvrqng5e4b2wi1t0z0xz977zwegoyxdg5vnzn5l1tx1w2bvu43lkploivlw06530kq0ygswlo3josbfuevhy7qh8aephqqfe38ck5gwq74rwrynhbvli1a2ms5uhyno7eok17yrtklykomiye\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 998579933,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptas suscipit voluptates qui eveniet modi quo. Est sit minima. Possimus nihil delectus velit pariatur nemo esse facere.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"gzgmphtzlxkdtorvmr9fft1yxtlj002p8gv7nj417c6h0649bwchsgtmeslsulzx0ac6ua6zls5o1b\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 702112442,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quisquam rem ea qui et at. Ut ut alias qui velit. Inventore non minima laudantium temporibus soluta. Eligendi harum explicabo quibusdam. Ipsam excepturi libero voluptatibus temporibus voluptate.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"6ovnvjxhwuygk9nesd5a6wxdaesaghjh5ivpdjmoipas6xjbfjhnzac0kxc3ycp6kqz6amvgcjakxec37dllif0rgblfj856bqxq4807wzl8tg92hdu8b4mlbxwxgnj4lrmd9eni7cw8nh2jg844br5o0b8wvhcmv\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1994200928,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Non velit a consequuntur laborum omnis quo nesciunt. Dolores aliquam nihil commodi et autem aut qui. Sed est repellendus qui quis. Velit iste id aut possimus harum rem nobis. Eos quos consequatur labo\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"9bkfqgum3lle6yxhitevczd11jntljgxjor8km8gu4lbyyppmw4odwwys5cowysbims7um6lnyff\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 438978111,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Iure rem velit quia excepturi dolorem. Natus et et eum. Culpa sint odio sed pariatur ea. Explicabo praesentium omnis harum quo praesentium porro similique. Mollitia neque rerum dolorum totam.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"wrhz62ipy6ha1pn2r0wkj8fyxrdzn324i0f\"\n    } ],\n    \"versionRetentionPeriod\" : \"kbipki9bn0goq4hkgpqxpkjlqi90tsa5jrss5krgzrk0qar86hau8uqad7fcam29or79y9drzb0i6x6ho8rf7mk5lnop5awr01wb1dzqlc66h0\",\n    \"createTime\" : \"2022-04-14T15:36:49.566951Z\",\n    \"earliestVersionTime\" : \"2022-05-03T17:52:49.566982Z\",\n    \"defaultLeader\" : \"lq9re85x6nz1du7gjrg4yhq0c48qxl229e2s4rmvss1qtz2o4s7khpcum04x11qhjusok1cif1o7bfcfg8ps75ojo4k56vp066ujmtcehg4vronr6n06xfnzq3aavz5zej401ho7dwuz2gf\",\n    \"name\" : \"Maria Tromp\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"x8nxkbwrygd40g9v6n32844nywcwsyccek3etl9fn2qelc7roj92yx\",\n        \"createTime\" : \"2022-09-11T16:11:49.567102Z\",\n        \"sourceDatabase\" : \"70es\",\n        \"versionTime\" : \"2022-09-27T17:23:49.56715Z\"\n      }\n    },\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Fred Doyle\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 57448535,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Eum atque qui sed aliquam et voluptatem dolore. Dolorem quia et optio quasi totam ut. Similique esse dignissimos blanditiis pariatur cupiditate. Et sit ut veritatis perspiciatis facere cum enim. Quo q\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"4wackj3lut2z1c1cug05m1oxephvsd1pnm4xcbs77d515qfkf3ce\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 948191680,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Eum iure rerum facilis nihil. Voluptatem natus qui quia et. Saepe maiores officia voluptatibus alias vitae omnis quibusdam. Iure blanditiis et exercitationem sed.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"xxvcgjlocg8crte1839b4yteu9tqnnwxh\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 285528759,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sit et tempore quisquam itaque et. Doloribus dicta non vero alias nihil beatae nisi. Hic ut maiores culpa est aliquid pariatur.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"eh7g0lbqp0jquwmpqgh3mgtjge4iy320thf2j5of8q2s1\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1250356568,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Perferendis omnis et ut porro. Non ab repellat architecto cumque nostrum labore. Repellat ducimus nihil harum maiores odit mollitia. Repellendus non excepturi atque architecto. Laudantium doloribus ut\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"rn7wakpauq2x968bdfzo88nx11tf5aresjsqfosd3wg1fm39mo6f4c6c1arotjsmvzqfbm27q98ki1ej3xibmo4t1f46gd5b3xvyo9ezz0seqbgxv5d7zgrvxd4man0rs1j0d6h77pw5e3dw38p3d8qi\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1400116303,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Dolorem et recusandae impedit excepturi quas porro velit. Laborum soluta sint magni delectus. Autem delectus excepturi et numquam. Commodi placeat fuga provident. Aliquid autem totam dolore.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"a4zzgyb8xwy3f6ffynh7cp43122og1avdcc6505z4fq3dnio5jm05zl5utw1172j7x9xsuy53ojnpp8sspw6vjm81ngd2nnl19pjkasz2l83k1x2suzx7yvqmdjngj5rhqc025px2bu8ab11\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 188822766,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Pariatur saepe a qui voluptatibus eligendi dolorem provident. Aut exercitationem reiciendis aut dolor porro. Perferendis omnis et nisi incidunt quam consequuntur. Reprehenderit inventore et ex maxime \"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"uh0tvniaehhfsfw8eecpgpzblpxpaibxu11yg4fr1ko2ub6kz5yt6hacpyq56r1jkk1m43ulg838t1ct76zh51ac2u3a85k010i7bhg46dw1b8lcttp2x13zycm8gw49sol3h503n74y6els7aaa2y3oqmtk2xh2e3ylv3iz01f98blidl8z8j0jxz096cgfer\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1267507615,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Quo odio qui iste possimus qui. Laudantium neque quisquam. Voluptas enim odio atque velit. Dignissimos non ex.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"1mbe1mrygigfhpd23u0i\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1551246406,\n        \"details\" : [ { } ],\n        \"message\" : \"Odio minus dolorum nihil unde iusto. Illo molestiae nam veritatis consequatur ipsam eos ea. Architecto et est sit rerum nostrum.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"f9749zcisewleb1xieiow4i8g5o01bc1obbm8x7n0bveazbgoa3m\"\n    } ],\n    \"versionRetentionPeriod\" : \"olhwosboa79knihqio30wvaxg4xmfbt24gin5m0xidfd8c937kp8lsuv599jwy66va25ue6xmnmyio539h95zobp\",\n    \"createTime\" : \"2022-07-13T18:05:49.567938Z\",\n    \"earliestVersionTime\" : \"2023-01-17T15:58:49.56797Z\",\n    \"defaultLeader\" : \"mrwkpjc2lq47en9kai9rh8dm6021ax9pmrpr76foap0338rcpd5ob9pszriy4uhfvdmeu5u2ka9kquqojzjf8w4yrg911bcv8961ulaq8jbfnmagg2zgsdqdfevkjr3c5vadz1qh9nyvec4orkxj3phkng060ax3z7ep1xaa8lh4zezntvwsabv42szjeh6j29\",\n    \"name\" : \"Janina Nolan\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"69axw75uuxxk28labv0qw9mbxz0uykrfxquk6sluulyvwh2kphpy0hz4tz6x2jpl7\",\n        \"createTime\" : \"2022-06-04T15:28:49.568097Z\",\n        \"sourceDatabase\" : \"tmh12s1qkl45gs76ai2450wiys4fo3kfs9ciodz7qw7re9ntu8ur6oav9773rtryrwzroubh2i32c5ii16pffkdbn796bj7y71axolvsqp46lr1lru6z1zmi3nnkqyq9nmm2ua9ksygkp00ieidwgqzb7j4ueinwfd6pig2gv287yzfgjkz4fhl4jnhz\",\n        \"versionTime\" : \"2022-04-27T16:16:49.568149Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Mrs. Percy Jacobson\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 552349070,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Consequatur odit in consequatur beatae. Incidunt dolore minima magnam explicabo eveniet molestiae. Facilis fuga aut molestias. Accusamus enim esse aut. Voluptatibus accusamus nulla in quas doloribus v\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"mq0wmuihmy7uh7o9tuw4tzvhzszr9m4s3r6jubfjb0i7quo6phhr2iz5zd44p4qz0dwf9pfel1uuq7ohk3x4wh8w92oxnuhbpjerq1eu9zsqbjg9t7z4y3qxb3s9bo6qjz9nvizfdonavizgoro\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 95479580,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Inventore doloremque ipsam. Laudantium enim deleniti vel magni rerum expedita. Et non consequatur sit. Sed ut qui repellat.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"7m1980np7ifo9yvuj1e9ldgbufhmlwojn06eirpaafdvjoqgsb4sba2wdwpyi9eihuliezel6yo5zkxdmr0ipunem2twyhvyjl00b0jztfyqtqtac105y5p15bme727501xopvg79mfm6vdfgnejjo94ecrt5su1jlrydbkig6hi2pvz\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 603439051,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Natus sed et soluta id vel ut. Quis voluptatem perspiciatis doloribus debitis at. Asperiores maxime non molestiae numquam deserunt ipsum. Rerum molestiae quo.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"cl2talghz9dvk7o0k2b8nkxi5omirlslz2b06us804iac3vxl779o337b855z0610twpydj9450wwiaad0tj7vgaysy52olgdpg5mt0eyleyuonvd4xuk\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1487959164,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Possimus saepe maxime consectetur veniam velit esse consectetur. Omnis quia consequatur. Voluptas delectus quia commodi qui rem quo ratione. Et architecto saepe velit quas necessitatibus et.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"u00268ef0nkkxqnl8rmup6gk9oly7j3v51ken6icdd05wdpw6mglj8pdkqq5s4msrnpbjdmyh691c58gx9w5nlhgrqsuggm442lyvs04itnbcuxl5jmogr527u8omnirlcbvzciirf3dydh8jg7k3477ifdqvuumdzl6mrhpgsh9k0qk\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2031701565,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Sequi soluta provident qui. Id necessitatibus provident voluptatem fugiat. Et mollitia ut. Cumque ex saepe ea eveniet corrupti nesciunt. Rerum qui debitis earum sed.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"epzbm8skwjrdjsg01p3xmv1749eswqldzy33og67itrw6pky3bv7m3eu8c0lv16oqh9\"\n    } ],\n    \"versionRetentionPeriod\" : \"7pl4slhz7k2jwwkjgmbl1hd30bgpgndaxplmqbigi13shrmqbmjbdxukniag764qpez19dd1y3o0kns10p40wiojux9lfwlhxgvmeynak\",\n    \"createTime\" : \"2022-11-29T17:48:49.568682Z\",\n    \"earliestVersionTime\" : \"2023-03-04T17:57:49.568714Z\",\n    \"defaultLeader\" : \"d66nyyspfftantgc2jw3el4b4irqp5gcl5zar19i6zh975zenq6vabevkqcfzln75s7ka8lz30btjmerb8e9ehdaqagr6pjdhpoj0eclocmy37d41cd9qrds\",\n    \"name\" : \"Peggy Leannon\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"olendv42su7huj\",\n        \"createTime\" : \"2023-01-01T14:34:49.568831Z\",\n        \"sourceDatabase\" : \"qq1bbyfo\",\n        \"versionTime\" : \"2022-06-28T15:32:49.568876Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Conception Waters I\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 2107442537,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Architecto hic omnis quis quo ipsum. Quis animi vel perspiciatis. Ea tempora laborum asperiores quas. Distinctio qui blanditiis dolorum nostrum molestiae.\"\n      },\n      \"encryptionType\" : \"GOOGLE_DEFAULT_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"4aup1p0c6vizz5lbw786i444otl6o90kt3bq2ojb5la9j2cxsp0dbklxcl20ibbc13uxo3ba74kfgetmw4sp3dp65nsfbwbtqywfbhwbwqn0v8kkhkcmmtv5jfrvsjnoi0s36eej1tlw7q9l15xunp98vl84dxyhwaax2r0m\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 2133011817,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sint voluptatem repellendus rerum. Porro rerum recusandae voluptates esse optio earum. Quam distinctio dolore neque blanditiis maiores.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"hd9dqzg0zccx8d38dfkymeoiu4a0bmi1c3nof7euwkylkx3jcs0ds28jese8w5g6ffylk01btrat9vxav8nh4kw21iqgdjru19y09xtdvgnnmqxj9ko8r92zanmtk8atawmoa\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 22584936,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Molestias cum nihil molestiae. Et quas provident vel quam. Voluptates recusandae adipisci repudiandae ea explicabo nam aut.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"e8fxp7mchqdvbolx272enmeno3p234y2h8efbetht3y76wfzhqyphu89s54e2ydllgrzheo2u443qcjuavvrtbgqkm1msde2sq1kwwqwoytd4vzzo1xhoz6xa29vyhyzjhhf400h84n6bgzd\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1490146417,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Unde quod id magni. Sit asperiores porro. Aliquid totam neque officiis blanditiis unde. Tenetur aut vel enim ex.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"b0i5be2esunfcun91wnvyut7h7vxue15dv3c2o2ace90fagx57jf1u5frqg13tez88j9gnu0hdio2b9fmjgrxxmb25vuc9xye3i9nam7amojb6nreqifqy5pq6k5bw7gl8wjtf9el\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 1514984269,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Nemo voluptates repudiandae et modi et sunt culpa. Culpa nihil numquam ex. Magni quia eos atque ipsam. Qui assumenda laudantium labore harum quia atque.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"w04jk610kz21edc8bahitu15gars67wzz25f7rc4j09k8asc0ohhtxdv8kjizz0iklljuhqv1wwq6jzshx75s35rxjv6fpskdhlotl9gd2c01y1055mu8i9je29nm3dbp6xx0rz50y52tsf40hnna49l3556khcxp9kse2nlhdvra43wnze0rqa81co2\"\n    }, {\n      \"encryptionStatus\" : {\n        \"code\" : 564488811,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Quia rerum est. Autem ea aliquam dignissimos voluptates. Excepturi veritatis ex. Rem quo inventore eveniet maiores in.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"7ku3c3anzb15fl8qqf582bmncqvbvlf43f6mip1f5bbyc909v66j40zc6liu1f6flgw9a0le5zj48ebcnqts768flr0m4lgg1cm6cg7dnfh9ne3wjkrppyo3obfa0cwg23lwny24hzpx5kedyawpjyf1w81pprj65pxz5uuug7vqy93ath44\"\n    } ],\n    \"versionRetentionPeriod\" : \"un01s5451io1xl7\",\n    \"createTime\" : \"2022-06-06T15:05:49.569494Z\",\n    \"earliestVersionTime\" : \"2022-08-19T17:00:49.569524Z\",\n    \"defaultLeader\" : \"1dygfj9ogk0jp1mn9kbaes8w7szbhfyvjib6bmqwnarhagq4w41wr1h7lxtqv21rkqbibnk31jlipow97t7bsg9qwg1bkfw2aptosdfpyov3lbpymbmyaxgbotuc4ia6rrt9hufdf2snngzqtyle47u0tolf495\",\n    \"name\" : \"Haywood Schaefer IV\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"ao6t4fjx546o28goevxeqsl7ovm5lbtgcgmj4fz6x5w56q2xsqrjnvvf8rlil2fjo4nsnnfs9vtn8zmarcluiefowfwx5p1gmgmxbd43be\",\n        \"createTime\" : \"2022-11-05T15:49:49.569649Z\",\n        \"sourceDatabase\" : \"u666h6sem4x9v98yba4tigi4c4yp8\",\n        \"versionTime\" : \"2022-04-29T16:48:49.569696Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY\"\n  }, {\n    \"encryptionConfig\" : {\n      \"kmsKeyName\" : \"Ashlie Haag\"\n    },\n    \"encryptionInfo\" : [ {\n      \"encryptionStatus\" : {\n        \"code\" : 1549008874,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Sint aperiam consequatur dolore aperiam et facilis ducimus. Occaecati porro tempora. Magni quo debitis necessitatibus harum. Aliquid quia alias quod rerum.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"kotynoetl9q6gixocekib9vthyzvwd5z32b35jh59tar5q15cbnwwz8ykofxneubsmn2nilwk3fqupwz6zbizx54oamgtc9\"\n    } ],\n    \"versionRetentionPeriod\" : \"p85snrqo1mydqbx6edyq9sun2bzvtsid6gvgie32hudw9ok5iql3ivsxod2fd56orgkiql0ld3j1n92mgl8eu3daclcjexhszqykcc1t2skgks01bx6obpf6f04ecn8vacqatvuu75fg8zjiz28cwxo1khsgz4dyd1wpfl889zxun70dl8anwbzfn81u6kyi3mnxz\",\n    \"createTime\" : \"2022-08-19T16:56:49.569914Z\",\n    \"earliestVersionTime\" : \"2022-11-22T14:49:49.569944Z\",\n    \"defaultLeader\" : \"bo9v1k28y6yg4dple3u9zcz9i2un7oyfrq67vj5a8i6n3zev6yxs99q68zz54a550mgudk3kf9glc9oqqx6pi85qzi3t2x97odutllxh8kv977d7b8qzt31vk1v0zisvmxlvx8dr9mghcc60oj530nvmiee6x\",\n    \"name\" : \"Del Hessel\",\n    \"restoreInfo\" : {\n      \"sourceType\" : \"TYPE_UNSPECIFIED\",\n      \"backupInfo\" : {\n        \"backup\" : \"20gp\",\n        \"createTime\" : \"2022-07-02T14:46:49.570061Z\",\n        \"sourceDatabase\" : \"x9m9f0789jqckxlfnpoutszyk63jueixi8409xvfvnvlkab57q0he6j3dafb2mljq8k0xdxn0jfqgawp89cgbo4as1n0z8dx5wlj0zl3xt9dom571q08mjtooedvyirzarwkzvc4lfzjvhdijpfbhyyoaj3israxyupj0a59hzj57\",\n        \"versionTime\" : \"2022-12-08T16:00:49.57011Z\"\n      }\n    },\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"READY\"\n  } ],\n  \"nextPageToken\" : \"9tidnvv34f6glppe458m8evayha459vt6cn4mnsmeqz96q3py8uz1uca3u5sarf51ta4e1dr65a5c2anzf3vkny9csxlm3euhkal9l2pxfofaia873b6xovcwny5w0sg6h4ncxju1g88h9bnaarhjepv277ywmxikg3jrm4444vqpol9g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f633bade-4737-4d3c-b33e-1d1733c98ad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.570368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.list",
          "schema" : {
            "description" : "The response for ListDatabases.",
            "properties" : {
              "databases" : {
                "description" : "Databases that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Database"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabases call to fetch more of the matching databases.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "75e3f09f-50bf-48f6-bc1f-a5f0ff657064",
    "name" : "Lists Cloud Spanner database roles.",
    "request" : {
      "urlPath" : "/v1/wph1i56y9h7bipxevmwbo1dqlzraivqdscd4yi0njkd62kw2a0ejxa2n0jnk4cbw3pqiinccbio8k8k0ex2f1kemkjv36wsdwoblygkima11mxnnjuhbahkfsw2re3l2i483/databaseRoles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1x8ftt7frtgmtvwvbm5r4w5vau434iv1fpcr1j08mcrdm5sdx8wpd5zut7e73zj4kno65aaiagus0up9rwu6kre2iik6okbzc\",\n  \"databaseRoles\" : [ {\n    \"name\" : \"Elias Price\"\n  }, {\n    \"name\" : \"Roderick Grimes\"\n  }, {\n    \"name\" : \"Ted Cummings\"\n  }, {\n    \"name\" : \"Monroe Hagenes DDS\"\n  }, {\n    \"name\" : \"Deangelo Hintz II\"\n  }, {\n    \"name\" : \"Demetria Sawayn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75e3f09f-50bf-48f6-bc1f-a5f0ff657064",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.564813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.databaseRoles.list",
          "schema" : {
            "description" : "The response for ListDatabaseRoles.",
            "properties" : {
              "databaseRoles" : {
                "description" : "Database roles that matched the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DatabaseRole"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseRoles call to fetch more of the matching roles.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ca96e5e9-1e1c-4025-b3a2-3c040d59f82c",
    "name" : "Lists database longrunning-operations. A database operation has a name of the fo...",
    "request" : {
      "urlPath" : "/v1/wqlt8mst5ew4kf8qap4mbbkzwf6a81gyn98fzjsp5ya5d2pay1risyrszobygh/databaseOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Reginald White V\",\n    \"error\" : {\n      \"code\" : 1562808354,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Molestiae sit dolorem quas sint et consequatur. Hic modi officiis dolorum. Accusamus rerum ea consequuntur.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Renato Effertz II\",\n    \"error\" : {\n      \"code\" : 1017526516,\n      \"details\" : [ { } ],\n      \"message\" : \"Ut dignissimos explicabo. Ut porro nemo earum tenetur sed nostrum. Aperiam velit doloribus reiciendis qui et voluptatem. Magnam corporis facere reiciendis reprehenderit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Florida Gutkowski\",\n    \"error\" : {\n      \"code\" : 1837332064,\n      \"details\" : [ { } ],\n      \"message\" : \"Nulla voluptatem sed neque et. Aliquam et temporibus voluptatem tenetur quia ut non. Veritatis debitis quibusdam nesciunt iusto et et omnis. Dicta sed rerum sunt ratione omnis aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Blaine Crooks\",\n    \"error\" : {\n      \"code\" : 1038385671,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quibusdam est aliquid. Quo modi impedit. Velit qui omnis ad dolore.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Dion Roob\",\n    \"error\" : {\n      \"code\" : 101663320,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Repudiandae maxime aut omnis et reprehenderit unde libero. Ipsum suscipit est ullam ut quia. Sequi quo sint porro fuga perferendis. Quos et voluptatem. Accusantium et cumque atque mollitia animi facer\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Aaron Kunze MD\",\n    \"error\" : {\n      \"code\" : 1665857525,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Blanditiis harum quaerat incidunt. At dolorum aperiam dolor repellendus. Alias quasi consequatur. Enim molestiae consequuntur consequatur et unde. Enim tempore in eius ipsam impedit dicta.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Moshe Cummings\",\n    \"error\" : {\n      \"code\" : 661285394,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quos minus autem rerum voluptatibus non est. Dolore eius amet tempora maxime natus perferendis. Aut voluptas quia nisi aut quo et possimus. Ut vitae hic nostrum repellat officia quia et. Maiores quaer\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Arianne Stanton\",\n    \"error\" : {\n      \"code\" : 129914704,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Necessitatibus ut omnis dolores enim et eligendi accusantium. Consequatur hic iste quidem et voluptatem voluptas. Repudiandae animi molestiae perferendis. Laborum nobis iste nihil ut sed ullam.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"2szkb2gaotdydy1n2iol6b25i81sf0vp8droki3g9jgq7tqs9y7ktaj11qho1mh4djaoiu77dmz6b9hqjeihqtqbis2abt23y5ec\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca96e5e9-1e1c-4025-b3a2-3c040d59f82c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.564437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databaseOperations.list",
          "schema" : {
            "description" : "The response for ListDatabaseOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListDatabaseOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching database long-running operations. Each operation's name will be prefixed by the database's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f88a207b-1624-4ada-80eb-896ffeccfb78",
    "name" : "Starts copying a Cloud Spanner Backup. The returned backup long-running operatio...",
    "request" : {
      "urlPath" : "/v1/4t40u1qjh0all01u7f82k8wq/backups:copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Portia Reinger\",\n  \"error\" : {\n    \"code\" : 658770604,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Ipsa ex nostrum. Et sint doloremque omnis. Esse officia quia sequi sed vel sed.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f88a207b-1624-4ada-80eb-896ffeccfb78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.563448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.copy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ea50282-573c-4af6-bb24-9030c79b20ba",
    "name" : "Starts creating a new Cloud Spanner Backup. The returned backup long-running ope...",
    "request" : {
      "urlPath" : "/v1/e6km889zqbfd083u1gjetyjgin8nvt4rm1h2sjar1tcd3vml121i1y4tljraad7afws39nsa1zt/backups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hosea Larson\",\n  \"error\" : {\n    \"code\" : 599789222,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Consequatur est quam autem illum quo adipisci alias. Rerum et repellat cupiditate ipsa. Dicta dicta omnis quibusdam iure.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ea50282-573c-4af6-bb24-9030c79b20ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.563268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bbeeb23b-5d61-4590-b4c7-c58a64c11e99",
    "name" : "Lists completed and pending backups. Backups returned are ordered by `create_tim...",
    "request" : {
      "urlPath" : "/v1/06f67wv132li1r29ahqidkwktbt4696a7opxd8r6r5edqk/backups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"qliuhx1k\",\n  \"backups\" : [ {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1144288221,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut enim et. Ipsa et optio amet nesciunt. Esse nulla culpa dolor aut vel ut. Occaecati sunt qui enim dignissimos.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"al2vzz\"\n    },\n    \"database\" : \"s13imjvbefvfar4yibkrqrbkou8rh80nxslzlrc3zap9zeon0zaxienpxcmj3lv3c2nyjfbi204l3nbx18\",\n    \"expireTime\" : \"2022-08-30T17:02:49.560778Z\",\n    \"referencingBackups\" : [ \"wit1gewapl500noprcdahl6awhy4v\", \"xe6y75f17gk0srq075vu30493uvb97ly0ev82e74gx6os0qw26uw7reji2xo86cxgaqscgfurw2skam4ntpw4k8at03nd0rjg9psplqr0ysgvh38rm\", \"f3u1r5shxt4r0c\", \"6hn6voiaiye1v3lr8oe5lfejfmdc4njak31zjmwtngtng4qtfdcvw5i3k\" ],\n    \"createTime\" : \"2022-11-08T17:18:49.560842Z\",\n    \"referencingDatabases\" : [ \"xe77o5ukc1d5ot7kueklai61jtbihit\", \"sisjy00tyzyn\" ],\n    \"versionTime\" : \"2022-04-20T16:16:49.560893Z\",\n    \"name\" : \"Luis Vandervort\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-12-23T15:29:49.560992Z\",\n    \"sizeBytes\" : \"152rctd1saw5vsq9c4oml9ee241t4jucifq3uw141umdh3hnotk2px8azt47yeo5ajna6bfaydyiv37xssfru4vvk27888bgzzua5ujqmepvs8wh8fyps4hn3gyfttqfjl6t3k0g5mi9k6bdk1k6a22kn2ddvtn\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 675236101,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Et sequi vitae. Amet officia odio non reprehenderit sed doloremque. Necessitatibus ut molestiae eum vel. Dolores provident odit minima. Rerum maiores optio.\"\n      },\n      \"encryptionType\" : \"CUSTOMER_MANAGED_ENCRYPTION\",\n      \"kmsKeyVersion\" : \"qgwdgvauw24bjcqt4zl33laq65r3i0nffxninx6bkznwhcvl2uy47p3dc38na5xz8v8jlz60x4s6fy8qha530jak4n7l0dp13hgdmjsr2\"\n    },\n    \"database\" : \"jabj0bbqfnbk2e79roeoxsvzdeyvw7ykajjtz6k204riami3una9crw8mf4mdaxpjh\",\n    \"expireTime\" : \"2022-08-03T15:16:49.561153Z\",\n    \"referencingBackups\" : [ \"u9bs8tsd2ny0l3fy8q49024m45iz64j1sz9bh6gvoaw2wp8s95iank7gkhurd3p367lr3pwe040iv3q0pzo67q01xmvcqcjymlag0fraepm8rgkvty1iicb21cokeakye5obgzvh6xjd0\", \"3syv6y560mvdeikng96tic4ah4zpqeu7g32fv3y8xq2fw2rebsmkum1u16zs061adwfabckvvcejnwv6bot3rrpgmdhzxy4wdy8r7pkyahoivid302aib60pe9fbhkulkmydnn0pgtg83e1eu51xk33pdq9svmlmi4w1j999rzhlwnbm5fn0v2sup72ac3sfcc7r\", \"4ug9pijsfrzweufxntiqouqs9o8bne1sr6eaeltn49bwsux14nbyelo379d7rit5nqa8epzof96asa5s4b4\", \"ehy67w78un3tigj\" ],\n    \"createTime\" : \"2022-03-18T15:40:49.561211Z\",\n    \"referencingDatabases\" : [ \"b7ol3wxujhulcfz2isx0pn4impe1990mxd58eibthhv7nklidecrgagguvxxrxprrbrbgb78w\", \"f9p9486zua2eg3grkfm3hlk0kvc043c5i4tb4tcdkbj4yuau0dwn6fifafmkdtovwmqlr1rzrf7zbmhsdkqufbmur9pjb945h01wzid770\", \"564f4v9exp6tgpovgzl5fd66zho48827w6h1nazpxzuymtwol1u183elrmacnbi5roac34aeyb796fy8ifwwod904nqvq73j03ugkwy46ari5tz9w8q6zfrqcxcux8tyoz8prtsvhsnxaqyt792iu6t\", \"wz8sf97irn2ij9j9xz24bjy2ejoovz2vlvuyk6754j5lppyuze43vs7qdobw257z96tqlruaaqyp9e9xn1h3ycs87ryto79uibpizm6c6q5g31feiep3wvluhkf77xsmnrn1q75bqljkz34avbq91pn86qnstjjztye6uku70vk78jbo\" ],\n    \"versionTime\" : \"2022-07-01T15:24:49.56127Z\",\n    \"name\" : \"Chanel Ebert\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"CREATING\",\n    \"maxExpireTime\" : \"2022-03-13T14:46:49.561361Z\",\n    \"sizeBytes\" : \"w0cl71d1ssrlu7xm3jqa2kha0xq6k\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 408042847,\n        \"details\" : [ { } ],\n        \"message\" : \"Atque velit expedita. Vitae quis facilis pariatur. Molestias quia qui qui quia voluptate atque alias. Pariatur assumenda autem porro natus.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"vs3wsvlqb8zcgu2jkhqcthufaxqz5yj3v0dkoz5w40k9e7l675narew6pdilo8mwyrrlsq1ldv4ayfpmnk7yj8ajp9eimozso1ytyonuhatjcz4j34ybjbqxyj5d9tmvs0ysh5po1kox8fgh4djahuvvpxcvfd49aqiss4ii455chng0ddbajnl2h2j3\"\n    },\n    \"database\" : \"0rxwhys2apzo14ca89f2xmhrg9t5xm0xwl2i6atqpppfvgpx8t6we7lnmw4hq3yihrrmsstljoklf71ozcazpnih1rg7xh5c0jw0pc7ivxsnj55vy6c22b6403oy8ja9k9o929u3i44kdpjecco2cvi0nnyi9zggajcd3wsvv6h5zglq2lpi5qjtz3b4p\",\n    \"expireTime\" : \"2023-01-09T16:35:49.561518Z\",\n    \"referencingBackups\" : [ \"9cxf5s65779r7z4vglxw878c8h1pff3k4otpva9virb71hs98ji7581vgcootpm5t4xi9ax\", \"s55cw4tsu1huxoi2s1falfple5jn6\", \"jw4vkff45t3iry5c9ofatwz0jgv3lqxbciebijiws8xa7ehw6w1pgeld05zz15u2yq1nmwogtk87n4hzhwuv3ozi5mqqe09hnz0v9fpaff8delozq7d829b1xftdhkmclp4c6vgoyvy5q58dat6uzmrj44beu0tirr8du17fm22hpn3x762r8q1wmphj8\", \"2njm0akm1\", \"yekzl67g9qlp5jpbryxq4j4s298asbqlhliocf5lcn7hsqj8q73jpknhqbxvk2rj8wae0j3q2v4jup9cadpv6qpxgjnb933t6eb52oq55og7v5w539z9b2obllaiz363rgacvwwd5hzjv21d1xsesvix4upip6lh41rb5w6dx6s29ryyenx9s3jmxhlsdrn3ox14\", \"nestu76o0d0j0vt0wpnrr202jf63dxktywjdugrkoxe22wv6lxhx90jhdfc7xxn9tidybw4f6ig0\" ],\n    \"createTime\" : \"2023-01-31T16:13:49.561588Z\",\n    \"referencingDatabases\" : [ \"zzta2i9zfasn77x7m7pmjsbbklc3tyiqs3x7h8347295jwrs\", \"tvu9rep9lacv3rfqkmr2nocn60rg6\", \"90wcza9s11wnqhdd1bm9k1m0vqh19aigwf3sq0fq43gg35\", \"cae6lds2zoe3ogrfjxq3d23rdlhrgu9fz8hrecr5hzhtaetvqlhsf1krob9bjjaffmi55gvcxluk77lk1dzkdbdpvj1bz8fy9mf4621iczxyjqveza0ci9k5acwj0m8jw59dtl7galuaaz0spooeguj3b4rcjslf1jzait4uajc81\", \"lqen2yodbn92f108\", \"3qw1b5f0almx82aa4od4tles6s82m551uupyqygkwxg65vgjc6zgaalrjw57bzvldjha9tpoa1e3q3gkjwtpyw30r1ci1mqo8zrlxuog\" ],\n    \"versionTime\" : \"2022-12-12T17:52:49.561656Z\",\n    \"name\" : \"Laurence Schulist\",\n    \"databaseDialect\" : \"POSTGRESQL\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-03-12T17:33:49.561741Z\",\n    \"sizeBytes\" : \"i7p2ghhtb3im6e9hle97z406215r7669uyu7bj4avlmqi0pnbdek5cdx5d6q91og0\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 1062909980,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Dolorem neque exercitationem inventore ad qui iste voluptatum. Necessitatibus nostrum nostrum. Molestiae qui inventore eos. Rerum eligendi aut vero rerum impedit dolore.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"lveyzgakxjiumwbil63wefgbbzt9covhy4858us19u8wpowyrlqlc2dm9i9z9n32q9hzubpfh7ur985trieqt7b4amm35dif2vlofc1vzdwh1h7vs3agw9yfllpow6sq9\"\n    },\n    \"database\" : \"k77wpn8fpgi1qvdb3uo9exl\",\n    \"expireTime\" : \"2022-03-29T17:05:49.561901Z\",\n    \"referencingBackups\" : [ \"dctatiaigwy1bv5sctd3p1vzp5xkcf5gahs8qe907rb9eiygtu7iile8y7l0ognlwgix0iytyoiq2rm7ansasm6pk107rwuw5kgh625kc\", \"yeh6vig9a7mbb4kyudfc5mvw0zkgazlmlr19vl7srmjyvi4n8sdzp2ftd7oeefhw38nhiz9xx73ds6uqudnmlvfenpld0lb571rct40y9gea9n0vyvm5i0713ajy59umqqw1mvist64f9\", \"8mamaedzrf4z8d208qogr1m82ppg5j5sf1f0bbpn84wjka4p2zeyai0riizy62mka\", \"dq14zlbmx3s7vffw69y13e8u8je2c5l1mluf72mqeoh1a9bfvvnr950ibrsfktb0s7qulv7qh4af0n9o4287dg3suoxw26jfrwecfn2sto06keaqbaixvim1hcc7jmnlg843d6\", \"ubyvqjkwpstcs71fkhbo2c5s7mx2ttetvkithihc75w1oy9ggsn2u3yz5c4l67vfyo6creg\", \"i4bagv6zukagm32493w5no7xt9myw1b8dri75t74eyfsn74z1nfgrc8eyyh4ic3ftuigi4hhom6cp5c7ha2sevfpbm9o02fxilh9rxbml7plgh9slb2ye5xatxf0ah7udpi5wy9496mv8f3v9b12xzthzxtqusivim8t5gk\", \"3c4b2uyq13n51j346eoaee4sz1zlsc8dp367yy8yd1u4k88y512oi4u3c9a0\", \"9bev7p4xzp0vquggrtbdz775achpf4ir2pw824v3zdy3y6twob0h51g3ximee6azqwxg5myvf\" ],\n    \"createTime\" : \"2022-06-29T17:46:49.561986Z\",\n    \"referencingDatabases\" : [ \"clalxh1v9lo5onh27uzabn6sodzptc1ju6d0c3p274vxmw18wuqonhu6hmubss163jc7bn1gkc0pkfzt6cev9ooz81lfqgeuizf1htebpfmeipu91q\", \"emlzpshsp8b7qfdugtds75yp60ld3x8e2msdfz04z2imretaf0pyubv43nu75f3lp9w4krvocjagkio5ovtvjkmy7rnueb6no5c2qa48aqw52whsl5bx1vpu8vneyz9ld61pvpm5ttb1kfrlozjju0bs8wenoasv2\", \"3fjhhw6zfzsx1dkar3f37apdmw39c\", \"0igwe7763cjjcb7dbusy9bhr48pw4po6ax1z94zq9yumxu918tjdx2v3g4gtdmilgnfljtzi59b1bxsthz4uty20oyob0527f9ipf26xm\", \"y4941nkqyc40vojhjl\", \"6nee4ymnz5kf99q27glfyp06balw7cm9y2lagftsaeruvf8eppm0c22xhbqqragaturkkyz6u9bo6qnp3g217hyg8pxy6mscsa8a1mg7ji2r6p23cbgg1amavim\", \"08x2v5a4oma9qjl90e4b9j0es8tw2op4fjpkcvwux48bmje64xngp4sww0jalb81t339uk0thufmky49454a5aapi0kvv8129m4ipk8kh3slcpq8psj60lpnxnu26n5xfv33d\" ],\n    \"versionTime\" : \"2022-08-25T16:14:49.56206Z\",\n    \"name\" : \"Charles Stark\",\n    \"databaseDialect\" : \"GOOGLE_STANDARD_SQL\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2023-01-11T14:49:49.562152Z\",\n    \"sizeBytes\" : \"dicneapqdgn5r7ur99fqmqx29u2xtreai9wrcfy6kr7a020ocu7gr0s3fqn8c\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 2029205091,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Officiis ut sit. Eveniet vitae dolor sapiente. Voluptatum aliquid omnis eius facilis. Omnis cumque qui.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"1lfe1bxszmdsscd8ly5sh1l24bthiga4o1lfavcgbeocyuyn38cyditz6pf62kxyh68kggppis6sw69ig1a2dfrxkbyqok8ojvq826xjgvjtwo4fc\"\n    },\n    \"database\" : \"nx3i0vv5yf5ey6patk6018v4bsn01196klbkwov1pt1tjasdyh3xvz0fqp05ox6j3i2j5\",\n    \"expireTime\" : \"2023-01-06T17:13:49.562301Z\",\n    \"referencingBackups\" : [ \"cs78th7m8euu3rdxtqb9r6mex6h1e9s82s1sanyqllr1ly6y0bgyfkvxujfo2qns7rfq13qkncpy7l22dwb2ngpwimt0rcr1l04iinqkdfna44n6cbonj1fv\" ],\n    \"createTime\" : \"2022-10-11T17:43:49.562341Z\",\n    \"referencingDatabases\" : [ \"garuropt0ih2pu4ep948an9pp4l1uc8fn97za22evaai1buxuveptn56nzkvm4gna3hsqjtfwcwsl8qfwr7krmcjv0zxcqxpspbur7y2lysb755t0t0a7v7midqbn6m0\", \"74zlibjc1trv94l71rntnbpm78mdlctxzwlc8bt0s8qdpgosfpf72i70csrkm6ru39lhl6eloujxxhe9gyk4wr4cdwybk2j95zwsm16tvao86yosjrd0y9vuq81zy9ssn3cgtgo23739\", \"zkqq8chxfebebsk2eoczjj3a02eee1yo453zikiv6qovk7z4rw8h3835w0ysdf1pbxfklqu04bpijs3m49kmj4s\", \"r77i3wnxev05se2jn0vfl1u\", \"ul4v06ex9e647gbb8w2q1ahp7a1b9vnor6zv6k0vq83qto208stf\", \"dlwbe8op0tm35jntdsf2usgagrob27wo2wsbo5t9vgxl9qdxltzhmurqy7xq2ugkp8la9yskhygjd6ai85i5sfmf5s2lnkixmiod8rcw6u8yhv19359w2h1kl93tetc7thvkefmjatrxnosvn8rwk5wueagxms0zea4620mo1esaujtp6zwt\" ],\n    \"versionTime\" : \"2022-11-28T16:00:49.562419Z\",\n    \"name\" : \"Manie Wuckert\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"maxExpireTime\" : \"2022-06-13T16:22:49.562507Z\",\n    \"sizeBytes\" : \"yqplogbcjj80e69ltdhmrk6xdq6huso2vvck4jd4eiojoi7pdq6f4cyiq409hwkt617kjlvj3stpuq2plynjd5ckl959f6b3cog1kfqx47vkwi\"\n  }, {\n    \"encryptionInfo\" : {\n      \"encryptionStatus\" : {\n        \"code\" : 516747420,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Quo amet eos dicta voluptates. Accusamus quod et dolores quis et veritatis consequatur. In eum quia atque temporibus qui nesciunt.\"\n      },\n      \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n      \"kmsKeyVersion\" : \"r6sinq8fv1ht6ucp6m7lfip2nqmd72jz0p0vrhau6yc3dr15im5dapy84tdarcinjvtqtlfd145naqz1ipmtv7o3qkdbyukbxrvggvshlxsjyjakf\"\n    },\n    \"database\" : \"9arzem1px2ki13koq8du5gpjfaloq5798r7aq26ve30dyrnkofha332inrin5yucrd7ln5l4npjp96vvw8n9r6s62rjmo1qhln15cma39wsj4env64tvp7k2x2hwa66g\",\n    \"expireTime\" : \"2022-10-28T15:44:49.562657Z\",\n    \"referencingBackups\" : [ \"0n11j16zrr7xhpab63rhdo95hduriw3ljajqnl5nhvfiidyfhc0s5ipgrtxcstpyrbsklapdwhvb2\", \"hhwlaip75zg3g7ye6yhewdhzy98dcsndi5hi77yabec6gi6rv0h9xzr5sgk413x0bq10l7zcqzxlqq2bu2vulv48lsj2h5uk9u16o5scjvjmefdj88i90qbv69hnp279rfq0w6ijpq9gk68nsiojmbtjjzhbavygm7telcst4od88uh3qgzb37lczqla2vh9ho1s\", \"6rm2n1a4mzgiuxyhl1o3834jvpxrqx15lidwmkbn4nmk6b3fbd32u86977en5rcvehtp08ttet3bog1204qajkh1zpsdz\", \"apxspihb3pggw5pqomz8m4n2nj6satmax1mcec42h7m69l167vm2120ylpbda8fq0sccxhu5raa7mhkne7loyushc14i5tlxx80lcgik42tn7zu2x03641520hmthbl9wnag2ptd0ejmo18raqm4v1aq\", \"vl1w9vi23bbmfjfm3sau78fmffckuw7t0krpglv97gnnq55jm4zkby9aqj55oi7fxbbwqz2bfjmywwl7zbxhwy9udh8atc8272m43fljtz53r235v0v6529u\", \"wvoyd8s16xhgyo81tapskhi\", \"xenb050loeslv9083u079y821lh0v4siwl6atqggujfszkw726q58vi4lxcav4yp7wbf0l3ysf4uhe0upqqif8zn3lgdwha9swhekdey7kgve2lp2cnop1p2ucc59ep70p5oyboph3tgddz3n1a2\" ],\n    \"createTime\" : \"2023-02-26T15:44:49.562735Z\",\n    \"referencingDatabases\" : [ \"uaynn18wleuaf7euyri4xo3phux59y6lee4idqikpfn6fo42d784oav0wyoak5hac0wpg1i\", \"8xhz1ge1tc665u1qvm28zz2lw\", \"gwga0g5ld1qc8o25q1vfsm21sou6ckst6kpd5e\", \"0onalo7wknjqd95uvj8ydlief53fs9eup503as8k550e1lb43cogfeoygthi2xpyfbemfzzprd91iyhyrppwp56co2gu48yodzm6iiutjqgy6wqexsicmxdwpuxu7ytmofpru465dy\", \"fos30buh9y707j0y2vihwcmnydo3ug7j0rkujqqgfa36iuiu0ed64s5tgw0eg1nqkfa6hcip2tposatwvify4u\", \"yd0su112ek6ru4gucxr4zhkivenu7jyv0nsav7ge6zyz9tof5lj9apx4dp34xgxkkrpv66l990sn8m3zp1uojf2pt580dvk99kn9wk3637ctygcbdw5ofn7qidtbj14cpufat2vtotnu4\", \"9hkwmugmyom1rt4t31bxr5f4qnfpjuz5kl2zh4iwj2s193q3eq3m7odmcxyie7xyr\" ],\n    \"versionTime\" : \"2022-06-03T17:23:49.562808Z\",\n    \"name\" : \"Charlie Gusikowski\",\n    \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n    \"state\" : \"READY\",\n    \"maxExpireTime\" : \"2022-07-09T14:51:49.562894Z\",\n    \"sizeBytes\" : \"iw99ujar0tt4sh0d40cxpbm3kolpunwsqsp9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbeeb23b-5d61-4590-b4c7-c58a64c11e99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.563046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.list",
          "schema" : {
            "description" : "The response for ListBackups.",
            "properties" : {
              "backups" : {
                "description" : "The list of matching backups. Backups returned are ordered by `create_time` in descending order, starting from the most recent `create_time`.",
                "items" : {
                  "$ref" : "#/components/schemas/Backup"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackups call to fetch more of the matching backups.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ecb6f337-59b1-4cd8-a558-5fa97e356754",
    "name" : "Lists the backup long-running operations in the given instance. A backup operati...",
    "request" : {
      "urlPath" : "/v1/cac6ypwhnwq5p23jzd4ikjorktqy7qx80df/backupOperations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Floy Wisozk\",\n    \"error\" : {\n      \"code\" : 232903513,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Voluptas alias veniam. Qui consequatur nihil est. Natus incidunt vitae. Ullam id voluptas ad est sed.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"akvoglfi41jae55d2urnvybgzo2xbjwbhyxrih8fyn8tnov22ufaadp6j422a2vnj2pmn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecb6f337-59b1-4cd8-a558-5fa97e356754",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.560601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backupOperations.list",
          "schema" : {
            "description" : "The response for ListBackupOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListBackupOperations call to fetch more of the matching metadata.",
                "type" : "string"
              },
              "operations" : {
                "description" : "The list of matching backup long-running operations. Each operation's name will be prefixed by the backup's name. The operation's metadata field type `metadata.type_url` describes the type of the metadata. Operations returned include those that are pending or have completed/failed/canceled within the last 7 days. Operations returned are ordered by `operation.metadata.value.progress.start_time` in descending order starting from the most recently started operation.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "53b37bc0-ea19-44e0-8674-6b2806798b46",
    "name" : "Return available scans given a Database-specific resource name.",
    "request" : {
      "urlPath" : "/v1/p1z065nyy844pp15r24yb7jolivi55sespntha99tn9ug0mcsff1gdifyiwp23qfrsr",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scans\" : [ {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"ulujgmlwhqgah3rbbsw3n1hoexyqm2zzqnv1zm7nkbq\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { } ],\n        \"endKeyStrings\" : [ \"hsmibbve24id1a6kmog1ybvxm6izl38q0l8t7vt70ghqjpbt10jdan04vgsdo0fgowpvn4yoxbxqtkwu7f8dcjdn8syozx71xw7bvf0f0vm10t1rgx7\", \"j60ur1lkm99ofhjkqolcuwt7d5tljx0dqlpes1rocpgmz4sv8nx9ev9h5vgh9h4hjk7yf5mcj2sjxbrpsstbpos5xxes8gnx04cwkjqu0miz2q8s0namwphphuo4sh657cfwa\", \"8c4ilt4a2hajk2qloicrs8cnurnwsfvl4qfhwy12zvovy7i85fgo2diyo6rp9rwsmz9j14c0qc3v372h9\", \"4q2719wbgzuutjg10xwwjsqzmyxozgf7a0heon2sd3hinmkeiy8oixombxp6qomgw5n7cgouu0xszlofpkh3v3ajetguc6wne582cz5v16c60qdy2jg6rkzilc5e5056kh0et46pwwg1rmyqe\", \"gv6of921ypvnz7tj7v4qv3qextdcsbqrdcjevas0ounlv89m1\", \"e9fqc0008rsq5l86qs5g974fi8q89fxub9g2e3ggnthv2ihm1ag7iecqjlfrvg3q3yu0yjoz6qf2twa\" ],\n        \"dataSourceSeparatorToken\" : \"fik5a0hx0xceak972j18o9lx9g8e3r4b8ppelxda43sexjnk2cwzajhdo7ifp7qmjnromfaiiw95vlr9xbmywhgz3o4c97pfcfqvyu0aeepq1pljcvardjb2m3udt0czarp8vromury5xramrz\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"cf4zcdvto068ky9cxrxacglwicv30clbazamv7358bqoum6xodrhel5nvcc6pqty6rcal87984n2\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"38b8x5ktbo27rocs0iys58y91paimi0dv72pbh2dfhbf3jy51c3qfaynx53skfw1mi7q\", \"s7rymnzjbc4btwplbw4l7shafqa1lxiglu4hshr4uuco8ng79jpd4msun5pvdlaytrlzs6ivvfi1jj35knbk0a7e5ha670wsd2mqm9zpj\", \"hc6rdtfxakmpjttofpltq1ywdug9xq8e43zpmfe9j1n43mgv8fci8f8em9otuesyx9j2rvdrtuhb7550ijm4g15xkx88ua32p27jzc5iersefnntxrqgtvkjlgrd4iyzzjruar5k7wvykfj8ocwlnse1rx95g4s29ijex4eori4j\", \"qh48slh8l4vfpwduco6uutwqdi2f4iqbcumsmlunrd0qbp5218rxlupnbsqcgyqw86fvvks0yy9h9l2sipi292otzl936z22j5pqj8ycwrzhvcxyvrc8yvrz9botil1ownvcuap1yszp2hefea37kzfskklhgr04tk1e1d5cgxjapl0uhfss0fealf\", \"vb7hqrs5dyl34m61i7q0oprdifqq5fs4zmwqb94opyxd01i3w6pesu6sxe78qn4psbvyh1n04dac4vr7mq6kupfa1axgdzrxu69wik6hujje7u8ir63nbydrqnlphq0uz8f4hx0f3g0ftneaoqxi93c68x3b3tnzlwj3zeyxapdfvt0jdzhufq1t\", \"uzb34ag3jrm3268mbohox39acgv1ao8jg04blv57sa7dehgwyxpadiqrm600er4piq5899vkycq2791k3hwwz3i0zk2ox983r2rkhbylb1zm9ad5iqmyq3xb\" ]\n      },\n      \"startTime\" : \"2022-11-24T14:33:49.558711Z\",\n      \"endTime\" : \"2022-09-25T17:32:49.558743Z\"\n    },\n    \"name\" : \"Edgardo Kuhlman\",\n    \"details\" : { },\n    \"startTime\" : \"2022-11-18T15:49:49.558815Z\",\n    \"endTime\" : \"2022-07-23T17:47:49.558845Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"ibudgqgu4nq4lctcrw7tj9mwqhnu7b5kud70le8v5umnptvnb9ptzxwq3qz6xu3g8coupzqid3bhptg1zohi98zp3w53tdz23dcbqqi1g2sezc4rav77xwyw42ua55dlbu86af5n\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { } ],\n        \"endKeyStrings\" : [ \"qh6mqui3ip0j0klskgcmlrhdtriqwrsyvgm2j89osng3nmr6oh40821sow1krvxmzc3z81jttgfo0p5igijn1yypx2sc6slm1v1q2hpbecrt2evfxgs426d\", \"01i7oxfsqri96rp1vcfpbjtrtjakffbnw398wijnm24tsgr83iicxwp78f7ywmfbe7xqw1jfdfpeaudyidcaoa26b41pszp3skudgm0mm80icmpbt\" ],\n        \"dataSourceSeparatorToken\" : \"i54u9i3i8dy20p1nak3g1t8begh1\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"5lhc7npn9379ompkb9ravjqz2020zhs58b48w5b6j2x7dw4uoas3o36ox6kba6n6ssx6tsems8iczlca97qryohx0xw\",\n        \"metrics\" : [ { } ],\n        \"indexedKeys\" : [ \"18p4yiluzopyzk3gsrvbh79y8ad017t5izabvfdyzltoy1lhrjz26qkp63h15ob1ggn8upkay6ta5n8zmq5u8kl76xecfhskdw6vcsbfcixnzb84xmnq2o7pvwtph1rzz5h9wb6\", \"zfb5ua2qk1n4v7m9tli1d9o7elfqfv9azqztai829wopa1gf3g5qdjtm2zzrw5b3l6jvvi1u9m821zfwqvtidfngbi\", \"l7mqrkzb1zhii98hs9cfvc9h5wohudn9v3gowhuoo7\", \"u3rjxxjjpr1n8cx9vj5fb9f6mja2lrwvjch8sne6n98p6f0u81pzeydbvqast20smo71rvgwlelflan4mknt7f5vm2pkpi74w3bt7jyuq7wib9re8js57mah30g6hw8jknzp5pjgbfkdewqyrm82ih7hh77j5k7diu38viezv2et8aa7y92t8py3cj5n96daj\", \"03wuk0arj5qdowtog9ga0shvcoani63xr4g1s9h03pbcpjcfab6dd7camtma5mkr07gt11d23knxvl4pg8k6g1egp7s50vq6gbumbzjdrqfb4dvt2x8n6jw56t8o3xc8qenzv265ui4wzplnlts6k5u69k1zv06r3d0dbwy3hpga4kdwxx\", \"mfd0zj5s06lf81h3gznnkopxmixpsuesd47ltd7iujj7gnztaujmb4axybmlph4iqvf8528826zhrtxwu9n1lbo73t822rn3jbpciqvac3r1wviw5zkbandij7frcfzn0wpl4yo4gzm4vy3d200gyo47vp742v12buyk4m0ehgo\", \"vdh349eg16q3qalofjljwy4cyaqhbbpa2j0iygr1to56lb8wy024734e3lw14swgm67krr5sftip8tgi8e4zxsw6nfcrtbfrj6ekc8j0zv07o6nexstuoz66glovqs2euuqf85qldmbt8njtxn0alq8h1vosx2lldm59hsvvyy\", \"b1jxnjp68cr89vyfa82g6q4c79cilhuieltpdg6epd0sl9p3yzdtte95zv0ezy9ewdxv1f5gxgwqv2ldrtzmjtsu184cqzrkp9n0uvdt28tnj1l08q86cj50lp0axp3osvdigh0dyjd8mjm235onc9zqfys6l3a57hki4cj7vz77ri43nzkc4m813esmhhs8\" ]\n      },\n      \"startTime\" : \"2022-08-26T15:37:49.559053Z\",\n      \"endTime\" : \"2022-06-10T17:09:49.559084Z\"\n    },\n    \"name\" : \"Libby Corkery\",\n    \"details\" : { },\n    \"startTime\" : \"2022-09-15T18:05:49.55916Z\",\n    \"endTime\" : \"2022-08-17T16:44:49.559189Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"e3e1w88gnrcobqd81iyjcc34r5q2pq3hqnzi5t3erylajozepd57uazv6\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"01zvz6c1eaj2i0lpvprqb6bm051ei9spiyh9ii77gv28bpayh7vrr69onr2xnqd1xbka3pmztquax74heodsywj2i3iixp25s1u\" ],\n        \"dataSourceSeparatorToken\" : \"9ib52yqle8rqi0n6mij3hbzah09qmy1qv1wyrilnb5s9x9y982ms09774imf5s04l79ycncowurkkit4wwzvjtl9q3g1pdlx4tvs0viwwnonrcd0ocoygj4o0nplnalcc77pbsjnhp2xmje\",\n        \"diagnosticMessages\" : [ { }, { }, { } ],\n        \"keyUnit\" : \"CHUNK\",\n        \"keySeparator\" : \"r6tapbiupjqs12jyqqpfys4hhkz79kzusm7o32eyy3nl3exki5wemqrkbnbvhrtnya87b7owrz7dm1122v3qkm8j5i9kv97iwzsrj42lrx80klfafvspudhufspi\",\n        \"metrics\" : [ { } ],\n        \"indexedKeys\" : [ \"8uoexk5fk8xrgwbhplnpmg4eqsyz3iyfvppz4495afrwjjijavuzn4pc43vb4mgfsy6a7x5cwgrobzou5k34p6\", \"xt9ca4bqokd2virfqecire688d0vnfkiyrvxpzhjlciuvrukyd2onfrhrpd9zs0bb8j6v9z9cu\", \"uawo2vs528a5z0a36o418utx5mosr9fbkbrwj7r96ry8c9pk517\", \"rjf5c4czqia0hcnxt7z2fyp5zt5deukvl5x0d5bvz2xa8tu99u8rsrqjufjzudnzwr6coa4falnp9yge0xtsgxs2m89puv6mcbwdfuobj6r81t6gi66sosvr9udk63g0hfd90a2a55zgvs0rqbvnr2uyknu3jiv4y90hqer\", \"waqure5k51lzqk3bwun92\", \"vblcvxz8xmg90pw7d6fmq6szwc2lvaakkii5b81c358xj2db272s3z0v89u7da2weloop07wpc1all6fx9kax3xrzk2rp4ddcrn2fo96uc8ac4rnvk9hkgw95pml8tqp\", \"wvlj9vp\", \"dfq9zmopsqfmokxplgxxrvo40zktxuke9nlsp7ktpgq0wsqv15wp70twace8kium8rkwke853m91xkcuw0ky5h1msxnghywa3unq7ec1qhtwoqbfl89a27i15f707jgg208mnt012h5qxbe5otsea098pk8lcpc2pud3j9virs9rb8iv4sk2s9mk4kkrwk1v\" ]\n      },\n      \"startTime\" : \"2023-02-26T16:08:49.559373Z\",\n      \"endTime\" : \"2022-12-30T17:12:49.559403Z\"\n    },\n    \"name\" : \"Mckinley Harris\",\n    \"details\" : { },\n    \"startTime\" : \"2023-02-07T16:32:49.559477Z\",\n    \"endTime\" : \"2022-07-09T17:42:49.559507Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"z1yhu4b2mw8\",\n        \"hasPii\" : false,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"x6a3\", \"3vmm5hqk67tggekqjn87z7y9g1qrx13zfgw6emvwqc3lw8tgr6f6r14zpq9yg12ixf1995f85j0qr0isw9nmexsrvxyeptucxs1f6sf2jmqu2dfistkiuolbi5hz29urub57q3rdfgf27o9mc1rz69\", \"6a8v9hg0b1if7g3dacouztl0haprocwdwap335jttw457125xq6ztueaifm3duk70baz1b1tehz63so5b7ydomkt\", \"d5cqqio8kah174bgnya064qzurc7f8gq50qk3hobazqrqkx0gt2xt72bjrbn4vedsxhqhptdvi4aau03rdsdr41\", \"kqs3c1b6gnrj1fw81bgy6540jv2kywc63neua089jdn7x32t031ua80oqj2gsjlmoav8l1oq98vpe2f9fc2430l82a7wz6kz1y23bcni0jfozn9ggn4oznj8vryqfz9i8xw92l5oyoyzus2by3j\", \"560ftdy\", \"wbxqwjh2gayrip2q03k02i2ljry45cgiiph961bo8vl2c92rksimuqs53p876pwdei3hj4aw38bb2swh0y4an5h3yymf8v1fsqinl1mhtt2qahs34906s4h778wak5mn7\", \"xbinvenf7p7bxhdvtiztobrnxx33f0d3c8hs4g8anl37u5itpn36zgs7f881j3moru3lmde858zbpfpzknh9ljfg5f8pq9vreupbxn4lktf9mn8w5wh6ylthnga126uoy4fd56ewd2hotrh6dcaxb14k4hco135rz7hmfdgi8dr0al7er8pb\" ],\n        \"dataSourceSeparatorToken\" : \"byecinnhh470x64o28ravhhdvb\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"bi9bz26x43pn8q2k9ate3kml2b3ec9lfzvg4w8verm7r7x9iakuyatz3khm0p20sbfj82i82okxpkhhs\",\n        \"metrics\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"44gig0g6xunkmyu5gkc39sff9p3byiuph2erudk70opfnom\", \"729b00y8p9uhbsgzacc6eayqlqrzr6lnfqhd9fkb6ffxl5hlym045f6fzj6olie3w8ygyrwfwzu3zcpx8oi8srof50pzhle3di2n5tvkjam99y5vks673fehi1jae60ziusei\", \"5hyij79t1u2r9hu6l52htdjqrwn2zhhz4sd56p2mydkf7x6z3k52znzgorwi3mvy8e9ygnu68ix72\", \"j5r8giq9sby11fhsnblbfj27e1ugcxtpgqpymb3kcm0gmvve8r4prcq0hk6d5kea3y51wcgdnilzws7kqo77xuqv19lfebym5mcobh69x6x20xp9wvay9u0ymcw3igim44t8q16gexh7qj4ar6uthv1qkl1wnv6\", \"im0zgprwop4fnodnoxqe1r1l4bri68fincc4xdbtctrizgwns5k2y8px0fl1zrzdk6hfofra5rww5v6aov0aztrpor9v0ouoj5q5kl5oo99tnyxzqvvn7goroqd62qmca4kql1b4qecz6miigq8o7jwd78c74ztbfj9t0p259z9kg19z\", \"inj14ylr\" ]\n      },\n      \"startTime\" : \"2022-11-29T17:11:49.559747Z\",\n      \"endTime\" : \"2022-05-22T16:40:49.559777Z\"\n    },\n    \"name\" : \"Elliot Bechtelar I\",\n    \"details\" : { },\n    \"startTime\" : \"2023-02-23T16:26:49.559856Z\",\n    \"endTime\" : \"2022-08-16T16:42:49.559885Z\"\n  }, {\n    \"scanData\" : {\n      \"data\" : {\n        \"dataSourceEndToken\" : \"bui504sxknwi3z9vb89z4m2o1r1tw64730xr6myy5jgul0cg3qh3donpuyqx29ye75bartajear3cnjm0ehekcgjh\",\n        \"hasPii\" : true,\n        \"prefixNodes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"endKeyStrings\" : [ \"swt1ixk6p3345a6mi6tcs4798aab9tfdxicbjjwv2xtxtnq4rb4tpgghjscjoktkaz6jmsetgz8uon8mdt2m7y83wb5oc2ll764h34mir09pa3zvtyxih5x8h\", \"vsc80h7j4bxpxpv65sr2anp85g0cp9fzpahcugw0a0ayx63tqk474rwhnekhij5o2uu04vel64vwfldsu127su6ylo4tirbedcz8oj00fming\" ],\n        \"dataSourceSeparatorToken\" : \"hyrx4ngvhhzns8\",\n        \"diagnosticMessages\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"keyUnit\" : \"KEY\",\n        \"keySeparator\" : \"3k5i8900vzau8d865sod7u3gapfau68sulvld3vho3csbc9do49de2bfzwo5u3lkkhhvexxyjzsul7rwr0qjgqznupr4u5ggln0dxqxrzyh6sekhm\",\n        \"metrics\" : [ { }, { }, { }, { }, { } ],\n        \"indexedKeys\" : [ \"lju7u24vhdvjifio4hmid2lgnmzpxs41pj6jmuvfxl058gi1guga2by1qmpffed3yt4bh3bv0i40or72gtycd6ip55341z0d5nfb96cfdhebxwy9ff1rrwgvtsbrmh32ludb5htc1twkbz2d6f7\", \"7u1q3f1roigtgdi1zqd89320xehwzvxg2anf9pt8xr7glpgudambvm4tf7227fh54yc4xxjqi5utsy2g0j8udrj30btdn2d9aiksyozrrspdao6ngvnonuxcfdq0nhbn2ywj55swtwx2ush66d16gkj60zx89fx927nxi984615b\", \"9bcjdg41xowcx20fqwuz9735b9izvu2meyhshpm3ulo7mkp870mj5b6fn5egbxo2grg0\", \"4hyvxeu9in\", \"htfoxqpu5grotz3t2ppnp30ss8v87ppw9qyfwx\", \"4arov85j9i955cy6vxw1tzjes6phyjucwpjlslxysrfuzxgp568b3c8tus19cromtztl76sblst6eww6u9ry\" ]\n      },\n      \"startTime\" : \"2022-11-20T17:23:49.56009Z\",\n      \"endTime\" : \"2022-09-19T16:46:49.560119Z\"\n    },\n    \"name\" : \"Miss Delila Kiehn\",\n    \"details\" : { },\n    \"startTime\" : \"2023-03-05T17:51:49.560192Z\",\n    \"endTime\" : \"2022-03-21T16:42:49.560219Z\"\n  } ],\n  \"nextPageToken\" : \"xbteyo4q358qulyra8fp18xd6fa352i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53b37bc0-ea19-44e0-8674-6b2806798b46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.560365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.scans.list",
          "schema" : {
            "description" : "Response method from the ListScans method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "scans" : {
                "description" : "Available scans based on the list query parameters.",
                "items" : {
                  "$ref" : "#/components/schemas/Scan"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ae6a582-ad1a-4f60-9bb0-a90d3b59d1af",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Miss+Teena+Haag:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ae6a582-ad1a-4f60-9bb0-a90d3b59d1af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.558448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e1330b0-eb57-4aeb-a38a-35e0232b750e",
    "name" : "Request a specific scan with Database-specific data for Cloud Key Visualizer.",
    "request" : {
      "urlPath" : "/v1/Diego+Jacobi/scans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scanData\" : {\n    \"data\" : {\n      \"dataSourceEndToken\" : \"9wz00j8zt2ejgc1rzji6u7hvke6\",\n      \"hasPii\" : false,\n      \"prefixNodes\" : [ {\n        \"startIndex\" : 1815389719,\n        \"depth\" : 94020194,\n        \"endIndex\" : 2216753,\n        \"dataSourceNode\" : false,\n        \"word\" : \"hox9a43zo3p6jarx86nrysocwhhhe8wbkbdkxzxyexc41pbjhp8usbvn1wt\"\n      }, {\n        \"startIndex\" : 816195683,\n        \"depth\" : 1905454259,\n        \"endIndex\" : 899789466,\n        \"dataSourceNode\" : false,\n        \"word\" : \"1tvi5cd2wn8cdrfnpwjqi9u0ti5p4b8fiay70idcj24rc1kuvgcuv35kud6fjyxsqnbsgh7fzz7e32mitz25ikyucp4sst6tj9mt0counewy0tewys3pwvlnu7eom8eclj3d4x2hdi1n793bjolqbu75huij6gxjte298rtcqb0d2cebfvmy9wfe\"\n      }, {\n        \"startIndex\" : 2065705671,\n        \"depth\" : 1950191537,\n        \"endIndex\" : 1894405028,\n        \"dataSourceNode\" : false,\n        \"word\" : \"zltcmx7aqffr2qq2lb7qetdmmywzwaumn6ywolj07qn5aesycqtu1pbojm2cmozwydzq119zggtyy41nca67hyo8ii1lrt7pkupuapb62o9hwivlidar8u5f07302dc9ys70f5bewj60upr5d4swgsw0r988oxht3dacr5\"\n      }, {\n        \"startIndex\" : 973213457,\n        \"depth\" : 184968017,\n        \"endIndex\" : 1557973169,\n        \"dataSourceNode\" : true,\n        \"word\" : \"p0nz4v6t5kwyxc2bsm1qynhkr7w1ik1hh367mllfhaqxl2kl7mvj769pattv9dnbv1vxudi7savj2n49ug4\"\n      }, {\n        \"startIndex\" : 1980387596,\n        \"depth\" : 81591141,\n        \"endIndex\" : 54687516,\n        \"dataSourceNode\" : true,\n        \"word\" : \"q8jgco6s5uqq3me94upalo5joaz865nl22x4m6ebc2xrx9tk26zaw9i\"\n      }, {\n        \"startIndex\" : 957197338,\n        \"depth\" : 350038552,\n        \"endIndex\" : 866003207,\n        \"dataSourceNode\" : true,\n        \"word\" : \"e6rjvn6081tydv3rkm0t9voy1tn2e4\"\n      }, {\n        \"startIndex\" : 1932088111,\n        \"depth\" : 1940708429,\n        \"endIndex\" : 1201561169,\n        \"dataSourceNode\" : false,\n        \"word\" : \"h1r92i57h0g23xcc4s692mw5u9lnmugfic1sacm9o4uv8bwxzzkfqiyjk32dn7djhc2u2dv5nyj8pbw8495u496l5etq7htfwsekvtzafxc1g2ca39kyv0v65gxta3bfvh98fxe1zvtegip6f0sk1d5s3m0h0yn1xwuc7055cbak9qux0ykqh8tt\"\n      }, {\n        \"startIndex\" : 888803568,\n        \"depth\" : 241496083,\n        \"endIndex\" : 1691549364,\n        \"dataSourceNode\" : false,\n        \"word\" : \"4pn0caoniivexqvyv43z0tz3ycvdzp1m8dnifj6t1c9afgoiasau\"\n      } ],\n      \"endKeyStrings\" : [ \"9xr8ee3vl3mnrrt8u0at191qumqvxpaa2632ie83nhao6ih4vczm46wcr9iieivtwbty6qyxvt7u2ifnr7cy1favv3jxob49mp6zcwhpwqec\", \"1lq5k345owzfcxpt2pmvyf3an33wwza1c879v39i0nva79s6g8vvr7ckrov56yufarddm87b5rc23wqubsqg4efi9nytt\" ],\n      \"dataSourceSeparatorToken\" : \"26pkfyamy2a7dd8b6wrctwhuwzfd8yic0xam03uwvm75e7arpfi71d64xb99lh7gx580r1x35cahmvwsfxv1dd89i8ello38sm565hze1k2u9qyvqyegdd3c1wmwer8zuwkstm3mhqs083r8oa02a9n6fpqywbvb8r2nk9fvjh3bbj534hhbgg33xl5f0r4ujzqumtid\",\n      \"diagnosticMessages\" : [ {\n        \"severity\" : \"WARNING\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptas et provident. Eos illo cupiditate cum voluptatum ad maxime. Quibusdam commodi nesciunt voluptatem est. Ut perferendis rerum et. Exercitationem itaque ea fugiat dolores ad et distinctio.\",\n          \"token\" : \"e0sttmwfrz193f2ohelqjx4v\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatibus soluta sunt. Ipsam numquam est est qui magnam consequatur. Quisquam quod aut blanditiis tenetur inventore. Vel voluptas sunt illum. Inventore doloribus et ut omnis excepturi non neque.\",\n          \"token\" : \"3rw00w3gqefrvhehh1feymqj9h4wijqs0cocts5j6qac26pmuhkc346g0emfye2g9hz6h14c8cluk5fmhzd20l1e1te7vhu1jesq93p7bbnc21i5a4z86hksq4zz3lavh7wrj\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Ipsa voluptatum nulla ut animi tempora beatae quod. Sint deserunt sint est consequatur nihil illum voluptas. Voluptates recusandae aperiam optio.\",\n          \"token\" : \"v4g6vawr5fo9jy11rdpi3rqi291jyqvnxtutk01tf71o6xsq2brxs44fnp3vxv3drd6de81aj7tc082y5nayhkwpsrj7y1tt7mtofnkxigt8cq5i34yxp1czeglxvkhadh6vtzmvja5dfjzu4r6xa2t5w43np8nondqy1es3b90s9s29tcz8qcf8664v0hj\"\n        }\n      }, {\n        \"severity\" : \"SEVERITY_UNSPECIFIED\",\n        \"metricSpecific\" : false,\n        \"metric\" : {\n          \"args\" : { },\n          \"message\" : \"Incidunt esse ab rerum. Labore perspiciatis velit. Culpa neque eum commodi voluptatem. Distinctio inventore ratione totam. Sit iusto ea sunt voluptatum ducimus esse aspernatur.\",\n          \"token\" : \"870uj4xutwg0budaefwx67h43ugd3kxqk54q9pn9kkoam22wjvtympe9w31717ylfszsnmficqc5r98mh6usfhg2r4x3u4tpqs8qeakg4awr9ut6lk12nr7bp46dtgym88wrs6z0h8bis23oyc8y964vy9xhcn935mnjupyiq8\"\n        },\n        \"shortMessage\" : {\n          \"args\" : { },\n          \"message\" : \"Corporis sapiente ut voluptatem quia. Explicabo aperiam officia quisquam veniam veritatis. Eos natus laborum ut similique enim. Optio iure blanditiis beatae laborum voluptatem doloribus. Deleniti labo\",\n          \"token\" : \"sqxl2ggwycovhmxk4sbkpb48xmwqmntt9136bo2j2k5m778r8hxzo371u23nj686saej5e8itfghi5rz4vinygnngyy6pnl2yhuwobcdz6w5berfgtd5bm9cook8jiw8efes0ag0lw9ejryh9b3lq8fq5nuc1ipucrngldevm1l700ukymkypwb703kri88fh\"\n        },\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Earum fugit quam. Voluptates inventore ipsum neque reprehenderit laboriosam vel. Sapiente repellendus non est aut. Nostrum suscipit nesciunt nulla facilis aut.\",\n          \"token\" : \"d85gbrqk4o7zsokr3slxyjypcx84zhjw95oloj81xqaupjqni2nrd193f7w51b0yhkqsatjiwu8qhteos0dd9s1rmydsdv87d956ziaeftx5d38yctc0svxg3671mzoytcvrrkb2bvmlcw841eak96j7rvztkd08dwngldr5wb5p741jdbcel2rsecoach8hxfd\"\n        }\n      } ],\n      \"keyUnit\" : \"KEY_UNIT_UNSPECIFIED\",\n      \"keySeparator\" : \"rgp30gh9b33ojaqwb6pmzjenz8lpitvqtt\",\n      \"metrics\" : [ {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Temporibus ut non. Laborum est qui autem. Eveniet sint et maiores. Minus aut aut perspiciatis voluptate sed consequatur.\",\n          \"token\" : \"4w0e3q9coscq1mx5bkro1afmgak18pzia9bmbanotzo92k2d1b8hewcoi55wc3re67eiz97ifk0g9njr14l3u65i7px9iviyntz8fgrl93ksoakzrxz73v0nr85\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Ut id atque nemo exercitationem iusto. Omnis impedit enim repudiandae id saepe. Et sint sed repellat. Aut nihil omnis dolores officia aut cumque aliquam.\",\n          \"token\" : \"m77yzrch0613xdnp08vmy1j3rfapkwbembg002am3slh1zfmfiev12hfsjwgwq8w0de86v12k2rhtr5jet3zczbsycav0p198eply\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Quasi dolore aperiam non quibusdam. Velit aspernatur ipsa aut aut. Velit suscipit quis quo qui nihil itaque facere. Ut et voluptas ut. Quia quaerat ut ut.\",\n          \"token\" : \"x5n8lzaapdkdee7a6v1fmzsi7s9g8n01mrqgb73jle\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.6577805995370513E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Tempora officiis voluptas praesentium fugit qui quam similique. Et totam ut placeat et illum quisquam deserunt. Voluptatem unde cum voluptatibus. Incidunt blanditiis magnam.\",\n          \"token\" : \"6qf6zrc6wmew47rrgof48weayvuwr5elao9y003htyr1tt5jb5fo7jziojwpstui5qbrcudml76ovoguyhhb7cu2n1ci1gk82jag6k5l14dxr5x4aq5lyslkw64wwzvak5g7jeo\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Dolore veritatis voluptas voluptas ut. Quo molestiae et animi dolorem id inventore saepe. Quod sit quo molestiae aliquid. Eaque velit sit. Corporis quis tenetur soluta.\",\n          \"token\" : \"ta8ox1u1osdv0z8wxqzoqcep1xb99fabi8lv8x9kj\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Modi voluptatum laudantium eveniet recusandae illum non blanditiis. Reiciendis velit corrupti qui. Magnam rerum neque illo.\",\n          \"token\" : \"kjyqmwehf0piv\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"AGGREGATION_UNSPECIFIED\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatibus iste corrupti earum debitis sed dolores. Magnam dicta impedit nihil. At fugiat repudiandae voluptatem. Id assumenda architecto. Libero consequatur voluptates veniam sunt facere.\",\n          \"token\" : \"zajx3eybj1kducy0cq99hoe9l24ppsonb\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 2.1542895024620514E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Qui sapiente laborum cum nisi placeat voluptatem magnam. Voluptate dolor est. Ut necessitatibus quasi eos. Perferendis quis eius. Deserunt dolore eveniet sed accusamus exercitationem velit.\",\n          \"token\" : \"996u2hjwo94xc770u3gubqri7kldttcso4bcbgq8to4j0uzptldkx3lsym43o36rf1oav8hdzi2af8vbhmco8wcwksuh9hmm6bm1u2aav6trj4vkk6hejolkuvr5nsb5qi4c72ypnk2cm2b6h99vv0umutk1g7zz1afjijp81v77wgbms7\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Vel accusantium hic sapiente. Velit eveniet sit nemo accusamus culpa at beatae. Ea incidunt repudiandae. Nihil animi rem aut. Incidunt doloribus quos aliquam temporibus illo voluptatem.\",\n          \"token\" : \"wnc3y64yb8eycgsjmy7esfyu48di713vu175mggr8kg8adjdu8211ja3srbbjn54q92\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Delectus aut recusandae quasi voluptatem. Quia dignissimos qui assumenda dolorem et. Ratione adipisci officiis.\",\n          \"token\" : \"wvpv7izi7zwzcrfiy0di36vlohozb0uheeyvscgh971f5g4866xim6pxbqviylcukktoxv3zjqwxmih6a0h5\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Quia ex et deserunt optio quia ut tempore. Qui ratione architecto sunt. Ut provident tempore eum maiores. Voluptatem harum et. Occaecati tenetur soluta numquam sint.\",\n          \"token\" : \"cz67hdg6wm62mya6x4v8jxdiettewcmiwf88bony58uebdfeap6n46x78zvl5ftd2py53hfopnrexqpps643ifh0rnv2ong4c7wd0nngw51euuhyexostwfsspzydcid8gmpfr0q4offs0nftd5rqw7xjhup8dc\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.3174957861821838E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Ad aliquid quo est. Temporibus illum sint molestiae. Ea non itaque. Voluptatum at voluptatem voluptates qui omnis.\",\n          \"token\" : \"6bkzl0h5qtx3iik88e852sr9y0t6fss8qp2ept1xnc29f2tzzs4h9viahnbupbrpqw1k4cho98msjdej1evygj9trzqg4z11uuup0xbzw4dy20isscno0ripkkez5wznq62d8o52g37wh57ht\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Fugiat nostrum fugiat consequatur eos saepe fugit neque. Minima dolorem dolor et est. Qui id ea in. Qui eum hic velit dolorem. Provident repellat rem occaecati.\",\n          \"token\" : \"vgsby22nl9yi7vpnsvf9l6yaz3njzm45tmmi7sp5poe83bmursashwnp9xfbd2ymg1b3fcv362s1gdyic434rq5erzv7p45xxys34ty336y65vl95v1hncjzea92pyde7dtaokzexsp3nj3t9tmq96dlu4uinty\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Est officia blanditiis quidem aut velit ipsa magni. Harum iste et. Et praesentium optio et aut omnis distinctio blanditiis. Nulla reprehenderit labore sit aut qui quia qui.\",\n          \"token\" : \"flc9masop9nesy7ia2xrbz45fb4zutv1agkm4e7wolsxkdg2glu8407af8129lz3owagv43w206azb717fnwp4hjl9gpoqyrgm8bugpm1sn\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Ad facilis ut animi facilis. Consequatur eveniet iure at sed reiciendis culpa. Perspiciatis quaerat vero nobis aut.\",\n          \"token\" : \"0m7rujjxan7ynttv1utkw8wxb\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.0113287298037423E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Temporibus et explicabo qui animi autem. Possimus cum fuga nihil voluptatem nisi dolorem. Qui qui sed voluptatum ut aspernatur. Iure temporibus impedit libero nihil enim exercitationem consectetur. In\",\n          \"token\" : \"0fq95lt\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Rerum nihil ea similique recusandae. Hic eos et fugiat magni. Et enim adipisci atque incidunt non deserunt nisi.\",\n          \"token\" : \"w1yimxx24khhpni0xoqqa63kv1o8qxelfv3ee0v0svzyjmdgvxp4cvd55tvhkd1r0gsqxknm6661kc5ls7mpzfrpkr37\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Maxime nulla blanditiis consectetur id dolor eveniet. Repudiandae amet atque odit laboriosam voluptatum labore. Cupiditate mollitia ut harum. Natus fuga aut quaerat. Illo cumque corporis vero est nequ\",\n          \"token\" : \"m7n5m7k2kpen22c3r9mfwmvhi5qswujrag8ogq\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Velit qui maiores est nihil. Animi beatae fugiat voluptatem hic porro. Dolor tenetur praesentium expedita tempore rerum. Aut eos sit aut quibusdam aut reprehenderit quam.\",\n          \"token\" : \"b0efmdru9f1b90qq66ik2s7izalcsdwwyzntl2fev3epa36ga6sj5813m1nrl5rpox0r0d9d073swxkxevssl0mbe3t30dmnt6dkjae5tn5by90lcpav232olep69mzhg3p1c41nufpu48tvyhv2dpow9c1zxg59e2ah9k462cluudgp5558p41gn4fzfvi93\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 3.2152137286763415E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Iste repudiandae commodi eligendi. Veritatis odio alias error. Itaque doloribus sint.\",\n          \"token\" : \"ekn5481s943huwmrtaymzaej0iqn9mxr54rdys3d2ee7vcbtwjgsp7j9e9vmzlqresz3p6tgali8e861ubcwrp7pg6fr92cwn1ogi44r0mbpnb7vrymvg72xfwrlnpd0pihcsxzkch2dgbezrjfkwfgg9chpeqyxs7qq88oa6s6u3uu93iulc3ciocc6e5q6\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Itaque in in est enim ex et. Quia et dolores magnam reprehenderit fuga nobis. Dolores ut excepturi voluptatem autem nulla. Aut est voluptates nulla esse autem.\",\n          \"token\" : \"f6u0oipz6ml6bvqrylx9ilb\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Sit hic sed voluptas. Quia corrupti neque consequatur qui. Nesciunt nobis quos qui sunt accusantium dolores animi.\",\n          \"token\" : \"fgw0qqcfy4ll3cb6ragsypqy3hk4hqyu4pu7r3rj2szas9ya8tz5264fy8mugoqfizeq7itaxqervlohxbby0oapd77q6wbi2ebr3r88yeqfq8dlo590zlpst2ejv7tv3nfm766e1tyvy6a40esu5ybh91o68g9e9tf83im2nafubedc62hxwjx6lt9rbai7t8qojtwd\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"SUM\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Suscipit neque quae sint. Porro et et distinctio quasi debitis quam architecto. Qui cum nesciunt molestiae. Ipsam est error nemo accusantium aliquid.\",\n          \"token\" : \"tyulu6nc0dy7jcrbv1o084tcnv9682rhogjsh9nyguay77lltivtbuyyl6xhytok6olkq3uetpjdhqe24z\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 5.330682583458608E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Id velit voluptatem atque qui. Hic corrupti voluptatem autem sit. Porro ducimus eum nemo. Suscipit molestiae architecto quo ut. Doloremque incidunt asperiores et ex.\",\n          \"token\" : \"nwpr3fvxyx0b1ihlt5jvwsb4h1s\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Nemo dolores voluptatum. Tempore cupiditate est numquam. Voluptates rem quia et nihil ipsam.\",\n          \"token\" : \"2vglgtxa4o7y4hfvvnvnsoktzecs35396ikzoywf6il6km65zjd8t6oz2w8drx2i22ko6i8ybsd26nr9yzpa11p0ql408ku2sics69t2mxylv3u0s978tpek9i49awtnrqd6r3y73ixwm8mg1h\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : true,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Possimus perspiciatis et alias autem ad officiis qui. Aut eum et sunt quia. Molestiae at sequi. Velit voluptas ipsam dolorem.\",\n          \"token\" : \"1lomaiuhcriulgql04syrl64tysx1xw67c9vwrhzed1q1lskt0v8hgot6rb96aif3lw3wm42muc21sy5x0cuxi8me1v25ja19hzgr9mdwnce40topsawkne9g16dlkgqkvh5oww9eqvhiy4pdkxfsbho3xnlvw5fh36b3h9vmxi3gt0n91lbo\"\n        },\n        \"visible\" : true,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Quia eaque et. Tempora dolores adipisci facere beatae saepe reiciendis. Et quod reiciendis debitis voluptas ut.\",\n          \"token\" : \"smzsoiilcjit2bznt2wlatv0330fxwj675tyr5vo8s10qpe2hxdkff5xyefl9k8tq92frr0lji5zmvzqtbgzv2qex91ptddk72c3p4xe3u7lr5\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 1.8407430840863435E38,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptas doloribus sequi nihil. Perferendis veritatis et voluptatem. Numquam consequatur perspiciatis.\",\n          \"token\" : \"5n79u2w8ga6znd6uxhqzbl7fw19dum\"\n        }\n      }, {\n        \"displayLabel\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatem autem et deleniti libero. Deleniti dicta vel libero sit ratione. Qui qui ullam voluptatem rerum omnis. Aut quia dolor. Quis harum incidunt molestiae ex odit asperiores.\",\n          \"token\" : \"v3bgdq9ymzd7xqvet8wmpr4ou7kmebf5mldetklv0kc5zl8paldf4xki1rtrpdf2qunz4uh3ldpq8825y4x4nwtyrhqi7j8af7qjiwc3bevbep0lpcsrlqfv2bvaa3g85oexfybqi4wj87z2uabynpjd8vw043i0jwbqrwxwcb2wrl6uyx8m2fo0tpd08evi13devia\"\n        },\n        \"indexedKeyRangeInfos\" : { },\n        \"hasNonzeroData\" : false,\n        \"unit\" : {\n          \"args\" : { },\n          \"message\" : \"Est quas incidunt blanditiis dolorem maxime sit perspiciatis. Ratione voluptas ipsa et est amet totam ut. Quia voluptatem qui reprehenderit neque. Praesentium laboriosam ab quia qui non qui consequatu\",\n          \"token\" : \"bucgp63m25lecm3s6jaw6qgo6z6deszw0sppu5u8j5irddw8a9nrscoaz8hdb5c84nmszjvhiv4zjyx11adbh23c5kzyng6etv6dwi2u3\"\n        },\n        \"visible\" : false,\n        \"indexedHotKeys\" : { },\n        \"aggregation\" : \"MAX\",\n        \"category\" : {\n          \"args\" : { },\n          \"message\" : \"Voluptatem veniam laudantium veniam voluptas rerum laborum. Nostrum necessitatibus dolorem. Voluptatem quis cum omnis laudantium aut temporibus explicabo. Omnis tempore perferendis praesentium aut ad \",\n          \"token\" : \"kfdmzj8eijhdr9uhxnc2y1xodgx9p9y4how6gjnr5cchnxjayz6s1mzy9f390b3sw4laf6tzqur2avk6rtw3dj5g5sb84f520h9ijfhl6g1wjthifh6045\"\n        },\n        \"matrix\" : {\n          \"rows\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"derived\" : {\n          \"denominator\" : { },\n          \"numerator\" : { }\n        },\n        \"hotValue\" : 7.5421801650603405E37,\n        \"info\" : {\n          \"args\" : { },\n          \"message\" : \"Sapiente ut culpa qui et officiis exercitationem. Et enim sed facilis voluptatum mollitia culpa. Pariatur quod omnis. Incidunt provident excepturi quisquam reiciendis molestiae quos ipsa.\",\n          \"token\" : \"rq1lw8gwc2lgcp2qvdoaptr69l226xtwgi90adjc8k99ik25ptpe092tpj5onskuwy7x0xv6rnclocwsfxi1j2o85w2k4eefq8k8b9rclevt14\"\n        }\n      } ],\n      \"indexedKeys\" : [ \"b7nmtc0k5qzlhw7l1bddlqanbrb5j5kp0tcxvqjsanet6v7vtr57bs3civawxf7vi79kfxf72zekasurevd9194aclp8wlysxf\" ]\n    },\n    \"startTime\" : \"2022-09-11T16:53:49.557999Z\",\n    \"endTime\" : \"2023-01-21T15:39:49.558035Z\"\n  },\n  \"name\" : \"Bruno Lemke\",\n  \"details\" : { },\n  \"startTime\" : \"2022-06-22T15:02:49.558138Z\",\n  \"endTime\" : \"2022-11-02T15:53:49.558168Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e1330b0-eb57-4aeb-a38a-35e0232b750e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.558355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getScans",
          "schema" : {
            "description" : "Scan is a structure which describes Cloud Key Visualizer scan information.",
            "properties" : {
              "details" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Additional information provided by the implementer.",
                "type" : "object"
              },
              "endTime" : {
                "description" : "The upper bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "The unique name of the scan, specific to the Database service implementing this interface.",
                "type" : "string"
              },
              "scanData" : {
                "$ref" : "#/components/schemas/ScanData"
              },
              "startTime" : {
                "description" : "A range of time (inclusive) for when the scan is defined. The lower bound for when the scan is defined.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "833b2c54-b078-47a8-950d-0dfca7b18d9c",
    "name" : "Updates a pending or completed Backup.",
    "request" : {
      "urlPath" : "/v1/Cornell+Bartoletti",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionInfo\" : {\n    \"encryptionStatus\" : {\n      \"code\" : 1997107988,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Reiciendis non id consequatur voluptas. Quisquam enim optio et aliquid voluptatem cupiditate. Accusamus voluptas dolorem hic. Qui voluptatum libero expedita veniam et mollitia. Rem repellendus est.\"\n    },\n    \"encryptionType\" : \"TYPE_UNSPECIFIED\",\n    \"kmsKeyVersion\" : \"9nxehcx8k6cmpjq6uudeyji1s9m9\"\n  },\n  \"database\" : \"y8gjhejryip55ezqgsitjqec8jk15cc8hc5uoby82pe6o3kvobe9zkk3oqeovnegjo3x1bsu75hoatu2d89cns4u73simts4wf49pgjutlznvwt485bm6avvobbohqtbx9qxio2a6uko30tb8lq2ee37rtm16iivh2my1khcgm7rl96\",\n  \"expireTime\" : \"2022-06-20T14:11:49.554484Z\",\n  \"referencingBackups\" : [ \"tfracin2hdzxu0p7398w9umwzp9kivado2i65ogtedgcgduai7jht55x1u2nsxal4k1j69lnudqk3sh4v9zxcrtb2wexhm9ucbk340affvt6cw1ifze3ijk2ob4bvub1d9n47ig9\" ],\n  \"createTime\" : \"2023-01-15T15:10:49.554532Z\",\n  \"referencingDatabases\" : [ \"ydavi94gw08pli57zk136ycgf942h11pyvub2msj3or7mg3hay86ay\", \"4tv132pml7z2n6fukzvqoc7eap150j3sx3vxub70m2a7blk7nnufjheg0au3rmrabeqjjp6o5vav7prbkx9vbczv93oypoitd\", \"bdacke59x61s0u2mjyhfevkekgx4rbsle8byd4hxw84wnap0y142lhojxmtqbeikt1awzln578u8edduf843dqg3gldhpq7y10c0cc1pj6ib00ct5ko81kmba9jfkfr3w\", \"yp6o5iebjfkq\" ],\n  \"versionTime\" : \"2023-01-28T14:57:49.554592Z\",\n  \"name\" : \"Harold Crona\",\n  \"databaseDialect\" : \"DATABASE_DIALECT_UNSPECIFIED\",\n  \"state\" : \"READY\",\n  \"maxExpireTime\" : \"2022-08-26T15:57:49.554688Z\",\n  \"sizeBytes\" : \"be4v6eqzepiyzd156yv4a3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "833b2c54-b078-47a8-950d-0dfca7b18d9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.554919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.backups.patch",
          "schema" : {
            "description" : "A backup of a Cloud Spanner database.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the CreateBackup request is received. If the request does not specify `version_time`, the `version_time` of the backup will be equivalent to the `create_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "database" : {
                "description" : "Required for the CreateBackup operation. Name of the database from which this backup was created. This needs to be in the same instance as the backup. Values are of the form `projects//instances//databases/`.",
                "type" : "string"
              },
              "databaseDialect" : {
                "description" : "Output only. The database dialect information for the backup.",
                "enum" : [ "DATABASE_DIALECT_UNSPECIFIED", "GOOGLE_STANDARD_SQL", "POSTGRESQL" ],
                "readOnly" : true,
                "type" : "string"
              },
              "encryptionInfo" : {
                "$ref" : "#/components/schemas/EncryptionInfo"
              },
              "expireTime" : {
                "description" : "Required for the CreateBackup operation. The expiration time of the backup, with microseconds granularity that must be at least 6 hours and at most 366 days from the time the CreateBackup request is processed. Once the `expire_time` has passed, the backup is eligible to be automatically deleted by Cloud Spanner to free the resources used by the backup.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "maxExpireTime" : {
                "description" : "Output only. The max allowed expiration time of the backup, with microseconds granularity. A backup's expiration time can be configured in multiple APIs: CreateBackup, UpdateBackup, CopyBackup. When updating or copying an existing backup, the expiration time specified must be less than `Backup.max_expire_time`.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only for the CreateBackup operation. Required for the UpdateBackup operation. A globally unique identifier for the backup which cannot be changed. Values are of the form `projects//instances//backups/a-z*[a-z0-9]` The final segment of the name must be between 2 and 60 characters in length. The backup is stored in the location(s) specified in the instance configuration of the instance containing the backup, identified by the prefix of the backup name of the form `projects//instances/`.",
                "type" : "string"
              },
              "referencingBackups" : {
                "description" : "Output only. The names of the destination backups being created by copying this source backup. The backup names are of the form `projects//instances//backups/`. Referencing backups may exist in different instances. The existence of any referencing backup prevents the backup from being deleted. When the copy operation is done (either successfully completed or cancelled or the destination backup is deleted), the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "referencingDatabases" : {
                "description" : "Output only. The names of the restored databases that reference the backup. The database names are of the form `projects//instances//databases/`. Referencing databases may exist in different instances. The existence of any referencing database prevents the backup from being deleted. When a restored database from the backup enters the `READY` state, the reference to the backup is removed.",
                "items" : {
                  "type" : "string"
                },
                "readOnly" : true,
                "type" : "array"
              },
              "sizeBytes" : {
                "description" : "Output only. Size of the backup in bytes.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current state of the backup.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "READY" ],
                "readOnly" : true,
                "type" : "string"
              },
              "versionTime" : {
                "description" : "The backup will contain an externally consistent copy of the database at the timestamp specified by `version_time`. If `version_time` is not specified, the system will set `version_time` to the `create_time` of the backup.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ef1dfc4-6bcd-47fc-b907-3488379123a9",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Miss+Jillian+Goldner",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Naoma Medhurst II\",\n    \"error\" : {\n      \"code\" : 1820564609,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Et voluptatem veritatis qui. Autem tempore est itaque nisi animi rerum. Doloribus placeat maiores delectus quam molestiae qui cupiditate. Quis voluptatem illum nihil.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jani McDermott Jr.\",\n    \"error\" : {\n      \"code\" : 1135634247,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Suscipit et debitis. Sint nostrum nisi qui soluta. Eligendi voluptas consequatur voluptate illo et illum magni. Perspiciatis in quos nihil sint quos.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Edison Mueller\",\n    \"error\" : {\n      \"code\" : 1439882757,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Distinctio qui dolor. Aliquam sit facilis tenetur consequatur rem nisi. Reiciendis perspiciatis sed sed unde. Quod facilis sapiente ut voluptas.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Emilio Mueller\",\n    \"error\" : {\n      \"code\" : 1960485110,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Rerum adipisci modi. Possimus accusantium illo omnis debitis maiores. Accusantium ea nihil accusantium ut quia natus labore. Laudantium modi impedit. Impedit non assumenda vitae est quas.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Stephani Muller\",\n    \"error\" : {\n      \"code\" : 837669845,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Commodi laborum consequatur sint in consequatur dolorem quas. Odit voluptas nesciunt perspiciatis. Velit deserunt ut velit. Quia deserunt consequatur in dolores.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"013yc7mybihbemtl2v77upv9gdoxmwtw5y4tp4k3z46imm8wto1k8e2rr9uk0vezw0o6g3d0mvrevdwc555pqtbz3lv6n4qtpfwseaf8w1kgnl1clj2hc86hdlal5j5k1fki6f4gibubz075p15zctnrwk0jk0jnzj32qcin74tx6w2h21950bm4sb0ta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ef1dfc4-6bcd-47fc-b907-3488379123a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.554326Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dac4279b-5885-44c5-8c7d-21149324099e",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Teddy+Green",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dac4279b-5885-44c5-8c7d-21149324099e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.553631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ec537a7-af6e-425c-9a65-012f198ff29e",
    "name" : "Creates multiple new sessions. This API can be used to initialize a session cach...",
    "request" : {
      "urlPath" : "/v1/6hr6d2w2u4ds081q1nlqdgwcm3qgag120ucbtsf536zm0ygq41zzhkh2dlehzv5bbj0h6b2bltimz/sessions:batchCreate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"session\" : [ {\n    \"approximateLastUseTime\" : \"2022-11-01T17:28:49.553033Z\",\n    \"creatorRole\" : \"oggqqer01tzsbs4of0gksv7n16n2r14gn7lsg0934w5az83wpfrwqb6fggwtcnkuxco8e5b48t6btliuka3i1uvmqhbuj4v6n56sg94nlvk1jjp4xr4hupahmqk1ib5a4vffy1xnqch6z4p80oq\",\n    \"createTime\" : \"2022-11-15T16:49:49.553077Z\",\n    \"name\" : \"Michel Mills I\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-09-01T17:56:49.553157Z\",\n    \"creatorRole\" : \"anztd2982v4hh787ws6qv7n7bd47qg2tbwtlziz678l4ayopbmvjx8q7zhs4uaf3yspfhsb5398anxz4vhfbft1a9dpf1q6kcsijlcxhrrzn0oul4rz0bes8sjjrp4hio\",\n    \"createTime\" : \"2022-04-18T17:17:49.553199Z\",\n    \"name\" : \"Ms. Sebrina Kerluke\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-12-16T15:39:49.553273Z\",\n    \"creatorRole\" : \"4ipywrxsx7nx3n4xuutzcy2a5iyh7x4cdt6fwvd66v5\",\n    \"createTime\" : \"2022-11-16T16:58:49.553313Z\",\n    \"name\" : \"Carleen Christiansen\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2023-03-05T15:24:49.553389Z\",\n    \"creatorRole\" : \"hq36794i2n6k5s2xgnmhqjgu3ql1xut5kcxyj5xp9maa9gdy2bj803kgsftem3q5undo03uvligj7yljtuam1mmj78ywf0h02nekup7jc58rcqho4nxpq96us1mzlhc4eg7yepzyn9y\",\n    \"createTime\" : \"2022-09-18T17:36:49.553435Z\",\n    \"name\" : \"Mrs. Van Johnson\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ec537a7-af6e-425c-9a65-012f198ff29e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.553551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.batchCreate",
          "schema" : {
            "description" : "The response for BatchCreateSessions.",
            "properties" : {
              "session" : {
                "description" : "The freshly created sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03713e89-9781-4f13-97fa-e919a51e172b",
    "name" : "Creates a new session. A session can be used to perform transactions that read a...",
    "request" : {
      "urlPath" : "/v1/z1ihz2jvk5l5rg1icuwyv34qesvs6j6e1r6q9mxbwxb7nqn8omay4tsurpvd9n4h11sxwezdflp8hl3p9ux2twefxh4cbhfy8a4fv2nqdlmlp4x3a8wm4xc/sessions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approximateLastUseTime\" : \"2022-11-25T17:14:49.55279Z\",\n  \"creatorRole\" : \"jp1akw1r089zgstfgljpa949i6d8f8k5t9jiz28e9j0d6zccndw7bpbdo0vbxgzeby075dtoegze8k8q81cxv0ybtxd093yu7xrn303wn71ioa6tes2r48bw8k\",\n  \"createTime\" : \"2022-03-25T16:28:49.552835Z\",\n  \"name\" : \"Boris Kozey\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03713e89-9781-4f13-97fa-e919a51e172b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.552983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.create",
          "schema" : {
            "description" : "A session in the Cloud Spanner API.",
            "properties" : {
              "approximateLastUseTime" : {
                "description" : "Output only. The approximate timestamp when the session is last used. It is typically earlier than the actual last use time.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. The timestamp when the session is created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "creatorRole" : {
                "description" : "The database role which created this session.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The labels for the session. * Label keys must be between 1 and 63 characters long and must conform to the following regular expression: `[a-z]([-a-z0-9]*[a-z0-9])?`. * Label values must be between 0 and 63 characters long and must conform to the regular expression `([a-z]([-a-z0-9]*[a-z0-9])?)?`. * No more than 64 labels can be associated with a given session. See https://goo.gl/xmQnxf for more information on and examples of labels.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The name of the session. This is always system-assigned.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4c9f2382-a7db-4505-a39a-9d045d44d816",
    "name" : "Lists all sessions in a given database.",
    "request" : {
      "urlPath" : "/v1/2meev0bu5lh1xiy4jf8x9haaplda574z2ks90cw194ltvpkld78aypafjdkanvbdizbt79zk85fj7c/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessions\" : [ {\n    \"approximateLastUseTime\" : \"2022-07-14T17:14:49.552308Z\",\n    \"creatorRole\" : \"2blrr343m53rl1ijnvztu74rg7a967h134v75zdiaeuhalffqrcohevcb57diddcpn8xx2cuwdjr8l8vgeteqr4n9vqxghf7os35ihax0fkntykxtcmnjlw701e69c64kh7hk074l38ds0g3dt304p62pfz6vd7g0v6fruuvp0nhhir6ny1hrm7rz1t49\",\n    \"createTime\" : \"2022-06-29T15:14:49.552361Z\",\n    \"name\" : \"Percy Tromp\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-09-30T17:02:49.552445Z\",\n    \"creatorRole\" : \"jvfxojmnbadx752yj4gnr3ti0q4iyziqcb6w1ijiasbrtplhphbjg4imep4af2xywxqu2mvslcqd9rtvck17o1e3b3c6g0bjnbrxeoq8kiwm87a40irzr4nw515g5n8a9ti3ymejr\",\n    \"createTime\" : \"2022-12-08T16:53:49.552489Z\",\n    \"name\" : \"Mercy Kozey\",\n    \"labels\" : { }\n  }, {\n    \"approximateLastUseTime\" : \"2022-08-09T18:08:49.55257Z\",\n    \"creatorRole\" : \"8tnu8ptvs2s7lv4155ki4yth05fsr56pouk51ya6ghojz7n36vajd1havezh307wqxhaeh6wn021zamzvdbuw932cwzw49xmzvzr1jtqpa9ylpxc8oz3fqhohvqdsz2r2vy4ozgkb3eh8o9iymih4v8fs7it005ac2xgkbxisk9rirshdpvk8ap5\",\n    \"createTime\" : \"2022-07-21T15:42:49.552613Z\",\n    \"name\" : \"Charley Hermann\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"vdmfw9qvctmb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c9f2382-a7db-4505-a39a-9d045d44d816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.552752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.sessions.list",
          "schema" : {
            "description" : "The response for ListSessions.",
            "properties" : {
              "nextPageToken" : {
                "description" : "`next_page_token` can be sent in a subsequent ListSessions call to fetch more of the matching sessions.",
                "type" : "string"
              },
              "sessions" : {
                "description" : "The list of requested sessions.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c8a5acee-1792-43b1-b093-b4b31e62e0df",
    "name" : "Updates the schema of a Cloud Spanner database by creating/altering/dropping tab...",
    "request" : {
      "urlPath" : "/v1/uuo4vxy4xe97o6hzk6ezrjscda4ho6f3r7t55b2n24dp3h1zse10bqnvb0porbsw57m7kdwrarmqnwc2ff5w2si6axoj5znhe7s7rghxlr10k57ru7077oak2wf57mfnc31z3q14b340jo1q0wtymi2ef7kskktdt7/ddl",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bruno Feil\",\n  \"error\" : {\n    \"code\" : 831442036,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Fugit quis et cupiditate ea. Qui consequuntur vel. Iusto est inventore dolorum velit aliquam a.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8a5acee-1792-43b1-b093-b4b31e62e0df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.552248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.updateDdl",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57294c92-cd05-4890-8417-12812c1bc0d0",
    "name" : "Returns the schema of a Cloud Spanner database as a list of formatted DDL statem...",
    "request" : {
      "urlPath" : "/v1/rfvdvc936az1qkubq3jqyv3xz9xmvy4jg0biz088l6thquuiq6vl/ddl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protoDescriptors\" : \"rbsjpvw8k5xfzn59l9jvgbycwif6usgnase4iognibqli39azne9q70xmkwipgkf3s843gxzyk7rhn31n6axa8dd0tmhaeolceck6b4nkx0nhgnd35sm3er3a3v76i9gmkz8ad4cr\",\n  \"statements\" : [ \"whvsl5vwrn7eapdrej85ujjbmc3sp7p6k9778u14iuk2ed7mxt6k5kcnk64tv84ipm78f86icvetrscs5ypc5910qbsg5241oha4msk7gb45aicj4r21k52a5pygthm\", \"m1okmcm90wu26xz5fvvom9q9fs6k5sw6fulkexqozjugfnlamde32q751qdvq8j33x4kr1hhnspv913f4aigkf50f0q9eqt0m9iqf9bsjjt5c8m6exjpkyw76\", \"jadwdzk8iqwt46ahc36yu0cg2j9x3gs7bbxqamwwwrzbu7lf1sfqi9pg106zt124a34sqj8mm5nm0iqb77ueaahdv4e3xv3hj5khtud2k3wxfc57xn7d53zpmp9u3a8r00797a2k\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57294c92-cd05-4890-8417-12812c1bc0d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.551992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.getDdl",
          "schema" : {
            "description" : "The response for GetDatabaseDdl.",
            "properties" : {
              "protoDescriptors" : {
                "description" : "Proto descriptors stored in the database. Contains a protobuf-serialized [google.protobuf.FileDescriptorSet](https://github.com/protocolbuffers/protobuf/blob/main/src/google/protobuf/descriptor.proto). For more details, see protobuffer [self description](https://developers.google.com/protocol-buffers/docs/techniques#self-description).",
                "format" : "byte",
                "type" : "string"
              },
              "statements" : {
                "description" : "A list of formatted DDL statements defining the schema of the database specified in the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4dbb8d5b-eee5-46ef-a293-bf21c1e0c0b8",
    "name" : "Drops (aka deletes) a Cloud Spanner database. Completed backups for the database...",
    "request" : {
      "urlPath" : "/v1/7ca6s2w27b9op7apfg1q0xt9i2fak17pnfe9zy4cqv5x8llci06wl5znerbjkzqcm5so860uwi94jz9ga9i52mzfgivxijp4kmk0jutmwqblg7b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dbb8d5b-eee5-46ef-a293-bf21c1e0c0b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:49.551799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "spanner.projects.instances.databases.dropDatabase",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}