{
  "mappings" : [ {
    "id" : "8ed0448c-ec0b-3b5e-b370-20746f666a01",
    "name" : "Reboots a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/56uj/reboot",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ed0448c-ec0b-3b5e-b370-20746f666a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RebootBroker"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "2e472d2e-4cc2-3ddf-8ba3-8b893f90a167",
    "name" : "Reboots a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/nb2q/reboot",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e472d2e-4cc2-3ddf-8ba3-8b893f90a167",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RebootBroker"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f38298cd-dd3d-37b2-bfb6-0e6bea355244",
    "name" : "Reboots a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/53ga/reboot",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f38298cd-dd3d-37b2-bfb6-0e6bea355244",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RebootBroker"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "15b07923-0ea3-34f2-a9cd-b7aa234226f8",
    "name" : "Reboots a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/2230/reboot",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15b07923-0ea3-34f2-a9cd-b7aa234226f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RebootBroker"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "8b7edb24-50e3-3fd1-9a88-f4448522abca",
    "name" : "Reboots a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/1315/reboot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b7edb24-50e3-3fd1-9a88-f4448522abca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RebootBroker",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "49eca6f9-7187-34d4-ab43-b9ca3a815148",
    "name" : "Returns a list of all ActiveMQ users.",
    "request" : {
      "urlPath" : "/v1/brokers/6l29/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49eca6f9-7187-34d4-ab43-b9ca3a815148",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUsers"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "ba98acf2-24a3-3fa0-8404-e2639063c2be",
    "name" : "Returns a list of all ActiveMQ users.",
    "request" : {
      "urlPath" : "/v1/brokers/28at/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba98acf2-24a3-3fa0-8404-e2639063c2be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUsers"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "98977c3a-0339-3743-a658-26a2d4d2dec5",
    "name" : "Returns a list of all ActiveMQ users.",
    "request" : {
      "urlPath" : "/v1/brokers/ah44/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98977c3a-0339-3743-a658-26a2d4d2dec5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUsers"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "93ff4fc0-0ace-3e27-973f-c2994ea98faf",
    "name" : "Returns a list of all ActiveMQ users.",
    "request" : {
      "urlPath" : "/v1/brokers/uw79/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93ff4fc0-0ace-3e27-973f-c2994ea98faf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUsers"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f5eadefc-251f-3592-98a7-d3e7edca6408",
    "name" : "Returns a list of all ActiveMQ users.",
    "request" : {
      "urlPath" : "/v1/brokers/aj5w/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"BrokerId\" : { },\n  \"MaxResults\" : { },\n  \"Users\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5eadefc-251f-3592-98a7-d3e7edca6408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUsers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerId"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the broker."
                } ]
              },
              "MaxResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__integerMin5Max100"
                }, {
                  "xml" : {
                    "name" : "maxResults"
                  },
                  "description" : "Required. The maximum number of ActiveMQ users that can be returned per page (20 by default). This value must be an integer from 5 to 100."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "nextToken"
                  },
                  "description" : "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
                } ]
              },
              "Users" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfUserSummary"
                }, {
                  "xml" : {
                    "name" : "users"
                  },
                  "description" : "Required. The list of all ActiveMQ usernames for the specified broker. Does not apply to RabbitMQ brokers."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "4a348fe2-cf27-30f0-9e31-92786afa83c9",
    "name" : "Returns a list of all revisions for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/v4q9/revisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a348fe2-cf27-30f0-9e31-92786afa83c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurationRevisions"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "91fc9284-6a6e-3a32-9788-6da124c9c6c9",
    "name" : "Returns a list of all revisions for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/m9re/revisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91fc9284-6a6e-3a32-9788-6da124c9c6c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurationRevisions"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "0eb03fa4-30ac-33ee-9b38-8da6d8fa4269",
    "name" : "Returns a list of all revisions for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/lm12/revisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0eb03fa4-30ac-33ee-9b38-8da6d8fa4269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurationRevisions"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0a3fea46-f155-3532-8a21-e3eeac7063e3",
    "name" : "Returns a list of all revisions for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/yi31/revisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a3fea46-f155-3532-8a21-e3eeac7063e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurationRevisions"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "3e4386d1-18b7-3826-ac2e-1cbe39cd1317",
    "name" : "Returns a list of all revisions for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/r4h7/revisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"MaxResults\" : { },\n  \"Revisions\" : { },\n  \"ConfigurationId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e4386d1-18b7-3826-ac2e-1cbe39cd1317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurationRevisions",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ConfigurationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "configurationId"
                  },
                  "description" : "The unique ID that Amazon MQ generates for the configuration."
                } ]
              },
              "MaxResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__integer"
                }, {
                  "xml" : {
                    "name" : "maxResults"
                  },
                  "description" : "The maximum number of configuration revisions that can be returned per page (20 by default). This value must be an integer from 5 to 100."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "nextToken"
                  },
                  "description" : "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
                } ]
              },
              "Revisions" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfConfigurationRevision"
                }, {
                  "xml" : {
                    "name" : "revisions"
                  },
                  "description" : "The list of all revisions for the specified configuration."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "3787f901-c66b-39af-858a-066d9444b345",
    "name" : "Returns the specified configuration revision for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/25q6/revisions/025jtztz1yqrykst2ilozul9ptufx9ow2apmo4sesvokvgxssgu5pgm1y8k5covn18sq5vkpz8tgqef8qvwnvc14jft9tm52agytliup4o2gxldjntfc5b5ihskejzdhdiv6b1lqkzfbn",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3787f901-c66b-39af-858a-066d9444b345",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfigurationRevision"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "bc74e15c-480f-39fa-8f8c-7cc31a22e6a9",
    "name" : "Returns the specified configuration revision for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/x0p2/revisions/d770nsmr3m84x7ta5fsleb0u75fw189l0mpwn62pvflksv",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc74e15c-480f-39fa-8f8c-7cc31a22e6a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfigurationRevision"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "2ec33f82-ae55-3191-a833-d73c09be5ef2",
    "name" : "Returns the specified configuration revision for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/b1i5/revisions/5jluwhn2d19vyirzrl6yx871nobgvdi9avnie8i4duprmiljsulszntivo4rjk4jrivb48s",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ec33f82-ae55-3191-a833-d73c09be5ef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfigurationRevision"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "da73f038-bb8f-31d2-9f48-3d4d69d198e8",
    "name" : "Returns the specified configuration revision for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/866z/revisions/dwoorjoupw2exoyqn5v3k5pik8i3ncvcto7zmygx5m5op1h5d3jnkl5n",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da73f038-bb8f-31d2-9f48-3d4d69d198e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfigurationRevision"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "a9903f1b-a45e-339f-8740-dea3148d67fc",
    "name" : "Returns the specified configuration revision for the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/1tku/revisions/3a0hm8yx1s51nf9g70qenvx1a9eoxw4l316tucfpyzf064nkytbj25yzplzuzwc1i5njdomumkzyokph5o3k6jn5fvol35tdv",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Description\" : { },\n  \"Data\" : { },\n  \"ConfigurationId\" : { },\n  \"Created\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9903f1b-a45e-339f-8740-dea3148d67fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfigurationRevision",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ConfigurationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "configurationId"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the configuration."
                } ]
              },
              "Created" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__timestampIso8601"
                }, {
                  "xml" : {
                    "name" : "created"
                  },
                  "description" : "Required. The date and time of the configuration."
                } ]
              },
              "Data" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "data"
                  },
                  "description" : "Required. The base64-encoded XML configuration."
                } ]
              },
              "Description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "description"
                  },
                  "description" : "The description of the configuration."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "5f3280cd-db58-3d02-99f5-c249dea02d4a",
    "name" : "Updates the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/sjro",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f3280cd-db58-3d02-99f5-c249dea02d4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateConfiguration"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "98377557-dc82-382b-bb32-3733aaab9ecb",
    "name" : "Updates the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/zt0d",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98377557-dc82-382b-bb32-3733aaab9ecb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateConfiguration"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "422ce729-b647-3cd7-950d-340c662a7540",
    "name" : "Updates the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/7870",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "422ce729-b647-3cd7-950d-340c662a7540",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateConfiguration"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "c2296861-9f6f-3188-9c7e-d53a41bf6f41",
    "name" : "Updates the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/y3k4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2296861-9f6f-3188-9c7e-d53a41bf6f41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateConfiguration"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "d26e8676-0691-37dd-9e21-c5001460c255",
    "name" : "Updates the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/t1dy",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d26e8676-0691-37dd-9e21-c5001460c255",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateConfiguration"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "d8720ea6-07c3-3711-bffe-c8336548891c",
    "name" : "Updates the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/2l7g",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LatestRevision\" : {\n    \"Description\" : { },\n    \"Revision\" : { },\n    \"Created\" : { }\n  },\n  \"Id\" : { },\n  \"Arn\" : { },\n  \"Warnings\" : { },\n  \"Created\" : { },\n  \"Name\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8720ea6-07c3-3711-bffe-c8336548891c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Arn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "arn"
                  },
                  "description" : "Required. The Amazon Resource Name (ARN) of the configuration."
                } ]
              },
              "Created" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__timestampIso8601"
                }, {
                  "xml" : {
                    "name" : "created"
                  },
                  "description" : "Required. The date and time of the configuration."
                } ]
              },
              "Id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "id"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the configuration."
                } ]
              },
              "LatestRevision" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfigurationRevision"
                }, {
                  "xml" : {
                    "name" : "latestRevision"
                  },
                  "description" : "The latest revision of the configuration."
                } ]
              },
              "Name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "name"
                  },
                  "description" : "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long."
                } ]
              },
              "Warnings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfSanitizationWarning"
                }, {
                  "xml" : {
                    "name" : "warnings"
                  },
                  "description" : "The list of the first 20 warnings about the configuration XML elements or attributes that were sanitized."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "5e6e4fea-9abd-31b4-ae4a-14dc238e525e",
    "name" : "Returns information about the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/4n43",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e6e4fea-9abd-31b4-ae4a-14dc238e525e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfiguration"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "b590405a-dbe6-33bf-9f80-7e20974bcc92",
    "name" : "Returns information about the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/646b",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b590405a-dbe6-33bf-9f80-7e20974bcc92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfiguration"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "ca2b88b2-103b-34db-971a-5672b2afa93c",
    "name" : "Returns information about the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/3wf1",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca2b88b2-103b-34db-971a-5672b2afa93c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfiguration"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "2195e44c-4640-356f-bcb5-1f5e5f4c2af0",
    "name" : "Returns information about the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/v8x4",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2195e44c-4640-356f-bcb5-1f5e5f4c2af0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfiguration"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "1f38aa2a-ee9c-364c-bd48-29708345822c",
    "name" : "Returns information about the specified configuration.",
    "request" : {
      "urlPath" : "/v1/configurations/17w0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Description\" : { },\n  \"EngineVersion\" : { },\n  \"LatestRevision\" : {\n    \"Description\" : { },\n    \"Revision\" : { },\n    \"Created\" : { }\n  },\n  \"AuthenticationStrategy\" : { },\n  \"EngineType\" : { },\n  \"Id\" : { },\n  \"Arn\" : { },\n  \"Tags\" : { },\n  \"Created\" : { },\n  \"Name\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f38aa2a-ee9c-364c-bd48-29708345822c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Arn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "arn"
                  },
                  "description" : "Required. The ARN of the configuration."
                } ]
              },
              "AuthenticationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AuthenticationStrategy"
                }, {
                  "xml" : {
                    "name" : "authenticationStrategy"
                  },
                  "description" : "Optional. The authentication strategy associated with the configuration. The default is SIMPLE."
                } ]
              },
              "Created" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__timestampIso8601"
                }, {
                  "xml" : {
                    "name" : "created"
                  },
                  "description" : "Required. The date and time of the configuration revision."
                } ]
              },
              "Description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "description"
                  },
                  "description" : "Required. The description of the configuration."
                } ]
              },
              "EngineType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EngineType"
                }, {
                  "xml" : {
                    "name" : "engineType"
                  },
                  "description" : "Required. The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ."
                } ]
              },
              "EngineVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "engineVersion"
                  },
                  "description" : "Required. The broker engine's version. For a list of supported engine versions, see, <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html\">Supported engines</a>."
                } ]
              },
              "Id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "id"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the configuration."
                } ]
              },
              "LatestRevision" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfigurationRevision"
                }, {
                  "xml" : {
                    "name" : "latestRevision"
                  },
                  "description" : "Required. The latest revision of the configuration."
                } ]
              },
              "Name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "name"
                  },
                  "description" : "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long."
                } ]
              },
              "Tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__mapOf__string"
                }, {
                  "xml" : {
                    "name" : "tags"
                  },
                  "description" : "The list of all tags associated with this configuration."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "fca008ca-da30-3721-a742-fedd6e0f4f00",
    "name" : "Describe available broker instance options.",
    "request" : {
      "urlPath" : "/v1/broker-instance-options",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fca008ca-da30-3721-a742-fedd6e0f4f00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerInstanceOptions"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "b48428e8-a180-3244-8be2-d43a28063af9",
    "name" : "Describe available broker instance options.",
    "request" : {
      "urlPath" : "/v1/broker-instance-options",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b48428e8-a180-3244-8be2-d43a28063af9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerInstanceOptions"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "a9a67178-6af6-3ce4-9ad5-d2f83a4052c6",
    "name" : "Describe available broker instance options.",
    "request" : {
      "urlPath" : "/v1/broker-instance-options",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9a67178-6af6-3ce4-9ad5-d2f83a4052c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerInstanceOptions"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "bb0b796f-4a7a-30c6-a55e-117a11f9667a",
    "name" : "Describe available broker instance options.",
    "request" : {
      "urlPath" : "/v1/broker-instance-options",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"MaxResults\" : { },\n  \"BrokerInstanceOptions\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb0b796f-4a7a-30c6-a55e-117a11f9667a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerInstanceOptions",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerInstanceOptions" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfBrokerInstanceOption"
                }, {
                  "xml" : {
                    "name" : "brokerInstanceOptions"
                  },
                  "description" : "List of available broker instance options."
                } ]
              },
              "MaxResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__integerMin5Max100"
                }, {
                  "xml" : {
                    "name" : "maxResults"
                  },
                  "description" : "Required. The maximum number of instance options that can be returned per page (20 by default). This value must be an integer from 5 to 100."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "nextToken"
                  },
                  "description" : "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "77e88528-e4e4-38c4-b6a9-029b37033139",
    "name" : "Describe available engine types and versions.",
    "request" : {
      "urlPath" : "/v1/broker-engine-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77e88528-e4e4-38c4-b6a9-029b37033139",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerEngineTypes"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "34e6e6c3-0d2e-37d9-9d18-3204264f0080",
    "name" : "Describe available engine types and versions.",
    "request" : {
      "urlPath" : "/v1/broker-engine-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34e6e6c3-0d2e-37d9-9d18-3204264f0080",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerEngineTypes"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "8eb8eb64-73b4-3ce0-969a-fbda4bec1e6c",
    "name" : "Describe available engine types and versions.",
    "request" : {
      "urlPath" : "/v1/broker-engine-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8eb8eb64-73b4-3ce0-969a-fbda4bec1e6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerEngineTypes"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "80086399-4813-39db-a851-bd17c869a80c",
    "name" : "Describe available engine types and versions.",
    "request" : {
      "urlPath" : "/v1/broker-engine-types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"BrokerEngineTypes\" : { },\n  \"MaxResults\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80086399-4813-39db-a851-bd17c869a80c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBrokerEngineTypes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerEngineTypes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfBrokerEngineType"
                }, {
                  "xml" : {
                    "name" : "brokerEngineTypes"
                  },
                  "description" : "List of available engine types and versions."
                } ]
              },
              "MaxResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__integerMin5Max100"
                }, {
                  "xml" : {
                    "name" : "maxResults"
                  },
                  "description" : "Required. The maximum number of engine types that can be returned per page (20 by default). This value must be an integer from 5 to 100."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "nextToken"
                  },
                  "description" : "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "fd38df17-e454-30fd-8e91-4cc8b33545cc",
    "name" : "Removes a tag from a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/9fitwi8e4i9m0lommmm91k9i7s1943lexxwlpfuja#tagKeys",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "ed775q0gvbuh2ev98ec38xr9oy4qumwc9l9iji1fsrx2myzjoqrby673vlmwauzj3ijym5"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd38df17-e454-30fd-8e91-4cc8b33545cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTags"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "49dd684f-661b-3b10-8093-5f89bc36385a",
    "name" : "Removes a tag from a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/q043ra9d2qbjrupsm56amz4hxxa7a6a9vpzsg8fu2mnwa0gjlxsmm4aztltkvtbe4671d54ewydctfne7kyrfjwa1znuqee9ju80kztd43l183bib3b5aw0yh8ahrenayuydbs9rp9vt493mphe0a3l4t3gji9raxu46xmclszzpcvzi7vp8qokbotvq33#tagKeys",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "bb6u2pg7x7xwvfxuwmyli0ax2jx3h64a2714qa"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49dd684f-661b-3b10-8093-5f89bc36385a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTags"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "4d6fabde-7c31-3370-9af0-af043ab2cd13",
    "name" : "Removes a tag from a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/y60bwic4brqyo3tiggft34btopknhomy9on6ihvkyfdqapheqi6qk4dwbntws#tagKeys",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "j99tevjt847oc7khiv58bxf2etslqwe8oghbx9ja6dm0k0kyea6y6lbs4r14axqe"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d6fabde-7c31-3370-9af0-af043ab2cd13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTags"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "c433cef3-a16b-3e0d-9237-f1c375b24a62",
    "name" : "Removes a tag from a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/soeeq2cee8v5md7rjrtodxb0yoygyhod1rl1itiik8i7oqa2jk3c4yds6wv3w2u225vfati17m#tagKeys",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "pwcnbbx0x4drxpwvdjcvyjdys69iarf2strv0bgdnjrbx2b449eah2vpo3h6vdsium36uzv0900nqtuxiq293dzx9g0nfzokbz9ii99ie2n6773h2qic"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c433cef3-a16b-3e0d-9237-f1c375b24a62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTags"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "3a40fec6-02a1-3426-a403-87763b13c5c4",
    "name" : "Removes a tag from a resource. - 204",
    "request" : {
      "urlPath" : "/v1/tags/4bh3epg72qa36nsj6brnw25rj8yo6inn9gpmmpcaeg8s55aacbk3tof98cur4rwuumijzgmcye8f8izwozhhzi5csqmmu9pwegsjxudhjumepeqaqw99442xbwuozdfz7x7si32lhv50rzo0erow#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "xe2dhmiiempfd8tak8mjuel7obobgj3zwja29dmyak3yp4a9qrxzgakmdz3xtny52p89qlhhy4n"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3a40fec6-02a1-3426-a403-87763b13c5c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTags"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "c048f2e7-528e-3d2e-9062-99a5ae6c0d43",
    "name" : "Adds a pending configuration change to a broker.",
    "request" : {
      "urlPath" : "/v1/brokers/04x6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c048f2e7-528e-3d2e-9062-99a5ae6c0d43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBroker"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "3de442df-eedc-3f20-aa72-7f602f1a10cd",
    "name" : "Adds a pending configuration change to a broker.",
    "request" : {
      "urlPath" : "/v1/brokers/7o05",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3de442df-eedc-3f20-aa72-7f602f1a10cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBroker"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "d99558e9-47f3-31b9-a337-b66143933d92",
    "name" : "Adds a pending configuration change to a broker.",
    "request" : {
      "urlPath" : "/v1/brokers/hsj1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d99558e9-47f3-31b9-a337-b66143933d92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBroker"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "f9bfd8f6-ef2a-3e33-accd-0636aa4c901a",
    "name" : "Adds a pending configuration change to a broker.",
    "request" : {
      "urlPath" : "/v1/brokers/1xwa",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9bfd8f6-ef2a-3e33-accd-0636aa4c901a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBroker"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "50b7bd97-25b4-33b3-86c4-3e82c21c8de9",
    "name" : "Adds a pending configuration change to a broker.",
    "request" : {
      "urlPath" : "/v1/brokers/88p5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50b7bd97-25b4-33b3-86c4-3e82c21c8de9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBroker"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "2d87b152-7269-3f20-b74a-bfec4e276eab",
    "name" : "Adds a pending configuration change to a broker.",
    "request" : {
      "urlPath" : "/v1/brokers/q6ck",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LdapServerMetadata\" : {\n    \"Hosts\" : { },\n    \"RoleName\" : { },\n    \"UserRoleName\" : { },\n    \"UserSearchMatching\" : { },\n    \"UserBase\" : { },\n    \"UserSearchSubtree\" : { },\n    \"RoleSearchMatching\" : { },\n    \"ServiceAccountUsername\" : { },\n    \"RoleBase\" : { },\n    \"RoleSearchSubtree\" : { }\n  },\n  \"SecurityGroups\" : { },\n  \"EngineVersion\" : { },\n  \"Configuration\" : {\n    \"Revision\" : { },\n    \"Id\" : { }\n  },\n  \"BrokerId\" : { },\n  \"AuthenticationStrategy\" : { },\n  \"MaintenanceWindowStartTime\" : {\n    \"DayOfWeek\" : { },\n    \"TimeOfDay\" : { },\n    \"TimeZone\" : { }\n  },\n  \"HostInstanceType\" : { },\n  \"AutoMinorVersionUpgrade\" : { },\n  \"Logs\" : {\n    \"Audit\" : { },\n    \"General\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d87b152-7269-3f20-b74a-bfec4e276eab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBroker",
          "schema" : {
            "type" : "object",
            "properties" : {
              "AuthenticationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AuthenticationStrategy"
                }, {
                  "xml" : {
                    "name" : "authenticationStrategy"
                  },
                  "description" : "Optional. The authentication strategy used to secure the broker. The default is SIMPLE."
                } ]
              },
              "AutoMinorVersionUpgrade" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__boolean"
                }, {
                  "xml" : {
                    "name" : "autoMinorVersionUpgrade"
                  },
                  "description" : "The new boolean value that specifies whether broker engines automatically upgrade to new minor versions as new versions are released and supported by Amazon MQ."
                } ]
              },
              "BrokerId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerId"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the broker."
                } ]
              },
              "Configuration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfigurationId"
                }, {
                  "xml" : {
                    "name" : "configuration"
                  },
                  "description" : "The ID of the updated configuration."
                } ]
              },
              "EngineVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "engineVersion"
                  },
                  "description" : "The broker engine version to upgrade to. For a list of supported engine versions, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html\">Supported engines</a>."
                } ]
              },
              "HostInstanceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "hostInstanceType"
                  },
                  "description" : "The broker's host instance type to upgrade to. For a list of supported instance types, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types\">Broker instance types</a>."
                } ]
              },
              "LdapServerMetadata" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LdapServerMetadataOutput"
                }, {
                  "xml" : {
                    "name" : "ldapServerMetadata"
                  },
                  "description" : "Optional. The metadata of the LDAP server used to authenticate and authorize connections to the broker. Does not apply to RabbitMQ brokers."
                } ]
              },
              "Logs" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Logs"
                }, {
                  "xml" : {
                    "name" : "logs"
                  },
                  "description" : "The list of information about logs to be enabled for the specified broker."
                } ]
              },
              "MaintenanceWindowStartTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/WeeklyStartTime"
                }, {
                  "xml" : {
                    "name" : "maintenanceWindowStartTime"
                  },
                  "description" : "The parameters that determine the WeeklyStartTime."
                } ]
              },
              "SecurityGroups" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOf__string"
                }, {
                  "xml" : {
                    "name" : "securityGroups"
                  },
                  "description" : "The list of security groups (1 minimum, 5 maximum) that authorizes connections to brokers."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "d837856e-7bc4-3854-af09-f38949107c10",
    "name" : "Returns information about the specified broker.",
    "request" : {
      "urlPath" : "/v1/brokers/d539",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d837856e-7bc4-3854-af09-f38949107c10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBroker"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "4bfe7f54-bd2e-33fb-befe-5a2e5825b120",
    "name" : "Returns information about the specified broker.",
    "request" : {
      "urlPath" : "/v1/brokers/b21v",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bfe7f54-bd2e-33fb-befe-5a2e5825b120",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBroker"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "193bbacf-dae9-3e34-b831-4278313b8932",
    "name" : "Returns information about the specified broker.",
    "request" : {
      "urlPath" : "/v1/brokers/q3yf",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "193bbacf-dae9-3e34-b831-4278313b8932",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBroker"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "e1fd0c79-efdd-3882-8c43-5c01454f7470",
    "name" : "Returns information about the specified broker.",
    "request" : {
      "urlPath" : "/v1/brokers/f68v",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1fd0c79-efdd-3882-8c43-5c01454f7470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBroker"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "88d46691-3fd1-368d-8dc1-b18f7598cd3e",
    "name" : "Returns information about the specified broker.",
    "request" : {
      "urlPath" : "/v1/brokers/vy0s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SecurityGroups\" : { },\n  \"BrokerState\" : { },\n  \"ActionsRequired\" : { },\n  \"PendingSecurityGroups\" : { },\n  \"AuthenticationStrategy\" : { },\n  \"BrokerInstances\" : { },\n  \"Users\" : { },\n  \"SubnetIds\" : { },\n  \"Created\" : { },\n  \"PendingHostInstanceType\" : { },\n  \"DeploymentMode\" : { },\n  \"EngineType\" : { },\n  \"Configurations\" : {\n    \"History\" : { },\n    \"Current\" : {\n      \"Revision\" : { },\n      \"Id\" : { }\n    },\n    \"Pending\" : {\n      \"Revision\" : { },\n      \"Id\" : { }\n    }\n  },\n  \"EncryptionOptions\" : {\n    \"KmsKeyId\" : { },\n    \"UseAwsOwnedKey\" : { }\n  },\n  \"PendingEngineVersion\" : { },\n  \"Tags\" : { },\n  \"EngineVersion\" : { },\n  \"StorageType\" : { },\n  \"BrokerId\" : { },\n  \"PendingAuthenticationStrategy\" : { },\n  \"MaintenanceWindowStartTime\" : {\n    \"DayOfWeek\" : { },\n    \"TimeOfDay\" : { },\n    \"TimeZone\" : { }\n  },\n  \"HostInstanceType\" : { },\n  \"AutoMinorVersionUpgrade\" : { },\n  \"Logs\" : {\n    \"Audit\" : { },\n    \"GeneralLogGroup\" : { },\n    \"General\" : { },\n    \"AuditLogGroup\" : { },\n    \"Pending\" : {\n      \"Audit\" : { },\n      \"General\" : { }\n    }\n  },\n  \"BrokerName\" : { },\n  \"PendingLdapServerMetadata\" : {\n    \"Hosts\" : { },\n    \"RoleName\" : { },\n    \"UserRoleName\" : { },\n    \"UserSearchMatching\" : { },\n    \"UserBase\" : { },\n    \"UserSearchSubtree\" : { },\n    \"RoleSearchMatching\" : { },\n    \"ServiceAccountUsername\" : { },\n    \"RoleBase\" : { },\n    \"RoleSearchSubtree\" : { }\n  },\n  \"LdapServerMetadata\" : {\n    \"Hosts\" : { },\n    \"RoleName\" : { },\n    \"UserRoleName\" : { },\n    \"UserSearchMatching\" : { },\n    \"UserBase\" : { },\n    \"UserSearchSubtree\" : { },\n    \"RoleSearchMatching\" : { },\n    \"ServiceAccountUsername\" : { },\n    \"RoleBase\" : { },\n    \"RoleSearchSubtree\" : { }\n  },\n  \"PubliclyAccessible\" : { },\n  \"BrokerArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88d46691-3fd1-368d-8dc1-b18f7598cd3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBroker",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ActionsRequired" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfActionRequired"
                }, {
                  "xml" : {
                    "name" : "actionsRequired"
                  },
                  "description" : "A list of actions required for a broker."
                } ]
              },
              "AuthenticationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AuthenticationStrategy"
                }, {
                  "xml" : {
                    "name" : "authenticationStrategy"
                  },
                  "description" : "The authentication strategy used to secure the broker. The default is SIMPLE."
                } ]
              },
              "AutoMinorVersionUpgrade" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__boolean"
                }, {
                  "xml" : {
                    "name" : "autoMinorVersionUpgrade"
                  },
                  "description" : "Enables automatic upgrades to new minor versions for brokers, as new versions are released and supported by Amazon MQ. Automatic upgrades occur during the scheduled maintenance window of the broker or after a manual broker reboot."
                } ]
              },
              "BrokerArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerArn"
                  },
                  "description" : "The broker's Amazon Resource Name (ARN)."
                } ]
              },
              "BrokerId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerId"
                  },
                  "description" : "The unique ID that Amazon MQ generates for the broker."
                } ]
              },
              "BrokerInstances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfBrokerInstance"
                }, {
                  "xml" : {
                    "name" : "brokerInstances"
                  },
                  "description" : "A list of information about allocated brokers."
                } ]
              },
              "BrokerName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerName"
                  },
                  "description" : "The broker's name. This value must be unique in your AWS account, 1-50 characters long, must contain only letters, numbers, dashes, and underscores, and must not contain white spaces, brackets, wildcard characters, or special characters."
                } ]
              },
              "BrokerState" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BrokerState"
                }, {
                  "xml" : {
                    "name" : "brokerState"
                  },
                  "description" : "The broker's status."
                } ]
              },
              "Configurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Configurations"
                }, {
                  "xml" : {
                    "name" : "configurations"
                  },
                  "description" : "The list of all revisions for the specified configuration."
                } ]
              },
              "Created" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__timestampIso8601"
                }, {
                  "xml" : {
                    "name" : "created"
                  },
                  "description" : "The time when the broker was created."
                } ]
              },
              "DeploymentMode" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DeploymentMode"
                }, {
                  "xml" : {
                    "name" : "deploymentMode"
                  },
                  "description" : "The broker's deployment mode."
                } ]
              },
              "EncryptionOptions" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionOptions"
                }, {
                  "xml" : {
                    "name" : "encryptionOptions"
                  },
                  "description" : "Encryption options for the broker. Does not apply to RabbitMQ brokers."
                } ]
              },
              "EngineType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EngineType"
                }, {
                  "xml" : {
                    "name" : "engineType"
                  },
                  "description" : "The type of broker engine. Currently, Amazon MQ supports ACTIVEMQ and RABBITMQ."
                } ]
              },
              "EngineVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "engineVersion"
                  },
                  "description" : "The broker engine's version. For a list of supported engine versions, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html\">Supported engines</a>."
                } ]
              },
              "HostInstanceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "hostInstanceType"
                  },
                  "description" : "The broker's instance type."
                } ]
              },
              "LdapServerMetadata" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LdapServerMetadataOutput"
                }, {
                  "xml" : {
                    "name" : "ldapServerMetadata"
                  },
                  "description" : "The metadata of the LDAP server used to authenticate and authorize connections to the broker."
                } ]
              },
              "Logs" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LogsSummary"
                }, {
                  "xml" : {
                    "name" : "logs"
                  },
                  "description" : "The list of information about logs currently enabled and pending to be deployed for the specified broker."
                } ]
              },
              "MaintenanceWindowStartTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/WeeklyStartTime"
                }, {
                  "xml" : {
                    "name" : "maintenanceWindowStartTime"
                  },
                  "description" : "The parameters that determine the WeeklyStartTime."
                } ]
              },
              "PendingAuthenticationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AuthenticationStrategy"
                }, {
                  "xml" : {
                    "name" : "pendingAuthenticationStrategy"
                  },
                  "description" : "The authentication strategy that will be applied when the broker is rebooted. The default is SIMPLE."
                } ]
              },
              "PendingEngineVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "pendingEngineVersion"
                  },
                  "description" : "The broker engine version to upgrade to. For a list of supported engine versions, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker-engine.html\">Supported engines</a>."
                } ]
              },
              "PendingHostInstanceType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "pendingHostInstanceType"
                  },
                  "description" : "The broker's host instance type to upgrade to. For a list of supported instance types, see <a href=\"https://docs.aws.amazon.com//amazon-mq/latest/developer-guide/broker.html#broker-instance-types\">Broker instance types</a>."
                } ]
              },
              "PendingLdapServerMetadata" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LdapServerMetadataOutput"
                }, {
                  "xml" : {
                    "name" : "pendingLdapServerMetadata"
                  },
                  "description" : "The metadata of the LDAP server that will be used to authenticate and authorize connections to the broker after it is rebooted."
                } ]
              },
              "PendingSecurityGroups" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOf__string"
                }, {
                  "xml" : {
                    "name" : "pendingSecurityGroups"
                  },
                  "description" : "The list of pending security groups to authorize connections to brokers."
                } ]
              },
              "PubliclyAccessible" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__boolean"
                }, {
                  "xml" : {
                    "name" : "publiclyAccessible"
                  },
                  "description" : "Enables connections from applications outside of the VPC that hosts the broker's subnets."
                } ]
              },
              "SecurityGroups" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOf__string"
                }, {
                  "xml" : {
                    "name" : "securityGroups"
                  },
                  "description" : "The list of rules (1 minimum, 125 maximum) that authorize connections to brokers."
                } ]
              },
              "StorageType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BrokerStorageType"
                }, {
                  "xml" : {
                    "name" : "storageType"
                  },
                  "description" : "The broker's storage type."
                } ]
              },
              "SubnetIds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOf__string"
                }, {
                  "xml" : {
                    "name" : "subnetIds"
                  },
                  "description" : "The list of groups that define which subnets and IP ranges the broker can use from different Availability Zones."
                } ]
              },
              "Tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__mapOf__string"
                }, {
                  "xml" : {
                    "name" : "tags"
                  },
                  "description" : "The list of all tags associated with this broker."
                } ]
              },
              "Users" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfUserSummary"
                }, {
                  "xml" : {
                    "name" : "users"
                  },
                  "description" : "The list of all broker usernames for the specified broker."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "e978b1a6-7b6f-38ef-baf7-e787538b4cc5",
    "name" : "Deletes a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/043z",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e978b1a6-7b6f-38ef-baf7-e787538b4cc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBroker"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "e83a157d-ad82-3e63-b146-4f9b4d8b6816",
    "name" : "Deletes a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/33l3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e83a157d-ad82-3e63-b146-4f9b4d8b6816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBroker"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "01b9c2b2-5cfe-3531-85a7-bb0a8c899c9b",
    "name" : "Deletes a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/1l2n",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01b9c2b2-5cfe-3531-85a7-bb0a8c899c9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBroker"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "31589c0b-35e1-3208-9202-6af4e6b427a5",
    "name" : "Deletes a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/u5h2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31589c0b-35e1-3208-9202-6af4e6b427a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBroker"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "062e597b-4c19-3773-a85c-8e51fdc85852",
    "name" : "Deletes a broker. Note: This API is asynchronous.",
    "request" : {
      "urlPath" : "/v1/brokers/67p0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BrokerId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "062e597b-4c19-3773-a85c-8e51fdc85852",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBroker",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerId"
                  },
                  "description" : "The unique ID that Amazon MQ generates for the broker."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "f577fb04-65a9-3779-97dd-299da331a358",
    "name" : "Updates the information for an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/035r/users/major.jenkins",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f577fb04-65a9-3779-97dd-299da331a358",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUser"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "277956dd-a6c4-3a90-afde-a6c6a4f2c159",
    "name" : "Updates the information for an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/k524/users/lenny.turcotte",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "277956dd-a6c4-3a90-afde-a6c6a4f2c159",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUser"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "62a2fc84-070b-379b-8201-878f86e575dc",
    "name" : "Updates the information for an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/k912/users/rivka.pouros",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62a2fc84-070b-379b-8201-878f86e575dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUser"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "09c11db9-0507-357a-82dd-34b02eb4cde6",
    "name" : "Updates the information for an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/12mu/users/diane.donnelly",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09c11db9-0507-357a-82dd-34b02eb4cde6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUser"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "52630179-0c17-3df8-8a88-82a27aec8d18",
    "name" : "Updates the information for an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/c45b/users/teressa.klocko",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52630179-0c17-3df8-8a88-82a27aec8d18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUser"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "28e33770-0995-3678-88a4-b235782471ed",
    "name" : "Updates the information for an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/cp63/users/stefan.marquardt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28e33770-0995-3678-88a4-b235782471ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUser",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "959f2ca0-7e79-3992-ac45-80d835f24220",
    "name" : "Returns information about an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/9fe3/users/lindsey.cummerata",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "959f2ca0-7e79-3992-ac45-80d835f24220",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeUser"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "316abd28-c3df-3f66-82df-8d078cc062d0",
    "name" : "Returns information about an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/7994/users/benton.rice",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "316abd28-c3df-3f66-82df-8d078cc062d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeUser"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "0a671aa6-5513-3cfe-aa41-ad5af9fa07ea",
    "name" : "Returns information about an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/b4e4/users/ellen.hermiston",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a671aa6-5513-3cfe-aa41-ad5af9fa07ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeUser"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "7d4e583c-39d4-343a-968c-b4f2d8ccb2eb",
    "name" : "Returns information about an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/pb95/users/rosemary.nienow",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d4e583c-39d4-343a-968c-b4f2d8ccb2eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeUser"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "114baf64-a8a3-3a72-94de-7b783602b867",
    "name" : "Returns information about an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/8bw8/users/stan.reichel",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BrokerId\" : { },\n  \"Username\" : { },\n  \"Groups\" : { },\n  \"ConsoleAccess\" : { },\n  \"Pending\" : {\n    \"Groups\" : { },\n    \"ConsoleAccess\" : { },\n    \"PendingChange\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "114baf64-a8a3-3a72-94de-7b783602b867",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeUser",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerId"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the broker."
                } ]
              },
              "ConsoleAccess" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__boolean"
                }, {
                  "xml" : {
                    "name" : "consoleAccess"
                  },
                  "description" : "Enables access to the the ActiveMQ Web Console for the ActiveMQ user."
                } ]
              },
              "Groups" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOf__string"
                }, {
                  "xml" : {
                    "name" : "groups"
                  },
                  "description" : "The list of groups (20 maximum) to which the ActiveMQ user belongs. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long."
                } ]
              },
              "Pending" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UserPendingChanges"
                }, {
                  "xml" : {
                    "name" : "pending"
                  },
                  "description" : "The status of the changes pending for the ActiveMQ user."
                } ]
              },
              "Username" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "username"
                  },
                  "description" : "Required. The username of the ActiveMQ user. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 2-100 characters long."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "cebf76f4-3259-3598-a61b-b15617285fc7",
    "name" : "Deletes an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/mq58/users/taylor.jakubowski",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cebf76f4-3259-3598-a61b-b15617285fc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "f636555c-8ec7-36bd-96be-850b5b979125",
    "name" : "Deletes an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/of64/users/alfredo.reinger",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f636555c-8ec7-36bd-96be-850b5b979125",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "e5bcb719-bee9-3a31-9ee4-f6c191b82099",
    "name" : "Deletes an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/i661/users/rowena.green",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5bcb719-bee9-3a31-9ee4-f6c191b82099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "57df122f-e522-38d9-87ae-b62085b94abb",
    "name" : "Deletes an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/e116/users/riley.boehm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57df122f-e522-38d9-87ae-b62085b94abb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "4cf57c83-64b4-3438-8a48-d7a5cd1991cb",
    "name" : "Deletes an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/sf7s/users/charlyn.bednar",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cf57c83-64b4-3438-8a48-d7a5cd1991cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "495ddc30-62df-319a-9545-53f6bf9c6054",
    "name" : "Creates an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/4bnk/users/bo.lehner",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "495ddc30-62df-319a-9545-53f6bf9c6054",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUser"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "5da6daaf-5c66-3c6e-aa45-e890072ab395",
    "name" : "Creates an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/72i9/users/merilyn.tromp",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5da6daaf-5c66-3c6e-aa45-e890072ab395",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUser"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "c2b1bc8d-ee18-392d-a7cd-1d64e026f780",
    "name" : "Creates an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/84h0/users/nestor.mckenzie",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2b1bc8d-ee18-392d-a7cd-1d64e026f780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUser"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "0e109991-8470-3713-bf5e-46e63ec55592",
    "name" : "Creates an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/s074/users/linnea.labadie",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e109991-8470-3713-bf5e-46e63ec55592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUser"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "1c31953d-be4e-3053-8098-953f8e426eaf",
    "name" : "Creates an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/2h2a/users/jerry.mcclure",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c31953d-be4e-3053-8098-953f8e426eaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUser"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "8f60edca-214a-3037-a89f-45be507882d9",
    "name" : "Creates an ActiveMQ user.",
    "request" : {
      "urlPath" : "/v1/brokers/jm09/users/lissette.mayer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f60edca-214a-3037-a89f-45be507882d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUser",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "cf96501a-8716-3da4-a3bd-9af3cd3ef3bb",
    "name" : "Lists tags for a resource.",
    "request" : {
      "urlPath" : "/v1/tags/qr73k",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf96501a-8716-3da4-a3bd-9af3cd3ef3bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTags"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "f1f908f6-51ab-344c-935f-adbf8a19a835",
    "name" : "Lists tags for a resource.",
    "request" : {
      "urlPath" : "/v1/tags/3ul61ah",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1f908f6-51ab-344c-935f-adbf8a19a835",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTags"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "3c6e70ac-39f5-3dca-8d1f-36091ff7a90c",
    "name" : "Lists tags for a resource.",
    "request" : {
      "urlPath" : "/v1/tags/fhi5r1azx4k4i31ggtb6mn2pd3nsh",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c6e70ac-39f5-3dca-8d1f-36091ff7a90c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTags"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "c4cd7dc2-3901-3dfe-8423-f86ed2b0a12b",
    "name" : "Lists tags for a resource.",
    "request" : {
      "urlPath" : "/v1/tags/lxnsiu6lak9152408j7ao6vmp5dpcmu5jrd5ml7p3ylufsh5pawfcysuxldd3km5281ggklhfahupgxcpthmxi259qiqcqkk8u8uoci3dx5uhpf1gxc",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4cd7dc2-3901-3dfe-8423-f86ed2b0a12b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTags"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "50854482-ee3b-3e20-b91a-7b559ef86a2a",
    "name" : "Lists tags for a resource.",
    "request" : {
      "urlPath" : "/v1/tags/hyrix63mrmnfccdpggruhp6f2iv4qr7zkzl7zimu2k0w7dgm5szrh6c42g4itaf18ovktyj4cjq0fzqe2asbneygbxx4r84or4xrcz3r1jmd8ekgn6sp4xtj5toak5n3j0sq8k1oh4u5jrp",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50854482-ee3b-3e20-b91a-7b559ef86a2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTags",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__mapOf__string"
                }, {
                  "xml" : {
                    "name" : "tags"
                  },
                  "description" : "The key-value pair for the resource tag."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "8792c06f-c0df-3972-a0a9-61f51114eefb",
    "name" : "Add a tag to a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/vvma94qfr4gl0761c5ka1nkqikgfuli23u1qfd0zf8h1b6onuwaws5xs50xp0jqn2t9r6t1nn1watrjm4n6gqt4hfrb38nhfpnocw6floia5moi8s83743pdswupoei3zcfyfy58l4iuyajkhqvpirg4y35l1gvjd0x0li7cqy50xchqc6j9fkiqwh5u2ok0y",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8792c06f-c0df-3972-a0a9-61f51114eefb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTags"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "e82d26e8-d619-3259-a985-a052ddbe147d",
    "name" : "Add a tag to a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/apycbja823dbeu14lyif0hz7co4rwivp17kttx8iwip0to0uc3s6q9v02c0sccrh8vbn8nu3ro2yabr09v84jn86cgacnx350h9c468us4nd9kc1pb5f7roghagzjim459u6hp6gfkt56qmezgg86yaj6gw12vxkaqss38hte282hmiikgpc5n3e2nveu62m7",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e82d26e8-d619-3259-a985-a052ddbe147d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTags"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "d4938339-0e51-3cd0-97ba-52ae959b7a74",
    "name" : "Add a tag to a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/2j8s7ypdogn709rsa94aqtl",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4938339-0e51-3cd0-97ba-52ae959b7a74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTags"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "fb489076-4298-3b1c-a110-1749cf6b2faa",
    "name" : "Add a tag to a resource. (application/json)",
    "request" : {
      "urlPath" : "/v1/tags/up8u0ki5u6ima00eus3skb9ouyjotifqsbabp",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb489076-4298-3b1c-a110-1749cf6b2faa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTags"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "a7eac5e6-fcae-341d-b93c-d9d1c0ecc293",
    "name" : "Add a tag to a resource. - 204",
    "request" : {
      "urlPath" : "/v1/tags/9oo405lfh1qzikfniesl5jn3ytiw11vg97eu14k0zd44fqs525vkyu3fd0bxbutsmztbhrxzdktizy0ne3f11nem6fhoahwspw50fm049x9wi6rcpll7kdturramf7finbzdou0r102e9vd8lmb3b6kmmbhv154lqgy5zxm13ue",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a7eac5e6-fcae-341d-b93c-d9d1c0ecc293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTags"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "0dd42b79-9258-31f0-8074-8f709276b10a",
    "name" : "Returns a list of all configurations.",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dd42b79-9258-31f0-8074-8f709276b10a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurations"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "0644a6cc-32a5-32e4-9e24-d4a37d1470db",
    "name" : "Returns a list of all configurations.",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0644a6cc-32a5-32e4-9e24-d4a37d1470db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurations"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "26f80146-c1eb-3e73-a702-91e9ea8de05b",
    "name" : "Returns a list of all configurations.",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26f80146-c1eb-3e73-a702-91e9ea8de05b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurations"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "152e8769-b380-3722-b7ac-cb3e72552e56",
    "name" : "Returns a list of all configurations.",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"MaxResults\" : { },\n  \"Configurations\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "152e8769-b380-3722-b7ac-cb3e72552e56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListConfigurations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Configurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfConfiguration"
                }, {
                  "xml" : {
                    "name" : "configurations"
                  },
                  "description" : "The list of all revisions for the specified configuration."
                } ]
              },
              "MaxResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__integer"
                }, {
                  "xml" : {
                    "name" : "maxResults"
                  },
                  "description" : "The maximum number of configurations that Amazon MQ can return per page (20 by default). This value must be an integer from 5 to 100."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "nextToken"
                  },
                  "description" : "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "a8264bc3-686a-3557-a85b-75bb2b50d3ff",
    "name" : "Creates a new configuration for the specified configuration name. Amazon MQ uses...",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8264bc3-686a-3557-a85b-75bb2b50d3ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateConfiguration"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "a8f13cc0-745c-331f-be84-8a7b6872fd28",
    "name" : "Creates a new configuration for the specified configuration name. Amazon MQ uses...",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8f13cc0-745c-331f-be84-8a7b6872fd28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateConfiguration"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "6d580533-7da1-3263-932b-94413d6fe11c",
    "name" : "Creates a new configuration for the specified configuration name. Amazon MQ uses...",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d580533-7da1-3263-932b-94413d6fe11c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateConfiguration"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "007fc064-5114-3c43-98c2-82e81180ffcc",
    "name" : "Creates a new configuration for the specified configuration name. Amazon MQ uses...",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "007fc064-5114-3c43-98c2-82e81180ffcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateConfiguration"
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "0aaa1930-3852-32a8-bd0d-82edaae3569c",
    "name" : "Creates a new configuration for the specified configuration name. Amazon MQ uses...",
    "request" : {
      "urlPath" : "/v1/configurations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LatestRevision\" : {\n    \"Description\" : { },\n    \"Revision\" : { },\n    \"Created\" : { }\n  },\n  \"AuthenticationStrategy\" : { },\n  \"Id\" : { },\n  \"Arn\" : { },\n  \"Created\" : { },\n  \"Name\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0aaa1930-3852-32a8-bd0d-82edaae3569c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Arn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "arn"
                  },
                  "description" : "Required. The Amazon Resource Name (ARN) of the configuration."
                } ]
              },
              "AuthenticationStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AuthenticationStrategy"
                }, {
                  "xml" : {
                    "name" : "authenticationStrategy"
                  },
                  "description" : "Optional. The authentication strategy associated with the configuration. The default is SIMPLE."
                } ]
              },
              "Created" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__timestampIso8601"
                }, {
                  "xml" : {
                    "name" : "created"
                  },
                  "description" : "Required. The date and time of the configuration."
                } ]
              },
              "Id" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "id"
                  },
                  "description" : "Required. The unique ID that Amazon MQ generates for the configuration."
                } ]
              },
              "LatestRevision" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfigurationRevision"
                }, {
                  "xml" : {
                    "name" : "latestRevision"
                  },
                  "description" : "The latest revision of the configuration."
                } ]
              },
              "Name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "name"
                  },
                  "description" : "Required. The name of the configuration. This value can contain only alphanumeric characters, dashes, periods, underscores, and tildes (- . _ ~). This value must be 1-150 characters long."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "9b8df080-f5f4-3cf1-8477-e12b0719ea30",
    "name" : "Returns a list of all brokers.",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b8df080-f5f4-3cf1-8477-e12b0719ea30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBrokers"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "163a9ce9-e175-373f-90a0-03a9d2b28307",
    "name" : "Returns a list of all brokers.",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "163a9ce9-e175-373f-90a0-03a9d2b28307",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBrokers"
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "8c1f80df-986a-3688-8b86-fb8668ea8c7e",
    "name" : "Returns a list of all brokers.",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c1f80df-986a-3688-8b86-fb8668ea8c7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBrokers"
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "468b82ff-cfc1-328f-a60c-e39a12d897cc",
    "name" : "Returns a list of all brokers.",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"BrokerSummaries\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "468b82ff-cfc1-328f-a60c-e39a12d897cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBrokers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__listOfBrokerSummary"
                }, {
                  "xml" : {
                    "name" : "brokerSummaries"
                  },
                  "description" : "A list of information about all brokers."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "nextToken"
                  },
                  "description" : "The token that specifies the next page of results Amazon MQ should return. To request the first page, leave nextToken empty."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "155ea070-c0c4-3af5-8210-ac79880868db",
    "name" : "<p>Creates a broker. Note: This API is asynchronous.</p> <p>To create a broker, ...",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "155ea070-c0c4-3af5-8210-ac79880868db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBroker"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "ab7fd530-3d8d-375c-9951-1fbb1bf65db8",
    "name" : "<p>Creates a broker. Note: This API is asynchronous.</p> <p>To create a broker, ...",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab7fd530-3d8d-375c-9951-1fbb1bf65db8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBroker"
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "570a879d-3948-3278-8aa8-24f0790c1193",
    "name" : "<p>Creates a broker. Note: This API is asynchronous.</p> <p>To create a broker, ...",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "570a879d-3948-3278-8aa8-24f0790c1193",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBroker"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "7c0b9736-5f16-3340-b8d3-5b4200ba9c71",
    "name" : "<p>Creates a broker. Note: This API is asynchronous.</p> <p>To create a broker, ...",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c0b9736-5f16-3340-b8d3-5b4200ba9c71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBroker"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "d159ca2a-bf0e-3ca4-bb08-2ee552518801",
    "name" : "<p>Creates a broker. Note: This API is asynchronous.</p> <p>To create a broker, ...",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d159ca2a-bf0e-3ca4-bb08-2ee552518801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBroker"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "631beeb5-9a11-317c-acc5-9353a1b9151b",
    "name" : "<p>Creates a broker. Note: This API is asynchronous.</p> <p>To create a broker, ...",
    "request" : {
      "urlPath" : "/v1/brokers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BrokerId\" : { },\n  \"BrokerArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "631beeb5-9a11-317c-acc5-9353a1b9151b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBroker",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BrokerArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerArn"
                  },
                  "description" : "The broker's Amazon Resource Name (ARN)."
                } ]
              },
              "BrokerId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/__string"
                }, {
                  "xml" : {
                    "name" : "brokerId"
                  },
                  "description" : "The unique ID that Amazon MQ generates for the broker."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  } ]
}