{
  "mappings" : [ {
    "id" : "4321e3a8-5403-4a6b-a9d0-6487c6929a1d",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4321e3a8-5403-4a6b-a9d0-6487c6929a1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "04779cb3-fe49-441b-adf6-009b3914cc4d",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04779cb3-fe49-441b-adf6-009b3914cc4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.5308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "d84e032e-6e96-4d0f-a087-a978994aed74",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d84e032e-6e96-4d0f-a087-a978994aed74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "589bab45-8ddb-445f-a3f8-901eb58eb36c",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "589bab45-8ddb-445f-a3f8-901eb58eb36c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1ff71823-8b15-4b91-b08c-73fc0e570f02",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ff71823-8b15-4b91-b08c-73fc0e570f02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b2afced6-9421-4087-bdbd-8a2370f225c1",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2afced6-9421-4087-bdbd-8a2370f225c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.53056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c79bfd84-487a-4246-839b-79294c5134da",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/json)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c79bfd84-487a-4246-839b-79294c5134da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "05a9bcf6-b4a1-4e91-b439-5d05b9373ee0",
    "name" : "Permission/ Certificate for Transportation (Petroleum Products, Water etc.) (application/pdf)",
    "request" : {
      "urlPath" : "/tpcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "05a9bcf6-b4a1-4e91-b439-5d05b9373ee0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tpcer"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "4b567438-4794-47c1-9876-8bfe30e53ac4",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b567438-4794-47c1-9876-8bfe30e53ac4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.5304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d3962b22-b8e7-4467-ab64-6cca9b98dd4e",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3962b22-b8e7-4467-ab64-6cca9b98dd4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "8bb8c4fb-9f45-4347-ab32-206040ea554b",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bb8c4fb-9f45-4347-ab32-206040ea554b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "f2cab2e6-f874-405a-a81e-be84c7e612a3",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2cab2e6-f874-405a-a81e-be84c7e612a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "a8b6e3f6-c38c-4ba8-a8fd-104a1f105612",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8b6e3f6-c38c-4ba8-a8fd-104a1f105612",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530162Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "479d6da7-c920-4325-9a6b-1756a1058dd4",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "479d6da7-c920-4325-9a6b-1756a1058dd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "ab65d548-c2e4-49a3-abf0-ea248b1c2e34",
    "name" : "Permission/ Certificate for Well (application/json)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab65d548-c2e4-49a3-abf0-ea248b1c2e34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.530027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "4fac507e-0b60-4df2-831a-4c7439bdcb74",
    "name" : "Permission/ Certificate for Well (application/pdf)",
    "request" : {
      "urlPath" : "/pfdaw/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "4fac507e-0b60-4df2-831a-4c7439bdcb74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pfdaw"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "f8294445-f310-4787-ab90-4f7179b5cea5",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8294445-f310-4787-ab90-4f7179b5cea5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "eed57d64-d09a-4a04-8d81-f7940b130c6f",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eed57d64-d09a-4a04-8d81-f7940b130c6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "458bd345-322d-48bb-98c0-aacf9205e976",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "458bd345-322d-48bb-98c0-aacf9205e976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "533f45b2-9060-4fc6-b3ee-9d483b883a84",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "533f45b2-9060-4fc6-b3ee-9d483b883a84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "1b300ea3-0709-4a3b-9ce5-0dec94aebaad",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b300ea3-0709-4a3b-9ce5-0dec94aebaad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "e34e20cd-20bf-4e38-ad4f-dff31680f213",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e34e20cd-20bf-4e38-ad4f-dff31680f213",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "ff423fcb-bc7e-4eaf-ba14-19f59d4d3c5f",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/json)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff423fcb-bc7e-4eaf-ba14-19f59d4d3c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.52952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "fb6d8919-7ede-479a-9564-d6990ea40822",
    "name" : "Registration Certificate of Establishment Employing Contract Labour (application/pdf)",
    "request" : {
      "urlPath" : "/ercer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "fb6d8919-7ede-479a-9564-d6990ea40822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:28.529415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ercer"
        }
      }
    },
    "insertionIndex" : 23
  } ]
}