{
  "mappings" : [ {
    "id" : "e4b1806d-d806-49f6-9239-4c595059ecc0",
    "name" : "List all users assigned licenses for a specific product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/z117/users",
      "method" : "GET",
      "queryParameters" : {
        "customerId" : {
          "equalTo" : "73g8"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"kind\" : \"3rhcddtr7uh7s\",\n  \"nextPageToken\" : \"l8m9xw9k9eop7wq0lhrwwz51vpps4h\",\n  \"etag\" : \"quisquam\",\n  \"items\" : [ {\n    \"skuName\" : \"Milford Hammes\",\n    \"productId\" : \"6rex\",\n    \"kind\" : \"mq4cqyysotshazzfss2roh5u4zy6w6o5n6acn7wpl2fuiprtfgzdj73upch61lb4pnadlmt271o5hu6hgraxfwrih5g0o5cmnthav6942xqs45errpbbb5ks82myx5nltbpz343zacttn7djx9jso\",\n    \"etags\" : \"i7y9nun8zhue3h9mjnomzeixhttbgno789dslr83bczxfp2trpidj2hqrelyztz2js8l9oesw1sg95ca9l3tzvkzyj9maghmvy31a7i2knbby5slvnyee1tr8748iqkxs9rv119x6ajde5pi88v3d4g2aj2cbtu1\",\n    \"userId\" : \"0915\",\n    \"productName\" : \"Fredda Schulist\",\n    \"skuId\" : \"7881\",\n    \"selfLink\" : \"9dkm0aspavwz8x4v6d9r4olpc0e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4b1806d-d806-49f6-9239-4c595059ecc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.776504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.listForProduct",
          "schema" : {
            "properties" : {
              "etag" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "items" : {
                "description" : "The LicenseAssignments in this page of results.",
                "items" : {
                  "$ref" : "#/components/schemas/LicenseAssignment"
                },
                "type" : "array"
              },
              "kind" : {
                "default" : "licensing#licenseAssignmentList",
                "description" : "Identifies the resource as a collection of LicenseAssignments.",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "705f1649-dc44-4436-bbad-8d3006b10378",
    "name" : "List all users assigned licenses for a specific product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/4i0k/sku/fo7e/users",
      "method" : "GET",
      "queryParameters" : {
        "customerId" : {
          "equalTo" : "b713"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"kind\" : \"47amxnporh9b83sibzo1cp7hyw4t494sqoua4o049uydnim\",\n  \"nextPageToken\" : \"fmkl991whn7sz7o4shs8ldl3zwl5heqgrve3ag6m4tj160d35g9vmhlqfyu1fx1e6zyxhifg0vu\",\n  \"etag\" : \"provident\",\n  \"items\" : [ {\n    \"skuName\" : \"Meg Thompson\",\n    \"productId\" : \"89e7\",\n    \"kind\" : \"hikt195u8gcywyta06aal44ijth1nrlntw9rgwdu7auu8uxbctzf6mijs91loj99ot0s6eq\",\n    \"etags\" : \"k9yqm5hgtwxkkftlyjxuuts8h5igiwt9zu\",\n    \"userId\" : \"ahad\",\n    \"productName\" : \"Raymond Carroll\",\n    \"skuId\" : \"ulun\",\n    \"selfLink\" : \"58p2ocmiqa84mthnnttnax\"\n  }, {\n    \"skuName\" : \"Dillon Ruecker\",\n    \"productId\" : \"77y6\",\n    \"kind\" : \"nrrg7ymx52suqjxdrxs1vjyrvvv9vtuxlhfzycs807fr72ga142e30xg5tk0y81w82ujy5tlaccdh7n5rhnawc5x0igjw\",\n    \"etags\" : \"ubyv176twol4hhll1r6aosn28iu1mlmyb63qax1vgle9e0r8zaqbxo15pyrrj04yguobvjp9klptk8atedxov1nr0nkiqiiln8ppst53gw54i1ccjbe9ngc3aoli57kgigru5n71kxzi6njgxpe29\",\n    \"userId\" : \"76d1\",\n    \"productName\" : \"Ms. Kassandra Schuster\",\n    \"skuId\" : \"pc8m\",\n    \"selfLink\" : \"hupx\"\n  }, {\n    \"skuName\" : \"Danica Hartmann\",\n    \"productId\" : \"iwt3\",\n    \"kind\" : \"oc1k1c8nkduz579hg63peegtw8h5bpxdedfptrxl2fcm8zmmgm3kp0qngrap0m7n1l14os03rdh39ten836b9en6q87hrf5si3lkg3llqm\",\n    \"etags\" : \"2760wkd4lrm90gjvdfz2nki02flfi0jn8h1flw07gkcac9obcop3khsu58h2o3a51mxbb0eko6h8emp8syyzkdo3zz9ts8ojd\",\n    \"userId\" : \"ervq\",\n    \"productName\" : \"Santos Stark\",\n    \"skuId\" : \"3o1r\",\n    \"selfLink\" : \"sjiol143jvougtl8zfyilfs46b8pqhis8c2vuf0voibbz9sibiu2ti6fr3fdih445\"\n  }, {\n    \"skuName\" : \"Tatyana Morissette Sr.\",\n    \"productId\" : \"5qur\",\n    \"kind\" : \"qnuy3g3a1kzby63a3wym9cu9ql1txz4r1uyssudsb9yo724lsd0b9j05k43hipogk5z8zg8mquddqj19ibslhyua994wpzh3q4e88j6oltlqwmglt8h8cm4pnmz9o43h83l0ebhph11gp662dijsuaaag6d\",\n    \"etags\" : \"orgkpwzudui06d73ngtmgah044lmvcrbq1f0i7fbtm9n1bsfnnvhw5ixmfbq\",\n    \"userId\" : \"q23a\",\n    \"productName\" : \"Jarrod Parisian\",\n    \"skuId\" : \"3dio\",\n    \"selfLink\" : \"9f1mdkv75ew05kgegyh2vpe6879ojxns4jwy4as5byefzog1a39oe712ta4rpnepipmq3mrqcxz7958hhghsip60g2su1lzdzter2ad26v3hc14ht1i7c1v0lv5ggbu2gctpczilj5npc73ub3bgr05c4acuph323q\"\n  }, {\n    \"skuName\" : \"Clemente Fay\",\n    \"productId\" : \"07zz\",\n    \"kind\" : \"cgjuixn2tvbe9qz5zlk5niwjz3g5g2h1nwfk\",\n    \"etags\" : \"5xkqlr1xv4bv9guubvrnv1caizysrj503i05bkn63pqv7fro\",\n    \"userId\" : \"y0nb\",\n    \"productName\" : \"Mac Kuhic\",\n    \"skuId\" : \"u798\",\n    \"selfLink\" : \"p13qffdyktfi6owoh4p9nicdkzz5sgp5tdwoevfx2bg8g47qv81x9zzkklfo8fl1ac9ojqhheklsnn6pbjjilnk1coyb7rl0nusdvie1ynevv1i\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "705f1649-dc44-4436-bbad-8d3006b10378",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.775916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.listForProductAndSku",
          "schema" : {
            "properties" : {
              "etag" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "items" : {
                "description" : "The LicenseAssignments in this page of results.",
                "items" : {
                  "$ref" : "#/components/schemas/LicenseAssignment"
                },
                "type" : "array"
              },
              "kind" : {
                "default" : "licensing#licenseAssignmentList",
                "description" : "Identifies the resource as a collection of LicenseAssignments.",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7fa16e83-5862-4a0f-9228-cff3e8bf1b1f",
    "name" : "Reassign a user's product SKU with a different SKU in the same product.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/cad2/sku/kbmk/user/xxjt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Malcolm Hegmann\",\n  \"productId\" : \"6790\",\n  \"kind\" : \"y6xvsvfsdqnebg2llkw2fnl4c22p7ne1l5t634cae0fk\",\n  \"etags\" : \"vom7szijpbw5iqnbf1xfwbjwnc7hn1gc7fitq75qbkpz2\",\n  \"userId\" : \"0n43\",\n  \"productName\" : \"Nakisha Christiansen\",\n  \"skuId\" : \"1zvu\",\n  \"selfLink\" : \"c132mwbf9qzrigzrnn52f56l322i4vwop74my4syv1u2e6kbo473ns6112bbd3csngs86ix9isl7t4d1nbq7dugwedm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fa16e83-5862-4a0f-9228-cff3e8bf1b1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.773823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.update",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2f0a414-547e-48b1-add7-95c4862d82c6",
    "name" : "Reassign a user's product SKU with a different SKU in the same product. This met...",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/c87x/sku/v1ae/user/7uhu",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Werner Hirthe II\",\n  \"productId\" : \"70q7\",\n  \"kind\" : \"m1fld1q0cz36nkbfv8wrvl04rwc9q0ofbbl201oiksvgszlohbd3obf16kdp79ytzmypw7uww8ik205wfy71kaqirtkpcrdz9q2jyvyofntij0r6jdads986degltbwlykhn0qz56jg1m34mmn252ni9i4z9zfss\",\n  \"etags\" : \"0xbwyqcyhzfyo5h8654pbq5ntqtzot09j42i3lb5nkb41fz1047ax7hg0nft5ulpg460v6t6r3b3jogmx6wct497bt7lpz4kni1bwgdiyh1d5z9n1cvu3x2i3jeuvdr4fw85oozafwmih2swdgb5nmebrpwpdlku\",\n  \"userId\" : \"41w4\",\n  \"productName\" : \"Lorriane Legros\",\n  \"skuId\" : \"13c7\",\n  \"selfLink\" : \"fig3goh061d83xsfypkt1nn3rxlaozyn61kbixadqnsqrxrhamqwjqs0hcx433fhdrwiuwrngk58tpzsnaap8mq7h5rstgmu5zdlayv17s3bp8rc9nwal4147emnzj4m8uyrrbb6p7fniwj5q8mmkpany94ox3oyq61oxb9cei47ef0ktl6n2cv0alm0z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2f0a414-547e-48b1-add7-95c4862d82c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.773184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.patch",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b7f41183-f03d-48c5-a774-137f1f578962",
    "name" : "Get a specific user's license by product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/w269/sku/ab58/user/v3t1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Isabell Corkery\",\n  \"productId\" : \"r77p\",\n  \"kind\" : \"k9gko9drjh21x1q7bgvgzqv2jwy3p4ensknupqnuxi68ik88qogij01rtutdurhkfbnbpazvvsdicblndn15k7sr8tkx5i21s2ux0k2w0z3nxs6v5f2kah7utw51lbjqgh6eu9iphbb0imu9xlrs5ln4b6ymwiemq\",\n  \"etags\" : \"fcb5jv6soy8qmmiycqnviyzbbp9w6lcpskp00vfgjck6nt06f1tjg4e9reoyklen7m0m5nwda0eb6gvnuchxuu6th8mjpwe1srn4sqwashi1fvqlicskyybbkb4aqgohba36fvnulkbbu2pw24uhxupnp75o021o6szrb7areaqiawopz8i3orslntmphts\",\n  \"userId\" : \"slbv\",\n  \"productName\" : \"Amos Thiel MD\",\n  \"skuId\" : \"3njj\",\n  \"selfLink\" : \"wzgdvg6yt23j5qqt3t94jk69589c00dww70upwp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7f41183-f03d-48c5-a774-137f1f578962",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.772527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.get",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eec05fef-3f0a-4581-b0fe-06540b959750",
    "name" : "Revoke a license.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/3e1y/sku/63f8/user/146g",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eec05fef-3f0a-4581-b0fe-06540b959750",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.771865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6435756d-78ee-4b0a-a32d-fa140a275d3b",
    "name" : "Assign a license.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/x4bk/sku/r387/user",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Dr. Tiffaney Lang\",\n  \"productId\" : \"k742\",\n  \"kind\" : \"b0okzra8t956joxzvpztbsxb5dnm349yc5pr2wlr7ruxvm4vgn2158i3puu98s6ifpi6tnxselc5s0kjm6r39vu6zxoem8vytcz46otzsj7dhkyhtmtee2kav7leb570yqht36acit2lbzajl3\",\n  \"etags\" : \"zxd7y2k4brk8xsplhq63cef8ipw745r7tslzldyib90ppgzm2mn8059prvz3nekq24klqq61i9k3v7bxbwp7z9v0ei8c20pq1iur0pnah40bkma3ufkt195jn6\",\n  \"userId\" : \"y874\",\n  \"productName\" : \"Elene McGlynn\",\n  \"skuId\" : \"0tdr\",\n  \"selfLink\" : \"kb3s1eqc9ltqa4ryjd71ldzhkjx08fjtstfdpsadkehw0oqz6s1kvizpnzo3ovh33m5wrcd0snjt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6435756d-78ee-4b0a-a32d-fa140a275d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.771578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.insert",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}