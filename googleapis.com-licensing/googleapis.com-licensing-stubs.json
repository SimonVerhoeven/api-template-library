{
  "mappings" : [ {
    "id" : "76b5e5c9-ba07-431d-a39f-2b5b4dbe40e8",
    "name" : "List all users assigned licenses for a specific product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/acl4/users",
      "method" : "GET",
      "queryParameters" : {
        "customerId" : {
          "equalTo" : "t5t9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"kind\" : \"046k8ra2rkx2dxwvqjkukvauo05ifinnzkl\",\n  \"nextPageToken\" : \"8mteihq8xgmzsjj8yol0jwopipzloualvaw287m8t3d3avj24o1dpf\",\n  \"etag\" : \"iste\",\n  \"items\" : [ {\n    \"skuName\" : \"Theo Hudson\",\n    \"productId\" : \"kpqr\",\n    \"kind\" : \"418aknez60n6vmjnm5phegapzmjb8l6mm5w7kuvuv13d8djo0vejbw8wadbn0qiixc1yji311350x98px1zxxnfr5f\",\n    \"etags\" : \"hmbgkflshsdf9o8nrt6cks3k8prvy2sqm\",\n    \"userId\" : \"x4qw\",\n    \"productName\" : \"Scot Mills\",\n    \"skuId\" : \"s445\",\n    \"selfLink\" : \"sm5v6evi0jposbytz5sr4yigfpeuuq1cvkd7uzs1a3ihsb5h5stuspc\"\n  }, {\n    \"skuName\" : \"Phil Hirthe\",\n    \"productId\" : \"k228\",\n    \"kind\" : \"01fxbaynbutlm5hym38cu\",\n    \"etags\" : \"8s9zdcrvtecyxvd8x8ma2wp8rcomn00bu7pwmlblu57h45ce98qciydo8wdfbct1oip421300rf8unr869baixg4v6844qrslqp5zo8qf9\",\n    \"userId\" : \"y37g\",\n    \"productName\" : \"Bertram Murphy Jr.\",\n    \"skuId\" : \"pw3b\",\n    \"selfLink\" : \"xp48f8w1sp6rsfrhez4tgrjbi9agv\"\n  }, {\n    \"skuName\" : \"Winston Conn\",\n    \"productId\" : \"867b\",\n    \"kind\" : \"xiqfw4jvscorwwwuljpwypz3e0q5qz0cgf97rkmseqtqnpv6wy7usvff1qegi8tuwdcr31072mizd\",\n    \"etags\" : \"qtte4jov2ze7jnu1nf43uo8ek3q5bxpic28xh809kq2o\",\n    \"userId\" : \"8n35\",\n    \"productName\" : \"Mr. Johnny Fahey\",\n    \"skuId\" : \"994b\",\n    \"selfLink\" : \"6tlkhi831t9s5k05931w9uufnydbqsl42h4i9oiozn0eomrbf2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76b5e5c9-ba07-431d-a39f-2b5b4dbe40e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.182918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.listForProduct",
          "schema" : {
            "properties" : {
              "etag" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "items" : {
                "description" : "The LicenseAssignments in this page of results.",
                "items" : {
                  "$ref" : "#/components/schemas/LicenseAssignment"
                },
                "type" : "array"
              },
              "kind" : {
                "default" : "licensing#licenseAssignmentList",
                "description" : "Identifies the resource as a collection of LicenseAssignments.",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f35e0961-e5ff-450a-875c-3dda376b4685",
    "name" : "List all users assigned licenses for a specific product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/v05g/sku/7tn9/users",
      "method" : "GET",
      "queryParameters" : {
        "customerId" : {
          "equalTo" : "ftk5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"kind\" : \"tycc1gr207rs19e5h1ge8t4n469q4s7y9xini3a59nyb36eb5ewfige202m6f4wq19odp0dqjkapsmwnfytqrdr1lt6oiu83f6nt55tnjjfvnagtl8u5n6fbqodra6oz5y6gq8aquz\",\n  \"nextPageToken\" : \"gw6r71z5uzzlb3qwoykg0iwmtfkifhvtfe0rqc117kw6g\",\n  \"etag\" : \"sequi\",\n  \"items\" : [ {\n    \"skuName\" : \"Lakeisha Hermann\",\n    \"productId\" : \"7kc4\",\n    \"kind\" : \"2u3qodcymxmn8jlpbk4h321sfb7pud7w6290t878s10vhtnaltvq6dn33t7jai14vcmu3ru1gfr45dqqyh42ku7ibcmgy6z2lz8s2zhhiov6u2v6hhfshtu6jx71t9o2715bej4r4sgel4xej53kujv7ue8khbsfeo65ksk3lrpvqkwuc9hu1f6\",\n    \"etags\" : \"4yrn3wixow6un9bd4v930obgw4coe7bypri0wtnn8w2mzlddomtvn6ntxol068zrhypp3d6taor3whjozsgv1zjiu64820hc5qs8tmspkuei7vhxqfdltlsf53yc904\",\n    \"userId\" : \"5478\",\n    \"productName\" : \"Dr. Ileen Wilkinson\",\n    \"skuId\" : \"x78b\",\n    \"selfLink\" : \"pdeqsqbst4xe3dxzxztjwl8mbz8kquzokzm81lbt36hl7fatsklm9n5gtlzxlf8g5ijhzyjdt6volg8\"\n  }, {\n    \"skuName\" : \"Mrs. Johnathon Kuhlman\",\n    \"productId\" : \"3kw6\",\n    \"kind\" : \"r3ylk3b6jj4yzghgl7zuecywi01ktd0q9wao42htwd06i4vz3i2c5o4369fhy6x187l20ptqk0041slbcrige165pdu1lazsgaolvqy759crtssxogoioob6lmkk3rqihzlfdbp8wz8k50fgybm9oktxlx8ujz9j6zdhrw5y9sp1mhgpo2qjlqdv0a6v\",\n    \"etags\" : \"ggcgct0t2g45d183tgtaqnjfeufvsxex4ukr3fv393tfbh56okyxk7xustsflthf22qveh4oucz5tuw8vkyar17t2hqlktla3qdiefsbzvc020ypuzt\",\n    \"userId\" : \"1a0e\",\n    \"productName\" : \"Elidia Abshire III\",\n    \"skuId\" : \"r37i\",\n    \"selfLink\" : \"5ceentsagfvcmfwvkfj45obetpla0f6v0tq86wndo4vx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f35e0961-e5ff-450a-875c-3dda376b4685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.181254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.listForProductAndSku",
          "schema" : {
            "properties" : {
              "etag" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "items" : {
                "description" : "The LicenseAssignments in this page of results.",
                "items" : {
                  "$ref" : "#/components/schemas/LicenseAssignment"
                },
                "type" : "array"
              },
              "kind" : {
                "default" : "licensing#licenseAssignmentList",
                "description" : "Identifies the resource as a collection of LicenseAssignments.",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "The token that you must submit in a subsequent request to retrieve additional license results matching your query parameters. The `maxResults` query string is related to the `nextPageToken` since `maxResults` determines how many entries are returned on each next page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7f95fa4d-88df-43e1-85be-6c924ac1f181",
    "name" : "Reassign a user's product SKU with a different SKU in the same product.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/l22r/sku/n6q2/user/7fno",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Glen Hodkiewicz\",\n  \"productId\" : \"c7w8\",\n  \"kind\" : \"poz3h3v9az0go3vtbo67u179yznrb0vwtx6cbsl8dccr947p2cdkwn8avaueumxa7nrav88od44zgcssxdlv2terpso8yszppmvwzywu73gx\",\n  \"etags\" : \"2l2ljvwqve8prvsajihijult41yl7ycsrps66rc8xfwdxbkjfbe2dhbaz49qfnzusfshz12wpzro2hcmucuy5vuhdi4lc4zki01v8gypafkrga28b61f0ckh2x49ttk67owhi41ct2oykkzgj0tiu8b83uxg5iaptqk1d6d0l2bll5j68331n46ijsmd5j6sw7ic58\",\n  \"userId\" : \"i735\",\n  \"productName\" : \"Dr. Jamaal Orn\",\n  \"skuId\" : \"cs75\",\n  \"selfLink\" : \"rl7y0j09alwt18vqazbgts3yejc14t10f5kv5in310383t5uzcnldou81\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f95fa4d-88df-43e1-85be-6c924ac1f181",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.180019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.update",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "27e6ed27-61c7-4eec-85b3-90cfeaacbe1d",
    "name" : "Reassign a user's product SKU with a different SKU in the same product. This met...",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/r55q/sku/6u50/user/2u6c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Nelia Keebler\",\n  \"productId\" : \"7qh3\",\n  \"kind\" : \"f6kywzxnqslcqkz03ds9fr5vlsy5yxjrxfmlhf8wuj9jf7ceap4ufeggoxd9uph7gil2hh09ke00ckr8u1zn37afbfglgkycl8pwysi29ypcrkkntywn\",\n  \"etags\" : \"tc4lyd0kdyimzuh8mgic65schn9cjc3uolmx69q1na97gei5hkhkm15ytagm65y5c0bem732jwh36hj2bm2wjpa23lypgei9dctvayp2i92uxi0bhwpdv53awpmupc740di1yv2sb8rhde70ihlv8xc\",\n  \"userId\" : \"m220\",\n  \"productName\" : \"Andrea Hirthe\",\n  \"skuId\" : \"80r8\",\n  \"selfLink\" : \"3usyaxkfs3o3eg8ru1xc54v9p436g5k16ecpbrzlg9bxopj84q9ghvcrip7mkpc96z9ye454nqt85q1mexlbvo4arz4ylomz2iltl1qur9a63cj9qwum9uucv8qfjudkvi3d2p545qi3wycm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27e6ed27-61c7-4eec-85b3-90cfeaacbe1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.179304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.patch",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "88d99241-bed5-4abb-b0a4-5b01bc797c12",
    "name" : "Get a specific user's license by product SKU.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/805h/sku/k7nw/user/7ea9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Willy Macejkovic\",\n  \"productId\" : \"mcp8\",\n  \"kind\" : \"kve6okk929xisvzvgwl8s52n6ceu7631fn7ftl49681u77vb4ocev23bnkinb3\",\n  \"etags\" : \"617hfakp170ea97yyseelactz5hx91csdyx8v1y53d7b23cfau31m2zorado9h9ty\",\n  \"userId\" : \"1zer\",\n  \"productName\" : \"Kelly Hoppe\",\n  \"skuId\" : \"593q\",\n  \"selfLink\" : \"o7h73z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88d99241-bed5-4abb-b0a4-5b01bc797c12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.17856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.get",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "1fd50df2-7d43-4753-b217-594c3cd0b8ed",
    "name" : "Revoke a license.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/2co6/sku/ixp1/user/32zw",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fd50df2-7d43-4753-b217-594c3cd0b8ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.17779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "919f89bc-ecf1-4a9b-8fa4-3be1cef8d346",
    "name" : "Assign a license.",
    "request" : {
      "urlPath" : "/apps/licensing/v1/product/a000/sku/4u07/user",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"skuName\" : \"Rafael Green\",\n  \"productId\" : \"xpd7\",\n  \"kind\" : \"mows5972y80j58eul5vutdes8qwsg21hx2v7kbejjvsufsbit7wajs8tyqjvul6wu4gyevci3er640t6sqjh9en7p9vh82t9oq0ho5pntt17wryh27ldqhq1b6lu2o1fj7nkxp1j1hb5blzv7lxz7wrnu2ceurwz7kwvs84lby4gcq15ke1kwbp6txk1a4h0phcxsp\",\n  \"etags\" : \"a5piu8oso7izt47qwsy99vh91v7tm98kn8w6bezhqtcns7mrarbq\",\n  \"userId\" : \"o1u1\",\n  \"productName\" : \"Chas Kshlerin\",\n  \"skuId\" : \"7ugk\",\n  \"selfLink\" : \"fmywp4eg3vx71f27i3uqkioojnys2iz1ryamqckrunyw8ymhkmz4i8gb22rp5z00hqqdj1crbns3kq0p33bha4xpfl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "919f89bc-ecf1-4a9b-8fa4-3be1cef8d346",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.177422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "licensing.licenseAssignments.insert",
          "schema" : {
            "description" : "Representation of a license assignment.",
            "properties" : {
              "etags" : {
                "description" : "ETag of the resource.",
                "type" : "string"
              },
              "kind" : {
                "default" : "licensing#licenseAssignment",
                "description" : "Identifies the resource as a LicenseAssignment, which is `licensing#licenseAssignment`.",
                "type" : "string"
              },
              "productId" : {
                "description" : "A product's unique identifier. For more information about products in this version of the API, see Product and SKU IDs.",
                "type" : "string"
              },
              "productName" : {
                "description" : "Display Name of the product.",
                "type" : "string"
              },
              "selfLink" : {
                "description" : "Link to this page.",
                "type" : "string"
              },
              "skuId" : {
                "description" : "A product SKU's unique identifier. For more information about available SKUs in this version of the API, see Products and SKUs.",
                "type" : "string"
              },
              "skuName" : {
                "description" : "Display Name of the sku of the product.",
                "type" : "string"
              },
              "userId" : {
                "description" : "The user's current primary email address. If the user's email address changes, use the new email address in your API requests. Since a `userId` is subject to change, do not use a `userId` value as a key for persistent data. This key could break if the current user's email address changes. If the `userId` is suspended, the license status changes.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  } ]
}