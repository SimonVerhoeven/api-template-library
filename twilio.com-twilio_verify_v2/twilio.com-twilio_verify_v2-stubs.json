{
  "mappings" : [ {
    "id" : "e5142c70-438f-49f2-a54c-cb5f64af9c9c",
    "name" : "List all the available templates for a given Account.",
    "request" : {
      "urlPath" : "/v2/Templates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/782185\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/540309\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/849584\",\n    \"page\" : 9217389304769516122,\n    \"key\" : \"ph2vv31n7lf1bhd1rvlxalxsk28cp6tt2u1iuynt46mugvbu8nqu9jgz7q38yjy7zqva3cciufivskxmm78ucb8yg1du72967w6olpn9kojikudldgkrkzv60cpc5jlrnxwoupsqzwsky7lfmiabr4fqze\",\n    \"url\" : \"https://web.example.mocklab.io/111090\",\n    \"page_size\" : 1435820848885782629\n  },\n  \"templates\" : [ {\n    \"friendly_name\" : \"Denis Hills\",\n    \"channels\" : [ \"039bhuvt4jkrhxzvcggr2svmh75qdbw7ao6i6wzgj8jrmf8sbjqztbe4rdtql05pwquccpiq4s7odt14s5p8ug2qvzsgfokopls6pewdg9x48j73j6k72y3nhp84oips2\", \"h0jwfex27wlmq8ltahgkcq7mnrcte3z73tmkgwn5g5w1goimajjhb0vuhyixpuh8r1eyb2l29r9y8ohtgu9oi7p45wckcx59gsf7rooo6ll9\", \"nnk5pvy7osb9e9286d3soomx7ykfz27csb0vzxo20ygtkh3qm7vae1aeiqb71e14ltt13xkqazzyvln29tdu12cms36vomksxs90a3vitxj1ombjh1dxxuao14gddiy06zjboe28d61tqubz7lg99hpit9arcbtob8ovw7\", \"n3rsmoqsd5lx8nh0msrcl5mgrgsi06vpjohbf4lhy759tnlv7jdkcfgrv6thvdmhbndptkns5z9hnrt0qehhx1fep8capgst2epuqfsln9d42wpkzjhvga3x9jiuzww\", \"hjsqfxrv1asi4ar1oqb98ianzvko654zhq53cxc\", \"1bmr3mvu3a2ona39mcyg8opozptrx59i3eljk2jm7n43xrl6dsktn5j30s5y089bg7wamttk4hrtywb7pfpq2ru6atkz4pi44i6ejnp19uzdb24vr0vqhy1e0zqktkdnod\", \"rbnjge4mft3a6q3kd5gf810qevadvqgc22x2ucrl8nr4eekazxyl2drk1t8xvjms4sh8d89jj2734h4gxfdt3y8jptj88hudu3nveri4c1b21b8ltycn5rm6d1s9u\", \"yec6b8ywx4zihgzdadjto1yar1qp236wte1a1260umblnw52o0i7w56lbegtqw5ezh3nkhrcrppvwn66awkl4hua8oe64eoeqjm2iqarh\" ],\n    \"translations\" : { },\n    \"account_sid\" : \"ACEfFa854d133FE18878cBe19dCb642aB6\",\n    \"sid\" : \"HJ52990Cd49cc62cdCEaD8cFC3b7Cb6b38\"\n  }, {\n    \"friendly_name\" : \"Robin Toy\",\n    \"channels\" : [ \"zfvcu3cnnpna5qms2sdrmblcxtevayeap34b506inakq2o0p8uuuljlmzchvrmytflyje8mj8sdibwzbf4aolun2\", \"bs5zsppw0hsvyaloairri9gngmd0anlxq0vcj256zsfiv7t2e4zpg7zqaswggl5bny59ilzys2ncons79m8clkxisraep3bgthy75hsms67aqyis7oib3x8fuyitl3uz9azwsse529c3k3v6p42vva7lh1t2gw7k643g34jjfiusc8w73wc85avwckyohdov5\", \"pw6hxy8o3tgbrgm56otv3s38ypo6z5o14ecqts9eck8l8xlejivhd0mst6gbzvyjotumlk39r1dmchv9jmrfeenzdfj90r0gtvdw0zpxwb7ju5yjao523o05gj5h1c5qjr08gq4e\", \"gny4lq5hkibbjtzmmlm568hsfnbauvgw52ulzpr1r5sls85g6myo1cr9ljz3mjs4egrb4717gbch9mjq2eqv6lme2c7gixm05gljt87ovri8bwialm4swigy8eclf4vhwepcyj\", \"0u65mbqu7xb9ba8ulmij2syehc32m73mns5j3sh999l6\", \"zudhz5tmhwh2wqepr38nu91h0ridntxfu5qsmwa4cs1gvajrb50qlt605zof3ukhbbpbpi00k05bqdbmdbwfp229vksg651ekv4y7fn7bsu3ph9eabaqjx6s4jqgbvin26121cp4nvm8haqla35eu1iitgmvyv3z9o2hekr8iyzet6x0dogt\", \"fwkro7ttowz8gnmhauhd02josnoszfktxehz6cjkznxlc94kj37cz06gq1gdt507to547wlqt54n5g2fv3613r859y2m1dr0rqsy30fr3crjdaii8pn8k8b8ao3nyakvkq\", \"v0oa13taugjy94hq405ds71orce9285f5g24t8w1la9qc6liy4xu54uyhbl1x2x99c1a1if1ar2vw6dgwexelcd939lozhwr252sptntucqkp43zijhfnjr\" ],\n    \"translations\" : { },\n    \"account_sid\" : \"AC31cC810255f2E74655A36eeeEaF2C65D\",\n    \"sid\" : \"HJ666aa3b5F51f2E3BC2ACc1384de69eaB\"\n  }, {\n    \"friendly_name\" : \"Masako Morar\",\n    \"channels\" : [ \"d05u8ikszq7y9tywyzy6rw8n2iq2aa17g2a3ewrf5gliu0lg5ps208swjiwhs8rl9v6jabs2e8gbj67waez3ououiywboyi2y\", \"lmlkwrmcgowse3hf27ydhh2vid\", \"4l6pz3m54e9zb22khtvyteeyed7oq6c16u6nb3zj5ju7bjn0m7k7fql9os3tjjhuw33183pbqx1i6u1u5mvg5j7v\", \"jp085qaray2lnp6l8pzufllcnq27grsveegfw0vzsyb\", \"2io34tzy4j4hf2p6ro5tvnn1qd42h74j0yaqxyqvkwk7bmtd9dt3qe1oqlah7sfqfdpsv935psaw05velu9i80eyxvpexdevuel42oisk4fev1ha0k754a83cjwdvzzfh278t0o5jgyrxc1o83uusymg2swat0gw45rmx6\", \"oqv0r21ohor3g0vnoihj3cnq3ezo5x4yklouz2ohcu9sescueh5sqnmcrwnkhp6b5g1mnyn92lo15h4q\", \"pd67mmla4c35sroigaq05cazkcz6zql77q4d5kbc17cseqs0tpo7uwvm57t2ze27wwkylkl06nr96db98iati5815hjtbcvq9acl5q1fpgdorr8i8qvpce59fatoa496dwejqrv94687lp0fevubgghmgfzysh0t6iky6bja82mh4babibl06j9o0yhfyortadkyb\", \"qc371rlay3y2mtoj8t2ko2ier7p51uzhnecfjcra5yte4f60ho5b819g2o484yj0uz56j5nv4e9d83eugthwc5bovwihzita191pwipbkzdt7o6tkki1wdqx6g6tmiwani1yfkxrceetk7c05l9o3espn2gr6x76sgoj7vajf1vu4bucfwtw\" ],\n    \"translations\" : { },\n    \"account_sid\" : \"AC72049DEcEED9d0FaBb437a3dAc0CABe9\",\n    \"sid\" : \"HJE119aAf8C1A7970EFB6a183C9A7161Bc\"\n  }, {\n    \"friendly_name\" : \"Mr. Bronwyn Emard\",\n    \"channels\" : [ \"sjtfwowbawp1yg5fbnczyudu6kv51fkb517ftg1g3psyas0rwv746dgbxpxb9856h35i5en2\", \"mc0q17lkc4oqi3u3pkifzpecm\", \"dd884vogei2fkwo62kgmf638g1djscrxznp45znmjdvf976rvq9pm4ayxuwj16n5r22v298zaz1j39eomn7g22isj6idhg97veetf03knv0nityk\", \"llghguvio10x8iyykqppsnaetxx9jj5ev5svygfjqdgk\", \"24g9dxew30xmq6q17roykm5o0mmt0luz5u\", \"x4s9ptowbf5g39c6773so17xgogw9rkl00yova3z5j5a4vceleqfwn7rv6s9k6lfz4nt7rl5qdbnj6gaf0hmosvz6gmjovhbwl1ezst880d31an8vecsn68tg3015ytrxopq9k0e0ido1q6e6yj596dlne0vxtndvkwilsds2rp4rbxm8\", \"xymfuljo1ckoeupnqcbyx0x3oc746ajifktcin0ss1vlabfnvb298ilu2cv6yy90gdadti0nas2tiqdz9m62oru6l4oggi87k86bbqydonr2jczbga2a\" ],\n    \"translations\" : { },\n    \"account_sid\" : \"AC644277e7A301a69c119784ADbc71B25a\",\n    \"sid\" : \"HJ9aFc4dcBA6Fb4d8dBb1Ee6Ff57F1Ecd2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5142c70-438f-49f2-a54c-cb5f64af9c9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.317182Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListVerificationTemplate",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "templates" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.verification_template"
                },
                "type" : "array"
              }
            },
            "title" : "ListVerificationTemplateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "72591b2d-3fd0-4d4f-902f-2c84e887489c",
    "name" : "Update a specific Verification Service.",
    "request" : {
      "urlPath" : "/v2/Services/VADb90aeECaD2FEe32096cbCaAD0dE46E0",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code_length\" : 7100289750665427625,\n  \"totp\" : { },\n  \"friendly_name\" : \"Dr. Lula Morissette\",\n  \"lookup_enabled\" : true,\n  \"date_updated\" : \"2023-10-11T07:13:40.316Z\",\n  \"date_created\" : \"2022-10-17T18:30:04.316Z\",\n  \"default_template_sid\" : \"HJ6EaEaFEaf84B9beFBfb6c443bB7F6f0D\",\n  \"custom_code_enabled\" : true,\n  \"skip_sms_to_landlines\" : false,\n  \"do_not_share_warning_enabled\" : false,\n  \"dtmf_input_required\" : false,\n  \"push\" : { },\n  \"url\" : \"https://web.example.mocklab.io/722462\",\n  \"sid\" : \"VAA59f2F17Cf33Fc252CF81Abf6dF7BFc0\",\n  \"tts_name\" : \"Mikel Mayert Jr.\",\n  \"psd2_enabled\" : true,\n  \"account_sid\" : \"AC6d6e174ef94076B9568f80D21e0FFccf\",\n  \"links\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72591b2d-3fd0-4d4f-902f-2c84e887489c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.316297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "code_length" : {
                "description" : "The length of the verification code to generate.",
                "nullable" : true,
                "type" : "integer"
              },
              "custom_code_enabled" : {
                "description" : "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
                "nullable" : true,
                "type" : "boolean"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "default_template_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "do_not_share_warning_enabled" : {
                "description" : "Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`",
                "nullable" : true,
                "type" : "boolean"
              },
              "dtmf_input_required" : {
                "description" : "Whether to ask the user to press a number before delivering the verify code in a phone call.",
                "nullable" : true,
                "type" : "boolean"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the verification service. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "lookup_enabled" : {
                "description" : "Whether to perform a lookup with each verification started and return info about the phone number.",
                "nullable" : true,
                "type" : "boolean"
              },
              "psd2_enabled" : {
                "description" : "Whether to pass PSD2 transaction parameters when starting a verification.",
                "nullable" : true,
                "type" : "boolean"
              },
              "push" : {
                "description" : "Configurations for the Push factors (channel) created under this Service.",
                "nullable" : true
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "skip_sms_to_landlines" : {
                "description" : "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "totp" : {
                "description" : "Configurations for the TOTP factors (channel) created under this Service.",
                "nullable" : true
              },
              "tts_name" : {
                "description" : "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1df37aa6-6923-45e4-b9d1-1ee1e17f1e57",
    "name" : "Fetch specific Verification Service Instance.",
    "request" : {
      "urlPath" : "/v2/Services/VAd42Dd3AFb5649bFCBFA0FdAb1B778ccD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code_length\" : 2393874864817950104,\n  \"totp\" : { },\n  \"friendly_name\" : \"Ms. Imogene Collier\",\n  \"lookup_enabled\" : false,\n  \"date_updated\" : \"2022-04-03T15:13:53.315Z\",\n  \"date_created\" : \"2023-05-16T23:15:16.315Z\",\n  \"default_template_sid\" : \"HJF5F2Ee4e29eD56e7F8F337C66baFCB2E\",\n  \"custom_code_enabled\" : false,\n  \"skip_sms_to_landlines\" : false,\n  \"do_not_share_warning_enabled\" : true,\n  \"dtmf_input_required\" : false,\n  \"push\" : { },\n  \"url\" : \"https://web.example.mocklab.io/216175\",\n  \"sid\" : \"VA6AeE8FB8AAAe72634ae3737Df5fbeF35\",\n  \"tts_name\" : \"Miss Genoveva Hansen\",\n  \"psd2_enabled\" : false,\n  \"account_sid\" : \"AC6F7af7Af247Dea9C4C4cB1C580a7c7ED\",\n  \"links\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1df37aa6-6923-45e4-b9d1-1ee1e17f1e57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.315918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "code_length" : {
                "description" : "The length of the verification code to generate.",
                "nullable" : true,
                "type" : "integer"
              },
              "custom_code_enabled" : {
                "description" : "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
                "nullable" : true,
                "type" : "boolean"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "default_template_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "do_not_share_warning_enabled" : {
                "description" : "Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`",
                "nullable" : true,
                "type" : "boolean"
              },
              "dtmf_input_required" : {
                "description" : "Whether to ask the user to press a number before delivering the verify code in a phone call.",
                "nullable" : true,
                "type" : "boolean"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the verification service. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "lookup_enabled" : {
                "description" : "Whether to perform a lookup with each verification started and return info about the phone number.",
                "nullable" : true,
                "type" : "boolean"
              },
              "psd2_enabled" : {
                "description" : "Whether to pass PSD2 transaction parameters when starting a verification.",
                "nullable" : true,
                "type" : "boolean"
              },
              "push" : {
                "description" : "Configurations for the Push factors (channel) created under this Service.",
                "nullable" : true
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "skip_sms_to_landlines" : {
                "description" : "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "totp" : {
                "description" : "Configurations for the TOTP factors (channel) created under this Service.",
                "nullable" : true
              },
              "tts_name" : {
                "description" : "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "45be887b-84bf-4627-8deb-b5986d8ab4f9",
    "name" : "Delete a specific Verification Service Instance. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VA4E3CC0D3bCC075dB800BaD2ed634C4a3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "45be887b-84bf-4627-8deb-b5986d8ab4f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.315405Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "b2594424-b688-4b8e-9555-306c1c218a34",
    "name" : "",
    "request" : {
      "urlPath" : "/v2/Services/VAaDD19BEB23bf4CB2eee5B28E4E057a15/Webhooks/YW7bFdCafb6ccB0afDB7B622d55e01De77",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VAC3A8edc572a8dacfebd6f6A8EB022Cfc\",\n  \"friendly_name\" : \"Tonita Jakubowski\",\n  \"webhook_method\" : \"GET\",\n  \"date_updated\" : \"2023-06-04T19:17:43.315Z\",\n  \"event_types\" : [ \"j9aytqvpzp3y1qy47jnjap07drbt4fibezlsv8uxo\", \"ani4t26lik4zdlh2xmp28wbw0didlusyakbdouy0h52j6b0g07cnhhis7q89i6flg60b3iedyv14snuxupk2o1ar4e\", \"084ezulrmwtfqu4h391pr80f198wfom2g35glqmuzk8vecikmwqaj3qozpsbr53gagq471i3yesmssfvcj4f15hnpx84nmes96ez6xoskh0la3kth5rsl3fev2mmhklbedqcc2wj8k90pto0ebdmu62r\", \"iqeokordgg2fs1c6448g6oju8g38qk1mkgk35k\" ],\n  \"webhook_url\" : \"https://web.example.mocklab.io/788855\",\n  \"date_created\" : \"2023-11-01T07:48:21.315Z\",\n  \"account_sid\" : \"ACF9c536Fbb53fb8c9A8Ca7Cbc1EDdaa31\",\n  \"version\" : \"v2\",\n  \"url\" : \"https://web.example.mocklab.io/707535\",\n  \"sid\" : \"YWa306aAc1d442037959Bc1F0f7b538e4f\",\n  \"status\" : \"enabled\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2594424-b688-4b8e-9555-306c1c218a34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.31537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "event_types" : {
                "description" : "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the webhook. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Webhook resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/webhook_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the Webhook resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "version" : {
                "$ref" : "#/components/schemas/webhook_enum_version"
              },
              "webhook_method" : {
                "$ref" : "#/components/schemas/webhook_enum_methods"
              },
              "webhook_url" : {
                "description" : "The URL associated with this Webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f61b44c5-57a5-45b9-a0c6-dd7472564f90",
    "name" : "Fetch a specific Webhook.",
    "request" : {
      "urlPath" : "/v2/Services/VA3EbEdEe5560BD6bEe21bF7F8100834CB/Webhooks/YW89f158f88bD94cA64e44BCC45da5AEeA",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA27eBCEFbF5B4Ed1678d8f46AFF0CCC8e\",\n  \"friendly_name\" : \"Sydney Ebert\",\n  \"webhook_method\" : \"POST\",\n  \"date_updated\" : \"2024-02-09T20:00:37.314Z\",\n  \"event_types\" : [ \"mjmd3nfgofxhlvzbs3op0c4fbex4qcoj8a64ewq0ut1ufnpoe1cqvn15yp1hx5r9uinszm5yiluo4kgx6eiam\", \"pmclsww9mlzcnotspdbinxs6rgx27ldqykkp6ryh7zwt5jawvdkebt0vr8eon5wyhg7zv8m067i9oxfjwxj32c9lvomk6acdpa2zrf4m8dwlgifigtw4y360050l44hifc13k79f0h34hh2icfeekqjw1qpv9yflq84kpdw7z8jfbspdrluh4d01is0w1u\", \"f51vcpskhr9bxcfrg3m8q4nu0rmfqoywqna8p34tvwzt552u09r45nyjdprcim3wffcbpzrkjckea2x0ik\", \"w9978z1vicwbgv2jbvl3dq143cezbsjtjebuxxm0m0h7esvfl4zac2vg3y4dg\", \"vqglo85am5ieuyfiru48w5g28haf5kpzph385l79s63bc0pbm42ssmam7b3gmtkjdj5vtoln47t5plosjwtyr0kvqs904fkwq1mh1l9zbp1ft5nzw1sqjizz10dazuejc6t0whwqw7i780u7pv0oaccglirgeqionvzu8z3m8uyghutt4\", \"3o1k81zd358mc7oo5cu0gbedscl14hmfldm3v3nn8sl9p1yeuws5o20eh9qnw0k\", \"kbzludgzf414xgqyhymv5mz0igkj86mlkyvqv6vapqieh5clp9r9ypq5tpvk0137otnh5drm197zva2gipiiucfo67c5oo7tgoe6cq6mphh26dtt27fzw8qtro7kkkm2sml4f4l1z\" ],\n  \"webhook_url\" : \"https://web.example.mocklab.io/828000\",\n  \"date_created\" : \"2024-02-12T20:57:16.314Z\",\n  \"account_sid\" : \"AC8D1a74FDa6AfCBd26AFe79fe4B510A8D\",\n  \"version\" : \"v2\",\n  \"url\" : \"https://web.example.mocklab.io/108545\",\n  \"sid\" : \"YW7a34D7C1a9bcf8ED5aFaDb245Ac5aCB3\",\n  \"status\" : \"disabled\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f61b44c5-57a5-45b9-a0c6-dd7472564f90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.315022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "event_types" : {
                "description" : "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the webhook. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Webhook resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/webhook_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the Webhook resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "version" : {
                "$ref" : "#/components/schemas/webhook_enum_version"
              },
              "webhook_method" : {
                "$ref" : "#/components/schemas/webhook_enum_methods"
              },
              "webhook_url" : {
                "description" : "The URL associated with this Webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "bed99024-8738-4479-a13e-e3fbb01c23a1",
    "name" : "Delete a specific Webhook. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VA8cAa26A2B1D0A34DE4bDe46CFBCc8278/Webhooks/YW4f5CEaDAD1476A371478bF4717eBf5a5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bed99024-8738-4479-a13e-e3fbb01c23a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.314661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteWebhook"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2973ea16-cf4a-419d-bf94-314ea7477fab",
    "name" : "Create a new Webhook for the Service",
    "request" : {
      "urlPath" : "/v2/Services/VA5eAFBC8e64DDe28bdBC89Bd136B97616/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VAffd6ACde0fa446Db7EdfDa678DDc5aA6\",\n  \"friendly_name\" : \"Allen Collins\",\n  \"webhook_method\" : \"GET\",\n  \"date_updated\" : \"2022-08-12T11:47:00.314Z\",\n  \"event_types\" : [ \"4h23jwpncrmjaqy49kut4ma1q9wk4cmc3lxqvr7ubvt86fu1jzkupjt8xubdoq8eeooq5z5schtqnq0ywudl4uaa0781w7iqxk36r7j5ayy57bru7t\", \"5twfulyc4bwxj4s0skg56pcta1jt3qskg9ux754uku0zunan7gtqigvkumy5uzsm7yfrr0234fjyqu9dfibp0oseggqvkmfgefu0snzk5aa8opgmho19guu\", \"xzc7c8p8w5f5d8gqsjrxqdz9y16wm0ck3wiczpykwwh6ww45gkc4akdxrke0hn3memnfun9jnxne4q3cbx28k7b1c4oirezimpwk4ovy8puqkcaz9gb44yxat\", \"v4i6bvk2rmvnk8f0hwcmbfw6ufm2fli3a5wpd14j4cn5tqzkguhtrf3ivcya2v20id9oow22u1yc356etkpdeiehfbh4d1ehqzaewcqfavcqo75vksddfhxcjneson7z2s560mt4rfkda3ufyfs7\" ],\n  \"webhook_url\" : \"https://web.example.mocklab.io/013252\",\n  \"date_created\" : \"2023-06-01T02:08:40.314Z\",\n  \"account_sid\" : \"ACc85D35692cC1026aE3fe4fd0bB803815\",\n  \"version\" : \"v2\",\n  \"url\" : \"https://web.example.mocklab.io/209847\",\n  \"sid\" : \"YWFaA8bBEAf58CbADD6cF37CABcEcCCcD9\",\n  \"status\" : \"enabled\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2973ea16-cf4a-419d-bf94-314ea7477fab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.314617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "event_types" : {
                "description" : "The array of events that this Webhook is subscribed to. Possible event types: `*, factor.deleted, factor.created, factor.verified, challenge.approved, challenge.denied`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the webhook. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Webhook resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/webhook_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the Webhook resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "version" : {
                "$ref" : "#/components/schemas/webhook_enum_version"
              },
              "webhook_method" : {
                "$ref" : "#/components/schemas/webhook_enum_methods"
              },
              "webhook_url" : {
                "description" : "The URL associated with this Webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "51de7736-5b08-40dc-ad09-ef0d9693d789",
    "name" : "Retrieve a list of all Webhooks for a Service.",
    "request" : {
      "urlPath" : "/v2/Services/VAfC91d6f8f82Ccae13ce72DF7f0e7DeB7/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"service_sid\" : \"VAc5B0cCA47aF6B1AC69fAa99f303907c7\",\n    \"friendly_name\" : \"Mr. Ashely Roob\",\n    \"webhook_method\" : \"GET\",\n    \"date_updated\" : \"2022-11-24T09:32:27.312Z\",\n    \"event_types\" : [ \"0vp6ce8hg64kw6x8dm2t5zfzjhrygal4vnpouzzrq8juwj7m64m4ejhtat5rqqqbndbxoaiaf41tdqz6n9m9ad6aah52f5lwlqq7y1q52audrr8m7gyvomi0m1xzw981wo4s5x6okpmhj6ysruy8gu8h7w20zgjxpvzhny2cxt\", \"5ogfjw1hxuog1axvcjviy5oqiimtuwhg3jwt48bcd5yyvq1mnx6noi9cdm1ul0y12m6qpme1o2k0u4chdyoalifz51q2us2xgaufyxilyhc2mnjjeyiuwx\", \"9x3kflrvwqoa89cvz1tu2sqlc96qkqcpgvtnnu8fl4cp71dxawx9gny3qrcmpvhw43d2ooosribf4n6xzndhdeioeissv0\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/725529\",\n    \"date_created\" : \"2023-05-29T08:47:37.312Z\",\n    \"account_sid\" : \"ACE9b4c8aa4A6f5a8b9B5CcaFAcB1Db7Bb\",\n    \"version\" : \"v2\",\n    \"url\" : \"https://web.example.mocklab.io/979288\",\n    \"sid\" : \"YWc69bBBEC6863dAE7C2f063B7d37DdA7E\",\n    \"status\" : \"enabled\"\n  }, {\n    \"service_sid\" : \"VA8011E9cFFE4a28D9ec7ee37Ff882e9FA\",\n    \"friendly_name\" : \"Roderick Kuphal\",\n    \"webhook_method\" : \"POST\",\n    \"date_updated\" : \"2022-10-07T02:29:50.312Z\",\n    \"event_types\" : [ \"zixuk99lavp1pw0n9773qxjkes9gi75108y0sl9plth9oz4ckutu8zetqwsy8i11j1qiswrwf05er7rz2yccj0cwmq13d7rjpp59wrfxia10ubcj\", \"3coej5bjdkkivspm3ky4eaxdlqswqaan4bvro8n5eeltwbdfuhz1qwy428yz18qm6rnhx9ebd4lvaqqpoej6wierwrwnycdeeyth55u42tz2w0szazf6s4zitfn061fabmwe9caa5cg0rha0n421xv61z3vkdkgkt1lkl89n67jgfrqfb59fgrv05dyxvdve0m2r\", \"su5aobrmnc2e2n0f7wu0tc1s22wddpj1g86w8g09ww9qdlzwp8a4v8sv60cwgyur0b179vduiyo9q9cbrnm3846m97n78na12srrvp032bz6tl79eijwcj7z1mo2kembyaof6opqr\", \"usbgy61p213vbjgr2odpp6odkmwyrumduc5lfhmcrgmrsaauztyejdag6j1iwijedgebj9txywmtd3q9y1we6z3fbbo7a9gwlt2jmix02p9li1dj4z6uqojj\", \"t28wqekmi9lpq3mrkb5uxii9ve5ixpsmn5rx1p5w6ug2zlgi8\", \"66wa5o2lv0jn7z\", \"b9iot7o\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/720132\",\n    \"date_created\" : \"2022-12-20T22:07:22.312Z\",\n    \"account_sid\" : \"AC15C6EA76Fb12CaC0eb35BFD8D9FFbf05\",\n    \"version\" : \"v2\",\n    \"url\" : \"https://web.example.mocklab.io/531736\",\n    \"sid\" : \"YWb20Ed4C0F09cd3B0D5AF719F3F2DE2E7\",\n    \"status\" : \"disabled\"\n  }, {\n    \"service_sid\" : \"VA28e58Bf5adB1303f7fCBC586CecB30B0\",\n    \"friendly_name\" : \"Ms. Maximo Hayes\",\n    \"webhook_method\" : \"POST\",\n    \"date_updated\" : \"2023-12-29T01:25:46.312Z\",\n    \"event_types\" : [ \"p8zjislfo3aa1dlekyxl06iq58hr82ut8wsdh3s8qioqkxj9dvhdz2dgw5vwwec8b5xp1i4d4rbe86f5fr060dy5mv4r997rhdrmg15yi7rgdpcn6a2ey6fg6yxmyox16apyzpfch\", \"jeoy25pjado8n5g2dy4fjif4xrc7vusnbthac675ed3nu6rglf0lxdjd9zvyivdeky2y3r66vcanuojtwlmcuy5botwkq8lnmdet7011dhiwp0dyqeypetlhvfcldoxyoa35vm0cxenui13fiko55rcohz79sn8aftba9pb4rdd1k8nkwh83yrh4nvhp7yes\", \"4ihyrsrspuowx7u37dpcfo8umoecd9zgfxdyohzgzixkgjqtx3vfk0lzv77738y81rucyhefrxbiv2dbp5ku91a8mz7yudmprvz87svovzqnwt8gfs6s7zg6ctim3k8v1m\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/918393\",\n    \"date_created\" : \"2023-07-10T20:06:41.312Z\",\n    \"account_sid\" : \"ACC43DB0aFF6F6EaFdDd216784cD648d78\",\n    \"version\" : \"v2\",\n    \"url\" : \"https://web.example.mocklab.io/304411\",\n    \"sid\" : \"YW0b6f2CAa14afdFe5e1eEFFAD1879EE90\",\n    \"status\" : \"disabled\"\n  }, {\n    \"service_sid\" : \"VA15Fb93dbfC2Af0B8f3afbCb34bC61C3B\",\n    \"friendly_name\" : \"Linh Halvorson\",\n    \"webhook_method\" : \"GET\",\n    \"date_updated\" : \"2023-12-05T22:28:22.312Z\",\n    \"event_types\" : [ \"o67osc64eu8tamcfw6paejr6xqqkk30t92sryry49b4cdt871jwjrxzj2svt01rnnt3uut20lbojrb63hgkljjlzpzyjxwtr558cdgjk69juggt4uxbjpaaggeawbs6\", \"qhh\", \"fjpgf7hxqh8yxflgr2bnfbn3b6jtjqwf9hd5fxr5\", \"4kv9h5k78ibd10n3b0c6rrddf97ou4sewoid4bjgyvnpzvq88gwhvobeidnlyg6entr854lifmc0micoad\", \"g3uhu6hx9g874qtvnpgggnhh0dvjtd0bswnw8l8rp5etoczn4l2c23h3ybqsdxbuj7e2eawzyt3apz0erxj1uhgqje\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/957031\",\n    \"date_created\" : \"2022-10-20T19:29:41.312Z\",\n    \"account_sid\" : \"ACdBF7C21bbbF882ACC0BaBA8bfdB39aD1\",\n    \"version\" : \"v1\",\n    \"url\" : \"https://web.example.mocklab.io/509574\",\n    \"sid\" : \"YW407B44bDAf689F207d535a3e9Fcdd0Bf\",\n    \"status\" : \"disabled\"\n  }, {\n    \"service_sid\" : \"VAd7a0EDcf26B0EB4205eCA4D07BAD77fB\",\n    \"friendly_name\" : \"Mario Schumm\",\n    \"webhook_method\" : \"POST\",\n    \"date_updated\" : \"2024-02-02T10:31:50.313Z\",\n    \"event_types\" : [ \"ymj05pzpy95xsku6hqevhnpglgzvicccan7tm08jjr9aqq6rqst0kttszfgfooc2x9ibthp4bbf8olzosqm5lrcavxz6nyv23vqrsunkr9chevl1aa1wuzdu7nwlwm91ue9vttskxo303yo3c\", \"67zrr0vnazijerh60uwscz4de3naes6lhwugou4xwcq512kn1ilkg60mh66a0b0zkpulpb3uuj18psug7xtrjlucb49hquq87iz2uzzex2q5mralfu4086t30ahc38detf1o8h591ndf\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/817242\",\n    \"date_created\" : \"2022-10-23T02:02:28.313Z\",\n    \"account_sid\" : \"ACAA8A18e1cFaAFcbe2fA23211b1EA5CfC\",\n    \"version\" : \"v1\",\n    \"url\" : \"https://web.example.mocklab.io/020558\",\n    \"sid\" : \"YWAA229dc5d1B29c66EB28037fae04fd8F\",\n    \"status\" : \"enabled\"\n  }, {\n    \"service_sid\" : \"VAAcfB315f3D63FfdfdAE159be0CD98DD7\",\n    \"friendly_name\" : \"Shyla Pacocha III\",\n    \"webhook_method\" : \"GET\",\n    \"date_updated\" : \"2024-01-31T06:33:48.313Z\",\n    \"event_types\" : [ \"bae97uvbimkprtcb67ba1zxrophqvubm23z22pwcvq4e6l4r4wcv8f6ret90praxg1ideq6rsgsm3ojpjknzquux6nj13denl548fxp68pkvfqgla1e6ziy680fuxklq8nmwteqn090txk4o2wmc8tdjsm4vg5hq7iycthp5ca8q90tp33npz14wl1vsuyq9juh\", \"4yum8njg7ofwyedzyrxqxjsib42gq6y48vdx2wxjrnq5vpm6ahgzlizyjzdylb0nwo2lpct5fuuwpfl57jbmn3kvd9sn00uf8qblwqa64fsgp574ey4g48ywup3jpod9f8dpzz4yedom2r0ybf00ayqfqt5zipwhyux\", \"g7vrv7ou9isgx5t4662q56ajhxvogcavha6qxjjosbqn4iv4s1u2zo6lv7c7r80x9bfkgkqs62mxah1tfftiwloojt98hch8fg541zsudb1ebfh8acbiu2k3du6mgw8x968twvij7qhhl3hjj4g2qa53hbj5koysxctljksbxrk03d\", \"5y8m6ckjk4wm7g7znl7lfy9yfl2qmmm8wmvoy93pgrbklh66xkuhy46tnqz21l0lpkfrzlqe7lobqrxeb\", \"4x0ibtxx4aqs7q2h3dczug\", \"an3aj50ovhoeoqpg0knx7efahgwnn75f47lfu2x83gk4xvx0cof87f1vgtilysezx9smzx5wlhtsq8aklfcu3qh972unqfnc3bhd78lebfuluq8pntrng6uxo2dd4cjlctbl2ihk0741e8vq0283a3mqvrvvrge4z\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/070507\",\n    \"date_created\" : \"2024-03-04T13:06:00.313Z\",\n    \"account_sid\" : \"ACd7aBdA53bd2e2dcD8AB4Eb9dbab01c80\",\n    \"version\" : \"v1\",\n    \"url\" : \"https://web.example.mocklab.io/077657\",\n    \"sid\" : \"YW7C43dA722Fc6B0e3C78aDE19BBeeF404\",\n    \"status\" : \"enabled\"\n  }, {\n    \"service_sid\" : \"VAD2BB1b38EBbA1BDD3B04d8aB1E93707d\",\n    \"friendly_name\" : \"Rufina Morissette\",\n    \"webhook_method\" : \"POST\",\n    \"date_updated\" : \"2022-12-30T12:36:31.313Z\",\n    \"event_types\" : [ \"fdaceabqkqnqplni2pu0zqqd0d8kqv1mfmuymi94f1ub7dpvs2q7z89cesq3qziojgcn4yahpu7cfougjm6qb16nyn42\", \"nvooz7begkj67scm6sryt6d02hk9ee5vu2nl5gi044ks4bs6ot5myv2jg\", \"xzyp5lgsto1z31d3wanivknlvqhm5zupa5uq9gwg53pka5einsxx18revtyt2oa0v4uvnqluqrbf546efhtx43od6hiwgegr803sg0e8wieqcqv8e9ok8aes0ol2c1lqx1l93suswravaqkg7sx988lpmo07hkrkmzyft\", \"l5ssd62uxecgpsl7v37g8fuodjj3o7agiuy5qefuwtmk17f5aq838jl8a6gomy917acj1s0ynp4jmuh9a6nqukd1tv02wtw4w2dzsg\", \"38zv4vitmgx8vpcnx3d7qs4wsgqke5454ruanu2o55vvc58llwf81wy4g6xjezx0bxhbz5jyzu9yz3j6pleqnmbshyyvu8dcxfl2zgxrcnqd88j7l79wfin6roho1gyj0no3c1ja1vza6f94xnkmyjtgr9cz3m6je35fynnw0gfzmy8cun4s7mjnjn63qfe\" ],\n    \"webhook_url\" : \"https://web.example.mocklab.io/887009\",\n    \"date_created\" : \"2023-09-28T23:20:11.313Z\",\n    \"account_sid\" : \"ACf1E8DFb9442aBD3EDdeDBeD4C8B983a4\",\n    \"version\" : \"v1\",\n    \"url\" : \"https://web.example.mocklab.io/901820\",\n    \"sid\" : \"YWdbF6cC4a83b2ecE7F3CcAd69B8ddDaf3\",\n    \"status\" : \"enabled\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/751939\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/757543\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/641443\",\n    \"page\" : 2661464904357938266,\n    \"key\" : \"w8r\",\n    \"url\" : \"https://web.example.mocklab.io/233617\",\n    \"page_size\" : 1812841953824865295\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51de7736-5b08-40dc-ad09-ef0d9693d789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.31422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "ddaecddf-7d38-4061-97c8-9b451b07566f",
    "name" : "Update a Verification status",
    "request" : {
      "urlPath" : "/v2/Services/VA4fef9eAaaB7AB8CACE9dFCcCFdAdcfd4/Verifications/51eo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lookup\" : { },\n  \"amount\" : \"yoojos7jsoewumsnxwy3jy4dprfkd6jjm23wbjmrzg141kvq8tg7aq31rmj\",\n  \"date_updated\" : \"2022-06-06T15:36:11.311Z\",\n  \"date_created\" : \"2023-05-26T20:53:25.311Z\",\n  \"sna\" : { },\n  \"channel\" : \"email\",\n  \"url\" : \"https://web.example.mocklab.io/285053\",\n  \"sid\" : \"VEab5d7Ba731A6044cE7EBD64Ac62bCc1A\",\n  \"payee\" : \"3ur4xbx50skxbf5p9jek105ysh6yny1go72btgyrfvuvikswzrln85fd51owmax44by4lq1kkumer7hsbcwwft8b9v0jmypqlugsypa11g9oudp3q26hs92hlnf5leqg6nrsoaxcc2ayfxcd\",\n  \"service_sid\" : \"VAb34e48DB3693949f565b2Fe39D902b3A\",\n  \"valid\" : false,\n  \"account_sid\" : \"ACf61FeEEB447a1727c7f1cB1bA8DeF339\",\n  \"to\" : \"11ixvcrgn9j25kpfx4tzqinnovxc5kyldbauwnhmg1zbk52unso8qbuzyii5ugab5jwdo4m68gqu3izrspx48y8n8q0j5a9ucpyg0sojlef4zqck89u4btjzi3i9ri7pj9epnj625fncnuffrda78wsaox007nc23jwjz8073\",\n  \"send_code_attempts\" : [ { } ],\n  \"status\" : \"sb892qopqp11ssuo86g543b6qs074sdlltqtmbivutx7sdlbg05l5nxd2mmqrxptzqrq0whbz6x5rzpd9avli26fx89zjaqul4bhx2x5qo5pa7sjllp444ra8k2ryyko06t1upal6c4zl8dbgn56klagykkw6uhrv4evp990jxjk8svmxz41gll7c3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddaecddf-7d38-4061-97c8-9b451b07566f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.311964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateVerification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "amount" : {
                "description" : "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "channel" : {
                "$ref" : "#/components/schemas/verification_enum_channel"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "lookup" : {
                "description" : "Information about the phone number being verified.",
                "nullable" : true
              },
              "payee" : {
                "description" : "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "send_code_attempts" : {
                "description" : "An array of verification attempt objects containing the channel attempted and the channel-specific transaction SID.",
                "nullable" : true,
                "type" : "array"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sna" : {
                "description" : "The set of fields used for a silent network auth (`sna`) verification. Contains a single field with the URL to be invoked to verify the phone number.",
                "nullable" : true
              },
              "status" : {
                "description" : "The status of the verification. One of: `pending`, `approved`, or `canceled`",
                "nullable" : true,
                "type" : "string"
              },
              "to" : {
                "description" : "The phone number or [email](https://www.twilio.com/docs/verify/email) being verified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the Verification resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Use \"status\" instead. Legacy property indicating whether the verification was successful.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "63d12480-4b58-4e3b-a6d9-7ba99fff6cb8",
    "name" : "Fetch a specific Verification",
    "request" : {
      "urlPath" : "/v2/Services/VAA5aDd798F3eD0fc75c86Ea27cD41ba24/Verifications/o3rp",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lookup\" : { },\n  \"amount\" : \"odpg4fd7n025024iz069mx6i8pcopcyvkwrksmm292qm4kozbfh3oknl0grncjd\",\n  \"date_updated\" : \"2023-05-29T20:08:56.311Z\",\n  \"date_created\" : \"2023-09-17T08:43:45.311Z\",\n  \"sna\" : { },\n  \"channel\" : \"sna\",\n  \"url\" : \"https://web.example.mocklab.io/231446\",\n  \"sid\" : \"VEaab8D1A2Ab8fC5aBbcA8F5C4C33FB7Bd\",\n  \"payee\" : \"bzbd\",\n  \"service_sid\" : \"VA1EEAd330Cf7caA8cC1e03D56aca98ACf\",\n  \"valid\" : false,\n  \"account_sid\" : \"AC5dAF6e6ed67f9115CDaCbeA51b0AFaa1\",\n  \"to\" : \"3qkksgq54nyxle4nkrrn8ceak1ovl7nntnlp41aw9rryn63smhvwtysnldhvnydox76ju0svx4hazdxlszrg5\",\n  \"send_code_attempts\" : [ { }, { }, { } ],\n  \"status\" : \"9zy58592gvd6zogn398ejcv9cczi8gt2f5p06ewez7ijlub4pniia50kbicnl9363r3jt9tj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63d12480-4b58-4e3b-a6d9-7ba99fff6cb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.311617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchVerification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "amount" : {
                "description" : "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "channel" : {
                "$ref" : "#/components/schemas/verification_enum_channel"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "lookup" : {
                "description" : "Information about the phone number being verified.",
                "nullable" : true
              },
              "payee" : {
                "description" : "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "send_code_attempts" : {
                "description" : "An array of verification attempt objects containing the channel attempted and the channel-specific transaction SID.",
                "nullable" : true,
                "type" : "array"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sna" : {
                "description" : "The set of fields used for a silent network auth (`sna`) verification. Contains a single field with the URL to be invoked to verify the phone number.",
                "nullable" : true
              },
              "status" : {
                "description" : "The status of the verification. One of: `pending`, `approved`, or `canceled`",
                "nullable" : true,
                "type" : "string"
              },
              "to" : {
                "description" : "The phone number or [email](https://www.twilio.com/docs/verify/email) being verified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the Verification resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Use \"status\" instead. Legacy property indicating whether the verification was successful.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e0c73982-b4e8-465d-a7c4-da72f9298094",
    "name" : "Create a new Verification using a Service",
    "request" : {
      "urlPath" : "/v2/Services/VAC5B72A6deeA6AdaeB9Ee4CD556C94E4D/Verifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"lookup\" : { },\n  \"amount\" : \"mm4iy7v38f5zni02cgq4hh31s0ailkki8ppi97bvflhkj158j8jvlz3zqz6npqk2pngdl0ti10my6fywremkpv4qnek\",\n  \"date_updated\" : \"2023-07-25T23:33:18.31Z\",\n  \"date_created\" : \"2022-07-26T15:22:30.31Z\",\n  \"sna\" : { },\n  \"channel\" : \"whatsapp\",\n  \"url\" : \"https://web.example.mocklab.io/419349\",\n  \"sid\" : \"VE8a22B4b7cAE066193C4E537EB6E9f4D8\",\n  \"payee\" : \"ehvn9sjakxrmolzxvewjkppw5kafccgafpg7572iva4qoazy1c24ckyobrzcxr1dyili1c7gohddwejra1flh8ri5r9ihifl21aftz1i0qj7k55g629bgrkhzvvu0xn4w86blsijuyhpunvpuq8u6mugubjruy3cv1i5hqx6qccrhzg\",\n  \"service_sid\" : \"VAbB8fAae7FaB50fde52bBDAe3CBdD1bEb\",\n  \"valid\" : true,\n  \"account_sid\" : \"AC4bAED618EA21d012F1C3e9aaBDD88F04\",\n  \"to\" : \"sqv4lx91nfim4a84ix6yu12d30\",\n  \"send_code_attempts\" : [ { }, { }, { }, { }, { } ],\n  \"status\" : \"rgsfszaigdylesn2w2ab9vmamqiw1u9sr9ho9ixrgsqhdnppf32kujwv59h35l31yfh6kh0hiu99bjo15on1bn5bkkesa3feqg8rx2vc30kr8ofjoupvdtaewhputtyyr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0c73982-b4e8-465d-a7c4-da72f9298094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.311268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateVerification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "amount" : {
                "description" : "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "channel" : {
                "$ref" : "#/components/schemas/verification_enum_channel"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "lookup" : {
                "description" : "Information about the phone number being verified.",
                "nullable" : true
              },
              "payee" : {
                "description" : "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "send_code_attempts" : {
                "description" : "An array of verification attempt objects containing the channel attempted and the channel-specific transaction SID.",
                "nullable" : true,
                "type" : "array"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sna" : {
                "description" : "The set of fields used for a silent network auth (`sna`) verification. Contains a single field with the URL to be invoked to verify the phone number.",
                "nullable" : true
              },
              "status" : {
                "description" : "The status of the verification. One of: `pending`, `approved`, or `canceled`",
                "nullable" : true,
                "type" : "string"
              },
              "to" : {
                "description" : "The phone number or [email](https://www.twilio.com/docs/verify/email) being verified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the Verification resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Use \"status\" instead. Legacy property indicating whether the verification was successful.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e680ee3e-6cc7-467f-94f3-3ff44c9f23d4",
    "name" : "challenge a specific Verification Check.",
    "request" : {
      "urlPath" : "/v2/Services/VA43B3CF9ab14fF87151D762b5A19894BA/VerificationCheck",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"payee\" : \"9n5ndw58av2g3s4slmo9v7sf4jmnzvdl7hg3dofhw1bh31m1x3d56isnys4pt6j8apc3tydsbm390xpodri4r91yhymzp4w1bztd4ca55upfpotufzh6hpoyrh12wmfd8asl7zkgtxpv7jtz98hz2m9di\",\n  \"service_sid\" : \"VA8Cd082CfEDc798E88B3E39f28294Ce2e\",\n  \"valid\" : false,\n  \"amount\" : \"p79kb3mg8xhdxrwflphmdm83ex5ss6k47w9r57wq0z18g9yug61xs9x\",\n  \"sna_attempts_error_codes\" : [ { }, { }, { }, { }, { } ],\n  \"date_updated\" : \"2023-06-01T08:28:18.31Z\",\n  \"date_created\" : \"2023-05-19T07:57:48.31Z\",\n  \"channel\" : \"email\",\n  \"account_sid\" : \"AC6F6dBBb67eAFB6433B42581dc5eCFC3d\",\n  \"to\" : \"1vn4i9kt41zbd9ga0xwkti1p4bpfd7bfydygkhjnqobt7ef27gaeaykdy3cfzwuzd2wv0bbm\",\n  \"sid\" : \"VE5eFaCE4aBBe9dCc7A8d504dBA4A4B737\",\n  \"status\" : \"lprf3dnqd3qb3dfpm8tvrxym8zzczowf9mwoogmsupr9iupexbtops24t61m2qgtyvvuxvjo0b8h2kxmd7d49y1zadlln3ls4kiisgt6gfc4dtr5l2789indyfb5qzul2yrrnxgeh4ctszjbintkfhw4h46h7cj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e680ee3e-6cc7-467f-94f3-3ff44c9f23d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.310906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateVerificationCheck",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the VerificationCheck resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "amount" : {
                "description" : "The amount of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "channel" : {
                "$ref" : "#/components/schemas/verification_check_enum_channel"
              },
              "date_created" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the Verification Check resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date and time in GMT when the Verification Check resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "payee" : {
                "description" : "The payee of the associated PSD2 compliant transaction. Requires the PSD2 Service flag enabled.",
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the VerificationCheck resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sna_attempts_error_codes" : {
                "description" : "List of error codes as a result of attempting a verification using the `sna` channel. The error codes are chronologically ordered, from the first attempt to the latest attempt. This will be an empty list if no errors occured or `null` if the last channel used wasn't `sna`.",
                "nullable" : true,
                "type" : "array"
              },
              "status" : {
                "description" : "The status of the verification. Can be: `pending`, `approved`, or `canceled`.",
                "nullable" : true,
                "type" : "string"
              },
              "to" : {
                "description" : "The phone number or [email](https://www.twilio.com/docs/verify/email) being verified. Phone numbers must be in [E.164 format](https://www.twilio.com/docs/glossary/what-e164).",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Use \"status\" instead. Legacy property indicating whether the verification was successful.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "7913f9dd-76e3-447a-95ca-499145af78e4",
    "name" : "Update a specific Rate Limit.",
    "request" : {
      "urlPath" : "/v2/Services/VAaDe4AED81Dc92A61AEaec451AF02CBaC/RateLimits/RK3FE36DBf240c3B8cA47D3EB18aF2FbA7",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA9C457F19C6A4D06cdA1dc9adeD3945B2\",\n  \"unique_name\" : \"Tamera Fritsch\",\n  \"date_updated\" : \"2022-10-15T22:00:08.31Z\",\n  \"date_created\" : \"2023-12-16T13:41:53.31Z\",\n  \"account_sid\" : \"ACAA4731EdCB75Da2983dcc80f0FCcCbFd\",\n  \"description\" : \"Magnam necessitatibus debitis debitis voluptas omnis sint. Est optio veritatis neque voluptatem qui facilis. Possimus sed cupiditate laudantium non. Est molestias et est dolores. Impedit repudiandae a\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/163569\",\n  \"sid\" : \"RKAe01Dc2f28221bE22A3daD08474b4cdc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7913f9dd-76e3-447a-95ca-499145af78e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.310618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateRateLimit",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Description of this Rate Limit",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Rate Limit.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Provides a unique and addressable name to be assigned to this Rate Limit, assigned by the developer, to be optionally used in addition to SID. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "63ebfe85-8ec6-48c9-89cc-21362a8f848c",
    "name" : "Fetch a specific Rate Limit.",
    "request" : {
      "urlPath" : "/v2/Services/VA4d5408fa9Ef7c80a53407893AD50d201/RateLimits/RKd25Ed80de0FFEaeFAdD881eb86461cfa",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA1Ab7B8359FBd218D4019087baC8a25da\",\n  \"unique_name\" : \"Lindsay Hane\",\n  \"date_updated\" : \"2024-02-07T07:26:45.31Z\",\n  \"date_created\" : \"2023-07-26T09:16:04.31Z\",\n  \"account_sid\" : \"AC61708aB67f58EC11AC733F8B9A68b1Bb\",\n  \"description\" : \"Repellendus minima cum nostrum perspiciatis. Et consequatur aliquid quis molestiae pariatur maiores. Ab quas veniam error possimus.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/821231\",\n  \"sid\" : \"RK0eA32a7f9734aC55BB1fe1ecBd6a03BD\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63ebfe85-8ec6-48c9-89cc-21362a8f848c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.3103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchRateLimit",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Description of this Rate Limit",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Rate Limit.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Provides a unique and addressable name to be assigned to this Rate Limit, assigned by the developer, to be optionally used in addition to SID. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "b05b6ac1-852b-4351-9d2a-602c709c1b96",
    "name" : "Delete a specific Rate Limit. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VA9aa4aDFbC2Ab07efe1babDC3D40F4a0c/RateLimits/RKaCFDA48bFcd07f767b9a2aEAbcAcDC8d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b05b6ac1-852b-4351-9d2a-602c709c1b96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.309992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRateLimit"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "1a66a983-5359-4fb8-a497-70a9af11094e",
    "name" : "Update a specific Bucket.",
    "request" : {
      "urlPath" : "/v2/Services/VA0ACe72FA1Ea49058CbEf51c42e4b80E6/RateLimits/RK12a089aD6d46fd5e265DF621CFc6eEDF/Buckets/BLC75E61c941385a5aaC78fC56e5A82675",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VAbaa0ACF2CA6eFD7cbF8617b9ae20B3b8\",\n  \"date_updated\" : \"2023-10-28T21:39:43.309Z\",\n  \"max\" : 3263052082824515058,\n  \"date_created\" : \"2023-10-29T23:22:19.309Z\",\n  \"account_sid\" : \"AC8eAaCafD8EAF7eFe106d09eFC70443Db\",\n  \"interval\" : 7833653584634745895,\n  \"rate_limit_sid\" : \"RK8a1Aea157c2BF7Aba7960bFD3dC449D1\",\n  \"url\" : \"https://web.example.mocklab.io/628205\",\n  \"sid\" : \"BLE31aDCaC77D5aE525B2c79d5457E0fD7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a66a983-5359-4fb8-a497-70a9af11094e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.309947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateBucket",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "interval" : {
                "description" : "Number of seconds that the rate limit will be enforced over.",
                "nullable" : true,
                "type" : "integer"
              },
              "max" : {
                "description" : "Maximum number of requests permitted in during the interval.",
                "nullable" : true,
                "type" : "integer"
              },
              "rate_limit_sid" : {
                "description" : "The Twilio-provided string that uniquely identifies the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Bucket.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "7f64c04e-3302-427a-99d3-316f4ab9fe59",
    "name" : "Fetch a specific Bucket.",
    "request" : {
      "urlPath" : "/v2/Services/VA0D36fCb1F83a0A80aA2F53A4effaD9D6/RateLimits/RKD1DbC8Eb46563Bf5cC2E0C2bFBe0d6aC/Buckets/BLae2AaC1fDb51BDD4497C8ff51582b90A",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VAF7bC93edFd77A4F3ff4a2b58902b7EaE\",\n  \"date_updated\" : \"2023-07-29T19:18:49.309Z\",\n  \"max\" : 3168927960269486718,\n  \"date_created\" : \"2023-03-13T03:45:49.309Z\",\n  \"account_sid\" : \"ACC9a25bd2c0ac704FCFB81dfC9ce2965e\",\n  \"interval\" : 6659711364150110678,\n  \"rate_limit_sid\" : \"RKc6330B75EBa0ceBb9f0fdC83c83F7dAD\",\n  \"url\" : \"https://web.example.mocklab.io/454289\",\n  \"sid\" : \"BL752f7aB2B2b3bacB1fABFBa346F8FAAC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f64c04e-3302-427a-99d3-316f4ab9fe59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.309751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchBucket",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "interval" : {
                "description" : "Number of seconds that the rate limit will be enforced over.",
                "nullable" : true,
                "type" : "integer"
              },
              "max" : {
                "description" : "Maximum number of requests permitted in during the interval.",
                "nullable" : true,
                "type" : "integer"
              },
              "rate_limit_sid" : {
                "description" : "The Twilio-provided string that uniquely identifies the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Bucket.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "6dd21c74-8e9a-440f-a078-16bca5d74b89",
    "name" : "Delete a specific Bucket. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VAC1fB6274905eb722E5ADB69794CD05Be/RateLimits/RKBE6D5928DbDBb645acCD89874A4a8E33/Buckets/BLaB89DdEb8E5C92D781a79e8aa797cb62",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6dd21c74-8e9a-440f-a078-16bca5d74b89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.309551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucket"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "5ce8a90c-d154-45fe-9153-31eb51138177",
    "name" : "Create a new Bucket for a Rate Limit",
    "request" : {
      "urlPath" : "/v2/Services/VA587CD9980508BE24abeFbd69cB73C5Ed/RateLimits/RK1Ba64CcBb5EeEDBf72aac1cEdE895a71/Buckets",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VA6Db739D529C7FC7c6D6D7A9DB2da7A2C\",\n  \"date_updated\" : \"2023-01-11T15:59:18.309Z\",\n  \"max\" : 6359643039953403285,\n  \"date_created\" : \"2022-08-29T17:10:25.309Z\",\n  \"account_sid\" : \"AC55faeac9C4de9aa4AEF80bCfc1892AD5\",\n  \"interval\" : 6491216634204081271,\n  \"rate_limit_sid\" : \"RKF79d6c7e28DF1f375C4c1BC4BAD5F69e\",\n  \"url\" : \"https://web.example.mocklab.io/352220\",\n  \"sid\" : \"BLbcfAF2ad1Ab63fDFfc9Da16AD07337c1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ce8a90c-d154-45fe-9153-31eb51138177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.3095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBucket",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "interval" : {
                "description" : "Number of seconds that the rate limit will be enforced over.",
                "nullable" : true,
                "type" : "integer"
              },
              "max" : {
                "description" : "Maximum number of requests permitted in during the interval.",
                "nullable" : true,
                "type" : "integer"
              },
              "rate_limit_sid" : {
                "description" : "The Twilio-provided string that uniquely identifies the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Bucket.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "c82690a1-7682-44c8-8ff3-b2eb6e92326a",
    "name" : "Retrieve a list of all Buckets for a Rate Limit.",
    "request" : {
      "urlPath" : "/v2/Services/VAFdE3CdeBfca8498eFa58f8f8F1EF5d28/RateLimits/RK4880Ce2ba93d8cfa333b88ca9AE6eFcc/Buckets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/483582\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/894048\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/796504\",\n    \"page\" : 3875799528322556371,\n    \"key\" : \"vmkubu1pb56s173x8gh6yonthg2jqpgiuy10s1upockl2q63bdxh9pti2n\",\n    \"url\" : \"https://web.example.mocklab.io/053998\",\n    \"page_size\" : 2285554251389052712\n  },\n  \"buckets\" : [ {\n    \"service_sid\" : \"VAdbF73e3b2F2fFDFbedCcDA8B6F9BC225\",\n    \"date_updated\" : \"2022-06-27T11:26:35.308Z\",\n    \"max\" : 7430385416489402636,\n    \"date_created\" : \"2022-12-08T03:05:56.308Z\",\n    \"account_sid\" : \"ACa1B8c86b3c7082aF7c44F67b4FAb6f7D\",\n    \"interval\" : 7700173049139096117,\n    \"rate_limit_sid\" : \"RKABcc7d0bEd6eA7cdfDAb3A5c4E6B5EEA\",\n    \"url\" : \"https://web.example.mocklab.io/163417\",\n    \"sid\" : \"BLbdf7155957AD3aEce3FA2493a060D8ee\"\n  }, {\n    \"service_sid\" : \"VAdec735C9BfA7468CeAAeDD32FB339cf1\",\n    \"date_updated\" : \"2023-04-28T06:17:29.308Z\",\n    \"max\" : 1448345201583718967,\n    \"date_created\" : \"2023-01-11T20:38:25.308Z\",\n    \"account_sid\" : \"AC8cedef6c4f97a2d9bBc819e22D2Bbf85\",\n    \"interval\" : 7079588628760235309,\n    \"rate_limit_sid\" : \"RK9f6F388B97Bbeb525a5979b4Cf8F60cb\",\n    \"url\" : \"https://web.example.mocklab.io/953535\",\n    \"sid\" : \"BLDcda6d0Ba1Ca274AFEBB11DA473e2bF2\"\n  }, {\n    \"service_sid\" : \"VAB3d07E038800cbcbD7f7BCdEcC6bd23B\",\n    \"date_updated\" : \"2023-04-03T01:43:39.308Z\",\n    \"max\" : 2363911970183440485,\n    \"date_created\" : \"2023-07-05T07:38:44.308Z\",\n    \"account_sid\" : \"ACCeA7f66cE40BfB95AaB9950036F866c3\",\n    \"interval\" : 1587972101003903142,\n    \"rate_limit_sid\" : \"RK4cb9AefCfbBc3B10D9EFAeb4b0CBCBf4\",\n    \"url\" : \"https://web.example.mocklab.io/965243\",\n    \"sid\" : \"BLA5eBCe6A83fDed08eC5CfaFd4c1CeBef\"\n  }, {\n    \"service_sid\" : \"VA24aDE6D2D7f712fa20a9b9eCFb1F1ed3\",\n    \"date_updated\" : \"2022-07-08T23:05:29.309Z\",\n    \"max\" : 4066779336953195902,\n    \"date_created\" : \"2023-03-16T00:46:13.309Z\",\n    \"account_sid\" : \"AC050ee0CCA8fCbaC42E6c2e6B176EFBed\",\n    \"interval\" : 3615492932242116856,\n    \"rate_limit_sid\" : \"RKdbBF49a995CcEc997fF28A5644Ee7a6f\",\n    \"url\" : \"https://web.example.mocklab.io/684987\",\n    \"sid\" : \"BL0aAE0B83E4BcCE22140F4BBbd5b3DabC\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c82690a1-7682-44c8-8ff3-b2eb6e92326a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListBucket",
          "schema" : {
            "properties" : {
              "buckets" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.rate_limit.bucket"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListBucketResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "85aff9b5-02b5-4591-8c54-f6d0a0bf26aa",
    "name" : "Create a new Rate Limit for a Service",
    "request" : {
      "urlPath" : "/v2/Services/VABA36a8fc325F04CDACD10B018CA28CaC/RateLimits",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VA8427F1C7Af0e1b8597DD51e245D451EE\",\n  \"unique_name\" : \"Mrs. Leonard Moore\",\n  \"date_updated\" : \"2024-01-02T21:14:03.308Z\",\n  \"date_created\" : \"2022-06-05T14:18:06.308Z\",\n  \"account_sid\" : \"AC03C221AB4BEE1c6cd7C5CfF3Cbf6B8Cc\",\n  \"description\" : \"Quisquam magni aspernatur. Nihil doloremque sequi qui quas excepturi quis aut. Totam rem soluta repellat voluptatum.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/049764\",\n  \"sid\" : \"RK2bF51D49f4EC1fc49AFf9Ec3dfF62b1F\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85aff9b5-02b5-4591-8c54-f6d0a0bf26aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateRateLimit",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Rate Limit resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "Description of this Rate Limit",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Rate Limit.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Provides a unique and addressable name to be assigned to this Rate Limit, assigned by the developer, to be optionally used in addition to SID. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d29e7de4-228d-4f92-a722-5959009c07b6",
    "name" : "Retrieve a list of all Rate Limits for a service.",
    "request" : {
      "urlPath" : "/v2/Services/VAD125bfa5A264cE43c192D9C7C85cdC0C/RateLimits",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/778287\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/992073\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/563910\",\n    \"page\" : 280143893128409724,\n    \"key\" : \"y70vy6acd9xbt6ipbzclbwxai1o5yjxq4welf4t72nqn6s82d48jfhdxzyo6wkc3b5fishjws3rn08anpzm1hnng76jekuxo88665asqqp8ngzw5qig0q3l\",\n    \"url\" : \"https://web.example.mocklab.io/228206\",\n    \"page_size\" : 5252918649490731604\n  },\n  \"rate_limits\" : [ {\n    \"service_sid\" : \"VA90c20cB37B19D63cccfBE63D1Ba1a972\",\n    \"unique_name\" : \"Weldon Prohaska\",\n    \"date_updated\" : \"2023-10-22T11:45:35.307Z\",\n    \"date_created\" : \"2022-04-11T09:02:12.307Z\",\n    \"account_sid\" : \"ACCb7C8EB9ed2BeDCA378FE151BBeDF9CF\",\n    \"description\" : \"Delectus odio iusto ipsum deserunt et eveniet quibusdam. Optio cum voluptatem delectus tenetur. Consectetur hic autem saepe sit. Ullam et est quisquam in accusantium doloribus voluptas. Est in cum.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/271950\",\n    \"sid\" : \"RK08e1cf03313EE3ea8f9AA1aD646F4376\"\n  }, {\n    \"service_sid\" : \"VA38b35dceccB4ABAcCBeFE37B37a573A2\",\n    \"unique_name\" : \"Nicky Bartell\",\n    \"date_updated\" : \"2022-09-24T23:55:14.307Z\",\n    \"date_created\" : \"2024-01-25T17:16:43.307Z\",\n    \"account_sid\" : \"AC2BBE9c3E72AdEcDF8CF87a2B0b301Ddc\",\n    \"description\" : \"Quae accusamus veniam. Et tenetur natus est provident quis sed. Sed sequi et odit et consequatur. Veritatis quam quis nulla corporis facilis laboriosam.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/454106\",\n    \"sid\" : \"RK015ec808FfdfA4cCC6e54f8FE6Ba9dbe\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d29e7de4-228d-4f92-a722-5959009c07b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.308134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListRateLimit",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "rate_limits" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.rate_limit"
                },
                "type" : "array"
              }
            },
            "title" : "ListRateLimitResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "f860a870-2b22-4da0-b0f4-c1399640c7f7",
    "name" : "Update a specific MessagingConfiguration",
    "request" : {
      "urlPath" : "/v2/Services/VA1BaA740Fb78eCbbDDe5BC63C18F7cfbE/MessagingConfigurations/Finland",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA9630bFFFc087286FD37d1C5D0bB22648\",\n  \"country\" : \"Equatorial Guinea\",\n  \"date_updated\" : \"2023-06-13T08:57:21.307Z\",\n  \"messaging_service_sid\" : \"MGd05Ff9d8FB30BF4bBc3AD681daBFAc8B\",\n  \"date_created\" : \"2023-10-30T08:59:07.307Z\",\n  \"account_sid\" : \"ACb6aed3e758fCc544eDAEEf05c7e74945\",\n  \"url\" : \"https://web.example.mocklab.io/963743\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f860a870-2b22-4da0-b0f4-c1399640c7f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.307281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateMessagingConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "country" : {
                "description" : "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_service_sid" : {
                "description" : "The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "553f64f9-7bbc-4cd5-8b35-dc2ab2cd0af4",
    "name" : "Fetch a specific MessagingConfiguration.",
    "request" : {
      "urlPath" : "/v2/Services/VADD52b5ef4af5Dc322EDFFd7DBBE1ba2F/MessagingConfigurations/Dominica",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA718D3C42B4ecb05bbb199De1092cb59D\",\n  \"country\" : \"Saint Lucia\",\n  \"date_updated\" : \"2023-11-26T02:49:38.306Z\",\n  \"messaging_service_sid\" : \"MGabfA2EDec8ed0cB7BBE53fa7Eed9B2Ca\",\n  \"date_created\" : \"2023-05-11T09:09:09.306Z\",\n  \"account_sid\" : \"AC4f4Cc07843F57d570DAaeF0AbE26Cc68\",\n  \"url\" : \"https://web.example.mocklab.io/684305\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "553f64f9-7bbc-4cd5-8b35-dc2ab2cd0af4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchMessagingConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "country" : {
                "description" : "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_service_sid" : {
                "description" : "The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "d0ccc127-02da-4fd6-8b31-b48a25192bbe",
    "name" : "Delete a specific MessagingConfiguration. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VAbeef0Af7ebd3ff7bb9751fa23Cbb02E8/MessagingConfigurations/Kuwait",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d0ccc127-02da-4fd6-8b31-b48a25192bbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteMessagingConfiguration"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "17dafb0d-a070-4edc-a92b-6db5fe99e395",
    "name" : "Create a new MessagingConfiguration for a service.",
    "request" : {
      "urlPath" : "/v2/Services/VA6De6C3EC62f2BD7a77cAf427B0cFB665/MessagingConfigurations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VA049fBEc3C2Ea7E8781E02ae2CCfE4E59\",\n  \"country\" : \"Latvia\",\n  \"date_updated\" : \"2022-04-27T10:01:44.306Z\",\n  \"messaging_service_sid\" : \"MG787EFA929A86fcB6E4Eb292166967F3a\",\n  \"date_created\" : \"2023-10-19T12:47:46.306Z\",\n  \"account_sid\" : \"AC7889a069590eaa813Ac2ECcE1e4d7c11\",\n  \"url\" : \"https://web.example.mocklab.io/610958\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17dafb0d-a070-4edc-a92b-6db5fe99e395",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.306828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateMessagingConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "country" : {
                "description" : "The [ISO-3166-1](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2) country code of the country this configuration will be applied to. If this is a global configuration, Country will take the value `all`.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_service_sid" : {
                "description" : "The SID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) to be used to send SMS to the country of this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) that the resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "75977c01-e32a-42eb-9dc4-b04e8fbf2ff2",
    "name" : "Retrieve a list of all Messaging Configurations for a Service.",
    "request" : {
      "urlPath" : "/v2/Services/VAa56Ca8D7CEFd9bDe5CBe3dC017DF4BC0/MessagingConfigurations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"messaging_configurations\" : [ {\n    \"service_sid\" : \"VAAfFBd4f2b5CF97b3a0E778E35c05b32b\",\n    \"country\" : \"Grenada\",\n    \"date_updated\" : \"2023-10-30T05:20:29.306Z\",\n    \"messaging_service_sid\" : \"MGD01eC1f0188f9cbfBdEAc2131Cc9f2DD\",\n    \"date_created\" : \"2023-11-19T21:19:23.306Z\",\n    \"account_sid\" : \"AC2f0DEedEF15AEE66bd569Baab3e69C6a\",\n    \"url\" : \"https://web.example.mocklab.io/928852\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/652161\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/837175\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/785165\",\n    \"page\" : 6369939294804411239,\n    \"key\" : \"7nrdt8g2fjo3tz18xvt4vs08iw4k896h27h6afd00xi8c4zdaqu8yb0dy47ve98naur\",\n    \"url\" : \"https://web.example.mocklab.io/117367\",\n    \"page_size\" : 7482781712330329727\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75977c01-e32a-42eb-9dc4-b04e8fbf2ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.306638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListMessagingConfiguration",
          "schema" : {
            "properties" : {
              "messaging_configurations" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.messaging_configuration"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMessagingConfigurationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "7bb689d8-bbd5-4487-94f7-63594bb1acfb",
    "name" : "Update a specific Factor. This endpoint can be used to Verify a Factor if passed...",
    "request" : {
      "urlPath" : "/v2/Services/VAcF2c9AcBAc85AEef0D8e84926Db5bF3a/Entities/2ymznhk1wcyo7no22aikrngykicdurcmevv1cdbr44lhzzwnmo5knyl09xltr4qn0ztwobye3glz4uuz3ria84zjo3d0/Factors/YFAa5ae4CDA737dD4c5dBB23D2B142dbCB",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Logan Roob\",\n  \"metadata\" : { },\n  \"date_updated\" : \"2022-05-06T23:21:56.305Z\",\n  \"date_created\" : \"2023-12-08T04:36:49.305Z\",\n  \"url\" : \"https://web.example.mocklab.io/257390\",\n  \"sid\" : \"YFEFd954673cc1b8EB72B71cbfe93f6dba\",\n  \"service_sid\" : \"VAd7DaAb1Aba2adb412Ab40C8a9aD80f25\",\n  \"entity_sid\" : \"YE8d3AaBAdd68b9fAe4ddbEefc81B5585d\",\n  \"factor_type\" : \"totp\",\n  \"identity\" : \"kduhgbtsdvngheawaqa4fj3h9x4sywoisme3ya17gsq64aokyvj4oj9irqa9faya9b5vzmessaxb4nwg8a10yv704yqmtokjeligcvlm3pziz\",\n  \"account_sid\" : \"ACf00e0b0fE76bbdf3BffF6cEE8b2458C0\",\n  \"config\" : { },\n  \"status\" : \"verified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bb689d8-bbd5-4487-94f7-63594bb1acfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.306088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateFactor",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "config" : {
                "description" : "An object that contains configurations specific to a `factor_type`.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this Factor was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Factor was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/factor_enum_factor_types"
              },
              "friendly_name" : {
                "description" : "A human readable description of this resource, up to 64 characters. For a push factor, this can be the device's name.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "metadata" : {
                "description" : "Custom metadata associated with the factor. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{\"os\": \"Android\"}`. Can be up to 1024 characters in length.",
                "nullable" : true
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Factor.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/factor_enum_factor_statuses"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "1b87fce0-b6de-4414-86fd-9e088d9063a9",
    "name" : "Fetch a specific Factor.",
    "request" : {
      "urlPath" : "/v2/Services/VA44Aeba55DF56fa2aaC82E2B2F7896b63/Entities/rw77p7lu6yi929bvyrkshyvk7t35axhgxzkldu0q013zgp4fce1y63sftnydg9738kzhel6dkborducdlkqvr5crcpieh824c5j5skn49rwp0403thns8lmipbbq7tf4wbi77y2zps71havqfylxny/Factors/YFfA7d8D53649De0FEdB063dD002733a39",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Lesa Crona\",\n  \"metadata\" : { },\n  \"date_updated\" : \"2022-05-11T16:41:55.305Z\",\n  \"date_created\" : \"2022-06-13T17:36:44.305Z\",\n  \"url\" : \"https://web.example.mocklab.io/479475\",\n  \"sid\" : \"YF9aD5D7CF262FDcD0F593AC4D8af9EC2d\",\n  \"service_sid\" : \"VAdEc1a383FD6a88921eB6aD0823FAf71f\",\n  \"entity_sid\" : \"YEb4AD0F3752BcDf9fEB45412EB7AbABcE\",\n  \"factor_type\" : \"totp\",\n  \"identity\" : \"g4uv43mqe\",\n  \"account_sid\" : \"ACCe8ED9DBE3B9CC8f5801e2FCC9fB7A66\",\n  \"config\" : { },\n  \"status\" : \"unverified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b87fce0-b6de-4414-86fd-9e088d9063a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.305785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchFactor",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "config" : {
                "description" : "An object that contains configurations specific to a `factor_type`.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this Factor was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Factor was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/factor_enum_factor_types"
              },
              "friendly_name" : {
                "description" : "A human readable description of this resource, up to 64 characters. For a push factor, this can be the device's name.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "metadata" : {
                "description" : "Custom metadata associated with the factor. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{\"os\": \"Android\"}`. Can be up to 1024 characters in length.",
                "nullable" : true
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Factor.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/factor_enum_factor_statuses"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "076d3611-d14b-4123-84ae-997b8630e877",
    "name" : "Delete a specific Factor. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VABE08B91Aed5E206c89867D5c8cA9E2ad/Entities/1c11r7kygx2b1o7m1v3iubyite3l82gljlcrps5bd5xpdcgr66hr2tuhvw6fxu31gb93k3m2ieai0pmz089/Factors/YFbe2de9cBac4f37dad2C9afbAeFA4CB64",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "076d3611-d14b-4123-84ae-997b8630e877",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.305456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFactor"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "5f4e033b-5313-4b74-a51a-05cc2dbee057",
    "name" : "Create a new Factor for the Entity",
    "request" : {
      "urlPath" : "/v2/Services/VAA4b66CbE5E2fDACAd7eB9a22384b946F/Entities/bvy8wyg0x702ufxanl1ip05j3w3y0oghw7eb8gvfi8xmxym71lsvki9mbe4g109z9wrma7mnzv3fxkgyyx0i8gn87w0xwhgk7flur8n421ilc4pfivnf49p1eas6cql1hv3mnzrmqwngv7a5vdxexawo8k31u7nevnpa6nyc3my/Factors",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Brain Gulgowski\",\n  \"metadata\" : { },\n  \"date_updated\" : \"2022-05-01T20:18:35.305Z\",\n  \"date_created\" : \"2023-01-14T21:48:37.305Z\",\n  \"binding\" : { },\n  \"url\" : \"https://web.example.mocklab.io/323196\",\n  \"sid\" : \"YFaF301B78d76E4Cee9A8f7FF3D958A55D\",\n  \"service_sid\" : \"VAF3C9abda2Acb3CeA2f60EA5a7E586103\",\n  \"entity_sid\" : \"YE3AF49FF8eAfBFdBc6fCD0CDbDbECAaFD\",\n  \"factor_type\" : \"totp\",\n  \"identity\" : \"dhpzc1zfglrkjqwr33sa0bnbqxycwcri09d1mvxkth0qrq5oe2fp79glo32e7r3a\",\n  \"account_sid\" : \"AC2B3A6e98Ae38c6fE6bC2FcfcbBeCe1e1\",\n  \"config\" : { },\n  \"status\" : \"unverified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f4e033b-5313-4b74-a51a-05cc2dbee057",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.305402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNewFactor",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "binding" : {
                "description" : "Contains the `factor_type` specific secret and metadata.\nFor push, this is `binding.public_key` and `binding.alg`.\nFor totp, this is `binding.secret` and `binding.uri`. The `binding.uri` property is generated following the [google authenticator key URI format](https://github.com/google/google-authenticator/wiki/Key-Uri-Format), and `Factor.friendly_name` is used for the “accountname” value and `Service.friendly_name` or `Service.totp.issuer` is used for the `issuer` value.\n\n\nThe Binding property is ONLY returned upon Factor creation.",
                "nullable" : true
              },
              "config" : {
                "description" : "An object that contains configurations specific to a `factor_type`.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this Factor was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Factor was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/new_factor_enum_factor_types"
              },
              "friendly_name" : {
                "description" : "The friendly name of this Factor. This can be any string up to 64 characters, meant for humans to distinguish between Factors.\nFor `factor_type` `push`, this could be a device name.\nFor `factor_type` `totp`, this value is used as the “account name” in constructing the `binding.uri` property.\nAt the same time, we recommend avoiding providing PII.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Factor. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "metadata" : {
                "description" : "Custom metadata associated with the factor. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{\"os\": \"Android\"}`. Can be up to 1024 characters in length.",
                "nullable" : true
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Factor.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/new_factor_enum_factor_statuses"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "e5eaf93f-8650-41ac-9ce8-818112be985d",
    "name" : "Retrieve a list of all Factors for an Entity.",
    "request" : {
      "urlPath" : "/v2/Services/VA970cE0e14A25cBcD96DaC4B7b41CBCDB/Entities/zw3x9k1yvsbad2dns69zwgkdpuey88xci7e885niaf2ma15ikaf6tlhqgrzyls7k92gwbv6gqk4kslvkjxxp2ciujkt3kj2xotpi1digg5iltwzl8qhbxfuvhgcpxtpwwokhhd7mj5kcyced81s9089nqwhjccojdopu855vcxeibm/Factors",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/901740\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/740746\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/780801\",\n    \"page\" : 6836215788931653725,\n    \"key\" : \"chlxff104doc00m6hvnnlgkwxfjqzrmp\",\n    \"url\" : \"https://web.example.mocklab.io/456162\",\n    \"page_size\" : 925430416602835894\n  },\n  \"factors\" : [ {\n    \"friendly_name\" : \"Darline Quitzon\",\n    \"metadata\" : { },\n    \"date_updated\" : \"2024-01-12T09:43:11.304Z\",\n    \"date_created\" : \"2022-12-30T10:59:23.304Z\",\n    \"url\" : \"https://web.example.mocklab.io/731211\",\n    \"sid\" : \"YF4eB0E55C11C1a680E42eFd5b5FC2DB0E\",\n    \"service_sid\" : \"VAB8cff76B97C8d07fc2dFcF5dCB2D0db1\",\n    \"entity_sid\" : \"YE2009129232a1B27540cf9633b0bdf5eF\",\n    \"factor_type\" : \"push\",\n    \"identity\" : \"3f81rck7vng6y1s255psynn3metn1o872tokwcrntyswylwecapzy8z8zk85bqu7um0wdkwlqxlfiimz28ag472rkp86rylb3943die38o27jb\",\n    \"account_sid\" : \"AC7D34f0Ef9B63dD3f7eb7c16A2A21352B\",\n    \"config\" : { },\n    \"status\" : \"unverified\"\n  }, {\n    \"friendly_name\" : \"Tanna Crona\",\n    \"metadata\" : { },\n    \"date_updated\" : \"2023-05-03T07:14:20.304Z\",\n    \"date_created\" : \"2023-10-18T11:23:55.304Z\",\n    \"url\" : \"https://web.example.mocklab.io/837156\",\n    \"sid\" : \"YF3CfB9DBd0F74e5d7095f0DA861C1Cd96\",\n    \"service_sid\" : \"VA43Cca873e5AAc8f19a749f5111A1db1a\",\n    \"entity_sid\" : \"YE8Ba9b666Ba5992e6dB6Eb9f5BBDB4c5E\",\n    \"factor_type\" : \"push\",\n    \"identity\" : \"tsgg9dzt0r5xd7inxnhwtrjpzb\",\n    \"account_sid\" : \"AC73F6Fd5aD4Bd6EDaFab08d3d571EFeb4\",\n    \"config\" : { },\n    \"status\" : \"verified\"\n  }, {\n    \"friendly_name\" : \"Audie Lemke\",\n    \"metadata\" : { },\n    \"date_updated\" : \"2022-10-05T00:14:45.304Z\",\n    \"date_created\" : \"2023-05-10T04:13:48.304Z\",\n    \"url\" : \"https://web.example.mocklab.io/285873\",\n    \"sid\" : \"YF6F73EcDf2acfC3eeA0B84bB5fAB2AdaC\",\n    \"service_sid\" : \"VAC98A426d3fe7Ad39FD7baB0315Ea7e23\",\n    \"entity_sid\" : \"YEB8cc3cf3cADB012EBf3a3264B849C10d\",\n    \"factor_type\" : \"push\",\n    \"identity\" : \"jzndege1aps8w56xobitl1hml94kyao9rcehbt3i846p39g4drdhzaylvwhrellcxwbm0iud2o0ux1lsh8tpggipdlwnube19v6ydvxjf7lqn2rfy6t63bpupr0o1gznz1kw7q503qdl0jk2r9inhwv8z8ymwrg84i0dimyb2mx4\",\n    \"account_sid\" : \"ACBE56Cd239f49BddF9db9511feba33D4c\",\n    \"config\" : { },\n    \"status\" : \"verified\"\n  }, {\n    \"friendly_name\" : \"Kizzy Quitzon\",\n    \"metadata\" : { },\n    \"date_updated\" : \"2023-05-07T19:37:41.304Z\",\n    \"date_created\" : \"2023-06-27T04:57:58.304Z\",\n    \"url\" : \"https://web.example.mocklab.io/932950\",\n    \"sid\" : \"YFB05bE58D0AEBDCB4ecED5B2e3C8f1c8F\",\n    \"service_sid\" : \"VA1a8D2255f5aA2DeEF17FDcd1FFaE9ae3\",\n    \"entity_sid\" : \"YEBec11D934cE26E4505535eEC7a9e990b\",\n    \"factor_type\" : \"push\",\n    \"identity\" : \"3sm8bnivcmf4f3fu4suj3kxd0y6dao6vz69yupxqcrywc165mx48u9iqeokbsk5f16umjjuu5fcjko5ibh1n5x984vv0yfl1njpz99mlsaxhywbnf36yviwp923eo57ya5ulw2xr8q102w59qtsxsgvvqtcx79ea1kslsf6irxobg1eo47dnlkf7fs28m0f1y452\",\n    \"account_sid\" : \"ACdCCDC6B1C5C564c7F728cfB0C2A7224D\",\n    \"config\" : { },\n    \"status\" : \"unverified\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5eaf93f-8650-41ac-9ce8-818112be985d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.305014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListFactor",
          "schema" : {
            "properties" : {
              "factors" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.entity.factor"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListFactorResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "7cd103ab-7829-407c-be2d-a948e0750b71",
    "name" : "Verify a specific Challenge.",
    "request" : {
      "urlPath" : "/v2/Services/VAE8BbCeaaf73a4cfFCDEbD963DcEdDDc9/Entities/yht8bwdpkbz3dki5ev49z25lqz0bewq5sgvlx55cqq9hzrdlovwdfaoj8htujwwayib57g05pwxa4s3bw081ydzt1s2b7rmfpv803s5g1hss2834eynnjrixxdkagve187etflrcvb25u1bkmk5xz0l9/Challenges/YC2CcE2EabA7C111bbB223fEb296f3aF39",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"date_updated\" : \"2023-05-16T17:13:25.303Z\",\n  \"date_created\" : \"2022-07-22T08:00:30.303Z\",\n  \"factor_sid\" : \"YF256B2Ee69fD77d7E5aCB5e57cBae15bb\",\n  \"expiration_date\" : \"2022-08-01T07:31:37.303Z\",\n  \"date_responded\" : \"2023-06-29T08:00:07.303Z\",\n  \"url\" : \"https://web.example.mocklab.io/972336\",\n  \"responded_reason\" : \"not_needed\",\n  \"sid\" : \"YC6FD3C9976dEdcAebaA9E2C8eCedA7B1a\",\n  \"service_sid\" : \"VA40334C3d495906dADEbd07AAaDc4aAd0\",\n  \"entity_sid\" : \"YE8feF19238f6eccdAa70d9BfcbA9f4dAB\",\n  \"factor_type\" : \"totp\",\n  \"hidden_details\" : { },\n  \"identity\" : \"xp0ph0cyfxkl66jm4u2b2sg32bttb744yt2lizbht73umiidz9xd54x\",\n  \"account_sid\" : \"ACCF8ab1C0D3712FA394C0FCEed3a33e2b\",\n  \"details\" : { },\n  \"links\" : { },\n  \"status\" : \"approved\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cd103ab-7829-407c-be2d-a948e0750b71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateChallenge",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Challenge was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_responded" : {
                "description" : "The date that this Challenge was responded, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Challenge was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "details" : {
                "description" : "Details provided to give context about the Challenge. Intended to be shown to the end user.",
                "nullable" : true
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "expiration_date" : {
                "description" : "The date-time when this Challenge expires, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. The default value is five (5) minutes after Challenge creation. The max value is sixty (60) minutes after creation.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "factor_sid" : {
                "description" : "The unique SID identifier of the Factor.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/challenge_enum_factor_types"
              },
              "hidden_details" : {
                "description" : "Details provided to give context about the Challenge. Intended to be hidden from the end user. It must be a stringified JSON with only strings values eg. `{\"ip\": \"172.168.1.234\"}`",
                "nullable" : true
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Challenge.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "metadata" : {
                "description" : "Custom metadata associated with the challenge. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{\"os\": \"Android\"}`. Can be up to 1024 characters in length.",
                "nullable" : true
              },
              "responded_reason" : {
                "$ref" : "#/components/schemas/challenge_enum_challenge_reasons"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Challenge.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/challenge_enum_challenge_statuses"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "7c16a25e-19eb-449f-a34c-ea4c7bc001a1",
    "name" : "Fetch a specific Challenge.",
    "request" : {
      "urlPath" : "/v2/Services/VAe55443547E00ef77A64896E2a0EC9129/Entities/babw0r40saosr5fryzhed9t4htg1zh96ego4gljrw9ptq094k80w0ubuj9zuwxwp3htkqymdeg0w32/Challenges/YCEE0bDB8BefB1fDb37D78B5029d8CFE65",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"date_updated\" : \"2023-02-06T21:05:21.303Z\",\n  \"date_created\" : \"2022-05-21T15:46:46.303Z\",\n  \"factor_sid\" : \"YFa110fE7812AE1c0E38DFf3d9f4DcC2e8\",\n  \"expiration_date\" : \"2022-03-15T16:30:25.303Z\",\n  \"date_responded\" : \"2023-01-16T17:53:25.303Z\",\n  \"url\" : \"https://web.example.mocklab.io/697472\",\n  \"responded_reason\" : \"not_requested\",\n  \"sid\" : \"YC4B7b98149A3983A4d7bECfE7E3Af70B8\",\n  \"service_sid\" : \"VACB307ad88b06da5af5c8AC49f090ed44\",\n  \"entity_sid\" : \"YE3338df4e1C8AD4734Ed1291dC0081cF5\",\n  \"factor_type\" : \"totp\",\n  \"hidden_details\" : { },\n  \"identity\" : \"12adgz3lbahvnm1n3vuvtrfkpq72rsbivtlabk\",\n  \"account_sid\" : \"AC2E1fdcF0dd1C6aCfeBfC0d93F958c112\",\n  \"details\" : { },\n  \"links\" : { },\n  \"status\" : \"approved\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c16a25e-19eb-449f-a34c-ea4c7bc001a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchChallenge",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Challenge was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_responded" : {
                "description" : "The date that this Challenge was responded, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Challenge was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "details" : {
                "description" : "Details provided to give context about the Challenge. Intended to be shown to the end user.",
                "nullable" : true
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "expiration_date" : {
                "description" : "The date-time when this Challenge expires, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. The default value is five (5) minutes after Challenge creation. The max value is sixty (60) minutes after creation.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "factor_sid" : {
                "description" : "The unique SID identifier of the Factor.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/challenge_enum_factor_types"
              },
              "hidden_details" : {
                "description" : "Details provided to give context about the Challenge. Intended to be hidden from the end user. It must be a stringified JSON with only strings values eg. `{\"ip\": \"172.168.1.234\"}`",
                "nullable" : true
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Challenge.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "metadata" : {
                "description" : "Custom metadata associated with the challenge. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{\"os\": \"Android\"}`. Can be up to 1024 characters in length.",
                "nullable" : true
              },
              "responded_reason" : {
                "$ref" : "#/components/schemas/challenge_enum_challenge_reasons"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Challenge.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/challenge_enum_challenge_statuses"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "635bd265-2dac-4e3b-967a-579a4a02f753",
    "name" : "Create a new Notification for the corresponding Challenge",
    "request" : {
      "urlPath" : "/v2/Services/VAbDbb89e5De01AFA9AEd1Ea0d95bf67F7/Entities/x76/Challenges/YCf6dF6b7E0FDf9fdf9af3a837BCb8AbEb/Notifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VAD15edf4f9b0420FA96f19a0CedcDBe7C\",\n  \"entity_sid\" : \"YEDa75BcaF648DB49Ff8efF8C3Ff51c4C1\",\n  \"date_created\" : \"2022-03-23T16:21:32.303Z\",\n  \"identity\" : \"rjqe27vdawqpwoaunilmlr9wffz9pspn5hgzyzivohtvzdycy0aezzb81x6gp8p898cnyfitykqis37k0lagv12evyn1bpkcb7uwzpeoewyym4a2ncmwdbhq2iwsdmzoar5cgf7mdi2np\",\n  \"account_sid\" : \"AC151b003D68bDBE43fAed1c86EbAD347B\",\n  \"priority\" : \"ckb5r41qx9\",\n  \"ttl\" : 4710121150687709986,\n  \"challenge_sid\" : \"YC58aFc2BA1e7Fd0dab4CDf1eD84621Cb4\",\n  \"sid\" : \"NT8aFbbB9a6473fcC4FB1B94b1cc67F9FA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "635bd265-2dac-4e3b-967a-579a4a02f753",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.303267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "challenge_sid" : {
                "description" : "The unique SID identifier of the Challenge.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Notification was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "priority" : {
                "description" : "The priority of the notification. For `push` Challenges it's always `high` which sends the notification immediately, and can wake up a sleeping device.",
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Notification.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^NT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "ttl" : {
                "description" : "How long, in seconds, the notification is valid. Max: 5 minutes",
                "nullable" : true,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "0328a514-b657-4e97-8129-96aa2a32a2d3",
    "name" : "Create a new Challenge for the Factor",
    "request" : {
      "urlPath" : "/v2/Services/VA6aAF29daaB6ff0AD4dE25bC62EaF164a/Entities/xnk0lw5k7hm1pr0lmpzksxzzakbu6h/Challenges",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"metadata\" : { },\n  \"date_updated\" : \"2022-07-23T01:31:49.302Z\",\n  \"date_created\" : \"2023-12-15T01:52:50.302Z\",\n  \"factor_sid\" : \"YF216769e7DadFaDb0bdaB7C6Df4bcAcF1\",\n  \"expiration_date\" : \"2023-12-11T18:40:54.302Z\",\n  \"date_responded\" : \"2023-09-09T01:09:12.302Z\",\n  \"url\" : \"https://web.example.mocklab.io/255553\",\n  \"responded_reason\" : \"not_requested\",\n  \"sid\" : \"YCC3D0a9b2Ed4E93A1c0Eeb5e190Eb3dB6\",\n  \"service_sid\" : \"VAf849915F6F9e6362e281Bc88Ea8D94Ea\",\n  \"entity_sid\" : \"YEB54AE9ebFabA4E8bcDb7Cbd3F58E5Cb8\",\n  \"factor_type\" : \"push\",\n  \"hidden_details\" : { },\n  \"identity\" : \"49y4qirn9g5eba8f1mvbqzcntk7hrtrnt2la9bqmza70fhg76bmgzyyi1fwlrl87ftlfg84r2vs4obg9etcoxhiex7himr9cuqi4qfaa0sz3ae16l6us9pbh1tr7fjsi\",\n  \"account_sid\" : \"ACddb10c6E2A9DfBBFfAAf83F28AF0D45f\",\n  \"details\" : { },\n  \"links\" : { },\n  \"status\" : \"pending\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0328a514-b657-4e97-8129-96aa2a32a2d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.303038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateChallenge",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Challenge was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_responded" : {
                "description" : "The date that this Challenge was responded, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Challenge was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "details" : {
                "description" : "Details provided to give context about the Challenge. Intended to be shown to the end user.",
                "nullable" : true
              },
              "entity_sid" : {
                "description" : "The unique SID identifier of the Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "expiration_date" : {
                "description" : "The date-time when this Challenge expires, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format. The default value is five (5) minutes after Challenge creation. The max value is sixty (60) minutes after creation.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "factor_sid" : {
                "description" : "The unique SID identifier of the Factor.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/challenge_enum_factor_types"
              },
              "hidden_details" : {
                "description" : "Details provided to give context about the Challenge. Intended to be hidden from the end user. It must be a stringified JSON with only strings values eg. `{\"ip\": \"172.168.1.234\"}`",
                "nullable" : true
              },
              "identity" : {
                "description" : "Customer unique identity for the Entity owner of the Challenge. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Challenge.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "metadata" : {
                "description" : "Custom metadata associated with the challenge. This is added by the Device/SDK directly to allow for the inclusion of device information. It must be a stringified JSON with only strings values eg. `{\"os\": \"Android\"}`. Can be up to 1024 characters in length.",
                "nullable" : true
              },
              "responded_reason" : {
                "$ref" : "#/components/schemas/challenge_enum_challenge_reasons"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Challenge.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/challenge_enum_challenge_statuses"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "13215366-62c9-4468-ba79-5f52eaa63b1c",
    "name" : "Retrieve a list of all Challenges for a Factor.",
    "request" : {
      "urlPath" : "/v2/Services/VAdbAe9FaB3Afd92A64fEd3fa818eaA5C5/Entities/91ee0apb6yxb6nhbx6ldkjvl0qd2lk7041b76sltbdd2cp4x5dcgi63t9dbn2kzknvi0326chcoaxhf9rdz5xw9n9ex8v8n8dhi6l0fkvjasslsir6ehknttrlbwuai0jb41tuk4izb33mmesl8f2g46rrbz6nkgsscs3zdipv6gosdjuwqcoz82mmrr6/Challenges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"challenges\" : [ {\n    \"metadata\" : { },\n    \"date_updated\" : \"2023-01-18T14:58:13.301Z\",\n    \"date_created\" : \"2023-10-21T11:38:16.301Z\",\n    \"factor_sid\" : \"YFF377dde8d8CF9a48Ee5f1f5B36d6a0eD\",\n    \"expiration_date\" : \"2023-01-11T16:59:44.301Z\",\n    \"date_responded\" : \"2022-07-14T14:21:06.301Z\",\n    \"url\" : \"https://web.example.mocklab.io/976396\",\n    \"responded_reason\" : \"not_requested\",\n    \"sid\" : \"YC67CCf0a2cfE4f6A2aAb9E1A8eF4BEdDD\",\n    \"service_sid\" : \"VAEBfDeaC58763Ae8feb52e09c1EFeBD04\",\n    \"entity_sid\" : \"YEfcB9ea7be2ba5fC1ACbCcbd7c33fb6ec\",\n    \"factor_type\" : \"totp\",\n    \"hidden_details\" : { },\n    \"identity\" : \"w8buyhpccg4fihqxrf81io7btdbs7ml8xm4nctj39znstpbdowabmbk1xrme6dcw3vwqeklxl9msiudytr9x0vkgbjeuugvikvrspyci1cgssjiiyykjx9rz9p3boxe23zcs9545rviswl8yg28ql5xottuqb457slrqyq1o9\",\n    \"account_sid\" : \"AC65Aa03ebAf19FA6174BC5bB32fDA0a9A\",\n    \"details\" : { },\n    \"links\" : { },\n    \"status\" : \"denied\"\n  }, {\n    \"metadata\" : { },\n    \"date_updated\" : \"2024-02-14T22:22:01.301Z\",\n    \"date_created\" : \"2023-10-28T10:30:33.301Z\",\n    \"factor_sid\" : \"YF1DFaCd87ff985cCEAdE837FB9C76adc5\",\n    \"expiration_date\" : \"2022-09-28T21:35:48.301Z\",\n    \"date_responded\" : \"2023-05-06T21:34:59.301Z\",\n    \"url\" : \"https://web.example.mocklab.io/425071\",\n    \"responded_reason\" : \"none\",\n    \"sid\" : \"YCf63Cadf896eb5Ef8AfeF8b0051a02d9e\",\n    \"service_sid\" : \"VA5b9957Ed4Bd79cb3ffc946DD5ED0D7f7\",\n    \"entity_sid\" : \"YEea4B57db2D3b2D18DC32567C653407Ae\",\n    \"factor_type\" : \"push\",\n    \"hidden_details\" : { },\n    \"identity\" : \"ikgbidm1rzye4ohgun19g26dgq12xdb59an4jfzaa8irecwi5uvx7zpszef9x1l48vt39zmtukp5a6qqem59d6l3pkf951gug2cxzjehgtyuvy749u6i5hwtjc2ghinioo9n6hpueg1b20v1rjzssivb7p7l42spc9z7742lmsbkfgptbhf4mfqgwc8brb6dwd6y\",\n    \"account_sid\" : \"ACfDaB9E0d77a1F30B8E658F4d4CC6ab0c\",\n    \"details\" : { },\n    \"links\" : { },\n    \"status\" : \"denied\"\n  }, {\n    \"metadata\" : { },\n    \"date_updated\" : \"2023-07-23T11:52:24.301Z\",\n    \"date_created\" : \"2022-06-04T10:58:50.301Z\",\n    \"factor_sid\" : \"YF7334deF3D7CAf69c3F37aA7FEB4E380e\",\n    \"expiration_date\" : \"2023-03-19T13:58:48.301Z\",\n    \"date_responded\" : \"2023-05-28T10:40:17.301Z\",\n    \"url\" : \"https://web.example.mocklab.io/641556\",\n    \"responded_reason\" : \"none\",\n    \"sid\" : \"YCfCa86a8Bc67503cA5Eae7d9c53f175b3\",\n    \"service_sid\" : \"VACFaFDf8E5b6453F399eaAbAE9c9d9B0E\",\n    \"entity_sid\" : \"YEbc5b95281dBa3150dd5cb262Ac05E169\",\n    \"factor_type\" : \"push\",\n    \"hidden_details\" : { },\n    \"identity\" : \"aiyp0gdj2k7yxfq63rnvu7t96eagd0sgal5x1ag0vjludbvn3j8n8ypt1btdctxwzjmvhjzdhe99pvsoahs4vnzn4trky9gis\",\n    \"account_sid\" : \"AC7eA24dfc8ED7113ce7Ed6EA18E0Db6A4\",\n    \"details\" : { },\n    \"links\" : { },\n    \"status\" : \"approved\"\n  }, {\n    \"metadata\" : { },\n    \"date_updated\" : \"2023-10-15T01:14:19.301Z\",\n    \"date_created\" : \"2022-03-21T23:50:58.301Z\",\n    \"factor_sid\" : \"YF947C0e62b37BC3bbe0be81A073202f13\",\n    \"expiration_date\" : \"2024-02-16T23:40:34.301Z\",\n    \"date_responded\" : \"2022-11-14T14:45:42.301Z\",\n    \"url\" : \"https://web.example.mocklab.io/386712\",\n    \"responded_reason\" : \"not_needed\",\n    \"sid\" : \"YCDb28C05f4AecD1fcFA3b9bc1fBD6C39B\",\n    \"service_sid\" : \"VA9eAaECBE55Ca1574dF7bBA9c5e647bae\",\n    \"entity_sid\" : \"YEEEB7dBb9448BB2FCDA8D0EaA6CFDF882\",\n    \"factor_type\" : \"push\",\n    \"hidden_details\" : { },\n    \"identity\" : \"e25u330hf9ch5h72xtg8p3p5iuxz2ac52ankbrz66ro3kbehcm824sh0k0b5hf0o9lf1p2twk16pk9pdch95jah2n568qyeb79tra39jmh7q0t7gszpcooxj0xi01illvh5r7abz7imbwalvl2hflame3j7tr360a\",\n    \"account_sid\" : \"ACDe96d7F0aCBec0AfB3B4DcBceACf2047\",\n    \"details\" : { },\n    \"links\" : { },\n    \"status\" : \"approved\"\n  }, {\n    \"metadata\" : { },\n    \"date_updated\" : \"2023-09-19T22:14:24.302Z\",\n    \"date_created\" : \"2023-02-02T00:58:32.302Z\",\n    \"factor_sid\" : \"YF1F77aAeE6C3e44FCb03177fb8Bf5bfAc\",\n    \"expiration_date\" : \"2023-08-13T12:16:35.302Z\",\n    \"date_responded\" : \"2023-12-26T19:06:44.302Z\",\n    \"url\" : \"https://web.example.mocklab.io/474890\",\n    \"responded_reason\" : \"not_requested\",\n    \"sid\" : \"YCDA6c2f045A8AfdebC4E473BCb644bebf\",\n    \"service_sid\" : \"VAcA1571E51aDBBFB706DfBeF726591DBB\",\n    \"entity_sid\" : \"YE2143557bAaf4A7FF3C3CaEAebAEf861c\",\n    \"factor_type\" : \"push\",\n    \"hidden_details\" : { },\n    \"identity\" : \"i14zz164ni6x1tw3j09b6ib8cecchey2ultfgmsamsr06yf816ncfnm7hdhfvna7ivl2ao8lylykl2ho1yki3k8gp2rlkjbz38lblkuqf6gs6omjrhxo2b7ttkp39c2dgw\",\n    \"account_sid\" : \"ACEaDF427B43fa4a98FC647278CfCfc981\",\n    \"details\" : { },\n    \"links\" : { },\n    \"status\" : \"pending\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/802322\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/572142\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/405627\",\n    \"page\" : 166105146140957687,\n    \"key\" : \"qcxu4vmsdbxu7ekua2wkqdcyvd52mse0khvj4csuucxortwz5o97jbyv2d4ugug7ypo2gnpfpu024y1q6vwunwb2t4xipstuox0y9gm14wwxfeyqqln5m5y7ba1zm39ge8cgraj7dmkszxlzf70rj62frqv46b71gnjot3kpm85htzshb3y1jb88z0\",\n    \"url\" : \"https://web.example.mocklab.io/611824\",\n    \"page_size\" : 3178122620545603003\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13215366-62c9-4468-ba79-5f52eaa63b1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.302687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListChallenge",
          "schema" : {
            "properties" : {
              "challenges" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.entity.challenge"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListChallengeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "9d0d663c-3901-4531-9198-86cb0730ca77",
    "name" : "Fetch a specific Entity.",
    "request" : {
      "urlPath" : "/v2/Services/VAc77BBFcE378F8DDdc0805fFddF6eE6A6/Entities/8juu4w1pv1c30thf1787u0mepzywjfgyssw9r04rqp65unt060rnm8hvjjj2xu2re1ce",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA5A30A21E1A9e062e4c9BB1281fD72C9b\",\n  \"date_updated\" : \"2023-10-23T21:16:49.301Z\",\n  \"date_created\" : \"2024-01-25T18:31:09.301Z\",\n  \"identity\" : \"vql521y5a8lhbn6qlr2bkgb1bkylvlsg5qhkm46vvnp3h06p5d40ezj3p9ezenem1jasn8pgsrmd9jffzmqxzuzg166l1ke6119y1lw8wqm9kwk92525fj6fz7v1pmlb3bsr5svqgqspe4pbxzx2vc26nnr5pxzd\",\n  \"account_sid\" : \"AC6aD14213E9cc5f485A8fbF7db7B1CbA5\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/515195\",\n  \"sid\" : \"YE1fEB916b0c61dEC80E1Dfd5DACcD1FAa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d0d663c-3901-4531-9198-86cb0730ca77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.301414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchEntity",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Entity was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Entity was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Entity.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "b369dc51-71dd-4cad-8a41-b3bc3707f69e",
    "name" : "Delete a specific Entity. - 204",
    "request" : {
      "urlPath" : "/v2/Services/VACbCdBB1F9ACFdD6eFEAC92A09EEa0515/Entities/klt6hn8fkjxjut01nt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b369dc51-71dd-4cad-8a41-b3bc3707f69e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.301215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteEntity"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "213575d4-81bc-4709-9299-e3963b67d9c5",
    "name" : "Create a new Entity for the Service",
    "request" : {
      "urlPath" : "/v2/Services/VA91DEF6c37Eb40a5d0f71cfc9Ef6bbB3C/Entities",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VA5E4bBAc71213abdeFcf3b69a17daDDEA\",\n  \"date_updated\" : \"2023-09-25T23:38:36.3Z\",\n  \"date_created\" : \"2023-05-04T15:31:56.3Z\",\n  \"identity\" : \"nh48yt8jlyk18b4yjcskwl8s8xlmy1r55pwvhszke3pxxrpdo8yoljsyrsn3th7pvmp9ylzkwwt92v00088xjt1ads2nhu78h65uido4zj06nalj5oe7drqz90ipisipivnycnxcr9jiagc\",\n  \"account_sid\" : \"AC0d5F76767A6c096c5a0bCaaa5bCDdaD5\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/566765\",\n  \"sid\" : \"YEF88d5c12f3E4F2fDAEDE6ebFdeE9EfCD\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "213575d4-81bc-4709-9299-e3963b67d9c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.301167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateEntity",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this Entity was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Entity was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The unique external identifier for the Entity of the Service. This identifier should be immutable, not PII, length between 8 and 64 characters, and generated by your external system, such as your user's UUID, GUID, or SID. It can only contain dash (-) separated alphanumeric characters.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Entity.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Entity.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "48ceb5f1-9f35-4414-974f-d5edf1508693",
    "name" : "Retrieve a list of all Entities for a Service.",
    "request" : {
      "urlPath" : "/v2/Services/VA05b605d6aaB98D8587aC73b16DbA5bC2/Entities",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"entities\" : [ {\n    \"service_sid\" : \"VA4965dDc15eEB9cf53f3B640a0C096CE7\",\n    \"date_updated\" : \"2022-06-22T07:01:14.3Z\",\n    \"date_created\" : \"2022-09-24T19:49:38.3Z\",\n    \"identity\" : \"ivren86tg6ibe4wpge19ub0x2fuumyd9ogi7sc2ukvc7q6t3utg7fge7tfrcs5vcsi4ndevpa4\",\n    \"account_sid\" : \"ACE026533A8FB4845Be5EEb7605CCc1D7b\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/138706\",\n    \"sid\" : \"YEd4A9C6dAE448f609fdcf4a8ad0AeA050\"\n  }, {\n    \"service_sid\" : \"VAC3BB035EAD49e96c99f6a3Ee7FDc17f1\",\n    \"date_updated\" : \"2022-11-04T03:16:02.3Z\",\n    \"date_created\" : \"2023-04-22T13:41:34.3Z\",\n    \"identity\" : \"m3dsn4ckiqg7bslbtxy3cs7j5t\",\n    \"account_sid\" : \"AC6da56b4B7b3cCE24CCA2F8c7eea3e73B\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/988965\",\n    \"sid\" : \"YE5D0c25b743EfB4Ec53D84Ef1644436fb\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/424501\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/598991\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/113049\",\n    \"page\" : 5410011397918328530,\n    \"key\" : \"2kg4k18umvd2m28xu\",\n    \"url\" : \"https://web.example.mocklab.io/835870\",\n    \"page_size\" : 1880344384024132676\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48ceb5f1-9f35-4414-974f-d5edf1508693",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.300947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListEntity",
          "schema" : {
            "properties" : {
              "entities" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service.entity"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListEntityResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "ca680b4c-8f9b-447b-a00f-643359c4c9ae",
    "name" : "Fetch an Access Token for the Entity",
    "request" : {
      "urlPath" : "/v2/Services/VA3674347ECaE93d05fc0A6aCB8F6aF99E/AccessTokens/YKdCB31f2dF0CD46c8E13Ed25bCdf2D3A3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VA5A3b5FDfFA7fBE8dbBEAc6E6fA2cdeA7\",\n  \"factor_friendly_name\" : \"Tynisha Brekke\",\n  \"entity_identity\" : \"bpv68b12013yspdzhuhk6mpww1h062f08th648esqnifd8lsxti7bt10byuiy7g3ufvuzu2\",\n  \"factor_type\" : \"push\",\n  \"date_created\" : \"2023-09-01T20:18:40.3Z\",\n  \"account_sid\" : \"ACc2c0B6F64B6c2056db4a3337D3FEE01F\",\n  \"ttl\" : 75391209477979721,\n  \"url\" : \"https://web.example.mocklab.io/932646\",\n  \"sid\" : \"YK6f42F252efbaE0461fEdB1A698b3Ee9b\",\n  \"token\" : \"vh1kkjsf5363umldcdkbnne7ybp8ryo46jed9g2le2qyl14cye1sv9mh7ail1dehwr8uo8tlzj9uctpu8ipufteogvkpdzog7trzqd6oz3ynyquzayt64zannf2by8zwpwb3j1p4u5esbbljcl345rti3so0xn7l10ljyyujvu8u1u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca680b4c-8f9b-447b-a00f-643359c4c9ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.300287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchAccessToken",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this access token was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "entity_identity" : {
                "description" : "The unique external identifier for the Entity of the Service.",
                "nullable" : true,
                "type" : "string"
              },
              "factor_friendly_name" : {
                "description" : "A human readable description of this factor, up to 64 characters. For a push factor, this can be the device's name.",
                "nullable" : true,
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/access_token_enum_factor_types"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Verify Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Access Token.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "token" : {
                "description" : "The access token generated for enrollment, this is an encrypted json web token.",
                "nullable" : true,
                "type" : "string"
              },
              "ttl" : {
                "description" : "How long, in seconds, the access token is valid. Max: 5 minutes",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "16f1cc96-2d3b-4f97-9868-a403417c1fbf",
    "name" : "Create a new enrollment Access Token for the Entity",
    "request" : {
      "urlPath" : "/v2/Services/VAF6a0ed9be717aFAA0CAcF8C4DDE22ed4/AccessTokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"VAB0FfD5fddFd4c1Be8a6EaEdF4baBD5a2\",\n  \"factor_friendly_name\" : \"Dr. Shane Collier\",\n  \"entity_identity\" : \"yom34v6jfejk5hx3j8cdy5mknnzanf6jnjspcj48e4mgnhg6j2frbnu0jlu7pwn3mxqwshoqtnqjaifoiltwjsblt6lgbp14ajw7g2jly280nwaphzkzd7hcfpy20mthtl3khkwqeby3djocgmyu2ojk2ovjw9fjub9ie\",\n  \"factor_type\" : \"push\",\n  \"date_created\" : \"2022-11-09T11:13:01.299Z\",\n  \"account_sid\" : \"ACe63CC63cDF0EAbA754F489bB66727DfD\",\n  \"ttl\" : 6349196649343749814,\n  \"url\" : \"https://web.example.mocklab.io/029445\",\n  \"sid\" : \"YKe5Ab294eeC8f276dBC1A4a11972d1BEd\",\n  \"token\" : \"vhjcwr0pfwd7bjvsa7h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16f1cc96-2d3b-4f97-9868-a403417c1fbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.30002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateAccessToken",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this access token was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "entity_identity" : {
                "description" : "The unique external identifier for the Entity of the Service.",
                "nullable" : true,
                "type" : "string"
              },
              "factor_friendly_name" : {
                "description" : "A human readable description of this factor, up to 64 characters. For a push factor, this can be the device's name.",
                "nullable" : true,
                "type" : "string"
              },
              "factor_type" : {
                "$ref" : "#/components/schemas/access_token_enum_factor_types"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Verify Service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this Access Token.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^YK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "token" : {
                "description" : "The access token generated for enrollment, this is an encrypted json web token.",
                "nullable" : true,
                "type" : "string"
              },
              "ttl" : {
                "description" : "How long, in seconds, the access token is valid. Max: 5 minutes",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "f30f7d6f-4063-44a2-90ad-c27d3d6c26cf",
    "name" : "Create a new Verification Service.",
    "request" : {
      "urlPath" : "/v2/Services",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"code_length\" : 4656407494269157585,\n  \"totp\" : { },\n  \"friendly_name\" : \"Jame McKenzie\",\n  \"lookup_enabled\" : true,\n  \"date_updated\" : \"2023-03-21T01:49:28.299Z\",\n  \"date_created\" : \"2023-07-29T23:39:57.299Z\",\n  \"default_template_sid\" : \"HJFD7b98D8B3d198a7abcd5082dc1b5F1E\",\n  \"custom_code_enabled\" : false,\n  \"skip_sms_to_landlines\" : true,\n  \"do_not_share_warning_enabled\" : false,\n  \"dtmf_input_required\" : false,\n  \"push\" : { },\n  \"url\" : \"https://web.example.mocklab.io/841592\",\n  \"sid\" : \"VAa59D69fd95964e896CEd17c749eb6Ec0\",\n  \"tts_name\" : \"Xiomara Feest\",\n  \"psd2_enabled\" : false,\n  \"account_sid\" : \"ACf7003FaF91fA182111C64eCD4aab4cBe\",\n  \"links\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f30f7d6f-4063-44a2-90ad-c27d3d6c26cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.299677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "code_length" : {
                "description" : "The length of the verification code to generate.",
                "nullable" : true,
                "type" : "integer"
              },
              "custom_code_enabled" : {
                "description" : "Whether to allow sending verifications with a custom code instead of a randomly generated one. Not available for all customers.",
                "nullable" : true,
                "type" : "boolean"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "default_template_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HJ[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "do_not_share_warning_enabled" : {
                "description" : "Whether to add a security warning at the end of an SMS verification body. Disabled by default and applies only to SMS. Example SMS body: `Your AppName verification code is: 1234. Don’t share this code with anyone; our employees will never ask for the code`",
                "nullable" : true,
                "type" : "boolean"
              },
              "dtmf_input_required" : {
                "description" : "Whether to ask the user to press a number before delivering the verify code in a phone call.",
                "nullable" : true,
                "type" : "boolean"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the verification service. **This value should not contain PII.**",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "lookup_enabled" : {
                "description" : "Whether to perform a lookup with each verification started and return info about the phone number.",
                "nullable" : true,
                "type" : "boolean"
              },
              "psd2_enabled" : {
                "description" : "Whether to pass PSD2 transaction parameters when starting a verification.",
                "nullable" : true,
                "type" : "boolean"
              },
              "push" : {
                "description" : "Configurations for the Push factors (channel) created under this Service.",
                "nullable" : true
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Service resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "skip_sms_to_landlines" : {
                "description" : "Whether to skip sending SMS verifications to landlines. Requires `lookup_enabled`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "totp" : {
                "description" : "Configurations for the TOTP factors (channel) created under this Service.",
                "nullable" : true
              },
              "tts_name" : {
                "description" : "The name of an alternative text-to-speech service to use in phone calls. Applies only to TTS languages.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "56ca730d-6112-4ec4-9e56-fc7058284383",
    "name" : "Retrieve a list of all Verification Services for an account.",
    "request" : {
      "urlPath" : "/v2/Services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/925676\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/097739\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/897254\",\n    \"page\" : 1462142508457329384,\n    \"key\" : \"roy5gq1jtrjgvkhtorbmd9t12r0aug4xgmeg52eo19jvq154uq1ie3zyydy11nuvjiv7igvzgg4qt2zls294vio85dr6mi01aez0y3ww\",\n    \"url\" : \"https://web.example.mocklab.io/068655\",\n    \"page_size\" : 5590900717023223439\n  },\n  \"services\" : [ {\n    \"code_length\" : 3761704102472312852,\n    \"totp\" : { },\n    \"friendly_name\" : \"Dallas Mann\",\n    \"lookup_enabled\" : true,\n    \"date_updated\" : \"2023-09-25T17:12:47.298Z\",\n    \"date_created\" : \"2023-12-18T10:10:17.298Z\",\n    \"default_template_sid\" : \"HJfFCDcDDb10bBc11dFF5D3843BDb70d7A\",\n    \"custom_code_enabled\" : false,\n    \"skip_sms_to_landlines\" : true,\n    \"do_not_share_warning_enabled\" : true,\n    \"dtmf_input_required\" : true,\n    \"push\" : { },\n    \"url\" : \"https://web.example.mocklab.io/023216\",\n    \"sid\" : \"VA49F5F6ee460A8F87B7F7D6cfC2D9bE9A\",\n    \"tts_name\" : \"Mohammed Ryan\",\n    \"psd2_enabled\" : false,\n    \"account_sid\" : \"AC2AdC11bB6dD05cFBD04FC4AB30CFAfEF\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56ca730d-6112-4ec4-9e56-fc7058284383",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.299269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListService",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "services" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.service"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "33e4f7b9-e470-466c-b176-d13c35de099e",
    "name" : "Check if a phone number exists in SafeList.",
    "request" : {
      "urlPath" : "/v2/SafeList/Numbers/390-241-6837+x38293",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"phone_number\" : \"(485) 655-5659\",\n  \"url\" : \"https://web.example.mocklab.io/567079\",\n  \"sid\" : \"GNad31dA6EaDB83e8Fd5AD0caFd648AD30\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33e4f7b9-e470-466c-b176-d13c35de099e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.298586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchSafelist",
          "schema" : {
            "properties" : {
              "phone_number" : {
                "description" : "The phone number in SafeList.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the SafeList resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^GN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the SafeList resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "5dd0d10c-4fb8-4ce0-b233-74572eb34eb5",
    "name" : "Remove a phone number from SafeList. - 204",
    "request" : {
      "urlPath" : "/v2/SafeList/Numbers/691-549-7538",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5dd0d10c-4fb8-4ce0-b233-74572eb34eb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.298419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteSafelist"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "eceae1a5-66be-48cf-a12c-eab651a22e3a",
    "name" : "Add a new phone number to SafeList.",
    "request" : {
      "urlPath" : "/v2/SafeList/Numbers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"phone_number\" : \"1-171-053-3619 x119\",\n  \"url\" : \"https://web.example.mocklab.io/894200\",\n  \"sid\" : \"GNc8ff7A212B65b16cd8cBc1ccFfF1AF1f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eceae1a5-66be-48cf-a12c-eab651a22e3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.298366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateSafelist",
          "schema" : {
            "properties" : {
              "phone_number" : {
                "description" : "The phone number in SafeList.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the SafeList resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^GN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the SafeList resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "523b0ea9-37a9-431f-b1d1-4b4b8333592a",
    "name" : "Fetch the forms for a specific Form Type.",
    "request" : {
      "urlPath" : "/v2/Forms/form-push",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"form_meta\" : { },\n  \"form_type\" : \"form-push\",\n  \"forms\" : { },\n  \"url\" : \"https://web.example.mocklab.io/862625\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "523b0ea9-37a9-431f-b1d1-4b4b8333592a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.298199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchForm",
          "schema" : {
            "properties" : {
              "form_meta" : {
                "description" : "Additional information for the available forms for this type. E.g. The separator string used for `binding` in a Factor push.",
                "nullable" : true
              },
              "form_type" : {
                "$ref" : "#/components/schemas/form_enum_form_types"
              },
              "forms" : {
                "description" : "Object that contains the available forms for this type. This available forms are given in the standard [JSON Schema](https://json-schema.org/) format",
                "nullable" : true
              },
              "url" : {
                "description" : "The URL to access the forms for this type.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "d64d0abe-f4f5-4803-8b47-9c19d8c2aa24",
    "name" : "Fetch a specific verification attempt.",
    "request" : {
      "urlPath" : "/v2/Attempts/VL943CD44c7F5aefC1C6D7c1D1B93bE5CD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"VAC252FaC14C97b6d7D3bf134Ce4a3Fa55\",\n  \"date_updated\" : \"2022-05-02T18:22:22.297Z\",\n  \"channel_data\" : { },\n  \"date_created\" : \"2024-01-17T16:54:15.297Z\",\n  \"price\" : { },\n  \"channel\" : \"sms\",\n  \"account_sid\" : \"ACbD0FF5E516eA094Fbba23B65E1eed31a\",\n  \"conversion_status\" : \"converted\",\n  \"url\" : \"https://web.example.mocklab.io/024554\",\n  \"verification_sid\" : \"VE2c109204ecf1b2FbdC0F7BB714CAd2b8\",\n  \"sid\" : \"VL97b7cD029ffC8Fa4837819F1f4cdb22D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d64d0abe-f4f5-4803-8b47-9c19d8c2aa24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.298023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchVerificationAttempt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Verification resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel" : {
                "$ref" : "#/components/schemas/verification_attempt_enum_channels"
              },
              "channel_data" : {
                "description" : "An object containing the channel specific information for an attempt.",
                "nullable" : true
              },
              "conversion_status" : {
                "$ref" : "#/components/schemas/verification_attempt_enum_conversion_status"
              },
              "date_created" : {
                "description" : "The date that this Attempt was created, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this Attempt was updated, given in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "price" : {
                "description" : "An object containing the charge for this verification attempt related to the channel costs and the currency used. The costs related to the succeeded verifications are not included. May not be immediately available. More information on pricing is available [here](https://www.twilio.com/verify/pricing).",
                "nullable" : true
              },
              "service_sid" : {
                "description" : "The SID of the [Service](https://www.twilio.com/docs/verify/api/service) used to generate the attempt.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The SID that uniquely identifies the verification attempt resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "verification_sid" : {
                "description" : "The SID of the [Verification](https://www.twilio.com/docs/verify/api/verification) that generated the attempt.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^VE[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "cf9dc58d-8f2d-4726-a7af-2acf1905fb10",
    "name" : "Get a summary of how many attempts were made and how many were converted.",
    "request" : {
      "urlPath" : "/v2/Attempts/Summary",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total_attempts\" : 156864036596854115,\n  \"total_unconverted\" : 5151254953139879739,\n  \"conversion_rate_percentage\" : 1.0200335418936638E308,\n  \"total_converted\" : 7820933446006892457,\n  \"url\" : \"https://web.example.mocklab.io/363066\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf9dc58d-8f2d-4726-a7af-2acf1905fb10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.297768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchVerificationAttemptsSummary",
          "schema" : {
            "properties" : {
              "conversion_rate_percentage" : {
                "description" : "Percentage of the confirmed messages over the total, defined by (total_converted/total_attempts)*100. ",
                "nullable" : true,
                "type" : "number"
              },
              "total_attempts" : {
                "description" : "Total of attempts made according to the provided filters",
                "nullable" : true,
                "type" : "integer"
              },
              "total_converted" : {
                "description" : "Total of  attempts made that were confirmed by the end user, according to the provided filters.",
                "nullable" : true,
                "type" : "integer"
              },
              "total_unconverted" : {
                "description" : "Total of attempts made that were not confirmed by the end user, according to the provided filters.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "ed289940-eccb-4478-82ac-a73d3adc1437",
    "name" : "List all the verification attempts for a given Account.",
    "request" : {
      "urlPath" : "/v2/Attempts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/844355\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/150948\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/337225\",\n    \"page\" : 1533977266915964389,\n    \"key\" : \"c9ukqjgsolxznxh9hp2nqsfg8pww619z3jpjctz2k1fspyfbzlsl1scwc2jx46loyunnwomh9cy6xsuqgtb0vfvw7wfh3e4pqw12hvm84m6lbruwg1p907keqvjwlhntjj3yfje547nhig3iadt5k3fcpjuizgcuw4he\",\n    \"url\" : \"https://web.example.mocklab.io/079444\",\n    \"page_size\" : 7202363239161734089\n  },\n  \"attempts\" : [ {\n    \"service_sid\" : \"VAcCbA2eA961ebEDD9DEc811D7a3eAa184\",\n    \"date_updated\" : \"2022-10-14T20:13:16.296Z\",\n    \"channel_data\" : { },\n    \"date_created\" : \"2022-06-01T18:07:08.296Z\",\n    \"price\" : { },\n    \"channel\" : \"email\",\n    \"account_sid\" : \"ACe54Dd6FE6a738C641E7BD00C3737eCaa\",\n    \"conversion_status\" : \"converted\",\n    \"url\" : \"https://web.example.mocklab.io/708841\",\n    \"verification_sid\" : \"VE04B85F912C4D798Fde7ca2f7cc3AABB8\",\n    \"sid\" : \"VLe0a4D6dfCffEc0Ada6cFbc7eaF084a8f\"\n  }, {\n    \"service_sid\" : \"VA4d159A790CDefdfCdDeBBA0E2abac79F\",\n    \"date_updated\" : \"2023-10-06T01:27:53.296Z\",\n    \"channel_data\" : { },\n    \"date_created\" : \"2022-08-25T12:33:19.296Z\",\n    \"price\" : { },\n    \"channel\" : \"whatsapp\",\n    \"account_sid\" : \"ACcFA874e1AEdB43fFD0C21d0BD4dCFAb7\",\n    \"conversion_status\" : \"converted\",\n    \"url\" : \"https://web.example.mocklab.io/727414\",\n    \"verification_sid\" : \"VEAd4bd94566dC2b5402f70BF6Aa1B452B\",\n    \"sid\" : \"VLFEbC40221aBF7f6a53fAb1E5c2C86FD3\"\n  }, {\n    \"service_sid\" : \"VAbda0881Bb89d8cAd666a8A9B8FfE2F50\",\n    \"date_updated\" : \"2023-12-18T03:14:38.297Z\",\n    \"channel_data\" : { },\n    \"date_created\" : \"2024-01-25T20:08:38.297Z\",\n    \"price\" : { },\n    \"channel\" : \"call\",\n    \"account_sid\" : \"ACF3eD34B7973c38dd3eB68dA45FeFB6F2\",\n    \"conversion_status\" : \"unconverted\",\n    \"url\" : \"https://web.example.mocklab.io/306567\",\n    \"verification_sid\" : \"VE8FDbB5BBf0809130417b36bB8657aC42\",\n    \"sid\" : \"VLfF4A7CA4df8d50EFcbd3b4Cd84AbcE63\"\n  }, {\n    \"service_sid\" : \"VA1CdfbC508e1CdfCB17D5CF0EBDccCA69\",\n    \"date_updated\" : \"2022-09-27T11:03:16.297Z\",\n    \"channel_data\" : { },\n    \"date_created\" : \"2022-07-04T06:53:39.297Z\",\n    \"price\" : { },\n    \"channel\" : \"call\",\n    \"account_sid\" : \"AC131d774E3aFa012082F9B2fC6AE68D4A\",\n    \"conversion_status\" : \"converted\",\n    \"url\" : \"https://web.example.mocklab.io/595025\",\n    \"verification_sid\" : \"VE8F5f43FeD56AAa3d64cbA7aA3b5AECBE\",\n    \"sid\" : \"VLE1d23B5DFE22BEfD7c700Af3BE400CeD\"\n  }, {\n    \"service_sid\" : \"VAef8e7fC4f6EEfCd8bE4cdAcA0e78CFFD\",\n    \"date_updated\" : \"2023-07-14T04:43:33.297Z\",\n    \"channel_data\" : { },\n    \"date_created\" : \"2024-01-17T07:12:12.297Z\",\n    \"price\" : { },\n    \"channel\" : \"call\",\n    \"account_sid\" : \"ACA4efCdc6d337D2A64BeB6E92e8ecd554\",\n    \"conversion_status\" : \"unconverted\",\n    \"url\" : \"https://web.example.mocklab.io/005952\",\n    \"verification_sid\" : \"VEF76DD000BC61837cACd8704fEeD152b7\",\n    \"sid\" : \"VL63aa70d0db22bf8FFA359443b17ddcB4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed289940-eccb-4478-82ac-a73d3adc1437",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:58.297566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListVerificationAttempt",
          "schema" : {
            "properties" : {
              "attempts" : {
                "items" : {
                  "$ref" : "#/components/schemas/verify.v2.verification_attempt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListVerificationAttemptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  } ]
}