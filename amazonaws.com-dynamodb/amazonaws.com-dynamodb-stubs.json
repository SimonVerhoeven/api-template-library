{
  "mappings" : [ {
    "id" : "ee7d64ae-30d2-3229-8ecb-b9ab1ae08f70",
    "name" : "<p>The <code>UpdateTimeToLive</code> method enables or disables Time to Live (TT...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee7d64ae-30d2-3229-8ecb-b9ab1ae08f70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimeToLive"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "989d4fde-b8f4-38fd-a948-89bf69f08ec2",
    "name" : "<p>The <code>UpdateTimeToLive</code> method enables or disables Time to Live (TT...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "989d4fde-b8f4-38fd-a948-89bf69f08ec2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimeToLive"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "866abfb1-6800-36e0-92c5-2b43d9e207a5",
    "name" : "<p>The <code>UpdateTimeToLive</code> method enables or disables Time to Live (TT...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "866abfb1-6800-36e0-92c5-2b43d9e207a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimeToLive"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7881920e-59ee-3e48-854e-1ca15bc0d59c",
    "name" : "<p>The <code>UpdateTimeToLive</code> method enables or disables Time to Live (TT...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7881920e-59ee-3e48-854e-1ca15bc0d59c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimeToLive"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "47f3af29-3718-3cae-9438-7fe060a1ef26",
    "name" : "<p>The <code>UpdateTimeToLive</code> method enables or disables Time to Live (TT...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TimeToLiveSpecification\" : {\n    \"Enabled\" : { },\n    \"AttributeName\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47f3af29-3718-3cae-9438-7fe060a1ef26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimeToLive",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TimeToLiveSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TimeToLiveSpecification"
                }, {
                  "description" : "Represents the output of an <code>UpdateTimeToLive</code> operation."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "84df1ece-01ae-3dca-be39-e8a7e69748d4",
    "name" : "<p>Updates auto scaling settings on your global tables at once.</p> <important> ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84df1ece-01ae-3dca-be39-e8a7e69748d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTableReplicaAutoScaling"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1e782020-8572-382f-bafe-47c14b3af991",
    "name" : "<p>Updates auto scaling settings on your global tables at once.</p> <important> ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e782020-8572-382f-bafe-47c14b3af991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTableReplicaAutoScaling"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "71b0cd63-ba56-3f5a-a61c-6de30b9bbebe",
    "name" : "<p>Updates auto scaling settings on your global tables at once.</p> <important> ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71b0cd63-ba56-3f5a-a61c-6de30b9bbebe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTableReplicaAutoScaling"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "97dc68ae-fe1c-3fbd-b02e-0e97d69eabd2",
    "name" : "<p>Updates auto scaling settings on your global tables at once.</p> <important> ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97dc68ae-fe1c-3fbd-b02e-0e97d69eabd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTableReplicaAutoScaling"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "523522df-c458-32f9-8973-f65dcacb6a97",
    "name" : "<p>Updates auto scaling settings on your global tables at once.</p> <important> ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableAutoScalingDescription\" : {\n    \"TableName\" : { },\n    \"TableStatus\" : { },\n    \"Replicas\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "523522df-c458-32f9-8973-f65dcacb6a97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTableReplicaAutoScaling",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableAutoScalingDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableAutoScalingDescription"
                }, {
                  "description" : "Returns information about the auto scaling settings of a table with replicas."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "e2248b19-fbff-3485-aee8-5dc024d07780",
    "name" : "<p>Modifies the provisioned throughput settings, global secondary indexes, or Dy...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2248b19-fbff-3485-aee8-5dc024d07780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTable"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "ddfe75e3-0192-3e69-be00-43a6148c082d",
    "name" : "<p>Modifies the provisioned throughput settings, global secondary indexes, or Dy...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddfe75e3-0192-3e69-be00-43a6148c082d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTable"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "83ab1eae-156a-36b0-9f04-1d462810f8b1",
    "name" : "<p>Modifies the provisioned throughput settings, global secondary indexes, or Dy...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83ab1eae-156a-36b0-9f04-1d462810f8b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTable"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "06648810-4e09-3d05-882a-94fc2650ec99",
    "name" : "<p>Modifies the provisioned throughput settings, global secondary indexes, or Dy...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06648810-4e09-3d05-882a-94fc2650ec99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTable"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "e188dfe9-f952-3506-a3aa-3e56ad8aeac5",
    "name" : "<p>Modifies the provisioned throughput settings, global secondary indexes, or Dy...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableDescription\" : {\n    \"AttributeDefinitions\" : [ {\n      \"AttributeName\" : \"Artist\",\n      \"AttributeType\" : \"S\"\n    }, {\n      \"AttributeName\" : \"SongTitle\",\n      \"AttributeType\" : \"S\"\n    } ],\n    \"CreationDateTime\" : \"1421866952.062\",\n    \"ItemCount\" : 0,\n    \"KeySchema\" : [ {\n      \"AttributeName\" : \"Artist\",\n      \"KeyType\" : \"HASH\"\n    }, {\n      \"AttributeName\" : \"SongTitle\",\n      \"KeyType\" : \"RANGE\"\n    } ],\n    \"ProvisionedThroughput\" : {\n      \"LastIncreaseDateTime\" : \"1421874759.194\",\n      \"NumberOfDecreasesToday\" : 1,\n      \"ReadCapacityUnits\" : 1,\n      \"WriteCapacityUnits\" : 1\n    },\n    \"TableName\" : \"MusicCollection\",\n    \"TableSizeBytes\" : 0,\n    \"TableStatus\" : \"UPDATING\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e188dfe9-f952-3506-a3aa-3e56ad8aeac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTable",
          "schema" : {
            "type" : "object",
            "example" : {
              "TableDescription" : {
                "AttributeDefinitions" : [ {
                  "AttributeName" : "Artist",
                  "AttributeType" : "S"
                }, {
                  "AttributeName" : "SongTitle",
                  "AttributeType" : "S"
                } ],
                "CreationDateTime" : "1421866952.062",
                "ItemCount" : 0,
                "KeySchema" : [ {
                  "AttributeName" : "Artist",
                  "KeyType" : "HASH"
                }, {
                  "AttributeName" : "SongTitle",
                  "KeyType" : "RANGE"
                } ],
                "ProvisionedThroughput" : {
                  "LastIncreaseDateTime" : "1421874759.194",
                  "NumberOfDecreasesToday" : 1,
                  "ReadCapacityUnits" : 1,
                  "WriteCapacityUnits" : 1
                },
                "TableName" : "MusicCollection",
                "TableSizeBytes" : 0,
                "TableStatus" : "UPDATING"
              }
            },
            "properties" : {
              "TableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableDescription"
                }, {
                  "description" : "Represents the properties of the table."
                } ]
              }
            },
            "description" : "Represents the output of an <code>UpdateTable</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "b3fac05e-2d59-3a5f-9879-22c3c220139d",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3fac05e-2d59-3a5f-9879-22c3c220139d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "053f8022-2646-3cf2-a80a-a516e4cbebd4",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "053f8022-2646-3cf2-a80a-a516e4cbebd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "a45b288e-f51b-3048-87ee-26b26d5f36a0",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a45b288e-f51b-3048-87ee-26b26d5f36a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "9e54cfc1-94b5-31a6-ba84-b20207c18939",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e54cfc1-94b5-31a6-ba84-b20207c18939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "7146d7bb-c344-36c8-99dd-dcb46f56e49c",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7146d7bb-c344-36c8-99dd-dcb46f56e49c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "713da134-1998-35b2-a375-38601509b31c",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "713da134-1998-35b2-a375-38601509b31c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "cddec360-8f46-3d56-be4f-75b375855e61",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cddec360-8f46-3d56-be4f-75b375855e61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "f8c4163e-cb57-331d-a2c4-79fbca4d33b1",
    "name" : "<p>Edits an existing item's attributes, or adds a new item to the table if it do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Attributes\" : {\n    \"AlbumTitle\" : {\n      \"S\" : \"Louder Than Ever\"\n    },\n    \"Artist\" : {\n      \"S\" : \"Acme Band\"\n    },\n    \"SongTitle\" : {\n      \"S\" : \"Happy Day\"\n    },\n    \"Year\" : {\n      \"N\" : \"2015\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8c4163e-cb57-331d-a2c4-79fbca4d33b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateItem",
          "schema" : {
            "type" : "object",
            "example" : {
              "Attributes" : {
                "AlbumTitle" : {
                  "S" : "Louder Than Ever"
                },
                "Artist" : {
                  "S" : "Acme Band"
                },
                "SongTitle" : {
                  "S" : "Happy Day"
                },
                "Year" : {
                  "N" : "2015"
                }
              }
            },
            "properties" : {
              "Attributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AttributeMap"
                }, {
                  "description" : "<p>A map of attribute values as they appear before or after the <code>UpdateItem</code> operation, as determined by the <code>ReturnValues</code> parameter.</p> <p>The <code>Attributes</code> map is only present if the update was successful and <code>ReturnValues</code> was specified as something other than <code>NONE</code> in the request. Each element represents one attribute.</p>"
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacity"
                }, {
                  "description" : "The capacity units consumed by the <code>UpdateItem</code> operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html#ItemSizeCalculations.Reads\">Provisioned Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>."
                } ]
              },
              "ItemCollectionMetrics" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemCollectionMetrics"
                }, {
                  "description" : "<p>Information about item collections, if any, that were affected by the <code>UpdateItem</code> operation. <code>ItemCollectionMetrics</code> is only returned if the <code>ReturnItemCollectionMetrics</code> parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.</p> <p>Each <code>ItemCollectionMetrics</code> element consists of:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition key value of the item collection. This is the same as the partition key value of the item itself.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.</p> <p>The estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.</p> </li> </ul>"
                } ]
              }
            },
            "description" : "Represents the output of an <code>UpdateItem</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "b29e9f0e-76b4-3e1e-8f75-eb9ca44820b4",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b29e9f0e-76b4-3e1e-8f75-eb9ca44820b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "3a9a4fa7-d599-39d2-b8cb-c41e308dd4bf",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a9a4fa7-d599-39d2-b8cb-c41e308dd4bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "a856a1bf-f052-34af-957c-00c2b9ad2ca9",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a856a1bf-f052-34af-957c-00c2b9ad2ca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "5c0da1d3-0b79-34c8-8a2f-e44c9f9054bd",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c0da1d3-0b79-34c8-8a2f-e44c9f9054bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "c790326d-10c6-304b-814f-86cb34997ae5",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c790326d-10c6-304b-814f-86cb34997ae5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "13da1fd4-6d22-3ca4-a3c3-8afadda62840",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13da1fd4-6d22-3ca4-a3c3-8afadda62840",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "3f714163-e4d2-3b87-9cf3-4f7b26601a51",
    "name" : "<p>Updates settings for a global table.</p> <important> <p>This operation only a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplicaSettings\" : { },\n  \"GlobalTableName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f714163-e4d2-3b87-9cf3-4f7b26601a51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTableSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "GlobalTableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the global table."
                } ]
              },
              "ReplicaSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ReplicaSettingsDescriptionList"
                }, {
                  "description" : "The Region-specific settings for the global table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "33dccaea-b7ec-38ba-ba31-ecf8f4d61c89",
    "name" : "<p>Adds or removes replicas in the specified global table. The global table must...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33dccaea-b7ec-38ba-ba31-ecf8f4d61c89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTable"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "29f3216f-d961-34ce-a448-19e45adf5b5d",
    "name" : "<p>Adds or removes replicas in the specified global table. The global table must...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29f3216f-d961-34ce-a448-19e45adf5b5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTable"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "23a12a66-64b7-3c21-a84c-da4f710b9421",
    "name" : "<p>Adds or removes replicas in the specified global table. The global table must...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23a12a66-64b7-3c21-a84c-da4f710b9421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTable"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "9470e64b-86a1-3ab9-a66a-73eb7e2e4154",
    "name" : "<p>Adds or removes replicas in the specified global table. The global table must...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9470e64b-86a1-3ab9-a66a-73eb7e2e4154",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTable"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "9a3cff7b-9e16-3ed6-8658-3290790797af",
    "name" : "<p>Adds or removes replicas in the specified global table. The global table must...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a3cff7b-9e16-3ed6-8658-3290790797af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTable"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "6b889aa4-2f50-3c60-a92a-639dea95eca2",
    "name" : "<p>Adds or removes replicas in the specified global table. The global table must...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"GlobalTableDescription\" : {\n    \"GlobalTableStatus\" : { },\n    \"CreationDateTime\" : { },\n    \"GlobalTableArn\" : { },\n    \"ReplicationGroup\" : { },\n    \"GlobalTableName\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b889aa4-2f50-3c60-a92a-639dea95eca2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateGlobalTable",
          "schema" : {
            "type" : "object",
            "properties" : {
              "GlobalTableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/GlobalTableDescription"
                }, {
                  "description" : "Contains the details of the global table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "58fcdb57-5898-3ac5-b9df-8952ab5cb339",
    "name" : "Updates the status for contributor insights for a specific table or index. Cloud...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58fcdb57-5898-3ac5-b9df-8952ab5cb339",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContributorInsights"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "418873dd-2ac2-3659-a830-01dbad26a6ff",
    "name" : "Updates the status for contributor insights for a specific table or index. Cloud...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "418873dd-2ac2-3659-a830-01dbad26a6ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContributorInsights"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "1dc11142-53cc-331f-9762-705fbc190303",
    "name" : "Updates the status for contributor insights for a specific table or index. Cloud...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"IndexName\" : { },\n  \"TableName\" : { },\n  \"ContributorInsightsStatus\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dc11142-53cc-331f-9762-705fbc190303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContributorInsights",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the table."
                } ]
              },
              "IndexName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IndexName"
                }, {
                  "description" : "The name of the global secondary index, if applicable."
                } ]
              },
              "ContributorInsightsStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ContributorInsightsStatus"
                }, {
                  "description" : "The status of contributor insights"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "b7005443-d24e-3e5f-a24a-f4e3ab0e32ab",
    "name" : "<p> <code>UpdateContinuousBackups</code> enables or disables point in time recov...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7005443-d24e-3e5f-a24a-f4e3ab0e32ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContinuousBackups"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "7bc5d217-6dc2-3b25-9026-be26364457a0",
    "name" : "<p> <code>UpdateContinuousBackups</code> enables or disables point in time recov...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bc5d217-6dc2-3b25-9026-be26364457a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContinuousBackups"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "19eeae8e-63f2-394e-82e7-a0548f1bd492",
    "name" : "<p> <code>UpdateContinuousBackups</code> enables or disables point in time recov...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19eeae8e-63f2-394e-82e7-a0548f1bd492",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContinuousBackups"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "95e61402-9eb4-319b-ae91-78d61f82fcd7",
    "name" : "<p> <code>UpdateContinuousBackups</code> enables or disables point in time recov...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UpdateContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ContinuousBackupsDescription\" : {\n    \"PointInTimeRecoveryDescription\" : {\n      \"EarliestRestorableDateTime\" : { },\n      \"PointInTimeRecoveryStatus\" : { },\n      \"LatestRestorableDateTime\" : { }\n    },\n    \"ContinuousBackupsStatus\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95e61402-9eb4-319b-ae91-78d61f82fcd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateContinuousBackups",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ContinuousBackupsDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ContinuousBackupsDescription"
                }, {
                  "description" : "Represents the continuous backups and point in time recovery settings on the table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "4c71ee5b-8221-3953-8e52-7b89efcb07e9",
    "name" : "<p>Removes the association of tags from an Amazon DynamoDB resource. You can cal... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UntagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c71ee5b-8221-3953-8e52-7b89efcb07e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "ee255fdd-6e09-3f5d-98ed-e220061225b2",
    "name" : "<p>Removes the association of tags from an Amazon DynamoDB resource. You can cal... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UntagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee255fdd-6e09-3f5d-98ed-e220061225b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "d855c6e4-a70a-3c63-8354-ae0558dc3ad8",
    "name" : "<p>Removes the association of tags from an Amazon DynamoDB resource. You can cal... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UntagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d855c6e4-a70a-3c63-8354-ae0558dc3ad8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "246ccd1b-f216-3010-841b-40ac3689386a",
    "name" : "<p>Removes the association of tags from an Amazon DynamoDB resource. You can cal... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UntagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "246ccd1b-f216-3010-841b-40ac3689386a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "e7edc327-6e69-391e-bf3a-87fe3a78b8d1",
    "name" : "<p>Removes the association of tags from an Amazon DynamoDB resource. You can cal... - 200",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.UntagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e7edc327-6e69-391e-bf3a-87fe3a78b8d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "91de111b-b821-31df-889d-8d0b55e22e3a",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91de111b-b821-31df-889d-8d0b55e22e3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "15dbfedd-d52c-374e-8863-b47621b4ee76",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15dbfedd-d52c-374e-8863-b47621b4ee76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "b8dce2a4-ad78-3912-afdf-0de770aa1b33",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8dce2a4-ad78-3912-afdf-0de770aa1b33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "8ce264ec-69df-3dfa-8f26-028221f3ca9f",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ce264ec-69df-3dfa-8f26-028221f3ca9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "901cee0e-5604-30a0-9572-c159f51df360",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "901cee0e-5604-30a0-9572-c159f51df360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "dfdef879-c672-3bcf-b2b9-36192a2fcb6b",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfdef879-c672-3bcf-b2b9-36192a2fcb6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "2251ea4b-f924-3b81-8f47-6fcc31b054db",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2251ea4b-f924-3b81-8f47-6fcc31b054db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "a685d93f-885b-3bf8-8474-25365fb64d46",
    "name" : "<p> <code>TransactWriteItems</code> is a synchronous write operation that groups...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactWriteItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ItemCollectionMetrics\" : { },\n  \"ConsumedCapacity\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a685d93f-885b-3bf8-8474-25365fb64d46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactWriteItems",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacityMultiple"
                }, {
                  "description" : "The capacity units consumed by the entire <code>TransactWriteItems</code> operation. The values of the list are ordered according to the ordering of the <code>TransactItems</code> request parameter. "
                } ]
              },
              "ItemCollectionMetrics" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemCollectionMetricsPerTable"
                }, {
                  "description" : "A list of tables that were processed by <code>TransactWriteItems</code> and, for each table, information about any item collections that were affected by individual <code>UpdateItem</code>, <code>PutItem</code>, or <code>DeleteItem</code> operations. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "012ab0c2-c16c-3ab6-a8bf-c36c1031de62",
    "name" : "<p> <code>TransactGetItems</code> is a synchronous operation that atomically ret...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactGetItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "012ab0c2-c16c-3ab6-a8bf-c36c1031de62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactGetItems"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "527ff893-eba0-314e-872d-f8ca2e468f99",
    "name" : "<p> <code>TransactGetItems</code> is a synchronous operation that atomically ret...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactGetItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "527ff893-eba0-314e-872d-f8ca2e468f99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactGetItems"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "c41d54f7-c808-3921-b82a-f2135d87efc0",
    "name" : "<p> <code>TransactGetItems</code> is a synchronous operation that atomically ret...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactGetItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c41d54f7-c808-3921-b82a-f2135d87efc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactGetItems"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "c4d95107-a338-3e39-a1b2-7bcd92e97f66",
    "name" : "<p> <code>TransactGetItems</code> is a synchronous operation that atomically ret...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactGetItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4d95107-a338-3e39-a1b2-7bcd92e97f66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactGetItems"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "b01c86d1-6fd0-357c-b206-887beea7f77b",
    "name" : "<p> <code>TransactGetItems</code> is a synchronous operation that atomically ret...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactGetItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b01c86d1-6fd0-357c-b206-887beea7f77b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactGetItems"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "936c4f7d-3914-3475-8ae4-7401692f8b53",
    "name" : "<p> <code>TransactGetItems</code> is a synchronous operation that atomically ret...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TransactGetItems",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ConsumedCapacity\" : { },\n  \"Responses\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "936c4f7d-3914-3475-8ae4-7401692f8b53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TransactGetItems",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacityMultiple"
                }, {
                  "description" : "If the <i>ReturnConsumedCapacity</i> value was <code>TOTAL</code>, this is an array of <code>ConsumedCapacity</code> objects, one for each table addressed by <code>TransactGetItem</code> objects in the <i>TransactItems</i> parameter. These <code>ConsumedCapacity</code> objects report the read-capacity units consumed by the <code>TransactGetItems</code> call in that table."
                } ]
              },
              "Responses" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemResponseList"
                }, {
                  "description" : "<p>An ordered array of up to 100 <code>ItemResponse</code> objects, each of which corresponds to the <code>TransactGetItem</code> object in the same position in the <i>TransactItems</i> array. Each <code>ItemResponse</code> object contains a Map of the name-value pairs that are the projected attributes of the requested item.</p> <p>If a requested item could not be retrieved, the corresponding <code>ItemResponse</code> object is Null, or if the requested item has no projected attributes, the corresponding <code>ItemResponse</code> object is an empty Map. </p>"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "02be24b9-b0b6-343a-a098-ece096761780",
    "name" : "<p>Associate a set of tags with an Amazon DynamoDB resource. You can then activa... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02be24b9-b0b6-343a-a098-ece096761780",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "21388f7d-edcd-3f2f-85d1-0d445ec3d95f",
    "name" : "<p>Associate a set of tags with an Amazon DynamoDB resource. You can then activa... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21388f7d-edcd-3f2f-85d1-0d445ec3d95f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "1af784ad-a77c-3309-b12d-0be3e43b3efd",
    "name" : "<p>Associate a set of tags with an Amazon DynamoDB resource. You can then activa... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1af784ad-a77c-3309-b12d-0be3e43b3efd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "a8cad49a-a166-3446-919b-325f525267c5",
    "name" : "<p>Associate a set of tags with an Amazon DynamoDB resource. You can then activa... (application/json)",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TagResource",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8cad49a-a166-3446-919b-325f525267c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "7de37ab8-78b3-32f0-b2ec-6bbab5817886",
    "name" : "<p>Associate a set of tags with an Amazon DynamoDB resource. You can then activa... - 200",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.TagResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7de37ab8-78b3-32f0-b2ec-6bbab5817886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "af9c85b5-d87e-3d6a-846d-a9f808dd04c6",
    "name" : "<p>The <code>Scan</code> operation returns one or more items and item attributes...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Scan",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af9c85b5-d87e-3d6a-846d-a9f808dd04c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Scan"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "183eef2c-b0e3-369e-b9e7-b5c67f1d7d1a",
    "name" : "<p>The <code>Scan</code> operation returns one or more items and item attributes...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Scan",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "183eef2c-b0e3-369e-b9e7-b5c67f1d7d1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Scan"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "f409da30-6126-3b8f-a3fe-a4e40502b1ef",
    "name" : "<p>The <code>Scan</code> operation returns one or more items and item attributes...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Scan",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f409da30-6126-3b8f-a3fe-a4e40502b1ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Scan"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "4448ba80-c468-344b-9a85-7d2eaf59eaf0",
    "name" : "<p>The <code>Scan</code> operation returns one or more items and item attributes...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Scan",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4448ba80-c468-344b-9a85-7d2eaf59eaf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Scan"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "111b0690-08a5-3dd7-bc2c-b265314982d0",
    "name" : "<p>The <code>Scan</code> operation returns one or more items and item attributes...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Scan",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ConsumedCapacity\" : { },\n  \"Count\" : 2,\n  \"Items\" : [ {\n    \"AlbumTitle\" : {\n      \"S\" : \"Somewhat Famous\"\n    },\n    \"SongTitle\" : {\n      \"S\" : \"Call Me Today\"\n    }\n  }, {\n    \"AlbumTitle\" : {\n      \"S\" : \"Blue Sky Blues\"\n    },\n    \"SongTitle\" : {\n      \"S\" : \"Scared of My Shadow\"\n    }\n  } ],\n  \"ScannedCount\" : 3\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "111b0690-08a5-3dd7-bc2c-b265314982d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Scan",
          "schema" : {
            "type" : "object",
            "example" : {
              "ConsumedCapacity" : { },
              "Count" : 2,
              "Items" : [ {
                "AlbumTitle" : {
                  "S" : "Somewhat Famous"
                },
                "SongTitle" : {
                  "S" : "Call Me Today"
                }
              }, {
                "AlbumTitle" : {
                  "S" : "Blue Sky Blues"
                },
                "SongTitle" : {
                  "S" : "Scared of My Shadow"
                }
              } ],
              "ScannedCount" : 3
            },
            "properties" : {
              "Items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemList"
                }, {
                  "description" : "An array of item attributes that match the scan criteria. Each element in this array consists of an attribute name and the value for that attribute."
                } ]
              },
              "Count" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Integer"
                }, {
                  "description" : "<p>The number of items in the response.</p> <p>If you set <code>ScanFilter</code> in the request, then <code>Count</code> is the number of items returned after the filter was applied, and <code>ScannedCount</code> is the number of matching items before the filter was applied.</p> <p>If you did not use a filter in the request, then <code>Count</code> is the same as <code>ScannedCount</code>.</p>"
                } ]
              },
              "ScannedCount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Integer"
                }, {
                  "description" : "<p>The number of items evaluated, before any <code>ScanFilter</code> is applied. A high <code>ScannedCount</code> value with few, or no, <code>Count</code> results indicates an inefficient <code>Scan</code> operation. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count\">Count and ScannedCount</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>If you did not use a filter in the request, then <code>ScannedCount</code> is the same as <code>Count</code>.</p>"
                } ]
              },
              "LastEvaluatedKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Key"
                }, {
                  "description" : "<p>The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedKey</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedKey</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedKey</code> is empty.</p>"
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacity"
                }, {
                  "description" : "The capacity units consumed by the <code>Scan</code> operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html#ItemSizeCalculations.Reads\">Provisioned Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>."
                } ]
              }
            },
            "description" : "Represents the output of a <code>Scan</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "23de2768-6ef8-3f92-ac95-b778c064d2ba",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23de2768-6ef8-3f92-ac95-b778c064d2ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "9e662fdf-bc86-32bf-8c7b-cc87a56e6f97",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e662fdf-bc86-32bf-8c7b-cc87a56e6f97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "4782a725-7ac6-3c8f-b7db-857c28100c00",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4782a725-7ac6-3c8f-b7db-857c28100c00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "8b23f47e-eae4-3061-8995-0af94cde8fba",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b23f47e-eae4-3061-8995-0af94cde8fba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "dddd05f7-8af7-3db9-8b78-5a1a49d9407c",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dddd05f7-8af7-3db9-8b78-5a1a49d9407c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "80b7a23d-1613-300a-b669-359b2ecd5889",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80b7a23d-1613-300a-b669-359b2ecd5889",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "4df4840b-9b78-346b-98a5-a9932c7ad5b6",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4df4840b-9b78-346b-98a5-a9932c7ad5b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "dd217104-ce5a-3da4-87e7-d7b26d1a08c5",
    "name" : "<p>Restores the specified table to the specified point in time within <code>Earl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableDescription\" : {\n    \"TableId\" : { },\n    \"TableSizeBytes\" : { },\n    \"StreamSpecification\" : {\n      \"StreamEnabled\" : { },\n      \"StreamViewType\" : { }\n    },\n    \"RestoreSummary\" : {\n      \"SourceBackupArn\" : { },\n      \"RestoreInProgress\" : { },\n      \"SourceTableArn\" : { },\n      \"RestoreDateTime\" : { }\n    },\n    \"TableClassSummary\" : {\n      \"LastUpdateDateTime\" : { },\n      \"TableClass\" : { }\n    },\n    \"ProvisionedThroughput\" : {\n      \"WriteCapacityUnits\" : { },\n      \"LastDecreaseDateTime\" : { },\n      \"ReadCapacityUnits\" : { },\n      \"LastIncreaseDateTime\" : { },\n      \"NumberOfDecreasesToday\" : { }\n    },\n    \"Replicas\" : { },\n    \"TableName\" : { },\n    \"LatestStreamArn\" : { },\n    \"GlobalTableVersion\" : { },\n    \"AttributeDefinitions\" : { },\n    \"CreationDateTime\" : { },\n    \"SSEDescription\" : {\n      \"Status\" : { },\n      \"SSEType\" : { },\n      \"InaccessibleEncryptionDateTime\" : { },\n      \"KMSMasterKeyArn\" : { }\n    },\n    \"TableArn\" : { },\n    \"TableStatus\" : { },\n    \"GlobalSecondaryIndexes\" : { },\n    \"ItemCount\" : { },\n    \"KeySchema\" : { },\n    \"BillingModeSummary\" : {\n      \"LastUpdateToPayPerRequestDateTime\" : { },\n      \"BillingMode\" : { }\n    },\n    \"LocalSecondaryIndexes\" : { },\n    \"LatestStreamLabel\" : { },\n    \"ArchivalSummary\" : {\n      \"ArchivalDateTime\" : { },\n      \"ArchivalBackupArn\" : { },\n      \"ArchivalReason\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd217104-ce5a-3da4-87e7-d7b26d1a08c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableToPointInTime",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableDescription"
                }, {
                  "description" : "Represents the properties of a table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "76836760-f18c-3b65-8304-bfd94e3161c3",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76836760-f18c-3b65-8304-bfd94e3161c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "b8d0e31c-7e2e-37e4-b7c2-4988f42cbc17",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8d0e31c-7e2e-37e4-b7c2-4988f42cbc17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "26084802-afe1-3c1d-bc49-e5c81a54b3f4",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26084802-afe1-3c1d-bc49-e5c81a54b3f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "948b5938-c482-35ee-ab73-f96e481dde5f",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "948b5938-c482-35ee-ab73-f96e481dde5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "98f1808f-8743-384e-ab95-e8987fe21762",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98f1808f-8743-384e-ab95-e8987fe21762",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "1e2cddc8-e73f-3177-af45-96edf158974e",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e2cddc8-e73f-3177-af45-96edf158974e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "6519ccbd-e952-3ac1-92cb-5192c20cf0f3",
    "name" : "<p>Creates a new table from an existing backup. Any number of users can execute ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.RestoreTableFromBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableDescription\" : {\n    \"TableId\" : { },\n    \"TableSizeBytes\" : { },\n    \"StreamSpecification\" : {\n      \"StreamEnabled\" : { },\n      \"StreamViewType\" : { }\n    },\n    \"RestoreSummary\" : {\n      \"SourceBackupArn\" : { },\n      \"RestoreInProgress\" : { },\n      \"SourceTableArn\" : { },\n      \"RestoreDateTime\" : { }\n    },\n    \"TableClassSummary\" : {\n      \"LastUpdateDateTime\" : { },\n      \"TableClass\" : { }\n    },\n    \"ProvisionedThroughput\" : {\n      \"WriteCapacityUnits\" : { },\n      \"LastDecreaseDateTime\" : { },\n      \"ReadCapacityUnits\" : { },\n      \"LastIncreaseDateTime\" : { },\n      \"NumberOfDecreasesToday\" : { }\n    },\n    \"Replicas\" : { },\n    \"TableName\" : { },\n    \"LatestStreamArn\" : { },\n    \"GlobalTableVersion\" : { },\n    \"AttributeDefinitions\" : { },\n    \"CreationDateTime\" : { },\n    \"SSEDescription\" : {\n      \"Status\" : { },\n      \"SSEType\" : { },\n      \"InaccessibleEncryptionDateTime\" : { },\n      \"KMSMasterKeyArn\" : { }\n    },\n    \"TableArn\" : { },\n    \"TableStatus\" : { },\n    \"GlobalSecondaryIndexes\" : { },\n    \"ItemCount\" : { },\n    \"KeySchema\" : { },\n    \"BillingModeSummary\" : {\n      \"LastUpdateToPayPerRequestDateTime\" : { },\n      \"BillingMode\" : { }\n    },\n    \"LocalSecondaryIndexes\" : { },\n    \"LatestStreamLabel\" : { },\n    \"ArchivalSummary\" : {\n      \"ArchivalDateTime\" : { },\n      \"ArchivalBackupArn\" : { },\n      \"ArchivalReason\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6519ccbd-e952-3ac1-92cb-5192c20cf0f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RestoreTableFromBackup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableDescription"
                }, {
                  "description" : "The description of the table created from an existing backup."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "1c92e11c-ad34-31c5-a304-428b2088e1c7",
    "name" : "<p>You must provide the name of the partition key attribute and a single value f...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Query",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c92e11c-ad34-31c5-a304-428b2088e1c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Query"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "e3e67919-1d3a-3d9d-aa35-9c939e71990b",
    "name" : "<p>You must provide the name of the partition key attribute and a single value f...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Query",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3e67919-1d3a-3d9d-aa35-9c939e71990b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Query"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "dae4b4a9-f2e2-3892-a65a-6ce7f7e13950",
    "name" : "<p>You must provide the name of the partition key attribute and a single value f...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Query",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dae4b4a9-f2e2-3892-a65a-6ce7f7e13950",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Query"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "2a4bf79f-bff4-3401-83c0-fb97de385d6c",
    "name" : "<p>You must provide the name of the partition key attribute and a single value f...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Query",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a4bf79f-bff4-3401-83c0-fb97de385d6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Query"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "9b7eb0ff-abad-3f65-b361-8b042c45db27",
    "name" : "<p>You must provide the name of the partition key attribute and a single value f...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.Query",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ConsumedCapacity\" : { },\n  \"Count\" : 2,\n  \"Items\" : [ {\n    \"SongTitle\" : {\n      \"S\" : \"Call Me Today\"\n    }\n  } ],\n  \"ScannedCount\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b7eb0ff-abad-3f65-b361-8b042c45db27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Query",
          "schema" : {
            "type" : "object",
            "example" : {
              "ConsumedCapacity" : { },
              "Count" : 2,
              "Items" : [ {
                "SongTitle" : {
                  "S" : "Call Me Today"
                }
              } ],
              "ScannedCount" : 2
            },
            "properties" : {
              "Items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemList"
                }, {
                  "description" : "An array of item attributes that match the query criteria. Each element in this array consists of an attribute name and the value for that attribute."
                } ]
              },
              "Count" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Integer"
                }, {
                  "description" : "<p>The number of items in the response.</p> <p>If you used a <code>QueryFilter</code> in the request, then <code>Count</code> is the number of items returned after the filter was applied, and <code>ScannedCount</code> is the number of matching items before the filter was applied.</p> <p>If you did not use a filter in the request, then <code>Count</code> and <code>ScannedCount</code> are the same.</p>"
                } ]
              },
              "ScannedCount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Integer"
                }, {
                  "description" : "<p>The number of items evaluated, before any <code>QueryFilter</code> is applied. A high <code>ScannedCount</code> value with few, or no, <code>Count</code> results indicates an inefficient <code>Query</code> operation. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/QueryAndScan.html#Count\">Count and ScannedCount</a> in the <i>Amazon DynamoDB Developer Guide</i>.</p> <p>If you did not use a filter in the request, then <code>ScannedCount</code> is the same as <code>Count</code>.</p>"
                } ]
              },
              "LastEvaluatedKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Key"
                }, {
                  "description" : "<p>The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request.</p> <p>If <code>LastEvaluatedKey</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved.</p> <p>If <code>LastEvaluatedKey</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedKey</code> is empty.</p>"
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacity"
                }, {
                  "description" : "The capacity units consumed by the <code>Query</code> operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>."
                } ]
              }
            },
            "description" : "Represents the output of a <code>Query</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "b9e4b573-0fb7-3147-a510-019dc8143da4",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9e4b573-0fb7-3147-a510-019dc8143da4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "86cacdef-7cc7-3d98-b305-357ab2091f94",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86cacdef-7cc7-3d98-b305-357ab2091f94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "2e082333-bd1a-329c-92f7-527c8d0aa101",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e082333-bd1a-329c-92f7-527c8d0aa101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "cf114716-4db8-3e30-b37b-7309a59a0c1c",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf114716-4db8-3e30-b37b-7309a59a0c1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "ddcf3353-9f71-3ba9-8af3-b0fbab615cd9",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddcf3353-9f71-3ba9-8af3-b0fbab615cd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "4b193d30-61a7-3851-8c06-a7c8d763828d",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b193d30-61a7-3851-8c06-a7c8d763828d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "3b44f481-c3d0-31cc-976e-9ebac05cdb09",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b44f481-c3d0-31cc-976e-9ebac05cdb09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "e0ab0aad-0a80-3154-8c3c-0d5edc69f335",
    "name" : "<p>Creates a new item, or replaces an old item with a new item. If an item that ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.PutItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ConsumedCapacity\" : {\n    \"CapacityUnits\" : 1,\n    \"TableName\" : \"Music\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0ab0aad-0a80-3154-8c3c-0d5edc69f335",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PutItem",
          "schema" : {
            "type" : "object",
            "example" : {
              "ConsumedCapacity" : {
                "CapacityUnits" : 1,
                "TableName" : "Music"
              }
            },
            "properties" : {
              "Attributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AttributeMap"
                }, {
                  "description" : "The attribute values as they appeared before the <code>PutItem</code> operation, but only if <code>ReturnValues</code> is specified as <code>ALL_OLD</code> in the request. Each element consists of an attribute name and an attribute value."
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacity"
                }, {
                  "description" : "The capacity units consumed by the <code>PutItem</code> operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>."
                } ]
              },
              "ItemCollectionMetrics" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemCollectionMetrics"
                }, {
                  "description" : "<p>Information about item collections, if any, that were affected by the <code>PutItem</code> operation. <code>ItemCollectionMetrics</code> is only returned if the <code>ReturnItemCollectionMetrics</code> parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.</p> <p>Each <code>ItemCollectionMetrics</code> element consists of:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition key value of the item collection. This is the same as the partition key value of the item itself.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.</p> <p>The estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.</p> </li> </ul>"
                } ]
              }
            },
            "description" : "Represents the output of a <code>PutItem</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "20d37110-6da5-331c-a941-ee38937b6e12",
    "name" : "<p>List all tags on an Amazon DynamoDB resource. You can call ListTagsOfResource...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListTagsOfResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20d37110-6da5-331c-a941-ee38937b6e12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsOfResource"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "ed0af2cf-4098-304e-8950-ff32f59f1443",
    "name" : "<p>List all tags on an Amazon DynamoDB resource. You can call ListTagsOfResource...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListTagsOfResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed0af2cf-4098-304e-8950-ff32f59f1443",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsOfResource"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "7eaab712-e91d-3f51-b5ef-b0a6552bc8ef",
    "name" : "<p>List all tags on an Amazon DynamoDB resource. You can call ListTagsOfResource...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListTagsOfResource",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"Tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7eaab712-e91d-3f51-b5ef-b0a6552bc8ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsOfResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagList"
                }, {
                  "description" : "The tags currently associated with the Amazon DynamoDB resource."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextTokenString"
                }, {
                  "description" : "If this value is returned, there are additional results to be displayed. To retrieve them, call ListTagsOfResource again, with NextToken set to this value."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "5f9a8be7-ff1d-364d-9b1a-7d5d5e7271bf",
    "name" : "Returns an array of table names associated with the current account and endpoint...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListTables",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f9a8be7-ff1d-364d-9b1a-7d5d5e7271bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTables"
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "dfc3c742-80d9-3e9a-b39c-253c51575eca",
    "name" : "Returns an array of table names associated with the current account and endpoint...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListTables",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableNames\" : [ \"Forum\", \"ProductCatalog\", \"Reply\", \"Thread\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfc3c742-80d9-3e9a-b39c-253c51575eca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTables",
          "schema" : {
            "type" : "object",
            "example" : {
              "TableNames" : [ "Forum", "ProductCatalog", "Reply", "Thread" ]
            },
            "properties" : {
              "TableNames" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableNameList"
                }, {
                  "description" : "<p>The names of the tables associated with the current account at the current endpoint. The maximum size of this array is 100.</p> <p>If <code>LastEvaluatedTableName</code> also appears in the output, you can use this value as the <code>ExclusiveStartTableName</code> parameter in a subsequent <code>ListTables</code> request and obtain the next page of results.</p>"
                } ]
              },
              "LastEvaluatedTableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "<p>The name of the last table in the current page of results. Use this value as the <code>ExclusiveStartTableName</code> in a new request to obtain the next page of results, until all the table names are returned.</p> <p>If you do not receive a <code>LastEvaluatedTableName</code> value in the response, this means that there are no more table names to be retrieved.</p>"
                } ]
              }
            },
            "description" : "Represents the output of a <code>ListTables</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "d4584e62-aa1d-3cb7-8e63-48bf3ea72e5b",
    "name" : " Lists completed imports within the past 90 days. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListImports",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4584e62-aa1d-3cb7-8e63-48bf3ea72e5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListImports"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "077de3de-a59e-3017-87fa-f2f233c3d82a",
    "name" : " Lists completed imports within the past 90 days. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListImports",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"ImportSummaryList\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "077de3de-a59e-3017-87fa-f2f233c3d82a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListImports",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ImportSummaryList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportSummaryList"
                }, {
                  "description" : " A list of <code>ImportSummary</code> objects. "
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportNextToken"
                }, {
                  "description" : " If this value is returned, there are additional results to be displayed. To retrieve them, call <code>ListImports</code> again, with <code>NextToken</code> set to this value. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "d6fde3e7-6fdc-31f7-994b-b82649d5ea0e",
    "name" : "<p>Lists all global tables that have a replica in the specified Region.</p> <imp...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListGlobalTables",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6fde3e7-6fdc-31f7-994b-b82649d5ea0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListGlobalTables"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "d452e34f-7939-38c0-87bd-2800e512f7a4",
    "name" : "<p>Lists all global tables that have a replica in the specified Region.</p> <imp...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListGlobalTables",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"GlobalTables\" : { },\n  \"LastEvaluatedGlobalTableName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d452e34f-7939-38c0-87bd-2800e512f7a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListGlobalTables",
          "schema" : {
            "type" : "object",
            "properties" : {
              "GlobalTables" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/GlobalTableList"
                }, {
                  "description" : "List of global table names."
                } ]
              },
              "LastEvaluatedGlobalTableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "Last evaluated global table name."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "cf2aaade-3ced-3638-8990-5c577fda9cad",
    "name" : "Lists completed exports within the past 90 days.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListExports",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf2aaade-3ced-3638-8990-5c577fda9cad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "c0e0312d-d5d7-3650-abe1-b783d05efebf",
    "name" : "Lists completed exports within the past 90 days.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListExports",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0e0312d-d5d7-3650-abe1-b783d05efebf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports"
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "4025ebdc-d780-32d5-9e8a-d85a9f4d8005",
    "name" : "Lists completed exports within the past 90 days.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListExports",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"ExportSummaries\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4025ebdc-d780-32d5-9e8a-d85a9f4d8005",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ExportSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportSummaries"
                }, {
                  "description" : "A list of <code>ExportSummary</code> objects."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportNextToken"
                }, {
                  "description" : "If this value is returned, there are additional results to be displayed. To retrieve them, call <code>ListExports</code> again, with <code>NextToken</code> set to this value."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "75e16571-2baa-339b-b645-845f9715fb88",
    "name" : "Returns a list of ContributorInsightsSummary for a table and all its global seco...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75e16571-2baa-339b-b645-845f9715fb88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListContributorInsights"
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "8f87dd87-85fa-392b-8121-16facd8fa0f7",
    "name" : "Returns a list of ContributorInsightsSummary for a table and all its global seco...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f87dd87-85fa-392b-8121-16facd8fa0f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListContributorInsights"
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "85dda27e-9176-321e-ae5e-3fcfb53a6bf2",
    "name" : "Returns a list of ContributorInsightsSummary for a table and all its global seco...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"ContributorInsightsSummaries\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85dda27e-9176-321e-ae5e-3fcfb53a6bf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListContributorInsights",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ContributorInsightsSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ContributorInsightsSummaries"
                }, {
                  "description" : "A list of ContributorInsightsSummary."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextTokenString"
                }, {
                  "description" : "A token to go to the next page if there is one."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "ed77522c-3064-386d-91a6-54d8ebe357e0",
    "name" : "<p>List backups associated with an Amazon Web Services account. To list backups ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed77522c-3064-386d-91a6-54d8ebe357e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBackups"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "d89b585a-e05e-3848-88be-00cf822549b1",
    "name" : "<p>List backups associated with an Amazon Web Services account. To list backups ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ListBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BackupSummaries\" : { },\n  \"LastEvaluatedBackupArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d89b585a-e05e-3848-88be-00cf822549b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBackups",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BackupSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BackupSummaries"
                }, {
                  "description" : "List of <code>BackupSummary</code> objects."
                } ]
              },
              "LastEvaluatedBackupArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BackupArn"
                }, {
                  "description" : "<p> The ARN of the backup last evaluated when the current page of results was returned, inclusive of the current page of results. This value may be specified as the <code>ExclusiveStartBackupArn</code> of a new <code>ListBackups</code> operation in order to fetch the next page of results. </p> <p> If <code>LastEvaluatedBackupArn</code> is empty, then the last page of results has been processed and there are no more results to be retrieved. </p> <p> If <code>LastEvaluatedBackupArn</code> is not empty, this may or may not indicate that there is more data to be returned. All results are guaranteed to have been returned if and only if no value for <code>LastEvaluatedBackupArn</code> is returned. </p>"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "e577e1fe-5f42-3ce5-bbd1-1f6374b76781",
    "name" : " Imports table data from an S3 bucket. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ImportTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e577e1fe-5f42-3ce5-bbd1-1f6374b76781",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImportTable"
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "34710e82-aad6-3c5d-90c0-c45107c78133",
    "name" : " Imports table data from an S3 bucket. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ImportTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34710e82-aad6-3c5d-90c0-c45107c78133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImportTable"
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "a6588005-4b9d-34ae-9472-65246c4e8703",
    "name" : " Imports table data from an S3 bucket. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ImportTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6588005-4b9d-34ae-9472-65246c4e8703",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImportTable"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "c00b6d3f-075f-3eb8-b31d-f116b8a3fbf8",
    "name" : " Imports table data from an S3 bucket. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ImportTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ImportTableDescription\" : {\n    \"TableId\" : { },\n    \"ProcessedItemCount\" : { },\n    \"TableCreationParameters\" : {\n      \"TableName\" : { },\n      \"SSESpecification\" : {\n        \"SSEType\" : { },\n        \"Enabled\" : { },\n        \"KMSMasterKeyId\" : { }\n      },\n      \"AttributeDefinitions\" : { },\n      \"BillingMode\" : { },\n      \"GlobalSecondaryIndexes\" : { },\n      \"ProvisionedThroughput\" : {\n        \"WriteCapacityUnits\" : { },\n        \"ReadCapacityUnits\" : { }\n      },\n      \"KeySchema\" : { }\n    },\n    \"EndTime\" : { },\n    \"ImportedItemCount\" : { },\n    \"InputFormatOptions\" : {\n      \"Csv\" : {\n        \"Delimiter\" : { },\n        \"HeaderList\" : { }\n      }\n    },\n    \"StartTime\" : { },\n    \"FailureCode\" : { },\n    \"ErrorCount\" : { },\n    \"S3BucketSource\" : {\n      \"S3Bucket\" : { },\n      \"S3KeyPrefix\" : { },\n      \"S3BucketOwner\" : { }\n    },\n    \"TableArn\" : { },\n    \"ImportStatus\" : { },\n    \"InputFormat\" : { },\n    \"CloudWatchLogGroupArn\" : { },\n    \"FailureMessage\" : { },\n    \"ImportArn\" : { },\n    \"ClientToken\" : { },\n    \"ProcessedSizeBytes\" : { },\n    \"InputCompressionType\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c00b6d3f-075f-3eb8-b31d-f116b8a3fbf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ImportTable",
          "schema" : {
            "type" : "object",
            "required" : [ "ImportTableDescription" ],
            "properties" : {
              "ImportTableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportTableDescription"
                }, {
                  "description" : " Represents the properties of the table created for the import, and parameters of the import. The import parameters include import status, how many items were processed, and how many errors were encountered. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "44ef66de-4542-3bb9-8a9c-e0035b1a31ea",
    "name" : "<p>The <code>GetItem</code> operation returns a set of attributes for the item w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.GetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44ef66de-4542-3bb9-8a9c-e0035b1a31ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetItem"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "99aace35-f130-3d24-82f3-7a5912fc772b",
    "name" : "<p>The <code>GetItem</code> operation returns a set of attributes for the item w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.GetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99aace35-f130-3d24-82f3-7a5912fc772b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetItem"
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "f3431343-11f5-314a-b6cb-ea96d246d9bb",
    "name" : "<p>The <code>GetItem</code> operation returns a set of attributes for the item w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.GetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3431343-11f5-314a-b6cb-ea96d246d9bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetItem"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "9e56099e-5bcd-360f-b2be-2cfb430d4743",
    "name" : "<p>The <code>GetItem</code> operation returns a set of attributes for the item w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.GetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e56099e-5bcd-360f-b2be-2cfb430d4743",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetItem"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "a71c30c0-59b8-30f3-a598-d3bf34c71b90",
    "name" : "<p>The <code>GetItem</code> operation returns a set of attributes for the item w...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.GetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Item\" : {\n    \"AlbumTitle\" : {\n      \"S\" : \"Songs About Life\"\n    },\n    \"Artist\" : {\n      \"S\" : \"Acme Band\"\n    },\n    \"SongTitle\" : {\n      \"S\" : \"Happy Day\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a71c30c0-59b8-30f3-a598-d3bf34c71b90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetItem",
          "schema" : {
            "type" : "object",
            "example" : {
              "Item" : {
                "AlbumTitle" : {
                  "S" : "Songs About Life"
                },
                "Artist" : {
                  "S" : "Acme Band"
                },
                "SongTitle" : {
                  "S" : "Happy Day"
                }
              }
            },
            "properties" : {
              "Item" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AttributeMap"
                }, {
                  "description" : "A map of attribute names to <code>AttributeValue</code> objects, as specified by <code>ProjectionExpression</code>."
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacity"
                }, {
                  "description" : "The capacity units consumed by the <code>GetItem</code> operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughput.html#ItemSizeCalculations.Reads\">Provisioned Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>."
                } ]
              }
            },
            "description" : "Represents the output of a <code>GetItem</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "3da9f00b-9a02-3483-8475-fc16e0278472",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3da9f00b-9a02-3483-8475-fc16e0278472",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "c4ec7e03-536b-3d85-a534-aacf0ac40ff2",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4ec7e03-536b-3d85-a534-aacf0ac40ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "ce44e831-f057-3137-9e73-325cb9b5ece8",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce44e831-f057-3137-9e73-325cb9b5ece8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "81b7e270-ea07-39c1-9a78-9dbd3214c8a8",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81b7e270-ea07-39c1-9a78-9dbd3214c8a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "7cf86ba9-789b-38cd-85ff-17e86575cbf0",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cf86ba9-789b-38cd-85ff-17e86575cbf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "ff479f7c-2c9e-3d62-ab5a-0a3efaff2391",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff479f7c-2c9e-3d62-ab5a-0a3efaff2391",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "02c49b29-9d3f-3a03-8773-ed459d9a2e71",
    "name" : "Exports table data to an S3 bucket. The table must have point in time recovery e...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExportTableToPointInTime",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ExportDescription\" : {\n    \"TableId\" : { },\n    \"BilledSizeBytes\" : { },\n    \"S3SseKmsKeyId\" : { },\n    \"EndTime\" : { },\n    \"ExportStatus\" : { },\n    \"StartTime\" : { },\n    \"ExportTime\" : { },\n    \"FailureCode\" : { },\n    \"S3Prefix\" : { },\n    \"ExportFormat\" : { },\n    \"ExportManifest\" : { },\n    \"S3Bucket\" : { },\n    \"TableArn\" : { },\n    \"ExportArn\" : { },\n    \"ItemCount\" : { },\n    \"S3BucketOwner\" : { },\n    \"FailureMessage\" : { },\n    \"ClientToken\" : { },\n    \"S3SseAlgorithm\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02c49b29-9d3f-3a03-8773-ed459d9a2e71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExportTableToPointInTime",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ExportDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportDescription"
                }, {
                  "description" : "Contains a description of the table export."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "92c65614-edb8-3b72-9c0d-16005f69d1f5",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92c65614-edb8-3b72-9c0d-16005f69d1f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "8b83f395-9681-3d67-821c-d45c8c7fc620",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b83f395-9681-3d67-821c-d45c8c7fc620",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "10434db0-0e52-3099-a9b7-e2a2b88ced8d",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10434db0-0e52-3099-a9b7-e2a2b88ced8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "dabdb508-d8f3-3153-b5e2-a3c5a6e80297",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dabdb508-d8f3-3153-b5e2-a3c5a6e80297",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "dd5eae8d-b235-3fd4-874b-bc13e97aa8d7",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd5eae8d-b235-3fd4-874b-bc13e97aa8d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "cb365895-cb96-3d02-b62c-7c7e79c4b07e",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb365895-cb96-3d02-b62c-7c7e79c4b07e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "97fc01cb-9254-3b7c-aaed-6a4fb3851691",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97fc01cb-9254-3b7c-aaed-6a4fb3851691",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction"
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "a87ad83d-6e93-3c5d-9b96-122de8877105",
    "name" : "<p>This operation allows you to perform transactional reads or writes on data st...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteTransaction",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Responses\" : { },\n  \"ConsumedCapacity\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a87ad83d-6e93-3c5d-9b96-122de8877105",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteTransaction",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Responses" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemResponseList"
                }, {
                  "description" : "The response to a PartiQL transaction."
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacityMultiple"
                }, {
                  "description" : "The capacity units consumed by the entire operation. The values of the list are ordered according to the ordering of the statements."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "754615d4-27a7-3e19-b55d-3d26e35ec8e2",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 487,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "754615d4-27a7-3e19-b55d-3d26e35ec8e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "f399e27f-0c3a-39bd-8167-5a3809181672",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f399e27f-0c3a-39bd-8167-5a3809181672",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "20275756-62a2-3a39-8ce9-189df6710d1c",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20275756-62a2-3a39-8ce9-189df6710d1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "0c301c21-497e-330c-8ec6-e109e3f0a8f5",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c301c21-497e-330c-8ec6-e109e3f0a8f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "214ff029-6b0c-3e68-bac7-7f7dd3a236ed",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "214ff029-6b0c-3e68-bac7-7f7dd3a236ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "b04aa25a-3fd1-340c-948f-1dc99ca36b08",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b04aa25a-3fd1-340c-948f-1dc99ca36b08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "eb6fb62b-1183-3634-872d-6614c4133ba9",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb6fb62b-1183-3634-872d-6614c4133ba9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "edc3c850-8829-3c89-8918-4e1beb280813",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edc3c850-8829-3c89-8918-4e1beb280813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "7a27638d-2c99-3795-a5c6-05ba03a9ba00",
    "name" : "<p>This operation allows you to perform reads and singleton writes on data store...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.ExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"Items\" : { },\n  \"LastEvaluatedKey\" : { },\n  \"ConsumedCapacity\" : {\n    \"WriteCapacityUnits\" : { },\n    \"TableName\" : { },\n    \"Table\" : {\n      \"WriteCapacityUnits\" : { },\n      \"ReadCapacityUnits\" : { },\n      \"CapacityUnits\" : { }\n    },\n    \"ReadCapacityUnits\" : { },\n    \"CapacityUnits\" : { },\n    \"GlobalSecondaryIndexes\" : { },\n    \"LocalSecondaryIndexes\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a27638d-2c99-3795-a5c6-05ba03a9ba00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteStatement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Items" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemList"
                }, {
                  "description" : "If a read operation was used, this property will contain the result of the read operation; a map of attribute names and their values. For the write operations this value will be empty."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartiQLNextToken"
                }, {
                  "description" : "If the response of a read request exceeds the response payload limit DynamoDB will set this value in the response. If set, you can use that this value in the subsequent request to get the remaining results."
                } ]
              },
              "ConsumedCapacity" : {
                "$ref" : "#/components/schemas/ConsumedCapacity"
              },
              "LastEvaluatedKey" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Key"
                }, {
                  "description" : "The primary key of the item where the operation stopped, inclusive of the previous result set. Use this value to start a new operation, excluding this value in the new request. If <code>LastEvaluatedKey</code> is empty, then the \"last page\" of results has been processed and there is no more data to be retrieved. If <code>LastEvaluatedKey</code> is not empty, it does not necessarily mean that there is more data in the result set. The only way to know when you have reached the end of the result set is when <code>LastEvaluatedKey</code> is empty. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "2cbd4383-723c-3d1e-a999-31e954a9664c",
    "name" : "Starts table data replication to the specified Kinesis data stream at a timestam...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.EnableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cbd4383-723c-3d1e-a999-31e954a9664c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EnableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "ac214b8d-5858-3079-b4d2-53401e6e8dcf",
    "name" : "Starts table data replication to the specified Kinesis data stream at a timestam...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.EnableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac214b8d-5858-3079-b4d2-53401e6e8dcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EnableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "bbce2766-ccc3-3959-a0ff-cba58fd6ab34",
    "name" : "Starts table data replication to the specified Kinesis data stream at a timestam...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.EnableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbce2766-ccc3-3959-a0ff-cba58fd6ab34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EnableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "6f24cde5-80f0-3797-a2d0-84f9bc8ca738",
    "name" : "Starts table data replication to the specified Kinesis data stream at a timestam...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.EnableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f24cde5-80f0-3797-a2d0-84f9bc8ca738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EnableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "8bf90b35-60ce-3fb0-9f19-9b39733c5501",
    "name" : "Starts table data replication to the specified Kinesis data stream at a timestam...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.EnableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableName\" : { },\n  \"DestinationStatus\" : { },\n  \"StreamArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bf90b35-60ce-3fb0-9f19-9b39733c5501",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EnableKinesisStreamingDestination",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the table being modified."
                } ]
              },
              "StreamArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/StreamArn"
                }, {
                  "description" : "The ARN for the specific Kinesis data stream."
                } ]
              },
              "DestinationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DestinationStatus"
                }, {
                  "description" : "The current status of the replication."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "a1a3cb03-b214-3873-b9bb-7b9b35ecc59b",
    "name" : "Stops replication from the DynamoDB table to the Kinesis data stream. This is do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DisableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1a3cb03-b214-3873-b9bb-7b9b35ecc59b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DisableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "8c8f4953-ec5c-363c-a096-2d0b7d2d148b",
    "name" : "Stops replication from the DynamoDB table to the Kinesis data stream. This is do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DisableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c8f4953-ec5c-363c-a096-2d0b7d2d148b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DisableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "86844218-73bd-3d70-8542-7934421685af",
    "name" : "Stops replication from the DynamoDB table to the Kinesis data stream. This is do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DisableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86844218-73bd-3d70-8542-7934421685af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DisableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "8363b25e-3aa6-3e0c-bb21-96f12d41de88",
    "name" : "Stops replication from the DynamoDB table to the Kinesis data stream. This is do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DisableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8363b25e-3aa6-3e0c-bb21-96f12d41de88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DisableKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "3a1e2802-d9e9-359e-8f6d-b1ddba4cae42",
    "name" : "Stops replication from the DynamoDB table to the Kinesis data stream. This is do...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DisableKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableName\" : { },\n  \"DestinationStatus\" : { },\n  \"StreamArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a1e2802-d9e9-359e-8f6d-b1ddba4cae42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DisableKinesisStreamingDestination",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the table being modified."
                } ]
              },
              "StreamArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/StreamArn"
                }, {
                  "description" : "The ARN for the specific Kinesis data stream."
                } ]
              },
              "DestinationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DestinationStatus"
                }, {
                  "description" : "The current status of the replication."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "0ac52093-549c-3371-8705-3d2412558775",
    "name" : "Gives a description of the Time to Live (TTL) status on the specified table. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ac52093-549c-3371-8705-3d2412558775",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTimeToLive"
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "de47d6a8-de7a-3a0f-96f0-e4dc553a04ac",
    "name" : "Gives a description of the Time to Live (TTL) status on the specified table. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de47d6a8-de7a-3a0f-96f0-e4dc553a04ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTimeToLive"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "885d1395-bfa7-3b30-9066-c3f41af23168",
    "name" : "Gives a description of the Time to Live (TTL) status on the specified table. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTimeToLive",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TimeToLiveDescription\" : {\n    \"TimeToLiveStatus\" : { },\n    \"AttributeName\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "885d1395-bfa7-3b30-9066-c3f41af23168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTimeToLive",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TimeToLiveDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TimeToLiveDescription"
                }, {
                  "description" : "<p/>"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "19b17648-3289-3739-91e7-56ec5a051562",
    "name" : "<p>Describes auto scaling settings across replicas of the global table at once.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19b17648-3289-3739-91e7-56ec5a051562",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTableReplicaAutoScaling"
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "846cf02a-486b-32bb-90b9-277af78633c2",
    "name" : "<p>Describes auto scaling settings across replicas of the global table at once.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "846cf02a-486b-32bb-90b9-277af78633c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTableReplicaAutoScaling"
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "1d378493-b6d2-33a1-a424-cb9595a9ced4",
    "name" : "<p>Describes auto scaling settings across replicas of the global table at once.<...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTableReplicaAutoScaling",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableAutoScalingDescription\" : {\n    \"TableName\" : { },\n    \"TableStatus\" : { },\n    \"Replicas\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d378493-b6d2-33a1-a424-cb9595a9ced4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTableReplicaAutoScaling",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableAutoScalingDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableAutoScalingDescription"
                }, {
                  "description" : "Represents the auto scaling properties of the table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "2e4d6423-4b15-398c-9f98-0fae662fdcb9",
    "name" : "<p>Returns information about the table, including the current status of the tabl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e4d6423-4b15-398c-9f98-0fae662fdcb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTable"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "55f059a5-dcf5-3cbb-ba12-1c187fb33818",
    "name" : "<p>Returns information about the table, including the current status of the tabl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55f059a5-dcf5-3cbb-ba12-1c187fb33818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTable"
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "7c2fc4a1-a79c-3fee-be71-24e2c2233c79",
    "name" : "<p>Returns information about the table, including the current status of the tabl...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Table\" : {\n    \"AttributeDefinitions\" : [ {\n      \"AttributeName\" : \"Artist\",\n      \"AttributeType\" : \"S\"\n    }, {\n      \"AttributeName\" : \"SongTitle\",\n      \"AttributeType\" : \"S\"\n    } ],\n    \"CreationDateTime\" : \"1421866952.062\",\n    \"ItemCount\" : 0,\n    \"KeySchema\" : [ {\n      \"AttributeName\" : \"Artist\",\n      \"KeyType\" : \"HASH\"\n    }, {\n      \"AttributeName\" : \"SongTitle\",\n      \"KeyType\" : \"RANGE\"\n    } ],\n    \"ProvisionedThroughput\" : {\n      \"NumberOfDecreasesToday\" : 1,\n      \"ReadCapacityUnits\" : 5,\n      \"WriteCapacityUnits\" : 5\n    },\n    \"TableName\" : \"Music\",\n    \"TableSizeBytes\" : 0,\n    \"TableStatus\" : \"ACTIVE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c2fc4a1-a79c-3fee-be71-24e2c2233c79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeTable",
          "schema" : {
            "type" : "object",
            "example" : {
              "Table" : {
                "AttributeDefinitions" : [ {
                  "AttributeName" : "Artist",
                  "AttributeType" : "S"
                }, {
                  "AttributeName" : "SongTitle",
                  "AttributeType" : "S"
                } ],
                "CreationDateTime" : "1421866952.062",
                "ItemCount" : 0,
                "KeySchema" : [ {
                  "AttributeName" : "Artist",
                  "KeyType" : "HASH"
                }, {
                  "AttributeName" : "SongTitle",
                  "KeyType" : "RANGE"
                } ],
                "ProvisionedThroughput" : {
                  "NumberOfDecreasesToday" : 1,
                  "ReadCapacityUnits" : 5,
                  "WriteCapacityUnits" : 5
                },
                "TableName" : "Music",
                "TableSizeBytes" : 0,
                "TableStatus" : "ACTIVE"
              }
            },
            "properties" : {
              "Table" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableDescription"
                }, {
                  "description" : "The properties of the table."
                } ]
              }
            },
            "description" : "Represents the output of a <code>DescribeTable</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "1d3bd8d5-4ead-38bf-900b-01467e31ca8c",
    "name" : "<p>Returns the current provisioned-capacity quotas for your Amazon Web Services ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeLimits",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d3bd8d5-4ead-38bf-900b-01467e31ca8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeLimits"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "3a058eed-1c8a-320b-9465-b1ad7ab39421",
    "name" : "<p>Returns the current provisioned-capacity quotas for your Amazon Web Services ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeLimits",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"AccountMaxReadCapacityUnits\" : 20000,\n  \"AccountMaxWriteCapacityUnits\" : 20000,\n  \"TableMaxReadCapacityUnits\" : 10000,\n  \"TableMaxWriteCapacityUnits\" : 10000\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a058eed-1c8a-320b-9465-b1ad7ab39421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeLimits",
          "schema" : {
            "type" : "object",
            "example" : {
              "AccountMaxReadCapacityUnits" : 20000,
              "AccountMaxWriteCapacityUnits" : 20000,
              "TableMaxReadCapacityUnits" : 10000,
              "TableMaxWriteCapacityUnits" : 10000
            },
            "properties" : {
              "AccountMaxReadCapacityUnits" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PositiveLongObject"
                }, {
                  "description" : "The maximum total read capacity units that your account allows you to provision across all of your tables in this Region."
                } ]
              },
              "AccountMaxWriteCapacityUnits" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PositiveLongObject"
                }, {
                  "description" : "The maximum total write capacity units that your account allows you to provision across all of your tables in this Region."
                } ]
              },
              "TableMaxReadCapacityUnits" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PositiveLongObject"
                }, {
                  "description" : "The maximum read capacity units that your account allows you to provision for a new table that you are creating in this Region, including the read capacity units provisioned for its global secondary indexes (GSIs)."
                } ]
              },
              "TableMaxWriteCapacityUnits" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PositiveLongObject"
                }, {
                  "description" : "The maximum write capacity units that your account allows you to provision for a new table that you are creating in this Region, including the write capacity units provisioned for its global secondary indexes (GSIs)."
                } ]
              }
            },
            "description" : "Represents the output of a <code>DescribeLimits</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "4bf0231c-4ebb-3c89-8e62-eb4edd32f801",
    "name" : "Returns information about the status of Kinesis streaming.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bf0231c-4ebb-3c89-8e62-eb4edd32f801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "ac42f78e-f796-3cbf-a1a6-989816186126",
    "name" : "Returns information about the status of Kinesis streaming.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac42f78e-f796-3cbf-a1a6-989816186126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeKinesisStreamingDestination"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "6e050725-bb78-356d-97f1-619fd720405c",
    "name" : "Returns information about the status of Kinesis streaming.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeKinesisStreamingDestination",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableName\" : { },\n  \"KinesisDataStreamDestinations\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e050725-bb78-356d-97f1-619fd720405c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeKinesisStreamingDestination",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the table being described."
                } ]
              },
              "KinesisDataStreamDestinations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KinesisDataStreamDestinations"
                }, {
                  "description" : "The list of replica structures for the table being described."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "602ded4a-1fb2-37e1-89ae-1e50bd771cfd",
    "name" : " Represents the properties of the import. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeImport",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "602ded4a-1fb2-37e1-89ae-1e50bd771cfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport"
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "52c31f14-5223-3352-9f94-eb183cb40cfb",
    "name" : " Represents the properties of the import. ",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeImport",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ImportTableDescription\" : {\n    \"TableId\" : { },\n    \"ProcessedItemCount\" : { },\n    \"TableCreationParameters\" : {\n      \"TableName\" : { },\n      \"SSESpecification\" : {\n        \"SSEType\" : { },\n        \"Enabled\" : { },\n        \"KMSMasterKeyId\" : { }\n      },\n      \"AttributeDefinitions\" : { },\n      \"BillingMode\" : { },\n      \"GlobalSecondaryIndexes\" : { },\n      \"ProvisionedThroughput\" : {\n        \"WriteCapacityUnits\" : { },\n        \"ReadCapacityUnits\" : { }\n      },\n      \"KeySchema\" : { }\n    },\n    \"EndTime\" : { },\n    \"ImportedItemCount\" : { },\n    \"InputFormatOptions\" : {\n      \"Csv\" : {\n        \"Delimiter\" : { },\n        \"HeaderList\" : { }\n      }\n    },\n    \"StartTime\" : { },\n    \"FailureCode\" : { },\n    \"ErrorCount\" : { },\n    \"S3BucketSource\" : {\n      \"S3Bucket\" : { },\n      \"S3KeyPrefix\" : { },\n      \"S3BucketOwner\" : { }\n    },\n    \"TableArn\" : { },\n    \"ImportStatus\" : { },\n    \"InputFormat\" : { },\n    \"CloudWatchLogGroupArn\" : { },\n    \"FailureMessage\" : { },\n    \"ImportArn\" : { },\n    \"ClientToken\" : { },\n    \"ProcessedSizeBytes\" : { },\n    \"InputCompressionType\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52c31f14-5223-3352-9f94-eb183cb40cfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport",
          "schema" : {
            "type" : "object",
            "required" : [ "ImportTableDescription" ],
            "properties" : {
              "ImportTableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportTableDescription"
                }, {
                  "description" : " Represents the properties of the table created for the import, and parameters of the import. The import parameters include import status, how many items were processed, and how many errors were encountered. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "e3230dd7-ac77-3617-a8d0-ddde8eb081fc",
    "name" : "<p>Describes Region-specific settings for a global table.</p> <important> <p>Thi...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3230dd7-ac77-3617-a8d0-ddde8eb081fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "0396e1ee-cdd5-3e7d-92a1-8132b21fb70d",
    "name" : "<p>Describes Region-specific settings for a global table.</p> <important> <p>Thi...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0396e1ee-cdd5-3e7d-92a1-8132b21fb70d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeGlobalTableSettings"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "c1f550b1-3b0d-3537-8ba3-7e2da1143a37",
    "name" : "<p>Describes Region-specific settings for a global table.</p> <important> <p>Thi...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTableSettings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplicaSettings\" : { },\n  \"GlobalTableName\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1f550b1-3b0d-3537-8ba3-7e2da1143a37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeGlobalTableSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "GlobalTableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the global table."
                } ]
              },
              "ReplicaSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ReplicaSettingsDescriptionList"
                }, {
                  "description" : "The Region-specific settings for the global table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "25c0f4d2-840c-32d2-91fe-c2adf8473b69",
    "name" : "<p>Returns information about the specified global table.</p> <important> <p>This...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25c0f4d2-840c-32d2-91fe-c2adf8473b69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeGlobalTable"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "612237e9-a517-3fe3-93aa-8a7250418eec",
    "name" : "<p>Returns information about the specified global table.</p> <important> <p>This...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "612237e9-a517-3fe3-93aa-8a7250418eec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeGlobalTable"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "f762e6ba-eff4-3279-841d-6eb72d2e0fbc",
    "name" : "<p>Returns information about the specified global table.</p> <important> <p>This...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"GlobalTableDescription\" : {\n    \"GlobalTableStatus\" : { },\n    \"CreationDateTime\" : { },\n    \"GlobalTableArn\" : { },\n    \"ReplicationGroup\" : { },\n    \"GlobalTableName\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f762e6ba-eff4-3279-841d-6eb72d2e0fbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeGlobalTable",
          "schema" : {
            "type" : "object",
            "properties" : {
              "GlobalTableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/GlobalTableDescription"
                }, {
                  "description" : "Contains the details of the global table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "82ad4cc5-777d-3c59-aef9-0a7251423525",
    "name" : "Describes an existing table export.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeExport",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82ad4cc5-777d-3c59-aef9-0a7251423525",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "128af437-90a6-3dfd-b950-01af841e312c",
    "name" : "Describes an existing table export.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeExport",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "128af437-90a6-3dfd-b950-01af841e312c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "3b6a1a04-7583-3931-b291-dea87686c7f2",
    "name" : "Describes an existing table export.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeExport",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b6a1a04-7583-3931-b291-dea87686c7f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "83fc2431-c975-32e4-821d-63254570ccb9",
    "name" : "Describes an existing table export.",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeExport",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ExportDescription\" : {\n    \"TableId\" : { },\n    \"BilledSizeBytes\" : { },\n    \"S3SseKmsKeyId\" : { },\n    \"EndTime\" : { },\n    \"ExportStatus\" : { },\n    \"StartTime\" : { },\n    \"ExportTime\" : { },\n    \"FailureCode\" : { },\n    \"S3Prefix\" : { },\n    \"ExportFormat\" : { },\n    \"ExportManifest\" : { },\n    \"S3Bucket\" : { },\n    \"TableArn\" : { },\n    \"ExportArn\" : { },\n    \"ItemCount\" : { },\n    \"S3BucketOwner\" : { },\n    \"FailureMessage\" : { },\n    \"ClientToken\" : { },\n    \"S3SseAlgorithm\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83fc2431-c975-32e4-821d-63254570ccb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ExportDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportDescription"
                }, {
                  "description" : "Represents the properties of the export."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "f8a8c464-1257-3ad5-9f44-323b2a0db546",
    "name" : "Returns the regional endpoint information. This action must be included in your ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeEndpoints",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Endpoints\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8a8c464-1257-3ad5-9f44-323b2a0db546",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeEndpoints",
          "schema" : {
            "type" : "object",
            "required" : [ "Endpoints" ],
            "properties" : {
              "Endpoints" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Endpoints"
                }, {
                  "description" : "List of endpoints."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "4840591c-12e3-341b-8549-95f4db2f62f4",
    "name" : "Returns information about contributor insights for a given table or global secon...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4840591c-12e3-341b-8549-95f4db2f62f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeContributorInsights"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "867c3f95-fc60-3ea7-bd7b-0885ea672c3e",
    "name" : "Returns information about contributor insights for a given table or global secon...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "867c3f95-fc60-3ea7-bd7b-0885ea672c3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeContributorInsights"
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "b9657c0f-0448-32f8-9d6d-04d6b70902b6",
    "name" : "Returns information about contributor insights for a given table or global secon...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeContributorInsights",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"IndexName\" : { },\n  \"TableName\" : { },\n  \"LastUpdateDateTime\" : { },\n  \"ContributorInsightsRuleList\" : { },\n  \"ContributorInsightsStatus\" : { },\n  \"FailureException\" : {\n    \"ExceptionDescription\" : { },\n    \"ExceptionName\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9657c0f-0448-32f8-9d6d-04d6b70902b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeContributorInsights",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TableName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableName"
                }, {
                  "description" : "The name of the table being described."
                } ]
              },
              "IndexName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IndexName"
                }, {
                  "description" : "The name of the global secondary index being described."
                } ]
              },
              "ContributorInsightsRuleList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ContributorInsightsRuleList"
                }, {
                  "description" : "List of names of the associated contributor insights rules."
                } ]
              },
              "ContributorInsightsStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ContributorInsightsStatus"
                }, {
                  "description" : "Current status of contributor insights."
                } ]
              },
              "LastUpdateDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LastUpdateDateTime"
                }, {
                  "description" : "Timestamp of the last time the status was changed."
                } ]
              },
              "FailureException" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureException"
                }, {
                  "description" : "<p>Returns information about the last failure that was encountered.</p> <p>The most common exceptions for a FAILED status are:</p> <ul> <li> <p>LimitExceededException - Per-account Amazon CloudWatch Contributor Insights rule limit reached. Please disable Contributor Insights for other tables/indexes OR disable Contributor Insights rules before retrying.</p> </li> <li> <p>AccessDeniedException - Amazon CloudWatch Contributor Insights rules cannot be modified due to insufficient permissions.</p> </li> <li> <p>AccessDeniedException - Failed to create service-linked role for Contributor Insights due to insufficient permissions.</p> </li> <li> <p>InternalServerError - Failed to create Amazon CloudWatch Contributor Insights rules. Please retry request.</p> </li> </ul>"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "209a8e1f-c147-3a3c-b9f7-5d2df21bb7e6",
    "name" : "<p>Checks the status of continuous backups and point in time recovery on the spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "209a8e1f-c147-3a3c-b9f7-5d2df21bb7e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeContinuousBackups"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "3065b378-aaaf-3d17-82e4-1c465a5e0418",
    "name" : "<p>Checks the status of continuous backups and point in time recovery on the spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3065b378-aaaf-3d17-82e4-1c465a5e0418",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeContinuousBackups"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "914b4e0f-25f3-3b60-a51d-edf9702f4b1b",
    "name" : "<p>Checks the status of continuous backups and point in time recovery on the spe...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeContinuousBackups",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ContinuousBackupsDescription\" : {\n    \"PointInTimeRecoveryDescription\" : {\n      \"EarliestRestorableDateTime\" : { },\n      \"PointInTimeRecoveryStatus\" : { },\n      \"LatestRestorableDateTime\" : { }\n    },\n    \"ContinuousBackupsStatus\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "914b4e0f-25f3-3b60-a51d-edf9702f4b1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeContinuousBackups",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ContinuousBackupsDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ContinuousBackupsDescription"
                }, {
                  "description" : "Represents the continuous backups and point in time recovery settings on the table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "64120680-dc8a-3b94-b492-9f93bb6cbf9f",
    "name" : "<p>Describes an existing backup of a table.</p> <p>You can call <code>DescribeBa...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64120680-dc8a-3b94-b492-9f93bb6cbf9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBackup"
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "7f10d909-1187-3320-b68e-45ec51d126e2",
    "name" : "<p>Describes an existing backup of a table.</p> <p>You can call <code>DescribeBa...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f10d909-1187-3320-b68e-45ec51d126e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBackup"
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "626412d1-b253-31ac-bbab-04f658b6c130",
    "name" : "<p>Describes an existing backup of a table.</p> <p>You can call <code>DescribeBa...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DescribeBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BackupDescription\" : {\n    \"BackupDetails\" : {\n      \"BackupArn\" : { },\n      \"BackupExpiryDateTime\" : { },\n      \"BackupType\" : { },\n      \"BackupSizeBytes\" : { },\n      \"BackupName\" : { },\n      \"BackupStatus\" : { },\n      \"BackupCreationDateTime\" : { }\n    },\n    \"SourceTableFeatureDetails\" : {\n      \"SSEDescription\" : {\n        \"Status\" : { },\n        \"SSEType\" : { },\n        \"InaccessibleEncryptionDateTime\" : { },\n        \"KMSMasterKeyArn\" : { }\n      },\n      \"StreamDescription\" : {\n        \"StreamEnabled\" : { },\n        \"StreamViewType\" : { }\n      },\n      \"TimeToLiveDescription\" : {\n        \"TimeToLiveStatus\" : { },\n        \"AttributeName\" : { }\n      },\n      \"GlobalSecondaryIndexes\" : { },\n      \"LocalSecondaryIndexes\" : { }\n    },\n    \"SourceTableDetails\" : {\n      \"TableId\" : { },\n      \"TableName\" : { },\n      \"TableArn\" : { },\n      \"TableSizeBytes\" : { },\n      \"BillingMode\" : { },\n      \"ItemCount\" : { },\n      \"ProvisionedThroughput\" : {\n        \"WriteCapacityUnits\" : { },\n        \"ReadCapacityUnits\" : { }\n      },\n      \"KeySchema\" : { },\n      \"TableCreationDateTime\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "626412d1-b253-31ac-bbab-04f658b6c130",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBackup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BackupDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BackupDescription"
                }, {
                  "description" : "Contains the description of the backup created for the table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "b13ba358-c006-3726-ac43-00b68cdab5a1",
    "name" : "<p>The <code>DeleteTable</code> operation deletes a table and all of its items. ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b13ba358-c006-3726-ac43-00b68cdab5a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTable"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "80394eb2-82d8-32ea-bfeb-eb9788232693",
    "name" : "<p>The <code>DeleteTable</code> operation deletes a table and all of its items. ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80394eb2-82d8-32ea-bfeb-eb9788232693",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTable"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "10e7009f-c30f-3b0d-9cba-a69c3c93b958",
    "name" : "<p>The <code>DeleteTable</code> operation deletes a table and all of its items. ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10e7009f-c30f-3b0d-9cba-a69c3c93b958",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTable"
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "b784f3fe-7d7e-3841-9cd5-d4d7f86b0d45",
    "name" : "<p>The <code>DeleteTable</code> operation deletes a table and all of its items. ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b784f3fe-7d7e-3841-9cd5-d4d7f86b0d45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTable"
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "d6230ff0-389c-3c53-92f6-245ae2ef05a1",
    "name" : "<p>The <code>DeleteTable</code> operation deletes a table and all of its items. ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableDescription\" : {\n    \"ItemCount\" : 0,\n    \"ProvisionedThroughput\" : {\n      \"NumberOfDecreasesToday\" : 1,\n      \"ReadCapacityUnits\" : 5,\n      \"WriteCapacityUnits\" : 5\n    },\n    \"TableName\" : \"Music\",\n    \"TableSizeBytes\" : 0,\n    \"TableStatus\" : \"DELETING\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6230ff0-389c-3c53-92f6-245ae2ef05a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTable",
          "schema" : {
            "type" : "object",
            "example" : {
              "TableDescription" : {
                "ItemCount" : 0,
                "ProvisionedThroughput" : {
                  "NumberOfDecreasesToday" : 1,
                  "ReadCapacityUnits" : 5,
                  "WriteCapacityUnits" : 5
                },
                "TableName" : "Music",
                "TableSizeBytes" : 0,
                "TableStatus" : "DELETING"
              }
            },
            "properties" : {
              "TableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableDescription"
                }, {
                  "description" : "Represents the properties of a table."
                } ]
              }
            },
            "description" : "Represents the output of a <code>DeleteTable</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "739ba9af-341f-3a37-acb0-cd84454d28fb",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "739ba9af-341f-3a37-acb0-cd84454d28fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "423a95fb-f87d-31df-8450-77ea70df6a12",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "423a95fb-f87d-31df-8450-77ea70df6a12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "1aeac86b-0258-3cfb-9254-bd2a1b459960",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aeac86b-0258-3cfb-9254-bd2a1b459960",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "d038e1d1-f2ef-33f9-aa88-4933ddb45f98",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d038e1d1-f2ef-33f9-aa88-4933ddb45f98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "55f3e05a-f00c-31ec-ba02-effa16868bad",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55f3e05a-f00c-31ec-ba02-effa16868bad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "9e12e181-fcc1-38e3-bf8f-2d90e20e4024",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e12e181-fcc1-38e3-bf8f-2d90e20e4024",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "b23591cb-b6f3-3cda-a40a-07f3e1df279f",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b23591cb-b6f3-3cda-a40a-07f3e1df279f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "168eb5f2-760b-3720-b71f-0da60b1e1f57",
    "name" : "<p>Deletes a single item in a table by primary key. You can perform a conditiona...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ConsumedCapacity\" : {\n    \"CapacityUnits\" : 1,\n    \"TableName\" : \"Music\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "168eb5f2-760b-3720-b71f-0da60b1e1f57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteItem",
          "schema" : {
            "type" : "object",
            "example" : {
              "ConsumedCapacity" : {
                "CapacityUnits" : 1,
                "TableName" : "Music"
              }
            },
            "properties" : {
              "Attributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AttributeMap"
                }, {
                  "description" : "A map of attribute names to <code>AttributeValue</code> objects, representing the item as it appeared before the <code>DeleteItem</code> operation. This map appears in the response only if <code>ReturnValues</code> was specified as <code>ALL_OLD</code> in the request."
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacity"
                }, {
                  "description" : "The capacity units consumed by the <code>DeleteItem</code> operation. The data returned includes the total provisioned throughput consumed, along with statistics for the table and any indexes involved in the operation. <code>ConsumedCapacity</code> is only returned if the <code>ReturnConsumedCapacity</code> parameter was specified. For more information, see <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/ProvisionedThroughputIntro.html\">Provisioned Throughput</a> in the <i>Amazon DynamoDB Developer Guide</i>."
                } ]
              },
              "ItemCollectionMetrics" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemCollectionMetrics"
                }, {
                  "description" : "<p>Information about item collections, if any, that were affected by the <code>DeleteItem</code> operation. <code>ItemCollectionMetrics</code> is only returned if the <code>ReturnItemCollectionMetrics</code> parameter was specified. If the table does not have any local secondary indexes, this information is not returned in the response.</p> <p>Each <code>ItemCollectionMetrics</code> element consists of:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition key value of the item collection. This is the same as the partition key value of the item itself.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate of item collection size, in gigabytes. This value is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on that table. Use this estimate to measure whether a local secondary index is approaching its size limit.</p> <p>The estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.</p> </li> </ul>"
                } ]
              }
            },
            "description" : "Represents the output of a <code>DeleteItem</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "0c358932-91fb-3706-809a-63872a822614",
    "name" : "<p>Deletes an existing backup of a table.</p> <p>You can call <code>DeleteBackup...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c358932-91fb-3706-809a-63872a822614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBackup"
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "3e63a618-a36d-3306-baad-8e342446d76c",
    "name" : "<p>Deletes an existing backup of a table.</p> <p>You can call <code>DeleteBackup...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e63a618-a36d-3306-baad-8e342446d76c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBackup"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "6996264c-dd0b-34b1-bf7c-9c603f8169a0",
    "name" : "<p>Deletes an existing backup of a table.</p> <p>You can call <code>DeleteBackup...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6996264c-dd0b-34b1-bf7c-9c603f8169a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBackup"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "52f7f421-3bfd-33d8-9a65-77bd4125da9c",
    "name" : "<p>Deletes an existing backup of a table.</p> <p>You can call <code>DeleteBackup...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52f7f421-3bfd-33d8-9a65-77bd4125da9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBackup"
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "98e9ea88-6cb3-38ea-a0f6-0952d1d1c260",
    "name" : "<p>Deletes an existing backup of a table.</p> <p>You can call <code>DeleteBackup...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.DeleteBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BackupDescription\" : {\n    \"BackupDetails\" : {\n      \"BackupArn\" : { },\n      \"BackupExpiryDateTime\" : { },\n      \"BackupType\" : { },\n      \"BackupSizeBytes\" : { },\n      \"BackupName\" : { },\n      \"BackupStatus\" : { },\n      \"BackupCreationDateTime\" : { }\n    },\n    \"SourceTableFeatureDetails\" : {\n      \"SSEDescription\" : {\n        \"Status\" : { },\n        \"SSEType\" : { },\n        \"InaccessibleEncryptionDateTime\" : { },\n        \"KMSMasterKeyArn\" : { }\n      },\n      \"StreamDescription\" : {\n        \"StreamEnabled\" : { },\n        \"StreamViewType\" : { }\n      },\n      \"TimeToLiveDescription\" : {\n        \"TimeToLiveStatus\" : { },\n        \"AttributeName\" : { }\n      },\n      \"GlobalSecondaryIndexes\" : { },\n      \"LocalSecondaryIndexes\" : { }\n    },\n    \"SourceTableDetails\" : {\n      \"TableId\" : { },\n      \"TableName\" : { },\n      \"TableArn\" : { },\n      \"TableSizeBytes\" : { },\n      \"BillingMode\" : { },\n      \"ItemCount\" : { },\n      \"ProvisionedThroughput\" : {\n        \"WriteCapacityUnits\" : { },\n        \"ReadCapacityUnits\" : { }\n      },\n      \"KeySchema\" : { },\n      \"TableCreationDateTime\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98e9ea88-6cb3-38ea-a0f6-0952d1d1c260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBackup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BackupDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BackupDescription"
                }, {
                  "description" : "Contains the description of the backup created for the table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "c4a1bfb4-9d2c-32d5-8e2b-d1f5922022da",
    "name" : "<p>The <code>CreateTable</code> operation adds a new table to your account. In a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4a1bfb4-9d2c-32d5-8e2b-d1f5922022da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTable"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "b610a2f6-6fb2-3c47-9e4a-366fc65d86ca",
    "name" : "<p>The <code>CreateTable</code> operation adds a new table to your account. In a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b610a2f6-6fb2-3c47-9e4a-366fc65d86ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTable"
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "90791812-57f0-3d28-926d-a3152a166226",
    "name" : "<p>The <code>CreateTable</code> operation adds a new table to your account. In a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90791812-57f0-3d28-926d-a3152a166226",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTable"
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "80811aa2-8b82-3fc5-9cb0-d2a991a5694e",
    "name" : "<p>The <code>CreateTable</code> operation adds a new table to your account. In a...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TableDescription\" : {\n    \"AttributeDefinitions\" : [ {\n      \"AttributeName\" : \"Artist\",\n      \"AttributeType\" : \"S\"\n    }, {\n      \"AttributeName\" : \"SongTitle\",\n      \"AttributeType\" : \"S\"\n    } ],\n    \"CreationDateTime\" : \"1421866952.062\",\n    \"ItemCount\" : 0,\n    \"KeySchema\" : [ {\n      \"AttributeName\" : \"Artist\",\n      \"KeyType\" : \"HASH\"\n    }, {\n      \"AttributeName\" : \"SongTitle\",\n      \"KeyType\" : \"RANGE\"\n    } ],\n    \"ProvisionedThroughput\" : {\n      \"ReadCapacityUnits\" : 5,\n      \"WriteCapacityUnits\" : 5\n    },\n    \"TableName\" : \"Music\",\n    \"TableSizeBytes\" : 0,\n    \"TableStatus\" : \"CREATING\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80811aa2-8b82-3fc5-9cb0-d2a991a5694e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTable",
          "schema" : {
            "type" : "object",
            "example" : {
              "TableDescription" : {
                "AttributeDefinitions" : [ {
                  "AttributeName" : "Artist",
                  "AttributeType" : "S"
                }, {
                  "AttributeName" : "SongTitle",
                  "AttributeType" : "S"
                } ],
                "CreationDateTime" : "1421866952.062",
                "ItemCount" : 0,
                "KeySchema" : [ {
                  "AttributeName" : "Artist",
                  "KeyType" : "HASH"
                }, {
                  "AttributeName" : "SongTitle",
                  "KeyType" : "RANGE"
                } ],
                "ProvisionedThroughput" : {
                  "ReadCapacityUnits" : 5,
                  "WriteCapacityUnits" : 5
                },
                "TableName" : "Music",
                "TableSizeBytes" : 0,
                "TableStatus" : "CREATING"
              }
            },
            "properties" : {
              "TableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TableDescription"
                }, {
                  "description" : "Represents the properties of the table."
                } ]
              }
            },
            "description" : "Represents the output of a <code>CreateTable</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "e85ce93c-0586-34ea-a2f8-2e8dfa774750",
    "name" : "<p>Creates a global table from an existing table. A global table creates a repli...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e85ce93c-0586-34ea-a2f8-2e8dfa774750",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateGlobalTable"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "1daefc99-0896-311a-898d-836b4152a1b5",
    "name" : "<p>Creates a global table from an existing table. A global table creates a repli...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1daefc99-0896-311a-898d-836b4152a1b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateGlobalTable"
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "c95eadda-85a5-36e3-af86-80be43d08a48",
    "name" : "<p>Creates a global table from an existing table. A global table creates a repli...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c95eadda-85a5-36e3-af86-80be43d08a48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateGlobalTable"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "bbdf02ab-9250-3536-bace-3430f168fc49",
    "name" : "<p>Creates a global table from an existing table. A global table creates a repli...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbdf02ab-9250-3536-bace-3430f168fc49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateGlobalTable"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "589a3319-a119-3a2f-beb2-59c16b605107",
    "name" : "<p>Creates a global table from an existing table. A global table creates a repli...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateGlobalTable",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"GlobalTableDescription\" : {\n    \"GlobalTableStatus\" : { },\n    \"CreationDateTime\" : { },\n    \"GlobalTableArn\" : { },\n    \"ReplicationGroup\" : { },\n    \"GlobalTableName\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "589a3319-a119-3a2f-beb2-59c16b605107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateGlobalTable",
          "schema" : {
            "type" : "object",
            "properties" : {
              "GlobalTableDescription" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/GlobalTableDescription"
                }, {
                  "description" : "Contains the details of the global table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "59e91fd8-3878-35db-a34b-9e87e2d840a1",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59e91fd8-3878-35db-a34b-9e87e2d840a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup"
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "8d439354-2ebc-3378-aafe-f9e33d1d4103",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d439354-2ebc-3378-aafe-f9e33d1d4103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "39922316-7a6b-388b-babc-0364d38cb7c8",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39922316-7a6b-388b-babc-0364d38cb7c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "9f3f803a-46f5-312f-93b1-9be49c208fbe",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f3f803a-46f5-312f-93b1-9be49c208fbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup"
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "1f7e2656-e854-3644-84a4-af463e1ba950",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f7e2656-e854-3644-84a4-af463e1ba950",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "eb51b200-1799-3979-a3f1-8a96c99634de",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb51b200-1799-3979-a3f1-8a96c99634de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "f18a203c-fa5c-3267-8113-76241b8b785d",
    "name" : "<p>Creates a backup for an existing table.</p> <p> Each time you create an on-de...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.CreateBackup",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"BackupDetails\" : {\n    \"BackupArn\" : { },\n    \"BackupExpiryDateTime\" : { },\n    \"BackupType\" : { },\n    \"BackupSizeBytes\" : { },\n    \"BackupName\" : { },\n    \"BackupStatus\" : { },\n    \"BackupCreationDateTime\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f18a203c-fa5c-3267-8113-76241b8b785d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBackup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "BackupDetails" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BackupDetails"
                }, {
                  "description" : "Contains the details of the backup created for the table."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "98fcb89f-7e0d-3490-ab28-d3dd2a51383d",
    "name" : "<p>The <code>BatchWriteItem</code> operation puts or deletes multiple items in o...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchWriteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98fcb89f-7e0d-3490-ab28-d3dd2a51383d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchWriteItem"
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "6f80e177-1e2a-3631-b980-34a1ef88e516",
    "name" : "<p>The <code>BatchWriteItem</code> operation puts or deletes multiple items in o...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchWriteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f80e177-1e2a-3631-b980-34a1ef88e516",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchWriteItem"
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "7a73e58f-ed41-3981-b4d1-23c803ebfe60",
    "name" : "<p>The <code>BatchWriteItem</code> operation puts or deletes multiple items in o...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchWriteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a73e58f-ed41-3981-b4d1-23c803ebfe60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchWriteItem"
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "af56c280-df1b-32d8-a72c-12b118508390",
    "name" : "<p>The <code>BatchWriteItem</code> operation puts or deletes multiple items in o...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchWriteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af56c280-df1b-32d8-a72c-12b118508390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchWriteItem"
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "36277742-f766-3511-abb0-55af3c4ba733",
    "name" : "<p>The <code>BatchWriteItem</code> operation puts or deletes multiple items in o...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchWriteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36277742-f766-3511-abb0-55af3c4ba733",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchWriteItem"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "7a35ec75-16d3-352f-83cc-cfa7ddf8d3de",
    "name" : "<p>The <code>BatchWriteItem</code> operation puts or deletes multiple items in o...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchWriteItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a35ec75-16d3-352f-83cc-cfa7ddf8d3de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchWriteItem",
          "schema" : {
            "type" : "object",
            "example" : { },
            "properties" : {
              "UnprocessedItems" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchWriteItemRequestMap"
                }, {
                  "description" : "<p>A map of tables and requests against those tables that were not processed. The <code>UnprocessedItems</code> value is in the same form as <code>RequestItems</code>, so you can provide this value directly to a subsequent <code>BatchWriteItem</code> operation. For more information, see <code>RequestItems</code> in the Request Parameters section.</p> <p>Each <code>UnprocessedItems</code> entry consists of a table name and, for that table, a list of operations to perform (<code>DeleteRequest</code> or <code>PutRequest</code>).</p> <ul> <li> <p> <code>DeleteRequest</code> - Perform a <code>DeleteItem</code> operation on the specified item. The item to be deleted is identified by a <code>Key</code> subelement:</p> <ul> <li> <p> <code>Key</code> - A map of primary key attribute values that uniquely identify the item. Each entry in this map consists of an attribute name and an attribute value.</p> </li> </ul> </li> <li> <p> <code>PutRequest</code> - Perform a <code>PutItem</code> operation on the specified item. The item to be put is identified by an <code>Item</code> subelement:</p> <ul> <li> <p> <code>Item</code> - A map of attributes and their values. Each entry in this map consists of an attribute name and an attribute value. Attribute values must not be null; string and binary type attributes must have lengths greater than zero; and set type attributes must not be empty. Requests that contain empty values will be rejected with a <code>ValidationException</code> exception.</p> <p>If you specify any attributes that are part of an index key, then the data types for those attributes must match those of the schema in the table's attribute definition.</p> </li> </ul> </li> </ul> <p>If there are no unprocessed items remaining, the response contains an empty <code>UnprocessedItems</code> map.</p>"
                } ]
              },
              "ItemCollectionMetrics" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ItemCollectionMetricsPerTable"
                }, {
                  "description" : "<p>A list of tables that were processed by <code>BatchWriteItem</code> and, for each table, information about any item collections that were affected by individual <code>DeleteItem</code> or <code>PutItem</code> operations.</p> <p>Each entry consists of the following subelements:</p> <ul> <li> <p> <code>ItemCollectionKey</code> - The partition key value of the item collection. This is the same as the partition key value of the item.</p> </li> <li> <p> <code>SizeEstimateRangeGB</code> - An estimate of item collection size, expressed in GB. This is a two-element array containing a lower bound and an upper bound for the estimate. The estimate includes the size of all the items in the table, plus the size of all attributes projected into all of the local secondary indexes on the table. Use this estimate to measure whether a local secondary index is approaching its size limit.</p> <p>The estimate is subject to change over time; therefore, do not rely on the precision or accuracy of the estimate.</p> </li> </ul>"
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacityMultiple"
                }, {
                  "description" : "<p>The capacity units consumed by the entire <code>BatchWriteItem</code> operation.</p> <p>Each element consists of:</p> <ul> <li> <p> <code>TableName</code> - The table that consumed the provisioned throughput.</p> </li> <li> <p> <code>CapacityUnits</code> - The total number of capacity units consumed.</p> </li> </ul>"
                } ]
              }
            },
            "description" : "Represents the output of a <code>BatchWriteItem</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "7d2d252e-06a6-3ed2-9543-4de79e0b0f7c",
    "name" : "<p>The <code>BatchGetItem</code> operation returns the attributes of one or more...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchGetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d2d252e-06a6-3ed2-9543-4de79e0b0f7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchGetItem"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "24c1b592-ed31-3270-bbb7-1f607e3114d8",
    "name" : "<p>The <code>BatchGetItem</code> operation returns the attributes of one or more...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchGetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24c1b592-ed31-3270-bbb7-1f607e3114d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchGetItem"
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "7f7851ea-f4e0-3d3c-8c65-b404f292f345",
    "name" : "<p>The <code>BatchGetItem</code> operation returns the attributes of one or more...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchGetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f7851ea-f4e0-3d3c-8c65-b404f292f345",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchGetItem"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "55924988-1bc4-3d2b-a6d1-9d8842cdf08c",
    "name" : "<p>The <code>BatchGetItem</code> operation returns the attributes of one or more...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchGetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55924988-1bc4-3d2b-a6d1-9d8842cdf08c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchGetItem"
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "3e40c3d1-b232-3cfc-8592-008435445ba8",
    "name" : "<p>The <code>BatchGetItem</code> operation returns the attributes of one or more...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchGetItem",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Responses\" : {\n    \"Music\" : [ {\n      \"AlbumTitle\" : {\n        \"S\" : \"Somewhat Famous\"\n      }\n    }, {\n      \"AlbumTitle\" : {\n        \"S\" : \"Blue Sky Blues\"\n      }\n    }, {\n      \"AlbumTitle\" : {\n        \"S\" : \"Louder Than Ever\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e40c3d1-b232-3cfc-8592-008435445ba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchGetItem",
          "schema" : {
            "type" : "object",
            "example" : {
              "Responses" : {
                "Music" : [ {
                  "AlbumTitle" : {
                    "S" : "Somewhat Famous"
                  }
                }, {
                  "AlbumTitle" : {
                    "S" : "Blue Sky Blues"
                  }
                }, {
                  "AlbumTitle" : {
                    "S" : "Louder Than Ever"
                  }
                } ]
              }
            },
            "properties" : {
              "Responses" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchGetResponseMap"
                }, {
                  "description" : "A map of table name to a list of items. Each object in <code>Responses</code> consists of a table name, along with a map of attribute data consisting of the data type and attribute value."
                } ]
              },
              "UnprocessedKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchGetRequestMap"
                }, {
                  "description" : "<p>A map of tables and their respective keys that were not processed with the current response. The <code>UnprocessedKeys</code> value is in the same form as <code>RequestItems</code>, so the value can be provided directly to a subsequent <code>BatchGetItem</code> operation. For more information, see <code>RequestItems</code> in the Request Parameters section.</p> <p>Each element consists of:</p> <ul> <li> <p> <code>Keys</code> - An array of primary key attribute values that define specific items in the table.</p> </li> <li> <p> <code>ProjectionExpression</code> - One or more attributes to be retrieved from the table or index. By default, all attributes are returned. If a requested attribute is not found, it does not appear in the result.</p> </li> <li> <p> <code>ConsistentRead</code> - The consistency of a read operation. If set to <code>true</code>, then a strongly consistent read is used; otherwise, an eventually consistent read is used.</p> </li> </ul> <p>If there are no unprocessed keys remaining, the response contains an empty <code>UnprocessedKeys</code> map.</p>"
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacityMultiple"
                }, {
                  "description" : "<p>The read capacity units consumed by the entire <code>BatchGetItem</code> operation.</p> <p>Each element consists of:</p> <ul> <li> <p> <code>TableName</code> - The table that consumed the provisioned throughput.</p> </li> <li> <p> <code>CapacityUnits</code> - The total number of capacity units consumed.</p> </li> </ul>"
                } ]
              }
            },
            "description" : "Represents the output of a <code>BatchGetItem</code> operation."
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "b3dcdfdd-6795-323b-a21e-d4f80c35e0bc",
    "name" : "<p>This operation allows you to perform batch reads or writes on data stored in ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3dcdfdd-6795-323b-a21e-d4f80c35e0bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchExecuteStatement"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "1155c602-e05e-3fc6-b83a-b794da6b274c",
    "name" : "<p>This operation allows you to perform batch reads or writes on data stored in ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1155c602-e05e-3fc6-b83a-b794da6b274c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchExecuteStatement"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "540276d6-6aab-3eaf-81e2-0ff8509fa97f",
    "name" : "<p>This operation allows you to perform batch reads or writes on data stored in ...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=DynamoDB_20120810.BatchExecuteStatement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Responses\" : { },\n  \"ConsumedCapacity\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "540276d6-6aab-3eaf-81e2-0ff8509fa97f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchExecuteStatement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Responses" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartiQLBatchResponse"
                }, {
                  "description" : "The response to each PartiQL statement in the batch."
                } ]
              },
              "ConsumedCapacity" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConsumedCapacityMultiple"
                }, {
                  "description" : "The capacity units consumed by the entire operation. The values of the list are ordered according to the ordering of the statements."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 243
  } ]
}