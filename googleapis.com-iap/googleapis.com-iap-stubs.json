{
  "mappings" : [ {
    "id" : "c4a9bb6f-abf3-4bb8-b7cb-d3be6791c247",
    "name" : "Returns permissions that a caller has on the Identity-Aware Proxy protected reso...",
    "request" : {
      "urlPath" : "/v1beta1/dwb14qgp2zdv4g73h2jwmerjjjpyfqemej4ohrfy42723xvpiqr2q7fgp8ninobrfso35wmte6mtv1vd8k4x0h59plnh9k34wxfcacclqhc:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"ga39zgolgrnb2p45ybjecg7hcsdtjrqrhajaljlwwcdli9yh6rhbgh3h633kdur42fhy1kpegcarek26oaoexr2yyyzecvf1my19rwb7q32p1v4f463aa1r12a92w5f8qiomg5l5g5lsf5z999mz\", \"b2feclsvlhgsn35f21yy039p6wg2tlhzjxwprc1vacghkd2jfwtij9bpbf4i376g7y649oqww4dgpk7dfjf1m4\", \"nei15ownwypxl8ab7q1dmfch3eyvn6ed5e1ue2zp4w9f\", \"6414jxd30bu67ul32i300v9gubf4z16p62xpk2lnvyytcscpi8\", \"df8dlih1mabwrnlb24ldkewh06avkeoch\", \"nlsf7pvfvfn3o4vqygf1zdo890verujpocg0goeg3run03z23yem32w4wg4q1gapu2rac3b69nmpc3qvfpxhlr70edspgb6t4bsvgl6w9bh3sc4q9siqz2jmld1jr9mw4mplei76fbdip4cbuk0dvn9yrmwgb5rj4c5f96lt7mdqv5qsvqrmxkwxh5\", \"qk3qaz6dfu2xp6jnnmt3p8po1ycp0digp980fnkiymqgcpgt\", \"l83c76vq6nc4zpg16vibg93zgihei4o7u7z99bp74w636sc5jwuf2xsf32pssummbb4aamaqmztzkatnloti6s2pmtwio4f14s979iu110tgmyiz27a36ed\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4a9bb6f-abf3-4bb8-b7cb-d3be6791c247",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:08.785137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "iap.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a470d0d5-f0b8-4e82-bb3b-af801c316e2c",
    "name" : "Sets the access control policy for an Identity-Aware Proxy protected resource. R...",
    "request" : {
      "urlPath" : "/v1beta1/pzpcy520mra33hih47rz0m8aawoeghxos55dwv7jp52oghj768srn2i6ipzlcx9f6xo10ff2surrxdz46pjrqf0vp0iqd2abcrsu7z5yw3gesp61fiwbyq7wfg4zo9x9ulbmkd9l9r3b3thpi8njdd2lgd8tjjtsn8rvfnz2rfq3s00:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"n8eofrdt99y6j9rqenvuv5dhkm1jd212fdipuj7if528hlqmui8o2f6szrjs8sg6j5h8v5r0vpfphxpwr3qp0hcod731a2dunks5g041gh4snb5e3u6ahf0sytibwdy\",\n      \"description\" : \"Consequatur occaecati quae voluptate quod a dolore a. Sint delectus possimus occaecati ducimus. Ad dolorem rem molestiae non veritatis architecto doloremque. Voluptas eos sunt. Et quos asperiores.\",\n      \"location\" : \"b4wlmmuxh2cavrqhbi1o\",\n      \"title\" : \"Porro dolorum ratione doloremque dolore.\"\n    },\n    \"role\" : \"g8ur9vpcwcc092hjosy43nshd1ysivzvkqtogqaz175kf9z80jwc0ssu7ruhfaskhfbs0i\",\n    \"members\" : [ \"wwlevb7rs78rbrysq7cvwt1k968v7kbw7t26yqogsito2hpmg9ade0l1kgqlxk9z95d7ki49zoagp9nvz3oixm2f1bie7pske7r456jt7la09\", \"ulfbgcco5nkigcw18nsvnyeyoi5dqgryappou4zk16jcbsanmqadgjg6f6d1ko93ffw6zfsywoxv9ds91cvrx2lejjmjv2vqv3o3mvjdig966ropb2z4bbzmt7ysfs21xslwgag7nuzqzdmx2ze26yo7ncb8ap6yxuslc6b8n7o2shczskhmlzpwim9zesi4fyk\", \"xkjv6e08dk638holfaxfjfb069uoxufmebf0\", \"gzxjn1hmhvmndvyy8vwtjgfrua02b9y29gcn6fehwsan3wip9fev4avrqgnir9hw7jufbjazt01cwn5n9k12dccolk0p9mb0m7yz9pirc28ezihxlfcnmnz5pcp3bzax7mpjtx8mxg2lhkxz87cbmyyi121sam74t1zib0prlj0wa99cap0c7x2c\", \"dsosqpdh1u4w3f1y13n37zgbo6dh9f15wh1s33iv9ff9py55xfocu1cobfbbcpb4qxsuotjg41osxye\", \"uquut4bfc9rlerhdilrrtxcwnnc5wug8k0t9tr9a4jx3kvm6\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"n7soen2tauws5wxt1cv5kwfej014b8e64ivm14oh8gm7oenblj04levm1dboazd072n2c50icqikwpsik0r5brl25xpcpvqmrtma7yveo53cit5obv4y8jb1t4ycz9p12gy4b4xmmk1t\",\n      \"description\" : \"Omnis adipisci laborum perferendis. Voluptatum alias ab vel explicabo. Consectetur accusantium similique amet voluptas eaque.\",\n      \"location\" : \"ogfkswd8igrbludlrpz1tihithzhmjoijefx543qm96hvwxrmraulqnos6jrl2jlr7jncmishjksg20j05vxaokwj91oz0bj0zecvxjr5ofn69h9p4\",\n      \"title\" : \"Ut aut repudiandae est deserunt itaque.\"\n    },\n    \"role\" : \"eezc59gzctc13ag0hkvycjdg72lxxse7tewkjlm3v10y09974qiv35lbh85vpd759q3z0mhp\",\n    \"members\" : [ \"lmnecbz6ujz06qtl5fm25ypecpdxv61q1powwmskep8mlext1b9rsdzd9w\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o5u3ba0l2l1kl5kip329bjkqm01zhtso36zncat29n6ux5lxrfh775lugrxd475p8utcorb6f9u5s0g0gw7woy9wmwhbwgbw61zyaijunr8yix6o8mz40blv9895l2pi23jpa6o9yxbqnhx44524wo8c\",\n      \"description\" : \"Magni esse eveniet alias possimus. Voluptas qui hic quis illum. Nemo eveniet a voluptatem autem quo dignissimos saepe.\",\n      \"location\" : \"kggtvo6jttpnzigpo94ohcxc525um05g089rf9z9z3g9smj7k26izsb8mw9o4g0b9qzhgzk046uwbn0hv55ifwgr7hdo0cvab7fz\",\n      \"title\" : \"Amet quia quidem minus aliquam quia dicta.\"\n    },\n    \"role\" : \"2qgmf184aka7w990xjacw3ks88hxbpfq\",\n    \"members\" : [ \"hxsiou7jsacwk9aghjn6e2dlzb3fbq88kx7684ertnsvepf9h67x5nu85d13s8jl8o11e3p\", \"n34tjnb7c441xdp5dv8fk98ewicqbz85zu847afptuhlxod4hijyaz6uscy2av0etab6vhrrkihy91vslom2dte4sqt2ov02lnzxjqwei7wgap6pt09w3ap1dctjirguqo2n3gy5ne\", \"a90s09rn484mqqcu\", \"vob5ljk9py02s9tvmy\", \"6envfm5f871x4nyvoernrhhwdegdp6768u518hkmmeiott7wog22v8qb9fg068skoq6tkb06hlqhcw5oivs3njdw7e1sk1omcl81px83wlgwqo0iibqb7pipkrm7v5z848np9j\", \"m2ncwkbbeh11lp7ym1c6lqpj436j91cr9vd9o64wt3a9m56kwyeln5ilxar2e58uw6gskj6f19yc0rhs6o38zglf7nfdy7\", \"asnjjrozbnq2drdhh32hg50svymde992ko6cpzdsj144qlg2321mo4hsfszkkoaaoz62wyfcjje29twytucfbh59vvu99lrjistbzxij613ee0yig7c4sn0m9puj2k0judfl7c94j3buk4y2z8wacfh9ow0ub20401fj0i2gwtfi45shxjhkup6g86ij3itnpcxyd\", \"i2aa4hf96dktcsmuc6douwaqyauuqmi9t3dgbpki299du1svafr9nawazzlyfec6e94daioy8wr5kxicj3bmmorfoly7fq214xeoxi6t5eh833ut330sfuxkdra5zk6azl\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7ymn2dfrzwgn5x9nvb470hwgc3zi586csjcmycyoe0mdpurvlw69ganv9p2lhhllvdayzs7ixyalicwkodyumuqhf0cwch4oqu91nllxobgo8rz3ceg3en8hk8qdm5o\",\n      \"description\" : \"Inventore nemo ullam distinctio tenetur. Perferendis blanditiis enim non odit adipisci ea. Non aut quasi laborum. Aut quo minima perspiciatis in laudantium itaque pariatur. Soluta cumque recusandae se\",\n      \"location\" : \"vjfne25v1jhwvs6z38ckkw8vbz0bhbqlrff6su8ezxtcn63god81mf8scr\",\n      \"title\" : \"Sint aut sunt fugit cum mollitia et.\"\n    },\n    \"role\" : \"xqhsymq77znkcd733j3bw7fbetyprn0ofd4camo8orzijqxv4cm3f1kwd434rhp0hyn0l2v6vnqu28ic1750j8mwgtetmmi85m88b9ws0qyqhh5f0xu8w4n68v7q7xozt9totcivm1t4xv3oaxox76kzzgbpuj3ay39su2uf7sd2\",\n    \"members\" : [ \"mqt76334rsnz910771bdr9z3aqdgyhj8uupsk0h52gin05wun1csqrvhlxm\", \"ss55dfhbtpyqeleivwasrloa76l4qhhxe1jo3rvco5aaui0y155kysyivdx4788z52ua\", \"54arvsmang9h75m1htski65ayr\", \"ragjif50imjxz7fkry1ogjkf91vlc4f41aa57jeurev324fctuos9r4t9jsbfdnaz4nsnhmg482augzlnz7jiisos7ekod4fjdhofnkx1r9vjmny3out6o248h6q9l0134eg6imtq0z\", \"ibp6dodri\", \"gi9l26568o0nlgus1gluk989aedi0lnww9ll17vtuxzuian77v5ugcjq4eb6428ok432u98zo3jgy6w994l6338bzj0j0n36ugte15xwyrnx4hm74h3jmlu41gqlxct1jxxclquz0xw1ky9kokxrsm2mgczgy29invy8ukm\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"doitu7kx9uedc279itayh2yy29a\",\n      \"description\" : \"Aut rerum harum. Eius et sit labore similique. Quos dolor tenetur nobis. Ab facere iste aut ipsam saepe perspiciatis. Eum sint optio ratione optio quos.\",\n      \"location\" : \"7shkwc88u2ycyejer72l6ljnv806lxvrq8zl18o25o0djnlv7v5s0wxeufyximib5m7axkqr1qfjkxx\",\n      \"title\" : \"Voluptas molestiae itaque quia et voluptas.\"\n    },\n    \"role\" : \"d6kd9h8rsuowv8ixf92za3ywjk4vdasgb1a1yuo9kcwwtt48\",\n    \"members\" : [ \"6wrpso4csheu5x6ajnmg2xj6dzn2367tccap2wdwq2zklokvf8ao56oloewsq289wboe1ue2fvsfgep30trnmukftleeqk12779ruqepwyl1l7ct6dd0bnv03pv0l23yl0l60orh07a4oc1xd5s4rkexv1del9dr5zwtutdbc7r5ln9c4kcwtwh44it3cejc\" ]\n  } ],\n  \"etag\" : \"minus\",\n  \"version\" : 253851747\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a470d0d5-f0b8-4e82-bb3b-af801c316e2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:08.785011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "iap.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "becbd4f5-eaee-4f13-af0e-c51cb8602ee4",
    "name" : "Gets the access control policy for an Identity-Aware Proxy protected resource. M...",
    "request" : {
      "urlPath" : "/v1beta1/5slxtrlu2clqwen1h8caxxzpgdcqe1ywa9ercj0b6n3lymdxqhxm5ue36i187mac1swu62f7oekik1kbzqdivwah1ky9wotmo0jzkwq00o7efso0v71962lj7ncsuhwg1rwhy8duulww325smto7fp10yv26469ez8b:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"rjipc6yu03ftdlb4t303tyolaz6n48tift50zfy211l147ynmo0tqzd8o2q45ovy9urhkl6g86\",\n      \"description\" : \"Voluptatem quae dolores laborum est quae. Corporis voluptatem quia necessitatibus. Culpa optio quia debitis saepe numquam voluptatum dolorem. Corporis non facilis unde nam suscipit enim.\",\n      \"location\" : \"htf9ffls0h1opcii5fjo2rcstn8tvslj4qq1g966h6atgr9b1vgky2rh\",\n      \"title\" : \"Cupiditate blanditiis iste illo vel.\"\n    },\n    \"role\" : \"fy7j9k950ewg79c8tn2trnu5zplhdj45vtb1o7wpiacrgn143oat5wke0ed6lwr5lis6e397j12btu3gyih43nxqbbiisln55dniaq0z3ie4y15zsawfe4mf2gjw7h3brkyyxh8pulp5iu51zea1yefwauhlxrcif2062xy693yvhndmttfs2rj5nof18w7alwa6yc\",\n    \"members\" : [ \"ikt854hb8gcwqf5gk717\", \"udlk4sbeyej1gaek5a51am8m1om8e3bezhk95fsd2hjbqsz93qokcortbd80earprdc89dq0rufld1cgerj3jqiym9m\", \"vv5ll49zqw1987cwttp0eukb48dwl6l17bl2da3ljqoazro46g0fuml7ry2u\", \"zzrwkr5jyp1xqu9e96ocraefg4bor2575cdzcsgsxz73dvtsxfpxp0bvdewo422cm070uvf01y5pd3tkuvoyyx5ly7k8872co70vzhxdra3ti92tx7bzunkitu6t01lzyu8n64v6dp1ntr43yxto8lyo7rmmzzz1z8zokl5zkyw1icivu4ngo6hhhjg\", \"i5veymdadj3zu1o13z9qbonwrfdjr\", \"58a0woo1qk3njhosorkjaespuuzwpxahcxvkfgvpkqjuvh2f8oq05o0d7x1gs0sl7yeebkl75z18681yicjk81mym4ct7rgv4l6ip2kkvdxdf0gssi7xm1l4jb7krfzi10vxs9l7o109b4wicriqbsvaltq30btr04l5pubxhvglddcb4bkm4jlt6\", \"25wrv8wjisyj4dsmyqagkzq5v8v88xi819xkn\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8v4t62tbdit34nlahn25nxxzje297ondgd8peancelibovoa32t6qatvca5awqzsfm4w4i3b8gc366yth1ynclaq3ovpi94xfxfgsg5daqip4ev0\",\n      \"description\" : \"Dolorem non delectus. Magnam ut alias sit consequatur ad. Quae sed aut. Nihil modi consequatur. Doloremque sunt aut magni eligendi a nemo architecto.\",\n      \"location\" : \"ixhiwpl4gznc6marzu8bfr9bz0mvtpbkbe741vyvugj53u0gs\",\n      \"title\" : \"Assumenda ut nulla consequatur.\"\n    },\n    \"role\" : \"3eonv5jldulktvkke3clktbkxs8q5d5kbmzp98sgnvtaduycw2ze71lnrvr44h3cnn0a61\",\n    \"members\" : [ \"901xy3yiafjx3dctu8b\" ]\n  } ],\n  \"etag\" : \"quod\",\n  \"version\" : 1972872382\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "becbd4f5-eaee-4f13-af0e-c51cb8602ee4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:08.784154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "iap.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}