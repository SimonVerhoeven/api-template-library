{
  "mappings" : [ {
    "id" : "35921f82-e90a-3a70-aaef-0daf4ba73c33",
    "name" : "GetEntitlements retrieves entitlement values for a given product. The results ca...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=AWSMPEntitlementService.GetEntitlements",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{\n  \"message\" : \"Sint ducimus aut ea suscipit sequi assumenda. Et similique reiciendis. Aut facere qui illo consequatur officiis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35921f82-e90a-3a70-aaef-0daf4ba73c33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEntitlements",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "$ref" : "#/components/schemas/ErrorMessage"
              }
            },
            "description" : "An internal error has occurred. Retry your request. If the problem persists, post a message with details on the AWS forums."
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4ced7b5b-dd02-338b-8c49-0da7474ac270",
    "name" : "GetEntitlements retrieves entitlement values for a given product. The results ca...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=AWSMPEntitlementService.GetEntitlements",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{\n  \"message\" : \"Occaecati commodi nemo. Non hic esse ut dolor asperiores. Et magni eius earum quis dignissimos vero dicta. Cumque est facere vitae non aperiam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ced7b5b-dd02-338b-8c49-0da7474ac270",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEntitlements",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "$ref" : "#/components/schemas/ErrorMessage"
              }
            },
            "description" : "The calls to the GetEntitlements API are throttled."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "aef51d4d-3576-3d21-a8f5-c283b0b9cec8",
    "name" : "GetEntitlements retrieves entitlement values for a given product. The results ca...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=AWSMPEntitlementService.GetEntitlements",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{\n  \"message\" : \"Soluta velit ea eos aut distinctio quae aut. Blanditiis vero aut ratione id. Harum explicabo est. Ut corrupti pariatur qui aut est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aef51d4d-3576-3d21-a8f5-c283b0b9cec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEntitlements",
          "schema" : {
            "type" : "object",
            "properties" : {
              "message" : {
                "$ref" : "#/components/schemas/ErrorMessage"
              }
            },
            "description" : "One or more parameters in your request was invalid."
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "40948c4f-6469-3047-9092-60037e0e4fa4",
    "name" : "GetEntitlements retrieves entitlement values for a given product. The results ca...",
    "request" : {
      "urlPath" : "/#X-Amz-Target=AWSMPEntitlementService.GetEntitlements",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"Entitlements\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40948c4f-6469-3047-9092-60037e0e4fa4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEntitlements",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Entitlements" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EntitlementList"
                }, {
                  "description" : "The set of entitlements found through the GetEntitlements operation. If the result contains an empty set of entitlements, NextToken might still be present and should be used."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NonEmptyString"
                }, {
                  "description" : "For paginated results, use NextToken in subsequent calls to GetEntitlements. If the result contains an empty set of entitlements, NextToken might still be present and should be used."
                } ]
              }
            },
            "description" : "The GetEntitlementsRequest contains results from the GetEntitlements operation."
          }
        }
      }
    },
    "insertionIndex" : 3
  } ]
}