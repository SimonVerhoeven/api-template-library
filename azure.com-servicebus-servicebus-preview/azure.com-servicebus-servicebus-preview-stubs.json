{
  "mappings" : [ {
    "id" : "e9f8f46e-02ca-3af8-a088-505a8b3dcaf9",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/2wpd/resourceGroups/Ms.+Dirk+Ledner/providers/Microsoft.ServiceBus/namespaces/Kathlyn+Krajcik/virtualnetworkrules/Edison+Gerhold",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kjl595rfdxdfcjg4dx79b211zical71slaiyu8h0b5o0ia2unb9u5wz5s96kv566gg12be58wcislluwwu3s1"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e9f8f46e-02ca-3af8-a088-505a8b3dcaf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "7ad67784-100c-3baa-a488-c7401d670789",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/9kzc/resourceGroups/Zachery+Lubowitz/providers/Microsoft.ServiceBus/namespaces/Leann+Ruecker/virtualnetworkrules/Daria+Schinner",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "01y60g7pxt6lkn4ix1hrylwxd0f71308pqmtll3oa4ick9co2h4ufc5ow6lhj3n3f351iycgsz24h0vg6ns84klizm4b717p2unda7kt1dm4uu19pxpbsu"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7ad67784-100c-3baa-a488-c7401d670789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "553cd295-6c8b-3ecd-a0c2-16f3a2f4c6cc",
    "name" : "Creates or updates an VirtualNetworkRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/7u2a/resourceGroups/Loriann+Sipes/providers/Microsoft.ServiceBus/namespaces/Iesha+Kub/virtualnetworkrules/Tonette+Schmitt",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "j99b0uzhbk4p03vryhkpyjvqgwjdws9lf3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Angelyn Bashirian\",\n  \"id\" : \"0asa\",\n  \"type\" : \"ugu6veitz6i90n0qgs82i1eu493rtqpla6fxslclxgnn048nuzpxaqnzp4hrggnpl0q1kw04y0aqjfajxudee8z03mfdpsinx8l0unqhmq89iuiac89h4pr9zx1arjyhjtm7zi10d\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"8y54\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "553cd295-6c8b-3ecd-a0c2-16f3a2f4c6cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "Resource ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "24d9aabd-5fcb-3307-b20b-69195e82727e",
    "name" : "Gets an VirtualNetworkRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/sh61/resourceGroups/Rozella+Predovic/providers/Microsoft.ServiceBus/namespaces/Jannie+Kiehn/virtualnetworkrules/Kraig+Frami",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rsue4nfn8dj9sfw49rgokwpaols0cw5b09p6q84gmvm2v16dxx1gj7mr9aiwcuzpfw23rxya3kp3xgtfwjwpec8b34illc4gkqi3h3ydjov2mekbf9v9drsmmz9ozlz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Maximo Rice\",\n  \"id\" : \"zh5e\",\n  \"type\" : \"cb6is9pdnpwzkq0qwc48khmu3li9s949j8l9my2ga2hugr46zgg4opawe2mh426d00269qfyt45gddey35487qq7ahwr71hb34yypt6zf9kuo3y6qos4o11iuiemej\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"dgc9\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24d9aabd-5fcb-3307-b20b-69195e82727e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "Resource ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "49a40e85-e982-3df3-a192-763f9e327e48",
    "name" : "Gets a list of VirtualNetwork rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/41l6/resourceGroups/Dean+Runolfsdottir/providers/Microsoft.ServiceBus/namespaces/Shanna+Watsica/virtualnetworkrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2tyjqffja58q9x4damxak5k0en7zcukd8lk5ch9r9iwhw731p7q65pet6fvi7nw56rhxhn0mc96m0lkmibt782c99nvalf3kfybey9xzrr5mpsbw0fze4m"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Issac Wilkinson\",\n    \"id\" : \"8cb8\",\n    \"type\" : \"09gselrsyv44sq5yf4i06n81lr5wj1tbpy7jnj80b2y6mfqbndmw3k1677kklmmlmciwdb19ddn6hajytgjr6cre\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"5j68\"\n    }\n  }, {\n    \"name\" : \"Guillermo Towne\",\n    \"id\" : \"43z2\",\n    \"type\" : \"vw5mqnh7g9mkejddfa\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"nu21\"\n    }\n  }, {\n    \"name\" : \"Tamala Stiedemann\",\n    \"id\" : \"6k04\",\n    \"type\" : \"2bvl5ly3dzy2apu5hi18seohoyv6qth7l9iaiojw2vwn1q3382ivozvjy93qc\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"2ou5\"\n    }\n  } ],\n  \"nextLink\" : \"z4r1bwzh1grerpjqles8ivpmimrabmchrpr7yrj00lewm0sz02hoo8jbffl6w8yxzam7z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49a40e85-e982-3df3-a192-763f9e327e48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListVirtualNetworkRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List VirtualNetwork Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "0ea93463-a37d-3558-a1c9-9a83a907a696",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/0p2x/resourceGroups/Dr.+Meda+Huel/providers/Microsoft.ServiceBus/namespaces/Deloris+Kub/networkrulesets/default",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pbfr4fn9byvpnbig9sbhdg8s0sk1vx4a9bmztuwjextck3xop"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Herschel Braun\",\n  \"id\" : \"m399\",\n  \"type\" : \"qjt6uss1h40brx5qnq58uvw98m28mgow9anoq8xzdvkizsd47oatpr9k9xpyzvyzstp4dse8nvvtfnim20mam0iwdz0er5u5kvovnk2w2wnz3c7tghtsj0qd4zz0lxhixcolscxcjl59nq0kpk3b6pmssq9c51qomlce9cc3y\",\n  \"properties\" : {\n    \"defaultAction\" : \"Deny\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"ue2tymrdru807h3g98mi22dkz5krg0erjsh56jgic57ymm5onu16tjnln4pd8bifyto1hb4cqxm2579230lf56wsmdkrj40jt5517mwz3ouac95lzb9yqrmfxk9f0rmfuc2dxcj\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"642ixpqn7n2jx96xm8wggt547dmgs85o79njjqj7ov9mb9u84mzvts1w29bfh9rrq68zl0251js21s3fumzzkbn9yu2wlfd259tfeopdxgd6wup86e9oo909ki18ndinu8avq2kreoiaqaml58yzxvj18lm63ca8pm7ed9kb\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"l9jwdwk8ml2k55lfkhe9dkhbtyzvrxcwnly8u387un2c0innt73hx2yphvgk5ey\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"a16i1j0p3pzof4vb4ly722gbsvfqhy18qjlzcrzsb80fa7ys8va8chzgh4iosmj1il8hzeb8tcelj1mt5qno98zrgw0vjvdpuqd527h8rowdh22dtmix4vq9zhk25114e7u7qx88nhn11anhaom\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"xrxbh0a8vt2uavr77xrw2hrdpvxc6kxf5b8z8gq2wqul27kcm700ntearu2ivgoj8ogalpxa9klfo9noi0ofkx\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"jf1i\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ea93463-a37d-3558-a1c9-9a83a907a696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e068bed7-2dd5-3e80-b8ed-c1ae7337b53e",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/zop5/resourceGroups/Mrs.+Harley+Hudson/providers/Microsoft.ServiceBus/namespaces/Mr.+William+Hintz/networkrulesets/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kmnlkh27n1n10vpmhwstg1j3bwl54fwjfbkq54izn08y51u6htvexpatousfpsjdtwigva4dq9v0kv8r34du8qo1frwmuwitf29ihr3fjec3n5yb6tm358li2uj7t5b31kpdbeonx1v0wut4os6olmq7o538kjvfrauvxsmv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Darius Hodkiewicz\",\n  \"id\" : \"b90q\",\n  \"type\" : \"6gjf6bs8t1joev4fcnqb7edrcteug2jpp30zmlgylra2uhxeccmr4od5plidc5jt7a8s102ajtwvqdk0uvbyald058gpdb7m2yye7odnyubv6j9h3cs1dtw293jt81js2e3f8t9bf3h5mm1x27qwts2wwoheqfr\",\n  \"properties\" : {\n    \"defaultAction\" : \"Deny\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"20464mzfvh66l3rhvle1vs0dcqitp6gk3alpia1fsafszlck9m486pg19uijuh6a8qt47l8biuiu9m3nemnrp67akzm31innp77aytjmhl9o1zo3gapwlj0gvoosh88y5nfug4johueeej2boekq99w41bj0mrl4ew1i4isr6y3hpfabqtz0qvy5a2nlx8t9iry5a5l\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"04cf\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"js0x\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e068bed7-2dd5-3e80-b8ed-c1ae7337b53e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "04da4025-5e71-3747-9bf1-65521d0e51be",
    "name" : "Deletes an IpFilterRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/483z/resourceGroups/Kenneth+Brakus/providers/Microsoft.ServiceBus/namespaces/Alonso+Auer+Sr./ipfilterrules/Benton+Hagenes+Jr.",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "enr9ezcufhuw5noli3o5ew0dk3w54jsq57hp6qkhe5i00typhwd8huh7h1ysp6l81nryqhiyurfm09gfnrodree0fyr39z1jr"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "04da4025-5e71-3747-9bf1-65521d0e51be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "cb89d624-7a4e-3f77-aff7-bae0c5a2a722",
    "name" : "Deletes an IpFilterRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/yv04/resourceGroups/Ruthanne+Renner/providers/Microsoft.ServiceBus/namespaces/Aletha+Krajcik/ipfilterrules/Lana+Turner+I",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nyu6exf"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cb89d624-7a4e-3f77-aff7-bae0c5a2a722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "af951d0d-a2c3-3634-a9f8-37a77d1fd22b",
    "name" : "Creates or updates an IpFilterRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/03up/resourceGroups/Earle+Harvey+III/providers/Microsoft.ServiceBus/namespaces/Michale+Kertzmann/ipfilterrules/Hunter+Barrows",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zduwfy3tw4wsxwmle1oe04p0mc7ko22so5aszn7db0fq3xqj9qlfpgzeydijqu3h5nu0r44vgkesmiwczf7fki1z9sn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Samuel Rempel I\",\n  \"id\" : \"9xfk\",\n  \"type\" : \"kk5773ftogtfhn56f45bvwo2hyocd1mus81wfpm90jidiaeiohngt4etds\",\n  \"properties\" : {\n    \"filterName\" : \"Donya MacGyver\",\n    \"ipMask\" : \"7nj0dh2y3xzt7tq6aolg24pqqx7slsuaiw1tbaxzo38qagt9axkuo830lu2xovcssrzm046amwjbmh3ezspie3752ptw1s6at2xxltnrvyuhp5piwg5b9lauoejhogn198vdwrs\",\n    \"action\" : \"Accept\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af951d0d-a2c3-3634-a9f8-37a77d1fd22b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "575da621-0df6-3430-8041-9df78fc6631d",
    "name" : "Gets an IpFilterRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/gp84/resourceGroups/Mrs.+Saundra+Miller/providers/Microsoft.ServiceBus/namespaces/Alta+Kling/ipfilterrules/Darrin+White",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mvoktt9z5phpcn7mupdd8fq2fhk3n8farpwuyf4chkhxvnbrmd93fv3zac0cp416bp1jtxwmn1rem5icux06sxg82095l8531mn8fjbj507zs"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Arden Carter DDS\",\n  \"id\" : \"dpps\",\n  \"type\" : \"hri7o1xioiywbvmvgai4kzyoiiqwng05ndlt7fht4cmw4qxb1j13fppj4cg5fnoo8asig2jlg7z0deubvylvq\",\n  \"properties\" : {\n    \"filterName\" : \"Georgine Donnelly\",\n    \"ipMask\" : \"lj84m51gu9179cluowblmt8ex7gydflv0ohemvqsc3vf8etlbhvvrmslwl0gra2afe\",\n    \"action\" : \"Reject\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "575da621-0df6-3430-8041-9df78fc6631d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4c1faafc-3654-375b-b66b-843126ca190e",
    "name" : "Gets a list of IP Filter rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/n270/resourceGroups/Georgetta+Hilpert/providers/Microsoft.ServiceBus/namespaces/Ms.+Mattie+Ruecker/ipfilterrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "brs3lqrm8e2no87s6beg6gjgc1umrubspn9rwx7y6g1rzht6hu129bmhpoo3fl1y7t80hsame4fihvj5jsl0kje0xf78jjx3qwdbjn8y02x79updct9detaph6oyf8amq4s32lw5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Miss Chau Klocko\",\n    \"id\" : \"7pd1\",\n    \"type\" : \"paa2bc0q97rzrv7hw36e0yopjxarm2vnoefnfgwhfs149w6chibr5kqpcqfdjtyjze0zqh3647fzyf9ue82hl509qshf993gczjsl3u7946mts5jghpvlulqf5bralzbgw7bqep12rrrnje4vdf1g5botupfpxu3gf\",\n    \"properties\" : {\n      \"filterName\" : \"Sunni Considine DVM\",\n      \"ipMask\" : \"6d98d34pqcm4q\",\n      \"action\" : \"Accept\"\n    }\n  }, {\n    \"name\" : \"Emelina Lueilwitz III\",\n    \"id\" : \"3o3v\",\n    \"type\" : \"lz6fh1abqwqtnhhdqba3r76y9zmu5pc58zoyfaqqdr7bmmafo723sk67674x9da5uwjvw77tmpzg\",\n    \"properties\" : {\n      \"filterName\" : \"Brigitte Breitenberg\",\n      \"ipMask\" : \"c61og7a4autpz81flzt0pkfacsd9qk37jtpb7eoxm5mbdw7ew4b1111o6mmxfkor7i6ftbxc2bjwa\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Elenore Kreiger\",\n    \"id\" : \"5erq\",\n    \"type\" : \"a7es4yeuo2xwqeemxxuoai8otueacwgy9b9b9rgtrabuxmgvjbm6nbrcme43ek9hrq7w308fimbr3a5krygn4kygpvq1123t1zenoc73qtzn4bi8gi445z\",\n    \"properties\" : {\n      \"filterName\" : \"Gregoria Steuber\",\n      \"ipMask\" : \"brwlp6npdyges64jpoxupr2frv5wi2xonf7xzdavdp6kad0b2r0xyibbvj52jb\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Devona Stroman\",\n    \"id\" : \"1006\",\n    \"type\" : \"yza45045plh7ufuz8v9u4rzpd6jvowf0xxhp1df8wsoxwjno5zivpj840qg0wjaum59rl9rrkmwbsx\",\n    \"properties\" : {\n      \"filterName\" : \"Ernestina Bednar\",\n      \"ipMask\" : \"rp59g9ma16664q0b4o5tw89vodb67r12938nat4hscsrm2qa1qvcof6gwfe2vqdeb6kh93i8vcexw4hq80kth6qqojurkadhkz3x00168vyzpu2mhphatl1qq30qazsn9u0p43os156lhblawrvlv\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Gonzalo Crooks\",\n    \"id\" : \"b77q\",\n    \"type\" : \"wxita0ptoegfvaywkmxygpgyg5xai03tcjfqc86h9xf4\",\n    \"properties\" : {\n      \"filterName\" : \"Mrs. Garfield Von\",\n      \"ipMask\" : \"qara08yzud1bjh0pkmiu70oyjb34w7tpgpopcyjwvly8gytca6cjon6f3gobdr6ck7lzkg0aedomex6wjz5f7hut6hhcxhld80f0jig2ai1r0w4ovuit3w3ltnay2be1lhrfxgzakkgwa9i8uu9wgixa7xrnxzmi2ibiuep\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Dr. Trula Schinner\",\n    \"id\" : \"6t7o\",\n    \"type\" : \"0gafjvn37iterzc0u63i83rp9i6sc3z83u8ttwe9wlxqxi49f3dirxbosdk5i0m3xfaezs5ym0yyolwjt4pzxvxtstu9j2c542hwm724yaizqsla0y05uroo2mv85e8zzngsucbuqsqc53pzbktxavblhstx3tn37js9v0vvqxtauhm42y1fx8ohaw9wp4feu\",\n    \"properties\" : {\n      \"filterName\" : \"Cliff Gleason\",\n      \"ipMask\" : \"2c9agj2f7zp5vmq7kaskhqzr2q0svz7yl6eqmfshnydlepalsxhvagibvkkqz3r5jzkcs0gzqkv9myogqox9pgf567phli724dncalhay4y8ckfdgqrsq7sh3yw460cfxcyuja\",\n      \"action\" : \"Accept\"\n    }\n  } ],\n  \"nextLink\" : \"9syp6z9ncmgydbb51ned6xw1at1hmcf5wh4f557\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c1faafc-3654-375b-b66b-843126ca190e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListIpFilterRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List IpFilter Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d2d43336-a039-3e1a-bb3c-9223b4f7b57c",
    "name" : "Updates a service namespace. Once created, this namespace's resource manifest is... - 202",
    "request" : {
      "urlPath" : "/subscriptions/c446/resourceGroups/Mrs.+Breann+Zieme/providers/Microsoft.ServiceBus/namespaces/Delmer+Zieme",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "24f42n5cbbipubokki7py"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "d2d43336-a039-3e1a-bb3c-9223b4f7b57c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "58dce07f-e6a8-329e-872e-fe12f908846f",
    "name" : "Updates a service namespace. Once created, this namespace's resource manifest is... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/0lt6/resourceGroups/Miss+Delisa+Weissnat/providers/Microsoft.ServiceBus/namespaces/Stefan+Thompson+II",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b3qawnag8vj1mwlnsji2b7508kt3d8ab0u1ono0oub3fy1r5adhhk2kbl"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"yum0uikcer1igp5ym6k0tbgqd91u2u9j93zr8jm2f6etyzvmsgfv60zuig2x0voz2f5f9eq4jlnbohgy\",\n  \"sku\" : {\n    \"tier\" : \"Premium\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 510266609\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-10-31T11:38:00.518Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/249131\",\n        \"keyName\" : \"Quinton Parker\"\n      }\n    },\n    \"metricId\" : \"nhpd\",\n    \"serviceBusEndpoint\" : \"ji8zbeblf9bn6ynngo1ihwa5tbbn8oowikkznzc82o9pd7xnv62t5977qmot9qlzd7ejhf2\",\n    \"identity\" : {\n      \"tenantId\" : \"jka7\",\n      \"principalId\" : \"9y6w\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Wyoming\",\n    \"updatedAt\" : \"2023-04-06T14:04:08.519Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58dce07f-e6a8-329e-872e-fe12f908846f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4c7d8937-69e5-35ae-aa86-4b54c131d2e9",
    "name" : "Updates a service namespace. Once created, this namespace's resource manifest is... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/xpdg/resourceGroups/Tamekia+Schiller+MD/providers/Microsoft.ServiceBus/namespaces/Renetta+Bayer",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g6c0a6p3l41qrxcw0oqygwl24rnocetiykw6gtij4h9llf7yux2p3xctco7buzm59lk10pri5ou2o1wvbuo3go447neio4325zcv1o43bnozihmsamfr9pbkmznkicn89b4mm9urbxymlz51cn8u1h45"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"7dryw4hw5p4phu0o3agqpq4qjdvlz7cl2mfobksl3lli126104fy4jh8my1cxcqv2pq3vbt84x25ylavi3ejel1fvmdxf7s\",\n  \"sku\" : {\n    \"tier\" : \"Premium\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 1779666406\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2024-02-02T03:16:04.517Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/927270\",\n        \"keyName\" : \"Gladis Senger\"\n      }\n    },\n    \"metricId\" : \"407n\",\n    \"serviceBusEndpoint\" : \"j5804xnzfl502cpx05wi2qr5tdk8lrluh8woqucxcu588llitcrct21mfvtofzc2lt0rw2wakeqc3sxepb4c2m0o96a5sf9b3nfstn2mic3fb2repxv8dd2z0gxszoani7i8jh6dm09iv\",\n    \"identity\" : {\n      \"tenantId\" : \"6y7u\",\n      \"principalId\" : \"0ao7\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Arkansas\",\n    \"updatedAt\" : \"2022-05-11T13:23:38.518Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c7d8937-69e5-35ae-aa86-4b54c131d2e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "8df387e8-e89f-3d2f-9ef3-a8f048b23dbb",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/4i2l/resourceGroups/Laurice+Dickinson/providers/Microsoft.ServiceBus/namespaces/Dr.+Kari+Schoen",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9sedmht2u67dmnu83on7yiqpkzfn15e1zdce3zhmfinr7ytzi5daacckwzuvpgfu04ydtjp9tbf12dkk3k0ajyjlito74fyjezfmwt95x4vh6upu6g0c0xcw7204as8bjpfc7k55xlk"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8df387e8-e89f-3d2f-9ef3-a8f048b23dbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "f798a271-cc23-33cf-af4e-73b9443633a8",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/g395/resourceGroups/Rozella+Murray/providers/Microsoft.ServiceBus/namespaces/Chana+Volkman",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2vhm4v2dshdfm73ihwvjs9yi85zf9y8tb05oq4jf4a6fg38v960w8uzh"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "f798a271-cc23-33cf-af4e-73b9443633a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "1ac79a76-16f8-3803-9cec-5dea2aee5cbc",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/44g0/resourceGroups/Cinthia+Satterfield/providers/Microsoft.ServiceBus/namespaces/Adolfo+Goyette",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mlnm4o91cgtb28lljlcfusfyitm8m8xozvbztwgrx5ze286zc8mt1ywhd9ab94koj03wtp4r63yiv1k"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1ac79a76-16f8-3803-9cec-5dea2aee5cbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "9fe81640-b551-3e01-b88e-c105e23a0c54",
    "name" : "Creates or updates a service namespace. Once created, this namespace's resource ... - 202",
    "request" : {
      "urlPath" : "/subscriptions/877z/resourceGroups/Derrick+Durgan+III/providers/Microsoft.ServiceBus/namespaces/Karlene+Wiza",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "7fvfqlh9cionq9k3m"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "9fe81640-b551-3e01-b88e-c105e23a0c54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "7f2f745a-40ce-3828-b465-27bf88bfc6aa",
    "name" : "Creates or updates a service namespace. Once created, this namespace's resource ... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/4147/resourceGroups/Simone+Lueilwitz+IV/providers/Microsoft.ServiceBus/namespaces/Mr.+Len+Rohan",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "aatz1otut9awtc4t1hiw94hsawy8qopmjxdqukvuy0y"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"obzom1xnk5n294393qvmwsut9eem0gpd42du0c6dbg2l6ujss5dyv4i375kk9njum3t2e5ekod\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Premium\",\n    \"capacity\" : 981169846\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2024-03-01T15:59:33.516Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/179769\",\n        \"keyName\" : \"Eden Kshlerin\"\n      }\n    },\n    \"metricId\" : \"tg02\",\n    \"serviceBusEndpoint\" : \"2cgb153v7gzr2avve3wunbxc7r85f4tqg9dpr4hf7uprn0g7c7yjkcaallxfp43l35588sdcwxbacgstlldeiktwevsetctxvm09w5tw3m4602yzoe09trw6vcd2gk4dn81vz37e7stmh9akud\",\n    \"identity\" : {\n      \"tenantId\" : \"c37g\",\n      \"principalId\" : \"l6s9\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Missouri\",\n    \"updatedAt\" : \"2023-10-28T13:23:42.516Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f2f745a-40ce-3828-b465-27bf88bfc6aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "9a23d9d3-1d33-305f-a350-c5b6f0ba1e2e",
    "name" : "Creates or updates a service namespace. Once created, this namespace's resource ... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/7gyy/resourceGroups/Bruce+Hyatt/providers/Microsoft.ServiceBus/namespaces/Kevin+Heathcote",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m1q89h1oimvn63di0khs3ovsf0drtop6z5hfzk18glpm64udj5praq3bobjbqm336lm7f1rn4ty964gbxc8ocohb5xsj1dkd9w1u90po"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"17g2xq8zbhgzldxyfmme3bzmran54tlqlp01djz9itlezj8ndndgqg8pmyzn3fqdhdh30dxnv5wg92kwh107m68ed8e29oy2i9y4qencd29\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 778418064\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-06-18T21:24:30.515Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/466490\",\n        \"keyName\" : \"Mr. Terry Zemlak\"\n      }\n    },\n    \"metricId\" : \"qo6o\",\n    \"serviceBusEndpoint\" : \"ojnmshwekyldcm0\",\n    \"identity\" : {\n      \"tenantId\" : \"fr73\",\n      \"principalId\" : \"j630\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Kansas\",\n    \"updatedAt\" : \"2022-04-25T16:20:24.516Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a23d9d3-1d33-305f-a350-c5b6f0ba1e2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "097e4690-8f1c-3432-9e08-311905907392",
    "name" : "Gets a description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/00r8/resourceGroups/Mrs.+Conrad+Miller/providers/Microsoft.ServiceBus/namespaces/Donnell+Lubowitz",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "18tmmgrwudkjkddk51p8qd9y19t4j7xcbca65jtcd9upmgjrhto7ewzkv4c4gg33qqvmwibjbc8or7eqrqs5axil0jeop0gnwynn4eddpt3ld164jiexwl0sx473xs04s003a78xdt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"ya3l96q1pqrmzoo5t99m13lu6tn5mfmp1erqdlanbzwnqprtv97yh5qoipkxkrpyny3ene0bq0d7beelmxbu2bubtbre7utpcbfo8fw56sv6wrg7vxcmzrgurupfzuu5io3juff67bajl0al62k6kbhqrbuxcppmf2vcvp4d\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Premium\",\n    \"capacity\" : 2139408757\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-05-13T09:01:22.515Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/586263\",\n        \"keyName\" : \"Dr. Darell Heller\"\n      }\n    },\n    \"metricId\" : \"7t5k\",\n    \"serviceBusEndpoint\" : \"ndw89fbwwjsm9p5yqrmf8elryt0x9iu8kobqhpiujd1gfrkg2nrjh9makifrdgyawl6wk1do1ha4mezvft5trxou7qw5vxma7etr6lwpvmwt40cl8mxe6ax98e43i3dofcb4bsj5zmb1uzpp5mmihwbkitqlf3yx6e\",\n    \"identity\" : {\n      \"tenantId\" : \"7lp3\",\n      \"principalId\" : \"3t1j\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Texas\",\n    \"updatedAt\" : \"2024-02-20T01:18:05.515Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "097e4690-8f1c-3432-9e08-311905907392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a8b7adb5-7567-35de-bb50-009896414fd4",
    "name" : "Gets the available namespaces within a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/9z9q/resourceGroups/Dr.+Seymour+Balistreri/providers/Microsoft.ServiceBus/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "iepvos805"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"2nd3l16ymykcg4mm1k4lqb8h3bxwaeesgw8vxl4wy682cskl8uxty7yfr5v8tv34dyt83uvcr3g0vmojyofhjjrebzqc5zk2oclbpdfuhxngyi3oi71g2hn4tnnko3tkzyr4tzx6pp3a1045c18f91ebcfpl\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1570337934\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-05T02:48:17.514Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/587710\",\n          \"keyName\" : \"Ofelia Kessler I\"\n        }\n      },\n      \"metricId\" : \"ut2j\",\n      \"serviceBusEndpoint\" : \"ztaxumdrpltdsvxyx1oauozg3o1zrxxgc38xf70o\",\n      \"identity\" : {\n        \"tenantId\" : \"t4zu\",\n        \"principalId\" : \"45so\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Alabama\",\n      \"updatedAt\" : \"2023-08-11T16:59:19.514Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"11oy1ad4xskfoczptz134ld92equklndzv2oyw6qnpr4vmgddcn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8b7adb5-7567-35de-bb50-009896414fd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "794fda77-a0d4-3df8-ab31-bda13713aa34",
    "name" : "Gets all the available namespaces within the subscription, irrespective of the r...",
    "request" : {
      "urlPath" : "/subscriptions/83dh/providers/Microsoft.ServiceBus/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xz91qihtni28k5s6w1bdoef0v55"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"25295erip8bfbcexcxq7waoql3mqxjg75jxm8h1w4wdxf3vrh1l2m3h8wdnqkdbt2epj6dv3dtucp0myy7gz3b9cdz\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1517626444\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-06-25T18:59:49.51Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/769283\",\n          \"keyName\" : \"Franklin Upton\"\n        }\n      },\n      \"metricId\" : \"26vd\",\n      \"serviceBusEndpoint\" : \"sgng2z3pz1rtvg7le2zj4lwf9az7a4fd3dtx6ldaxffu804tiz4467pmpkp87scf4z9eajs0t7fne627dz4qurr8qus80hhtamzruzky8sm2ai6lgppejy5nkgz6bqdqnlv4r7082i7pqtv1allojlc1v4gj2jg\",\n      \"identity\" : {\n        \"tenantId\" : \"7wl4\",\n        \"principalId\" : \"94gs\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Louisiana\",\n      \"updatedAt\" : \"2024-02-06T08:26:33.511Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"y6v0tgrvbd9og87diczfch60jxosd\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1388331803\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-06-14T22:11:28.511Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/847076\",\n          \"keyName\" : \"Juan McGlynn\"\n        }\n      },\n      \"metricId\" : \"hz01\",\n      \"serviceBusEndpoint\" : \"ha74kjwl7weaqjj3dy3lilb9pqf4yh31l4dn3opb0ipy5g83a97fakgvaej7v2ient714jyhx8y26a2pvgpv8o1mgve5wl79sg7rphx3ihh6x3vfokn469070hl15164nlr9oes4euxbpsxz2kvf6z0bdsss34jh5o0mblqmtl39kdvg0\",\n      \"identity\" : {\n        \"tenantId\" : \"5qim\",\n        \"principalId\" : \"ubqk\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"New Hampshire\",\n      \"updatedAt\" : \"2023-02-23T08:50:58.511Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"8sqqgb5pq75ky2\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1594283843\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-05T17:54:26.511Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/914507\",\n          \"keyName\" : \"Karla Bins\"\n        }\n      },\n      \"metricId\" : \"2bnp\",\n      \"serviceBusEndpoint\" : \"p878xdxs42fvxztc6renkql5rxo8cudhhcm698zjd544zrqlpmu6iftq2k6gvkiz1ir0uvpiasxrvyc6txovnwu46fsme\",\n      \"identity\" : {\n        \"tenantId\" : \"5iw5\",\n        \"principalId\" : \"7dw5\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Indiana\",\n      \"updatedAt\" : \"2022-12-04T12:56:15.512Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"y8crgud0gwr7r31ig0ud3auvb2shdfolhu0bbiq4ibtwsv1wrq0qskcknvn3rjmosxe23j1nxe9mkjjhc8v82ikqz4y473gtz\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 568770025\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-21T01:51:52.512Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/809786\",\n          \"keyName\" : \"Broderick Cummings\"\n        }\n      },\n      \"metricId\" : \"h3q0\",\n      \"serviceBusEndpoint\" : \"98y4dsfmtolcv042ze4dgsxy528awyxueet8qd5nkf61arxfh7bavc11ajxy2v1srspz4l8iojhd77sujz4cad\",\n      \"identity\" : {\n        \"tenantId\" : \"9dg0\",\n        \"principalId\" : \"4ban\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Arizona\",\n      \"updatedAt\" : \"2024-01-31T09:25:38.512Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"rzec7352qp3gq7a349ne098w5vq1635w1cmw79s7hvq0q2hlx11phca9xlqmu8675kqgv7qmiqj33yn6dbp81m1uh6wz20ryj1n6jeme7a1je3d15yrpnbs6uui0xb7qrp0sklpoej0qy137p0z6o13eoxn9jysjc\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 39085276\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-11-18T19:43:42.512Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/131831\",\n          \"keyName\" : \"Stephen VonRueden V\"\n        }\n      },\n      \"metricId\" : \"f0gj\",\n      \"serviceBusEndpoint\" : \"euyggoqxevf14tu0b3tmi4bexk6lzblgn806psm5b2tov0jnvzi3ot31x58549dcfol71av3wh07r9d1gox2\",\n      \"identity\" : {\n        \"tenantId\" : \"51vb\",\n        \"principalId\" : \"n893\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Florida\",\n      \"updatedAt\" : \"2022-10-13T17:04:17.512Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"23n57nx1uyxdb0ktai73fjazxjsogp3gzphoqth3tt669514kzvcbuk0xn38kef8wpv7slw\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 1522556620\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-04T17:17:16.513Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/300237\",\n          \"keyName\" : \"Mrs. Tiny Cummerata\"\n        }\n      },\n      \"metricId\" : \"3xtl\",\n      \"serviceBusEndpoint\" : \"9t1f7tbu0dv1zjtlczo1ecf0fnj5iomm1ufcgdqg2knj3db85mwahpbwdgjanccbbbhxqy3ado8wi5t7m2sob2meow55wgee40t6qvu4jx12g6dgsxqvu\",\n      \"identity\" : {\n        \"tenantId\" : \"axv6\",\n        \"principalId\" : \"1dje\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Missouri\",\n      \"updatedAt\" : \"2022-09-17T11:16:32.513Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"ojjuwhx3ipps5swia6ch40hunxvvk7lfri4qaookytoynnkpgbn8g73ml3fonqzuh27slsi4afyr081ojni67dvfc5verate62jvqmkayaxn30r7j5d867o\",\n    \"sku\" : {\n      \"tier\" : \"Premium\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 852102967\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-05-26T07:22:50.513Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/610925\",\n          \"keyName\" : \"Rudolf Kassulke\"\n        }\n      },\n      \"metricId\" : \"xcvl\",\n      \"serviceBusEndpoint\" : \"51duva3xz72za80pi0el023ojupmliao0bc47b59esrexyo0dwq8loindimajexrk5zpenv0kv6gcewo78pokgqweovcs5v8kun9g8f7\",\n      \"identity\" : {\n        \"tenantId\" : \"s78c\",\n        \"principalId\" : \"g52r\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Delaware\",\n      \"updatedAt\" : \"2022-07-23T03:07:44.513Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"cb1d7rg6sbrtg66x3135qhp44g9lzdsv11pfef1rdcxr3lz7ovqvdpccaph4q4295k47rv07qa0de2jypb9ncf7tv97yln9adnyf5w830a7rnbiarqnor0ihqcgyhphmzdfmh6a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "794fda77-a0d4-3df8-ab31-bda13713aa34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "e075fa55-c00e-3f96-8a61-5784568e6411",
    "name" : "Lists all of the available ServiceBus REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.ServiceBus/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nk4vxq70t8ga7013vcfzsdo6k4pdywolmf9rrbipb5xes0i"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"wxcnypydsf05zon80bxv3i4tarl6fuvb5i7tpxtqs5fvqv2bhirxk8rbf2av85zv921og2nigacw6o1f0vdymhoyfa53zwhgvo4bvondszhhuycf77jpah5a8\",\n      \"resource\" : \"kiof5b5cm5od9ydf6ybat9jbmjfh4f3ty5lf36l6l3okwnfcqm4xzb44jw0lghdzar42escz2l3vjwgke3ud19a990qg5\",\n      \"operation\" : \"iem6zl8mw360hc24v43b\"\n    },\n    \"name\" : \"Carroll Kub V\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"xv7zlxpeipp0x90cxdt1dk6c74dnbd2xdourqrybau2zehposdld76hsnlwt2cartbpoqec4idot8zkpwggtvi0z4nugc6p9rvd3b50tinrubyq0uvihlkds0qc8lzlldlxk\",\n      \"resource\" : \"wce527p18tmr48y8e4zu7aho796mb1o1iccbrq45gf0a2kahy3e8g2izvyb8d6shlnox600kej2t0z4lwx4qiqi8f7qgskxrr3it80wjo2roqxcjwnzuprky516r5jpltoql\",\n      \"operation\" : \"owii3m3cc6q08eo60cdw8kws1f2ztdeyyx773vej74ie01dd74qvzzms059sbsxnk5xyrvgpvqco5s8x926845ll3dbbbujaeecguvludxkiihudmp89mh6kdj20yjsgmhr1grfvx0unrvp156q3hqpwjgkj2ee0a409pjbv20ysg6px3h6xuastxk68dtg\"\n    },\n    \"name\" : \"Mrs. Yer Lynch\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"4aiekb6t5ox38lgsfiryh1dqfxc7mpnejkb1qb79e2sb5c\",\n      \"resource\" : \"ttwz8xh2nugjt914pu2xfbx1qeeru8zx9d257k6p800d89xytwaholxx2rculrrvsraxb2tpwgt4wrkp7e0sgf0n\",\n      \"operation\" : \"ynk571oy3t2p7bo7pgs8xnbu8uqb2a3eeaw1etbzgwjw8iy5j6si27j8xs\"\n    },\n    \"name\" : \"Elias Gleason\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"f4l4jr7juluuvsxenz89e65qbyypuh3annb6ssbr8ubo2n28qjt1bszqq0g7b9gdy9b\",\n      \"resource\" : \"xmu0w4\",\n      \"operation\" : \"49e9uaovy6hvg1qfdjjegore2sdgvod777un0g1epd3twl3pc4mqvng8sr45xqwf09sysxyf3pbcuylppaswx8mx0cf05za7d1g1qb7lihetoskene2x8jb1rgz49r0jm1tdqcs8ias8kj0e378hi7lrkqoqvl\"\n    },\n    \"name\" : \"Lowell Gutkowski\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"aok21uiqae486247gwnpoyuzw12v2k3q75ulzfpf10soe3mq2adhwinugs2hm8nvt92fpv61uttxjbv3o9lrkzog7pg2w\",\n      \"resource\" : \"tn3zrahke101530k9ai30hnh247j7alsbura0sa0puu1k78rql2aollbe73acqfwpq0yzlxbqtsgl5s6ayucnp0g9jrdemycs2z7cfgype45sb075fiid4uz47px8ju6vg56lj4xlyg\",\n      \"operation\" : \"07fv7o92m0uez231335zjlut0z6u0kc85rooxmrg3uu5wmg90dvf672a1501ls58p8oc5ixl84xdp5ud47lcd2s4k7synr2i1b9ogco9vcrkavym697iookkaeyx36y3xwdi9wjlufw4t1k422tm0r8y0e42kzrq9rbz0js1a5gsth4ejjr68n2k\"\n    },\n    \"name\" : \"Roseann Boyle Jr.\"\n  } ],\n  \"nextLink\" : \"a13nch49v1om2hsggf754yd0rms2jzx30mgrhqn4i1dgmeu50vbhn32pjt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e075fa55-c00e-3f96-8a61-5784568e6411",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 24
  } ]
}