{
  "mappings" : [ {
    "id" : "ce882e6d-7c34-486d-bac3-f8c87d7b2b85",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/5950/resourceGroups/Dr.+Kenneth+Fisher/providers/Microsoft.ServiceBus/namespaces/Edison+Batz/virtualnetworkrules/Dirk+McClure",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8lsn48i4fqdrqhoc0gv0thgklpzw1cax4l3kplz598onh8vvzif925ugnivlamdy2e3iqkrpxkayxujs4soxg"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ce882e6d-7c34-486d-bac3-f8c87d7b2b85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.189308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "367966b4-ea79-4500-b149-90ae7ef555ba",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/1mue/resourceGroups/Juanita+Cole/providers/Microsoft.ServiceBus/namespaces/Hal+Cronin/virtualnetworkrules/Harry+Pacocha",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e614q6zly3lkl9gcv2pjjxoq8b"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "367966b4-ea79-4500-b149-90ae7ef555ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.189072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "705d3660-1923-435c-878f-d6702a9e36b4",
    "name" : "Creates or updates an VirtualNetworkRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/58c5/resourceGroups/Chasity+McClure/providers/Microsoft.ServiceBus/namespaces/Tran+Baumbach/virtualnetworkrules/Guy+Feest",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3eu3ene28xhhozcrzcqkc5q7nwenpkp7elyc39pw2wzwl1ntwpo8o1u0"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Hilda Pollich\",\n  \"id\" : \"i30m\",\n  \"type\" : \"5t4k2lbgxo2p98v5ha3gaulfjx3s8vsqz4pi4fnnmthsj942i43s40cyquogdduc4b60retr8jmjobng4ohwe\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"61wc\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "705d3660-1923-435c-878f-d6702a9e36b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.188826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "Resource ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "154ce7ec-5de0-4dce-9ac8-2404b4a20e7c",
    "name" : "Gets an VirtualNetworkRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/kx86/resourceGroups/Dr.+Jeffry+Skiles/providers/Microsoft.ServiceBus/namespaces/Claudio+Becker/virtualnetworkrules/Scott+Cormier",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "k18b0r40viwnx2s0pe8udrf695vz75xpucathjr9ski58x15gw5tgbpgzhceefqq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Abdul Gusikowski\",\n  \"id\" : \"kvnu\",\n  \"type\" : \"85t9ygfdxo282rfhodj98nfmjpfva4k\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"x02h\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "154ce7ec-5de0-4dce-9ac8-2404b4a20e7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.188365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "Resource ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "16d5f108-0dfc-465b-b3fb-523f7538e357",
    "name" : "Gets a list of VirtualNetwork rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/46l0/resourceGroups/Colby+Jaskolski/providers/Microsoft.ServiceBus/namespaces/Reanna+Koepp/virtualnetworkrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e4km1gtqtkyio7cs010wkf6pi1o82isyagbyfzsbektn924k115e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Rossana Ortiz\",\n    \"id\" : \"rh66\",\n    \"type\" : \"5p1w2rfdzibdx38xah855610hw62n561ro6ibx2l8xa1wgzwhwqlbja4v99yv7cuv446baaytl\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"69wc\"\n    }\n  }, {\n    \"name\" : \"Georgianne Hane\",\n    \"id\" : \"nyvf\",\n    \"type\" : \"n2try0qj45v92e9tf8d6wkxxxxvwt04cwhaub19ci85s9vxr8k58cphez29shyhl52mxbeoz4w8\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"sy6f\"\n    }\n  } ],\n  \"nextLink\" : \"uw4iouoc526rhzbqeh7baqzj3nm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16d5f108-0dfc-465b-b3fb-523f7538e357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.187865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListVirtualNetworkRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List VirtualNetwork Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ea6092dc-6bce-4249-b18a-40d07a99e43c",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/842l/resourceGroups/Glory+Pollich+DVM/providers/Microsoft.ServiceBus/namespaces/Dennis+Greenfelder+PhD/networkrulesets/default",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mzraovl8x5zmjw43zwd247kz58pzjoqbzy9atl7orpwyrir7idlemi2b4sbcowl8icr7xm1tf1fxl2dapl7xmro6nq7dh"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Galen Bins\",\n  \"id\" : \"pboc\",\n  \"type\" : \"19wknbl3lvo4bxblz3kbt5t6nhhj7pdhdw11522hff793s0lg7bqp13g6h8s97lopm84dfv0xg3s9aaj74cto94gs3iqouz687vcwbzzoljiljdygumw2w1i6hp9ppsvggxat8nadfs7e71y0mxyegpziorxbizvwgq25vz1m9lic5i0dg10onm\",\n  \"properties\" : {\n    \"defaultAction\" : \"Deny\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"8p1pb58owee88cfz1hfql17ya37hvkf51bh6s1ku97kr8bskng50pfgkpvvg382qx4qecqj2q1ies9u96h5c6wjjquaxh0x7wsmebt44j2ue99qwliutoaph0\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"znngloym4f1wwuqpuvbaeyjmvsuxkacjk4i969utgbdmepeo4up5gyxmp3zhmspzbigfo0763iheq49h208zmumhavvulc3j9xlizaizpso8x5yllq3sjtz7kjca48c4yedef96j800s5hh30j4kc1n\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"wf37ja1cxsq23cdj2ikomf6hwrcpfyjwi2oyafc86o77xq9qb4gyxl1gbzmmzh5z0wwolf1hg9keg\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"wdfax81ezewy99y6y20a09mxu\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"2yebukhuckwn2xgqi7k56sezd0u69wc68vxmo8h90\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"mep4\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"6a20\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"ze63\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"6gk4\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"61k2\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea6092dc-6bce-4249-b18a-40d07a99e43c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.187188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "8ca80fc4-7862-4153-9a6b-d752cae2ec88",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/m840/resourceGroups/Arlen+Hegmann/providers/Microsoft.ServiceBus/namespaces/Billye+Gleichner/networkrulesets/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5wsv6dinfliz017hj3n9hhnkkevdo70rbdolxl9sd1rgcwsm8xuqom0yn81x2smegcv150uonlr0hcoj58lqulxcvshikrpejrszuv7brpz3cwyw6s1r7h4wh"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Brendon Hudson\",\n  \"id\" : \"6bs4\",\n  \"type\" : \"zub73c73z25stkfndl3h1r65a6fihncqgxrrc04lem77prezmiu33bv5a91vvnxqx25utx\",\n  \"properties\" : {\n    \"defaultAction\" : \"Allow\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"m0za5q4h6k4o39zws3zr4wrbxtl7pnf\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"jbe30iyqtf5iykv7dft4z2e1brkf0ul24kqat1ja3udzdw0ei50tw4s8xdm6oruofpm9fsbtxemituu88591kpmin93y0ix2otmq\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"yu4p3woecuquf520h9cjh5cubi38ruzwd7wc55yz0lrw2hd9otdtqrjahqybyc9qunwua0c1wwdt922ljdozvzgonwbwi2xw4xm2xetwftnmzxqqiqbddhzlnmn5fbbuhd3kuq68saoutmo55e3wvrntbykxq0ofvbw9iq6dg\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"93l916\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"eqtbznycmw12coyv6pkfe6eq6sp7c1m1v2anp50yeteuo2k5uqt4nyg8w7ta3lekdqpavcndtrdfqyv9k6f3be946y9m86xx9ial6sqr74o9kwfdfokje40bsxb2xewer79ktplnjexjcgtvd1ua\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"h85zkd1ttavpfjfqpvnudxv7\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"kzhwjxy7t9f4fgwaytgmrt57ab4jlwhd7jgwy7\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"tgrz\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"tyqs\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"q966\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ca80fc4-7862-4153-9a6b-d752cae2ec88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.186272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ace8d52c-68de-496d-961f-d01f391a5185",
    "name" : "Deletes an IpFilterRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/464p/resourceGroups/Terrance+Kunze/providers/Microsoft.ServiceBus/namespaces/Gail+Rippin/ipfilterrules/Blondell+Renner",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3xvamywgtgbwrm5z3t3fqtwutfnagb87k"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ace8d52c-68de-496d-961f-d01f391a5185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.185461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "ea54dadf-001a-4490-9d80-fd0c721d0999",
    "name" : "Deletes an IpFilterRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/4z21/resourceGroups/Shawna+Ratke/providers/Microsoft.ServiceBus/namespaces/Andera+O%27Hara/ipfilterrules/Branda+Roberts",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "u7w1qcmjas6vcyt5cjdpb25x46touiustjr0vaekbdzn"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ea54dadf-001a-4490-9d80-fd0c721d0999",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.185222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "dc8ed983-8429-4294-b103-7701119a69f8",
    "name" : "Creates or updates an IpFilterRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/0fog/resourceGroups/Noe+Reinger/providers/Microsoft.ServiceBus/namespaces/Fatimah+Lynch/ipfilterrules/Margie+Doyle+IV",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "66y7asnz2p1xzu3wvihj56ebnxdxp71pnyspoi6uy47c4yfp3hr9g38c2w0dklh7ntu7d59qjq3ztkr1zy6f1d558madk58qt4886lks38kbetmcpfwbbesqnvaivt2tvm2wikdwffe3g5m"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Hermila Labadie\",\n  \"id\" : \"gy8d\",\n  \"type\" : \"98dvdzq569p9nnzvzuewqx1yygfzacthennbaijm5q5qy0abal4hmr050qf043b58nipxrx0bsen420q1rkmxmej21i1f0df8jkjysz7az5\",\n  \"properties\" : {\n    \"filterName\" : \"Miss Abel Johnson\",\n    \"ipMask\" : \"zin8q6cq3qg2bl0jygkhpemexqb8480s2tm5l5uey31ycgfezm74owvrsqyzbr58mfqg0ok5m93qmwng31p9kcu5625lgls3i1jrqapfnz7hv6fbh6yucfep0cg8v6mrvu5szdpl72p15s\",\n    \"action\" : \"Accept\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc8ed983-8429-4294-b103-7701119a69f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.18497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "af035342-8263-4387-9118-7341c192c428",
    "name" : "Gets an IpFilterRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/1ml1/resourceGroups/Federico+Streich/providers/Microsoft.ServiceBus/namespaces/Larisa+Gerhold/ipfilterrules/Anastasia+Bruen",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8epwm51srjuvesonm9h58mztqkoq2ss"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Sima Luettgen DVM\",\n  \"id\" : \"2su3\",\n  \"type\" : \"1jgqa1gzp98ywu6xurt7xzh7xrjt0ay\",\n  \"properties\" : {\n    \"filterName\" : \"Lavern Denesik\",\n    \"ipMask\" : \"lr9elq7c637qn4pas0c9x103vvin7vhssqq2sabg6j4qboyeo1tr0q26r1qf3of82fhhhsv28a4erv1udanfs6q2ft8g0fcugl6rk8plangy7eefd7gcs3xfl9vca6heed1cqzvfpnf7xk8kvruetkraii6uyb1hcve0vo50920rf5oim80tiasfm836n1efqb1n6ntp\",\n    \"action\" : \"Accept\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af035342-8263-4387-9118-7341c192c428",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.184474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "b89d59cd-9b5d-4259-af3c-bbdb3a9eae79",
    "name" : "Gets a list of IP Filter rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/s559/resourceGroups/Marco+Larkin/providers/Microsoft.ServiceBus/namespaces/Filiberto+Hills/ipfilterrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ighiowg8hj0adq8awq3cz630g8bdhiun6bwu7n9wg7pushmmpwhhukcg9u1lo842i0csiefin89hpmichu3n0q1c46gu314g6dxunv4xg835fluxntpdwryn4zj1ir9o37wr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Ola Zulauf\",\n    \"id\" : \"59qm\",\n    \"type\" : \"osyi65c2lai3wemvwqew2tqvv1w6rt9mtgjlli1z7wy0o2ickqj7zwcku215hlmketqyhuctft5v6f22rphm7460wfjlns5mjrscqrf\",\n    \"properties\" : {\n      \"filterName\" : \"Ryan Stanton\",\n      \"ipMask\" : \"o1r5pqzw0bn5ps8o3irrv70he8fumjynedyeg75vkg9ljoc86ggt519x4v1023bdln5em69gyjgme278j96slfm67v9bh9poehf81b49asrhhz11wydb74f4qr84ybo2ol9xnqo1tgnhyv69p63jrt0qmzqzbxtakiv9t6n4uugbj2j95txf\",\n      \"action\" : \"Accept\"\n    }\n  }, {\n    \"name\" : \"Launa Cole\",\n    \"id\" : \"yg7f\",\n    \"type\" : \"k55rvbmfo53yl5w0l4axp4c1aa0i2te3mj15wlopt559gqii37somy1sm9deuguqalpu2s1jpjr48bnklmfrdcelqgh4az24ytx1bxsn70ujkmkiqnobi90ebfgg4zsn1u8u4s1zknldqw8w6x7nhmltp7xpu0ud4s3329otj09m49aaixbkqk70yb14qaak1wi5bzp\",\n    \"properties\" : {\n      \"filterName\" : \"Holly Zulauf\",\n      \"ipMask\" : \"xnddvwa\",\n      \"action\" : \"Reject\"\n    }\n  } ],\n  \"nextLink\" : \"h5holyudojyyowklyx9isnfzo490cxenesaebij5bznf1hoxmst6bvrfg0s6vejn7gejfja1y5dj8syij1eypq6cngur3nt968un4ozt6vk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b89d59cd-9b5d-4259-af3c-bbdb3a9eae79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.183944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListIpFilterRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List IpFilter Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "126df73d-641c-4e7a-bba6-f8f134a237d4",
    "name" : "Updates a service namespace. Once created, this namespace's resource manifest is... - 202",
    "request" : {
      "urlPath" : "/subscriptions/4e30/resourceGroups/Temeka+Paucek/providers/Microsoft.ServiceBus/namespaces/Forest+Kozey",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wj4gslzbtusp7pior8485euf7pdqh2g9lgiebhj4v9ajgliwl3xqb6vj6sbu908zxx3ea14ckxpjdi28wxg4j658meka74eqb08ajcpj0nhwdqsga14was5bbgvbrmwlvjpv2pa6n6ho9fuhxgennbcfy2pzwfwltv"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "126df73d-641c-4e7a-bba6-f8f134a237d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.183241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "dac36bd6-f346-47af-87e5-8c4ca94c4b99",
    "name" : "Updates a service namespace. Once created, this namespace's resource manifest is... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/rp66/resourceGroups/Grisel+Becker/providers/Microsoft.ServiceBus/namespaces/Jeana+Murphy",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "h2fwgnfluk4yo8l1xic3qf093prlv609xgyd4o50odvdzb494yrrp1khtr66wi2t8y2xq59aq5g1o0io79hl4mkx8mqpfwwxtngm3yuank3t2duvy7n5slry"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"kxpdejplyl9cx0zghjwfzbr8t95c1a3a3a3f7ciyoxvoawdjiff3kll2688hg9rw03d96wmnmohqbgd7cuk5yhaq9fihwff6s0q9lgzfnkk6w597f47r6lov5p39ubl9ibj5yj42fysjw1bzxwvvhrweafy26h\",\n  \"sku\" : {\n    \"tier\" : \"Premium\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 1724654240\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-04-14T04:50:29.182Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/218801\",\n        \"keyName\" : \"Mrs. Katie Herman\"\n      }\n    },\n    \"metricId\" : \"5611\",\n    \"serviceBusEndpoint\" : \"h4gps4wd66c2ji5idav9ttyjbrsujxnitbtycrvuv1z8g14038dufax6s2m8xknkwlstpdaaw1t0k4sugzbkoaafqj5crx70eeavy2fck\",\n    \"identity\" : {\n      \"tenantId\" : \"znn8\",\n      \"principalId\" : \"ht58\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"New Mexico\",\n    \"updatedAt\" : \"2024-01-30T19:59:08.182Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dac36bd6-f346-47af-87e5-8c4ca94c4b99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.183042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "c098f510-30bf-498d-8f5d-7c1c74a8d20d",
    "name" : "Updates a service namespace. Once created, this namespace's resource manifest is... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/75kw/resourceGroups/Abdul+Gorczany/providers/Microsoft.ServiceBus/namespaces/Pasquale+Dare+Sr.",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e5l7ai8v5i392zi0s1yspq19ij2t9bnrcfkoaorjoonuqwm73nddfpqz13cvqy415v73cxghvrcilxxlc6leet0p28puw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"31am56ijl2jp\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 2034074950\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2022-09-14T12:42:14.181Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/315849\",\n        \"keyName\" : \"Raleigh Heathcote\"\n      }\n    },\n    \"metricId\" : \"6286\",\n    \"serviceBusEndpoint\" : \"igw41epxxee2de1isnsc9kon88yiwtgsdi2fewaordz381562iy5ow0027o8224jr0pj3kkn619jp8nx1wvptho9b1de70145ah0pz7cl627vn3o7sfn4r03eiq63o\",\n    \"identity\" : {\n      \"tenantId\" : \"rl22\",\n      \"principalId\" : \"l5tf\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Washington\",\n    \"updatedAt\" : \"2024-02-14T17:49:47.182Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c098f510-30bf-498d-8f5d-7c1c74a8d20d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.182369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "e72b5824-710c-4b20-96cc-a3e000456a04",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/p808/resourceGroups/Dillon+Renner/providers/Microsoft.ServiceBus/namespaces/Detra+Kunde",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4j01puua6z0ws6u2vu80x2np4iew8r0tdua06xymqgoho1vj2evrui6qubuxmn4cws3gs"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e72b5824-710c-4b20-96cc-a3e000456a04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.181666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "573cde83-49d5-46a1-9091-fd603c132177",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/ch5b/resourceGroups/Lindsey+Boyer/providers/Microsoft.ServiceBus/namespaces/Graham+Rogahn",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y0gwnjntfwzbe31p0sj4ucmsqtlptr2f4q7xrlhshhgqyju7vsngwv53kdi"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "573cde83-49d5-46a1-9091-fd603c132177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.181478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "2cba03e1-bdee-448f-8e55-5cd815a49ed3",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/8g53/resourceGroups/Whitney+Langosh+I/providers/Microsoft.ServiceBus/namespaces/Queen+Johnston",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "38qqfxv0kp0lpcbne201t6z0b5v8672z7lkuloyrsdu2tq1bj62qzp33tb6xqkpen4fw0l73qp3giai62izrvsaxnvu0m01xn2b5z2lt4p7lx"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2cba03e1-bdee-448f-8e55-5cd815a49ed3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.181288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "9c20ed77-8405-4b06-8e6e-9687653b249b",
    "name" : "Creates or updates a service namespace. Once created, this namespace's resource ... - 202",
    "request" : {
      "urlPath" : "/subscriptions/l7ed/resourceGroups/Rodney+Wehner/providers/Microsoft.ServiceBus/namespaces/Irene+Champlin",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "10khekqk1ip3h80lieoohvxvx3js6rbwk9u1lcbvctd6"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "9c20ed77-8405-4b06-8e6e-9687653b249b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.181075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d0d5001c-1080-46cd-a683-f3797b170d25",
    "name" : "Creates or updates a service namespace. Once created, this namespace's resource ... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/qyoe/resourceGroups/Douglas+Herman/providers/Microsoft.ServiceBus/namespaces/Edgardo+Braun",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2fgsgf7c14ycau7jzcdjfuo7tj1p8xbczxosswgrg0no0ayzukoreaf44ermp4q0utzik00wdsyr8xe69p2jgjbewe5rkg8k6gik8n9nwik3bk687moynox38sk0x7wknk3hnsizu05v4e0987x8c"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"bpa89ejtyujyf5yr8emd90pi13deeiuzg8zaq7rkqs31i9s4fim4r08xo39o\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 628651770\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-08-19T15:25:40.18Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/277585\",\n        \"keyName\" : \"Efren Pagac I\"\n      }\n    },\n    \"metricId\" : \"h97g\",\n    \"serviceBusEndpoint\" : \"phkhfj8q\",\n    \"identity\" : {\n      \"tenantId\" : \"hfvl\",\n      \"principalId\" : \"h37f\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Indiana\",\n    \"updatedAt\" : \"2023-02-24T15:25:16.18Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0d5001c-1080-46cd-a683-f3797b170d25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.180872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "417f58fe-3aeb-432b-9dd1-088cb6817e8a",
    "name" : "Creates or updates a service namespace. Once created, this namespace's resource ... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/q7gi/resourceGroups/Monika+Mills/providers/Microsoft.ServiceBus/namespaces/Jenee+Cronin",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3ou5w0n2quvf6dtnnyinzyon9quvrw3fnwn12ntna73up3c8k6lbggkjctuijxbs2e1esddzy9h99xoexzjtkyit5ujswpj0saft3hpc5xlm7u3inkzgb9lpvvrc5us"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"j2j48dh90dp6omcfu2tc1paiycx1fzmw20l3bo3svxxi9rnibogz2hjl3qjmeexupz\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 1263624659\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-11-05T05:55:00.179Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/529667\",\n        \"keyName\" : \"Chaya Zieme Jr.\"\n      }\n    },\n    \"metricId\" : \"ltst\",\n    \"serviceBusEndpoint\" : \"hb8qq4e2fnakykhrbw847q48kqxo8hlzwf2a77whlpunn7byoio1h1yzxuq9pp2o0na8bv7ecth1k8bpfuatcruu62hlrw2ukvuo6obpwqhahyqrlw4tgs6qnu2nwvjtw84tsukaulgdazqc58b9pzm53oo1qusxt9d4pciw99y3zpls4zno7u4wqu0b6ti2r7sgp3\",\n    \"identity\" : {\n      \"tenantId\" : \"5qd6\",\n      \"principalId\" : \"idpy\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Wyoming\",\n    \"updatedAt\" : \"2022-09-09T20:09:28.179Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "417f58fe-3aeb-432b-9dd1-088cb6817e8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.180189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "bd3c8104-2602-4d47-b3fc-33c53f24b541",
    "name" : "Gets a description for the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/5537/resourceGroups/Wiley+Turcotte/providers/Microsoft.ServiceBus/namespaces/Jessie+Romaguera",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "j9uom82ig051ves9hurv5c6pyfff55t1ijm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"zlwk30dbh3cjqjj8u94l9m7dq6d33vfcs2pwsz4cx6nzh15m5e0eujx6ghsrv1xdawdy2rj6jlem7x4abvtvw6ai70hvozphulkv33pho2\",\n  \"sku\" : {\n    \"tier\" : \"Premium\",\n    \"name\" : \"Premium\",\n    \"capacity\" : 1703894564\n  },\n  \"properties\" : {\n    \"createdAt\" : \"2023-07-31T08:02:55.178Z\",\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/185993\",\n        \"keyName\" : \"Gerald Baumbach\"\n      }\n    },\n    \"metricId\" : \"d99f\",\n    \"serviceBusEndpoint\" : \"jkv5couufj43q3lgbwfy0fg8fexog4yaqwx4yf91vwzk1ovo14xiuffb6chhws9528kalw5psw8daco6gs2jm5b1rrcrsgsgqickcp47rk7ypejz113mq72n4xpwjpdgivns84t9zg5ba7mz5y75w4hgccq2z2bkrae7do82cbyklx\",\n    \"identity\" : {\n      \"tenantId\" : \"r1k8\",\n      \"principalId\" : \"053o\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Mississippi\",\n    \"updatedAt\" : \"2022-07-31T11:55:00.179Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd3c8104-2602-4d47-b3fc-33c53f24b541",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.179496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "$ref" : "#/components/schemas/SBNamespaceProperties"
              },
              "sku" : {
                "$ref" : "#/components/schemas/SBSku"
              }
            },
            "description" : "Description of a namespace resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "4155e773-20a3-48fd-bfa7-5c88c627d36a",
    "name" : "Gets the available namespaces within a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/q4ey/resourceGroups/Rolland+Franecki/providers/Microsoft.ServiceBus/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "939suahc4ovnp0ilkvi0mbbtrcicv12j02lxwuuq9s33lrz6lb9ouu53q0t1xjp2s04g836h416vf59058yrxixn1bzroqjgg9b4nmvcvz3"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"x9sbv8zme57fl\",\n    \"sku\" : {\n      \"tier\" : \"Premium\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1648514138\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-02T10:35:10.177Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/921132\",\n          \"keyName\" : \"Lester Wisoky\"\n        }\n      },\n      \"metricId\" : \"8n7x\",\n      \"serviceBusEndpoint\" : \"t1o1z88ja4ojgjn4580wsecv08ob1pbqlgcn3ljg7z59q1uvi8dgfy7fhxm0ursd3a5sfhxo49g8f89bmoy7h7eh3ufxbnr7ra2hc4b1wzsbpaw1\",\n      \"identity\" : {\n        \"tenantId\" : \"6rpe\",\n        \"principalId\" : \"mu48\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"North Dakota\",\n      \"updatedAt\" : \"2023-11-09T07:16:38.177Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"rf1ndzcjh1u4jhc97cco1d\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 111455627\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-27T11:09:56.177Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/714499\",\n          \"keyName\" : \"Britta Toy\"\n        }\n      },\n      \"metricId\" : \"d9m9\",\n      \"serviceBusEndpoint\" : \"7xczejzq92qvts88i5jtu9i3lhxvtfo8ecengx6nsyv221looqfm0r2qvtkxak7948sey0j9jzdt7yxaitejr6a3388hx16yroxva6rf94njolle\",\n      \"identity\" : {\n        \"tenantId\" : \"5672\",\n        \"principalId\" : \"r2i6\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Kentucky\",\n      \"updatedAt\" : \"2022-05-17T17:49:51.178Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"w5k6kvt8q4pd6o4nhza7tlapxd8cntdrl2mjgv568c3y45nahq4l3mvj8go6erw0shg0l3g38v\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1086397080\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-05-21T11:29:18.178Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/784347\",\n          \"keyName\" : \"Mr. Nichelle Gislason\"\n        }\n      },\n      \"metricId\" : \"qyfd\",\n      \"serviceBusEndpoint\" : \"82hu3nrdu4onlblah71v7xvcyfg5b6qx\",\n      \"identity\" : {\n        \"tenantId\" : \"i2p4\",\n        \"principalId\" : \"0u4h\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Wisconsin\",\n      \"updatedAt\" : \"2022-11-29T00:51:07.178Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"q4d9j2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4155e773-20a3-48fd-bfa7-5c88c627d36a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.178779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "9079357b-829e-486a-8917-20914ce9f984",
    "name" : "Gets all the available namespaces within the subscription, irrespective of the r...",
    "request" : {
      "urlPath" : "/subscriptions/pz06/providers/Microsoft.ServiceBus/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oeakv5i5c0loju0a5ddendb046ari1k7ytjr5dzpth0c8qcps0zciuphoxj5z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"4zd5jev85ji9avljqgoc4h\",\n    \"sku\" : {\n      \"tier\" : \"Premium\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 261964830\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-20T00:54:01.173Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/326459\",\n          \"keyName\" : \"Ava Lang PhD\"\n        }\n      },\n      \"metricId\" : \"f5dc\",\n      \"serviceBusEndpoint\" : \"9rb3k1hswyi59e1fqziv84eu948rp6w6104vm46va3ki29nnrqfwfxi7ku0n55mnld26cfavo6rn5dmte0pasbforj517b2koggkllt1znx4sxo3fcgi761gr1pqxr8vzs5trvkofemihiz\",\n      \"identity\" : {\n        \"tenantId\" : \"xp7w\",\n        \"principalId\" : \"1ox1\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"New Jersey\",\n      \"updatedAt\" : \"2022-11-28T23:10:10.174Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"jxjney6d8djj8g6zbc2ts6uzsaqwa0wudfwx6b8xxr68locy0phbyna39hgw1mt8ez2krxj6nf30jlogy5blxj9ugs5hbrxhq10abrj89y9fyni66dfyfon7xk9nfjmiqwr9mp02n4pttqdbz1ysuowr995lbeyqht\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 1901910257\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-01-22T09:03:58.174Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/511265\",\n          \"keyName\" : \"Elisha Reichert\"\n        }\n      },\n      \"metricId\" : \"ol9w\",\n      \"serviceBusEndpoint\" : \"0e8lhdv94e8c2p4hfm14bxs50yslcpyvd6jdrks6fhayg4nxs\",\n      \"identity\" : {\n        \"tenantId\" : \"1512\",\n        \"principalId\" : \"x585\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Wisconsin\",\n      \"updatedAt\" : \"2023-02-05T05:56:18.174Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"4u1hlkzxqtr9pefej25bg1dd0skodjh8udfvbadquxf3ytomyjp465\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 1635911304\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2022-12-14T02:42:29.174Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/848677\",\n          \"keyName\" : \"Marguerite Donnelly III\"\n        }\n      },\n      \"metricId\" : \"lg8h\",\n      \"serviceBusEndpoint\" : \"g7dfxvquvv5gjo7ek0h758s1cq2iz7akcxecu2a3iq6vcac9\",\n      \"identity\" : {\n        \"tenantId\" : \"2in2\",\n        \"principalId\" : \"byj5\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Alaska\",\n      \"updatedAt\" : \"2022-10-09T05:34:44.174Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"0ktuszr75l869s3sd5tzcoqenfm6i1gamc38puubwxeejkcjsygh6eur9gr25es7rjjqz34f3lcn09kuw5wopumzepm4w8hebrw47bzfene3fjir6ml9r81cpk0\",\n    \"sku\" : {\n      \"tier\" : \"Premium\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 2018072743\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-02-13T13:36:20.175Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/325364\",\n          \"keyName\" : \"Gloria Rice\"\n        }\n      },\n      \"metricId\" : \"5635\",\n      \"serviceBusEndpoint\" : \"s33olmvbughg9jd7iew52pcm5h957dpt841ushvct8v0o82ysidvnsyxzojk5f8cs645c8jrbae\",\n      \"identity\" : {\n        \"tenantId\" : \"g17y\",\n        \"principalId\" : \"26kx\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Texas\",\n      \"updatedAt\" : \"2023-01-26T02:38:52.175Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"tazgjpw1us\",\n    \"sku\" : {\n      \"tier\" : \"Premium\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 1511362313\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-07-24T02:02:26.175Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/468674\",\n          \"keyName\" : \"Bennie Lang III\"\n        }\n      },\n      \"metricId\" : \"17zi\",\n      \"serviceBusEndpoint\" : \"kktjzgtnweidmvmsmpaxmivc6dg5irtu0b89ol1omdg1i84xfordvw2jof7b\",\n      \"identity\" : {\n        \"tenantId\" : \"7am4\",\n        \"principalId\" : \"3146\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"New Mexico\",\n      \"updatedAt\" : \"2022-05-23T13:07:49.175Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"z6c5iqz1vi8gup\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Premium\",\n      \"capacity\" : 2008245656\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2023-08-05T06:41:00.176Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/742087\",\n          \"keyName\" : \"Clay Larson\"\n        }\n      },\n      \"metricId\" : \"lsj6\",\n      \"serviceBusEndpoint\" : \"539ho05tpur6z7s4w0o1avec24okc2hwpaotprcu\",\n      \"identity\" : {\n        \"tenantId\" : \"4449\",\n        \"principalId\" : \"4ng3\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Kansas\",\n      \"updatedAt\" : \"2023-04-16T21:21:52.176Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"3rn16t4adrou1hbkascgqr3q8cbzazhljqojgtpxebn29v979fp1q2pvqwviugqvh39zmwla5hb9jbauzi3i44060kzza91jctdq10r7bo34pufos02bgie1yxhloz8y90djntjmbzk7s\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 1031326430\n    },\n    \"properties\" : {\n      \"createdAt\" : \"2024-01-07T03:11:35.176Z\",\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/777250\",\n          \"keyName\" : \"Renita Fisher V\"\n        }\n      },\n      \"metricId\" : \"yybr\",\n      \"serviceBusEndpoint\" : \"4g7g4460kae6kyrcehwo8iqw8slq8dlu51x1jgico3qfy68cjohl40lt68gr9w7c6fmbdq\",\n      \"identity\" : {\n        \"tenantId\" : \"7vyp\",\n        \"principalId\" : \"qkq9\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Colorado\",\n      \"updatedAt\" : \"2023-01-22T15:57:39.176Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"p0gnxvqworvajlavco4f4z396mkpjlmumc5oyyfqmiap\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9079357b-829e-486a-8917-20914ce9f984",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.177145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of Namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation.",
                "items" : {
                  "$ref" : "#/components/schemas/SBNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "afe1bcfd-430c-4295-9036-1b81199be5c2",
    "name" : "Lists all of the available ServiceBus REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.ServiceBus/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "disoao3glndru5vml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"d41954jhndeerzymbwkvb0sc2w6ymnfijkuyhiuj9tbx3h5v9ygvbfzrig71z\",\n      \"resource\" : \"f1y5aueuciu1ab3rpz3k2a625pf0txsmuzbmlnphsrlcjsnzrxf7ntqhhbsez9bmulj94ln8evlb1oejvatrlfyod6berubzge773hqmedddwscbbegoema5yp1ze4wrfvj39z\",\n      \"operation\" : \"2po97m2e1hu2qzhdj2xfkgqt2fujrihdui65sfepz2frhzomlgkdikge9mn7uy9sm2f2x73hfrcihzakxq8cih25f3d2vsaz0toqp6et4ody0cug42puv7n791\"\n    },\n    \"name\" : \"Reyna Lind\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"fkkqd1a73fgwn3fw75\",\n      \"resource\" : \"57gxe2x6jhpz13lfa5a6tzex51if7ei20vpmblhnc54uyl3przcgqx59yccpealpt4x3g614juzrpg1h8naptmbkgif1xb02ndej6km59yccdqpqlbgq\",\n      \"operation\" : \"s7x98hgml9m7qj8q3tg9mzb57po\"\n    },\n    \"name\" : \"Prince Aufderhar\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"fn6c4veofe10e4g41jdt5kozl2r1u7jaie41akle20wge3pkm2r8yx7i0wi4wl1guh4krysfenyomqm1a2pp08nqb4sdzeisvgwarcqc02yoe2jyhc1mj\",\n      \"resource\" : \"s2byz1bf2800v82a6tco3fvrz9gnn09h2wvxck2l8w5xtggznxwzt8arrrw0lrh0woo1vg1gwekjy3jpzduwjs2taibg3bfzak1sytvnoz53bl9ytn7v60mjo1is037e8uzob1bwthinktc0wlzxyjsfus8juw\",\n      \"operation\" : \"gus0092upu51ri720xgw4uiq3gvg1y6y9klshblqtzvtmh0w7flscsp2g8vjlp0ua2af190gz0bk91l6c28fifqow3gbgrxowb5toj3y6y10kxqgg6\"\n    },\n    \"name\" : \"Robt Gislason\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"bgxc96b\",\n      \"resource\" : \"tdgt4q6xrbge7sgtfolz8\",\n      \"operation\" : \"cuoi9wrqu5z7rvjqs5mgppyj9gryhqom1d8oui6gfeuvmso4154xfytgd262auz5o68mpztxb7m8mp2o7xo4rsh0axxxgdwya95rwa3ze6sm160t1lqo2y6p8aved5czlva38gcdwl0op32iwxv68xkhoohq171fw3czpu1j7412cz\"\n    },\n    \"name\" : \"Genevive Fritsch DDS\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"dq0tgm0kbswndwdr9zgvvdyottj925ze614fuwk4u4ishobq3t0aeefhch4zhntmav6re4jzhajkjqb5a141825iop1zg1akhnwajpyns5izceuf2d2z6t\",\n      \"resource\" : \"xwfyckkvsp0ssyekrdgt2z3w9pdnyxj0nvc6iumz2nolssxjkm5ti1nxtdv44mh7c2mb6408d5qf4elkaoaj3cksgnqk2b838dm879erscqb2xbbdgu471wq94x5hixa42cpzboys7y9r55ge9mkvgx3cza8hz16jj4bkku60i4cz6onlfidr\",\n      \"operation\" : \"nfh368l2m3mmbzk9go6snpau1r1epf34lf59ieso0hfs1ljn5cjncg6tz33xhxcyhc0bp7n5n1l84oilx29yac8effozihzqb1qu7a6awa3huyfcyrwzghh8fv4xq7qdfys7\"\n    },\n    \"name\" : \"Nathaniel Bins\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"t9c30nf9stbal42c42fsurbn285neb9zuclah98jh89nxbsd9v86bvh1lb9co36hglyx5b42ngf6l7dvdly24sjp40u4s6gm3t279051fnp16ihncs1drao0u2acnrq6q7m2ks415\",\n      \"resource\" : \"uqzmwqp0sv81y1v0lry4lp2pozpduh4nciwofycibozou4ak0ug\",\n      \"operation\" : \"8ksyzrrr7fed2bz8ke2jqs7ft5yyw4bfg7q49tk61op1mdq4lzrxyb1r0o98lio6z1numrs12us6e8hozl4xrlfddwlqh3qklcqpwy7y0iqabuolq8281eb44imn\"\n    },\n    \"name\" : \"Gudrun Olson Jr.\"\n  } ],\n  \"nextLink\" : \"4r0rpj7qjzazonzk2ii2b0rd164fwnyr854m21zp4kehlowxkkcy482kss60krxmc4sq3qic2aflfdrlfolfms0oaiw4hieygq6vly2u09r766h6sih3kse56bi8gm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afe1bcfd-430c-4295-9036-1b81199be5c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:59.173428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of ServiceBus operations supported by the Microsoft.ServiceBus resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list ServiceBus operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 24
  } ]
}