{
  "mappings" : [ {
    "id" : "b5c5271e-95b8-4b62-9e87-8436ea685373",
    "name" : "Shutdown the WireMock server - 200",
    "request" : {
      "urlPath" : "/__admin/shutdown",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b5c5271e-95b8-4b62-9e87-8436ea685373",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "688ac8f9-e9ac-4df5-9eb0-62e080ad9830",
    "name" : "Update global settings - 200",
    "request" : {
      "urlPath" : "/__admin/settings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "688ac8f9-e9ac-4df5-9eb0-62e080ad9830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "cfd177b4-0763-449d-a1cd-3561dfcf7f85",
    "name" : "Reset the state of all scenarios - 200",
    "request" : {
      "urlPath" : "/__admin/scenarios/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cfd177b4-0763-449d-a1cd-3561dfcf7f85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "65a12e6b-2d56-44fe-99cd-955c657066d6",
    "name" : "Get all scenarios",
    "request" : {
      "urlPath" : "/__admin/scenarios",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scenarios\" : [ {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65a12e6b-2d56-44fe-99cd-955c657066d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "scenarios" : {
                "items" : {
                  "properties" : {
                    "id" : {
                      "description" : "The scenario ID",
                      "example" : "c8d249ec-d86d-48b1-88a8-a660e6848042",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "The scenario name",
                      "example" : "my_scenario",
                      "type" : "string"
                    },
                    "possibleStates" : {
                      "example" : [ "Started", "state_1", "state_2" ],
                      "items" : {
                        "default" : "Started",
                        "description" : "All the states this scenario can be in",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "state" : {
                      "default" : "Started",
                      "description" : "The current state of this scenario",
                      "example" : "state_2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "3607cc7d-4dd5-47c3-a198-ccc986917b9d",
    "name" : "Reset mappings and request journal - 200",
    "request" : {
      "urlPath" : "/__admin/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3607cc7d-4dd5-47c3-a198-ccc986917b9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9b7b1668-eaa3-460b-a7bb-d0fcb3ea5c76",
    "name" : "Get request by ID - 404",
    "request" : {
      "urlPath" : "/__admin/requests/efa9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9b7b1668-eaa3-460b-a7bb-d0fcb3ea5c76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "477eddee-f39e-4b89-b81a-9098267b03aa",
    "name" : "Get request by ID (application/json)",
    "request" : {
      "urlPath" : "/__admin/requests/v6p1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"12fb14bb-600e-4bfa-bd8d-be7f12562c99\",\n  \"request\" : {\n    \"absoluteUrl\" : \"http://localhost:56738/received-request/2\",\n    \"body\" : \"\",\n    \"bodyAsBase64\" : \"\",\n    \"browserProxyRequest\" : false,\n    \"clientIp\" : \"127.0.0.1\",\n    \"cookies\" : { },\n    \"headers\" : {\n      \"Connection\" : \"keep-alive\",\n      \"Host\" : \"localhost:56738\",\n      \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n    },\n    \"loggedDate\" : 1471442557047,\n    \"loggedDateString\" : \"2016-08-17T14:02:37Z\",\n    \"method\" : \"GET\",\n    \"url\" : \"/received-request/2\"\n  },\n  \"responseDefinition\" : {\n    \"fromConfiguredStub\" : false,\n    \"status\" : 404,\n    \"transformerParameters\" : { },\n    \"transformers\" : [ ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "477eddee-f39e-4b89-b81a-9098267b03aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "559550a8-62fe-4e27-a470-3f54f28960a1",
    "name" : "Delete request by ID - 200",
    "request" : {
      "urlPath" : "/__admin/requests/g20f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "559550a8-62fe-4e27-a470-3f54f28960a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "78b06c30-42c8-4127-9bca-15e1e7c3231d",
    "name" : "Retrieve near-misses for all unmatched requests",
    "request" : {
      "urlPath" : "/__admin/requests/unmatched/near-misses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nearMisses\" : [ {\n    \"matchResult\" : {\n      \"distance\" : 0.06944444444444445\n    },\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:8080/nomatch\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"0:0:0:0:0:0:0:1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Accept\" : \"*/*\",\n        \"Host\" : \"localhost:8080\",\n        \"User-Agent\" : \"curl/7.30.0\"\n      },\n      \"loggedDate\" : 1467402464520,\n      \"loggedDateString\" : \"2016-07-01T19:47:44Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/nomatch\"\n    },\n    \"requestPattern\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/almostmatch\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78b06c30-42c8-4127-9bca-15e1e7c3231d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "nearMisses" : {
                "items" : {
                  "properties" : {
                    "absoluteUrl" : {
                      "description" : "The full URL to match against",
                      "example" : "http://localhost:56738/received-request/2",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "Body string to match against",
                      "example" : "Hello world",
                      "type" : "string"
                    },
                    "cookies" : {
                      "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : { },
                      "type" : "object"
                    },
                    "headers" : {
                      "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : {
                        "Connection" : "keep-alive",
                        "Host" : "localhost:56738",
                        "User-Agent" : "Apache-HttpClient/4.5.1 (Java/1.7.0_51)"
                      },
                      "type" : "object"
                    },
                    "method" : {
                      "description" : "The HTTP request method",
                      "example" : "GET",
                      "type" : "string"
                    },
                    "url" : {
                      "description" : "The path and query to match exactly against",
                      "example" : "/received-request/2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "a95302c7-c466-4ea1-8875-3f69ece44618",
    "name" : "Find unmatched requests",
    "request" : {
      "urlPath" : "/__admin/requests/unmatched",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a95302c7-c466-4ea1-8875-3f69ece44618",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "edbad606-4f0b-4597-ba85-2c3772217068",
    "name" : "Empty the request journal - 200",
    "request" : {
      "urlPath" : "/__admin/requests/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "edbad606-4f0b-4597-ba85-2c3772217068",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.82606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "45fd0d84-ef5c-4aa0-9c4b-3d8debd5cebc",
    "name" : "Delete requests mappings matching metadata",
    "request" : {
      "urlPath" : "/__admin/requests/remove-by-metadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45fd0d84-ef5c-4aa0-9c4b-3d8debd5cebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.82604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "2e613d36-e0a9-44dd-9861-5d73be089c80",
    "name" : "Remove requests by criteria",
    "request" : {
      "urlPath" : "/__admin/requests/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e613d36-e0a9-44dd-9861-5d73be089c80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.826007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "40bfe6d7-d860-4790-b3ef-f23cf51960a6",
    "name" : "Find requests by criteria",
    "request" : {
      "urlPath" : "/__admin/requests/find",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40bfe6d7-d860-4790-b3ef-f23cf51960a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "314464ba-7b92-43a8-98df-605d76bc23bc",
    "name" : "Count requests by criteria",
    "request" : {
      "urlPath" : "/__admin/requests/count",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 4\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "314464ba-7b92-43a8-98df-605d76bc23bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "count" : {
                "example" : 4,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "20dc1eb1-ac15-493f-a2c3-198007bd61c2",
    "name" : "Get all requests in journal",
    "request" : {
      "urlPath" : "/__admin/requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"total\" : 9\n  },\n  \"requestJournalDisabled\" : false,\n  \"requests\" : [ {\n    \"id\" : \"45760a03-eebb-4387-ad0d-bb89b5d3d662\",\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:56715/received-request/9\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"127.0.0.1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Connection\" : \"keep-alive\",\n        \"Host\" : \"localhost:56715\",\n        \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"loggedDate\" : 1471442494809,\n      \"loggedDateString\" : \"2016-08-17T14:01:34Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/received-request/9\"\n    },\n    \"responseDefinition\" : {\n      \"fromConfiguredStub\" : false,\n      \"status\" : 404,\n      \"transformerParameters\" : { },\n      \"transformers\" : [ ]\n    }\n  }, {\n    \"id\" : \"6ae78311-0178-46c9-987a-fbfc528d54d8\",\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:56715/received-request/8\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"127.0.0.1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Connection\" : \"keep-alive\",\n        \"Host\" : \"localhost:56715\",\n        \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"loggedDate\" : 1471442494802,\n      \"loggedDateString\" : \"2016-08-17T14:01:34Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/received-request/8\"\n    },\n    \"responseDefinition\" : {\n      \"fromConfiguredStub\" : false,\n      \"status\" : 404,\n      \"transformerParameters\" : { },\n      \"transformers\" : [ ]\n    }\n  }, {\n    \"id\" : \"aba8e4ad-1b5b-4518-8f05-b2170a24de35\",\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:56715/received-request/7\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"127.0.0.1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Connection\" : \"keep-alive\",\n        \"Host\" : \"localhost:56715\",\n        \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"loggedDate\" : 1471442494795,\n      \"loggedDateString\" : \"2016-08-17T14:01:34Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/received-request/7\"\n    },\n    \"responseDefinition\" : {\n      \"fromConfiguredStub\" : false,\n      \"status\" : 404,\n      \"transformerParameters\" : { },\n      \"transformers\" : [ ]\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20dc1eb1-ac15-493f-a2c3-198007bd61c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "9af33c03-cd8f-4673-ad99-b172caf45c9a",
    "name" : "Delete all requests in journal - 200",
    "request" : {
      "urlPath" : "/__admin/requests",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9af33c03-cd8f-4673-ad99-b172caf45c9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "4bc2506f-3489-4c09-9c9b-d61387b2ff49",
    "name" : "Stop recording",
    "request" : {
      "urlPath" : "/__admin/recordings/stop",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\",\n    \"name\" : \"recordables_123\",\n    \"persistent\" : true,\n    \"request\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/recordables/123\"\n    },\n    \"response\" : {\n      \"body\" : \"{\\n  \\\"message\\\": \\\"Congratulations on your first recording!\\\"\\n}\",\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"status\" : 200\n    },\n    \"uuid\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4bc2506f-3489-4c09-9c9b-d61387b2ff49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "6b313dce-0456-4ce8-b678-33db28115446",
    "name" : "Get recording status",
    "request" : {
      "urlPath" : "/__admin/recordings/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : \"Stopped\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b313dce-0456-4ce8-b678-33db28115446",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.82518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "status" : {
                "enum" : [ "NeverStarted", "Recording", "Stopped" ],
                "example" : "Stopped",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "70b2d844-bf82-4455-a600-8dde22454eb3",
    "name" : "Start recording - 200",
    "request" : {
      "urlPath" : "/__admin/recordings/start",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "70b2d844-bf82-4455-a600-8dde22454eb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "29627778-4467-4202-bb4c-e8d273ff651e",
    "name" : "Take a snapshot recording",
    "request" : {
      "urlPath" : "/__admin/recordings/snapshot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\",\n    \"name\" : \"recordables_123\",\n    \"persistent\" : true,\n    \"request\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/recordables/123\"\n    },\n    \"response\" : {\n      \"body\" : \"{\\n  \\\"message\\\": \\\"Congratulations on your first recording!\\\"\\n}\",\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"status\" : 200\n    },\n    \"uuid\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29627778-4467-4202-bb4c-e8d273ff651e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.825072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "aa9501e4-bde3-45d1-9164-3bc85c81c1ec",
    "name" : "Find near misses matching request pattern",
    "request" : {
      "urlPath" : "/__admin/near-misses/request-pattern",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nearMisses\" : [ {\n    \"matchResult\" : {\n      \"distance\" : 0.06944444444444445\n    },\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:8080/nomatch\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"0:0:0:0:0:0:0:1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Accept\" : \"*/*\",\n        \"Host\" : \"localhost:8080\",\n        \"User-Agent\" : \"curl/7.30.0\"\n      },\n      \"loggedDate\" : 1467402464520,\n      \"loggedDateString\" : \"2016-07-01T19:47:44Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/nomatch\"\n    },\n    \"requestPattern\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/almostmatch\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa9501e4-bde3-45d1-9164-3bc85c81c1ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.824461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "nearMisses" : {
                "items" : {
                  "properties" : {
                    "absoluteUrl" : {
                      "description" : "The full URL to match against",
                      "example" : "http://localhost:56738/received-request/2",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "Body string to match against",
                      "example" : "Hello world",
                      "type" : "string"
                    },
                    "cookies" : {
                      "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : { },
                      "type" : "object"
                    },
                    "headers" : {
                      "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : {
                        "Connection" : "keep-alive",
                        "Host" : "localhost:56738",
                        "User-Agent" : "Apache-HttpClient/4.5.1 (Java/1.7.0_51)"
                      },
                      "type" : "object"
                    },
                    "method" : {
                      "description" : "The HTTP request method",
                      "example" : "GET",
                      "type" : "string"
                    },
                    "url" : {
                      "description" : "The path and query to match exactly against",
                      "example" : "/received-request/2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a72f60a0-9443-49a0-89c3-86841e9e7637",
    "name" : "Find near misses matching specific request",
    "request" : {
      "urlPath" : "/__admin/near-misses/request",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nearMisses\" : [ {\n    \"matchResult\" : {\n      \"distance\" : 0.06944444444444445\n    },\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:8080/nomatch\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"0:0:0:0:0:0:0:1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Accept\" : \"*/*\",\n        \"Host\" : \"localhost:8080\",\n        \"User-Agent\" : \"curl/7.30.0\"\n      },\n      \"loggedDate\" : 1467402464520,\n      \"loggedDateString\" : \"2016-07-01T19:47:44Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/nomatch\"\n    },\n    \"requestPattern\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/almostmatch\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a72f60a0-9443-49a0-89c3-86841e9e7637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.82433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "nearMisses" : {
                "items" : {
                  "properties" : {
                    "absoluteUrl" : {
                      "description" : "The full URL to match against",
                      "example" : "http://localhost:56738/received-request/2",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "Body string to match against",
                      "example" : "Hello world",
                      "type" : "string"
                    },
                    "cookies" : {
                      "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : { },
                      "type" : "object"
                    },
                    "headers" : {
                      "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : {
                        "Connection" : "keep-alive",
                        "Host" : "localhost:56738",
                        "User-Agent" : "Apache-HttpClient/4.5.1 (Java/1.7.0_51)"
                      },
                      "type" : "object"
                    },
                    "method" : {
                      "description" : "The HTTP request method",
                      "example" : "GET",
                      "type" : "string"
                    },
                    "url" : {
                      "description" : "The path and query to match exactly against",
                      "example" : "/received-request/2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "62d90f69-216e-4b04-a42f-3211f7ec0dce",
    "name" : "Update a stub mapping - 404",
    "request" : {
      "urlPath" : "/__admin/mappings/0it1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "62d90f69-216e-4b04-a42f-3211f7ec0dce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.824116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "75f794b6-1a75-419b-89aa-5fa7a72f4d35",
    "name" : "Update a stub mapping (application/json)",
    "request" : {
      "urlPath" : "/__admin/mappings/oy20",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n  \"priority\" : 3,\n  \"request\" : {\n    \"headers\" : {\n      \"Accept\" : {\n        \"equalTo\" : \"text/plain\"\n      }\n    },\n    \"method\" : \"GET\",\n    \"url\" : \"/some/thing\"\n  },\n  \"response\" : {\n    \"body\" : \"Hello world!\",\n    \"headers\" : {\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"status\" : 200\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75f794b6-1a75-419b-89aa-5fa7a72f4d35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.823997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "This stub mapping's unique identifier",
                "type" : "string"
              },
              "metadata" : {
                "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                "type" : "object"
              },
              "name" : {
                "description" : "The stub mapping's name",
                "type" : "string"
              },
              "newScenarioState" : {
                "description" : "The new state for the scenario to be updated to after this stub is served.",
                "type" : "string"
              },
              "persistent" : {
                "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                "type" : "boolean"
              },
              "postServeActions" : {
                "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                "type" : "object"
              },
              "priority" : {
                "description" : "This stub mapping's priority relative to others. 1 is highest.",
                "minimum" : 1,
                "type" : "integer"
              },
              "request" : {
                "example" : {
                  "bodyPatterns" : [ {
                    "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                  } ],
                  "headers" : {
                    "Content-Type" : {
                      "equalTo" : "application/json"
                    }
                  },
                  "method" : "POST",
                  "url" : "/some/thing"
                },
                "properties" : {
                  "basicAuthCredentials" : {
                    "description" : "Pre-emptive basic auth credentials to match against",
                    "properties" : {
                      "password" : {
                        "type" : "string"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "username", "password" ],
                    "type" : "object"
                  },
                  "bodyPatterns" : {
                    "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "items" : {
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "cookies" : {
                    "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "headers" : {
                    "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "method" : {
                    "description" : "The HTTP request method e.g. GET",
                    "type" : "string"
                  },
                  "queryParameters" : {
                    "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "url" : {
                    "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPath" : {
                    "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPathPattern" : {
                    "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPattern" : {
                    "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "requiredScenarioState" : {
                "description" : "The required state of the scenario in order for this stub to be matched.",
                "type" : "string"
              },
              "response" : {
                "allOf" : [ {
                  "properties" : {
                    "additionalProxyRequestHeaders" : {
                      "description" : "Extra request headers to send when proxying to another host.",
                      "type" : "object"
                    },
                    "base64Body" : {
                      "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "bodyFileName" : {
                      "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "delayDistribution" : {
                      "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                      "oneOf" : [ {
                        "description" : "Log normal randomly distributed response delay.",
                        "properties" : {
                          "median" : {
                            "type" : "integer"
                          },
                          "sigma" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "lognormal" ],
                            "type" : "string"
                          }
                        },
                        "title" : "Log normal",
                        "type" : "object"
                      }, {
                        "description" : "Uniformly distributed random response delay.",
                        "properties" : {
                          "lower" : {
                            "type" : "integer"
                          },
                          "type" : {
                            "enum" : [ "uniform" ],
                            "type" : "string"
                          },
                          "upper" : {
                            "type" : "integer"
                          }
                        },
                        "title" : "Uniform",
                        "type" : "object"
                      } ]
                    },
                    "fault" : {
                      "description" : "The fault to apply (instead of a full, valid response).",
                      "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                      "type" : "string"
                    },
                    "fixedDelayMilliseconds" : {
                      "description" : "Number of milliseconds to delay be before sending the response.",
                      "type" : "integer"
                    },
                    "fromConfiguredStub" : {
                      "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                      "type" : "boolean"
                    },
                    "headers" : {
                      "description" : "Map of response headers to send",
                      "type" : "object"
                    },
                    "jsonBody" : {
                      "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "object"
                    },
                    "proxyBaseUrl" : {
                      "description" : "The base URL of the target to proxy matching requests to.",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The HTTP status code to be returned",
                      "type" : "integer"
                    },
                    "statusMessage" : {
                      "description" : "The HTTP status message to be returned",
                      "type" : "string"
                    },
                    "transformerParameters" : {
                      "description" : "Parameters to apply to response transformers.",
                      "type" : "object"
                    },
                    "transformers" : {
                      "description" : "List of names of transformers to apply to this response.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ]
              },
              "scenarioName" : {
                "description" : "The name of the scenario that this stub mapping is part of",
                "type" : "string"
              },
              "uuid" : {
                "description" : "Alias for the id",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "e8a82ee3-06bf-47ed-89c5-08813b75051e",
    "name" : "Get stub mapping by ID - 404",
    "request" : {
      "urlPath" : "/__admin/mappings/q6si",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e8a82ee3-06bf-47ed-89c5-08813b75051e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.823365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "3a2eb4a0-1b27-48c1-83c5-7b63c8ceef92",
    "name" : "Get stub mapping by ID (application/json)",
    "request" : {
      "urlPath" : "/__admin/mappings/q400",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n  \"priority\" : 3,\n  \"request\" : {\n    \"headers\" : {\n      \"Accept\" : {\n        \"equalTo\" : \"text/plain\"\n      }\n    },\n    \"method\" : \"GET\",\n    \"url\" : \"/some/thing\"\n  },\n  \"response\" : {\n    \"body\" : \"Hello world!\",\n    \"headers\" : {\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"status\" : 200\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a2eb4a0-1b27-48c1-83c5-7b63c8ceef92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.823233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "This stub mapping's unique identifier",
                "type" : "string"
              },
              "metadata" : {
                "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                "type" : "object"
              },
              "name" : {
                "description" : "The stub mapping's name",
                "type" : "string"
              },
              "newScenarioState" : {
                "description" : "The new state for the scenario to be updated to after this stub is served.",
                "type" : "string"
              },
              "persistent" : {
                "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                "type" : "boolean"
              },
              "postServeActions" : {
                "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                "type" : "object"
              },
              "priority" : {
                "description" : "This stub mapping's priority relative to others. 1 is highest.",
                "minimum" : 1,
                "type" : "integer"
              },
              "request" : {
                "example" : {
                  "bodyPatterns" : [ {
                    "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                  } ],
                  "headers" : {
                    "Content-Type" : {
                      "equalTo" : "application/json"
                    }
                  },
                  "method" : "POST",
                  "url" : "/some/thing"
                },
                "properties" : {
                  "basicAuthCredentials" : {
                    "description" : "Pre-emptive basic auth credentials to match against",
                    "properties" : {
                      "password" : {
                        "type" : "string"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "username", "password" ],
                    "type" : "object"
                  },
                  "bodyPatterns" : {
                    "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "items" : {
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "cookies" : {
                    "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "headers" : {
                    "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "method" : {
                    "description" : "The HTTP request method e.g. GET",
                    "type" : "string"
                  },
                  "queryParameters" : {
                    "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "url" : {
                    "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPath" : {
                    "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPathPattern" : {
                    "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPattern" : {
                    "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "requiredScenarioState" : {
                "description" : "The required state of the scenario in order for this stub to be matched.",
                "type" : "string"
              },
              "response" : {
                "allOf" : [ {
                  "properties" : {
                    "additionalProxyRequestHeaders" : {
                      "description" : "Extra request headers to send when proxying to another host.",
                      "type" : "object"
                    },
                    "base64Body" : {
                      "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "bodyFileName" : {
                      "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "delayDistribution" : {
                      "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                      "oneOf" : [ {
                        "description" : "Log normal randomly distributed response delay.",
                        "properties" : {
                          "median" : {
                            "type" : "integer"
                          },
                          "sigma" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "lognormal" ],
                            "type" : "string"
                          }
                        },
                        "title" : "Log normal",
                        "type" : "object"
                      }, {
                        "description" : "Uniformly distributed random response delay.",
                        "properties" : {
                          "lower" : {
                            "type" : "integer"
                          },
                          "type" : {
                            "enum" : [ "uniform" ],
                            "type" : "string"
                          },
                          "upper" : {
                            "type" : "integer"
                          }
                        },
                        "title" : "Uniform",
                        "type" : "object"
                      } ]
                    },
                    "fault" : {
                      "description" : "The fault to apply (instead of a full, valid response).",
                      "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                      "type" : "string"
                    },
                    "fixedDelayMilliseconds" : {
                      "description" : "Number of milliseconds to delay be before sending the response.",
                      "type" : "integer"
                    },
                    "fromConfiguredStub" : {
                      "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                      "type" : "boolean"
                    },
                    "headers" : {
                      "description" : "Map of response headers to send",
                      "type" : "object"
                    },
                    "jsonBody" : {
                      "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "object"
                    },
                    "proxyBaseUrl" : {
                      "description" : "The base URL of the target to proxy matching requests to.",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The HTTP status code to be returned",
                      "type" : "integer"
                    },
                    "statusMessage" : {
                      "description" : "The HTTP status message to be returned",
                      "type" : "string"
                    },
                    "transformerParameters" : {
                      "description" : "Parameters to apply to response transformers.",
                      "type" : "object"
                    },
                    "transformers" : {
                      "description" : "List of names of transformers to apply to this response.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ]
              },
              "scenarioName" : {
                "description" : "The name of the scenario that this stub mapping is part of",
                "type" : "string"
              },
              "uuid" : {
                "description" : "Alias for the id",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "4ca7ca9b-878b-466d-a969-8f80f304739c",
    "name" : "Delete a stub mapping - 404",
    "request" : {
      "urlPath" : "/__admin/mappings/01b3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "4ca7ca9b-878b-466d-a969-8f80f304739c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.822624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "09877207-7b02-4d78-aa7c-130fb8e84d62",
    "name" : "Delete a stub mapping - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/6tr3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "09877207-7b02-4d78-aa7c-130fb8e84d62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.822537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "a5a85b8a-4fb7-4dd6-a805-5c9030ea7e61",
    "name" : "Persist stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/save",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a5a85b8a-4fb7-4dd6-a805-5c9030ea7e61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.82241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "522fa135-4a53-4b7d-ba34-b60fff544dd4",
    "name" : "Reset stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "522fa135-4a53-4b7d-ba34-b60fff544dd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.822392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "638fe682-615d-4fa2-ab2b-5b2cdbd41f64",
    "name" : "Delete stub mappings matching metadata - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/remove-by-metadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "638fe682-615d-4fa2-ab2b-5b2cdbd41f64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.822373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "f947e0b3-fa23-416a-a6de-8ba06bd98105",
    "name" : "Import stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f947e0b3-fa23-416a-a6de-8ba06bd98105",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.822352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "472e8871-85c2-431d-bfc8-fee8865f0bb2",
    "name" : "Find stubs by matching on their metadata",
    "request" : {
      "urlPath" : "/__admin/mappings/find-by-metadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n    \"request\" : {\n      \"headers\" : {\n        \"Accept\" : {\n          \"equalTo\" : \"application/json\"\n        }\n      },\n      \"method\" : \"GET\",\n      \"url\" : \"/search?q=things\"\n    },\n    \"response\" : {\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"jsonBody\" : [ \"thing1\", \"thing2\" ],\n      \"status\" : 200\n    },\n    \"uuid\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\"\n  }, {\n    \"request\" : {\n      \"bodyPatterns\" : [ {\n        \"equalToXml\" : \"<stuff />\"\n      } ],\n      \"method\" : \"POST\",\n      \"urlPath\" : \"/some/things\"\n    },\n    \"response\" : {\n      \"status\" : 201\n    }\n  } ],\n  \"meta\" : {\n    \"total\" : 2\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "472e8871-85c2-431d-bfc8-fee8865f0bb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.822304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "3a0639d1-af3c-4c97-8763-869e473e4166",
    "name" : "Create a new stub mapping",
    "request" : {
      "urlPath" : "/__admin/mappings",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n  \"priority\" : 3,\n  \"request\" : {\n    \"headers\" : {\n      \"Accept\" : {\n        \"equalTo\" : \"text/plain\"\n      }\n    },\n    \"method\" : \"GET\",\n    \"url\" : \"/some/thing\"\n  },\n  \"response\" : {\n    \"body\" : \"Hello world!\",\n    \"headers\" : {\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"status\" : 200\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a0639d1-af3c-4c97-8763-869e473e4166",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.821671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "This stub mapping's unique identifier",
                "type" : "string"
              },
              "metadata" : {
                "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                "type" : "object"
              },
              "name" : {
                "description" : "The stub mapping's name",
                "type" : "string"
              },
              "newScenarioState" : {
                "description" : "The new state for the scenario to be updated to after this stub is served.",
                "type" : "string"
              },
              "persistent" : {
                "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                "type" : "boolean"
              },
              "postServeActions" : {
                "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                "type" : "object"
              },
              "priority" : {
                "description" : "This stub mapping's priority relative to others. 1 is highest.",
                "minimum" : 1,
                "type" : "integer"
              },
              "request" : {
                "example" : {
                  "bodyPatterns" : [ {
                    "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                  } ],
                  "headers" : {
                    "Content-Type" : {
                      "equalTo" : "application/json"
                    }
                  },
                  "method" : "POST",
                  "url" : "/some/thing"
                },
                "properties" : {
                  "basicAuthCredentials" : {
                    "description" : "Pre-emptive basic auth credentials to match against",
                    "properties" : {
                      "password" : {
                        "type" : "string"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "username", "password" ],
                    "type" : "object"
                  },
                  "bodyPatterns" : {
                    "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "items" : {
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "cookies" : {
                    "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "headers" : {
                    "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "method" : {
                    "description" : "The HTTP request method e.g. GET",
                    "type" : "string"
                  },
                  "queryParameters" : {
                    "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "url" : {
                    "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPath" : {
                    "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPathPattern" : {
                    "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPattern" : {
                    "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "requiredScenarioState" : {
                "description" : "The required state of the scenario in order for this stub to be matched.",
                "type" : "string"
              },
              "response" : {
                "allOf" : [ {
                  "properties" : {
                    "additionalProxyRequestHeaders" : {
                      "description" : "Extra request headers to send when proxying to another host.",
                      "type" : "object"
                    },
                    "base64Body" : {
                      "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "bodyFileName" : {
                      "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "delayDistribution" : {
                      "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                      "oneOf" : [ {
                        "description" : "Log normal randomly distributed response delay.",
                        "properties" : {
                          "median" : {
                            "type" : "integer"
                          },
                          "sigma" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "lognormal" ],
                            "type" : "string"
                          }
                        },
                        "title" : "Log normal",
                        "type" : "object"
                      }, {
                        "description" : "Uniformly distributed random response delay.",
                        "properties" : {
                          "lower" : {
                            "type" : "integer"
                          },
                          "type" : {
                            "enum" : [ "uniform" ],
                            "type" : "string"
                          },
                          "upper" : {
                            "type" : "integer"
                          }
                        },
                        "title" : "Uniform",
                        "type" : "object"
                      } ]
                    },
                    "fault" : {
                      "description" : "The fault to apply (instead of a full, valid response).",
                      "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                      "type" : "string"
                    },
                    "fixedDelayMilliseconds" : {
                      "description" : "Number of milliseconds to delay be before sending the response.",
                      "type" : "integer"
                    },
                    "fromConfiguredStub" : {
                      "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                      "type" : "boolean"
                    },
                    "headers" : {
                      "description" : "Map of response headers to send",
                      "type" : "object"
                    },
                    "jsonBody" : {
                      "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "object"
                    },
                    "proxyBaseUrl" : {
                      "description" : "The base URL of the target to proxy matching requests to.",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The HTTP status code to be returned",
                      "type" : "integer"
                    },
                    "statusMessage" : {
                      "description" : "The HTTP status message to be returned",
                      "type" : "string"
                    },
                    "transformerParameters" : {
                      "description" : "Parameters to apply to response transformers.",
                      "type" : "object"
                    },
                    "transformers" : {
                      "description" : "List of names of transformers to apply to this response.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ]
              },
              "scenarioName" : {
                "description" : "The name of the scenario that this stub mapping is part of",
                "type" : "string"
              },
              "uuid" : {
                "description" : "Alias for the id",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "75f83149-eed1-4801-b809-2dff3196dfb9",
    "name" : "Get all stub mappings",
    "request" : {
      "urlPath" : "/__admin/mappings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n    \"request\" : {\n      \"headers\" : {\n        \"Accept\" : {\n          \"equalTo\" : \"application/json\"\n        }\n      },\n      \"method\" : \"GET\",\n      \"url\" : \"/search?q=things\"\n    },\n    \"response\" : {\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"jsonBody\" : [ \"thing1\", \"thing2\" ],\n      \"status\" : 200\n    },\n    \"uuid\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\"\n  }, {\n    \"request\" : {\n      \"bodyPatterns\" : [ {\n        \"equalToXml\" : \"<stuff />\"\n      } ],\n      \"method\" : \"POST\",\n      \"urlPath\" : \"/some/things\"\n    },\n    \"response\" : {\n      \"status\" : 201\n    }\n  } ],\n  \"meta\" : {\n    \"total\" : 2\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75f83149-eed1-4801-b809-2dff3196dfb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.821072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "d3e52325-cec7-4a1d-bb07-21dbc05528c4",
    "name" : "Delete all stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d3e52325-cec7-4a1d-bb07-21dbc05528c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:52.820339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 36
  } ]
}