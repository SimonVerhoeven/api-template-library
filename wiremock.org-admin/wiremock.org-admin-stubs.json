{
  "mappings" : [ {
    "id" : "47380810-8eba-4a41-b6e9-36fa6df042aa",
    "name" : "Shutdown the WireMock server - 200",
    "request" : {
      "urlPath" : "/__admin/shutdown",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "47380810-8eba-4a41-b6e9-36fa6df042aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.279541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "fa5b3858-c9ca-4ea3-85c5-2232b8bbbe07",
    "name" : "Update global settings - 200",
    "request" : {
      "urlPath" : "/__admin/settings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fa5b3858-c9ca-4ea3-85c5-2232b8bbbe07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.279521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "0225d140-e8ed-4805-875d-4c525860acec",
    "name" : "Reset the state of all scenarios - 200",
    "request" : {
      "urlPath" : "/__admin/scenarios/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0225d140-e8ed-4805-875d-4c525860acec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.2795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "1c514cfe-4e4b-4772-a21f-0accbe3fff8c",
    "name" : "Get all scenarios",
    "request" : {
      "urlPath" : "/__admin/scenarios",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"scenarios\" : [ {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  }, {\n    \"name\" : \"my_scenario\",\n    \"possibleStates\" : [ \"Started\", \"state_1\", \"state_2\" ],\n    \"id\" : \"c8d249ec-d86d-48b1-88a8-a660e6848042\",\n    \"state\" : \"state_2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c514cfe-4e4b-4772-a21f-0accbe3fff8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.279472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "scenarios" : {
                "items" : {
                  "properties" : {
                    "id" : {
                      "description" : "The scenario ID",
                      "example" : "c8d249ec-d86d-48b1-88a8-a660e6848042",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "The scenario name",
                      "example" : "my_scenario",
                      "type" : "string"
                    },
                    "possibleStates" : {
                      "example" : [ "Started", "state_1", "state_2" ],
                      "items" : {
                        "default" : "Started",
                        "description" : "All the states this scenario can be in",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "state" : {
                      "default" : "Started",
                      "description" : "The current state of this scenario",
                      "example" : "state_2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "344d72ec-25f0-4bb6-b78a-1fafd285e712",
    "name" : "Reset mappings and request journal - 200",
    "request" : {
      "urlPath" : "/__admin/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "344d72ec-25f0-4bb6-b78a-1fafd285e712",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.279288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b87ecf4c-3151-4f39-b411-3ccd6585cb0d",
    "name" : "Get request by ID - 404",
    "request" : {
      "urlPath" : "/__admin/requests/4hpo",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b87ecf4c-3151-4f39-b411-3ccd6585cb0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.279266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "69c29c90-5932-4d2c-96e1-5948fd9781a1",
    "name" : "Get request by ID (application/json)",
    "request" : {
      "urlPath" : "/__admin/requests/rfz0",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"12fb14bb-600e-4bfa-bd8d-be7f12562c99\",\n  \"request\" : {\n    \"absoluteUrl\" : \"http://localhost:56738/received-request/2\",\n    \"body\" : \"\",\n    \"bodyAsBase64\" : \"\",\n    \"browserProxyRequest\" : false,\n    \"clientIp\" : \"127.0.0.1\",\n    \"cookies\" : { },\n    \"headers\" : {\n      \"Connection\" : \"keep-alive\",\n      \"Host\" : \"localhost:56738\",\n      \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n    },\n    \"loggedDate\" : 1471442557047,\n    \"loggedDateString\" : \"2016-08-17T14:02:37Z\",\n    \"method\" : \"GET\",\n    \"url\" : \"/received-request/2\"\n  },\n  \"responseDefinition\" : {\n    \"fromConfiguredStub\" : false,\n    \"status\" : 404,\n    \"transformerParameters\" : { },\n    \"transformers\" : [ ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69c29c90-5932-4d2c-96e1-5948fd9781a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.279118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "70045c6e-4d50-4833-9cfb-ad8efa477bc2",
    "name" : "Delete request by ID - 200",
    "request" : {
      "urlPath" : "/__admin/requests/ol17",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "70045c6e-4d50-4833-9cfb-ad8efa477bc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "70b1e2f3-a016-4363-a94f-906fade97bea",
    "name" : "Retrieve near-misses for all unmatched requests",
    "request" : {
      "urlPath" : "/__admin/requests/unmatched/near-misses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nearMisses\" : [ {\n    \"matchResult\" : {\n      \"distance\" : 0.06944444444444445\n    },\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:8080/nomatch\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"0:0:0:0:0:0:0:1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Accept\" : \"*/*\",\n        \"Host\" : \"localhost:8080\",\n        \"User-Agent\" : \"curl/7.30.0\"\n      },\n      \"loggedDate\" : 1467402464520,\n      \"loggedDateString\" : \"2016-07-01T19:47:44Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/nomatch\"\n    },\n    \"requestPattern\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/almostmatch\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70b1e2f3-a016-4363-a94f-906fade97bea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "nearMisses" : {
                "items" : {
                  "properties" : {
                    "absoluteUrl" : {
                      "description" : "The full URL to match against",
                      "example" : "http://localhost:56738/received-request/2",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "Body string to match against",
                      "example" : "Hello world",
                      "type" : "string"
                    },
                    "cookies" : {
                      "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : { },
                      "type" : "object"
                    },
                    "headers" : {
                      "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : {
                        "Connection" : "keep-alive",
                        "Host" : "localhost:56738",
                        "User-Agent" : "Apache-HttpClient/4.5.1 (Java/1.7.0_51)"
                      },
                      "type" : "object"
                    },
                    "method" : {
                      "description" : "The HTTP request method",
                      "example" : "GET",
                      "type" : "string"
                    },
                    "url" : {
                      "description" : "The path and query to match exactly against",
                      "example" : "/received-request/2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c95acb70-893b-4f6f-9840-2f75dc9e1044",
    "name" : "Find unmatched requests",
    "request" : {
      "urlPath" : "/__admin/requests/unmatched",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c95acb70-893b-4f6f-9840-2f75dc9e1044",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "eefa18cb-cde4-4ecc-b766-8ceafff29134",
    "name" : "Empty the request journal - 200",
    "request" : {
      "urlPath" : "/__admin/requests/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "eefa18cb-cde4-4ecc-b766-8ceafff29134",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "079bb60c-74ce-4a62-8a7d-9fc1f7a7c206",
    "name" : "Delete requests mappings matching metadata",
    "request" : {
      "urlPath" : "/__admin/requests/remove-by-metadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "079bb60c-74ce-4a62-8a7d-9fc1f7a7c206",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "08fe0fd6-01e6-45e8-8cc5-47327e57cf63",
    "name" : "Remove requests by criteria",
    "request" : {
      "urlPath" : "/__admin/requests/remove",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08fe0fd6-01e6-45e8-8cc5-47327e57cf63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "11936dee-800b-41c8-8a43-e418443a3172",
    "name" : "Find requests by criteria",
    "request" : {
      "urlPath" : "/__admin/requests/find",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"requests\" : [ {\n    \"absoluteUrl\" : \"http://mydomain.com/my/url\",\n    \"body\" : \"\",\n    \"browserProxyRequest\" : true,\n    \"headers\" : {\n      \"Accept\" : \"image/png,image/*;q=0.8,*/*;q=0.5\",\n      \"Accept-Language\" : \"en-us,en;q=0.5\",\n      \"User-Agent\" : \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.6; rv:9.0) Gecko/20100101 Firefox/9.0\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"GET\",\n    \"url\" : \"/my/url\"\n  }, {\n    \"absoluteUrl\" : \"http://my.other.domain.com/my/other/url\",\n    \"body\" : \"My text\",\n    \"browserProxyRequest\" : false,\n    \"headers\" : {\n      \"Accept\" : \"text/plain\",\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"loggedDate\" : 1339083581823,\n    \"loggedDateString\" : \"2012-06-07 16:39:41\",\n    \"method\" : \"POST\",\n    \"url\" : \"/my/other/url\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11936dee-800b-41c8-8a43-e418443a3172",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "2069438a-bd1a-4c54-89f7-0c5075fc3f65",
    "name" : "Count requests by criteria",
    "request" : {
      "urlPath" : "/__admin/requests/count",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 4\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2069438a-bd1a-4c54-89f7-0c5075fc3f65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "count" : {
                "example" : 4,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1065b03b-1713-4d6d-ad46-4f23ab6092f7",
    "name" : "Get all requests in journal",
    "request" : {
      "urlPath" : "/__admin/requests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"total\" : 9\n  },\n  \"requestJournalDisabled\" : false,\n  \"requests\" : [ {\n    \"id\" : \"45760a03-eebb-4387-ad0d-bb89b5d3d662\",\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:56715/received-request/9\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"127.0.0.1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Connection\" : \"keep-alive\",\n        \"Host\" : \"localhost:56715\",\n        \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"loggedDate\" : 1471442494809,\n      \"loggedDateString\" : \"2016-08-17T14:01:34Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/received-request/9\"\n    },\n    \"responseDefinition\" : {\n      \"fromConfiguredStub\" : false,\n      \"status\" : 404,\n      \"transformerParameters\" : { },\n      \"transformers\" : [ ]\n    }\n  }, {\n    \"id\" : \"6ae78311-0178-46c9-987a-fbfc528d54d8\",\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:56715/received-request/8\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"127.0.0.1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Connection\" : \"keep-alive\",\n        \"Host\" : \"localhost:56715\",\n        \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"loggedDate\" : 1471442494802,\n      \"loggedDateString\" : \"2016-08-17T14:01:34Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/received-request/8\"\n    },\n    \"responseDefinition\" : {\n      \"fromConfiguredStub\" : false,\n      \"status\" : 404,\n      \"transformerParameters\" : { },\n      \"transformers\" : [ ]\n    }\n  }, {\n    \"id\" : \"aba8e4ad-1b5b-4518-8f05-b2170a24de35\",\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:56715/received-request/7\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"127.0.0.1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Connection\" : \"keep-alive\",\n        \"Host\" : \"localhost:56715\",\n        \"User-Agent\" : \"Apache-HttpClient/4.5.1 (Java/1.7.0_51)\"\n      },\n      \"loggedDate\" : 1471442494795,\n      \"loggedDateString\" : \"2016-08-17T14:01:34Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/received-request/7\"\n    },\n    \"responseDefinition\" : {\n      \"fromConfiguredStub\" : false,\n      \"status\" : 404,\n      \"transformerParameters\" : { },\n      \"transformers\" : [ ]\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1065b03b-1713-4d6d-ad46-4f23ab6092f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "0bf4ce1c-ea63-4711-8149-5488f91ad70b",
    "name" : "Delete all requests in journal - 200",
    "request" : {
      "urlPath" : "/__admin/requests",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0bf4ce1c-ea63-4711-8149-5488f91ad70b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e5e2aedd-5475-4294-a25f-b4abbcb6faa9",
    "name" : "Stop recording",
    "request" : {
      "urlPath" : "/__admin/recordings/stop",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\",\n    \"name\" : \"recordables_123\",\n    \"persistent\" : true,\n    \"request\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/recordables/123\"\n    },\n    \"response\" : {\n      \"body\" : \"{\\n  \\\"message\\\": \\\"Congratulations on your first recording!\\\"\\n}\",\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"status\" : 200\n    },\n    \"uuid\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5e2aedd-5475-4294-a25f-b4abbcb6faa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.278293Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "652c4c76-0e65-4a2c-8ae2-9101345186c6",
    "name" : "Get recording status",
    "request" : {
      "urlPath" : "/__admin/recordings/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status\" : \"Stopped\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "652c4c76-0e65-4a2c-8ae2-9101345186c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.277638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "status" : {
                "enum" : [ "NeverStarted", "Recording", "Stopped" ],
                "example" : "Stopped",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02558e7a-18bf-4630-be2b-678ffb467954",
    "name" : "Start recording - 200",
    "request" : {
      "urlPath" : "/__admin/recordings/start",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "02558e7a-18bf-4630-be2b-678ffb467954",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.277572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "fdb3d708-03ca-4dd7-8b11-78d0ba8f61f9",
    "name" : "Take a snapshot recording",
    "request" : {
      "urlPath" : "/__admin/recordings/snapshot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\",\n    \"name\" : \"recordables_123\",\n    \"persistent\" : true,\n    \"request\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/recordables/123\"\n    },\n    \"response\" : {\n      \"body\" : \"{\\n  \\\"message\\\": \\\"Congratulations on your first recording!\\\"\\n}\",\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"status\" : 200\n    },\n    \"uuid\" : \"093f1027-e5e0-4921-9e6d-e619dfd5d2c7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdb3d708-03ca-4dd7-8b11-78d0ba8f61f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.277523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "054407bc-be20-4bbc-b719-6922978f5114",
    "name" : "Find near misses matching request pattern",
    "request" : {
      "urlPath" : "/__admin/near-misses/request-pattern",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nearMisses\" : [ {\n    \"matchResult\" : {\n      \"distance\" : 0.06944444444444445\n    },\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:8080/nomatch\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"0:0:0:0:0:0:0:1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Accept\" : \"*/*\",\n        \"Host\" : \"localhost:8080\",\n        \"User-Agent\" : \"curl/7.30.0\"\n      },\n      \"loggedDate\" : 1467402464520,\n      \"loggedDateString\" : \"2016-07-01T19:47:44Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/nomatch\"\n    },\n    \"requestPattern\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/almostmatch\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "054407bc-be20-4bbc-b719-6922978f5114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.276887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "nearMisses" : {
                "items" : {
                  "properties" : {
                    "absoluteUrl" : {
                      "description" : "The full URL to match against",
                      "example" : "http://localhost:56738/received-request/2",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "Body string to match against",
                      "example" : "Hello world",
                      "type" : "string"
                    },
                    "cookies" : {
                      "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : { },
                      "type" : "object"
                    },
                    "headers" : {
                      "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : {
                        "Connection" : "keep-alive",
                        "Host" : "localhost:56738",
                        "User-Agent" : "Apache-HttpClient/4.5.1 (Java/1.7.0_51)"
                      },
                      "type" : "object"
                    },
                    "method" : {
                      "description" : "The HTTP request method",
                      "example" : "GET",
                      "type" : "string"
                    },
                    "url" : {
                      "description" : "The path and query to match exactly against",
                      "example" : "/received-request/2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7c9ee430-9bf5-4a01-a805-a27ea877c6cf",
    "name" : "Find near misses matching specific request",
    "request" : {
      "urlPath" : "/__admin/near-misses/request",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nearMisses\" : [ {\n    \"matchResult\" : {\n      \"distance\" : 0.06944444444444445\n    },\n    \"request\" : {\n      \"absoluteUrl\" : \"http://localhost:8080/nomatch\",\n      \"body\" : \"\",\n      \"bodyAsBase64\" : \"\",\n      \"browserProxyRequest\" : false,\n      \"clientIp\" : \"0:0:0:0:0:0:0:1\",\n      \"cookies\" : { },\n      \"headers\" : {\n        \"Accept\" : \"*/*\",\n        \"Host\" : \"localhost:8080\",\n        \"User-Agent\" : \"curl/7.30.0\"\n      },\n      \"loggedDate\" : 1467402464520,\n      \"loggedDateString\" : \"2016-07-01T19:47:44Z\",\n      \"method\" : \"GET\",\n      \"url\" : \"/nomatch\"\n    },\n    \"requestPattern\" : {\n      \"method\" : \"GET\",\n      \"url\" : \"/almostmatch\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c9ee430-9bf5-4a01-a805-a27ea877c6cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.276769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "nearMisses" : {
                "items" : {
                  "properties" : {
                    "absoluteUrl" : {
                      "description" : "The full URL to match against",
                      "example" : "http://localhost:56738/received-request/2",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "Body string to match against",
                      "example" : "Hello world",
                      "type" : "string"
                    },
                    "cookies" : {
                      "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : { },
                      "type" : "object"
                    },
                    "headers" : {
                      "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                      "example" : {
                        "Connection" : "keep-alive",
                        "Host" : "localhost:56738",
                        "User-Agent" : "Apache-HttpClient/4.5.1 (Java/1.7.0_51)"
                      },
                      "type" : "object"
                    },
                    "method" : {
                      "description" : "The HTTP request method",
                      "example" : "GET",
                      "type" : "string"
                    },
                    "url" : {
                      "description" : "The path and query to match exactly against",
                      "example" : "/received-request/2",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "edd927c0-f4cb-4741-aaea-fdc06d01ca35",
    "name" : "Update a stub mapping - 404",
    "request" : {
      "urlPath" : "/__admin/mappings/11an",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "edd927c0-f4cb-4741-aaea-fdc06d01ca35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.276552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "338197e3-f388-4363-9ef4-2489a2bea452",
    "name" : "Update a stub mapping (application/json)",
    "request" : {
      "urlPath" : "/__admin/mappings/9m4t",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n  \"priority\" : 3,\n  \"request\" : {\n    \"headers\" : {\n      \"Accept\" : {\n        \"equalTo\" : \"text/plain\"\n      }\n    },\n    \"method\" : \"GET\",\n    \"url\" : \"/some/thing\"\n  },\n  \"response\" : {\n    \"body\" : \"Hello world!\",\n    \"headers\" : {\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"status\" : 200\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "338197e3-f388-4363-9ef4-2489a2bea452",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.276392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "This stub mapping's unique identifier",
                "type" : "string"
              },
              "metadata" : {
                "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                "type" : "object"
              },
              "name" : {
                "description" : "The stub mapping's name",
                "type" : "string"
              },
              "newScenarioState" : {
                "description" : "The new state for the scenario to be updated to after this stub is served.",
                "type" : "string"
              },
              "persistent" : {
                "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                "type" : "boolean"
              },
              "postServeActions" : {
                "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                "type" : "object"
              },
              "priority" : {
                "description" : "This stub mapping's priority relative to others. 1 is highest.",
                "minimum" : 1,
                "type" : "integer"
              },
              "request" : {
                "example" : {
                  "bodyPatterns" : [ {
                    "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                  } ],
                  "headers" : {
                    "Content-Type" : {
                      "equalTo" : "application/json"
                    }
                  },
                  "method" : "POST",
                  "url" : "/some/thing"
                },
                "properties" : {
                  "basicAuthCredentials" : {
                    "description" : "Pre-emptive basic auth credentials to match against",
                    "properties" : {
                      "password" : {
                        "type" : "string"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "username", "password" ],
                    "type" : "object"
                  },
                  "bodyPatterns" : {
                    "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "items" : {
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "cookies" : {
                    "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "headers" : {
                    "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "method" : {
                    "description" : "The HTTP request method e.g. GET",
                    "type" : "string"
                  },
                  "queryParameters" : {
                    "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "url" : {
                    "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPath" : {
                    "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPathPattern" : {
                    "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPattern" : {
                    "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "requiredScenarioState" : {
                "description" : "The required state of the scenario in order for this stub to be matched.",
                "type" : "string"
              },
              "response" : {
                "allOf" : [ {
                  "properties" : {
                    "additionalProxyRequestHeaders" : {
                      "description" : "Extra request headers to send when proxying to another host.",
                      "type" : "object"
                    },
                    "base64Body" : {
                      "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "bodyFileName" : {
                      "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "delayDistribution" : {
                      "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                      "oneOf" : [ {
                        "description" : "Log normal randomly distributed response delay.",
                        "properties" : {
                          "median" : {
                            "type" : "integer"
                          },
                          "sigma" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "lognormal" ],
                            "type" : "string"
                          }
                        },
                        "title" : "Log normal",
                        "type" : "object"
                      }, {
                        "description" : "Uniformly distributed random response delay.",
                        "properties" : {
                          "lower" : {
                            "type" : "integer"
                          },
                          "type" : {
                            "enum" : [ "uniform" ],
                            "type" : "string"
                          },
                          "upper" : {
                            "type" : "integer"
                          }
                        },
                        "title" : "Uniform",
                        "type" : "object"
                      } ]
                    },
                    "fault" : {
                      "description" : "The fault to apply (instead of a full, valid response).",
                      "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                      "type" : "string"
                    },
                    "fixedDelayMilliseconds" : {
                      "description" : "Number of milliseconds to delay be before sending the response.",
                      "type" : "integer"
                    },
                    "fromConfiguredStub" : {
                      "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                      "type" : "boolean"
                    },
                    "headers" : {
                      "description" : "Map of response headers to send",
                      "type" : "object"
                    },
                    "jsonBody" : {
                      "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "object"
                    },
                    "proxyBaseUrl" : {
                      "description" : "The base URL of the target to proxy matching requests to.",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The HTTP status code to be returned",
                      "type" : "integer"
                    },
                    "statusMessage" : {
                      "description" : "The HTTP status message to be returned",
                      "type" : "string"
                    },
                    "transformerParameters" : {
                      "description" : "Parameters to apply to response transformers.",
                      "type" : "object"
                    },
                    "transformers" : {
                      "description" : "List of names of transformers to apply to this response.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ]
              },
              "scenarioName" : {
                "description" : "The name of the scenario that this stub mapping is part of",
                "type" : "string"
              },
              "uuid" : {
                "description" : "Alias for the id",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "918e3b5d-1b23-493c-bdb5-1dc9ad01d795",
    "name" : "Get stub mapping by ID - 404",
    "request" : {
      "urlPath" : "/__admin/mappings/3bez",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "918e3b5d-1b23-493c-bdb5-1dc9ad01d795",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.275655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "83467805-3df4-4028-b54b-f39cb01a81ff",
    "name" : "Get stub mapping by ID (application/json)",
    "request" : {
      "urlPath" : "/__admin/mappings/04na",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n  \"priority\" : 3,\n  \"request\" : {\n    \"headers\" : {\n      \"Accept\" : {\n        \"equalTo\" : \"text/plain\"\n      }\n    },\n    \"method\" : \"GET\",\n    \"url\" : \"/some/thing\"\n  },\n  \"response\" : {\n    \"body\" : \"Hello world!\",\n    \"headers\" : {\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"status\" : 200\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83467805-3df4-4028-b54b-f39cb01a81ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.275437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "This stub mapping's unique identifier",
                "type" : "string"
              },
              "metadata" : {
                "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                "type" : "object"
              },
              "name" : {
                "description" : "The stub mapping's name",
                "type" : "string"
              },
              "newScenarioState" : {
                "description" : "The new state for the scenario to be updated to after this stub is served.",
                "type" : "string"
              },
              "persistent" : {
                "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                "type" : "boolean"
              },
              "postServeActions" : {
                "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                "type" : "object"
              },
              "priority" : {
                "description" : "This stub mapping's priority relative to others. 1 is highest.",
                "minimum" : 1,
                "type" : "integer"
              },
              "request" : {
                "example" : {
                  "bodyPatterns" : [ {
                    "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                  } ],
                  "headers" : {
                    "Content-Type" : {
                      "equalTo" : "application/json"
                    }
                  },
                  "method" : "POST",
                  "url" : "/some/thing"
                },
                "properties" : {
                  "basicAuthCredentials" : {
                    "description" : "Pre-emptive basic auth credentials to match against",
                    "properties" : {
                      "password" : {
                        "type" : "string"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "username", "password" ],
                    "type" : "object"
                  },
                  "bodyPatterns" : {
                    "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "items" : {
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "cookies" : {
                    "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "headers" : {
                    "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "method" : {
                    "description" : "The HTTP request method e.g. GET",
                    "type" : "string"
                  },
                  "queryParameters" : {
                    "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "url" : {
                    "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPath" : {
                    "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPathPattern" : {
                    "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPattern" : {
                    "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "requiredScenarioState" : {
                "description" : "The required state of the scenario in order for this stub to be matched.",
                "type" : "string"
              },
              "response" : {
                "allOf" : [ {
                  "properties" : {
                    "additionalProxyRequestHeaders" : {
                      "description" : "Extra request headers to send when proxying to another host.",
                      "type" : "object"
                    },
                    "base64Body" : {
                      "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "bodyFileName" : {
                      "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "delayDistribution" : {
                      "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                      "oneOf" : [ {
                        "description" : "Log normal randomly distributed response delay.",
                        "properties" : {
                          "median" : {
                            "type" : "integer"
                          },
                          "sigma" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "lognormal" ],
                            "type" : "string"
                          }
                        },
                        "title" : "Log normal",
                        "type" : "object"
                      }, {
                        "description" : "Uniformly distributed random response delay.",
                        "properties" : {
                          "lower" : {
                            "type" : "integer"
                          },
                          "type" : {
                            "enum" : [ "uniform" ],
                            "type" : "string"
                          },
                          "upper" : {
                            "type" : "integer"
                          }
                        },
                        "title" : "Uniform",
                        "type" : "object"
                      } ]
                    },
                    "fault" : {
                      "description" : "The fault to apply (instead of a full, valid response).",
                      "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                      "type" : "string"
                    },
                    "fixedDelayMilliseconds" : {
                      "description" : "Number of milliseconds to delay be before sending the response.",
                      "type" : "integer"
                    },
                    "fromConfiguredStub" : {
                      "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                      "type" : "boolean"
                    },
                    "headers" : {
                      "description" : "Map of response headers to send",
                      "type" : "object"
                    },
                    "jsonBody" : {
                      "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "object"
                    },
                    "proxyBaseUrl" : {
                      "description" : "The base URL of the target to proxy matching requests to.",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The HTTP status code to be returned",
                      "type" : "integer"
                    },
                    "statusMessage" : {
                      "description" : "The HTTP status message to be returned",
                      "type" : "string"
                    },
                    "transformerParameters" : {
                      "description" : "Parameters to apply to response transformers.",
                      "type" : "object"
                    },
                    "transformers" : {
                      "description" : "List of names of transformers to apply to this response.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ]
              },
              "scenarioName" : {
                "description" : "The name of the scenario that this stub mapping is part of",
                "type" : "string"
              },
              "uuid" : {
                "description" : "Alias for the id",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9d5f3ca5-d7a3-4e6b-946d-9e8c6ac9c37e",
    "name" : "Delete a stub mapping - 404",
    "request" : {
      "urlPath" : "/__admin/mappings/en03",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9d5f3ca5-d7a3-4e6b-946d-9e8c6ac9c37e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.274666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "355b1741-b05e-4f81-9280-032c598d458f",
    "name" : "Delete a stub mapping - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/l78t",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "355b1741-b05e-4f81-9280-032c598d458f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.274386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b65a1973-4488-4b85-a2cc-ab87d1fa329a",
    "name" : "Persist stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/save",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b65a1973-4488-4b85-a2cc-ab87d1fa329a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.274167Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "91528f0e-be1b-48c9-bcb0-7c333563cda9",
    "name" : "Reset stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "91528f0e-be1b-48c9-bcb0-7c333563cda9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.274147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "213f6e57-55e9-425e-85b9-a9bfae3bb273",
    "name" : "Delete stub mappings matching metadata - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/remove-by-metadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "213f6e57-55e9-425e-85b9-a9bfae3bb273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.274125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "b8bf1969-db03-4b98-b0bf-4dadb3e97d22",
    "name" : "Import stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b8bf1969-db03-4b98-b0bf-4dadb3e97d22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.2741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "fe988d6c-82e4-4db4-80fa-d8369c34c862",
    "name" : "Find stubs by matching on their metadata",
    "request" : {
      "urlPath" : "/__admin/mappings/find-by-metadata",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n    \"request\" : {\n      \"headers\" : {\n        \"Accept\" : {\n          \"equalTo\" : \"application/json\"\n        }\n      },\n      \"method\" : \"GET\",\n      \"url\" : \"/search?q=things\"\n    },\n    \"response\" : {\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"jsonBody\" : [ \"thing1\", \"thing2\" ],\n      \"status\" : 200\n    },\n    \"uuid\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\"\n  }, {\n    \"request\" : {\n      \"bodyPatterns\" : [ {\n        \"equalToXml\" : \"<stuff />\"\n      } ],\n      \"method\" : \"POST\",\n      \"urlPath\" : \"/some/things\"\n    },\n    \"response\" : {\n      \"status\" : 201\n    }\n  } ],\n  \"meta\" : {\n    \"total\" : 2\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe988d6c-82e4-4db4-80fa-d8369c34c862",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.274049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b54d6e65-3e4e-43bc-a707-8e4a156a290f",
    "name" : "Create a new stub mapping",
    "request" : {
      "urlPath" : "/__admin/mappings",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n  \"priority\" : 3,\n  \"request\" : {\n    \"headers\" : {\n      \"Accept\" : {\n        \"equalTo\" : \"text/plain\"\n      }\n    },\n    \"method\" : \"GET\",\n    \"url\" : \"/some/thing\"\n  },\n  \"response\" : {\n    \"body\" : \"Hello world!\",\n    \"headers\" : {\n      \"Content-Type\" : \"text/plain\"\n    },\n    \"status\" : 200\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b54d6e65-3e4e-43bc-a707-8e4a156a290f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.273291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "This stub mapping's unique identifier",
                "type" : "string"
              },
              "metadata" : {
                "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                "type" : "object"
              },
              "name" : {
                "description" : "The stub mapping's name",
                "type" : "string"
              },
              "newScenarioState" : {
                "description" : "The new state for the scenario to be updated to after this stub is served.",
                "type" : "string"
              },
              "persistent" : {
                "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                "type" : "boolean"
              },
              "postServeActions" : {
                "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                "type" : "object"
              },
              "priority" : {
                "description" : "This stub mapping's priority relative to others. 1 is highest.",
                "minimum" : 1,
                "type" : "integer"
              },
              "request" : {
                "example" : {
                  "bodyPatterns" : [ {
                    "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                  } ],
                  "headers" : {
                    "Content-Type" : {
                      "equalTo" : "application/json"
                    }
                  },
                  "method" : "POST",
                  "url" : "/some/thing"
                },
                "properties" : {
                  "basicAuthCredentials" : {
                    "description" : "Pre-emptive basic auth credentials to match against",
                    "properties" : {
                      "password" : {
                        "type" : "string"
                      },
                      "username" : {
                        "type" : "string"
                      }
                    },
                    "required" : [ "username", "password" ],
                    "type" : "object"
                  },
                  "bodyPatterns" : {
                    "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "items" : {
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "cookies" : {
                    "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "headers" : {
                    "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "method" : {
                    "description" : "The HTTP request method e.g. GET",
                    "type" : "string"
                  },
                  "queryParameters" : {
                    "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                    "type" : "object"
                  },
                  "url" : {
                    "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPath" : {
                    "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPathPattern" : {
                    "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  },
                  "urlPattern" : {
                    "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "requiredScenarioState" : {
                "description" : "The required state of the scenario in order for this stub to be matched.",
                "type" : "string"
              },
              "response" : {
                "allOf" : [ {
                  "properties" : {
                    "additionalProxyRequestHeaders" : {
                      "description" : "Extra request headers to send when proxying to another host.",
                      "type" : "object"
                    },
                    "base64Body" : {
                      "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "body" : {
                      "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "bodyFileName" : {
                      "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "string"
                    },
                    "delayDistribution" : {
                      "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                      "oneOf" : [ {
                        "description" : "Log normal randomly distributed response delay.",
                        "properties" : {
                          "median" : {
                            "type" : "integer"
                          },
                          "sigma" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "lognormal" ],
                            "type" : "string"
                          }
                        },
                        "title" : "Log normal",
                        "type" : "object"
                      }, {
                        "description" : "Uniformly distributed random response delay.",
                        "properties" : {
                          "lower" : {
                            "type" : "integer"
                          },
                          "type" : {
                            "enum" : [ "uniform" ],
                            "type" : "string"
                          },
                          "upper" : {
                            "type" : "integer"
                          }
                        },
                        "title" : "Uniform",
                        "type" : "object"
                      } ]
                    },
                    "fault" : {
                      "description" : "The fault to apply (instead of a full, valid response).",
                      "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                      "type" : "string"
                    },
                    "fixedDelayMilliseconds" : {
                      "description" : "Number of milliseconds to delay be before sending the response.",
                      "type" : "integer"
                    },
                    "fromConfiguredStub" : {
                      "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                      "type" : "boolean"
                    },
                    "headers" : {
                      "description" : "Map of response headers to send",
                      "type" : "object"
                    },
                    "jsonBody" : {
                      "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                      "type" : "object"
                    },
                    "proxyBaseUrl" : {
                      "description" : "The base URL of the target to proxy matching requests to.",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The HTTP status code to be returned",
                      "type" : "integer"
                    },
                    "statusMessage" : {
                      "description" : "The HTTP status message to be returned",
                      "type" : "string"
                    },
                    "transformerParameters" : {
                      "description" : "Parameters to apply to response transformers.",
                      "type" : "object"
                    },
                    "transformers" : {
                      "description" : "List of names of transformers to apply to this response.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                } ]
              },
              "scenarioName" : {
                "description" : "The name of the scenario that this stub mapping is part of",
                "type" : "string"
              },
              "uuid" : {
                "description" : "Alias for the id",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b8f4b3c9-928b-4307-bd15-a8b268d411ff",
    "name" : "Get all stub mappings",
    "request" : {
      "urlPath" : "/__admin/mappings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mappings\" : [ {\n    \"id\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\",\n    \"request\" : {\n      \"headers\" : {\n        \"Accept\" : {\n          \"equalTo\" : \"application/json\"\n        }\n      },\n      \"method\" : \"GET\",\n      \"url\" : \"/search?q=things\"\n    },\n    \"response\" : {\n      \"headers\" : {\n        \"Content-Type\" : \"application/json\"\n      },\n      \"jsonBody\" : [ \"thing1\", \"thing2\" ],\n      \"status\" : 200\n    },\n    \"uuid\" : \"76ada7b0-49ae-4229-91c4-396a36f18e09\"\n  }, {\n    \"request\" : {\n      \"bodyPatterns\" : [ {\n        \"equalToXml\" : \"<stuff />\"\n      } ],\n      \"method\" : \"POST\",\n      \"urlPath\" : \"/some/things\"\n    },\n    \"response\" : {\n      \"status\" : 201\n    }\n  } ],\n  \"meta\" : {\n    \"total\" : 2\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8f4b3c9-928b-4307-bd15-a8b268d411ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.27255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "mappings" : {
                "items" : {
                  "additionalProperties" : false,
                  "properties" : {
                    "id" : {
                      "description" : "This stub mapping's unique identifier",
                      "type" : "string"
                    },
                    "metadata" : {
                      "description" : "Arbitrary metadata to be used for e.g. tagging, documentation. Can also be used to find and remove stubs.",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The stub mapping's name",
                      "type" : "string"
                    },
                    "newScenarioState" : {
                      "description" : "The new state for the scenario to be updated to after this stub is served.",
                      "type" : "string"
                    },
                    "persistent" : {
                      "description" : "Indicates that the stub mapping should be persisted immediately on create/update/delete and survive resets to default.",
                      "type" : "boolean"
                    },
                    "postServeActions" : {
                      "description" : "A map of the names of post serve action extensions to trigger and their parameters.",
                      "type" : "object"
                    },
                    "priority" : {
                      "description" : "This stub mapping's priority relative to others. 1 is highest.",
                      "minimum" : 1,
                      "type" : "integer"
                    },
                    "request" : {
                      "example" : {
                        "bodyPatterns" : [ {
                          "equalToJson" : "{ \"numbers\": [1, 2, 3] }"
                        } ],
                        "headers" : {
                          "Content-Type" : {
                            "equalTo" : "application/json"
                          }
                        },
                        "method" : "POST",
                        "url" : "/some/thing"
                      },
                      "properties" : {
                        "basicAuthCredentials" : {
                          "description" : "Pre-emptive basic auth credentials to match against",
                          "properties" : {
                            "password" : {
                              "type" : "string"
                            },
                            "username" : {
                              "type" : "string"
                            }
                          },
                          "required" : [ "username", "password" ],
                          "type" : "object"
                        },
                        "bodyPatterns" : {
                          "description" : "Request body patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "items" : {
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "cookies" : {
                          "description" : "Cookie patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "headers" : {
                          "description" : "Header patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "method" : {
                          "description" : "The HTTP request method e.g. GET",
                          "type" : "string"
                        },
                        "queryParameters" : {
                          "description" : "Query parameter patterns to match against in the <key>: { \"<predicate>\": \"<value>\" } form",
                          "type" : "object"
                        },
                        "url" : {
                          "description" : "The path and query to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPath" : {
                          "description" : "The path to match exactly against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPathPattern" : {
                          "description" : "The path regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        },
                        "urlPattern" : {
                          "description" : "The path and query regex to match against. Only one of url, urlPattern, urlPath or urlPathPattern may be specified.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "requiredScenarioState" : {
                      "description" : "The required state of the scenario in order for this stub to be matched.",
                      "type" : "string"
                    },
                    "response" : {
                      "allOf" : [ {
                        "properties" : {
                          "additionalProxyRequestHeaders" : {
                            "description" : "Extra request headers to send when proxying to another host.",
                            "type" : "object"
                          },
                          "base64Body" : {
                            "description" : "The response body as a base64 encoded string (useful for binary content). Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "body" : {
                            "description" : "The response body as a string. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "bodyFileName" : {
                            "description" : "The path to the file containing the response body, relative to the configured file root. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "string"
                          },
                          "delayDistribution" : {
                            "description" : "The delay distribution. Valid property configuration is either median/sigma/type or lower/type/upper.",
                            "oneOf" : [ {
                              "description" : "Log normal randomly distributed response delay.",
                              "properties" : {
                                "median" : {
                                  "type" : "integer"
                                },
                                "sigma" : {
                                  "type" : "number"
                                },
                                "type" : {
                                  "enum" : [ "lognormal" ],
                                  "type" : "string"
                                }
                              },
                              "title" : "Log normal",
                              "type" : "object"
                            }, {
                              "description" : "Uniformly distributed random response delay.",
                              "properties" : {
                                "lower" : {
                                  "type" : "integer"
                                },
                                "type" : {
                                  "enum" : [ "uniform" ],
                                  "type" : "string"
                                },
                                "upper" : {
                                  "type" : "integer"
                                }
                              },
                              "title" : "Uniform",
                              "type" : "object"
                            } ]
                          },
                          "fault" : {
                            "description" : "The fault to apply (instead of a full, valid response).",
                            "enum" : [ "CONNECTION_RESET_BY_PEER", "EMPTY_RESPONSE", "MALFORMED_RESPONSE_CHUNK", "RANDOM_DATA_THEN_CLOSE" ],
                            "type" : "string"
                          },
                          "fixedDelayMilliseconds" : {
                            "description" : "Number of milliseconds to delay be before sending the response.",
                            "type" : "integer"
                          },
                          "fromConfiguredStub" : {
                            "description" : "Read-only flag indicating false if this was the default, unmatched response. Not present otherwise.",
                            "type" : "boolean"
                          },
                          "headers" : {
                            "description" : "Map of response headers to send",
                            "type" : "object"
                          },
                          "jsonBody" : {
                            "description" : "The response body as a JSON object. Only one of body, base64Body, jsonBody or bodyFileName may be specified.",
                            "type" : "object"
                          },
                          "proxyBaseUrl" : {
                            "description" : "The base URL of the target to proxy matching requests to.",
                            "type" : "string"
                          },
                          "status" : {
                            "description" : "The HTTP status code to be returned",
                            "type" : "integer"
                          },
                          "statusMessage" : {
                            "description" : "The HTTP status message to be returned",
                            "type" : "string"
                          },
                          "transformerParameters" : {
                            "description" : "Parameters to apply to response transformers.",
                            "type" : "object"
                          },
                          "transformers" : {
                            "description" : "List of names of transformers to apply to this response.",
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      } ]
                    },
                    "scenarioName" : {
                      "description" : "The name of the scenario that this stub mapping is part of",
                      "type" : "string"
                    },
                    "uuid" : {
                      "description" : "Alias for the id",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "total" : {
                    "example" : 4,
                    "type" : "integer"
                  }
                },
                "required" : [ "total" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "437e3252-a646-484b-866d-2e9ee1825c23",
    "name" : "Delete all stub mappings - 200",
    "request" : {
      "urlPath" : "/__admin/mappings",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "437e3252-a646-484b-866d-2e9ee1825c23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:01.271701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  } ]
}