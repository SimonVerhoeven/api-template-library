{
  "mappings" : [ {
    "id" : "8665dc63-da6e-3194-a2a4-f92f5d8ee01e",
    "name" : "",
    "request" : {
      "urlPath" : "/userinfo/v2/me",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"gender\" : \"Non-binary\",\n  \"link\" : \"lsjfgfz5zlzzshw1yzzjs3sqdypvkxim7jzpke4qk285hi1z78xt47q54okchew07jp5cxrbrxz23r6zgvnzxskn1c5frcz766s73tk2zk2ron9xeflu32ebkvqmkocxsx9j94op9of79r0kgmawanke\",\n  \"name\" : \"Laurel Kunde\",\n  \"id\" : \"1al2\",\n  \"verified_email\" : false,\n  \"given_name\" : \"Norene\",\n  \"hd\" : \"86hfnpjsl9ddv3v8pkpdnzqrbvng9cm5fp09slbnpfdd8cfkt3memzorm1f\",\n  \"locale\" : \"t4ceyktioet3ppprbovy6599djr0h3uhbtvvb1sh9su84k9relpdgg1my6xjnw0xvlg46islj723ds22ui2edoeue6zay4pszdbnry8tpuczmlc331bqjhuwnhukd7lnz0z9yi4j0i1c5fr5yl754xbyw2y6t5piuq59bet2mdcrst8qyrom1ibbedq\",\n  \"family_name\" : \"Dibbert\",\n  \"email\" : \"5lwrnz58rosy2xdum2hz3fp7qv42umxx9azfzahvroinz586i0da9b8kie591izty1micm4wsv\",\n  \"picture\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/agustincruiz/128.jpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8665dc63-da6e-3194-a2a4-f92f5d8ee01e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oauth2.userinfo.v2.me.get",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The user's email address.",
                "type" : "string"
              },
              "family_name" : {
                "description" : "The user's last name.",
                "type" : "string"
              },
              "gender" : {
                "description" : "The user's gender.",
                "type" : "string"
              },
              "given_name" : {
                "description" : "The user's first name.",
                "type" : "string"
              },
              "hd" : {
                "description" : "The hosted domain e.g. example.com if the user is Google apps user.",
                "type" : "string"
              },
              "id" : {
                "description" : "The obfuscated ID of the user.",
                "type" : "string"
              },
              "link" : {
                "description" : "URL of the profile page.",
                "type" : "string"
              },
              "locale" : {
                "description" : "The user's preferred locale.",
                "type" : "string"
              },
              "name" : {
                "description" : "The user's full name.",
                "type" : "string"
              },
              "picture" : {
                "description" : "URL of the user's picture image.",
                "type" : "string"
              },
              "verified_email" : {
                "default" : true,
                "description" : "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d9f813d3-18f1-3843-8690-277732c883c2",
    "name" : "",
    "request" : {
      "urlPath" : "/oauth2/v2/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"gender\" : \"Bigender\",\n  \"link\" : \"yer69w6uidibnanrnxjxslxiqdhuo1q8ngkiviktgbul61t1kz37bivk55szpt8jr47yj4b9uqov50lvqh9avp116unnj5obg9vamd8wqht2jd8fomzzb66av2e2r7kdfrkpcynty5s5dayfyikm3to46oyjw11\",\n  \"name\" : \"Floyd Carter\",\n  \"id\" : \"ctt5\",\n  \"verified_email\" : false,\n  \"given_name\" : \"Taylor\",\n  \"hd\" : \"glwd1dwiurtmfx6n9lrp0c6z4b8fv7vs8xnb8dwyhpve1tvfpzo2vxv2jeow6mwedhbckcyu3pjhy1lppzozuzy5z4k3\",\n  \"locale\" : \"f9uah471hjfycsjp8mdnvu2x\",\n  \"family_name\" : \"Bode\",\n  \"email\" : \"ct3z7vfag8yc9hzyq8z0ovex9gkv5kegw35uwpm4ppj2wql4hq\",\n  \"picture\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/arkokoley/128.jpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9f813d3-18f1-3843-8690-277732c883c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oauth2.userinfo.get",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The user's email address.",
                "type" : "string"
              },
              "family_name" : {
                "description" : "The user's last name.",
                "type" : "string"
              },
              "gender" : {
                "description" : "The user's gender.",
                "type" : "string"
              },
              "given_name" : {
                "description" : "The user's first name.",
                "type" : "string"
              },
              "hd" : {
                "description" : "The hosted domain e.g. example.com if the user is Google apps user.",
                "type" : "string"
              },
              "id" : {
                "description" : "The obfuscated ID of the user.",
                "type" : "string"
              },
              "link" : {
                "description" : "URL of the profile page.",
                "type" : "string"
              },
              "locale" : {
                "description" : "The user's preferred locale.",
                "type" : "string"
              },
              "name" : {
                "description" : "The user's full name.",
                "type" : "string"
              },
              "picture" : {
                "description" : "URL of the user's picture image.",
                "type" : "string"
              },
              "verified_email" : {
                "default" : true,
                "description" : "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "906192f7-8d7d-3505-a203-2ce8815890be",
    "name" : "",
    "request" : {
      "urlPath" : "/oauth2/v2/tokeninfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"audience\" : \"fd8cfa3519295rdsdnttkqzi9nbq2qqqmv1z2kr945fcm1cnbqetb\",\n  \"issued_to\" : \"0so17ryqyu652xbekzh5l07vb7fi6o4yavmxg9ilgv9osta1wnoi3v6h7ootqszmba0o8m92ayvz7pm6d2kkngff9l9h1q0uwasjxjwhkyu\",\n  \"user_id\" : \"173o\",\n  \"scope\" : \"ggpc5jxi6a8gocqhak61lm3xl49bko8bz86gtmacbm1wifukgtj4y6uok6m6fmahveoxsfo6ftwuzogk3e7vctopev39b48vdzf35lf3u7pbbkcslk2ldf5vm91vki3j8zn6khgovq7l2qy5mv7u2t6su9d369qaw6ziduppjtbmk3bvjurbcv6lu\",\n  \"verified_email\" : true,\n  \"expires_in\" : 164361970,\n  \"email\" : \"53tn1i2km6wok67ou3vsqnq23ths8zgz6exqytjzlt49xzv6d3pjed6ic3g8s7d9f751l3kdlmdvdutve6o4c9xn8xtys2l8dut1wil2y3kr220lxp9rqougc15kc9o133w8p2fpeyyc94oioo78etl6ctcpwamfexf0edtrqwqyfryns4kvqpmx722xvwk3mmes5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "906192f7-8d7d-3505-a203-2ce8815890be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oauth2.tokeninfo",
          "schema" : {
            "properties" : {
              "audience" : {
                "description" : "Who is the intended audience for this token. In general the same as issued_to.",
                "type" : "string"
              },
              "email" : {
                "description" : "The email address of the user. Present only if the email scope is present in the request.",
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiry time of the token, as number of seconds left until expiry.",
                "format" : "int32",
                "type" : "integer"
              },
              "issued_to" : {
                "description" : "To whom was the token issued to. In general the same as audience.",
                "type" : "string"
              },
              "scope" : {
                "description" : "The space separated list of scopes granted to this token.",
                "type" : "string"
              },
              "user_id" : {
                "description" : "The obfuscated user id.",
                "type" : "string"
              },
              "verified_email" : {
                "description" : "Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}