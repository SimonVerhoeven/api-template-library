{
  "mappings" : [ {
    "id" : "1e8240ca-4321-400d-ac57-0ff1c6d2e0ce",
    "name" : "",
    "request" : {
      "urlPath" : "/userinfo/v2/me",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"gender\" : \"Genderfluid\",\n  \"link\" : \"ioplgmth6fxqf2ily9n59yq12zvo6enkzsrf68ks8f7zrpt05fp2exjgjg5mp212uhixmdkd6pncmu8vwta2728o2dcvilpqqsejd3qormptdkp\",\n  \"name\" : \"Edmond Auer\",\n  \"id\" : \"aizh\",\n  \"verified_email\" : true,\n  \"given_name\" : \"Jeffery\",\n  \"hd\" : \"wz1orwz5i\",\n  \"locale\" : \"yctmujclnirc77vi57ysfk2l9ot8824jji3ub5qdifmuqisv7kjwih6296kx4qv0jbcmotg3k8ha9ztceqhnq4y43ekpj9za3jecstx9ncrw02m1aoa4z3433fx9owpap0o5jz0f5vhz4ry2jmozawa392j84zd9e0v0u1\",\n  \"family_name\" : \"Doyle\",\n  \"email\" : \"6urjg13shqzjmz\",\n  \"picture\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/stefooo/128.jpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e8240ca-4321-400d-ac57-0ff1c6d2e0ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.954383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oauth2.userinfo.v2.me.get",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The user's email address.",
                "type" : "string"
              },
              "family_name" : {
                "description" : "The user's last name.",
                "type" : "string"
              },
              "gender" : {
                "description" : "The user's gender.",
                "type" : "string"
              },
              "given_name" : {
                "description" : "The user's first name.",
                "type" : "string"
              },
              "hd" : {
                "description" : "The hosted domain e.g. example.com if the user is Google apps user.",
                "type" : "string"
              },
              "id" : {
                "description" : "The obfuscated ID of the user.",
                "type" : "string"
              },
              "link" : {
                "description" : "URL of the profile page.",
                "type" : "string"
              },
              "locale" : {
                "description" : "The user's preferred locale.",
                "type" : "string"
              },
              "name" : {
                "description" : "The user's full name.",
                "type" : "string"
              },
              "picture" : {
                "description" : "URL of the user's picture image.",
                "type" : "string"
              },
              "verified_email" : {
                "default" : true,
                "description" : "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0f12b3c8-74f2-4cf8-b02f-85c2dfd25a87",
    "name" : "",
    "request" : {
      "urlPath" : "/oauth2/v2/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"gender\" : \"Male\",\n  \"link\" : \"q016cytr6jlx7nncimyza4ok03ovq403isz34qemdi4pxkpu06cep0p5jyuqmtwb6s664fi929ywni7pczsaaau327bjsmu5o0ucezer49to2t23nm8bbe1j1z9mgdult3ahco55cuavgttylyzpmo5b89q6ivdss1ks8csu27lmzasups8fi4npq2r96gqs3zq\",\n  \"name\" : \"Myrna Ratke Sr.\",\n  \"id\" : \"1073\",\n  \"verified_email\" : false,\n  \"given_name\" : \"Young\",\n  \"hd\" : \"m62rx\",\n  \"locale\" : \"4emcut1zoer3mf54oa25iyawlkhs9illl5vl9s9479qnib6vbas4t31501bimhgwndefwzx20tw8qm0fx6mxyangw5ybrk77f1cg\",\n  \"family_name\" : \"Bruen\",\n  \"email\" : \"lzjur98cfvqnaf81z26nobtaarhh4eez5a0ao5m2u1zobnkbtgtcasmq8xygo0wwxczy3ow1gs\",\n  \"picture\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/raquelwilson/128.jpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f12b3c8-74f2-4cf8-b02f-85c2dfd25a87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.953935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oauth2.userinfo.get",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The user's email address.",
                "type" : "string"
              },
              "family_name" : {
                "description" : "The user's last name.",
                "type" : "string"
              },
              "gender" : {
                "description" : "The user's gender.",
                "type" : "string"
              },
              "given_name" : {
                "description" : "The user's first name.",
                "type" : "string"
              },
              "hd" : {
                "description" : "The hosted domain e.g. example.com if the user is Google apps user.",
                "type" : "string"
              },
              "id" : {
                "description" : "The obfuscated ID of the user.",
                "type" : "string"
              },
              "link" : {
                "description" : "URL of the profile page.",
                "type" : "string"
              },
              "locale" : {
                "description" : "The user's preferred locale.",
                "type" : "string"
              },
              "name" : {
                "description" : "The user's full name.",
                "type" : "string"
              },
              "picture" : {
                "description" : "URL of the user's picture image.",
                "type" : "string"
              },
              "verified_email" : {
                "default" : true,
                "description" : "Boolean flag which is true if the email address is verified. Always verified because we only return the user's primary email address.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ae7092e-dcff-4cd1-bd52-0567d607cdb9",
    "name" : "",
    "request" : {
      "urlPath" : "/oauth2/v2/tokeninfo",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"audience\" : \"kwliteabrmbttzcq535miebi1nhuzqrrd79prvtln8srps6p8b8f0a46sdowk89dfzzyebqbk9bb39xwijvsxbakmctncthn5cooj62m07yqsjf46ymw2qxjwf6yqxmv5eebweso1zfzrdgxq4h4yngdtip2rftylhz0cpd5caoe0w1no6cjpujgb1569kdky\",\n  \"issued_to\" : \"xz4f3457hxhsapmepchm1k76kn2ooh3wzebux9o0ksmiw7r595oaa76i8ciroy9imy017anth5lkvsd8oxw4xsfgghuhznv4um7j1\",\n  \"user_id\" : \"kw13\",\n  \"scope\" : \"etd6u6lncax4951xhq72cskhcqgfyt0qtpdakmeq8eum1skw6fgb96f0ms40zdl88k5h8vz7sl5dqig5vy7ezgosplqp5y9itzk8oi16gsosoza6ihtqit8jucbzm7halksb730yf8dnxy\",\n  \"verified_email\" : false,\n  \"expires_in\" : 861830303,\n  \"email\" : \"gs6sjrwu6ffa390\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ae7092e-dcff-4cd1-bd52-0567d607cdb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.952592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "oauth2.tokeninfo",
          "schema" : {
            "properties" : {
              "audience" : {
                "description" : "Who is the intended audience for this token. In general the same as issued_to.",
                "type" : "string"
              },
              "email" : {
                "description" : "The email address of the user. Present only if the email scope is present in the request.",
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiry time of the token, as number of seconds left until expiry.",
                "format" : "int32",
                "type" : "integer"
              },
              "issued_to" : {
                "description" : "To whom was the token issued to. In general the same as audience.",
                "type" : "string"
              },
              "scope" : {
                "description" : "The space separated list of scopes granted to this token.",
                "type" : "string"
              },
              "user_id" : {
                "description" : "The obfuscated user id.",
                "type" : "string"
              },
              "verified_email" : {
                "description" : "Boolean flag which is true if the email address is verified. Present only if the email scope is present in the request.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}