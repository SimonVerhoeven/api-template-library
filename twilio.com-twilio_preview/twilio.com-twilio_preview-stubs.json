{
  "mappings" : [ {
    "id" : "13454b5f-d47d-3577-8de0-c2500f713061",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Sims/s76z/Usage",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sim_sid\" : \"DEE6DB1a2c47f9E7a13E34DbF1E7d7FdE5\",\n  \"commands_usage\" : { },\n  \"period\" : { },\n  \"commands_costs\" : { },\n  \"data_costs\" : { },\n  \"sim_unique_name\" : \"Daniell Deckow\",\n  \"account_sid\" : \"AC8B20D95AcfBCac1a2758142e30E1c40e\",\n  \"data_usage\" : { },\n  \"url\" : \"https://web.example.mocklab.io/207651\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13454b5f-d47d-3577-8de0-c2500f713061",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchWirelessUsage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commands_costs" : {
                "nullable" : true
              },
              "commands_usage" : {
                "nullable" : true
              },
              "data_costs" : {
                "nullable" : true
              },
              "data_usage" : {
                "nullable" : true
              },
              "period" : {
                "nullable" : true
              },
              "sim_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sim_unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "69cd4e8f-1883-33d1-881f-82624722978b",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Sims/14l6",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"voice_method\" : \"DELETE\",\n  \"friendly_name\" : \"Frederic Jones\",\n  \"date_updated\" : \"2022-08-09T22:35:35.045Z\",\n  \"voice_url\" : \"https://web.example.mocklab.io/070076\",\n  \"date_created\" : \"2023-03-07T12:55:50.045Z\",\n  \"sms_url\" : \"https://web.example.mocklab.io/418857\",\n  \"sms_fallback_method\" : \"PATCH\",\n  \"voice_fallback_method\" : \"DELETE\",\n  \"commands_callback_method\" : \"7koxg\",\n  \"commands_callback_url\" : \"https://web.example.mocklab.io/671679\",\n  \"url\" : \"https://web.example.mocklab.io/697018\",\n  \"sid\" : \"DEEBC3aCceb399C6Ef0d5cb10470bc6Eb1\",\n  \"iccid\" : \"38rv\",\n  \"unique_name\" : \"Ms. Jamie Rice\",\n  \"voice_fallback_url\" : \"https://web.example.mocklab.io/827122\",\n  \"sms_fallback_url\" : \"https://web.example.mocklab.io/535458\",\n  \"account_sid\" : \"ACA5d1f3A306FAE4D2C95c5eFEbDaAC5EC\",\n  \"rate_plan_sid\" : \"WPe391Cd90b4a1adaae27f96122d8006EA\",\n  \"sms_method\" : \"PUT\",\n  \"e_id\" : \"yrma\",\n  \"links\" : { },\n  \"status\" : \"yj9ei8jqzhy1w7t0a32jwxrc8a7e1kruv074knvlhyu0l1m4nqsp8wbbnfsotno49id74mgsz8sq5yo5dc3ixgpvcrr2v8o16guor84i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69cd4e8f-1883-33d1-881f-82624722978b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateWirelessSim",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commands_callback_method" : {
                "nullable" : true,
                "type" : "string"
              },
              "commands_callback_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "e_id" : {
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "iccid" : {
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "rate_plan_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sms_fallback_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "sms_fallback_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "sms_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "sms_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status" : {
                "nullable" : true,
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_fallback_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "voice_fallback_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "voice_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "78040237-96a3-3dac-b900-b8821a858992",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Sims/9yu5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"voice_method\" : \"DELETE\",\n  \"friendly_name\" : \"Isabella Von\",\n  \"date_updated\" : \"2023-02-24T15:29:45.044Z\",\n  \"voice_url\" : \"https://web.example.mocklab.io/376048\",\n  \"date_created\" : \"2022-09-23T02:08:08.044Z\",\n  \"sms_url\" : \"https://web.example.mocklab.io/613244\",\n  \"sms_fallback_method\" : \"PUT\",\n  \"voice_fallback_method\" : \"HEAD\",\n  \"commands_callback_method\" : \"dr9mmgyhw3n1iodgcgiw2xcqks7c83katxxw8pcsun90utoc54f5ofk15i3u66kig9wa8gecs95zpql1fkor7pid5d4uqlv5jn1myea6v9chfxv6wgx66wn7gd3sg66imak13mxcr9304l0s60\",\n  \"commands_callback_url\" : \"https://web.example.mocklab.io/486766\",\n  \"url\" : \"https://web.example.mocklab.io/689252\",\n  \"sid\" : \"DEcCb77cC2f893C26FfFa5FcD8e4b51daE\",\n  \"iccid\" : \"g478\",\n  \"unique_name\" : \"Augustine Oberbrunner\",\n  \"voice_fallback_url\" : \"https://web.example.mocklab.io/083534\",\n  \"sms_fallback_url\" : \"https://web.example.mocklab.io/698184\",\n  \"account_sid\" : \"ACEFdb81cb0BDAFf902E1aacC0BAb70DFF\",\n  \"rate_plan_sid\" : \"WP03Ea55CaF60E978298b9e0F25EF42A70\",\n  \"sms_method\" : \"POST\",\n  \"e_id\" : \"ptv6\",\n  \"links\" : { },\n  \"status\" : \"brcb24ixdvsgd410pj1zn1258lumkgsp0msr2g05qvevmj8hn5g0fz82lphwo9905g6379r543ioyz0orgisjudil78h5xhkx5esuxvjq4y74fd9phsjiw3af71uef4clentzkiddhsjap0x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78040237-96a3-3dac-b900-b8821a858992",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchWirelessSim",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commands_callback_method" : {
                "nullable" : true,
                "type" : "string"
              },
              "commands_callback_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "e_id" : {
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "iccid" : {
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "rate_plan_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sms_fallback_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "sms_fallback_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "sms_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "sms_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "status" : {
                "nullable" : true,
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_fallback_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "voice_fallback_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_method" : {
                "enum" : [ "HEAD", "GET", "POST", "PATCH", "PUT", "DELETE" ],
                "format" : "http-method",
                "nullable" : true,
                "type" : "string"
              },
              "voice_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7e536910-a6a2-370f-8221-4a1760e97935",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Sims",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/731126\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/019289\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/023717\",\n    \"page\" : 4490628098186288533,\n    \"key\" : \"10ptod8op9v8j2tjdo7bgcj4swntdq6tx43nplqza6g4kliyqrp18ht0lcb57116ikrl2qkl9rg8tqj52oijlvf9mzje8wft73v99v5e2odby45px2aq0g4sbs75bdyike4wj0y7kv02oywl7a5e329jzs\",\n    \"url\" : \"https://web.example.mocklab.io/478058\",\n    \"page_size\" : 4119116159499862050\n  },\n  \"sims\" : [ {\n    \"voice_method\" : \"POST\",\n    \"friendly_name\" : \"Earl Beatty\",\n    \"date_updated\" : \"2022-04-30T06:43:35.039Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/575140\",\n    \"date_created\" : \"2023-07-19T13:56:24.039Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/173625\",\n    \"sms_fallback_method\" : \"POST\",\n    \"voice_fallback_method\" : \"PUT\",\n    \"commands_callback_method\" : \"mqsvujdgnleklio3on6rmxcue5vq2b5c64p74f4wlcflaltz49phuxim1l7vqh16nigv459y5vfu6j65sw9c66gnnw1m680yega3pmmjg7vw8ofw3pmiqnosr6g4\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/687167\",\n    \"url\" : \"https://web.example.mocklab.io/598948\",\n    \"sid\" : \"DE77E51Fe0296f3E6B23E50c6e9F07e190\",\n    \"iccid\" : \"yo49\",\n    \"unique_name\" : \"Bill Cruickshank\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/781066\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/165474\",\n    \"account_sid\" : \"AC2BdCCFFAa6F3a3c0aA3BDc2A7c3F8DBb\",\n    \"rate_plan_sid\" : \"WP9DbCfAda7124CBdbd7cE533A325b4CaF\",\n    \"sms_method\" : \"POST\",\n    \"e_id\" : \"mr6j\",\n    \"links\" : { },\n    \"status\" : \"o71i8vji78bs4i3d6ff201oifnksvsfrwdw1mt8i83lymmg7v0ba5e13sgjoeyg8hub6w1xu7uu6y6d1decx56vvhv\"\n  }, {\n    \"voice_method\" : \"POST\",\n    \"friendly_name\" : \"Zackary Botsford\",\n    \"date_updated\" : \"2022-07-16T23:55:00.039Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/679207\",\n    \"date_created\" : \"2023-04-14T10:32:04.039Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/221023\",\n    \"sms_fallback_method\" : \"POST\",\n    \"voice_fallback_method\" : \"HEAD\",\n    \"commands_callback_method\" : \"klv4qsrs4y3l8uhbpolhiqwob9p3cbrwyro2vyvquxc08wmnuu8su216tyxqj6gevld069lk7p742ctom41z9pl5rx856xdeshf00lkib84v0jh12nxxpr8lxtwt7cvur9u4bysz1vz5s4xb14wpl9y404rp4wokwbmqwmujiu\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/531360\",\n    \"url\" : \"https://web.example.mocklab.io/841317\",\n    \"sid\" : \"DE7fFd6e14Be23Ca8Dc34caAb0fBCAB82d\",\n    \"iccid\" : \"bo7k\",\n    \"unique_name\" : \"Dr. Soraya Haag\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/720638\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/303937\",\n    \"account_sid\" : \"ACd17ed1094878CCc22dFDD5FABAEDA439\",\n    \"rate_plan_sid\" : \"WPE2b22fd36b026e5dDFeD08eb447Fba5E\",\n    \"sms_method\" : \"PATCH\",\n    \"e_id\" : \"59r3\",\n    \"links\" : { },\n    \"status\" : \"hkmnv2l8yhhio231ix9nn5x20y8qeukz48cqbmhwf5wk9niag3bmpcyyf4ms73zc9swu4du5tip7whulbtpz7tau0tsx9mtifviigkqw\"\n  }, {\n    \"voice_method\" : \"PATCH\",\n    \"friendly_name\" : \"Teofila Medhurst\",\n    \"date_updated\" : \"2022-12-21T19:01:17.04Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/556522\",\n    \"date_created\" : \"2023-03-16T07:45:19.04Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/259822\",\n    \"sms_fallback_method\" : \"GET\",\n    \"voice_fallback_method\" : \"PATCH\",\n    \"commands_callback_method\" : \"mjiq3602sg2brtwycule\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/436417\",\n    \"url\" : \"https://web.example.mocklab.io/278560\",\n    \"sid\" : \"DEFa13Bcbe6fA70fD991caFA8dbfd09BAF\",\n    \"iccid\" : \"29sj\",\n    \"unique_name\" : \"Millie Lindgren PhD\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/601231\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/924163\",\n    \"account_sid\" : \"AC5317bAa2023B2e3FceD4e4C7bAEAe565\",\n    \"rate_plan_sid\" : \"WPfa8d5f29BE97Ebab2b3BeCE8296F2CE1\",\n    \"sms_method\" : \"PUT\",\n    \"e_id\" : \"h76w\",\n    \"links\" : { },\n    \"status\" : \"cywt6xli41o46atfrbfcydif9umbkktmb5fb37qimworzc5go6yxses6d1vouwa0b709m4e1mgfo75dtss9x9b3ah3p994ikwgvkmyli896h52293vyf\"\n  }, {\n    \"voice_method\" : \"PUT\",\n    \"friendly_name\" : \"Sherita Glover\",\n    \"date_updated\" : \"2022-04-02T12:22:25.041Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/447744\",\n    \"date_created\" : \"2022-08-16T07:13:22.041Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/786433\",\n    \"sms_fallback_method\" : \"DELETE\",\n    \"voice_fallback_method\" : \"PATCH\",\n    \"commands_callback_method\" : \"p0xv1x89ow0cxg17higadsnybdbcq5usihjj7ph6n6ogyzfuijsp5ubwruapawe33suqi60jzv2zh4j3ilw9cbfalsx418obt6zp6viil4u2y3fmjsbv1rrjn4g08wajru9iezpv8sitgpucrn1dm2z8wa4f60ykqexisbrc80zoc8rs1bnk\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/025674\",\n    \"url\" : \"https://web.example.mocklab.io/341657\",\n    \"sid\" : \"DEDaeA51abBEDe5b6EDDd401AeB46d3bf9\",\n    \"iccid\" : \"3j33\",\n    \"unique_name\" : \"Eleanora Bogisich Sr.\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/182454\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/670926\",\n    \"account_sid\" : \"AC20AF9eB02DfB21c3625FDbfc0acaa9c0\",\n    \"rate_plan_sid\" : \"WP4B5Aa4f7E4a1bA5f02d20A76e1D28dBD\",\n    \"sms_method\" : \"PATCH\",\n    \"e_id\" : \"uu7c\",\n    \"links\" : { },\n    \"status\" : \"v3vck66de9t1mnfj3a3cncf35ktqq8a0trjkv22jxbpi3iibpsedtqtvwo9b0f\"\n  }, {\n    \"voice_method\" : \"PATCH\",\n    \"friendly_name\" : \"Reginald Grant DDS\",\n    \"date_updated\" : \"2023-08-11T12:34:13.041Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/154029\",\n    \"date_created\" : \"2023-01-14T22:19:05.041Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/297705\",\n    \"sms_fallback_method\" : \"POST\",\n    \"voice_fallback_method\" : \"HEAD\",\n    \"commands_callback_method\" : \"m4a5f2kvm9996w6c5wje79pezxdcqnzlmcec4evzochlhi8az6vm4d8avuacdca2vmny23g16z1qxzpa792j3ccydsgm0pirg3p7g97w6umjb6\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/524219\",\n    \"url\" : \"https://web.example.mocklab.io/344727\",\n    \"sid\" : \"DE8eFd5b13fADd5F3c7B51Dc24c7D6bD40\",\n    \"iccid\" : \"62m8\",\n    \"unique_name\" : \"Yetta Cummings\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/017641\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/915643\",\n    \"account_sid\" : \"AC887434Fc9ADAADF44Bdc89A6bB0a757A\",\n    \"rate_plan_sid\" : \"WP0c7eC0Bd0d5aE5A0A4Bd7dbBAB4cf690\",\n    \"sms_method\" : \"GET\",\n    \"e_id\" : \"0p6l\",\n    \"links\" : { },\n    \"status\" : \"0mjjwk3ot3linfv0gyi\"\n  }, {\n    \"voice_method\" : \"HEAD\",\n    \"friendly_name\" : \"Abraham Shields\",\n    \"date_updated\" : \"2022-06-12T01:56:39.042Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/209247\",\n    \"date_created\" : \"2023-08-29T15:10:52.042Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/571971\",\n    \"sms_fallback_method\" : \"PUT\",\n    \"voice_fallback_method\" : \"GET\",\n    \"commands_callback_method\" : \"ewu8kdyk5r1clltvb9ptirnp5uqlicyrnlk5lgw5tin4pwm9kkle\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/607997\",\n    \"url\" : \"https://web.example.mocklab.io/081801\",\n    \"sid\" : \"DECbf3f905dAD88B2CBDedDb22dD8a876C\",\n    \"iccid\" : \"unj0\",\n    \"unique_name\" : \"Arlie Crona\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/130151\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/773275\",\n    \"account_sid\" : \"ACCfFfF62bCFFC8bbb3F0BF2860b0E5E4a\",\n    \"rate_plan_sid\" : \"WP69DCe2fd6DaeFAD62DdA7854dBfdCDDD\",\n    \"sms_method\" : \"GET\",\n    \"e_id\" : \"6607\",\n    \"links\" : { },\n    \"status\" : \"du2hol9dy3u07exlm40ynf5ywppeito45r46uuwkaqa6n8qowe3zu3jdijn63hxb9yp8008xn3j4orprwffapahx4d7dtly4yjitkqz95jdkk0k6j86za4ket0b2\"\n  }, {\n    \"voice_method\" : \"DELETE\",\n    \"friendly_name\" : \"Elena McGlynn\",\n    \"date_updated\" : \"2024-02-25T09:57:41.043Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/801631\",\n    \"date_created\" : \"2022-10-19T04:37:17.043Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/773437\",\n    \"sms_fallback_method\" : \"POST\",\n    \"voice_fallback_method\" : \"POST\",\n    \"commands_callback_method\" : \"ocjuheuuntxnc4qol407uz4ueqyc10v2k9804o6e3r6jg0jxqlvd8gmag9bpvomryjemn08a9lo1xddbunp0u5ewwqwslyjza01nrv2v3msu5xeuvg90qf70io45nmy1p7ggs9jrti6lehgyx6c7g1l18k0it3on29wsa5jbqidgldufvkmqi\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/601504\",\n    \"url\" : \"https://web.example.mocklab.io/885296\",\n    \"sid\" : \"DEEaBCE897dC904Bf5B999BdB85BAaCFc8\",\n    \"iccid\" : \"7p3b\",\n    \"unique_name\" : \"Coleman Emmerich\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/422633\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/469531\",\n    \"account_sid\" : \"ACbff5FF6EacbefBfc844e037f9fFe111d\",\n    \"rate_plan_sid\" : \"WPF723CCeA90aafaB5A6c3C53D185697Ba\",\n    \"sms_method\" : \"POST\",\n    \"e_id\" : \"1or3\",\n    \"links\" : { },\n    \"status\" : \"yduh0jb1wojf7ehm8wbl5nu1qxej48ugs7cbny1ll83rj1ozmmwcazsik71n3rhhyxc8f3rnhdibh4nhfplxnyrb68yuezl8ffbuaj8kwrppaaj57u6ksaj5dw1fm8sg4oc32c4ck9s82zuhb5hx0ufj42xc3ul1vh4d3869zwmb5b9xehnoo6p683yv1lbwfp\"\n  }, {\n    \"voice_method\" : \"HEAD\",\n    \"friendly_name\" : \"Mr. Mariano Connelly\",\n    \"date_updated\" : \"2023-04-16T11:34:35.043Z\",\n    \"voice_url\" : \"https://web.example.mocklab.io/587065\",\n    \"date_created\" : \"2023-07-22T02:37:39.043Z\",\n    \"sms_url\" : \"https://web.example.mocklab.io/978735\",\n    \"sms_fallback_method\" : \"POST\",\n    \"voice_fallback_method\" : \"HEAD\",\n    \"commands_callback_method\" : \"ay0m0vwpnihmqu0bekes053rczsfytxnuaxtx43gi293nt4z4fodeegqmpqdlkv37m\",\n    \"commands_callback_url\" : \"https://web.example.mocklab.io/165321\",\n    \"url\" : \"https://web.example.mocklab.io/751892\",\n    \"sid\" : \"DEf38C2cd710743Ccbc8bAbbfCFA3FB065\",\n    \"iccid\" : \"9nwg\",\n    \"unique_name\" : \"Ocie Baumbach\",\n    \"voice_fallback_url\" : \"https://web.example.mocklab.io/802853\",\n    \"sms_fallback_url\" : \"https://web.example.mocklab.io/568021\",\n    \"account_sid\" : \"ACb0c790Dab94455Bf1D9462a673462c93\",\n    \"rate_plan_sid\" : \"WP461ac85dF83a32dfDf4A23BBB6BCae87\",\n    \"sms_method\" : \"POST\",\n    \"e_id\" : \"t04y\",\n    \"links\" : { },\n    \"status\" : \"a6h3uvpkqio2m9fd4zleoqaz63m9nejn1l1md9j31cr5wic2u74houkfvswfufj673sbfcxwuyhcxhdus3c6cl3ipbsa2hmma36j33ii2ukthxfbdkdetmcj42uz\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e536910-a6a2-370f-8221-4a1760e97935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListWirelessSim",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "sims" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.wireless.sim"
                },
                "type" : "array"
              }
            },
            "title" : "ListWirelessSimResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "c117e2e3-be38-3286-86ea-03d4445623e2",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/RatePlans/bx4h",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Ms. Irene Langosh\",\n  \"date_updated\" : \"2023-09-10T03:36:33.038Z\",\n  \"data_limit\" : 1829136954647585764,\n  \"national_roaming_enabled\" : true,\n  \"date_created\" : \"2023-09-27T12:10:59.038Z\",\n  \"data_metering\" : \"cb5ss0nz3f0haokpqivipb9ha5qni7p2w8flcczk7w8vf5n8badvn7xleax9zojsu10pohg57ybzib0e849ib1cunlxl4jpw2o3z9khnq4e3q1r9xi94lg2gdify156hhiwvm0ct9m4rv4wvu6t33hfn02jl9ys5ygot8zsa2bedjbf\",\n  \"voice_enabled\" : true,\n  \"data_enabled\" : true,\n  \"international_roaming\" : [ \"vc887\", \"whf6ydl41u58f7cmcbtgs52v1re6dfce2hlq7qnvjm\", \"gk76nrjeh6f3x01ijjw72h581b9gzrdu8qrhsme4vm937whhrgq583obmbrsky86xnzykojp3mdq44lmdm5u268u9o07eo5fdqz9692jbm94w\", \"jhs9ii1a1br5new63ox110fvd0pwh\", \"sjle0x1l8rnjgprdi34dolufs17osz5xhvgmoufodr9s8pmiuz5rcv1bokr21ejadwneeuwzl5c4fpjbjezrl2uttam4s0zdwed3ry2wdpgavlohknae3bt8gxb2g4m25si634z1cz45yu\", \"fxe3wpuiqxx0wkq8ilwzycufb3vmidbzmicoscjq7aj770hfl6j17uugcprji65a6o9kxp\", \"rimqc3kn3d1qwse3a4zxvwp3e4uxi2ccdthqvz54eaeueu4bml1z9bwao9uhheurhe2uvrwuvorcndvg5uqovdsvpa42016i5bidwm1n6y65201x3908gzo5fsmogq77uijkm9e4r1xo386rksy8xwpew2m10yu7f2uh\" ],\n  \"url\" : \"https://web.example.mocklab.io/832012\",\n  \"sid\" : \"WP55AfE2AC47af335eDDDcB9B55DeDE1Ba\",\n  \"unique_name\" : \"Wallace Schulist\",\n  \"messaging_enabled\" : true,\n  \"account_sid\" : \"AC7dd5D63a969FEB74974FcFc6bf33dd5F\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c117e2e3-be38-3286-86ea-03d4445623e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateWirelessRatePlan",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "data_limit" : {
                "nullable" : true,
                "type" : "integer"
              },
              "data_metering" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "international_roaming" : {
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "messaging_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "national_roaming_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "be79c4bd-a6ff-3016-970d-3d797cb1628f",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/RatePlans/55mh",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Rochelle Will\",\n  \"date_updated\" : \"2023-02-04T17:58:21.038Z\",\n  \"data_limit\" : 3773334316231687478,\n  \"national_roaming_enabled\" : true,\n  \"date_created\" : \"2023-01-21T12:05:57.038Z\",\n  \"data_metering\" : \"uzop3xnjryupwvidhzvth8g7y739bl8cr0husb02zqh4nlgy6f3jxj07vslg4r2o510rgvtg2mbnk367iuf7h5qj1k9lbt994qefth\",\n  \"voice_enabled\" : false,\n  \"data_enabled\" : false,\n  \"international_roaming\" : [ \"72a78rriz9eaeqepyqdhtuzjrkop6mj26ivojte7mxa9jb7ikrwq3wi9hor87ux77h6rp9jlx65swsww6r0chiu3tjvfuklf7ta4\", \"psdetnqn5ktaq4kvv8hu1ce4zlakctstw1ma6tf19odtim5ad557ks4ok0nmjw4ddjfgjpg8yqfnxx8cxcrtiepj61men2ndmgwmboasdha92j9vwekbvcdmf79v3pulcatm0a8ue12ra0jtu1zqt7\", \"0z1ponlf05hfhpo3dpd6tx926dssvst0j85f2kmanrtg6ddh7xerk1vr6e80b7x7p4k2f4asq4lcaxpifq1rjedk9kfkpcfr7f0ku0wlu1v2ih5zgsieqds1784mfoyhlgv\", \"3u3wm6qvs912nxe96lekimg6frdfvej92sgf41tx0eov7crweyaa5bjpohre0mpo3h4hutd6fv6dbx37ygvz6intbdyxktdgwp2x3ativnz00obys2ca5hk7kfy339qnfvjdwn0ijf4mpx3tal9oh7x54hc04opw9vh2kql0nib9r4ihuga1\", \"mxctym446tkfkn683q3ckbp8glj728yau26ehyservoox4527iyqmnd5fuz5o9k0xa7y5rtq7dnxs6jp0jqkm5gicarlg4x09yu72br9eme9ksyvhmprw8hnizpilu368o3voi6200sxm\", \"v2y1vab9l0wrvi1q1d2h8r3\", \"5eotcinmpnhmavj75ehg4kw43sr42q63wzsuox093qmrj2rhs1fu83rgwqo3xmw3l5411ue7c8ksu0ebuj63emu1txoks32pa8vq5gzsbo315sxhow3yx56nvbvylgx0l\", \"10z9gbvxwdd1wou1snerwcka0hs52c3id1toiiodfz5p43ckh0mqpjb19kun6esrxi8ztf6875rapydzlfpnpjhl1j9tha5hlshfzn9evt0h39l1ig32sozmb58qvggmdha36lar0eqd7vjghnpo85gskmmahw2s0zs35yh7ekyvzdzji4xc33dngu9qy5u\" ],\n  \"url\" : \"https://web.example.mocklab.io/491878\",\n  \"sid\" : \"WP745e1FceB73f4A1115E9FD8c609Eb32b\",\n  \"unique_name\" : \"Jodee Murazik\",\n  \"messaging_enabled\" : false,\n  \"account_sid\" : \"AC1ADae9AA453DcAa0C8237e9D62ac68bA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be79c4bd-a6ff-3016-970d-3d797cb1628f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchWirelessRatePlan",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "data_limit" : {
                "nullable" : true,
                "type" : "integer"
              },
              "data_metering" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "international_roaming" : {
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "messaging_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "national_roaming_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "9620663b-fc26-3eb6-9da3-35736c9eac89",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/wireless/RatePlans/693v",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9620663b-fc26-3eb6-9da3-35736c9eac89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteWirelessRatePlan"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "41c4fe61-c77c-3dcd-8885-417fd9744b3f",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/RatePlans",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Whitney Monahan\",\n  \"date_updated\" : \"2023-12-19T19:29:12.037Z\",\n  \"data_limit\" : 5565397215572000336,\n  \"national_roaming_enabled\" : true,\n  \"date_created\" : \"2023-11-15T13:25:49.037Z\",\n  \"data_metering\" : \"kgavn167mke81yhwmqqr8pw3gmyipl22oikwfto9r04qdt9ulgp2j9lh3t559b5izvxyappvfbl6lm4hl8cc78zrp9qk7kiwx6vxcfkobhagqhrcinn4t5erurk2gyo1y70ou\",\n  \"voice_enabled\" : true,\n  \"data_enabled\" : false,\n  \"international_roaming\" : [ \"ydtjmg79scuzx4zq2pxya36awpdxjwqgd0okm5f48ojolnt8nht073czcr5g7a4hix7tyxtni1f9t9pxswnxuse64bkxpanl3olm9kojq184iswezhabqv8n88omasrpd3my3vpjnd1b3nu6dnik7e2w4j691pvk0wuj4tsofciwh32ayt76q07ekgzg64wk9\", \"mrz0ru0ctw\", \"g6xwqcaygy3nnzcuds07ww5u23nn1bf77m9h0w7rri5ok5nalxutgx3ugsxyyfejfdltdwz7lt5thge2qfebg5zjlrruohjxc4jgacniou76awmz7zifxfo9mxl99r25xm5tl57lkmevkxuca5gn47elfez1c8ogvwgh4x5vf8gzdmv\", \"1fedzfykvdoyssbottc3v3fy4uur0i11zcvijcc74v8wxthex85\", \"2xtj285270two0aguaxwhjm7np0zlbids8wlrbmkozaqcbhu31aiukje4du8ubtuej7tdz22lpunidkw7pko2xx80ryem0uqox1uk9n9kkzjyeknwegq4uxra0o59ye9m6flfivrssg666tkowor9rat4z1oxkpw8n\", \"9yfbqfsqi0iwikvafvu8jeimn\" ],\n  \"url\" : \"https://web.example.mocklab.io/756392\",\n  \"sid\" : \"WPBD7B9686DCc0CaB2ccFa2fE994A7Fd95\",\n  \"unique_name\" : \"Dr. Angela Roberts\",\n  \"messaging_enabled\" : false,\n  \"account_sid\" : \"AC7E1b622CcbDC0fB5eDd41F27220C1ea9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41c4fe61-c77c-3dcd-8885-417fd9744b3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateWirelessRatePlan",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "data_limit" : {
                "nullable" : true,
                "type" : "integer"
              },
              "data_metering" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "international_roaming" : {
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "messaging_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "national_roaming_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "voice_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b8c8bfff-4d55-32ad-ac13-e06be50463e0",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/RatePlans",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rate_plans\" : [ {\n    \"friendly_name\" : \"Arthur Mraz\",\n    \"date_updated\" : \"2022-06-13T02:14:58.036Z\",\n    \"data_limit\" : 8148425402943430800,\n    \"national_roaming_enabled\" : false,\n    \"date_created\" : \"2024-02-20T15:35:41.036Z\",\n    \"data_metering\" : \"bvifzs\",\n    \"voice_enabled\" : true,\n    \"data_enabled\" : true,\n    \"international_roaming\" : [ \"stm6nm2p0tu6d4k7b30ndtv9frz5dveja2ofo02ul2pwji075781esuz7quoharl1myuuk9exptli3fk\", \"vl8e8ivzcbhcp1z0unjzotjk57cbr0wo5eg28rqnxjz5k\" ],\n    \"url\" : \"https://web.example.mocklab.io/345132\",\n    \"sid\" : \"WP25Bdd4E4b4ed4EaC2da4D27C02fb7221\",\n    \"unique_name\" : \"Miss Lynwood Denesik\",\n    \"messaging_enabled\" : true,\n    \"account_sid\" : \"ACDBd2BA00eFf4efd029E424cAd4Eb9CE9\"\n  }, {\n    \"friendly_name\" : \"Mrs. Murray Dietrich\",\n    \"date_updated\" : \"2022-07-09T09:09:12.036Z\",\n    \"data_limit\" : 3642769109784386287,\n    \"national_roaming_enabled\" : false,\n    \"date_created\" : \"2023-07-05T08:22:53.036Z\",\n    \"data_metering\" : \"vfdy6t795gb8uppcx80s98sr4y9cxhds54mla7ip1pzzaknc2l5rp6nt6rpngdyu6jl5vjm7hcggdtwa0vc5kd5718j2jysw28jy6goudl82hmj2fjbluvzx2fmxioqn1m9j1sbz8xsn4qlsmc35ch5ddmooymw6qpdyyib0b8oht551un0bhf9\",\n    \"voice_enabled\" : false,\n    \"data_enabled\" : false,\n    \"international_roaming\" : [ \"hnw\" ],\n    \"url\" : \"https://web.example.mocklab.io/367260\",\n    \"sid\" : \"WP28503a7cBFcFEC5f6DdEaacf316a4DDF\",\n    \"unique_name\" : \"Dino Kuvalis\",\n    \"messaging_enabled\" : true,\n    \"account_sid\" : \"AC8AE9a35cA9eC0DAd7b31DEaF766Dc4Ee\"\n  }, {\n    \"friendly_name\" : \"Irina Beatty\",\n    \"date_updated\" : \"2023-06-29T13:08:12.036Z\",\n    \"data_limit\" : 8331799209620915270,\n    \"national_roaming_enabled\" : true,\n    \"date_created\" : \"2022-11-22T03:44:25.036Z\",\n    \"data_metering\" : \"blyokkm352qk6c8clj82vjmlj7ig9klu54x2n1umjn016zxq4r3nynz3oh1o3sgpsaj4c5yg0i67m6vbns0rdrq15pyal6p28wr627k0rg\",\n    \"voice_enabled\" : true,\n    \"data_enabled\" : true,\n    \"international_roaming\" : [ \"0uzjw21wnoej4f8n00h6nji6t3qhehw2upponz0c59d4j2crw0c9yj3vsl8owblv1qei10ckt20qu5zbekcis1jzjuhzt8a\", \"k65azfd8fps39juhqqxegzwrwapucg\", \"z5c4nxvy7h641ztzi0p5075f54ev\", \"nzctc7wquzve8aiu25iamc5fr98j3h4a4vmkzzh9ecyk9jkxascp9vwhjrnkdqgmxqk6o8r6zsnm8l431nb7gf2veyu5qab3nr6oyelehw8qod\", \"b6u3lnzh3a1bcg3au63dbww7mi9tgunbtmfkdchbvz5adabmrxui2kvh65pdwt5eaqiglwjfw6l1acoi20rvg2wvd9io7zhaf8lossfkp7x8pvl0y9g57l2dy8u1abovnvumwn7vzatkkib\" ],\n    \"url\" : \"https://web.example.mocklab.io/816773\",\n    \"sid\" : \"WP63ad55CbaAfcA2aA94a6c9A26bF03C6F\",\n    \"unique_name\" : \"Raul Pouros\",\n    \"messaging_enabled\" : true,\n    \"account_sid\" : \"AC6C899bbcCA627CEE3E4FCe37EbA20afA\"\n  }, {\n    \"friendly_name\" : \"Vincent Rath\",\n    \"date_updated\" : \"2024-03-08T07:33:59.036Z\",\n    \"data_limit\" : 6329903485338603578,\n    \"national_roaming_enabled\" : false,\n    \"date_created\" : \"2024-01-17T18:02:26.036Z\",\n    \"data_metering\" : \"tcr530azpited0icuo5ngsv10mys0e9l801xeu8g8lpesglpk4p8cg6xa36dmw0y778sdslpx4rumclaurct6qybzynlqduxvt4xjydhjx8mdidcdbug5xsrzcciwpu2wnkhzg94b5i9w9uhw0yftfurc9o5lrke59q8gesrtu1dvt345b2jmi\",\n    \"voice_enabled\" : false,\n    \"data_enabled\" : true,\n    \"international_roaming\" : [ \"rbj5lt1v7mlpyrwhac8et7fn55l9kyahxf3hftx9yhfuizg7s42cta04p6nyts\", \"jdij9em5qhd7vy6fya\" ],\n    \"url\" : \"https://web.example.mocklab.io/908129\",\n    \"sid\" : \"WPb8C1BA6d1d6f4cA3acAB97ccD68A57Ae\",\n    \"unique_name\" : \"Clemente Mills\",\n    \"messaging_enabled\" : true,\n    \"account_sid\" : \"ACD8D3f38CE1fFB1aaFAdfbabd8DeeC8B1\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/396285\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/574457\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/812348\",\n    \"page\" : 5726568185570686246,\n    \"key\" : \"0lfjvsx13ugls0mbkxkjvczo9zpxb61xyaoildxym3wq0d2pgaxg2vs1ohftn6pihhxbj3vvayomp1eywrrec19qvrvqqjulapaa06369cdmfotcifskn7hc7i51n9kbkqrc2ce1z4exm\",\n    \"url\" : \"https://web.example.mocklab.io/836819\",\n    \"page_size\" : 6299493527167487490\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8c8bfff-4d55-32ad-ac13-e06be50463e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListWirelessRatePlan",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "rate_plans" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.wireless.rate_plan"
                },
                "type" : "array"
              }
            },
            "title" : "ListWirelessRatePlanResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "fb5e54ef-7b8c-3557-89ad-6233fb152fc6",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Commands/DC4c2B27bcBdc0afbBc144fCF16D969b9F",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sim_sid\" : \"DE2eee1ed1b94f5E70EAceB6d0EfcEE8b2\",\n  \"command_mode\" : \"dr409hwjd\",\n  \"device_sid\" : \"DEc3e8149212ADa29f8869Cb399C9A16Dc\",\n  \"date_updated\" : \"2022-04-24T06:21:28.035Z\",\n  \"date_created\" : \"2022-07-12T19:01:19.035Z\",\n  \"account_sid\" : \"ACFBAfe9b8E3338772ada0fFBBdCB252b9\",\n  \"command\" : \"3bgjiv779c\",\n  \"url\" : \"https://web.example.mocklab.io/621367\",\n  \"direction\" : \"2e5omu45ja99ww8l565gfa1ay1xl4cjky5jfpsk0jpts1f3pporkgfggxsn5tqh4w7zchywyvx7az6gt5ne77muaakbqdzyh7wyjhnp25o\",\n  \"sid\" : \"DCada5BfFEdF99dF8D9613CbB33a580285\",\n  \"status\" : \"z8ziwu9brknswrksxnri1jl4hfpi8igqu7cl1mnm3z8eocpoxx0vvehfmorll4b4r1ahstym2wzb49chc1qdate580yuhcky6ffc3mwj9tuzkckwsjqyit3ycspj75r3k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb5e54ef-7b8c-3557-89ad-6233fb152fc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchWirelessCommand",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "command" : {
                "nullable" : true,
                "type" : "string"
              },
              "command_mode" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "direction" : {
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sim_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "1fbc468c-0825-34a7-99e6-2fad1eded617",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Commands",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"sim_sid\" : \"DE5AfbE8e3beb3Ae0Ef2684EeBE7986Ec9\",\n  \"command_mode\" : \"evcesvoaou2x016dcuz2tfp5lyd8p400fssth9twekgn8bue4y32n5gmhw8zw755ytsggj7th7t1rw8o590s8xjtg9ptoxi9d732xywmcvfcsd57fe2nu3aioxdl8b8v74\",\n  \"device_sid\" : \"DE97Ced72e4EebD84C3F92Ebbb9389FFed\",\n  \"date_updated\" : \"2022-05-23T10:38:32.035Z\",\n  \"date_created\" : \"2024-01-21T09:56:21.035Z\",\n  \"account_sid\" : \"ACABAa2A71E82Db4C1201BE6919EB48B1d\",\n  \"command\" : \"urliy9v3aoruiie8es81x813onss6texoxrr6wdjejqotojg4afscw06ez7mztfl3zc5x0ft345p87ijhiru8kf0s3bj1tlxvu08zo7xqnj9n0vukgzgpehb591m5tyqbpm1o6gfia9jyj2321slj7muhfs4gggh3s3gck2vwj33x0bnmwqqynmlhgdsw3\",\n  \"url\" : \"https://web.example.mocklab.io/355007\",\n  \"direction\" : \"zbgyhz6vly6ynztkejurq8v2ord9g2gqcl0v421b2o2tg95m07f4vlezm7tkevvisks4txpm4k3grtw1vtem5o\",\n  \"sid\" : \"DC1aCaAEA43D3c1785BaBdedE15aE7deDf\",\n  \"status\" : \"l7b0rk2lj2x7rpo5uwecwlp3vwbgzdjwcfqeln58ty7buatv38y0z0yfgyzcbm6th74kaoprmz2p44nk56cyrt1xjsmlsxw0kg286x0xuyy9v563bzbsozixu5v5s26ih5ohx1ofejizdvjxl2ggdpxlv33qlm6ylsheucb45eej2l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fbc468c-0825-34a7-99e6-2fad1eded617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateWirelessCommand",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "command" : {
                "nullable" : true,
                "type" : "string"
              },
              "command_mode" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "direction" : {
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sim_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "2f514a00-4c41-3c9b-999e-04ef55724832",
    "name" : "",
    "request" : {
      "urlPath" : "/wireless/Commands",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/978735\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/996815\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/203274\",\n    \"page\" : 1005818196798384775,\n    \"key\" : \"68c40eudk7j1d0mb9izecx72shjr048h5uzle1nw4gcym24b0z9iqceyotrah8zwk8tilskxlm4n4tm587kzvwlhno02lfh33fqdsac4mb09okpiimcaddessfs5cotzljps\",\n    \"url\" : \"https://web.example.mocklab.io/520141\",\n    \"page_size\" : 752754814028050872\n  },\n  \"commands\" : [ {\n    \"sim_sid\" : \"DEdf31fb8CCFd86Ea7c8c4FEa0c7dA9C8B\",\n    \"command_mode\" : \"fib2xtq6uishyzug5ykzly9p90z1oiwi1apjze3esrgsm0fftt42adetump5o88nw9\",\n    \"device_sid\" : \"DEF4F6dC51E181F2ac9EA4b5E65FBC1fe4\",\n    \"date_updated\" : \"2024-01-24T17:01:36.034Z\",\n    \"date_created\" : \"2023-11-28T16:52:56.034Z\",\n    \"account_sid\" : \"ACc3e1604BdADd3Aa518B68a3a25dFAbCA\",\n    \"command\" : \"fmluuqmelldl1calcainv160ehvrcot9rk597237kcqgoea3m0g3vskia3pa7nrazxukccgefqj4zykp84o91qprd0q38yltyx6akoxzappn6p35gliocwwclmj3r2f8r\",\n    \"url\" : \"https://web.example.mocklab.io/714556\",\n    \"direction\" : \"wsrh5bji4tk4u53gqxfp4q1f1sn4vxbtb9b1vfflfvn0z37q315tzs5bynxnjzse5oqq9ohne8162o37whgz8pu0sbp1tabdfe6f6i6ggkbi8y2hixfsfx0ao9hjp5kurid9vlqk7gkn0ydvu\",\n    \"sid\" : \"DCA7abE5DCE1beb7c5FBCEdFD119cF81F9\",\n    \"status\" : \"ml0j5n1tmbt7pqe1c5v2\"\n  }, {\n    \"sim_sid\" : \"DEf03Bb7aCB12bBDFe2bac6f09aF88C12e\",\n    \"command_mode\" : \"zlhy69jfrc8e9cslf0dmsxmm184vmx8254vntdceziiwix2b4z0rqwvex4gz83v8er41o8lh0p18x1my3yc08f21kiqomqohb5l60ceka4c7yze20wqp3uy92fzanyhxtmpz92y7prsgs1ocry5d5owo3iu4rnoduzknqyjrdfnw86iu82md2bktfb7jzo6vof\",\n    \"device_sid\" : \"DE63880b12D19dE67ac6bc9b0faafa81c9\",\n    \"date_updated\" : \"2023-02-08T21:57:46.034Z\",\n    \"date_created\" : \"2023-11-10T23:31:22.034Z\",\n    \"account_sid\" : \"ACE56Da3599cCb98D0ce938BB2963d05FF\",\n    \"command\" : \"y3o585lxjsz74uqt6tti29hm5ka9viz\",\n    \"url\" : \"https://web.example.mocklab.io/550463\",\n    \"direction\" : \"a0ohaot8cypsl681ld3dwa6xdpsb5n8nh9z37q92c01m4blcdtz1pqak8z9nvm\",\n    \"sid\" : \"DCF5c833dEBEB80A6eC127A1b2c3D2A1CD\",\n    \"status\" : \"gj9mznm0ktnmg2px6gpy9uh1avm5w7jv8ed0di7s2wml3aatzwfdj568t5kc0997nbjx5lie7xog9j6g5jpa\"\n  }, {\n    \"sim_sid\" : \"DE48C51bC98f8Cc00cc9bF7BEBFEad5C0e\",\n    \"command_mode\" : \"k18bj2ftgtl7en1n654wuil7d\",\n    \"device_sid\" : \"DEFA3AD78f3A1Bf756c13eEf7f32fEB72A\",\n    \"date_updated\" : \"2022-09-15T03:30:00.034Z\",\n    \"date_created\" : \"2023-02-16T02:40:56.034Z\",\n    \"account_sid\" : \"AC21c8E8cE81d2543f644dfbC2cE3A6738\",\n    \"command\" : \"uygibxg1uqgutc1qml85si4v3p0z353ygiav7geovjilbltgss6mjyeyrnbc1a5cd1tsib38rbiihn8qprg1ioj1sqpww2d3oweljlljihlfeqt4zxclmpwky1d7xl97tmsansi3gm58bmqgce8vu3g3hs4gnfrlok3uxno65tsykqt79vnivnt2pcskr3dn9crie9\",\n    \"url\" : \"https://web.example.mocklab.io/709180\",\n    \"direction\" : \"77uhdlv9jb002eetvx3vh8464t055nk8npv8wvh1mwrpy6pwbvsgx0pmo18ejgitlzphuyd7s2wc3pk5wipiy8id13w5ef2edphw3kgl2xgzrg5r5o5j35ffc4h\",\n    \"sid\" : \"DC82E19BC64caAFB1C10Aacbda3b814364\",\n    \"status\" : \"64gzg2bzhmky8j6j7skvkkim3qk3wpeaf1psjc6t5g5dmym70jrue4p7in22\"\n  }, {\n    \"sim_sid\" : \"DE202D5417aeF9BDaea59a9c1D6F5bea38\",\n    \"command_mode\" : \"rycdpisbj5kp7wmwepomghd3tkqzixm6plm6i4n24r0ko8ddklr2rbfnh39pze6otbbd8vvfrdjx9kwhes99k5g6sgcyqp27eis2tde281s4vzhkjsjk20798xs8o24qgkfriypy3tviy6uqbg81ukb8ocwm5shjrn4u6h4cx3p6it4m2cp\",\n    \"device_sid\" : \"DE0047EA4Fc4D3c5c7f6AdfabF5df4BaD0\",\n    \"date_updated\" : \"2022-05-15T18:46:31.034Z\",\n    \"date_created\" : \"2023-08-16T20:37:47.034Z\",\n    \"account_sid\" : \"ACbfef6ED3Afe1cc68E904D25D466ba3bb\",\n    \"command\" : \"m8ew5gb0gho29vddnxgisy10rffkmq13oxfkeg6qzdak7qb98ck2pa53k2a9ymm73oykmm3qdcce948i5w4ce0wcincps4nqaa89qdmqgoetgn7p5pm0p8nc8a0g44thnvehxuyudzxlvdodf3cq545ulje2v7nkx77qgz4b\",\n    \"url\" : \"https://web.example.mocklab.io/753258\",\n    \"direction\" : \"jyqrkgrobi14gl45f32a348kvtresxqwgnnofy1klc2ck2z58wpl41d1z79otxyhlbm096j40gitfq2p6el4uuqkaecgfzap6sgc45\",\n    \"sid\" : \"DC4ae4591b4f9B8E8FB751eA88BB043bb4\",\n    \"status\" : \"z9ya8igskh342nfmdbnygt0li50t6b5e2bnwpe75us33nyvjzch5w3ks9cqbws5q4oe6ru2f7v4gr5vidd1mmp69asoz6y348jsnuhn189ncook5r\"\n  }, {\n    \"sim_sid\" : \"DE2996AD2A2BeCD5FD821306BeCAB0CCCc\",\n    \"command_mode\" : \"tf7ut67ehjg7i0qiifetqx9po9dqu2ihjpdsxcnv9jg34itvatlk9wuijil15owqu86qkd1xqat1pmcile2up6rim0wbabpb5w4d9ae0gbb4fg3rxau2p0togxjdt2f4s57w2lmwravlwemxrtgleq82pa\",\n    \"device_sid\" : \"DEd2FFDB315A7Ef6bFc42382bbefBbeac1\",\n    \"date_updated\" : \"2022-08-12T16:42:18.034Z\",\n    \"date_created\" : \"2022-07-25T14:37:34.034Z\",\n    \"account_sid\" : \"AC89d7Abc4C7b7ECEdEca13A576CA27081\",\n    \"command\" : \"ln108lwxjmjeqgr7v4tbu6b6knri41t2r9ikilaje061stmmv4r47o5cgo1f8tqae8284yf94ogsv9m773prnt4rtg8i72e93cvni8630tc4bz8t2siwldedm7c4666byk6rxjw2g0gphfzolsc3x9764289z79dmkben3g9xcn7shjp7\",\n    \"url\" : \"https://web.example.mocklab.io/473364\",\n    \"direction\" : \"5zfcpuhebmqslvbjk3k7d4c318on27sjuiab1fvgh261if1uk18mwjiazaywuouezkb8x2227qrlklke78dxe2qgj9r1vtrcoxkia3w0fe1c7rnzspfjqu48j8u2eki5ueh67aiusf3m8j\",\n    \"sid\" : \"DC4fa29DdDF8966de85E53e9CBCa09e09A\",\n    \"status\" : \"s54vmkd8v32xd86cgx0em1ce39kzndm8k4yw8octgjsackq0c1wdi03gyi31bw8yoyy543ogu2lnuub4h15g0rkfcrvawcxa\"\n  }, {\n    \"sim_sid\" : \"DE9081dDaDb2F8AA23fEffB741fF59DcA9\",\n    \"command_mode\" : \"4sq3v46h07aj1xor92r4ykh7spmprbxvxgxlwlecjfap3ppamwd7hoj3nxryxaunsmvb29nt2eapkvvbkjcl6comjgeisl3zmurmde5q9wqj68kz38wi3wpwytrir9hg3fvathlusghejtsdba098fh55ii6i3fkyqmqyu3aqyxod4em3ji0rj5pzbvq6xitsen\",\n    \"device_sid\" : \"DE37E7e4b251DfCbAeDfAFC8Bdcb4f5407\",\n    \"date_updated\" : \"2023-01-19T19:33:59.034Z\",\n    \"date_created\" : \"2024-01-31T05:06:27.034Z\",\n    \"account_sid\" : \"ACc3CC6dbABc65E983b5dAFd3a3c382Bbb\",\n    \"command\" : \"zk3iey\",\n    \"url\" : \"https://web.example.mocklab.io/983291\",\n    \"direction\" : \"xwkbfeds3xq7734g60e6avu4300nvn4ifs5eyfaqp0hiu5gszz7g7xpz93r7d5beb6qg7o4qituxk3esvh38dukqvnya41m3hlmieiolidtdty3j4aelvl2p2s2kt9e1hayv0vy1yz2m2nz24jdkx1loqkmkfbj8ngk8o0mwgvqzfga35n3kho\",\n    \"sid\" : \"DC7Fdd2dc0A8072205eB64AaeAafBe8dbd\",\n    \"status\" : \"c63cixipsdgnmosv98wxru42npqx2yvatvc3bd6rvf07ggrv9dknbct8\"\n  }, {\n    \"sim_sid\" : \"DEDc33fEEF922A5EA37d304C2D8CdD217c\",\n    \"command_mode\" : \"z0dcrr7dwmu789182ikhc0w4aqwq8mquy3fab3e2g6i2y4jp69i0mv8chwchhb64xehjpiuka7v5f7qwyyx4hzcqkm7dnpyl52snt8ikee5bqhb9od08q0qwmruzd6qjfiqpqh4dwiptsoqoh2ol4qjxdvvu48l1di2mkh6jdwyf93\",\n    \"device_sid\" : \"DEEe44c92aFF8ad06eC8f38FcF48EE2a1c\",\n    \"date_updated\" : \"2023-01-15T00:22:15.035Z\",\n    \"date_created\" : \"2023-08-26T17:00:31.035Z\",\n    \"account_sid\" : \"AC2b71b8433dbCd53a2a20cdfe60fD8218\",\n    \"command\" : \"gz4dy39u8s5eb162x1ntyk0j1cu1he5ehoaj5joer7bsjrw5j3senecehwqblsinj748ho25095a8sa7mgz0iz4vxgoafeljmvx7p7ercl1g2sq974s27t1kyl1rltc9ncq\",\n    \"url\" : \"https://web.example.mocklab.io/293660\",\n    \"direction\" : \"xpkf6mjfo70lzozxefp4kusw9hoi7d3nuorsjd4t1zlkoij81yd5cs83erfwtsba6v06sv0uykiavrk0nie53muo6vjar0u4at5aempsph8rgza5vngi5cegl6z2kd8536ivsg1yx61ey6db9yn6p2rpbzwq4vttvjh\",\n    \"sid\" : \"DCDC11caEEc94FDaEf3C0F85Fb030AB9e0\",\n    \"status\" : \"3f2fcy5jazq6co51tuo6ga7rjrelb2se967r8ep6ecuwpr5mf9t233whvr3x39x9j221qdxg3r1vkzh5n33il63djvddbqs8rzf3l8je68raq7s8j8s1ir53ja86j2l1f928xfz5sc9eiwnl98avqhgeiih4o9axw0s9uu2v3x\"\n  }, {\n    \"sim_sid\" : \"DEFe7eb7056E5b8321d0e1BbB5F5Cce6aB\",\n    \"command_mode\" : \"4bk58g04ys8vwza4p2xilm29jvkas4n0iplk3j20hajas5rw7zllrys5t0dlef74tai3iimsjzvr4jiegpv120jnabc4a1719t\",\n    \"device_sid\" : \"DEA92A0BdB4003d776346f2a04a720B80B\",\n    \"date_updated\" : \"2023-05-08T13:05:21.035Z\",\n    \"date_created\" : \"2022-09-19T03:27:13.035Z\",\n    \"account_sid\" : \"AC7dB07F9743C0EcdffdD071d29C1F6c5A\",\n    \"command\" : \"t5ublenplyh6vdordxse6f0rolko61f26r33\",\n    \"url\" : \"https://web.example.mocklab.io/770696\",\n    \"direction\" : \"wi6t2mb16i76ft9h\",\n    \"sid\" : \"DCfF6F3e52df2AAd191E2B0DE5F65c31dC\",\n    \"status\" : \"lnaqy5bolsvf9xo6r30k80h3uu9b8don5qody37g6d04mrb1mi74r41a0q3bgiw0uucyf51k6ogz21xhdsl7ody82mqbc92sz8y86fuobuv577ndy9zx5wc3sqyrow9jtmykigxviytx7mxv2ui7doi8533ctl2p\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f514a00-4c41-3c9b-999e-04ef55724832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListWirelessCommand",
          "schema" : {
            "properties" : {
              "commands" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.wireless.command"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListWirelessCommandResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "b1e0f5d9-e7e9-3152-aab6-856355211386",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/7669",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"callback_url\" : \"https://web.example.mocklab.io/812224\",\n  \"friendly_name\" : \"Mrs. Ashley Mertz\",\n  \"unique_name\" : \"Lazaro Torphy DVM\",\n  \"date_updated\" : \"2023-11-24T03:07:43.033Z\",\n  \"latest_model_build_sid\" : \"UGbb97B26906Af99c84ec87C7bD87AAFBf\",\n  \"date_created\" : \"2023-11-02T20:06:04.033Z\",\n  \"account_sid\" : \"AC41Db685E452D64591FA5D9915A9D1e47\",\n  \"links\" : { },\n  \"callback_events\" : \"pwqunwxpbiv8lrxr8kmt10u188n9ig2qucub2k8nfeq8qrj6h5m5ksvd1njk0ev6ha6o0pgp590rdckz2z4tgnk2aoavqdsgh4gqjo6jf1b80xmje1xvkqv5gbiv2gdsac26wchoy4gzpzjlalh\",\n  \"log_queries\" : false,\n  \"url\" : \"https://web.example.mocklab.io/315586\",\n  \"sid\" : \"UA16AA2dc1e4BB7D43CE5d8ba271AEcB2c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1e0f5d9-e7e9-3152-aab6-856355211386",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandAssistant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "callback_events" : {
                "description" : "Space-separated list of callback events that will trigger callbacks.",
                "nullable" : true,
                "type" : "string"
              },
              "callback_url" : {
                "description" : "A user-provided URL to send event callbacks to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_model_build_sid" : {
                "description" : "The unique ID (Sid) of the latest model build. Null if no model has been built.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "log_queries" : {
                "description" : "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter.",
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "1f617b42-d728-3e1e-8757-7f81b10c6b6d",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/80ig",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"callback_url\" : \"https://web.example.mocklab.io/580691\",\n  \"friendly_name\" : \"Lean Fay\",\n  \"unique_name\" : \"Mai Will\",\n  \"date_updated\" : \"2023-10-05T07:01:13.033Z\",\n  \"latest_model_build_sid\" : \"UGBF9beA5ED23EFd50eD09E1b5B578042B\",\n  \"date_created\" : \"2022-06-08T22:58:24.033Z\",\n  \"account_sid\" : \"ACCFcDeCAA5af66be60cDBB8B9aecAF5e1\",\n  \"links\" : { },\n  \"callback_events\" : \"7wzytgn7jvntq4lmvqcr74em5j3q3rdvp6rz2xsrptl4qrsarp\",\n  \"log_queries\" : false,\n  \"url\" : \"https://web.example.mocklab.io/147977\",\n  \"sid\" : \"UAb42C0F4f0baDd0a235C5fFAC24Fb10ee\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f617b42-d728-3e1e-8757-7f81b10c6b6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandAssistant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "callback_events" : {
                "description" : "Space-separated list of callback events that will trigger callbacks.",
                "nullable" : true,
                "type" : "string"
              },
              "callback_url" : {
                "description" : "A user-provided URL to send event callbacks to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_model_build_sid" : {
                "description" : "The unique ID (Sid) of the latest model build. Null if no model has been built.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "log_queries" : {
                "description" : "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter.",
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "95943744-a448-31f4-b0cd-22982f3cfe4a",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/a2rb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "95943744-a448-31f4-b0cd-22982f3cfe4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandAssistant"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "5b3a9e18-da81-3e4d-b377-68e547aa48f9",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/jka5/Tasks/dc0h/Statistics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"task_sid\" : \"UD22Eed3aabEfD9Ec9FB87F1c1bcc6eaca\",\n  \"assistant_sid\" : \"UA5baBB0edFbFc8b8DD9Ab9A7E07663C19\",\n  \"account_sid\" : \"ACFA2FD61Af762aABAcBE242ce9D7F5eC5\",\n  \"fields_count\" : 897905932388764390,\n  \"samples_count\" : 4135673367847877366,\n  \"url\" : \"https://web.example.mocklab.io/067096\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b3a9e18-da81-3e4d-b377-68e547aa48f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandTaskStatistics",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fields_count" : {
                "description" : "The total number of Fields associated with this Task.",
                "nullable" : true,
                "type" : "integer"
              },
              "samples_count" : {
                "description" : "The total number of Samples associated with this Task.",
                "nullable" : true,
                "type" : "integer"
              },
              "task_sid" : {
                "description" : "The unique ID of the Task associated with this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "6843560f-a15c-31ef-a0b7-85a16569b4d1",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/58c0/Tasks/d74g/Samples/UF7f8FC5e0817FEcF8f76f7caeeddBe5C4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tagged_text\" : \"d8ory25zwdypr0efi60wmdjkkjc0dair4llihh9fyqm236ltrseshzyi16zj942s0cp17rj0hf9gkojwzjknimga7ecl4ofz9rzgws25\",\n  \"date_updated\" : \"2023-02-24T14:23:26.032Z\",\n  \"source_channel\" : \"2df6ltd8n7sbcex52rwo0bdnl07hfajtdwtwpd6lat7nul56o660aa\",\n  \"date_created\" : \"2023-03-19T18:49:38.032Z\",\n  \"task_sid\" : \"UDD006cd6dAB8DAA03D70c5e06e4A78ac9\",\n  \"assistant_sid\" : \"UA7d5ABCcc5f6fCaA24D2283daFc8a6Fde\",\n  \"account_sid\" : \"AC5b51f6a6917Deb645011c4aC3Ee1Af06\",\n  \"language\" : \"fsjn6vtoau827m72po6zkz3u059hzlw4vobcyr6xtxcc9u6rc8fhjdjpjmn2uzag4w6zyd779dtk5eegut12hvlixqj7wl4gcs9kzwwwyx2obcy3uvhfihmhpg2dy88rom2ao28ewaz5u1je4n6wpzrah0bk3w3h1c3m\",\n  \"url\" : \"https://web.example.mocklab.io/489819\",\n  \"sid\" : \"UF1c5eebf65692eFDC5cDBBcA42Ba76b31\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6843560f-a15c-31ef-a0b7-85a16569b4d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandSample",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Sample.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the sample.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_channel" : {
                "description" : "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
                "nullable" : true,
                "type" : "string"
              },
              "tagged_text" : {
                "description" : "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
                "nullable" : true,
                "type" : "string"
              },
              "task_sid" : {
                "description" : "The unique ID of the Task associated with this Sample.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f1116d5f-20f8-3426-955e-3718333d4bcc",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/16v9/Tasks/th46/Samples/UF1AEA1aecAc4Fd09ccf35CECB3f1aD2e8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tagged_text\" : \"6hdqqrdmmib74m7wz03130pimcjx8zdqcq4t2el3ml\",\n  \"date_updated\" : \"2022-04-04T10:34:58.031Z\",\n  \"source_channel\" : \"gjcbvt5kbfxnl7t77a2h4i5joae5g4cltm8qrwhwubtck6bjp5das6c8zpyo2p0npl2q4u551usnammtw1bi0c1x0qgv5lzy8givocdrtux7f7ml1fdcrr9xbyq29jp0b574tu92py5oicbzrxjdvpnksfgwyxj2ymul0gleda78dy2fy5\",\n  \"date_created\" : \"2023-06-13T09:34:57.031Z\",\n  \"task_sid\" : \"UDeFA128FA5DdCF935AbaEcBEa5dC1fceB\",\n  \"assistant_sid\" : \"UAf9D9b1AF6e5fb84b2Bc78Ac595cf8e94\",\n  \"account_sid\" : \"ACeb3124c662370Ee8Bb90445eDfCdd7Eb\",\n  \"language\" : \"rw7t2dp29v8guld3yxecx25qyqfumwgb17pld92t9you2psws5ffbih0jf3j7oln7qxjqqnr0vag4jghy4i10ab6ix89cdsiohardd0rgpqslctymq\",\n  \"url\" : \"https://web.example.mocklab.io/637978\",\n  \"sid\" : \"UF1D128DD3eC93E5Ea437F2Aab8cd55cbe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1116d5f-20f8-3426-955e-3718333d4bcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandSample",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Sample.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the sample.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_channel" : {
                "description" : "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
                "nullable" : true,
                "type" : "string"
              },
              "tagged_text" : {
                "description" : "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
                "nullable" : true,
                "type" : "string"
              },
              "task_sid" : {
                "description" : "The unique ID of the Task associated with this Sample.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "0ff40a79-2a24-36d4-aad5-539341223b1c",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/h0e7/Tasks/x272/Samples/UF2e2C803A1D0fF03DcABba414EbDd639D",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0ff40a79-2a24-36d4-aad5-539341223b1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandSample"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "6d728764-f9d8-373c-b1be-ca80182ec1ad",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/l722/Tasks/g60t/Samples",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"tagged_text\" : \"ef93jx57hy8s3hfrqtk0c8roizsdbhtpengpr631v9yhz6dqcii20tcuws3f6bd5q37k20t1b17cqtdw8mh4ux11msntfs2iz0khg3lvjb8l2mz9qht5p0o3fcq7ilik8t0rorlnaxsid4bh3xqx4ijqr\",\n  \"date_updated\" : \"2022-05-15T15:57:22.031Z\",\n  \"source_channel\" : \"dsay0cizmmgjisj0bbkos1bch0qdah5ks4b29t5z7o39nugl1zglwp9p8zhg7j0cuuy6501rmho26krvdbvb9pvovyupaesx4xvoj2d6lch091wqzffnyt7okfcsu6qar\",\n  \"date_created\" : \"2022-04-22T16:50:46.031Z\",\n  \"task_sid\" : \"UDA0D4C2dEBa3b67C6A1bEd3bD798cCC62\",\n  \"assistant_sid\" : \"UAEdCA6D4A6c7a70B4f3f4dFc580CaB068\",\n  \"account_sid\" : \"AC7bd897fCD7C9EBebadbff09f2A2eD1a1\",\n  \"language\" : \"smopbjbwzjop1dw1dlq1zw6v4rsmqfvapm1mivfsqwprsx9o06ubdd1umuz0icpwaddxzfe2l9gnyp5uc7w87oghbypjffobmt9i7xfycxvij05wy5vq9n4sazqfxgloedl5h22h81r44gc1ln9bk3cfwivctj4m2nx9hugetwcobb75fpw0ysxvp6edx17hpflnny1x\",\n  \"url\" : \"https://web.example.mocklab.io/488352\",\n  \"sid\" : \"UFFCf5ef05Fcc60E5F2443ae473aAe8afC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d728764-f9d8-373c-b1be-ca80182ec1ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandSample",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Sample.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the sample.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_channel" : {
                "description" : "The communication channel the sample was captured. It can be: *voice*, *sms*, *chat*, *alexa*, *google-assistant*, or *slack*. If not included the value will be null",
                "nullable" : true,
                "type" : "string"
              },
              "tagged_text" : {
                "description" : "The text example of how end-users may express this task. The sample may contain Field tag blocks.",
                "nullable" : true,
                "type" : "string"
              },
              "task_sid" : {
                "description" : "The unique ID of the Task associated with this Sample.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "234cc48c-ed37-3446-83bf-4a8de851064d",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/m35r/Tasks/o55t/Samples",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/120771\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/772569\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/607702\",\n    \"page\" : 7960469641731365694,\n    \"key\" : \"ykn4b7gmkhfvjuw5yfuw16w31wpfwq58ejtz70jl7rjtfykd4077y2gjg0yqcbsdfetj6pseii7hmhis4v9yo6bvxf0hh4yvwilp0cid03ysidfqjxr8zgsyvyt4okd3lzfhxzdyuxla2ulosgqybpp648vx50cbnf\",\n    \"url\" : \"https://web.example.mocklab.io/986400\",\n    \"page_size\" : 750086831431817838\n  },\n  \"samples\" : [ {\n    \"tagged_text\" : \"42ppx7x2q2bewxo2sd5byti7jz38a0ubpvmmync55wbg5wyinqx3uckeuxey0b9wrnciu4yrxepad\",\n    \"date_updated\" : \"2023-11-22T07:08:44.03Z\",\n    \"source_channel\" : \"27nkaljm31bvjccf6jo5v9llzmh1jr9z4tgg0w8jqa4tqibf5ucjl4cxuk0xohvd0b8g6cx3x7e1vkxijbz0i5zte169mh7l2st6500sqp16eg3z\",\n    \"date_created\" : \"2023-06-26T10:11:33.03Z\",\n    \"task_sid\" : \"UD516e855Bb8DB9bCa1Bedc9F0AFB6D9F1\",\n    \"assistant_sid\" : \"UABbe181aB42F17F2CB0f4FFBA351bCca5\",\n    \"account_sid\" : \"AC77479DF6a2A7ba92AD8D3Af9Af05d0FA\",\n    \"language\" : \"bl7iz31u0zlca0b0wplnv2ok2z6ujp2jh6l6d5o7jzvlaxpzjlhctchw92lvt2oc7dkwve4i7xrojtjcaw8gsygvol441j86jz0j9ifb2nussxmsokyrkoobs6nm1qspfyhfy4i2cbrgewj304gl77by4f7rnj655vxdat57j36xh\",\n    \"url\" : \"https://web.example.mocklab.io/588908\",\n    \"sid\" : \"UF2459E11d689f30b56F9d9f73bbdEB6D6\"\n  }, {\n    \"tagged_text\" : \"ltwchc7n08at7b89o2jgw6i6b0gmlvn5f5j48hefco9y49cng7rr921vap33qjqd9hh7psi2rc4c3k0m57wv2k0h3ic2pyf82hvdvzdp7ysq99qmzkbpjpjyex7nzhgt6pgrzexofgcoijfjak88fg204khnzfiy1dx05ek7zwhi5nzsepmw3m50nu2p3qx\",\n    \"date_updated\" : \"2023-04-10T14:54:23.03Z\",\n    \"source_channel\" : \"7945uq3alm2cfr6686ujkq74z0httrd5zz007ry2j7lkqhwf8gmuc0hj\",\n    \"date_created\" : \"2023-12-30T03:07:34.03Z\",\n    \"task_sid\" : \"UD0fC0f131c6d46FC93fe8eFc9E0967aF7\",\n    \"assistant_sid\" : \"UA63244B2d6B0BE60f7a7b69dfB9c61D64\",\n    \"account_sid\" : \"ACD8A9BC6EedD9C8706fba6FeDAE8aefE6\",\n    \"language\" : \"207j6m99kbjyhf4s3nx6bewsltdmikg2yeiig45kv7kcmqsw0ricjhw5oz2481a0twxgrt33qshziva1b4rjz60ggg5g3ee8v77twc3mltbp5d7nioanumd8rsz26m6slhg9j60thot4i4opry3dl5x60r2bumb6urddvaw01wcraxfgt6d8zu5ewxt6re1rml\",\n    \"url\" : \"https://web.example.mocklab.io/411855\",\n    \"sid\" : \"UFC44cB6850EEDa456D2E5E5b5aff8c88c\"\n  }, {\n    \"tagged_text\" : \"6jb7evaoxlxujvup7jnvvj5o1mgz9xv2u2xfnc7nighnb9lp88dsqei18q9s36zbx6dmo1x\",\n    \"date_updated\" : \"2023-01-08T13:59:03.03Z\",\n    \"source_channel\" : \"idp\",\n    \"date_created\" : \"2022-08-05T16:16:54.03Z\",\n    \"task_sid\" : \"UDb7fF9A8FDaE694D2CBf5Cd6483fd99EF\",\n    \"assistant_sid\" : \"UA43CcA253F51156CC6B7DFC711B2C1468\",\n    \"account_sid\" : \"ACcD7bAEFC8AdF4d9f116E1dEeBfA1AE17\",\n    \"language\" : \"5x3i8m9du2bo79z1fey1jvjtk9y5szrypsngogm3b7mc04zsyw0s1bjvaixhd89mcvvchm17vg2lqc7ihofiap\",\n    \"url\" : \"https://web.example.mocklab.io/362042\",\n    \"sid\" : \"UFbba97Fcc4cEca7F7A0DecddF5Bd7be62\"\n  }, {\n    \"tagged_text\" : \"2d1nw9kf4p3avck01l7zhhnaz75wqlzvd6us7ueyomvo0tmbdiehddpwsh7u8hhrec0x2axwrwxbdje1oi9p6rqei5qfk3oox4opzayjh1ayl35noeq74mkgxxx6pscryp5dq\",\n    \"date_updated\" : \"2024-02-08T05:37:44.031Z\",\n    \"source_channel\" : \"vjod9er6xpkanpy7i2ptbpryc3pldcm3\",\n    \"date_created\" : \"2022-09-26T04:42:22.031Z\",\n    \"task_sid\" : \"UD5c23b032C31aAEF7d7528Ec01369088C\",\n    \"assistant_sid\" : \"UAa3B626A3C4558162D4D03862f5fd3beE\",\n    \"account_sid\" : \"ACeAd084C6B01ef09BefF1dA838b5AD9B2\",\n    \"language\" : \"g7d4qr6hrojkfijmsyl4x8qkg8nt80qghombcv426u8ne0tkgsmfasq\",\n    \"url\" : \"https://web.example.mocklab.io/565969\",\n    \"sid\" : \"UF22EE6AE5b69AAde00C7caa60C509Ac88\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "234cc48c-ed37-3446-83bf-4a8de851064d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandSample",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "samples" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.task.sample"
                },
                "type" : "array"
              }
            },
            "title" : "ListUnderstandSampleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "6e5100ea-13b5-3a9f-b2a9-613ca5437822",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/d9mr/Tasks/0h43/Fields/6vix",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unique_name\" : \"Neva Jakubowski\",\n  \"date_updated\" : \"2022-09-23T05:02:45.029Z\",\n  \"date_created\" : \"2023-08-19T10:29:17.029Z\",\n  \"task_sid\" : \"UDcdc240860BBAe3cbAf1de779eE831835\",\n  \"assistant_sid\" : \"UAcBC2EDE1DA84eCe86DcFFdC2FEF1Dd9B\",\n  \"account_sid\" : \"ACcA0c6C7F7ebb71dcFFb21f2366FfcAC6\",\n  \"field_type\" : \"6y9dxj0b8q7vxmpica32oet461s5ipyh6oql32ug6ko1hfgf6\",\n  \"url\" : \"https://web.example.mocklab.io/643350\",\n  \"sid\" : \"UE5Baf81F811d779aEAAcaeb643A4Ff999\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e5100ea-13b5-3a9f-b2a9-613ca5437822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandField",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "field_type" : {
                "description" : "The Field Type of this field. It can be any [Built-in Field Type](https://www.twilio.com/docs/assistant/api/built-in-field-types) or the unique_name or sid of a custom Field Type.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "task_sid" : {
                "description" : "The unique ID of the Task associated with this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "c44bbdc1-5ec5-3ffb-9e87-fda3b1341778",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/gfw7/Tasks/wsd5/Fields/n505",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c44bbdc1-5ec5-3ffb-9e87-fda3b1341778",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandField"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "9fe34523-0879-3200-a3e6-3722ff157177",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/710v/Tasks/4oy1/Fields",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"unique_name\" : \"Garry Zieme II\",\n  \"date_updated\" : \"2022-11-27T15:34:26.029Z\",\n  \"date_created\" : \"2023-04-21T10:03:18.029Z\",\n  \"task_sid\" : \"UDCFeeeED1DDC4cB10fBdB846E6DaFEb93\",\n  \"assistant_sid\" : \"UAFbdd6FafE2F704991Ee5c513c77DEAef\",\n  \"account_sid\" : \"ACDbCE0F75980eabeEF2bAEceb43EC57bf\",\n  \"field_type\" : \"2v05eveipygkgqiqh6x2sl1b3ktghrwp4bot\",\n  \"url\" : \"https://web.example.mocklab.io/366220\",\n  \"sid\" : \"UE0AF292fd64b56eB69fFaCcA49E13d059\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fe34523-0879-3200-a3e6-3722ff157177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandField",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "field_type" : {
                "description" : "The Field Type of this field. It can be any [Built-in Field Type](https://www.twilio.com/docs/assistant/api/built-in-field-types) or the unique_name or sid of a custom Field Type.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "task_sid" : {
                "description" : "The unique ID of the Task associated with this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "cf3f2d0e-4cff-3a7e-9d92-c2be67a38e76",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/v895/Tasks/n775/Fields",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/781385\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/579703\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/101923\",\n    \"page\" : 2775894537446986568,\n    \"key\" : \"p4athq61llu7hgrhzkuksmoyvs0vf7vvydiarobixc3xul09jw203gc2vt4mdv1k1hy\",\n    \"url\" : \"https://web.example.mocklab.io/343423\",\n    \"page_size\" : 2355379196125165627\n  },\n  \"fields\" : [ {\n    \"unique_name\" : \"Dr. Seth Aufderhar\",\n    \"date_updated\" : \"2023-11-19T17:52:35.028Z\",\n    \"date_created\" : \"2023-09-13T10:37:35.028Z\",\n    \"task_sid\" : \"UD97b96fE2D5105FE48F5f9Ede811Cf111\",\n    \"assistant_sid\" : \"UA338E254deEB3fF6f3e4b9A444EDBA61A\",\n    \"account_sid\" : \"ACAfdf15a5fCabaDBb499EBE820Bf1845f\",\n    \"field_type\" : \"2jetpyeycob9iieb4s\",\n    \"url\" : \"https://web.example.mocklab.io/634964\",\n    \"sid\" : \"UE2AcFB579f04234BBE29e708Ebd3Aecfe\"\n  }, {\n    \"unique_name\" : \"Pauletta Lubowitz\",\n    \"date_updated\" : \"2023-10-07T13:26:52.028Z\",\n    \"date_created\" : \"2022-08-29T04:37:42.028Z\",\n    \"task_sid\" : \"UD3567bb777aa8725F6De6861B354508aD\",\n    \"assistant_sid\" : \"UAE6363ff0d43EAaE0AE8EDa6d3056b0dD\",\n    \"account_sid\" : \"AC2F7aFf820d701eA18bf98FbDfF959f7C\",\n    \"field_type\" : \"fh4krqoytnlu8o48kl47tbwvmy5jdc65arx6lqvhk2vk3sju84o5ugikau9iw1e6ojxymdcidk\",\n    \"url\" : \"https://web.example.mocklab.io/780996\",\n    \"sid\" : \"UEEB5A9b6BFbBb8F35d768A1f05efeEa15\"\n  }, {\n    \"unique_name\" : \"Elisha Strosin\",\n    \"date_updated\" : \"2022-06-10T08:57:27.028Z\",\n    \"date_created\" : \"2023-09-26T01:11:20.028Z\",\n    \"task_sid\" : \"UD3A29DAfFCEeC2fA4A4FdC5eD1AC0CAB0\",\n    \"assistant_sid\" : \"UAd679eacDFA668dEEFAE97bFbefec4237\",\n    \"account_sid\" : \"ACDCF0B271A099aAb4eDD961ed408Ce95c\",\n    \"field_type\" : \"kqun6szs5aafp98fsmht0tlym6b8bf6uk1fy3amwaont0d8d623zd6ckpgl8c4c1x4r0n24ex7rszcwj88trnq979strx68asqergtl6fqrnsaoo5kl94zzexreo7tx074r\",\n    \"url\" : \"https://web.example.mocklab.io/415214\",\n    \"sid\" : \"UE3FEbb9e2Ed7dF13fBbd63A950AA36432\"\n  }, {\n    \"unique_name\" : \"Noelle Kertzmann\",\n    \"date_updated\" : \"2023-09-19T17:36:50.028Z\",\n    \"date_created\" : \"2023-11-16T17:42:47.028Z\",\n    \"task_sid\" : \"UDDd8eEC6F6a4D16207BD7fa1940AC9AfD\",\n    \"assistant_sid\" : \"UAC6f98AfE98D16a14A5d96faA5D9017ad\",\n    \"account_sid\" : \"ACe9b911D8D2fDadf2DF8F1dafefD9919D\",\n    \"field_type\" : \"8bgop09f7lzinsik2lwyt8ru0e8xneu4rco2k0ipns9ec9x32kb8qrkxme9027j6x6rdq6aioaq4tkcdr0ecj8ftq4baakpnj8fc908uss2giwjktgmnvk2mc7q4a6hlb7f0ezh\",\n    \"url\" : \"https://web.example.mocklab.io/345303\",\n    \"sid\" : \"UE9fC544FBe7D8C01ceaaAc37cBfC0cd3B\"\n  }, {\n    \"unique_name\" : \"Shonna Wilderman\",\n    \"date_updated\" : \"2023-01-21T12:13:15.028Z\",\n    \"date_created\" : \"2023-10-15T20:27:51.028Z\",\n    \"task_sid\" : \"UDB4B3Ba0dEdf2BCD5baaf3bc7Cdb26999\",\n    \"assistant_sid\" : \"UAa0AA0A95F2584F2d5b933FF4E134CDbd\",\n    \"account_sid\" : \"ACCac9eE285feEFc9E2FBC0B6e623E09CF\",\n    \"field_type\" : \"aobm7cvxwo0ff318k7qlvs6thc642xnprnmnn1yhckkzrlv5knm2lk7yy65ggfyrnm3pldya00jg3vfoh915o56p65dvuzwwa8675x2l4otzxz49g85ba8bfsrpiivdqdhjui9ioxcpnvbm0confki38hvylm\",\n    \"url\" : \"https://web.example.mocklab.io/772375\",\n    \"sid\" : \"UE5fed262989BEBF545fCeE4EFFDb72b13\"\n  }, {\n    \"unique_name\" : \"Sherman Beatty\",\n    \"date_updated\" : \"2023-11-16T03:19:48.028Z\",\n    \"date_created\" : \"2022-04-06T10:28:15.028Z\",\n    \"task_sid\" : \"UD4Ead4eCe9CB1F2a34B196a0ECAd3DD28\",\n    \"assistant_sid\" : \"UADD5aadabfF5B6Fb290fDebAEbA43C9b9\",\n    \"account_sid\" : \"AC9c1a1DFE6a7EA6Ecb7FBd35C7064bDAc\",\n    \"field_type\" : \"2pt62qor4p3m03e9si6bfhgkoij88x6otiy8lg4ujpw2xlp9lefba6ffo0bpzqs7agcfo3ce5tz67de1rfcpmd5ckhztmf1q97dp33dyhclvi3v7gg589f6odm80rf1geq3rjpajwomcznnytriiq\",\n    \"url\" : \"https://web.example.mocklab.io/859663\",\n    \"sid\" : \"UEBE6D0843afd8F8b686AcFB9b93d97f6d\"\n  }, {\n    \"unique_name\" : \"Julius Roob PhD\",\n    \"date_updated\" : \"2023-05-28T22:49:25.028Z\",\n    \"date_created\" : \"2024-02-02T13:39:38.028Z\",\n    \"task_sid\" : \"UDd5ABB5cE9BBbbDF64Bf5feDfDCcAd88c\",\n    \"assistant_sid\" : \"UA8f619d3c97Aec6eCD62aAD83Bf15ffCa\",\n    \"account_sid\" : \"ACBd08FFF91d16e1f7Dbe1Dad40baFbF72\",\n    \"field_type\" : \"w2sh1k9xio1qwahox72yr0j5c68h42kswlvwni6tpxt8lt8nolx81rpqieynryxodkyncfy2jexjbnocvlplv7jkng1gowjb2l0mocnk628yg2g6x5qz3hke5kuz3xd695pp97966n4z6pym1i4g0wh6eiuu5fg8coxk4madl71dl4rg8\",\n    \"url\" : \"https://web.example.mocklab.io/701537\",\n    \"sid\" : \"UE8a222c43bB0E9ee1b069aaF22ECb85f2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf3f2d0e-4cff-3a7e-9d92-c2be67a38e76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandField",
          "schema" : {
            "properties" : {
              "fields" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.task.field"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUnderstandFieldResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "66e12b84-7b55-306b-ba2b-b3e37674740d",
    "name" : "Updates the actions of an Task identified by {TaskSid} or {TaskUniqueName}.",
    "request" : {
      "urlPath" : "/understand/Assistants/smbc/Tasks/251c/Actions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"task_sid\" : \"UDAC6cD36F088F4a981FABAB29f2ef0eCF\",\n  \"assistant_sid\" : \"UAbEDC860980432Eae828f7ecD73FbceC2\",\n  \"account_sid\" : \"AC86B1Aca036Db4Fa52D0aeC0F16B049F0\",\n  \"url\" : \"https://web.example.mocklab.io/199514\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66e12b84-7b55-306b-ba2b-b3e37674740d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandTaskActions",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "task_sid" : {
                "description" : "The unique ID of the Task.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "5224013b-a710-3e1c-8820-742b791848aa",
    "name" : "Returns JSON actions for this Task.",
    "request" : {
      "urlPath" : "/understand/Assistants/4j70/Tasks/60m4/Actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"task_sid\" : \"UDB07F77Ad8373e66a3a368CdCCefdD01C\",\n  \"assistant_sid\" : \"UAFDee41c2C7cEE457DdFdf873FAabfA15\",\n  \"account_sid\" : \"AC1F56E96d9aA7Cb80D20cA01E7eB2aB2E\",\n  \"url\" : \"https://web.example.mocklab.io/968888\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5224013b-a710-3e1c-8820-742b791848aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandTaskActions",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "task_sid" : {
                "description" : "The unique ID of the Task.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "538abef9-7002-3646-be1b-b44038694f17",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/q05l/Tasks/0stw",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Shenika Huels\",\n  \"unique_name\" : \"Allyson Stamm\",\n  \"date_updated\" : \"2023-08-20T15:05:32.026Z\",\n  \"date_created\" : \"2022-04-06T17:24:51.026Z\",\n  \"assistant_sid\" : \"UAe8ff6F3d4A8fFFb792B4e81BD4fb72eE\",\n  \"account_sid\" : \"ACCEb64b4371A1252BDAB80c19B7f7bEBb\",\n  \"links\" : { },\n  \"actions_url\" : \"https://web.example.mocklab.io/190988\",\n  \"url\" : \"https://web.example.mocklab.io/220317\",\n  \"sid\" : \"UDA2c46AB97DF2D156aaf8F3ab555A7c48\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "538abef9-7002-3646-be1b-b44038694f17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandTask",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Task.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "actions_url" : {
                "description" : "User-provided HTTP endpoint where from the assistant fetches actions",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "fb23d8a8-d0f1-333a-a826-f09e0414ddd8",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/0e27/Tasks/f7km",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Corliss Rippin\",\n  \"unique_name\" : \"Mayra Schroeder\",\n  \"date_updated\" : \"2023-10-26T00:33:04.026Z\",\n  \"date_created\" : \"2023-02-01T04:56:14.026Z\",\n  \"assistant_sid\" : \"UA5f77D0F756a5B4CF7BaedC7F3DdCacF8\",\n  \"account_sid\" : \"ACBbef71D4CaDE5cD36bf0a61b23cE36DD\",\n  \"links\" : { },\n  \"actions_url\" : \"https://web.example.mocklab.io/027273\",\n  \"url\" : \"https://web.example.mocklab.io/919461\",\n  \"sid\" : \"UD6E16eca7E8fFD5DE4d7c6AfF9aBd93f6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb23d8a8-d0f1-333a-a826-f09e0414ddd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandTask",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Task.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "actions_url" : {
                "description" : "User-provided HTTP endpoint where from the assistant fetches actions",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "e1fd46a3-40f5-3730-8961-4611e352b6f8",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/6kn9/Tasks/2184",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e1fd46a3-40f5-3730-8961-4611e352b6f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandTask"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "29516f77-9728-3b00-87d9-453d9f44a4eb",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/2v78/Tasks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Owen Walsh IV\",\n  \"unique_name\" : \"Joleen Hackett\",\n  \"date_updated\" : \"2023-11-04T07:03:55.025Z\",\n  \"date_created\" : \"2022-06-07T23:09:29.025Z\",\n  \"assistant_sid\" : \"UA076D377bd6Aa0fe904be4EAcAe189ADc\",\n  \"account_sid\" : \"ACa4aC6eB6e5ab2A8cA56EecDDebAa7FBD\",\n  \"links\" : { },\n  \"actions_url\" : \"https://web.example.mocklab.io/394808\",\n  \"url\" : \"https://web.example.mocklab.io/580214\",\n  \"sid\" : \"UDAE9e100DcebBC398f82f3DbC1c2d1ff6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29516f77-9728-3b00-87d9-453d9f44a4eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandTask",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Task.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "actions_url" : {
                "description" : "User-provided HTTP endpoint where from the assistant fetches actions",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "44741832-7f5f-34bb-865f-85fa075afc31",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/7ufv/Tasks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/548483\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/816878\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/811189\",\n    \"page\" : 544032903513703960,\n    \"key\" : \"9lplcxiumpyrnbwzbq33jzow8mpc9uwnzfd3e0g5q3ytv9eazgcaj3szy41y1thvvesf1gzaxi01lgljbkzktetfkp5hmo2vsg0conihrmvrtszjnmldmneqvpozhjqvn2\",\n    \"url\" : \"https://web.example.mocklab.io/492431\",\n    \"page_size\" : 8462070393295967428\n  },\n  \"tasks\" : [ {\n    \"friendly_name\" : \"Bradley Yundt\",\n    \"unique_name\" : \"Keenan Considine IV\",\n    \"date_updated\" : \"2023-10-31T00:05:00.024Z\",\n    \"date_created\" : \"2022-09-14T05:10:22.024Z\",\n    \"assistant_sid\" : \"UAeAD2883a36Eee4c47Ec252ffC833D50b\",\n    \"account_sid\" : \"ACD2b3F706ccfBFEA13a01E118Ab1eFA6d\",\n    \"links\" : { },\n    \"actions_url\" : \"https://web.example.mocklab.io/136631\",\n    \"url\" : \"https://web.example.mocklab.io/959293\",\n    \"sid\" : \"UDfc231eea195cab0CCAF2cFcaBf33eC4E\"\n  }, {\n    \"friendly_name\" : \"Delphia Smitham\",\n    \"unique_name\" : \"Dr. Chase Johnson\",\n    \"date_updated\" : \"2022-09-19T23:06:40.025Z\",\n    \"date_created\" : \"2023-08-18T22:46:27.025Z\",\n    \"assistant_sid\" : \"UA97A587f7BE3954bda62c1b82Cca7FEf5\",\n    \"account_sid\" : \"ACFE599EBAf2f0d2daEc4BA7c2F639cE5B\",\n    \"links\" : { },\n    \"actions_url\" : \"https://web.example.mocklab.io/119175\",\n    \"url\" : \"https://web.example.mocklab.io/457948\",\n    \"sid\" : \"UDa9FF9EA2fFA6bff1a191BEFBD9e2B2b2\"\n  }, {\n    \"friendly_name\" : \"Zachariah Dickens\",\n    \"unique_name\" : \"Dr. Flavia Weissnat\",\n    \"date_updated\" : \"2023-08-22T05:37:59.025Z\",\n    \"date_created\" : \"2023-05-10T07:35:08.025Z\",\n    \"assistant_sid\" : \"UAA71E2BEe7c9aBAd046b58E7f0a8Fb8Fc\",\n    \"account_sid\" : \"ACC8a11CE8D8b4f6fefFcBc9e5E29C30aF\",\n    \"links\" : { },\n    \"actions_url\" : \"https://web.example.mocklab.io/578722\",\n    \"url\" : \"https://web.example.mocklab.io/437719\",\n    \"sid\" : \"UD9C50B5949aeF14a04f02BFF6a91870BE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44741832-7f5f-34bb-865f-85fa075afc31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandTask",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "tasks" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.task"
                },
                "type" : "array"
              }
            },
            "title" : "ListUnderstandTaskResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "9978cac5-4088-3fdd-89b8-707a66adf91b",
    "name" : "Updates the style sheet for an assistant identified by {AssistantSid} or {Assist...",
    "request" : {
      "urlPath" : "/understand/Assistants/66a2/StyleSheet",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UA2A9117AEaad5fe4bEd40Ce8Da477738f\",\n  \"account_sid\" : \"ACEF3fC48D8Dd22eA6b0ec82a5efA0aDc6\",\n  \"url\" : \"https://web.example.mocklab.io/373855\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9978cac5-4088-3fdd-89b8-707a66adf91b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandStyleSheet",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Assistant",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "description" : "The JSON style sheet object",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "f13bb91a-e587-3438-b0cd-2c1fe6cb3ccf",
    "name" : "Returns Style sheet JSON object for this Assistant",
    "request" : {
      "urlPath" : "/understand/Assistants/9048/StyleSheet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UA8265BdB078426Fda2D7E4be68a84F8eb\",\n  \"account_sid\" : \"AC685dBd2dfDDeeD2Bb5de6dB0A6B8B6EF\",\n  \"url\" : \"https://web.example.mocklab.io/791079\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f13bb91a-e587-3438-b0cd-2c1fe6cb3ccf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandStyleSheet",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Assistant",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "description" : "The JSON style sheet object",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "aa865c87-9b25-3438-94d5-08f793a806ce",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/5642/Queries/ui15",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-07-07T23:13:49.023Z\",\n  \"source_channel\" : \"zmop85u44of1y895x7smxv4ffiubw0qfj5n3vz9n8ks7zs1caj6yrejbtpcaslrienm6mpea5nf8oeg8h3nl7o6q5hp688w986ejsy0eelz731segun157gkg5imms\",\n  \"date_created\" : \"2022-08-06T12:22:14.023Z\",\n  \"query\" : \"r21tlom7ny2cgyr3ecr8sdw3bt2f1hvm1i9j7kw9dyv0trdfiq\",\n  \"language\" : \"u37e41xje262dvph701l70u4jp1c37l1he45tfeo508j7ge531vpr6qncxyibyubeywfau5oy066211qmie1p8temufxqt5vg40zbzeo2nieqgsrglkaqt5u\",\n  \"url\" : \"https://web.example.mocklab.io/544587\",\n  \"sid\" : \"UHa4F28aDa37c2d30a4F6de3AABDB9ef1E\",\n  \"sample_sid\" : \"UF8a4EEA8e9DaAc75EDcdE40cc4Fb7c60c\",\n  \"assistant_sid\" : \"UAfEd0Fc9E4B8Bc72fED548e3EE7F97cDA\",\n  \"account_sid\" : \"ACA0Fb19a56784Fd1C7E61d8fcED42bc3d\",\n  \"model_build_sid\" : \"UGed5fcBaE79618f666278DACD3Edc1c71\",\n  \"results\" : { },\n  \"status\" : \"6tkkpez8rk7gxwkr4zj2c7oqvqvpbbydapul7wv60xbdwqjo7k1uljm96kvv114hd5lplulyzp5emi5k29u3fs0c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa865c87-9b25-3438-94d5-08f793a806ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandQuery",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Query.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the sample.",
                "nullable" : true,
                "type" : "string"
              },
              "model_build_sid" : {
                "description" : "The unique ID of the Model Build queried.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "query" : {
                "description" : "The end-user's natural language input.",
                "nullable" : true,
                "type" : "string"
              },
              "results" : {
                "description" : "The natural language analysis results which include the Task recognized, the confidence score and a list of identified Fields.",
                "nullable" : true
              },
              "sample_sid" : {
                "description" : "An optional reference to the Sample created from this query.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_channel" : {
                "description" : "The communication channel where this end-user input came from",
                "nullable" : true,
                "type" : "string"
              },
              "status" : {
                "description" : "A string that described the query status. The values can be: pending_review, reviewed, discarded",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "98110e12-9181-327a-8e08-c05b66276310",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/nc41/Queries/xw52",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-12-14T06:41:09.023Z\",\n  \"source_channel\" : \"2hzgjbkdwtvhbd0h1l4n9ccmret8lqgig6ali7s8xmgtdiobezcib0bd760wiij5mmjf1sbr2mxj7ljgpps0fzvcq8jd6m0en8bybddsbyobdvmttwgck9ol6nwdpyexvs1pks998pjk0a1b5n\",\n  \"date_created\" : \"2024-02-02T07:59:05.023Z\",\n  \"query\" : \"q0ule171nnl7opm040oj25xaa5zbsbxt9zsdmnss8zbeeaoygrq546gl19lcwntx4cuu2ulk9g1hhavlzwpbd8k6\",\n  \"language\" : \"x56ab5yio25rchjs6gx5xg3md4vfyuruqht77hk3fbbkspu98e1npzxw7b67e4fl3riz4lbiod4oijbckiw6oirtbjydqzshog4a6jdyu60lhrc23eniqb1db2e562x1u4wo06dj9i2x650ut7tqugbgbmv7y5kmwrusba\",\n  \"url\" : \"https://web.example.mocklab.io/669592\",\n  \"sid\" : \"UHda8a48f90d75BA1aCD7f3244b2Dd10d7\",\n  \"sample_sid\" : \"UF05cC259D07F932Fdc0Ab408763d81db3\",\n  \"assistant_sid\" : \"UA8C5F13b868Fb089b8bCC5c4a5261A5e2\",\n  \"account_sid\" : \"AC4f6dFEaE0Fde0AaeaBE8455E67F8F8A6\",\n  \"model_build_sid\" : \"UG2c5921E7bDd5F0dA0117DdFF48c114FB\",\n  \"results\" : { },\n  \"status\" : \"3g3alm5pbcnp6u1z0zfisu81les6eunce3xloswnbx95xdkq62j1squo9fxi14fprr8lnbdourrvxuet36irnk9z32ef0d9ayyfbj66dntvfbc5h8xa8g501192j6lw8e4a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98110e12-9181-327a-8e08-c05b66276310",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandQuery",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Query.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the sample.",
                "nullable" : true,
                "type" : "string"
              },
              "model_build_sid" : {
                "description" : "The unique ID of the Model Build queried.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "query" : {
                "description" : "The end-user's natural language input.",
                "nullable" : true,
                "type" : "string"
              },
              "results" : {
                "description" : "The natural language analysis results which include the Task recognized, the confidence score and a list of identified Fields.",
                "nullable" : true
              },
              "sample_sid" : {
                "description" : "An optional reference to the Sample created from this query.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_channel" : {
                "description" : "The communication channel where this end-user input came from",
                "nullable" : true,
                "type" : "string"
              },
              "status" : {
                "description" : "A string that described the query status. The values can be: pending_review, reviewed, discarded",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "aec1020a-a36c-3f7f-8a10-e515f3531c42",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/3943/Queries/m7bd",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "aec1020a-a36c-3f7f-8a10-e515f3531c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandQuery"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "a75cec55-71e7-3c4e-b80d-cabdae421215",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/b315/Queries",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2023-06-05T12:19:46.022Z\",\n  \"source_channel\" : \"8bi8ycyq6905fnoi2djuoaxal2vt159jkda3yqr96ktjqzeix4syc0m8i20viyq2z\",\n  \"date_created\" : \"2022-06-04T09:59:43.022Z\",\n  \"query\" : \"c3662l3v8w1631d33smkuu57qwqqcdssit3zwgwgc6d3ngb5wkqh4zdm818z4yf888cpwcglh62l3hhdonlcrgez9hdn1po4ywhvw2jsr7\",\n  \"language\" : \"456r1od9r563sgam9z0x44etysmzzfz5x4j3h8tkqgw2kwyv4zb0esegnmazax7x7albihidjhrhut3wavsufq8cgxtzw2vc29mwcqbp9y3iyjysy\",\n  \"url\" : \"https://web.example.mocklab.io/162595\",\n  \"sid\" : \"UH0497D2E04E8A5Fc97aaCe6aACD9b7c69\",\n  \"sample_sid\" : \"UF4B8d988dc10Ea8e9f92bd0DAB24aBe94\",\n  \"assistant_sid\" : \"UAAFa6b9bCcfA4bdb6d5F16CAF0dbF61d7\",\n  \"account_sid\" : \"ACc1C551Acaa64baA767e1662f8E2ABcbA\",\n  \"model_build_sid\" : \"UG80F5BB22F7766d02De0cbDdFcdBf075F\",\n  \"results\" : { },\n  \"status\" : \"yr2ah5t7xlepd6nd7ftuc74xqw7kttq6tjjxkubenlaqwbtfcyo5uaz3xwj9i10zm61ma50nod3ywgswxxq7e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a75cec55-71e7-3c4e-b80d-cabdae421215",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandQuery",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Query.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the sample.",
                "nullable" : true,
                "type" : "string"
              },
              "model_build_sid" : {
                "description" : "The unique ID of the Model Build queried.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "query" : {
                "description" : "The end-user's natural language input.",
                "nullable" : true,
                "type" : "string"
              },
              "results" : {
                "description" : "The natural language analysis results which include the Task recognized, the confidence score and a list of identified Fields.",
                "nullable" : true
              },
              "sample_sid" : {
                "description" : "An optional reference to the Sample created from this query.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "source_channel" : {
                "description" : "The communication channel where this end-user input came from",
                "nullable" : true,
                "type" : "string"
              },
              "status" : {
                "description" : "A string that described the query status. The values can be: pending_review, reviewed, discarded",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "04402703-0c2a-3d45-a181-f8c7b9eaf78a",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/618a/Queries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/736778\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/082040\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/057124\",\n    \"page\" : 2529113235566998182,\n    \"key\" : \"jamz5qcvfmuzxrlkztync6969qekhy9t0si75lqhtipaflhbhwjn1gikhv56x4ug\",\n    \"url\" : \"https://web.example.mocklab.io/958251\",\n    \"page_size\" : 1093500122309359466\n  },\n  \"queries\" : [ {\n    \"date_updated\" : \"2022-05-04T16:13:52.021Z\",\n    \"source_channel\" : \"nmjzkgwqbxvbidmvqrldauwzsq8mibcleqgnbdvbu392glvsn4f7p2955owgcx05\",\n    \"date_created\" : \"2022-09-11T19:25:36.021Z\",\n    \"query\" : \"gxdjwgah3mnzkxnjh5akc95y2b8yo00c5rd2r02ah9rfmt14xt0jk97isr\",\n    \"language\" : \"bbe1hwgynq94mja7vooucax1r0kmvefhohsq0yravh66zm75ue72lkkhvkey6ubz2g640h0qpymm5jrpvnln3y5vvv8inmdt84on0q1co9rj2jg6abpbd7ala79x9f5vttbx\",\n    \"url\" : \"https://web.example.mocklab.io/060934\",\n    \"sid\" : \"UHDEb75FccC81F9Ec1049A5C2deFff01d2\",\n    \"sample_sid\" : \"UF3A0441e5bEfA62A7d94d52aEd4cD9d96\",\n    \"assistant_sid\" : \"UA27F932Ca3C85Ef1E38d1bDB5dEF93C42\",\n    \"account_sid\" : \"ACF5ee0BEF05e8044b83C81cC590A8D0fE\",\n    \"model_build_sid\" : \"UG01E3dBD3996c63bA9c6B97Ea1Bdcdc17\",\n    \"results\" : { },\n    \"status\" : \"n98bpxya7qdq187gv5l91unk1u01efj5a004zq6ofg34dizthk7gfclftecm3xpzc4xxjz7p3vint80frqzqv05jaebwnpimnxxk2mnxuou45i2adjkz3kz98dkaw2iod20gkkghcv23481ocmri42f43gs36mt5i03x96w4hnm4vrebr3n99w5w0e6xvcvr\"\n  }, {\n    \"date_updated\" : \"2022-11-05T14:07:45.021Z\",\n    \"source_channel\" : \"87y8luefo10hl0soa06gsx5r0ywf4txevqaopph14ugixs5tnnj5npcwthjsaiul7utuhit0wvw0zjm05idki1ajj8xplof13szkb56hni80besyj402sov6kkk9g88tdsb3uzo36rgit71lyqkblo0wm8dyr8yy51nbua8q8rz9ezt7tvs\",\n    \"date_created\" : \"2022-06-27T08:15:45.021Z\",\n    \"query\" : \"n09bedxkd07ic6ilqw0qtppshgpts8a5hhwfqfy5lbmmxv1fvjdi3mnfu6p2jrh2hrcsl0brbls4fqp8na5hkzgiblezhs\",\n    \"language\" : \"mifxlsevkoa22q5b2cva6zjbx8sdt2n1vm4ehxtffw7wjo0zqwsb\",\n    \"url\" : \"https://web.example.mocklab.io/636839\",\n    \"sid\" : \"UHe3446AE2aF6b8aBccE7beb82fbEBb96a\",\n    \"sample_sid\" : \"UF3AB936bE8B6A8f6fB1cA88CFdAAAEAa3\",\n    \"assistant_sid\" : \"UA9BAbfD2aedAbe10be9Af1414673ffE8B\",\n    \"account_sid\" : \"ACc5eB841cdA43D1CbF3b0F216daAC47DD\",\n    \"model_build_sid\" : \"UGeF2C7515fD2d3bE4FD7aB28F30deEFd4\",\n    \"results\" : { },\n    \"status\" : \"7ki13acypctmtyeaqarzsi2jycz8qbvkdefp79dlwsz2hwjjthzf2ytothvxbiadaj8qtiwh4jeljewc95tn5qply322t42z3qxuhjms85tixcl44htf7c53677l37vago1b77y98067q6woo93f2radlwws392iwte6jl4h2t0iq43ypjr2l\"\n  }, {\n    \"date_updated\" : \"2022-08-12T05:57:45.021Z\",\n    \"source_channel\" : \"evhpmbgyguvmxdtbof2jfl9k9vfnq5zidjltkipwq9potj4v0rem6ude5s6u7g51fizwhbt3wg6t5g2ho0jdysmqq02v6ck3zaicabrmlhy1con9xvno0ejy92iow5klxxsb1ccfu7k90j8e2g63254clcwuj4u735j8s9ef\",\n    \"date_created\" : \"2023-11-30T02:58:11.021Z\",\n    \"query\" : \"b1nvwr6502c2thqxshvy32\",\n    \"language\" : \"7a3bfpdr1c3xszdsxvxntep131taucbywohtq3kapkf5itc3uzh8p1s\",\n    \"url\" : \"https://web.example.mocklab.io/855504\",\n    \"sid\" : \"UH4d0eD56A7de4EF2B20E7ce6dfcf23EFF\",\n    \"sample_sid\" : \"UFB6C83db8c3CdF04eBCb737b7EcC902dc\",\n    \"assistant_sid\" : \"UAAacFeD107C09aE9EFBCda5f50eAb8022\",\n    \"account_sid\" : \"ACCfF7De3BDECAcc2Fb6E8bfeadaA0eBba\",\n    \"model_build_sid\" : \"UG8A22286381DB69e36Fd97c407DFf8Bdf\",\n    \"results\" : { },\n    \"status\" : \"7xnni1nnc0fjeq51afrnnbm4f5nhc57khaxf51ez8rs9tfg3znm87xol8b87nce2eurt39nheqywklu6418b1\"\n  }, {\n    \"date_updated\" : \"2022-10-26T23:33:25.021Z\",\n    \"source_channel\" : \"p0ndm8rxq9sxgbtoyc04w03oco\",\n    \"date_created\" : \"2022-12-30T02:41:29.021Z\",\n    \"query\" : \"b2zz1pvgfb0pdmdf1fysmar401xdt47vvjp233xlza6vomuz3upc0qwjyoc3e8kgj8ykcdmrwz4d8zsiuvw5dmy6ur6b6q32bml5xliz1pavwkd3nopsww6gxr\",\n    \"language\" : \"h5jmh3ct695bua0s0c8squr39lhk7dyxsd7k9ldtu70b14oqkybjsar4t62ivhfbm6qmaw9bhvbprdri9\",\n    \"url\" : \"https://web.example.mocklab.io/937149\",\n    \"sid\" : \"UH5BDFdbcC06861136Fa8EcC44Fdbb5de5\",\n    \"sample_sid\" : \"UFbfeC749A7b61ff00d43e5B36CD40B585\",\n    \"assistant_sid\" : \"UAfe6Cb4F4F7CDfaFBaC14A920211B5Bda\",\n    \"account_sid\" : \"ACb889f5dEedFDF7E9F5FddA8e4a9Ba5aA\",\n    \"model_build_sid\" : \"UG99bBbb3Decd229D25cCE0CAeFa3E8ced\",\n    \"results\" : { },\n    \"status\" : \"fpf8lan78o6f06zmme9ji1ttpbzxnhh7yy37enaksnhlmoleevpqv527tqosvqbwgrscj2l3lr\"\n  }, {\n    \"date_updated\" : \"2023-09-04T07:15:05.021Z\",\n    \"source_channel\" : \"yuz2tsxqqkwed1ul2z8g7ygcvt6yrfbskaz82hih6o1akrbc73f9hipmz6xdecrb5z\",\n    \"date_created\" : \"2023-06-06T16:41:47.022Z\",\n    \"query\" : \"lhuo796laec693ivp5j74snmcy\",\n    \"language\" : \"fx02a99ttc6p7j3a08b60c3iaduyuwt7vl0j14ityxdt5wijwywkycvke18kt79iwfk2b2p4utgdz1gx3o76a47uihqmoz1rjafsalei0josutxua1r8gbixn6iz1vgij2qcgm6ntfdf3zd8p\",\n    \"url\" : \"https://web.example.mocklab.io/544255\",\n    \"sid\" : \"UHdfe0b7eb562671F3eECDFF50CC4dE9ac\",\n    \"sample_sid\" : \"UFA8f7F0B2f4e5AB04c88Feb0554968259\",\n    \"assistant_sid\" : \"UAF559996aCEf3d99BBd8BEf1955EE7BED\",\n    \"account_sid\" : \"ACACc8d4cda57C22abd31ffbbeeb0a81E7\",\n    \"model_build_sid\" : \"UGefb0F9a09aEF4faf7bCFC9A0795Cfcac\",\n    \"results\" : { },\n    \"status\" : \"c0tzh112vjgeqj8vbbyaqt3dyv48yz1zj\"\n  }, {\n    \"date_updated\" : \"2022-11-15T15:08:14.022Z\",\n    \"source_channel\" : \"njapycmdrtuw78lbizkcmufnp468p8ssnh5teb11at8v5rwyuwqgpuyju3272k23ou265sxergn3lhaakadqhakys491pv5ppm7mrxzvafacgl28690yb0ja56d6i8wfk8nb9t68j2p\",\n    \"date_created\" : \"2023-12-26T21:29:15.022Z\",\n    \"query\" : \"qax77i4ffwoe2564lqlsa0fnfwwtsho1agmr0ewxmmj01679a814jwpnz5i1rdxf5jtk6ppplitre68tt0syzym9ilkgmvyf9qplwqcddgl70m39xn\",\n    \"language\" : \"r748qaxnh9ot3ezhrsqo22c2rvregtg6p9l7xjhdokm75sqrupkhe6vzb0ut3l\",\n    \"url\" : \"https://web.example.mocklab.io/184437\",\n    \"sid\" : \"UH1DCCE68fDD5fAacf1dACa0B4a432A4Ee\",\n    \"sample_sid\" : \"UFbeb8bB7DcFCc016C232C3Cfe7c546AEB\",\n    \"assistant_sid\" : \"UA527054Ab8fC4DF9Fe7cEe7D8Ba58675E\",\n    \"account_sid\" : \"ACa3d81eeB7b91B4f43bC78C89bab81Ffb\",\n    \"model_build_sid\" : \"UG4Fea47FB75295fd490476E03ea4BB7d5\",\n    \"results\" : { },\n    \"status\" : \"bhf8u7d938sud925aqhvw2eay0mgnp7scj4jtfu7awenwfg0wm3gxd8r1tiitebweno7l7ujg31szn7997auukwyib8m526frpbb4hun\"\n  }, {\n    \"date_updated\" : \"2022-04-01T14:27:39.022Z\",\n    \"source_channel\" : \"28p62v9x43fg3fjfaq0626cqjrqrlabetsnk3yqzn6if1sqq76xixqjcor9v4fpu5387lwb1zr15ck71q53mjubg0xi4rkh2pak10j8wc79m030ac5q90yyecdpamyp4cg3n7c1qf4ctqlvkz2vh7xm6enj08c7uw9a8r41xqhpziuezs45\",\n    \"date_created\" : \"2023-12-24T14:08:37.022Z\",\n    \"query\" : \"3studkcyczayfnw5etbiti1hzn92lr5u9m7qrr09okdxom4ay9\",\n    \"language\" : \"maouqr0h0hzzm83nzjn0mosve40j\",\n    \"url\" : \"https://web.example.mocklab.io/278852\",\n    \"sid\" : \"UH5F3d4EB1A81D859eCCBadb1Aa24CbA4F\",\n    \"sample_sid\" : \"UF4A6aaEBbC2cC5FDeA6abD3F4c3780e74\",\n    \"assistant_sid\" : \"UAf0e4ed86403AF2bfD5D86D4BDceedb93\",\n    \"account_sid\" : \"ACfa85825206BDbBEbCD0c0f67Be57ff2F\",\n    \"model_build_sid\" : \"UG1ec9c913295fB0f9abFFeCC18Fa0CfEA\",\n    \"results\" : { },\n    \"status\" : \"yrl23733ehywxsd96r4zbf3c6c59m6nz1lscfgahcf7lq0mh2040o8r7uafhjvk1i\"\n  }, {\n    \"date_updated\" : \"2023-02-15T22:07:59.022Z\",\n    \"source_channel\" : \"9r47fvau4sw8ci27\",\n    \"date_created\" : \"2022-05-06T23:19:43.022Z\",\n    \"query\" : \"wb8as8uixcacg6qze0r8iwbb149qo5gcvzpzka732lt0rc721hz8cpzaewfw5nsw7p0jgya9wo3gg4f0q9ith0y82pevath1ad16mrkpjgjgienotzdjwbimikl4vg4iyt6g8\",\n    \"language\" : \"iqopnufime439ojiz8ntcs56mjbd2oz7o\",\n    \"url\" : \"https://web.example.mocklab.io/985770\",\n    \"sid\" : \"UHA74D402A65e181a8F3AaB9FcD0c52cd7\",\n    \"sample_sid\" : \"UFf203F758Cc53C273eb8fE8711cadbD67\",\n    \"assistant_sid\" : \"UAde7Af4360bbd28cfFCFbA2AAf5BF8daB\",\n    \"account_sid\" : \"AC8a2a7Ac722429c3dCae49eCC7EAfb85A\",\n    \"model_build_sid\" : \"UGE71840FDE438DabbfE48EE8000eC69bd\",\n    \"results\" : { },\n    \"status\" : \"pxffj91tukidprf5wsqlgtxt0shlo3d8n9omifueqhurndph3rr07uf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04402703-0c2a-3d45-a181-f8c7b9eaf78a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandQuery",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "queries" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.query"
                },
                "type" : "array"
              }
            },
            "title" : "ListUnderstandQueryResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "b7fbdc69-6165-3d7a-849e-49aca8100f3f",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/3u1v/ModelBuilds/4j56",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unique_name\" : \"Floyd Walker\",\n  \"date_updated\" : \"2022-05-09T20:50:44.02Z\",\n  \"date_created\" : \"2022-03-10T00:53:18.02Z\",\n  \"assistant_sid\" : \"UACB496DC413F798aCAa01B5B3AFf1c100\",\n  \"account_sid\" : \"ACaCea9DDB74B5Fbfff1F18079a4Dd54aF\",\n  \"error_code\" : 2466046906473591557,\n  \"build_duration\" : 4558166806898654565,\n  \"url\" : \"https://web.example.mocklab.io/750853\",\n  \"sid\" : \"UGFaE9a02fd37C31cd54CADac207633E4d\",\n  \"status\" : \"completed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7fbdc69-6165-3d7a-849e-49aca8100f3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandModelBuild",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Model Build.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "build_duration" : {
                "description" : "The time in seconds it took to build the model.",
                "nullable" : true,
                "type" : "integer"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/model_build_enum_status"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "fca1d688-8155-3833-a785-cbe1713ece70",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/nz2n/ModelBuilds/pmt8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unique_name\" : \"Dr. Tynisha Graham\",\n  \"date_updated\" : \"2022-07-01T04:32:57.02Z\",\n  \"date_created\" : \"2022-09-23T00:38:40.02Z\",\n  \"assistant_sid\" : \"UAAB297D7a0bb67765333371dB8C90FB3d\",\n  \"account_sid\" : \"AC1cd98DccE1B38dcAAe2FDea17E23C0bd\",\n  \"error_code\" : 4138090998934234122,\n  \"build_duration\" : 329068365378896354,\n  \"url\" : \"https://web.example.mocklab.io/769369\",\n  \"sid\" : \"UG86AAfFBD3aa8cb012D496C49bBc2baa4\",\n  \"status\" : \"building\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fca1d688-8155-3833-a785-cbe1713ece70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandModelBuild",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Model Build.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "build_duration" : {
                "description" : "The time in seconds it took to build the model.",
                "nullable" : true,
                "type" : "integer"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/model_build_enum_status"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "08f20368-eb74-38e7-a3ad-79f63ab2b972",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/q916/ModelBuilds/ou12",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "08f20368-eb74-38e7-a3ad-79f63ab2b972",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandModelBuild"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "73bc3468-aad8-3e04-96dc-6b4495ea63c2",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/w02k/ModelBuilds",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"unique_name\" : \"Abe Gutkowski\",\n  \"date_updated\" : \"2022-03-27T10:12:04.019Z\",\n  \"date_created\" : \"2022-07-26T18:48:51.019Z\",\n  \"assistant_sid\" : \"UA11AcAca43ca92A9a6c727EaBbbDDCFdB\",\n  \"account_sid\" : \"AC8d5bab4d1758308Dc3dd74A66A1A2E5b\",\n  \"error_code\" : 5179236359666159687,\n  \"build_duration\" : 3556472785810951256,\n  \"url\" : \"https://web.example.mocklab.io/297281\",\n  \"sid\" : \"UG17d0FAD7F64e0FB1D16aA3CCAe0B4c71\",\n  \"status\" : \"building\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73bc3468-aad8-3e04-96dc-6b4495ea63c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandModelBuild",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Model Build.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "build_duration" : {
                "description" : "The time in seconds it took to build the model.",
                "nullable" : true,
                "type" : "integer"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/model_build_enum_status"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "b6bf11a7-4d6c-3bd0-bfd9-2fef46cdb614",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/j0vs/ModelBuilds",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"model_builds\" : [ {\n    \"unique_name\" : \"Jacquelyn Hauck V\",\n    \"date_updated\" : \"2024-02-18T03:21:53.018Z\",\n    \"date_created\" : \"2022-11-19T14:40:48.018Z\",\n    \"assistant_sid\" : \"UA70F5F14DEE7A242dca26CccfDCBD6f2f\",\n    \"account_sid\" : \"AC3B2aEBe4087A765Ca3F1a0e1Bd6472F2\",\n    \"error_code\" : 6359511479831148469,\n    \"build_duration\" : 6121132361415805811,\n    \"url\" : \"https://web.example.mocklab.io/659451\",\n    \"sid\" : \"UG1c3AbFbAdedee37eaC8f55aaBCE65C99\",\n    \"status\" : \"enqueued\"\n  }, {\n    \"unique_name\" : \"Novella Renner\",\n    \"date_updated\" : \"2022-12-27T08:16:46.018Z\",\n    \"date_created\" : \"2023-09-07T10:17:17.018Z\",\n    \"assistant_sid\" : \"UAa3a845eDE3CfADCead6965c9347aa512\",\n    \"account_sid\" : \"ACADA0805D92736BFFBFad141EFfD4e0F7\",\n    \"error_code\" : 1027990242619942456,\n    \"build_duration\" : 6092012834633852940,\n    \"url\" : \"https://web.example.mocklab.io/134893\",\n    \"sid\" : \"UG8359bfb94a6e2d86f1E4fDB37d2BAC2B\",\n    \"status\" : \"completed\"\n  }, {\n    \"unique_name\" : \"Eleonora McDermott\",\n    \"date_updated\" : \"2023-03-11T18:49:16.018Z\",\n    \"date_created\" : \"2023-06-05T01:04:34.018Z\",\n    \"assistant_sid\" : \"UAba06eA6e5dc9545457f5e3DF55115F88\",\n    \"account_sid\" : \"AC5a2819913bAc2ddbA1f8DDd176DAfEf9\",\n    \"error_code\" : 7135656781272497733,\n    \"build_duration\" : 4586923362771724404,\n    \"url\" : \"https://web.example.mocklab.io/372107\",\n    \"sid\" : \"UG4FD510A23AcE5fca6cC3Cd3EFc3CC9a4\",\n    \"status\" : \"canceled\"\n  }, {\n    \"unique_name\" : \"Clifton Stamm DDS\",\n    \"date_updated\" : \"2023-09-15T13:18:40.018Z\",\n    \"date_created\" : \"2023-01-30T07:41:14.018Z\",\n    \"assistant_sid\" : \"UA41FDD34c1EF0A24cA479DB4F9A22f77F\",\n    \"account_sid\" : \"AC6ADA1df48F1caAA432d4Dae2A5cAA5E2\",\n    \"error_code\" : 6347310806956072614,\n    \"build_duration\" : 1708479361489255453,\n    \"url\" : \"https://web.example.mocklab.io/621564\",\n    \"sid\" : \"UGEcdE3E7e9F040EE28Abf6de350d0ECFA\",\n    \"status\" : \"enqueued\"\n  }, {\n    \"unique_name\" : \"Miss Lindsay Hilpert\",\n    \"date_updated\" : \"2023-06-22T09:05:32.019Z\",\n    \"date_created\" : \"2023-05-07T06:52:43.019Z\",\n    \"assistant_sid\" : \"UA7caeeAbDf963Dc3c9CD2adD6ebFa456F\",\n    \"account_sid\" : \"AC41F34F5daEcfA28e6efFeC9bfe900Cea\",\n    \"error_code\" : 5740041315022738897,\n    \"build_duration\" : 8736926131752535098,\n    \"url\" : \"https://web.example.mocklab.io/127459\",\n    \"sid\" : \"UGC2D6fA5fDeFc2B56bac2BF478042Ed36\",\n    \"status\" : \"enqueued\"\n  }, {\n    \"unique_name\" : \"Miss Chantay Botsford\",\n    \"date_updated\" : \"2023-12-23T11:21:01.019Z\",\n    \"date_created\" : \"2024-02-03T05:29:25.019Z\",\n    \"assistant_sid\" : \"UA253b1eDf6FfECA9E842fa5bA098724cD\",\n    \"account_sid\" : \"AC3d14e4Aa90fE8cCCACb37563ceCD1fd7\",\n    \"error_code\" : 1032891871930391981,\n    \"build_duration\" : 6585312438388146781,\n    \"url\" : \"https://web.example.mocklab.io/946463\",\n    \"sid\" : \"UGc4F9F65bC3fa1a4adee2AB5C9f22308d\",\n    \"status\" : \"enqueued\"\n  }, {\n    \"unique_name\" : \"Lashonda Farrell\",\n    \"date_updated\" : \"2023-07-31T12:06:20.019Z\",\n    \"date_created\" : \"2023-09-27T12:26:24.019Z\",\n    \"assistant_sid\" : \"UA76F44B775430B1E3db1afC3CC1F7Fc4A\",\n    \"account_sid\" : \"AC21BF6Dd8e07eD89eC48A0deFeE1eCb5C\",\n    \"error_code\" : 8384623187556105608,\n    \"build_duration\" : 2939238324111706125,\n    \"url\" : \"https://web.example.mocklab.io/077189\",\n    \"sid\" : \"UGF04dFc5b0Cefe9bebC2f5b1c818DDa6C\",\n    \"status\" : \"completed\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/780441\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/332812\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/170500\",\n    \"page\" : 1132471497521999354,\n    \"key\" : \"r6dklgj1sjcpuf7fiwn1yombpxh5m2hops4dktqz3537lqqduy5a9fs5fbsb7tgo14i7urkexbro4iakv5kbeljlqi5ltw5n77s0myuuq47t2ky130ppm\",\n    \"url\" : \"https://web.example.mocklab.io/523868\",\n    \"page_size\" : 4644814312962200405\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6bf11a7-4d6c-3bd0-bfd9-2fef46cdb614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandModelBuild",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "model_builds" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.model_build"
                },
                "type" : "array"
              }
            },
            "title" : "ListUnderstandModelBuildResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "04669e9f-bc9c-3229-89e9-b924913bd906",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/qqix/InitiationActions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UA5EECAd7Cf177CdA652DDF8B64E3AC58c\",\n  \"account_sid\" : \"AC4Ce2cd1C81e5cCD16F7d50aFB835C288\",\n  \"url\" : \"https://web.example.mocklab.io/042353\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04669e9f-bc9c-3229-89e9-b924913bd906",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandAssistantInitiationActions",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "edf07321-5c49-3966-9fb4-9de8ae824048",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/4gd7/InitiationActions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UAf88bBe031EbddEaDC1B66Cd99847FF5D\",\n  \"account_sid\" : \"ACe9C05CcA5983C8f9EF1d0Aa1dfa0c03C\",\n  \"url\" : \"https://web.example.mocklab.io/909230\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edf07321-5c49-3966-9fb4-9de8ae824048",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandAssistantInitiationActions",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "a901a532-4572-3462-8c28-555b74ecee65",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/h382/FieldTypes/22jn",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Kyra Pagac\",\n  \"unique_name\" : \"Ervin Boehm\",\n  \"date_updated\" : \"2023-01-28T13:23:36.017Z\",\n  \"date_created\" : \"2022-03-16T23:44:20.017Z\",\n  \"assistant_sid\" : \"UA6CcBe174261cD622CD9BB7Ac288E2Dc8\",\n  \"account_sid\" : \"AC23582b0eBC45a7C5fF31fd024780d93C\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/546996\",\n  \"sid\" : \"UBd3EA7EebA8acEd8CBE25f1C3cfA1Ee92\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a901a532-4572-3462-8c28-555b74ecee65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandFieldType",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field Type.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "9d95a0ff-d04e-31d2-8103-6bd1a22740f7",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/1x0y/FieldTypes/ov3m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Valrie Beer\",\n  \"unique_name\" : \"Clyde Hickle\",\n  \"date_updated\" : \"2022-11-30T19:45:58.017Z\",\n  \"date_created\" : \"2022-12-07T13:45:51.017Z\",\n  \"assistant_sid\" : \"UAbDB3aC5FAa8f3dCc4EB54FA71ef9E566\",\n  \"account_sid\" : \"ACF2d7a7aa4fdF0EAd6dc1833affE073c1\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/593181\",\n  \"sid\" : \"UBF61EaC1Af8B7138dFB4f8393BBF97C54\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d95a0ff-d04e-31d2-8103-6bd1a22740f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandFieldType",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field Type.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "ff3cbee4-c7c9-3056-8ddf-64abe9a12de0",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/7xme/FieldTypes/6uk0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ff3cbee4-c7c9-3056-8ddf-64abe9a12de0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandFieldType"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "b94e8ae6-f740-3346-915f-a635ec070433",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/cam5/FieldTypes/1fo4/FieldValues/9f74",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-10-31T22:45:34.016Z\",\n  \"date_created\" : \"2023-06-27T16:20:39.016Z\",\n  \"field_type_sid\" : \"UB9baBa934551d4bC5b0Ee88fdb88b97A5\",\n  \"synonym_of\" : \"UCAdEDD2424d4EC5aADcd42D03bDEa4ecc\",\n  \"assistant_sid\" : \"UAca0dDadEc79DCbDfa8B6dD6B8267339a\",\n  \"account_sid\" : \"AC1DCa6c15b4EBf577DF0D7ED0678D3EFb\",\n  \"language\" : \"9uhwli580qztv6fox8hlzwqhpeg8e4r16l9bpr4dfmviebdk40y71x3ba8azgelowrs61hidgkgc4okjxd0kacsmb8rl7gm1q7v9zu1zmmtcsj8vdhwryeidvs2rpd3z5l6tut899u702kee4p7gxyql\",\n  \"value\" : \"0om5rbvl3ihviihxoufn52n4annymxs4iz4ldgkx\",\n  \"url\" : \"https://web.example.mocklab.io/090312\",\n  \"sid\" : \"UC49Dc2BbD9Fe85caC79aFC25726C1e901\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b94e8ae6-f740-3346-915f-a635ec070433",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandFieldValue",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field Value.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "field_type_sid" : {
                "description" : "The unique ID of the Field Type associated with this Field Value.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the value.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "synonym_of" : {
                "description" : "A value that indicates this field value is a synonym of. Empty if the value is not a synonym.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "value" : {
                "description" : "The Field Value itself.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "06cc90c2-3c3c-370c-942e-408bb7c799db",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/understand/Assistants/7aob/FieldTypes/55or/FieldValues/4r4d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "06cc90c2-3c3c-370c-942e-408bb7c799db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUnderstandFieldValue"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "1c7574c0-02a6-382f-9b43-a6d5a883c4c7",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/g447/FieldTypes/04ib/FieldValues",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2024-02-26T07:58:23.016Z\",\n  \"date_created\" : \"2023-08-24T17:53:41.016Z\",\n  \"field_type_sid\" : \"UBcfbbF91eA6c3e6a38a7dC98a402d15Ad\",\n  \"synonym_of\" : \"UCd87864DA86eaCAc2a4bF03A4FA62EC56\",\n  \"assistant_sid\" : \"UAfcfeCcCBC5adBaD2cFaaCF87a5cDa9C9\",\n  \"account_sid\" : \"AC061DfBFF2240E8D8e2AAC36dfc1Ca4B6\",\n  \"language\" : \"c6kgj53rtjtdyfruxcqr7njdlw18cg1sp5c14qt4sd\",\n  \"value\" : \"fzzf4ov2xuh705cfjk7ewo01hw6miw0oh81i9ht80nmxn15shrr5v9vtj6a7s8qxnydj4smareiaqi42njct4vqjbqb1hhta77rzruw5htxilh77eeguee9o9lx8oclfp07gpql1va32x02wh7kidptbgwb59o6rydc0mcddsvrckav0xij2xkhm0li371l3m276qx6\",\n  \"url\" : \"https://web.example.mocklab.io/563034\",\n  \"sid\" : \"UC23aba0b0BaE6aF839034d0AfAeb13B9b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c7574c0-02a6-382f-9b43-a6d5a883c4c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandFieldValue",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field Value.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "field_type_sid" : {
                "description" : "The unique ID of the Field Type associated with this Field Value.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "language" : {
                "description" : "An ISO language-country string of the value.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "synonym_of" : {
                "description" : "A value that indicates this field value is a synonym of. Empty if the value is not a synonym.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "value" : {
                "description" : "The Field Value itself.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "6254fc8a-c5ce-361e-bf09-93fdea7ed532",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/2rk1/FieldTypes/xbtm/FieldValues",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/197781\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/077051\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/785045\",\n    \"page\" : 4583480034036072241,\n    \"key\" : \"gv1mytuggtwybv3jr91j9rx967ngykkvza40njo4gs7uo2dyp4ibqbudx5tbcz6d86lxdhq1wmmtguswm3haol\",\n    \"url\" : \"https://web.example.mocklab.io/354226\",\n    \"page_size\" : 2678904306456807927\n  },\n  \"field_values\" : [ {\n    \"date_updated\" : \"2024-03-06T18:49:11.015Z\",\n    \"date_created\" : \"2023-10-15T23:06:36.015Z\",\n    \"field_type_sid\" : \"UBA68febd890cE0E4B1767a905c1CfB4d8\",\n    \"synonym_of\" : \"UC50FeEfc1EBfef9e99adC9e7C3C56c1a1\",\n    \"assistant_sid\" : \"UA9EDEDcE6CABfA70CFdbE0eCc2E517fAe\",\n    \"account_sid\" : \"AC1EDC6Fb30768A4cBFb3126E0ecca8CEF\",\n    \"language\" : \"ev6i3a\",\n    \"value\" : \"r6su9b0634cfw3iwtbkw0a69dl1vd1qy045u8piuk8tsn6ayxqwr8uncdhpprpa3poodn8a81gx1csp93x3js5wal2it8pu\",\n    \"url\" : \"https://web.example.mocklab.io/239609\",\n    \"sid\" : \"UCcB2d50ecFc2ecefD0deeB1ff0dfcd8dF\"\n  }, {\n    \"date_updated\" : \"2022-07-15T04:27:09.015Z\",\n    \"date_created\" : \"2023-08-06T17:06:51.015Z\",\n    \"field_type_sid\" : \"UB6E97CDc9A2fB3A6B72E4863AaC36bFE9\",\n    \"synonym_of\" : \"UCDd7B97170cAf3c8d26Cd1ABC6AEce85C\",\n    \"assistant_sid\" : \"UA4Fe7664F5A86c268ba3c475654ec38cD\",\n    \"account_sid\" : \"AC2d8Ab1A46bCaD9Da9Fc1B91cdB840059\",\n    \"language\" : \"cp8j5luj8s2hej46gqr39kkvxk3b64t759tvxylz3mepxz5aulwstwbzm8wa2j31qdcxxj3gv0swvekvnudaroviv9hz5utc7nc7v92fh2io\",\n    \"value\" : \"9kbcgsa7b3ak4knoygk8xnz7qyhd5g52kjnop6dffoydu4ratcvampr21dn5lc0741b9e9noi2ndphjec2xycqj3djdp4olcbr8ens3705em64qlbi16lcxgewx9vjwhfpghlfj3hoa2sw9y53j59x3tgj1pdhwkh7p1v3wpppj3fhwmkyoizoulqdopv6eqh\",\n    \"url\" : \"https://web.example.mocklab.io/341108\",\n    \"sid\" : \"UCCAccE8FeD1ac80Fe61B79A34F0b6f594\"\n  }, {\n    \"date_updated\" : \"2022-05-11T08:29:24.015Z\",\n    \"date_created\" : \"2023-07-05T14:12:31.015Z\",\n    \"field_type_sid\" : \"UB62fabFDA50c9Af5C30D2973Db7CC3e3b\",\n    \"synonym_of\" : \"UC2aD3483dDEdFCeC39dAdCd31E32b7b4d\",\n    \"assistant_sid\" : \"UA8f409131C7cBbF306Cd0061DC78784aF\",\n    \"account_sid\" : \"ACb9CFEeDDe6eC003512EbEc3ef6defdfe\",\n    \"language\" : \"s7r8qaay3vnvuriwmpdfqz5164j3lsh8783c7q0lu96nebvwdktparhy8kv5j9am4igh33h2c8pt75glltrq8q0zjj7kg48prvg4oohksk2lp3cq4gn6l2lcq4yqljs0sghrehn40swvl7h8ckhpt5uoftktt5lnux6bs3wdumbvm8oenetceq\",\n    \"value\" : \"oh84cksv8ftbqdaghbz87\",\n    \"url\" : \"https://web.example.mocklab.io/338670\",\n    \"sid\" : \"UCe34Bc3DFa13bC6bd1b79DDB68BB419BA\"\n  }, {\n    \"date_updated\" : \"2023-02-13T08:58:28.015Z\",\n    \"date_created\" : \"2022-08-27T10:27:37.015Z\",\n    \"field_type_sid\" : \"UB2BeC3f0eDD1beAb074a03D9833bd5bBf\",\n    \"synonym_of\" : \"UCb21D79d9c8dEf3af5cCc36F9ED7cEad0\",\n    \"assistant_sid\" : \"UAE5F016c35F3C7c8Dc215ffdb43F4611b\",\n    \"account_sid\" : \"ACa4f30Be5EB20122dC33f3c0FecCAf68b\",\n    \"language\" : \"v1y8vriv1ouk83nj7s4b8fh26unmvx1ig3r1zgafsaefwao02jyh7295ah5jhyxbb5ft7envhsofw7zjx9lk0hjrectu20okgz\",\n    \"value\" : \"17quhvx74u3hqk25jnu8hiu2no73cdk2nm8i9app2u2zx28dmya16w7vd3htp1373asxj1biqx07cl9dscarndjx8qni70q1xb904069phc22lczftt8w7ret52a6av9uu4i0zo2rt2bkyvxei01jz28ulhsfvga82b8a6fhxmbclck2wv\",\n    \"url\" : \"https://web.example.mocklab.io/028437\",\n    \"sid\" : \"UCa9D6D19BBbAE6ebb03C5B8413cD46A2A\"\n  }, {\n    \"date_updated\" : \"2022-12-29T14:34:45.015Z\",\n    \"date_created\" : \"2022-08-18T16:57:15.015Z\",\n    \"field_type_sid\" : \"UBC65F1BEDbfaCEc487A4270Fb9aF5Dea1\",\n    \"synonym_of\" : \"UC67efbA2e6BD4BBfeaa72ca2Ab0Ceb2AC\",\n    \"assistant_sid\" : \"UA97D5E728B24f9E6aeFF1DdB6a5D97c5C\",\n    \"account_sid\" : \"AC1a9be9905AdE2dB2Cb3cfe2a9173f832\",\n    \"language\" : \"cwtlqzcmxbsyvenxoqgvy7a3b8jgzpag8umhm69adv6bpdvt3yqgusuncff2vfo4q5qlyy2n41ew56cux1cjjptyixormku8y90cf8cwtcla1dzpzy2obozrovbvcqjzz537fy2lh5bkfv8llasm5i3hjc2qy8sxba5en98jo300pe5qjtump3h7qpinjxc2vz\",\n    \"value\" : \"k8c4w5nhrd3mk6ro7pdpb59iiosy0h43sl4vux3asqx3gm1pu43ckm9h2hen4038rie8o49scsz8tu6zy01s2zuf7pkcz1zccrlz0xtncjjradi7ym245lz7ak8v33848wm0jtgav3qi2fekjb83aw4\",\n    \"url\" : \"https://web.example.mocklab.io/525348\",\n    \"sid\" : \"UCDaEcab7b9E9AcDFfbD3AEcB88C521a3e\"\n  }, {\n    \"date_updated\" : \"2022-03-23T01:42:06.015Z\",\n    \"date_created\" : \"2023-07-10T17:37:08.015Z\",\n    \"field_type_sid\" : \"UBDAfc96D20E1c2cC5b6babEA462e9Afcc\",\n    \"synonym_of\" : \"UCA57CBe77855C151A715AE7A7Cdd8E6e7\",\n    \"assistant_sid\" : \"UA4BC90021E78C47DCA4D4ee6dD08E75a5\",\n    \"account_sid\" : \"ACa68e328e905caFf30B0cD0eCB30B17e5\",\n    \"language\" : \"2df88pgzh7x17hg3f0cj1ydhrr0humym7y1qsy47za4ac51d0v74r3mc6fcbq8dfxl2farjhl4j3xuv01zv6ay0ejsnrk5b41ri6z2a0dd7zksdwpvfo104uz23pf2jazawgutsbg1u2ntgbdzxq9dl9tpezb3xv6gu0bwqop09dqvr0dwk\",\n    \"value\" : \"tyylkvtcmklp7tixy01zkpbt2cxtxacjrnq\",\n    \"url\" : \"https://web.example.mocklab.io/468531\",\n    \"sid\" : \"UC48F8d914FF7F258FA9Bd850e0EaDf12d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6254fc8a-c5ce-361e-bf09-93fdea7ed532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandFieldValue",
          "schema" : {
            "properties" : {
              "field_values" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.field_type.field_value"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUnderstandFieldValueResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "0ebdf1ff-b9de-31ff-bcee-7c3605e95b62",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/xr42/FieldTypes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Miss Jeri Lowe\",\n  \"unique_name\" : \"Krystle Mante\",\n  \"date_updated\" : \"2023-07-29T15:03:03.014Z\",\n  \"date_created\" : \"2024-01-18T01:27:21.014Z\",\n  \"assistant_sid\" : \"UAd40Bf9AcEe0fbAcEf96802d99e145B5e\",\n  \"account_sid\" : \"ACe1edAAA08ACfa2Af75bFe48cbeE50Eee\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/182042\",\n  \"sid\" : \"UBCbe4D7d672a0efc3A880ed3135645066\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ebdf1ff-b9de-31ff-bcee-7c3605e95b62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandFieldType",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field Type.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A user-provided string that identifies this resource. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "d02b4771-8baf-3ce4-8e3b-fefafbbdef2a",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/58ia/FieldTypes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"field_types\" : [ {\n    \"friendly_name\" : \"Kenneth Hammes\",\n    \"unique_name\" : \"Ellis Dare\",\n    \"date_updated\" : \"2022-03-10T09:59:31.013Z\",\n    \"date_created\" : \"2023-03-15T19:14:15.013Z\",\n    \"assistant_sid\" : \"UA85eaA6563B55Fd24EC431ecb1F70eAAc\",\n    \"account_sid\" : \"ACAa013Bb1ae31e135AeCCDf89f765EEb7\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/985621\",\n    \"sid\" : \"UBF97AFA13637736FEFCabB9fEeEd9a5e8\"\n  }, {\n    \"friendly_name\" : \"Starr Renner PhD\",\n    \"unique_name\" : \"Paz Schroeder\",\n    \"date_updated\" : \"2023-05-20T23:25:35.013Z\",\n    \"date_created\" : \"2022-08-10T21:28:06.013Z\",\n    \"assistant_sid\" : \"UAA371e0Bb7FC35A88a528F57ea8C9A5Bf\",\n    \"account_sid\" : \"ACDa21a255beC3a7eA8333ceC931D060cA\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/516253\",\n    \"sid\" : \"UBc8E09F2f3c539DDfBdb4483D37e7Fdf9\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/387956\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/406015\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/828702\",\n    \"page\" : 3630011101400584438,\n    \"key\" : \"khpxxec4jpgdw2qv5f8hr7xp82f3anjkjr0yl6jwu47roiolqe7hfd04txknrcrnksx6ewd32fainsqmjvu7b0pgm2fexl4vmt8jyoux13\",\n    \"url\" : \"https://web.example.mocklab.io/688148\",\n    \"page_size\" : 7248801324127575098\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d02b4771-8baf-3ce4-8e3b-fefafbbdef2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandFieldType",
          "schema" : {
            "properties" : {
              "field_types" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant.field_type"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUnderstandFieldTypeResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "3826531a-0f3c-300b-8e69-517567938dab",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/329a/FallbackActions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UAAb1dC0Fbe4e6Ddc9de3F9bc6abDB6efa\",\n  \"account_sid\" : \"ACf1C51ABb54BCBda835d433851b91716D\",\n  \"url\" : \"https://web.example.mocklab.io/527126\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3826531a-0f3c-300b-8e69-517567938dab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUnderstandAssistantFallbackActions",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "a63c75e9-74cd-3c0e-95ee-c4dc11ab1d42",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/3kg6/FallbackActions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UAcF00EE2DEdeACDE6dE333cE7Cbd140e9\",\n  \"account_sid\" : \"AC3e2Ef681CF6F8b7f6DBbB278D3451d0d\",\n  \"url\" : \"https://web.example.mocklab.io/741805\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a63c75e9-74cd-3c0e-95ee-c4dc11ab1d42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandAssistantFallbackActions",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "c5616546-7694-3d8a-ada2-93e2fd19f70e",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants/061m/Dialogues/7al5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"data\" : { },\n  \"assistant_sid\" : \"UAdCB0fB75B80dbA5e2Ae4Db9aCc3F6CE8\",\n  \"account_sid\" : \"ACE8CA386Ff71ce7e452BD8E81dA0ACBf1\",\n  \"url\" : \"https://web.example.mocklab.io/876036\",\n  \"sid\" : \"UKf3EdfBE21FeCF81ABA92F6aB58C23b88\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5616546-7694-3d8a-ada2-93e2fd19f70e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchUnderstandDialogue",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Field.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "assistant_sid" : {
                "description" : "The unique ID of the parent Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "data" : {
                "description" : "The dialogue memory object as json",
                "nullable" : true
              },
              "sid" : {
                "description" : "The unique ID of the Dialogue",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UK[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "927bd3ec-34b3-343e-bb17-c6c2b53ce967",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"callback_url\" : \"https://web.example.mocklab.io/686335\",\n  \"friendly_name\" : \"Mrs. Paris Emard\",\n  \"unique_name\" : \"Brendan Terry\",\n  \"date_updated\" : \"2023-05-08T15:24:01.012Z\",\n  \"latest_model_build_sid\" : \"UG67EdF5fbeC3625Ac6Db5cC4dcCeC6E4b\",\n  \"date_created\" : \"2023-03-09T19:56:05.012Z\",\n  \"account_sid\" : \"AC4E880B1E24ACEA72583b6102c0F5bfe7\",\n  \"links\" : { },\n  \"callback_events\" : \"kssnm8s9e2rzn6a494b5zwd4osx04qn3rtag51dkh390cj358pjoebzut51f3mecv78jc22ixtqz83o6u8n3iwp861sjr2cdjgzeqldhaoyx1s66id0tzkm6hkwg\",\n  \"log_queries\" : true,\n  \"url\" : \"https://web.example.mocklab.io/886017\",\n  \"sid\" : \"UAc5Fe0fdcbA23DeC5DBbfe0ff6cE8a5Eb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "927bd3ec-34b3-343e-bb17-c6c2b53ce967",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUnderstandAssistant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the Account that created this Assistant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "callback_events" : {
                "description" : "Space-separated list of callback events that will trigger callbacks.",
                "nullable" : true,
                "type" : "string"
              },
              "callback_url" : {
                "description" : "A user-provided URL to send event callbacks to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A text description for the Assistant. It is non-unique and can up to 255 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "latest_model_build_sid" : {
                "description" : "The unique ID (Sid) of the latest model build. Null if no model has been built.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "log_queries" : {
                "description" : "A boolean that specifies whether queries should be logged for 30 days further training. If false, no queries will be stored, if true, queries will be stored for 30 days and deleted thereafter.",
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^UA[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "A user-provided string that uniquely identifies this resource as an alternative to the sid. You can use the unique name in the URL path. Unique up to 64 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "2255e103-cc67-3c06-9e6c-a6db96ddeed8",
    "name" : "",
    "request" : {
      "urlPath" : "/understand/Assistants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"assistants\" : [ {\n    \"callback_url\" : \"https://web.example.mocklab.io/463779\",\n    \"friendly_name\" : \"Donnie Sauer\",\n    \"unique_name\" : \"Christopher Schulist\",\n    \"date_updated\" : \"2023-10-03T05:42:53.01Z\",\n    \"latest_model_build_sid\" : \"UGf2cCC600bCDdb134fe8bb0ACfE4a6272\",\n    \"date_created\" : \"2022-07-11T00:00:17.01Z\",\n    \"account_sid\" : \"ACc2DB38aEf6fE82dDFFECe4C50D79c0a3\",\n    \"links\" : { },\n    \"callback_events\" : \"yrbh1ihejxnbkl90hr8ueeyeez0sdjuozc60go1dgfgpms2eq43qygka8tu9d59h0rr9qz7c0mf98apd6j99yhu4il811jxmcaw3mkpuvs44x3a8eja\",\n    \"log_queries\" : false,\n    \"url\" : \"https://web.example.mocklab.io/619444\",\n    \"sid\" : \"UAb6C0B13882f36bB9351e4a5EbdeeA77f\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/842483\",\n    \"friendly_name\" : \"Suzann Tremblay\",\n    \"unique_name\" : \"Abe Ritchie\",\n    \"date_updated\" : \"2023-01-29T18:06:10.01Z\",\n    \"latest_model_build_sid\" : \"UGe3e39aA042ecc3ACf176518b3Ea18cFa\",\n    \"date_created\" : \"2022-09-19T16:40:43.01Z\",\n    \"account_sid\" : \"ACF008F8EF83b62e7cdEcfaCfF7ebFeDFB\",\n    \"links\" : { },\n    \"callback_events\" : \"nr2kj2wg74aqat6sewyctetl3i5vjycxw70rer1gagzs3um773jxe70npe3loazemehcixvxfabm0c3k3t49x7hggyapn7mvurjqilpx8hypvc\",\n    \"log_queries\" : false,\n    \"url\" : \"https://web.example.mocklab.io/185681\",\n    \"sid\" : \"UAb4D9EA02AeA6B90a1f3B0ac98231dd11\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/419459\",\n    \"friendly_name\" : \"Vennie Berge\",\n    \"unique_name\" : \"Tashina Bauch\",\n    \"date_updated\" : \"2022-08-13T02:18:36.01Z\",\n    \"latest_model_build_sid\" : \"UG8AB0f14B2cfcee05b4AbbD8C6dd01765\",\n    \"date_created\" : \"2022-06-26T09:38:03.01Z\",\n    \"account_sid\" : \"AC0DBB666bA50865EEE466fDcE718E0DFe\",\n    \"links\" : { },\n    \"callback_events\" : \"6v95nbos3ugixy3a5485cjajvhqt8vfgxyx2fspcy2lo6rlgqfepi98utn1xp9lsl5lk01sgkeb9ne1fj63r9v9zjvs46m0zfqvgkxtfguro34n2j3alf0dq6k6b1hbc\",\n    \"log_queries\" : true,\n    \"url\" : \"https://web.example.mocklab.io/203573\",\n    \"sid\" : \"UA4dFA4ED0F0d6fc366B322Ad00eD15AfB\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/412402\",\n    \"friendly_name\" : \"Jerrica Doyle\",\n    \"unique_name\" : \"Miss Roma Schuppe\",\n    \"date_updated\" : \"2023-05-15T16:56:45.011Z\",\n    \"latest_model_build_sid\" : \"UG40c2c92Db00fFD7e1d865bffB89cDf18\",\n    \"date_created\" : \"2023-08-21T15:38:15.011Z\",\n    \"account_sid\" : \"AC4d9fE24b3B07Bb8E6847b9Ef24863209\",\n    \"links\" : { },\n    \"callback_events\" : \"jw1c5ejwzbblx2w60j6aitlerloff00dbb8k6unsu4c87lpxsybyk92k8y66l32qc8s8jam46q80ia0tfksa44h7qj1cha32vhrbr46ladzhup4i3ht\",\n    \"log_queries\" : true,\n    \"url\" : \"https://web.example.mocklab.io/863611\",\n    \"sid\" : \"UA6C0d7e43Be1f88c3dA60A9AB47d0be71\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/542986\",\n    \"friendly_name\" : \"Miss Carey Baumbach\",\n    \"unique_name\" : \"Wiley Volkman\",\n    \"date_updated\" : \"2023-10-22T01:07:57.011Z\",\n    \"latest_model_build_sid\" : \"UGF7E27460aFf76C7d5bedDdCeb6f82b95\",\n    \"date_created\" : \"2023-12-19T18:43:53.011Z\",\n    \"account_sid\" : \"ACBdC3fd0bffFD459E2BeB38660De2A85e\",\n    \"links\" : { },\n    \"callback_events\" : \"1oxz80qf8oal1kf7x7wd7wmof3xy2pwy8o6bcpm2htm1k7cbhwmbn54smqgbo4ibpd63wkz31sqdkho3s5lxw6ugra6mk11mcbyhkp\",\n    \"log_queries\" : true,\n    \"url\" : \"https://web.example.mocklab.io/851907\",\n    \"sid\" : \"UAEB1fd5F9bb8849B9aAA3Ea2CaBeF1C3d\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/897831\",\n    \"friendly_name\" : \"Victor Koss III\",\n    \"unique_name\" : \"Dario Heaney\",\n    \"date_updated\" : \"2023-05-24T07:41:58.011Z\",\n    \"latest_model_build_sid\" : \"UG7CAdf44377Dcabc4BE61e3cF942F9aCb\",\n    \"date_created\" : \"2022-08-13T15:48:53.011Z\",\n    \"account_sid\" : \"AC2F04CD1207bEBD3174688bFCa461A057\",\n    \"links\" : { },\n    \"callback_events\" : \"xrykmcfim21jl4dgb6ylhdv\",\n    \"log_queries\" : true,\n    \"url\" : \"https://web.example.mocklab.io/504199\",\n    \"sid\" : \"UA4A2cC54fa2bafCB9e6E4BF65cbe8D004\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/170022\",\n    \"friendly_name\" : \"Royce Cruickshank III\",\n    \"unique_name\" : \"Dewayne Rohan\",\n    \"date_updated\" : \"2023-12-11T04:43:57.011Z\",\n    \"latest_model_build_sid\" : \"UG9aa5DDaDd4b9AAFCAb13F3E2E554D744\",\n    \"date_created\" : \"2022-06-15T16:24:32.011Z\",\n    \"account_sid\" : \"AC0AEde56b0C6fb8AcBD7964700E48f2F5\",\n    \"links\" : { },\n    \"callback_events\" : \"emzo1fe3h4vwhj6dymybamyzq5imgixficvuduo0\",\n    \"log_queries\" : true,\n    \"url\" : \"https://web.example.mocklab.io/906531\",\n    \"sid\" : \"UAFD5e7c142456Ad211EA6ec9dccE83feF\"\n  }, {\n    \"callback_url\" : \"https://web.example.mocklab.io/173756\",\n    \"friendly_name\" : \"Mrs. Leanne Schmeler\",\n    \"unique_name\" : \"Miss Jeromy Kuhic\",\n    \"date_updated\" : \"2023-06-19T13:40:28.011Z\",\n    \"latest_model_build_sid\" : \"UGE74eB2a322C7Fe7d3fDa6Fa3eCFc70b6\",\n    \"date_created\" : \"2022-04-08T19:30:03.011Z\",\n    \"account_sid\" : \"AC7F5ECACCf71c0EfdDaF1c8a855dC2FB7\",\n    \"links\" : { },\n    \"callback_events\" : \"ks7dxfiulqd6sramgyn5nzj0vubyac6j0zeyfm9cueuqixesdadi8ftiswdrlgnko0ykbovqgujt\",\n    \"log_queries\" : true,\n    \"url\" : \"https://web.example.mocklab.io/357005\",\n    \"sid\" : \"UAaebbbc62b5fda887CEE6fEdBB73E94c2\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/679776\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/339093\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/064545\",\n    \"page\" : 3103309726426321775,\n    \"key\" : \"pzyt26anmaybexy2wulfywfi12s466k2fcz8jqsd3ytwgoh9m2qxsr8cjscqem2xy95q38k77nqgqyvnhxfbjehkutsh73tmth4mt1yhm9usgsxmod3pqluuvd9iz26oq2igrsfp5gsmq0qenfn0rdr32\",\n    \"url\" : \"https://web.example.mocklab.io/442893\",\n    \"page_size\" : 6723138765019775297\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2255e103-cc67-3c06-9e6c-a6db96ddeed8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListUnderstandAssistant",
          "schema" : {
            "properties" : {
              "assistants" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.understand.assistant"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUnderstandAssistantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "1e1d08ff-861d-3a7e-829e-84f24cd447e3",
    "name" : "Update an Add-on installation for the Account specified.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns/XE4433abf6BD8F9EE3cCe2ABB293AB8bd4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Ms. Kirby Reilly\",\n  \"unique_name\" : \"Lisbeth Hermiston\",\n  \"date_updated\" : \"2022-12-12T12:53:13.009Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-01-15T01:53:13.009Z\",\n  \"account_sid\" : \"AC1edDA6Aefe95B7bc73bE43DeaaCbC64A\",\n  \"description\" : \"Fuga est alias sed quaerat illum. Eos aliquid officia sed laboriosam aut facere corrupti. Culpa eos ut aliquid sunt assumenda quo. Vel non et aut doloremque voluptatem qui possimus. Suscipit aspernatu\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/000583\",\n  \"sid\" : \"XE997AedA21db51d2A1BE51D2e0cfE16ff\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e1d08ff-861d-3a7e-829e-84f24cd447e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateMarketplaceInstalledAddOn",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the InstalledAddOn resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The JSON object that represents the current configuration of installed Add-on.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A short description of the Add-on's functionality.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the InstalledAddOn resource. This Sid can also be found in the Console on that specific Add-ons page as the 'Available Add-on Sid'.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "37278443-bb56-3822-b74f-e67aae74f819",
    "name" : "Fetch an instance of an Add-on currently installed on this Account.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns/XE4d5cccBBBa45BB9Dcf160AEc0ad7C3ab",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Daniela Erdman\",\n  \"unique_name\" : \"Maurice Steuber DVM\",\n  \"date_updated\" : \"2022-08-20T20:10:56.009Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-06-19T07:00:05.009Z\",\n  \"account_sid\" : \"ACcfAB47acB5df4dB6d278CAC98697Fa90\",\n  \"description\" : \"Adipisci consequatur totam necessitatibus. Velit modi dolor at aut temporibus veniam saepe. Distinctio nulla sed impedit vero.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/615844\",\n  \"sid\" : \"XE4e1a7bdcfEBAAEb55D4DEEBB12fEFaFf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37278443-bb56-3822-b74f-e67aae74f819",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchMarketplaceInstalledAddOn",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the InstalledAddOn resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The JSON object that represents the current configuration of installed Add-on.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A short description of the Add-on's functionality.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the InstalledAddOn resource. This Sid can also be found in the Console on that specific Add-ons page as the 'Available Add-on Sid'.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "3bb4bf79-9abd-3402-a8aa-7f7bab77f951",
    "name" : "Remove an Add-on installation from your account - 204",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns/XEc89a3b0e4AFeE8fbCD8edCbcAAc38dc1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3bb4bf79-9abd-3402-a8aa-7f7bab77f951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteMarketplaceInstalledAddOn"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "dbcdf9c5-2d65-31b8-8ce8-bcb9624adf85",
    "name" : "Update an Extension for an Add-on installation.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns/XECfdA9F19920Ad14D211bD7e1cC93aE42/Extensions/XFFAA62A5cC3BBee23123DbB6Ce0B2bbcE",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Alyson Cormier\",\n  \"unique_name\" : \"Numbers Ryan\",\n  \"installed_add_on_sid\" : \"XEE0f4f60badbdeCeeD5bf56FC83A0c5b9\",\n  \"product_name\" : \"Jewell Romaguera\",\n  \"enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/819644\",\n  \"sid\" : \"XFbDbaE317Ec9BDdb4Ef6D4eeA09E8daDF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbcdf9c5-2d65-31b8-8ce8-bcb9624adf85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateMarketplaceInstalledAddOnExtension",
          "schema" : {
            "properties" : {
              "enabled" : {
                "description" : "Whether the Extension will be invoked.",
                "nullable" : true,
                "type" : "boolean"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "installed_add_on_sid" : {
                "description" : "The SID of the InstalledAddOn resource to which this extension applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "product_name" : {
                "description" : "The name of the Product this Extension is used within.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the InstalledAddOn Extension resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "07707961-4374-3a21-8aa0-26d18b87f991",
    "name" : "Fetch an instance of an Extension for the Installed Add-on.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns/XEedd2DCDD6b1e0876EcEbCd02C8e9cF3c/Extensions/XFb0a0a9bFEdD36cbD733C1E8DA16F52fd",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Noe Flatley\",\n  \"unique_name\" : \"Dr. Angeline Hammes\",\n  \"installed_add_on_sid\" : \"XE9de7Aa7fCFCBCFaEdA6952854F99609d\",\n  \"product_name\" : \"Mr. Leonardo Schulist\",\n  \"enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/497940\",\n  \"sid\" : \"XFf04Fe9B1EA41e0f9D4AFbAA2e526FE01\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07707961-4374-3a21-8aa0-26d18b87f991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchMarketplaceInstalledAddOnExtension",
          "schema" : {
            "properties" : {
              "enabled" : {
                "description" : "Whether the Extension will be invoked.",
                "nullable" : true,
                "type" : "boolean"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "installed_add_on_sid" : {
                "description" : "The SID of the InstalledAddOn resource to which this extension applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "product_name" : {
                "description" : "The name of the Product this Extension is used within.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the InstalledAddOn Extension resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "e5a73cb5-81bd-3653-bc2d-881d521669a8",
    "name" : "Retrieve a list of Extensions for the Installed Add-on.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns/XE8148B0EC8dA2aB32a9c864174C6Ad310/Extensions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ {\n    \"friendly_name\" : \"Staci Boehm\",\n    \"unique_name\" : \"Estelle Wisozk\",\n    \"installed_add_on_sid\" : \"XE977dC006FED43d2FE5210E3aF79Ebd1C\",\n    \"product_name\" : \"Mrs. Numbers Reinger\",\n    \"enabled\" : false,\n    \"url\" : \"https://web.example.mocklab.io/783978\",\n    \"sid\" : \"XFA580463Ff5af37Ee61AEbf9deE04B103\"\n  }, {\n    \"friendly_name\" : \"Mrs. Hubert McClure\",\n    \"unique_name\" : \"Allegra Berge\",\n    \"installed_add_on_sid\" : \"XEAeca2fDa454248F39AE6edEc085c4B75\",\n    \"product_name\" : \"Mrs. Bruno Wuckert\",\n    \"enabled\" : false,\n    \"url\" : \"https://web.example.mocklab.io/580626\",\n    \"sid\" : \"XF35bF1cBa0e996bE6aa4e6EdC7B1f4E64\"\n  }, {\n    \"friendly_name\" : \"Mrs. Athena Wolff\",\n    \"unique_name\" : \"Orville Romaguera\",\n    \"installed_add_on_sid\" : \"XE8aFEBf86aB5d53E25EEEb5cC6EEC4b1b\",\n    \"product_name\" : \"Mr. Wilton D'Amore\",\n    \"enabled\" : true,\n    \"url\" : \"https://web.example.mocklab.io/332184\",\n    \"sid\" : \"XF934FFdeDaECfeecEEac852b3708F4B6C\"\n  }, {\n    \"friendly_name\" : \"Dr. Lavada Rolfson\",\n    \"unique_name\" : \"Mrs. Amada Hane\",\n    \"installed_add_on_sid\" : \"XE8a1c01255Fcfd37a0Dc4AE9bDA3AC4dE\",\n    \"product_name\" : \"Ms. Burton Schulist\",\n    \"enabled\" : true,\n    \"url\" : \"https://web.example.mocklab.io/422035\",\n    \"sid\" : \"XFF9EF9Cca7caBEAa5dFFadBF11EfbA025\"\n  }, {\n    \"friendly_name\" : \"Sommer Baumbach II\",\n    \"unique_name\" : \"Timothy Stoltenberg\",\n    \"installed_add_on_sid\" : \"XECE7e226C1aDeC9f51FdaD1Ae14E4Db3E\",\n    \"product_name\" : \"Mr. Kieth McGlynn\",\n    \"enabled\" : true,\n    \"url\" : \"https://web.example.mocklab.io/789715\",\n    \"sid\" : \"XF3A9a79E0B60e8FC9eF5cd423F9bf2D9f\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/626051\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/921062\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/552555\",\n    \"page\" : 7191587655073138324,\n    \"key\" : \"hfp34x0a9porthxwo\",\n    \"url\" : \"https://web.example.mocklab.io/667706\",\n    \"page_size\" : 8214926366795320892\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5a73cb5-81bd-3653-bc2d-881d521669a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListMarketplaceInstalledAddOnExtension",
          "schema" : {
            "properties" : {
              "extensions" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.marketplace.installed_add_on.installed_add_on_extension"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMarketplaceInstalledAddOnExtensionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "472bc9b9-c451-397c-a94f-c48f254b0e84",
    "name" : "Install an Add-on for the Account specified.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mr. Johnny Bechtelar\",\n  \"unique_name\" : \"Ms. Weldon Thompson\",\n  \"date_updated\" : \"2022-08-20T01:39:07.007Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-07-26T18:58:57.007Z\",\n  \"account_sid\" : \"ACecabC8FEFB6afF5e9aA7A0E1CaB4569F\",\n  \"description\" : \"Et quisquam voluptates eos qui. Omnis debitis rerum ratione. Et fugit et quo voluptatum a exercitationem quam. Et nemo cupiditate. Praesentium ducimus minus quod distinctio ut.\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/106645\",\n  \"sid\" : \"XE44BDB8DbB190de89d3c54bDDEEeafEeC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "472bc9b9-c451-397c-a94f-c48f254b0e84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateMarketplaceInstalledAddOn",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the InstalledAddOn resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The JSON object that represents the current configuration of installed Add-on.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A short description of the Add-on's functionality.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the InstalledAddOn resource. This Sid can also be found in the Console on that specific Add-ons page as the 'Available Add-on Sid'.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XE[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "d602da3b-ce88-3e8d-b0d0-71d7c08ec880",
    "name" : "Retrieve a list of Add-ons currently installed on this Account.",
    "request" : {
      "urlPath" : "/marketplace/InstalledAddOns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/886953\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/431009\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/928153\",\n    \"page\" : 7900524040532521894,\n    \"key\" : \"jmeuuhzueplblyj2hd302nrk3bjmu0dnij065e6h8jp9izwsqz\",\n    \"url\" : \"https://web.example.mocklab.io/911741\",\n    \"page_size\" : 3468221308330524896\n  },\n  \"installed_add_ons\" : [ {\n    \"friendly_name\" : \"Mitchel Weber\",\n    \"unique_name\" : \"Aleen MacGyver IV\",\n    \"date_updated\" : \"2023-09-07T04:54:53.005Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-08-21T23:28:11.005Z\",\n    \"account_sid\" : \"AC5a8bB3d4FC0FCE45B9FcaE0fABc5b73b\",\n    \"description\" : \"Quasi corporis mollitia quas et. Et qui non corporis voluptates adipisci nulla. Deserunt voluptatibus id. Iure magnam dolor distinctio ab sed.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/680547\",\n    \"sid\" : \"XE031Bd07FC4f0E2974FEBCf0c4C4b7d04\"\n  }, {\n    \"friendly_name\" : \"Alejandro Rodriguez I\",\n    \"unique_name\" : \"Elinor Connelly\",\n    \"date_updated\" : \"2022-11-22T01:39:06.006Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-04-23T02:06:11.006Z\",\n    \"account_sid\" : \"AC4BDbA00cDfE62aE5aE6a6f2B65ebE04E\",\n    \"description\" : \"Est voluptas ut et repudiandae similique. Vitae incidunt expedita sed ea repellendus. Quia ad sed esse. Earum qui molestias. Debitis sit quo nobis cupiditate qui natus.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/134130\",\n    \"sid\" : \"XE9E8BbCDD1515e36bAB2E6CdfD7e5A7B4\"\n  }, {\n    \"friendly_name\" : \"Jules Zemlak\",\n    \"unique_name\" : \"Mrs. Katina Gaylord\",\n    \"date_updated\" : \"2023-07-14T04:05:42.006Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-05-07T07:49:26.006Z\",\n    \"account_sid\" : \"AC52cD4A5bFe3fF9caC1CF7d6FD16e332B\",\n    \"description\" : \"Ullam omnis odio voluptas sed. Vel iure nisi accusamus esse et. Alias vel odio quaerat et excepturi.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/127279\",\n    \"sid\" : \"XEE9fCC52F6A0fdf3c84Bb476404Ad23F5\"\n  }, {\n    \"friendly_name\" : \"Basilia Lubowitz\",\n    \"unique_name\" : \"Berna Powlowski\",\n    \"date_updated\" : \"2023-04-02T00:23:54.006Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-12-21T08:10:39.006Z\",\n    \"account_sid\" : \"AC5df3f7623b7CA3a8a1A4eDeaCef5D6fF\",\n    \"description\" : \"Possimus eum et maxime repellendus alias aut cum. Culpa nostrum ea. Distinctio in qui voluptas at dolorum dignissimos. Officiis cupiditate voluptates aperiam porro cumque nulla et.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/503832\",\n    \"sid\" : \"XE6e690AaADE66bC7b720EAe7bCaf9e6cf\"\n  }, {\n    \"friendly_name\" : \"Ranee Kunze DDS\",\n    \"unique_name\" : \"Hazel Harber PhD\",\n    \"date_updated\" : \"2022-10-18T03:36:38.006Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-09-26T19:24:02.006Z\",\n    \"account_sid\" : \"AC9bbf99DaAbAABBcdF0e6aF0C2b73afAC\",\n    \"description\" : \"Qui veritatis culpa culpa voluptates. Cupiditate asperiores placeat non asperiores et iste omnis. At optio debitis corporis libero maxime quia. Mollitia velit debitis consectetur dignissimos dignissim\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/482333\",\n    \"sid\" : \"XE7f3Bd7dedabD8dacd36acC17Ded43b7D\"\n  }, {\n    \"friendly_name\" : \"Raymond Hills\",\n    \"unique_name\" : \"Hedwig Mann IV\",\n    \"date_updated\" : \"2024-01-30T12:20:30.006Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-09-17T13:07:32.006Z\",\n    \"account_sid\" : \"ACE07cF1EdD9E9a3152e02f4855A5Dd8Bb\",\n    \"description\" : \"Error sint provident deleniti ut illum et illum. Commodi illum voluptas quasi enim impedit. Sed voluptatem in magni rerum quo unde assumenda. In molestiae dignissimos occaecati dolore quia. Necessitat\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/322441\",\n    \"sid\" : \"XE9B8802ecb784CF3b7Fd8f9c82abafcBe\"\n  }, {\n    \"friendly_name\" : \"Miguel Upton\",\n    \"unique_name\" : \"Brook Tromp\",\n    \"date_updated\" : \"2022-12-09T21:02:23.006Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-11-24T23:48:17.007Z\",\n    \"account_sid\" : \"AC5cfe7e7fd38C9ed5288d3f578cD53A6B\",\n    \"description\" : \"Ullam sed velit distinctio quaerat rerum fugiat ipsa. Officiis id fugit. Cum incidunt quis. Eum nostrum et voluptatem quia maxime. Aut sunt maiores ipsum.\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/062230\",\n    \"sid\" : \"XEd92D93a0CcCecf8Ec60140e63DBbC048\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d602da3b-ce88-3e8d-b0d0-71d7c08ec880",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListMarketplaceInstalledAddOn",
          "schema" : {
            "properties" : {
              "installed_add_ons" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.marketplace.installed_add_on"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMarketplaceInstalledAddOnResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "b1684dc6-2f58-3232-94ad-523ef968cb4f",
    "name" : "Fetch an instance of an Add-on currently available to be installed.",
    "request" : {
      "urlPath" : "/marketplace/AvailableAddOns/XB8cDf931cC841B9F3dDCB0b679C5cCaDb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"pricing_type\" : \"selpn3hcge14tl9s455grl8zhcaa3yqqdm7n51trzz8najimr9zfsk7ccj35h5c4vgsox7bsqwow3lecgqqa8h22dfad5ub2wxiizvc8ns5kfa9gi\",\n  \"friendly_name\" : \"Terresa Wunsch\",\n  \"description\" : \"Qui numquam repellendus eum sed et. Dicta at numquam explicabo dolor sit. Et dicta officia. Sunt itaque voluptatem sequi dolores. Repellendus distinctio impedit animi mollitia qui quis.\",\n  \"links\" : { },\n  \"configuration_schema\" : { },\n  \"url\" : \"https://web.example.mocklab.io/409815\",\n  \"sid\" : \"XBbcb987289bEbAef1EF9b5aAceDFf0A39\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1684dc6-2f58-3232-94ad-523ef968cb4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchMarketplaceAvailableAddOn",
          "schema" : {
            "properties" : {
              "configuration_schema" : {
                "description" : "The JSON object with the configuration that must be provided when installing a given Add-on.",
                "nullable" : true
              },
              "description" : {
                "description" : "A short description of the Add-on's functionality.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "pricing_type" : {
                "description" : "How customers are charged for using this Add-on.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the AvailableAddOn resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "680fee71-3897-360f-ad23-a5cc74a3a840",
    "name" : "Fetch an instance of an Extension for the Available Add-on.",
    "request" : {
      "urlPath" : "/marketplace/AvailableAddOns/XBa04d7d2Ca46eD2eaC648d9ab966cFbCB/Extensions/XFa5C3A0A0fbE89cb83E03aEb8BFEe3eBb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Dr. Candyce Klein\",\n  \"unique_name\" : \"Barry Jacobs\",\n  \"available_add_on_sid\" : \"XB30EBD9aFd0f57efd2aaDDb622a7f4F64\",\n  \"product_name\" : \"Mathew Kirlin II\",\n  \"url\" : \"https://web.example.mocklab.io/260641\",\n  \"sid\" : \"XF1F7baF78aC64fa19f0ACa4e4eCdceB9C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "680fee71-3897-360f-ad23-a5cc74a3a840",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchMarketplaceAvailableAddOnExtension",
          "schema" : {
            "properties" : {
              "available_add_on_sid" : {
                "description" : "The SID of the AvailableAddOn resource to which this extension applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "product_name" : {
                "description" : "The name of the Product this Extension is used within.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the AvailableAddOnExtension resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^XF[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "5eacf490-3d2c-367c-a64a-3d11e208be87",
    "name" : "Retrieve a list of Extensions for the Available Add-on.",
    "request" : {
      "urlPath" : "/marketplace/AvailableAddOns/XBefBedb6A4d7DE0FbcC5c9Ab3fbdC2A92/Extensions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ {\n    \"friendly_name\" : \"Abram O'Keefe PhD\",\n    \"unique_name\" : \"Chong Rodriguez\",\n    \"available_add_on_sid\" : \"XBFb356aF515bAD5eAC806423D7E0aAb4f\",\n    \"product_name\" : \"Mr. Lanette Green\",\n    \"url\" : \"https://web.example.mocklab.io/501869\",\n    \"sid\" : \"XFC40F99b06EdEaBbA281F5Cb7eAe5bE6a\"\n  }, {\n    \"friendly_name\" : \"Violette Franecki\",\n    \"unique_name\" : \"Efren Waelchi\",\n    \"available_add_on_sid\" : \"XB46c0FEEAefa02E40d2Dc93a0287F9c68\",\n    \"product_name\" : \"Athena Rodriguez\",\n    \"url\" : \"https://web.example.mocklab.io/715871\",\n    \"sid\" : \"XFDC2c3192641E180d7Fa0e7Fd24Bb31cd\"\n  }, {\n    \"friendly_name\" : \"Brock Brown\",\n    \"unique_name\" : \"Gregorio Smitham\",\n    \"available_add_on_sid\" : \"XBee2fAA743b7dFeD49794EaAFc6eCf6fd\",\n    \"product_name\" : \"Cortney Grimes\",\n    \"url\" : \"https://web.example.mocklab.io/046606\",\n    \"sid\" : \"XFefE34bDFFA9Bab9442bdC5E5245ba3Fe\"\n  }, {\n    \"friendly_name\" : \"Douglas Weber\",\n    \"unique_name\" : \"Cherilyn Nienow DVM\",\n    \"available_add_on_sid\" : \"XBc02C15B516B30C4BE7bFC8aBD43eAc84\",\n    \"product_name\" : \"Jordan Schmitt DDS\",\n    \"url\" : \"https://web.example.mocklab.io/031710\",\n    \"sid\" : \"XFF8917cd6cC875691EbE8F7A63E3eEdeb\"\n  }, {\n    \"friendly_name\" : \"Stanley Monahan DVM\",\n    \"unique_name\" : \"Korey Gorczany\",\n    \"available_add_on_sid\" : \"XB9EaD08F4a4ce5560b3F6c3Ce4dAadf5F\",\n    \"product_name\" : \"Sara Koss\",\n    \"url\" : \"https://web.example.mocklab.io/796142\",\n    \"sid\" : \"XFF53C8BC4F116eE924A0cEEC51bbCc9c6\"\n  }, {\n    \"friendly_name\" : \"Trinidad Moore Sr.\",\n    \"unique_name\" : \"Tristan Bayer\",\n    \"available_add_on_sid\" : \"XB1766f2aEA4eA9c3bcEb69A7Fa1CBF69B\",\n    \"product_name\" : \"Alvina Kuhlman\",\n    \"url\" : \"https://web.example.mocklab.io/679924\",\n    \"sid\" : \"XFbC33Dc09dF771B2F8152a7aE057dBd3a\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/309219\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/496425\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/975933\",\n    \"page\" : 4822364151110391632,\n    \"key\" : \"jk68ahqt5gzro3z8wjm80aj4s5ytspknduyiwpz6onbvrm7roibtku50wzv8vi269l2l4qdly4miwcceu5wls604tbggzunqk477lx6k8m74zhl4sajpbkc5xk6hb7mvbcezrwzgum69xr3uzji1i6uy3d3v8xw689a1nxwj443wuku8jy4i87uc6xp2d\",\n    \"url\" : \"https://web.example.mocklab.io/710254\",\n    \"page_size\" : 6204842041867003087\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5eacf490-3d2c-367c-a64a-3d11e208be87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListMarketplaceAvailableAddOnExtension",
          "schema" : {
            "properties" : {
              "extensions" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.marketplace.available_add_on.available_add_on_extension"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMarketplaceAvailableAddOnExtensionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "1b6d0dcf-756f-310b-a76e-74ad839cd73c",
    "name" : "Retrieve a list of Add-ons currently available to be installed.",
    "request" : {
      "urlPath" : "/marketplace/AvailableAddOns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"available_add_ons\" : [ {\n    \"pricing_type\" : \"bvjs15akf9ohr5lxyy1chu797rfl8n3l1nl2ne6iiuts8y78opdn82pf663kui\",\n    \"friendly_name\" : \"Ms. Beverly Christiansen\",\n    \"description\" : \"Deserunt ut magni architecto. Ratione consequatur soluta magnam sequi debitis iure consequatur. Pariatur repellat odit similique rerum quae. Quas quisquam rerum excepturi neque. Optio aut expedita min\",\n    \"links\" : { },\n    \"configuration_schema\" : { },\n    \"url\" : \"https://web.example.mocklab.io/569712\",\n    \"sid\" : \"XBF533dA739dFFbd6Fbd01725f4c1c9D1d\"\n  }, {\n    \"pricing_type\" : \"xh2jbcgqzicznv0lcobircjxv59wpdvsaxp8q5lp26w6jwnqffofteyikzshym0zn9tudl372fn19i8g384yyo1tkwvh1hmvzx6cgfv3f1434vkpwcfggrfs71ud0tluzh0qf0dbddn1cnuigutwt7d1dotbejg3zpyt7fod8xb1l0or5ytj9fyy\",\n    \"friendly_name\" : \"Robbin Ledner\",\n    \"description\" : \"Occaecati ut nostrum enim voluptatem sed. Harum similique consequatur omnis pariatur libero quo. Velit eligendi in velit qui quos.\",\n    \"links\" : { },\n    \"configuration_schema\" : { },\n    \"url\" : \"https://web.example.mocklab.io/064856\",\n    \"sid\" : \"XB103EE9C8Cb7D4c4AA6941aCe05D4cd2B\"\n  }, {\n    \"pricing_type\" : \"cdf\",\n    \"friendly_name\" : \"Jami Grimes\",\n    \"description\" : \"Suscipit in ea. Laborum omnis magnam sunt. Quis quaerat in voluptatibus veniam autem. Ea sit et mollitia. Nostrum cum voluptatem.\",\n    \"links\" : { },\n    \"configuration_schema\" : { },\n    \"url\" : \"https://web.example.mocklab.io/986042\",\n    \"sid\" : \"XBB749d0Fb4bFF75afFBB71CeCAf2685dd\"\n  }, {\n    \"pricing_type\" : \"24scijmb0rqj470fwklhe6p90z6y\",\n    \"friendly_name\" : \"Gregg Bosco\",\n    \"description\" : \"Esse ullam rem. Vero qui vel iste aut consectetur quia deleniti. Ducimus labore rerum ea quia. Ipsa et dicta et ullam ut corporis quaerat. Non placeat vitae nostrum.\",\n    \"links\" : { },\n    \"configuration_schema\" : { },\n    \"url\" : \"https://web.example.mocklab.io/442165\",\n    \"sid\" : \"XBebCa3cED3e6Ca3Ac5b04E775FAEE3047\"\n  }, {\n    \"pricing_type\" : \"jjopaqa5avvf1ocr\",\n    \"friendly_name\" : \"Jodi Gorczany II\",\n    \"description\" : \"Architecto distinctio minima aut. Consequatur quo et alias quia ullam nostrum. Eum rerum deserunt. Voluptatem maxime aperiam et.\",\n    \"links\" : { },\n    \"configuration_schema\" : { },\n    \"url\" : \"https://web.example.mocklab.io/351939\",\n    \"sid\" : \"XBd0Ae502bf13f59b2aDFe6Ea799cDf0E0\"\n  }, {\n    \"pricing_type\" : \"7qv4mz\",\n    \"friendly_name\" : \"Pamala Pacocha\",\n    \"description\" : \"Amet totam earum sunt itaque consequuntur quia. Quasi perspiciatis occaecati perspiciatis animi illum. Et est alias ut distinctio sit iusto. Sunt eum a voluptas necessitatibus veritatis odit. Et commo\",\n    \"links\" : { },\n    \"configuration_schema\" : { },\n    \"url\" : \"https://web.example.mocklab.io/999216\",\n    \"sid\" : \"XBd60D92c2Fd3AdFa007B88CBfA4A5367a\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/987717\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/023602\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/130112\",\n    \"page\" : 6274235608378362689,\n    \"key\" : \"cmw2g3i1yq9fjy34kn9fms1dpek30ss734zkty54q9os9yzzot8jpc7g3ndealy3s0fsy8f8rrp3cyz0ukjjl4jal4q6bw2b5ux5zseablctw9p93r12nxhpo7\",\n    \"url\" : \"https://web.example.mocklab.io/071036\",\n    \"page_size\" : 2657568252973715617\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b6d0dcf-756f-310b-a76e-74ad839cd73c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListMarketplaceAvailableAddOn",
          "schema" : {
            "properties" : {
              "available_add_ons" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.marketplace.available_add_on"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListMarketplaceAvailableAddOnResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "a85a9419-ebe7-3665-9055-def976d8bf47",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISBA15Ed9EA1CBF9feb5dBFDaC9C9920bD",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"acl_enabled\" : false,\n  \"friendly_name\" : \"Jamey Abbott\",\n  \"date_updated\" : \"2024-02-19T23:00:52.001Z\",\n  \"reachability_webhooks_enabled\" : false,\n  \"webhook_url\" : \"https://web.example.mocklab.io/937078\",\n  \"date_created\" : \"2023-03-23T11:05:03.001Z\",\n  \"account_sid\" : \"ACc9fB8Ab0bFeCB99f91BD9Cfaffb52c33\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/236102\",\n  \"sid\" : \"IS08927E85577Bcb12e1EcAAcDA630eA15\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a85a9419-ebe7-3665-9055-def976d8bf47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "acl_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_webhooks_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "webhook_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "37515c4f-e17e-38d3-bf8c-84a38145a567",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS3dCcc4CDda6f89CEfFEF7c9b0eBCEe41",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"acl_enabled\" : true,\n  \"friendly_name\" : \"Sparkle Rice\",\n  \"date_updated\" : \"2022-10-17T21:25:12.001Z\",\n  \"reachability_webhooks_enabled\" : true,\n  \"webhook_url\" : \"https://web.example.mocklab.io/643843\",\n  \"date_created\" : \"2022-07-04T20:29:26.001Z\",\n  \"account_sid\" : \"ACbf41cED4B838B7AcfC8d07FA276a324B\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/770384\",\n  \"sid\" : \"ISCDb81d4eCbece5C17d4CcAC5FdFdbaFC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37515c4f-e17e-38d3-bf8c-84a38145a567",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "acl_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_webhooks_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "webhook_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "e1714029-f059-3fe3-82b8-081e939962f3",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/Sync/Services/ISA9449faD2AcFBe3A6866f1eDf169CD9c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e1714029-f059-3fe3-82b8-081e939962f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncService"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "79876dcc-7c7a-37ce-b11e-4f631ed08210",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS8a7fe408DEade6a6EE6b5a1dBb6dC58b/Maps/45f5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISAC3854AB3A0ccd6c48b5fdFaebdD7851\",\n  \"unique_name\" : \"Otis Gulgowski\",\n  \"date_updated\" : \"2024-03-06T03:10:04.001Z\",\n  \"date_created\" : \"2024-01-03T23:18:31.001Z\",\n  \"account_sid\" : \"AC4c9C46cA00A3b6DbFacDE0fee297514B\",\n  \"links\" : { },\n  \"created_by\" : \"96d6bll941iw2q\",\n  \"url\" : \"https://web.example.mocklab.io/133380\",\n  \"revision\" : \"7rn9fcz4rn3dmu31tqbh7rjxk7vp110we4zgs8qdyotib6m9b6284igswbjrkovzz0dhtmmsn5ip2ees82kn6l27vxjpqdiahtoa2jt8a4ezwhvykmpky4bunnvzfbzjwgwt2i0203k6832u3a5xwop5rrfpmn348uyp6oze0s0x09p1lud6j9i\",\n  \"sid\" : \"MPfa102307386dfdA7624C73FBad19D1Ce\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79876dcc-7c7a-37ce-b11e-4f631ed08210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncSyncMap",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "a6666cea-e72e-3113-aa23-8791ac640094",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/Sync/Services/IS4afFe4fdf5Fb72cbc38C9b9A0eDB41cd/Maps/5208",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a6666cea-e72e-3113-aa23-8791ac640094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncSyncMap"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "f4a48852-bf7f-3ec3-8e54-c0b10de1ddd3",
    "name" : "Update an identity's access to a specific Sync Map.",
    "request" : {
      "urlPath" : "/Sync/Services/IS28e2666eca1DDb0CbD283F4f6Ad1BFCc/Maps/9gpx/Permissions/2zbt5tlj4m4b6dwjk5pagy3dnabemhfrojtzhmgs69d1qn646zth2ggh8cclp90vyf075r3kq27jt3c5ius85c2b8sxqeo06lusmcs6g0qzo5b2idimc9it1cultp36q9hho2ccj3glt9clbf8js",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISa4F95E3bF14d85E83B5FE54BdFE03dAC\",\n  \"read\" : false,\n  \"identity\" : \"eg1a0r1xa20rqgwu9zb1cgtirbg1esroytspasryj3rsjfbc3u3vpnycrtwfi3hxvztvohg9sb124j25992ufr32pkdpw9pfjvbmjauz4ttgckzhj\",\n  \"account_sid\" : \"AC877DBFdE9E115b0db82427b899ebAC33\",\n  \"write\" : true,\n  \"url\" : \"https://web.example.mocklab.io/047960\",\n  \"manage\" : true,\n  \"map_sid\" : \"MPaeE25b36c3eaDAB0AA94Cad1Ddb6bf45\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4a48852-bf7f-3ec3-8e54-c0b10de1ddd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncSyncMapPermission",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Twilio Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
                "nullable" : true,
                "type" : "string"
              },
              "manage" : {
                "description" : "Boolean flag specifying whether the identity can delete the Sync Map.",
                "nullable" : true,
                "type" : "boolean"
              },
              "map_sid" : {
                "description" : "The unique SID identifier of the Sync Map to which the Permission applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "read" : {
                "description" : "Boolean flag specifying whether the identity can read the Sync Map and its Items.",
                "nullable" : true,
                "type" : "boolean"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Sync Service Instance.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Sync Map Permission.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "write" : {
                "description" : "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "de8c0ee3-ba38-3b33-90ad-a9eb45f4d9b1",
    "name" : "Fetch a specific Sync Map Permission.",
    "request" : {
      "urlPath" : "/Sync/Services/IS297dBDcEDDd9Ae904CeD16fBbBe19eFC/Maps/9270/Permissions/188xgffxoi0vpqy6zjvsspr53576ot602uf6g3q8tmsgm76f7xx0jxios69er",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"IS39018fe1Fcb3EBfeDaABC6dBd5eCc008\",\n  \"read\" : true,\n  \"identity\" : \"dv9h3c4f1c1msx7t6l3uy9rj8r2yhxp6wr645xktjp0o6vvkqumkvw3r6fh1cq\",\n  \"account_sid\" : \"ACb9A1A5dfB4f42fa330ec111E9A7C442a\",\n  \"write\" : true,\n  \"url\" : \"https://web.example.mocklab.io/517564\",\n  \"manage\" : true,\n  \"map_sid\" : \"MPbB129bBE6Ba373f5e232DEad8Ba332e0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de8c0ee3-ba38-3b33-90ad-a9eb45f4d9b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncSyncMapPermission",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Twilio Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
                "nullable" : true,
                "type" : "string"
              },
              "manage" : {
                "description" : "Boolean flag specifying whether the identity can delete the Sync Map.",
                "nullable" : true,
                "type" : "boolean"
              },
              "map_sid" : {
                "description" : "The unique SID identifier of the Sync Map to which the Permission applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "read" : {
                "description" : "Boolean flag specifying whether the identity can read the Sync Map and its Items.",
                "nullable" : true,
                "type" : "boolean"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Sync Service Instance.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Sync Map Permission.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "write" : {
                "description" : "Boolean flag specifying whether the identity can create, update and delete Items of the Sync Map.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "dcc0ce80-43fc-364e-87b4-bf6fedbd76d3",
    "name" : "Delete a specific Sync Map Permission. - 204",
    "request" : {
      "urlPath" : "/Sync/Services/ISC7f5f1DCC11EC8cB6d97C28a61247DEd/Maps/7qv2/Permissions/i78st1rvoh2guak8d082e93rwdghq49ynm4syxiz021wlqs2lbn3r807",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "dcc0ce80-43fc-364e-87b4-bf6fedbd76d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncSyncMapPermission"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "ab9cce9e-4581-3f7b-9d0c-13df1ea859d4",
    "name" : "Retrieve a list of all Permissions applying to a Sync Map.",
    "request" : {
      "urlPath" : "/Sync/Services/IS0D4CA78d9e2bBbBff3F4ea8B47Ca0cbc/Maps/c3t6/Permissions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/762867\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/747203\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/105511\",\n    \"page\" : 2774201757655726549,\n    \"key\" : \"k75k6r2175u0f5k4lzjhbb1jdm13g6dl281fez02x80qcxpb6bsvzxx4rik78bdja7jd5z3kficld2htbefanh6odvbiey2atj9m34h03rvlpokugcmnf219x828p0zmds5o3gou3mgl4chelmoi8ete2udcud5jor2henl71rfy3c\",\n    \"url\" : \"https://web.example.mocklab.io/334052\",\n    \"page_size\" : 2936472753468010977\n  },\n  \"permissions\" : [ {\n    \"service_sid\" : \"IS97bEc314BC7ae7f2B73efef0Fba7dd2C\",\n    \"read\" : true,\n    \"identity\" : \"yz7awcq\",\n    \"account_sid\" : \"ACB1F4152DB729eB3d976FaC0c4d1f87ef\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/590608\",\n    \"manage\" : false,\n    \"map_sid\" : \"MPFf78d9A0a71F1AFb3AaEFEFdCa4C6e6e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab9cce9e-4581-3f7b-9d0c-13df1ea859d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncSyncMapPermission",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "permissions" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.sync_map.sync_map_permission"
                },
                "type" : "array"
              }
            },
            "title" : "ListSyncSyncMapPermissionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "1189e69c-5722-3b64-9421-b1387b6ec5d0",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISCC4ad9f926DFf22c23dEba6e342F2fd6/Maps/6eb3/Items/pjk7xqpw78mss9oh8iw4f6h89ax14wu4f1tsc41uab5yeg9t",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"IS6E3D7d3eFD6Edab9bfa0dc8c25C016D0\",\n  \"date_updated\" : \"2023-07-29T19:04:24.999Z\",\n  \"data\" : { },\n  \"date_created\" : \"2023-06-02T13:49:45.999Z\",\n  \"account_sid\" : \"AC4CFB42D400eAe1923DcCBA8E96a7d6AA\",\n  \"created_by\" : \"4kx5am902v3ca5frsfjqvud7zhzkv0gch9kj46zeuvyp0x3dn5p2k\",\n  \"key\" : \"icm6t4mqdmqdav2pypnqvjhkanoeh0obdw3yf2cy09rcwberrl4fco1q3k9cq5qllow12wonwqlnka4zj3vdjnxzcdhof88rqd6enol1zs4d8hf8mwdfbqjspxg9hwd6ou822fu54j53d0kt43k21qxwjpbx4z7o\",\n  \"url\" : \"https://web.example.mocklab.io/459558\",\n  \"map_sid\" : \"MPBEFC3BFcfDaC06C5EfDcdB2Dec3C54C4\",\n  \"revision\" : \"0eaq2fzlud03xg1ik35yy8cxyfapkcwm0l12com70prpttut847q21xfrcvpmzk3gal82q2ubhotv0x619iabwhzf2kn0qzobha8w8vh9ri5t8mojm5jyyla5hpxww7dlxn5ay6wccmfw518zn6brmf7uh9on2u4rb193ktgvrr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1189e69c-5722-3b64-9421-b1387b6ec5d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncSyncMapItem",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "key" : {
                "nullable" : true,
                "type" : "string"
              },
              "map_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "28f867cf-28f2-3fe7-a3d5-95c5a8525378",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISf3D92DD7BFCf0Fa9c931F86b4CcED0cb/Maps/7bj9/Items/of5pqcj5k10asviwcjmmql7sulqkjflgj95p2ve2u73v2rurtc9helh49tr3ledlejz0vlrhwuccpqajjbjyl11t7gxhrjtow1e0cplszae8etc6il8eqqtikumfwl2d63mdq8wpevvcowwp",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISb45EcC1Cef67bdaAb63FbcE4FDE8d6c3\",\n  \"date_updated\" : \"2022-08-06T17:13:03.999Z\",\n  \"data\" : { },\n  \"date_created\" : \"2023-06-16T22:14:17.999Z\",\n  \"account_sid\" : \"AC600E26baf8B2ADCd6B09dACDbD86441d\",\n  \"created_by\" : \"jtqr93v9ytg6ew196pbqr0ikpir1t7uen4m1qfxmq17a5s7juzyx3sv5hd9pyq3w9mxohkd903tsant5q7l3ew4jmy8wciquntbums8yl5z21iy2t1yehc210e1jbk3v7in0sq6240chsj87zsusc1l4llooq625po1pdikcprl\",\n  \"key\" : \"iy6vdqezk4e0x68m5tvgte3wjrjatq89dlazwd0n0ah5ls6dvt8s2eecsn4q0wbrsexdgvx0eys1fjrpg313an\",\n  \"url\" : \"https://web.example.mocklab.io/926415\",\n  \"map_sid\" : \"MPEdB433ae71Cde0E3d62AD6eb54f79616\",\n  \"revision\" : \"c6mw93l6x0rdzvk9bfx42zjbheehnaa3ng13j6ancpdium73jmut3drrv4pxs9mwox01p9mnydooa8ut\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28f867cf-28f2-3fe7-a3d5-95c5a8525378",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncSyncMapItem",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "key" : {
                "nullable" : true,
                "type" : "string"
              },
              "map_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "3c427d22-4405-3afe-b4c2-0c5e16158e53",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/Sync/Services/ISc08Df18d9122dcC540aaBba683cEe8DD/Maps/j5x9/Items/c8x8zuct0ol2ape6aqj2vycogdsy8du7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3c427d22-4405-3afe-b4c2-0c5e16158e53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncSyncMapItem"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "59b99e27-9a80-3784-b938-3a86658ecf9f",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS11AbDe3b11aD86F3629b84Caa845d483/Maps/dxtl/Items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"IS1C8b8D56ca32dfACd4A4aD4eC1Ec305f\",\n  \"date_updated\" : \"2022-08-24T09:39:56.998Z\",\n  \"data\" : { },\n  \"date_created\" : \"2022-08-10T22:44:16.998Z\",\n  \"account_sid\" : \"AC63A3daEaba2E8a69EA1efDdfb646dCDe\",\n  \"created_by\" : \"szum8xg60su\",\n  \"key\" : \"jnh4fomjsttk9al4z73r3l8ij4dthdzysgcehn4pt74yyzf9jmz4ubfh9pf2qt40sfjau9kinsome4wtlfxhq2ik3b5nb4z3lmxc12fx9o55i6pw109l5qicrzixidzbcmg8a2p6k0m793lya\",\n  \"url\" : \"https://web.example.mocklab.io/843014\",\n  \"map_sid\" : \"MP21aB6a525Cc6E0073cdc9e5a4AC6aBb7\",\n  \"revision\" : \"35r7o30m8wcoi2xyf5mr0ssohxlfc3ogs5fgksv6zeyglx3fsazzmznh8hn08ce6zl349x82f45dvxx43eqh4cjwhbjatg00a1acwbnxq3gngr5uy7es9ryp4hinbkgwb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59b99e27-9a80-3784-b938-3a86658ecf9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSyncSyncMapItem",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "key" : {
                "nullable" : true,
                "type" : "string"
              },
              "map_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "5a34a7fd-4291-3585-a735-3e2e87ff5961",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISAFbCCe5ff3C5D653A0eDEcDC79bA84F8/Maps/m8n8/Items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/735245\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/827820\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/265483\",\n    \"page\" : 2797671933106801976,\n    \"key\" : \"brp2lqa1bx9xdg7hahx4ymgr870p3vt108bglbbkg5z1vrvlstrfrjdm7c792xm8o3q0759s20socsm4s8wbezad9fzypvfs54yc5cq6hwj42ovurtxv0qnnnkfkbt6sas0zkg9tun93phsh7ull944os2rl1vycf34orduykty2b5gwnr1rg2x5kmdozlj\",\n    \"url\" : \"https://web.example.mocklab.io/664939\",\n    \"page_size\" : 7895418896826632884\n  },\n  \"items\" : [ {\n    \"service_sid\" : \"IS7cE5BBFF542f28bCD6aCACCC1F1C052d\",\n    \"date_updated\" : \"2024-02-28T16:28:47.997Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-05-16T20:23:51.997Z\",\n    \"account_sid\" : \"ACb8B8B4bAb7eB556AcDdD1Bf21Ac0ea3E\",\n    \"created_by\" : \"kmhct930wkd0azffm63rzct0earr7fjs1ur4axia2qx5fphbx0gh4gjw6ze05ns0f7vl0l8ktt73u4x0bdsf8t9hrpi5vfajl1swstwizvl87kqqvtk\",\n    \"key\" : \"7iahcqg78xdd6le11ior7xm0b5296\",\n    \"url\" : \"https://web.example.mocklab.io/677605\",\n    \"map_sid\" : \"MPfb1fbfA1D10F9C4fa5bF85Ca80ba562A\",\n    \"revision\" : \"rsrxqrz7nwu8aeuybdfv0nuh58fzd5hpyxkblfgg3ukmkuixrr6obxqtxbxl19nt0hi4wxb9cvgl8z3hburr4k67uzwue3zv73klxyqdnzy4mbz7vcoj8okohkyluzh1lv0piak6y2u0prkqwjnlglvex7gbalihaxjhk5hf41z1vrhld2g42qrfyi1r2sgx1mwx3ahg\"\n  }, {\n    \"service_sid\" : \"ISFcfddb83B8FbCFf88BCD7794EdeCaf7B\",\n    \"date_updated\" : \"2022-05-31T16:42:28.997Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-01-21T17:27:29.997Z\",\n    \"account_sid\" : \"AC1Bbc9bFD774CCAD704a2c3CB5BeaCcdd\",\n    \"created_by\" : \"6y4xs24yvkugilfm5r5c1sqgm8q75h7mrg3n8n5tn99lq3khchrf88d8ezpvgwzahvic9yno28x15worulo358fvxa317lfq4iyr0h1kj8qamplnz4krbmzisshhfbrfg5mmpe5yt6pq2a4pn19sj46v3\",\n    \"key\" : \"yatq44unb6e2qpjhp3dm33u65zk6mmmokk5m4k1jv2ni9qe62tjgsov4g6frubjccj8aog9jhddxo3yize9g7e2nk1lblmfrzujwa6gan03\",\n    \"url\" : \"https://web.example.mocklab.io/468706\",\n    \"map_sid\" : \"MP56dcD6a1dfe73e8A63Af2335DF72E15E\",\n    \"revision\" : \"qcmoahfkhck2oy25depm5jjft7zee9csang4hg3eye76\"\n  }, {\n    \"service_sid\" : \"ISbE3E56Cd2D8d878Ae1aDb20c71De2270\",\n    \"date_updated\" : \"2024-02-06T23:27:57.997Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-07-10T15:01:58.997Z\",\n    \"account_sid\" : \"ACdDc7AFC72FB56d2e7AcBB1eBDbB59C6D\",\n    \"created_by\" : \"i0kfyl9h5khjop2oaaufch28jkagaje4zy3xnzjtmhj5dgof0yincs9nt2q8uw53u65tn2tf2u6bx060xrroddydga4cs56rfcq7yyu2dp04lr0rivdxaxgp4mkbixz65sqsm7a\",\n    \"key\" : \"zuwpv4x5d3av4p7tr8deuk\",\n    \"url\" : \"https://web.example.mocklab.io/648227\",\n    \"map_sid\" : \"MPF55B4503043cb68662a20de3CECB5F7C\",\n    \"revision\" : \"mmwd96x7mlxwknqohxon1urq8l1vl0v2w4yteo\"\n  }, {\n    \"service_sid\" : \"IS991a1d5F15DD4888b3Ba1d50c796ce22\",\n    \"date_updated\" : \"2023-11-11T13:45:41.998Z\",\n    \"data\" : { },\n    \"date_created\" : \"2022-08-29T04:30:03.998Z\",\n    \"account_sid\" : \"AC2eD55CBEB5078A931A281A672EaECA8d\",\n    \"created_by\" : \"7j8j82e8uda3xzxorl8vu1r5rg2dxz2zfx37t4q3k1vkkehfibdaj81hwvx669sdesx5xh79h34vf023djubiopryhdnc2uva3o3r97j1bpjq34jxi2z5pfipvdh48m2ajhqgskdwwkqs6vzpcebd3b6m8z6edlg7ne382hdvzi73\",\n    \"key\" : \"92csgo3cdiryyjt3up9uxedp90n9dws0eis6ivq9cnxffp5qnavfynv0gk4jhurhs0aqhzckd35zyy7lqr105v1zf69n8pv6yatmxcvw3v03nol6chy77bv61tbc3\",\n    \"url\" : \"https://web.example.mocklab.io/563203\",\n    \"map_sid\" : \"MPbBC0D3e58e4E7274D9dFFac0D3Cf35cE\",\n    \"revision\" : \"8c6sd216qfsm5wm4grosyges9cxabe8uieq2mug6rx0i5jb3tcph5ibgzadfariyegxogrq773uk9o8wm8ce2a2oqux01byq1t172squmyhtkh0cahqx5khnuxoskrnntz5ok9pnkytnz07jbgp0459mejel9ie4bwxdjqfdoba74kb40875gwxwwwvaqkb67114\"\n  }, {\n    \"service_sid\" : \"ISba6cDD1ead34d3Ad728AaB5D0561f8cc\",\n    \"date_updated\" : \"2023-08-23T07:51:06.998Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-07-12T17:15:50.998Z\",\n    \"account_sid\" : \"AC8fF73Ecf4ff2Df340d971DF17C6B306D\",\n    \"created_by\" : \"wkbvajt6cqrk9cemj107n8w67t8mtf9p926wplpn17akqb2j5xluwfkqhex27j1rh68pkyiyy1d9gb27kclxrsmdi340p0btdihtw21v3hsu7kzp9uzvgh44lcc5mpncte4o3ighp8f\",\n    \"key\" : \"rbosjsxff6fvgiukugy2ouv9044gcvhcmc0e4cfiwy87vansfwhcz0uhnh424rfstcuxxkg1d2skzfj18w383s2v3rxwborbm2eoeuc32c70nfbdvh235f7yt78u14\",\n    \"url\" : \"https://web.example.mocklab.io/035583\",\n    \"map_sid\" : \"MP0976D611CE9Fe0aC0062Bd97d8dC9BA7\",\n    \"revision\" : \"nrtudpqwnovg3owq2ok4av4qdmz592nwth6izwvny7q30shhayd1hu4guh3yt6kexfvm0bjd6\"\n  }, {\n    \"service_sid\" : \"ISeb6066D16B36dccdCd5E425A41aFD7bF\",\n    \"date_updated\" : \"2022-12-10T16:50:37.998Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-08-27T10:40:37.998Z\",\n    \"account_sid\" : \"ACa9B804B37f2C9c39ef5fCCBdB3bdDf8c\",\n    \"created_by\" : \"0y2hjylpntqhoc3b2zcwtdnyujr7jv5dgmtqib6vauksrma0qsi4eihd8n546zx10zzj8glf9u3svx6grjtqqs88dfdzn6s1jlwjqs4x5v580c1zit1xcr0edjrgo7try44y5br1ubbsuolwa6md8k\",\n    \"key\" : \"cr8ovb0fyav3hsmq\",\n    \"url\" : \"https://web.example.mocklab.io/331050\",\n    \"map_sid\" : \"MPdf3eeB4Ec7cFD0D947Af15980E921A25\",\n    \"revision\" : \"6bok\"\n  }, {\n    \"service_sid\" : \"IS0adEdb5B08fF96AdC27a2e9289EcC365\",\n    \"date_updated\" : \"2022-05-13T15:38:16.998Z\",\n    \"data\" : { },\n    \"date_created\" : \"2022-11-09T23:51:00.998Z\",\n    \"account_sid\" : \"AC28eE09021324aD073423e489Fb6F2BE6\",\n    \"created_by\" : \"le2zvxy52f9x6umayjg4llkyqxz9ueu2b3mvnvz0nlgde0k4q30lxjplhxnwujxbyu4bwat46nutkp8touwzggu7sqcaagsk9fnp5yyhhom9rf049fsu1wrxaw9lmphy5ngijfcczd1xgc7pwkrm9j8qjxy7pmegsyeeuydkxq6x7zopmdpvgddm0v0i1s16g42\",\n    \"key\" : \"ryps94ovhbopdkl8zwtxe6qtvqjuer7hx1r7f4x97cqdoiketbisycyx9mcgolplcpfiu18pzsvh91uru2q3phxxj0uolwgwr5ob6vluj0adkrz34ryrf6d0og4tuu85uf3fzjd01cw10fw5tnxwfp9zkxbdvc2hmjo68wewx0h\",\n    \"url\" : \"https://web.example.mocklab.io/903693\",\n    \"map_sid\" : \"MPbebAC2aAe8CB9A30A953B6E78c3fDdeC\",\n    \"revision\" : \"ftlqqs4sfbqy3zc5uemjzpd1fh3hhvamktpatrrerhmwtevtjy2vdxge2318gow3i556bd30\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a34a7fd-4291-3585-a735-3e2e87ff5961",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncSyncMapItem",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.sync_map.sync_map_item"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListSyncSyncMapItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "7ac95412-1df1-3926-ad01-e92a39fe8948",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS8566aE0b1920B8Bf4b7FD9ebEF8b9Ac4/Maps",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"ISbCf08eCa87BFc310ac6b5A4422580EEb\",\n  \"unique_name\" : \"Brain Muller\",\n  \"date_updated\" : \"2023-09-14T05:52:34.997Z\",\n  \"date_created\" : \"2023-11-28T19:19:17.997Z\",\n  \"account_sid\" : \"ACb1D04CeD4F1d61aADAbc19554Df87b4d\",\n  \"links\" : { },\n  \"created_by\" : \"rsvzdynm60zv3z1l0q60g5z6chhaus5ly202cpfdd23x1n6ki5u0a13fj3d37uwco50ru0la063ama\",\n  \"url\" : \"https://web.example.mocklab.io/290665\",\n  \"revision\" : \"832rz8rtsyecwuvbjol1hfcvwz0f8mrqv0vbbeeitbuf1dq28tqglxzu5h0u3mkgkfq2oae8luj7vmqgu7tm9gq0t2a6aj6jwsp7ibgfsrnqkfqstzof3qfde999t5c9y2a1q\",\n  \"sid\" : \"MPEE1aaC358ddbfeD9Be5fFDe8d9A0ba2D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ac95412-1df1-3926-ad01-e92a39fe8948",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSyncSyncMap",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MP[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "a8fe0706-af2a-3147-a59b-7263074ba853",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISe5deE65b79a72C3Dab5Bd2Df256B7aeC/Maps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"maps\" : [ {\n    \"service_sid\" : \"IS667f47ABfB06baE8EecEDcD39C9Eea3d\",\n    \"unique_name\" : \"Sandy Smith\",\n    \"date_updated\" : \"2024-01-20T17:50:11.995Z\",\n    \"date_created\" : \"2023-07-31T10:52:17.995Z\",\n    \"account_sid\" : \"AC491dfbF06c216ccDD0B31eD6B6254f82\",\n    \"links\" : { },\n    \"created_by\" : \"2p08bwvepmu50fadgeaetlcpbk12sq4ilk7iqwzuiiu8glqtzwjrxkel7qq0dz96qdxp1a4vznt9yaovjxadp6vg9xhxh16rl3x12m6mc8swya18c5678trbhk62\",\n    \"url\" : \"https://web.example.mocklab.io/721335\",\n    \"revision\" : \"tdio61g72f9ma7u1u2i5t4bh7nvew5ilqjlu9q8arr1651dfjudvw3q27ixe27alcf84u4bll1ajkuoriyqr09id103duc55h3s75jdehxhtvez4js1hg7jcvj0ksj9w384ugk2f\",\n    \"sid\" : \"MPD4b15EfcDCB5f1d16ca9f575f5C9EcC1\"\n  }, {\n    \"service_sid\" : \"IS9bb3ED8Fcdf3FfAfeF0a779CD3A9D6d1\",\n    \"unique_name\" : \"Theodore Runolfsdottir Sr.\",\n    \"date_updated\" : \"2023-11-03T19:27:49.996Z\",\n    \"date_created\" : \"2023-08-17T18:10:48.996Z\",\n    \"account_sid\" : \"AC7fDeA788daC0Bcef08e5abCC0E8408E4\",\n    \"links\" : { },\n    \"created_by\" : \"cwmmpjxz7d5qdsah9dafcxswfa2q1i2i5c3a43mgo57jc91h3ayadtq0yyk866j16ffkc96spae0sehj45gcolmiv41nmrfe3qirnxapkzp3it1qylmqyt334g7fml9rf0ls4ai2n88opbn6v7uba1r9fns8q5bcsyrjd2yb0lf8u8l\",\n    \"url\" : \"https://web.example.mocklab.io/480002\",\n    \"revision\" : \"1cxbotcf6hg96sblvjqn8xdul10xhpenx5hhuq2v33zjjpat2zaoyou41la\",\n    \"sid\" : \"MPE04C9CaC4D13fFDa2814affbeE1B61Bd\"\n  }, {\n    \"service_sid\" : \"IS556108f214366a2cc5d6d1e68CDDa08b\",\n    \"unique_name\" : \"Dana Ryan\",\n    \"date_updated\" : \"2023-12-22T18:57:43.996Z\",\n    \"date_created\" : \"2022-07-27T07:09:28.996Z\",\n    \"account_sid\" : \"ACD6EA33aaf59fe8EE2Ec5bE2bA0B20D7d\",\n    \"links\" : { },\n    \"created_by\" : \"mzb9ddsmuyh42a09z7ya5gd96sftba3oec353t9t3rcc0t6h8yb6ot59yqzx6mxdyy20tzhp6iip65147wghpryeon5cs3l354ref2kvwj83ldgdkhbsxy5u0hc82jotog4o0zjucuucau7564a4ubsyfm1f2tgoys3sikp7sb3p7z282vaqpdx9pkwsuar3o6hkw\",\n    \"url\" : \"https://web.example.mocklab.io/847858\",\n    \"revision\" : \"65nlfe3ydyqdvk2bboh17v86bapbfglrs6ev7d7fa73dkfazef88roe9kxyrgz04jpcgkwwt1gcrvnhiyv8q2y2pmcp3t6m7n23yys1fm4q6vx0q6e25wwdmutbe2kswnh5k84a3s2\",\n    \"sid\" : \"MP3B79a8E964963E3C73D9c9A6b23CB1e9\"\n  }, {\n    \"service_sid\" : \"IS2Ef713D55fB904FBc6bAF89E4D77Bbe2\",\n    \"unique_name\" : \"Manuela Torp V\",\n    \"date_updated\" : \"2022-07-04T11:40:00.996Z\",\n    \"date_created\" : \"2024-02-27T15:03:26.996Z\",\n    \"account_sid\" : \"AC41b5D5Fcf7678EE03A5aC7D070Eb061d\",\n    \"links\" : { },\n    \"created_by\" : \"vemq0fgmdm487yieigxpt8nakg065t7jntmv9e1f8qb0x05u2vc1nniphss77rnmd4l4mebk1r2iskuzqlgzcdnaj0ay4qu3k4687bt296bgwa5lxc7z6qntpbc8wcdv95k50aswbqzz2uxxxzqt3q6n45394n33nelh5x3awc2a40\",\n    \"url\" : \"https://web.example.mocklab.io/459130\",\n    \"revision\" : \"uvaqa97e1vx47mjob12ilutz6lfwc8rntvgpb5yaic466t7lj34vim6ablpnmh3jft8qmipxnt5lkchlteai06ibmav3p3kxahqnk6uo68akxadrccldzfoptcjpeygm03iyso7ehh\",\n    \"sid\" : \"MPc1CBaA76d9BFcD74EB86eD3bb2fCcaB1\"\n  }, {\n    \"service_sid\" : \"ISE50CF76C3C36B30F181bE03d52d3b89e\",\n    \"unique_name\" : \"Katharine Jenkins\",\n    \"date_updated\" : \"2022-10-12T14:05:03.996Z\",\n    \"date_created\" : \"2023-07-28T12:37:05.996Z\",\n    \"account_sid\" : \"AC62a4f90Dd6b9fF5D1cfEdE37dED9AeDE\",\n    \"links\" : { },\n    \"created_by\" : \"2zlxyogszkn8xzdifuxeuljfwurctt43b1uvc45jezqhppolhaoneo5c7a3aoqda952ol4hmsmwqr13pin3hwzxbgg1u4yf5mrhf0qxbwsfxl3b8esn7t4uutvpbxm1xcgo5t7hsbt1lfa31v18lbvt7v8re3ld0kq\",\n    \"url\" : \"https://web.example.mocklab.io/537673\",\n    \"revision\" : \"eaypuq7oekn5wm3y1sqpl1a1n07nv8whmiimoed1h4mw6erl98r883t6mas7nbmgxjxc5ajdguuex6\",\n    \"sid\" : \"MPfF8e0eff4C3fbAf9683Be02AD7CEdd4f\"\n  }, {\n    \"service_sid\" : \"ISE2a4E5fF8Cc358Da9b22b3F4A56C7B56\",\n    \"unique_name\" : \"Darryl Vandervort\",\n    \"date_updated\" : \"2023-06-04T13:59:51.996Z\",\n    \"date_created\" : \"2022-05-19T18:07:53.996Z\",\n    \"account_sid\" : \"ACcB29B947BeeFA538D66Ab259b321c46c\",\n    \"links\" : { },\n    \"created_by\" : \"180thga1umj2edyos235qvrv844xuejqnov8mghpm5zkqzfba9p1u35ro5in2bkl27luet37ztisi81i7t3ya38go1zdulrxyu5o7stwji54k4mpbfqexr9llktlfwszjscuaq17qc7pt4o2jjygdbifm5s891n6mj1c6q8g724ctyhryp2v44\",\n    \"url\" : \"https://web.example.mocklab.io/995817\",\n    \"revision\" : \"7m70stllxqfj7dphepbrgdq8zhxfnuzs8xtn5w5tdbngvoeu5hiu15t9li5wlm77bri7f56pprnjxh58xc64y1tu09mxcife9qa4z0knh1b79pz1aw04lwzuyjqeenbye6pdb1c7p5b2fovl4ihgww9ao3fr99se\",\n    \"sid\" : \"MP8e4BDdAC3E466fAcD6920B1CdcEFDAF3\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/564948\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/812275\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/472257\",\n    \"page\" : 646914046519482601,\n    \"key\" : \"69wr1rf8q8env6mnqwcarbchws61mzdoy11opmrns2g4sy22t1vc7689iqvtj7us0s3rha9yap4hlt1cwout4hlk564bqj4wh4vggp9yb0jhqw830\",\n    \"url\" : \"https://web.example.mocklab.io/114157\",\n    \"page_size\" : 9114632802498419024\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8fe0706-af2a-3147-a59b-7263074ba853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncSyncMap",
          "schema" : {
            "properties" : {
              "maps" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.sync_map"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListSyncSyncMapResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "02914b6c-d15d-3197-8525-c92b9e85526a",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISA50BEe2bDC1CAC0E5C2b4b8650fB0fdc/Lists/5229",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"IS9748B1C7937f078ECE15D08C33eF414F\",\n  \"unique_name\" : \"Rachell Weissnat\",\n  \"date_updated\" : \"2022-04-09T00:29:54.995Z\",\n  \"date_created\" : \"2022-07-23T13:21:37.995Z\",\n  \"account_sid\" : \"AC4605Eb7BFe31E13A2bdf637Ff82a1D6E\",\n  \"links\" : { },\n  \"created_by\" : \"36ttariut0be5aet18frn0dl24nbkkpbp9ezs8zvq5kmambrysjfhy92mmlg606z3c8fj89t4odplr13z388nc5n7qfv8mikasiaw2bp8s8oobtci44moszqoio7rqn4z0d07kyln5g2c7z0dk6d9k8xdmkw33fpwk347kur3r9sn47jqeak6m\",\n  \"url\" : \"https://web.example.mocklab.io/401260\",\n  \"revision\" : \"bveaib7etbxob1bn03fn0mhdoqsw7ofz\",\n  \"sid\" : \"EScB65B6AF900afeC5Dbc63dF94b7E170E\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02914b6c-d15d-3197-8525-c92b9e85526a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncSyncList",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "c8afbad2-7f5b-321e-80c7-d5d6e455460b",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/Sync/Services/ISA59BaE8Be5b6F9886322c1AaCBDD553a/Lists/aaxk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c8afbad2-7f5b-321e-80c7-d5d6e455460b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncSyncList"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "b3ceed64-3122-3d23-bf88-f00c24ad6bda",
    "name" : "Update an identity's access to a specific Sync List.",
    "request" : {
      "urlPath" : "/Sync/Services/ISF2Eef536F6213E7edaDccc303F138eD5/Lists/d2kp/Permissions/zuvhcza2i50moej487mnz7hkaso2mqhddhj24qe79jswig5ur54t2g3fxx6wejrl",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISDC49bdB6A2eC71BFcC1a9Ee65faaa010\",\n  \"read\" : true,\n  \"identity\" : \"2my4e8e29jhqgm55is2p8mo9afl62ue7dem96l71qo9wqfpuoyb\",\n  \"list_sid\" : \"ES1f30A4F2781859Dc06864edB86e53Ea4\",\n  \"account_sid\" : \"AC92aB6F5E80BB962Dd460daD5eFB39A7c\",\n  \"write\" : false,\n  \"url\" : \"https://web.example.mocklab.io/805183\",\n  \"manage\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3ceed64-3122-3d23-bf88-f00c24ad6bda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncSyncListPermission",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Twilio Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
                "nullable" : true,
                "type" : "string"
              },
              "list_sid" : {
                "description" : "The unique SID identifier of the Sync List to which the Permission applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "manage" : {
                "description" : "Boolean flag specifying whether the identity can delete the Sync List.",
                "nullable" : true,
                "type" : "boolean"
              },
              "read" : {
                "description" : "Boolean flag specifying whether the identity can read the Sync List and its Items.",
                "nullable" : true,
                "type" : "boolean"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Sync Service Instance.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Sync List Permission.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "write" : {
                "description" : "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "4e5d48d8-6679-3097-b0df-abedb3ecc099",
    "name" : "Fetch a specific Sync List Permission.",
    "request" : {
      "urlPath" : "/Sync/Services/IS5e18eF8F7df68C16Fe55a8B4A7ED0ad8/Lists/7216/Permissions/lqh3i9qufgvili2o5crxm6vg7kh47ayaaq734rlheb1o4eydn2orrf74l05csyhxyhxkqdjgo2kk82qf990oezo4kk8skx6071rukzs5luxye1l0yu6goxd8oyj",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISFE29AdF77f8F0d14B45fe630fC213ABb\",\n  \"read\" : true,\n  \"identity\" : \"1od7skhb8o39hxzxio8q2g6ff\",\n  \"list_sid\" : \"ESAc368AC9cc0ec0aB0AB0f3854ceE70a2\",\n  \"account_sid\" : \"AC60fb41BAaFBb801dD75De0335ddc3dEC\",\n  \"write\" : false,\n  \"url\" : \"https://web.example.mocklab.io/591240\",\n  \"manage\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e5d48d8-6679-3097-b0df-abedb3ecc099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncSyncListPermission",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Twilio Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
                "nullable" : true,
                "type" : "string"
              },
              "list_sid" : {
                "description" : "The unique SID identifier of the Sync List to which the Permission applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "manage" : {
                "description" : "Boolean flag specifying whether the identity can delete the Sync List.",
                "nullable" : true,
                "type" : "boolean"
              },
              "read" : {
                "description" : "Boolean flag specifying whether the identity can read the Sync List and its Items.",
                "nullable" : true,
                "type" : "boolean"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Sync Service Instance.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Sync List Permission.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "write" : {
                "description" : "Boolean flag specifying whether the identity can create, update and delete Items of the Sync List.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "990aaaa3-e584-315f-85c1-d9d426ca0552",
    "name" : "Delete a specific Sync List Permission. - 204",
    "request" : {
      "urlPath" : "/Sync/Services/IS8C1d316f19b9cbDE81bEDE7D9e1ccD3a/Lists/55p4/Permissions/4sx0nf6uzf11lnoxtqqgwbcexw62uvyv3ff0ns1j019mey668o7nw9cm0y7j1zzlf1947nqkm0uv8dah6rupgjnpamn32mw2zqt4eqhl",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "990aaaa3-e584-315f-85c1-d9d426ca0552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncSyncListPermission"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "120b653e-dd0a-3507-8488-8cbb243f7133",
    "name" : "Retrieve a list of all Permissions applying to a Sync List.",
    "request" : {
      "urlPath" : "/Sync/Services/IS14ACf056141AdE5Be21Bb3aCABDe31d7/Lists/ix04/Permissions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/302627\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/552115\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/492392\",\n    \"page\" : 8021011417663442785,\n    \"key\" : \"rbwgntrh81nvwyz4ne3mls9yen3b3yooj7ns4ryxn9tlqrvyj2y0b4zdyd5prn38dspqn73qdepe02bek0iju114g2l59ybxpgw6qd3r7342ql1gpwxe22blrh0jk3hh45kho69hkmi58wjvzihlyv\",\n    \"url\" : \"https://web.example.mocklab.io/927232\",\n    \"page_size\" : 4898340469787988335\n  },\n  \"permissions\" : [ {\n    \"service_sid\" : \"ISa4fd2fF3Ee74BB6CeFbDEE371Fdd453E\",\n    \"read\" : false,\n    \"identity\" : \"wv5cxaugmsyjs0kbjnsluty73xckbla6ak9a45pklc422lh6d9xsada7s2yh1wzl1b9o6b8kt4s15u7mm02h7os3hfkf5pu79jv4k22yvpej3p5zq5hum8vttdjbrakfa2tbtljdf3eiu8f347k8iygt9uhsvpg1fsw1w0cq41z4kda0t6hajba5hi\",\n    \"list_sid\" : \"ESfcCf67E8DEDFAc2D7eE6C7835CA690BE\",\n    \"account_sid\" : \"ACB325D6D5721fFDb9E96FBb5FdB6d1714\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/179764\",\n    \"manage\" : true\n  }, {\n    \"service_sid\" : \"IS9f6430D3Fe330cfe7dDf8A9e439aA0ac\",\n    \"read\" : false,\n    \"identity\" : \"7mlbvzw8ouryldhyt5c64dleeuxll3wu2icij4314dbscq8pbvzm2725fg7y06jj7bsk00yi3zjfw8jdpa583aw6t8003vfrn0gmaf00d02ivtyyflpz72vt1kl1u5xi56prdsuljliavtxgac7ciifmqadx0q2cqnf8d82jt5c7pygny\",\n    \"list_sid\" : \"EScF3f6D3ff2AE2c4ed88Be254E48d99cc\",\n    \"account_sid\" : \"ACDD3ebeaAB3BBFfCbE82b0fABAECc5Ce5\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/671709\",\n    \"manage\" : false\n  }, {\n    \"service_sid\" : \"IS8C1a6fe2E9d0CFDDDb7dB09aEBADa669\",\n    \"read\" : false,\n    \"identity\" : \"6dt5yiramnk5gaw0xklbp9dhbfqzo6z8t\",\n    \"list_sid\" : \"ESd4f530f747A1ADE1DC3E9BBFcDDaEFC6\",\n    \"account_sid\" : \"ACdED86d89dCCFC938d3E9dC9cf96fE5bF\",\n    \"write\" : true,\n    \"url\" : \"https://web.example.mocklab.io/135848\",\n    \"manage\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "120b653e-dd0a-3507-8488-8cbb243f7133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncSyncListPermission",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "permissions" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.sync_list.sync_list_permission"
                },
                "type" : "array"
              }
            },
            "title" : "ListSyncSyncListPermissionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "a2dd5cf9-f226-3f8a-862c-1455564cd6bd",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISDa1A73CA04eDBBbD83BCdFbFA3eBed8F/Lists/q5z2/Items/3488751377779202987",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISaCD604bE3c8Cfea93CCeB970e9Df2aA7\",\n  \"date_updated\" : \"2023-10-10T20:51:19.993Z\",\n  \"data\" : { },\n  \"date_created\" : \"2023-10-08T04:58:40.993Z\",\n  \"list_sid\" : \"ESa65Bf691D8d3F17ebFfb0D7B6C72cDEb\",\n  \"account_sid\" : \"AC2CABa3eC3Fd7251fA52CDc055f3e7419\",\n  \"index\" : 6658406795696898094,\n  \"created_by\" : \"8o8pqtxehswmhrlsqnzbcsglhu06g2wft27dzrwb5wz9efxd78vw4aa1k2blprqvcb50t9b3okmng1mlxy0pdloiffnymqgxpv5hgmza2kkss3ui3p1vq6ckc3cgy4yksikgzbwc3d202hjmtl21ds7zzlvgukoma85q78qkr\",\n  \"url\" : \"https://web.example.mocklab.io/987336\",\n  \"revision\" : \"6larvbqvl2p3xr3vz20jljseq4ljiykvlcsdtwtuud5e63d991\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2dd5cf9-f226-3f8a-862c-1455564cd6bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncSyncListItem",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "index" : {
                "nullable" : true,
                "type" : "integer"
              },
              "list_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "1f668445-fb7f-30a1-93f1-f07fb8662f2c",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISaDCAa30AeEC84CDCF0aEB0CabE14d8d4/Lists/783v/Items/1768570091121608420",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"IS647A6CE0073B198CE3b14c4BEcAB0fA5\",\n  \"date_updated\" : \"2023-04-08T17:27:10.993Z\",\n  \"data\" : { },\n  \"date_created\" : \"2023-07-04T22:53:16.993Z\",\n  \"list_sid\" : \"ESdDA3983878bd07DDD0DdBE74B6DaF9B4\",\n  \"account_sid\" : \"AC8BAa2CfF0abc07c4ec464e6B9EDA6CeE\",\n  \"index\" : 7370848441804536669,\n  \"created_by\" : \"shmv14dlwhoc5h783653xcv3gkvcsszxxaypx0v\",\n  \"url\" : \"https://web.example.mocklab.io/965005\",\n  \"revision\" : \"pezrht4lcqbpm5rhfzbgibssdrc76fcjjr9zysf6foqze36i0nedi4pjep2c7f3z83dc18ntjn07xnu7391jfk576iy0u7atmc1e4pg68jm55sxmx1ug4ihve33\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f668445-fb7f-30a1-93f1-f07fb8662f2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncSyncListItem",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "index" : {
                "nullable" : true,
                "type" : "integer"
              },
              "list_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "38e1ed82-0615-3272-aa09-ca6f55d1ad51",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/Sync/Services/ISe7a00d4e8abed6FeB3D7C06AD63aAEAC/Lists/55fo/Items/4289851777781249596",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "38e1ed82-0615-3272-aa09-ca6f55d1ad51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncSyncListItem"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "a2657355-0b1f-3e92-b2f9-dd3cad47db1d",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISCB40CB7f99D27aecD89672E88dA67b9a/Lists/j70g/Items",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"IS3e6b5dA80E4B7FEb190cA8C6fb6524d5\",\n  \"date_updated\" : \"2022-12-06T08:00:57.993Z\",\n  \"data\" : { },\n  \"date_created\" : \"2022-06-08T03:59:00.993Z\",\n  \"list_sid\" : \"ES66D5d82C0fCf80d4eB9431bd5fEA0e34\",\n  \"account_sid\" : \"ACAAC981954E011fb7779dD9C70AFFfb1B\",\n  \"index\" : 2103640839856748793,\n  \"created_by\" : \"jct9vvd21ipbwjlv9dgf50rwk0iququ74nb1lf1nxref8svwsxkvpbjmuo589kwpddwdsbhr3njgquhasxt9ghgxgkmprj0nakmp8n1d2qe3u1x334kwahco9y2ia\",\n  \"url\" : \"https://web.example.mocklab.io/428544\",\n  \"revision\" : \"qhtqzb66oyjzcy16yxfa9t90rwykaeocdtdsmn7sx1p3t7p1ucufh03exhfegb8mksw2gxml97yte2gbv0tkbtt2la1c9ljntl8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2657355-0b1f-3e92-b2f9-dd3cad47db1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSyncSyncListItem",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "index" : {
                "nullable" : true,
                "type" : "integer"
              },
              "list_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "40f18c17-636a-300f-8bf1-9a517947f94b",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS02e7Bfc3e0bA33bBC558682A6b3c3cf1/Lists/0w5q/Items",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/611664\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/030595\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/188407\",\n    \"page\" : 7132770365117390605,\n    \"key\" : \"6u7u743rdpj4ro9rl4moxh628ia94sfd9sw0r5af9z29405yr0voncdgcfwbfuo3wizurtzfeh\",\n    \"url\" : \"https://web.example.mocklab.io/231352\",\n    \"page_size\" : 9087044025822350129\n  },\n  \"items\" : [ {\n    \"service_sid\" : \"IS5b672b65D478B67fE598E1dD636C4eb2\",\n    \"date_updated\" : \"2023-03-22T20:01:31.992Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-02-24T00:11:25.992Z\",\n    \"list_sid\" : \"ESb3bFF6C7E7dEa8f5a9BBab0a5f3A55f5\",\n    \"account_sid\" : \"AC2fCe3044Da9Dc14baDC789f681DbbaD7\",\n    \"index\" : 7474536857446118609,\n    \"created_by\" : \"1fsrczrcennnipizhl5hmfsgikltd\",\n    \"url\" : \"https://web.example.mocklab.io/521592\",\n    \"revision\" : \"vmnz5bafe73ixglvky66825qskvjdb9ecbo3k61cmps4ngwbldiqiao7ih1upgbbemoneoh20bk8xv299eb8uvnrpo9sf7x3gwn3w67xk5dd07nczzh3z955jp38js92cxxohevkua2bvf65dds19p7quo4km8de05y81ugoi3rxeckoxzkt9yh241f3n218mkuolh\"\n  }, {\n    \"service_sid\" : \"ISC89e0D415A40ffAa2ADAd9A8C0508e7a\",\n    \"date_updated\" : \"2023-05-16T08:03:05.992Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-02-27T12:46:55.992Z\",\n    \"list_sid\" : \"ES4D67A9d2Fd07F4e5C5cFE8bA36695BC9\",\n    \"account_sid\" : \"ACBFB7f46E2df7519e391e8AB7BebB10b8\",\n    \"index\" : 7931051002167743199,\n    \"created_by\" : \"3wtdhq9hf7sul233ek3gozwsoig8vkbe3ce7ribjc8l3hstlmlxkbx9v3lcf248p4v6z5qcras52415qtuev8v3l60oz7dz9ajubrc9tf0nv9e1yzi36vdskp81jojleq9kd4kyl9uf7676lkjrwj0uqpl6r\",\n    \"url\" : \"https://web.example.mocklab.io/250642\",\n    \"revision\" : \"j6ul92kgxbge9vtyjtv58n7wumgjg3qg93kj2zrkmi166rwfq3uqdw\"\n  }, {\n    \"service_sid\" : \"ISD32190ac8FedBBbb52E22aF7ADebad0D\",\n    \"date_updated\" : \"2024-01-07T11:56:32.992Z\",\n    \"data\" : { },\n    \"date_created\" : \"2022-08-04T21:57:57.992Z\",\n    \"list_sid\" : \"ESA313cec1d9be2dFDF1FcfEC65b5e2Cd5\",\n    \"account_sid\" : \"AC008eAF9cA203ffDd8dFa932c0dEe34cc\",\n    \"index\" : 607843389132821250,\n    \"created_by\" : \"7y0kwdxpbcvaayfyuljxeer33u26glb7b5bg5s2pact53pekggvvgna0lobxjogooxlt9vvo0cg9p4e23et4jpvep5hkoock1pj\",\n    \"url\" : \"https://web.example.mocklab.io/723025\",\n    \"revision\" : \"iazfbgzjcs022zwksxpbuqpi93xpvkuox7cegj4qxs49ahd4as8h92x48hmfju17joa8m9kkrxykjlav15mfv933djjjvlysbb275rwll939jz8ms2gt07a7kkhvkwqa32q8ifggqqex98j8lh4mxxcut22xpzpddqoggov6f9\"\n  }, {\n    \"service_sid\" : \"ISc8A4f633544aDF539BBaA5F6220d2329\",\n    \"date_updated\" : \"2023-09-11T01:57:51.992Z\",\n    \"data\" : { },\n    \"date_created\" : \"2024-02-14T13:42:26.992Z\",\n    \"list_sid\" : \"EScF9dd6DCCEd26EF0dCd5AD5ECDB75411\",\n    \"account_sid\" : \"AC9a3f8b5a3CAB2b244DFD2d313D9Ace6f\",\n    \"index\" : 8885283897212575183,\n    \"created_by\" : \"rgo6fw5rwyvp28h63opmnp5q1c1il4pryo2afbdmnqzplq3uypa5ar6gqab5yvi564w3nibnb00n1i5ok8dqkjj94f486w28srpqrd8iraujvr7knpnykypefnke21ffwfjh4wwqqs5qa5gzi8eaybvejej55223qaul1k\",\n    \"url\" : \"https://web.example.mocklab.io/259132\",\n    \"revision\" : \"26dz4d8kv0sr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40f18c17-636a-300f-8bf1-9a517947f94b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncSyncListItem",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.sync_list.sync_list_item"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListSyncSyncListItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "7ef76c5a-e166-369c-a061-96408da4d5f8",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS1C1aEfF8c69755cDb19e9F13bcaB4301/Lists",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"ISc7e5Fcb4dd6d1b4bB0a9857edbc6Eca4\",\n  \"unique_name\" : \"Gilma Nitzsche\",\n  \"date_updated\" : \"2022-06-09T05:09:30.991Z\",\n  \"date_created\" : \"2023-09-06T14:57:37.991Z\",\n  \"account_sid\" : \"ACFCA958a88C62AFdCfe6d5Fe2fAEE329f\",\n  \"links\" : { },\n  \"created_by\" : \"xbfj0hhrqatm69ev49nehzxsk36rci82\",\n  \"url\" : \"https://web.example.mocklab.io/056908\",\n  \"revision\" : \"yvmg8cnj3elpz42wsmehwyl4cdpxf1uo\",\n  \"sid\" : \"ES587Bae1aCB8eA98d223ddBe32893Be38\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ef76c5a-e166-369c-a061-96408da4d5f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSyncSyncList",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ES[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "d3bbbe56-dac4-3773-b05a-451317369866",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISBFfeB8997C71acEDfcFCAbE07D7b15A0/Lists",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lists\" : [ {\n    \"service_sid\" : \"ISEdA7A1Af0161Ed5EFbFbce8493ec0655\",\n    \"unique_name\" : \"Gertrudis Thompson DVM\",\n    \"date_updated\" : \"2023-05-11T04:20:08.99Z\",\n    \"date_created\" : \"2022-05-30T17:03:02.99Z\",\n    \"account_sid\" : \"ACeEd4Ca98aFaF6E33dAA79deEfC6A73ad\",\n    \"links\" : { },\n    \"created_by\" : \"kvsn7bj2g7latvnhm436yw7ujc7oycj4wao14vkpa7pyc4v6hauvfjqlcurxcils7xs22u5dp0p5vp8ixw6x\",\n    \"url\" : \"https://web.example.mocklab.io/376624\",\n    \"revision\" : \"ahq3vloq4dlm4mhwgmzln2oyxqlv7ntmt85xbsh9w7gqdz6cqf2c65e1fud7\",\n    \"sid\" : \"ES101790EAf175bd7dA8ec04E96AEa668B\"\n  }, {\n    \"service_sid\" : \"IScAc8Fed1DCCca1f8AEbCE0d0FA05767C\",\n    \"unique_name\" : \"Gene Mayert\",\n    \"date_updated\" : \"2023-07-16T20:24:52.99Z\",\n    \"date_created\" : \"2022-07-20T22:37:41.99Z\",\n    \"account_sid\" : \"AC7d7BdD624dcacBa64Ef53ff8C41cF01d\",\n    \"links\" : { },\n    \"created_by\" : \"notv3zuspexgx7vu8wxc2gqpd3kgmj7ffbvmlxh4jcdlk6nnbusmh29e5ww302r1yex463\",\n    \"url\" : \"https://web.example.mocklab.io/927847\",\n    \"revision\" : \"qi3m8oyk0wbbsutwter7hq5ra8yv8utgkic8tq2td140mhx26wwxc77kg660r1k79xeq4vbvqe0e2kaeoq81sl34h6qkjnflpc6158rfc7y2ixwsg2d4raenkpr0jztsd23tokgna1n4ke7cxwklu46pam90cai6hzqdgp5cgzbqasnyzi81pgtz6\",\n    \"sid\" : \"ES48A96E5C9FC2c5f6a629abd2AeE362E9\"\n  }, {\n    \"service_sid\" : \"ISC1aBaCbacEfb6eE60a6E010C1Fe276F2\",\n    \"unique_name\" : \"Arvilla Witting IV\",\n    \"date_updated\" : \"2022-06-25T09:24:28.99Z\",\n    \"date_created\" : \"2022-05-26T22:10:21.99Z\",\n    \"account_sid\" : \"ACbF9Cf2217fbee888E886b6CC23bE50c1\",\n    \"links\" : { },\n    \"created_by\" : \"usdql0y4yfuhvebq71v2nhxkz45pr5g02pqy4q8xk6i4s7h65rfwkwzgj7ll2905e2630t1qzpeqi04axb4q3ekrmc319y66ad92o7izqh3y6znjvkefxoykwkvzrxw9qxsbp7ut7mgt8t0auiqomyqbluutdgwgrvily0vexy9vvvteg67g5k0sl6bf207qr\",\n    \"url\" : \"https://web.example.mocklab.io/170534\",\n    \"revision\" : \"5nhtvrmtu7w2x2xtp3wekkbkp66v0qoextlftijgukvnd27ex45iuph5738c14z2yyo3jlgsiapg4cqab7\",\n    \"sid\" : \"ES8f0CD11fFD7d9223B8Fc3137Ae3b8dC0\"\n  }, {\n    \"service_sid\" : \"IS103eBb27FEa04aAb2D0EAECA1c1e8757\",\n    \"unique_name\" : \"Barry Rutherford\",\n    \"date_updated\" : \"2023-09-18T21:23:21.99Z\",\n    \"date_created\" : \"2023-06-11T11:10:18.99Z\",\n    \"account_sid\" : \"ACa9cC5A6e1a5b0D1aBaFb6bdbFa8e4BE9\",\n    \"links\" : { },\n    \"created_by\" : \"k98zmfv06qpfo860cp3s7wc8z7xtekw4621runm6x7exdj0bfhkoygug60sng6kpwny763o4ttsnavyatnv0n9qdxszqwcq8ub1hpv2enggtzfdaqm6995vcr6xzvtm26ihyb3r7rv2agh02pzrr8qdvlv7mjxhtiaxa\",\n    \"url\" : \"https://web.example.mocklab.io/939554\",\n    \"revision\" : \"bia1g5\",\n    \"sid\" : \"ES7a050D7678dC2819e133F5e4f050D9cD\"\n  }, {\n    \"service_sid\" : \"IS2cBe59f9FB82690B8B452B8a5aFece75\",\n    \"unique_name\" : \"Timmy Bailey\",\n    \"date_updated\" : \"2023-03-17T17:29:27.99Z\",\n    \"date_created\" : \"2022-04-04T23:23:54.99Z\",\n    \"account_sid\" : \"ACc22dDF78accbA21fBc577309DdB473BF\",\n    \"links\" : { },\n    \"created_by\" : \"i8hbkxiccph70pnz3gl6wqdm0ak0nqfkf2ohsbxnzzkb6zm6qh6mzv7ba8uqlihkoyc1oxzy8fa69utznkvaeetxzn9b3h2aq77u6y3dva3rfqrk33pt4zsm4655iajr1p0gpw1ww\",\n    \"url\" : \"https://web.example.mocklab.io/565112\",\n    \"revision\" : \"x1pwnd4v8b6g9ck8pjmfjykocnicwwsa802kvyl1pvreaitwzjcj1yi1rcvjx4kxvmby7k5uov5r8svfxcdkk3p3ak4n4fri3v1f2m9uo8m8mw9vtfi6ki63djhy6sx28wp2cw4uuud5b0zjn3tct45o3sae\",\n    \"sid\" : \"ESDAFEA9a3560F2CEBacBEdffB42D00c6b\"\n  }, {\n    \"service_sid\" : \"ISCB69EbFD0db9aC237d3f63c51F6ccbEA\",\n    \"unique_name\" : \"Dr. Christine Lesch\",\n    \"date_updated\" : \"2022-09-30T01:11:40.99Z\",\n    \"date_created\" : \"2022-04-17T16:11:35.99Z\",\n    \"account_sid\" : \"ACecdB26E6F44453cD2F8dc2B4FBe0ebCd\",\n    \"links\" : { },\n    \"created_by\" : \"z2sztnnj9huoqisp6bwmek71h0jzqhf7pw6hhnyxv7lpc5atikyxq9vn17nf0fm1ed5j6x7sb06pnuvzjloit5i41wz9uk6g50m4kg2lwl2a1hvrz39b6wix833twqbv7m4fuwjvieo20uvxdm9xrmia73pbl4euyzk155uzqfxepapaey9h2f9x\",\n    \"url\" : \"https://web.example.mocklab.io/829086\",\n    \"revision\" : \"gs9c8ic6wwwd618u9d09oe17jeflvhneda9bfj4zzt6vd64o017oosccbli7tjyt350zp5les2o\",\n    \"sid\" : \"ESe2ebceB2a20b14d0f560b55e51a80e57\"\n  }, {\n    \"service_sid\" : \"ISeBab2D4dCC07101facC160eceA22Ff90\",\n    \"unique_name\" : \"Kellie Weimann\",\n    \"date_updated\" : \"2023-03-26T14:34:15.99Z\",\n    \"date_created\" : \"2022-06-13T22:39:21.99Z\",\n    \"account_sid\" : \"AC7ab0E7DAeDee3DfdCcCC9aeDadDbBA8e\",\n    \"links\" : { },\n    \"created_by\" : \"xxmap3ncln11p2tttmfdrg51zhf3s6dqcxpzo1hbqex8gmw1mklzl80qfrm1ftxvc1a33ayri5wlgmhno4ut9731spxzkme3wh9g4ihjmpu5cpu2q97vt4bfr5uqztwn21\",\n    \"url\" : \"https://web.example.mocklab.io/779365\",\n    \"revision\" : \"t6rh88rjub48lkw1r1chqshqv6epi74p4yttd9zsgq8l6atxozkxilfuyle2wo1gk0gpdysvttqxffzgctzbwqn1xsndmz0g9j4fphkk7fnu5d9y\",\n    \"sid\" : \"ES70C87ffBe2FB76DF5CC3BbE59E0FFEd5\"\n  }, {\n    \"service_sid\" : \"IS9BD0C96cEc316f3D04e6D7C89B7a3CD7\",\n    \"unique_name\" : \"Ms. Cordia Wolf\",\n    \"date_updated\" : \"2024-01-02T15:01:54.991Z\",\n    \"date_created\" : \"2023-08-21T16:28:09.991Z\",\n    \"account_sid\" : \"ACF58DeACA26A8CD26b7cd6b9222074eD4\",\n    \"links\" : { },\n    \"created_by\" : \"w3yc7axsacqrtgoyh6agi647d634yfndcihawdi3oo3q8l9orgdj4g0c6k86zu6z5a8id25fsmd0w6nl56lmf22gmi0ioatyfa4l5m8w6xwmsw7nhthakdfj3w3f3xr92m8v9242m5dji1p4gvua5ij10syepyuo6zszcsh6gfmsauh22oiwm\",\n    \"url\" : \"https://web.example.mocklab.io/137467\",\n    \"revision\" : \"a2jxitw9odr89d66awie5uk3wqjogo8xqoaua5c225cgaa927a9olc9x2qnds4zqivitsfjd5znkqid563b5gi47a6m4gk0tdyi6emizv60ypwl0he8zz7cpgamn1ts5qf41yu9f9f07hgazp04wujnh39az\",\n    \"sid\" : \"ESEE486a400484d4b44a5DB746EbFf5Fa5\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/335929\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/411989\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/568637\",\n    \"page\" : 3649304762527078809,\n    \"key\" : \"rlyisz9moe7yotc3tos0lu8xf9tnw4q3nyx70bxs40339mw520ryje4l3ec2ldw1pqdf\",\n    \"url\" : \"https://web.example.mocklab.io/776177\",\n    \"page_size\" : 893647165406979661\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3bbbe56-dac4-3773-b05a-451317369866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncSyncList",
          "schema" : {
            "properties" : {
              "lists" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.sync_list"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListSyncSyncListResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "00529601-6298-30d7-a583-20246e03edf7",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/ISBb9efE4B63dE48Eb2EdC7E285E2faefc/Documents/5b5l",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISFDa9D6beb24BFbfBcaf3EAc1ECF04Fcb\",\n  \"unique_name\" : \"Rosie Gerlach\",\n  \"date_updated\" : \"2022-10-28T00:45:35.989Z\",\n  \"data\" : { },\n  \"date_created\" : \"2024-02-13T09:20:26.989Z\",\n  \"account_sid\" : \"AC928e6A0f319BfCCc006cD1edeedb947a\",\n  \"links\" : { },\n  \"created_by\" : \"je8hc4wf6819dee4scu6b91uylpn723fdz2n73bi05ozl8u1u2mbmyrx1eu2grwqvw5ooyimhc4pkt0huv4sh38z47ir22cyf2o7n8ef7vm6x30eeesn0y0ozv2u0blaocnd7s31stovlgeexcnu\",\n  \"url\" : \"https://web.example.mocklab.io/103141\",\n  \"revision\" : \"3m3immi4hj4d5rqu5scq0jjea4gty5y3b3lsdxkjzjyxc\",\n  \"sid\" : \"ETfCBDA8AE265469a9D0E0fCf7a2deEC6f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00529601-6298-30d7-a583-20246e03edf7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncDocument",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ET[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "e6ee2b78-38d9-3df3-ac33-c7d7e2760d82",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS4D89eAB4604b5e462EFB3be64F6e22Dd/Documents/xx9j",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"IS5Cafec8d039c98494E74BB3E524c3658\",\n  \"unique_name\" : \"Devona Douglas\",\n  \"date_updated\" : \"2023-02-27T18:53:16.989Z\",\n  \"data\" : { },\n  \"date_created\" : \"2023-06-24T06:28:42.989Z\",\n  \"account_sid\" : \"ACFb89F6A647e0FE73FfA4d8aA9eBF8AE5\",\n  \"links\" : { },\n  \"created_by\" : \"ukh9ra5ryzq49a9zgxj9dq6h7gc2fbpk4h6490rn5wtyb6oto355b3khzf7toiyuo7qycsxbwaj37tp4kwc3vjovlta288fr55wc7kc4xdlmgxr08c6rptncqnifzzf8cjf66erhwnhmi8iuvao0e3smxpzi5ijw9e14\",\n  \"url\" : \"https://web.example.mocklab.io/847550\",\n  \"revision\" : \"zry0qz8pit\",\n  \"sid\" : \"ETA4F285F3F0cA6Ee661F1ee10dE79bBd6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6ee2b78-38d9-3df3-ac33-c7d7e2760d82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncDocument",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ET[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "38d3923e-dba1-3f10-8a74-d4ffd83050f5",
    "name" : " - 204",
    "request" : {
      "urlPath" : "/Sync/Services/IS86EC22E3E2758ca94Ce2DD49De555dcf/Documents/6muu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "38d3923e-dba1-3f10-8a74-d4ffd83050f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncDocument"
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "07a6177a-d808-36e5-bbb8-96d55b0761f5",
    "name" : "Update an identity's access to a specific Sync Document.",
    "request" : {
      "urlPath" : "/Sync/Services/ISFB62BC4AB4FAB29aE887E27F2B715768/Documents/x3pd/Permissions/q9pu8r57emandwxlqbs3ropib0p9cnc508708t5zyjco90hjbhg53ndcpmngj47mp7wqpqzf2vm08mwzpvwpmaex4ke92tu3xxxa74n159op4o56r99xkph1kj4nt0idfj8myxg4wqmkbpsfqmbr9kk4j3j183em8kivrrqwzh4prcaq6y6c2nja7f82f8io72b9",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"ISa4a84d8249A6E92c8EdFfB33eABBB618\",\n  \"read\" : false,\n  \"identity\" : \"bsbabl303lxrewoenk8aejhfhpovmh1bmx7m2xpt6yut58zhnhojia4y3f7mw3gjh74p77q9h1gyypuzl5ql189p4kiy2addeq62hzz0odgaemv5j40mzd0c2l57k9tga91x53k5zc71ggwu5m6zh\",\n  \"account_sid\" : \"AC7cF82A9B303b85ddd099Dc52504AfcD7\",\n  \"write\" : true,\n  \"url\" : \"https://web.example.mocklab.io/964276\",\n  \"document_sid\" : \"ET4fB284EDa27e5E5894CAfb29DdfF3fCA\",\n  \"manage\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07a6177a-d808-36e5-bbb8-96d55b0761f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSyncDocumentPermission",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Twilio Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "document_sid" : {
                "description" : "The unique SID identifier of the Sync Document to which the Permission applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ET[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
                "nullable" : true,
                "type" : "string"
              },
              "manage" : {
                "description" : "Boolean flag specifying whether the identity can delete the Sync Document.",
                "nullable" : true,
                "type" : "boolean"
              },
              "read" : {
                "description" : "Boolean flag specifying whether the identity can read the Sync Document.",
                "nullable" : true,
                "type" : "boolean"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Sync Service Instance.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Sync Document Permission.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "write" : {
                "description" : "Boolean flag specifying whether the identity can update the Sync Document.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "d977e63c-eae3-3313-bb94-aa86370e80d4",
    "name" : "Fetch a specific Sync Document Permission.",
    "request" : {
      "urlPath" : "/Sync/Services/ISCd73acFDa27CAB830195fB0b0d598add/Documents/4512/Permissions/dncwczqrquv5rjodaub1y4rwyt49bu4g",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"service_sid\" : \"IS5232b5FaF3ad4aFE28fFe356Acfc22A4\",\n  \"read\" : false,\n  \"identity\" : \"qjx6ptue2rqmiijza4w45hut4w6nq0c6q8ajb19p2q2kdm5uxf1tye8d702b7weo821x0cqfx0n7azfnbxyskpllnc2lu\",\n  \"account_sid\" : \"ACaE6a14dBEaE18Fd5CcfF6dEee14aE5Ca\",\n  \"write\" : true,\n  \"url\" : \"https://web.example.mocklab.io/834995\",\n  \"document_sid\" : \"ET91d97B40cCc7E09f08B5F9b5c5Aea50D\",\n  \"manage\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d977e63c-eae3-3313-bb94-aa86370e80d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchSyncDocumentPermission",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique SID identifier of the Twilio Account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "document_sid" : {
                "description" : "The unique SID identifier of the Sync Document to which the Permission applies.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ET[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "identity" : {
                "description" : "Arbitrary string identifier representing a human user associated with an FPA token, assigned by the developer.",
                "nullable" : true,
                "type" : "string"
              },
              "manage" : {
                "description" : "Boolean flag specifying whether the identity can delete the Sync Document.",
                "nullable" : true,
                "type" : "boolean"
              },
              "read" : {
                "description" : "Boolean flag specifying whether the identity can read the Sync Document.",
                "nullable" : true,
                "type" : "boolean"
              },
              "service_sid" : {
                "description" : "The unique SID identifier of the Sync Service Instance.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Sync Document Permission.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "write" : {
                "description" : "Boolean flag specifying whether the identity can update the Sync Document.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "1beec576-3ad7-3d2c-a6fe-67cb02c700ee",
    "name" : "Delete a specific Sync Document Permission. - 204",
    "request" : {
      "urlPath" : "/Sync/Services/IS965635BD36Afb5BEfEdAD66B5Ec79940/Documents/4ys1/Permissions/wqwhx2v3tq2rqpbkl4k4iq9nisvih8h7g07se6nq78xw6f8401zhyzvrbne1sqhy6wzueytwwpqdlak3q0u5mah35a6qofm6508k82cfos",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1beec576-3ad7-3d2c-a6fe-67cb02c700ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSyncDocumentPermission"
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "68586b3a-4fa2-3639-b8d0-3c21e367bfbb",
    "name" : "Retrieve a list of all Permissions applying to a Sync Document.",
    "request" : {
      "urlPath" : "/Sync/Services/IS3932ca5bA2ecEfeE551BDddEc74F2930/Documents/anc0/Permissions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/702762\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/142734\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/983626\",\n    \"page\" : 1486733664609080795,\n    \"key\" : \"zf3vj7uma34rpljpagyp04k3qk90dym53p99lhupd5c855dbhia3zz3umxo5klx36rcwinc9bjpf6fbr8wcstljlrxbyfb2uagfk02ey8hz8468i\",\n    \"url\" : \"https://web.example.mocklab.io/744163\",\n    \"page_size\" : 351964243554297288\n  },\n  \"permissions\" : [ {\n    \"service_sid\" : \"ISe2Ac6FF1dA9aAfAfAEcA0eEaFc715d6A\",\n    \"read\" : false,\n    \"identity\" : \"jnmn9evjff2y\",\n    \"account_sid\" : \"ACD34355967bC35bE17ADf3BFb74e2c284\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/820444\",\n    \"document_sid\" : \"ETEEd7Fac2485fDE2F66d9a1Be23506cCd\",\n    \"manage\" : false\n  }, {\n    \"service_sid\" : \"IS7a4A959DFC6Ac1DDa3Fcbb8E8E4BABF4\",\n    \"read\" : true,\n    \"identity\" : \"3rc56a1oqgdgw425ro54ozf6w2y6q53pudyn74qg89znrpiq2f76a9y3uvc4i6umv5sayc01crybo5ccp73kor97ayqp\",\n    \"account_sid\" : \"ACaDFcea5Ed2d125c9C0e323D9d5B92a14\",\n    \"write\" : true,\n    \"url\" : \"https://web.example.mocklab.io/524278\",\n    \"document_sid\" : \"ET428cd32b6F2bf61b5b7c71F5d0c7B7DA\",\n    \"manage\" : false\n  }, {\n    \"service_sid\" : \"ISDA23A01231Da03EffC1Ca2eCEFE88bdf\",\n    \"read\" : true,\n    \"identity\" : \"ue2hk5kzv\",\n    \"account_sid\" : \"ACac0BA97dDf818f3d8Af914A62d9b9192\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/653792\",\n    \"document_sid\" : \"ETAEA3F9fCd4ccB3B97BcC0C6EF40A22EB\",\n    \"manage\" : false\n  }, {\n    \"service_sid\" : \"ISE4D9fF40C4E51D7Cc435B37C02fc72dE\",\n    \"read\" : true,\n    \"identity\" : \"n3jkfoo9rva7xl785l0\",\n    \"account_sid\" : \"ACACc0b8C8b48dfAF6f4Ea12E71ab9385d\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/774899\",\n    \"document_sid\" : \"ET548Faf9B15050cec7ca6FE48C00b2F84\",\n    \"manage\" : true\n  }, {\n    \"service_sid\" : \"IS8Ffb561dFB9BfaFde943C9227c93afda\",\n    \"read\" : false,\n    \"identity\" : \"qntzro2c03wgnyi0d8te6liu1mpieb2t6ik9n4156voqxaziem9gyhvyjh4w3ovzh7eite5ywxgxiphdp7qanmj5g5p4l74jhefaq3x3cjyjf45ky0b99sixr9725z4usmpyip3vkgw2zafnxdsd3tj2ibyue0crvkl4f7wyqve0m\",\n    \"account_sid\" : \"ACd4e7f4bd4DB9a535A60e138ba05adBEB\",\n    \"write\" : true,\n    \"url\" : \"https://web.example.mocklab.io/620222\",\n    \"document_sid\" : \"ET21B9ccb2D6De8F1c8dCAaab4fd458eb8\",\n    \"manage\" : false\n  }, {\n    \"service_sid\" : \"ISFD309b2f0E0edf01cBCC8Bf6B41F9A4c\",\n    \"read\" : true,\n    \"identity\" : \"b35ldnhniubbxak8ontof838v6itaqtt0ajcvi43kdhm73judvpqt69ro398aqpoa892eoaexcuaafueufbu1xglq10ty4717bskq9jiiu0erc56sw3zx9w0i02xp30pvhn9ut3iu7of6ogjelm1sd6dgow45ljpt632k7bm6cl5f7be1uc1tv45rauh0g4rdk0ru\",\n    \"account_sid\" : \"AC862dbBecfd5920Da9D6EFB99B0FDce82\",\n    \"write\" : true,\n    \"url\" : \"https://web.example.mocklab.io/409762\",\n    \"document_sid\" : \"ET1AEc3d6d65ccdE6e2429d5eeE0DefB0b\",\n    \"manage\" : true\n  }, {\n    \"service_sid\" : \"ISf82803FFAe06ea8068bBBCcF33B4d1ef\",\n    \"read\" : false,\n    \"identity\" : \"8wny1eq8fh1adqz5xurw4z21p\",\n    \"account_sid\" : \"ACe47589e62071FA3c3fbf3daFd3fcefc9\",\n    \"write\" : false,\n    \"url\" : \"https://web.example.mocklab.io/916986\",\n    \"document_sid\" : \"ET5C5530B72DdBd9Fb52cD10EBAC4C1df5\",\n    \"manage\" : true\n  }, {\n    \"service_sid\" : \"ISa0240f9728Afd9FcA16bf31EF9aDD18F\",\n    \"read\" : true,\n    \"identity\" : \"twnq9bmisn6aqddwwbs1nyw0av28hk6e3a78c8q6k4sktyly7jzkrb8t12pazp19kxmca6ud1a9s01fz9pi68vfe0gapgr3pbff63p0anh6qmmwzw5j8uu5wb1ls6kyulyvh7x39nxj3x4mi7zsq17eh9mxw2lp0odaqq1wqkrsf0dr83s1fg\",\n    \"account_sid\" : \"ACeA0740DF5b8D6E94Ec8EBC5aEAF6eD5b\",\n    \"write\" : true,\n    \"url\" : \"https://web.example.mocklab.io/392033\",\n    \"document_sid\" : \"ET2fcF5BDc9cEC244db737dda28b85c4e1\",\n    \"manage\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68586b3a-4fa2-3639-b8d0-3c21e367bfbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncDocumentPermission",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "permissions" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.document.document_permission"
                },
                "type" : "array"
              }
            },
            "title" : "ListSyncDocumentPermissionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "fed79b69-c094-3733-8068-455bc98b51de",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS0ddcadc6F1Fc1aDa84E6738cc123af9d/Documents",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"service_sid\" : \"ISa03Ae91Cd488aFfEBB9E86c42B4Da1BA\",\n  \"unique_name\" : \"Rick Thompson\",\n  \"date_updated\" : \"2022-05-12T17:16:58.987Z\",\n  \"data\" : { },\n  \"date_created\" : \"2022-08-03T12:03:21.987Z\",\n  \"account_sid\" : \"AC18aD5Db962F925bfE4b1Dc0d33C73B3A\",\n  \"links\" : { },\n  \"created_by\" : \"9rno8uu0jb8opfmwxyqeehn20wkd8f8h16dyewu2a5c0yppglthadpftizae9ahh7boa\",\n  \"url\" : \"https://web.example.mocklab.io/033057\",\n  \"revision\" : \"07tb76w530fsagg5lchv6xbg09gppxlq36qgkguf6p58b3qketfsxl6rifquaz9v6xatfedp8edmehyfofjdh38hbhjsh0my1o11kxjfz\",\n  \"sid\" : \"ET2645aeaf0b7BA9e3cc75f526dbA87eea\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fed79b69-c094-3733-8068-455bc98b51de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSyncDocument",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "created_by" : {
                "nullable" : true,
                "type" : "string"
              },
              "data" : {
                "nullable" : true
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "nullable" : true,
                "type" : "string"
              },
              "service_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^ET[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "25626c8b-17f5-37e6-a0aa-47456984843e",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services/IS2adFbabdEBcab0A791bB52dfcaF9B7D5/Documents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"service_sid\" : \"ISB4A5a8A0a7e2768dF32Fcd29eE9ceBE3\",\n    \"unique_name\" : \"Mara Maggio\",\n    \"date_updated\" : \"2022-10-30T08:50:13.986Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-01-30T08:56:00.986Z\",\n    \"account_sid\" : \"ACA24CA151dBf1b8fEc3DeeCECF7393a61\",\n    \"links\" : { },\n    \"created_by\" : \"1b1s52ms69m1ht6v1z3ubgu5obvszo5plsrldcrnmqoahrb5ae6xii4q1kei24jjfnw0wmncphlnwnwlqxux6eofffnuy04mjggdudvyro7bj0xjy\",\n    \"url\" : \"https://web.example.mocklab.io/021265\",\n    \"revision\" : \"f2uvuvbqnja8xysykxst8o9ifgzb5g98wbijednci4pswdg15cbkrl903lx6gtalbdt7wa72lekvcxqdz68ybqerctipk4151cgs62jny2vs6tgple6breuzjit8728apz2q69b4jwzi5hsq8euzwuzhf2njbttffz895j74wvoeglpruzrii7z8dmb68naur8\",\n    \"sid\" : \"ET2aC0fFcAe9213ffd147dcdfAeDCBEDEb\"\n  }, {\n    \"service_sid\" : \"IS898f5a7ecc0bE12Da9FdcbdfF0A7ABC1\",\n    \"unique_name\" : \"Mose Dicki\",\n    \"date_updated\" : \"2022-12-03T23:39:18.986Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-01-23T22:13:12.986Z\",\n    \"account_sid\" : \"ACd99fEfdA5cc53bf08CCa04A7d85dbc18\",\n    \"links\" : { },\n    \"created_by\" : \"hgg3i6h4n3ais86n1errrczhg9l9k9igtrubjz1sltyz\",\n    \"url\" : \"https://web.example.mocklab.io/185200\",\n    \"revision\" : \"yu4exondbrkyw2b7imjm8oqvrwlscepufd0\",\n    \"sid\" : \"ET2e4A08F871b4d9a8b4021efEf73Ab5e3\"\n  }, {\n    \"service_sid\" : \"ISebF9b3ca9e1a4ddcEf1edb2C264c1F7B\",\n    \"unique_name\" : \"Tisha Steuber\",\n    \"date_updated\" : \"2022-11-04T12:53:48.986Z\",\n    \"data\" : { },\n    \"date_created\" : \"2022-10-02T00:16:17.986Z\",\n    \"account_sid\" : \"ACBe5DaA69931dcC8A2515eC0F75E5a93A\",\n    \"links\" : { },\n    \"created_by\" : \"ty5at25\",\n    \"url\" : \"https://web.example.mocklab.io/805943\",\n    \"revision\" : \"elljtbtliputlfxir8if2rhh472a5qx7sdzafuitafgsm3nxe3l3nzfgeyo5nw086ongpb5qgw07pxwvgvzobioj9brtg3nepdxps1x00iuaxlsqhzxyyo\",\n    \"sid\" : \"ET1d0ae5d9aae202CF5F98e95Bf2aAF69e\"\n  }, {\n    \"service_sid\" : \"ISeaD1b8f57457eE69f5036A6B4f35efbB\",\n    \"unique_name\" : \"Sherwood Gutmann\",\n    \"date_updated\" : \"2022-09-21T09:51:53.986Z\",\n    \"data\" : { },\n    \"date_created\" : \"2023-03-15T16:15:15.986Z\",\n    \"account_sid\" : \"ACdAd2aC6e780A2D0Df5ccF2f5b8eCE26f\",\n    \"links\" : { },\n    \"created_by\" : \"83prcp3yedayso26sdgye3ckpsxmqgzw6i13awz78bgpvya5b3eckco7zhfg0oxpvhqn97ctykc25pnybvokeb29f0i5ka77v7ynq6w0s5712gy5xldi8vy351xm37s57pah2pdhrb0lms2egffzuhc3y1hys0bybtl\",\n    \"url\" : \"https://web.example.mocklab.io/418763\",\n    \"revision\" : \"fsjftz2kbufafa3fmeoxj9tz1cq4oy7alebyy0iwa9n1dc4pp6dznasjpqk0ycp\",\n    \"sid\" : \"ETAB58A3c4a1643FcC518c2eD2dFA8BA3f\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/268905\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/343864\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/965304\",\n    \"page\" : 1637993748368865849,\n    \"key\" : \"dye2jphlw0jxncnyy2ql3na0sm676kuof634hie6rlg57xru6eic1jqz5alppmukjqn2py92iuvmvjia3v\",\n    \"url\" : \"https://web.example.mocklab.io/188198\",\n    \"page_size\" : 4438538749103006722\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25626c8b-17f5-37e6-a0aa-47456984843e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncDocument",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service.document"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListSyncDocumentResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "b8422551-9454-3e57-b9aa-88b82fb3e45a",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"acl_enabled\" : true,\n  \"friendly_name\" : \"Shelia Mann DDS\",\n  \"date_updated\" : \"2023-08-24T17:14:17.985Z\",\n  \"reachability_webhooks_enabled\" : true,\n  \"webhook_url\" : \"https://web.example.mocklab.io/103621\",\n  \"date_created\" : \"2022-10-12T01:46:59.985Z\",\n  \"account_sid\" : \"ACaEA46A0De89FAE3A1C69E6dF2cCE4E3c\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/176994\",\n  \"sid\" : \"IS098f6aE53CCAF4d0B0e6DB0D8FfbbeE3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8422551-9454-3e57-b9aa-88b82fb3e45a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSyncService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "acl_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "date_created" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_webhooks_enabled" : {
                "nullable" : true,
                "type" : "boolean"
              },
              "sid" : {
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "webhook_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "705b4d50-b569-36e3-96c4-8cffc46cf0d1",
    "name" : "",
    "request" : {
      "urlPath" : "/Sync/Services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/718848\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/482204\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/109907\",\n    \"page\" : 1361088675124406245,\n    \"key\" : \"6ao6abx1oo0nr5lth7ft5op027rx8cv0ptkcyu12h76sjojnv1mqtv4zmrdj57u2nbn9k3cxaq91befsiz3072azga7gt9kaosneud1rytqbnbkwuofsepebjer4ztlfs4f6ow66esf94ev2m542bnoudlr6z\",\n    \"url\" : \"https://web.example.mocklab.io/243112\",\n    \"page_size\" : 2784524557992630661\n  },\n  \"services\" : [ {\n    \"acl_enabled\" : false,\n    \"friendly_name\" : \"Roland Muller\",\n    \"date_updated\" : \"2022-12-05T06:22:34.985Z\",\n    \"reachability_webhooks_enabled\" : true,\n    \"webhook_url\" : \"https://web.example.mocklab.io/043142\",\n    \"date_created\" : \"2022-07-27T09:50:44.985Z\",\n    \"account_sid\" : \"ACD8CcCcc73CDf531fa48eDb3cf61EfD78\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/442250\",\n    \"sid\" : \"ISC266F2CaCD188F8DEe87fD1ffb55b6Ec\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "705b4d50-b569-36e3-96c4-8cffc46cf0d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSyncService",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "services" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.sync.service"
                },
                "type" : "array"
              }
            },
            "title" : "ListSyncServiceResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "0da86404-c12b-3097-8cac-05eea669a600",
    "name" : "Updates a specific HostedNumberOrder.",
    "request" : {
      "urlPath" : "/HostedNumbers/HostedNumberOrders/HRe74fd2F1d36815338EfDe8c149BDAACA",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extension\" : \"x406skkdnv7nepyge492xpxi33x19ynmva1alq16yon16drxt683tfsrml5m67fb46fadcy8prwd84877gxaarfigjgi0sykaedm4l1umpydv5ufe5tcgkfhp929biuxsw4q1av2\",\n  \"friendly_name\" : \"Jonathon Nikolaus\",\n  \"verification_attempts\" : 8544296241467379653,\n  \"call_delay\" : 3998171061076703198,\n  \"capabilities\" : {\n    \"voice\" : false,\n    \"mms\" : true,\n    \"sms\" : false,\n    \"fax\" : true\n  },\n  \"date_updated\" : \"2022-07-02T20:38:05.984Z\",\n  \"date_created\" : \"2023-11-13T17:41:20.984Z\",\n  \"verification_type\" : \"phone-call\",\n  \"failure_reason\" : \"96tzbih6kislu905d8punnblpmafwv4atllgdhs5xx2zmtaa8a8m1v24p81xhpg6hb8xfux94zsmmvm87d09c0xy47r6luhzjkne5r3q85u9e41ngcauhisrb9y5nd\",\n  \"address_sid\" : \"ADcaEDAb01e1FC9fABe30D6cE6FecDBAeC\",\n  \"url\" : \"https://web.example.mocklab.io/728627\",\n  \"sid\" : \"HRC73FeE435CCFCD976C2cE1BFfB0Df1C4\",\n  \"verification_document_sid\" : \"RI860FbFF1dAAac4148Fd6CEAC81BF21BC\",\n  \"unique_name\" : \"Carlita VonRueden\",\n  \"cc_emails\" : [ \"ryj6cvnqk9d4f3npybsseqsuv4ywhkrqdojxmtjp81yav965ev68l2pypqe4mejhz0x6ksqbcte57as9aohe7tnr4dncz19r87ium4cl49uacoum0e0ii3yqe6ybpc57bssk3hdd1ohtqg8e3n7pa0h5xceqjruduv1y7\", \"o4wm5j838uc5qmrainn9s2j0z5j4cm0lt3llkicg3i7t6g2s9f5ncf7oe9f2g6wk75wr1b636q8moisl05b0ghhsk34v2vakjjay82nk6ra4x7jl50aib7n8ksef89zicx795sk5dlmztzypu9d6ndy97omqm8th2ea7w7bvmobys\", \"1l1rhq1pa7eud0uvbypixrqcs9xa1opkwdhjfs5zyv7x7rbu8wdzfza90oejy2sw0hbjmfm5dsos75e2kxq6rxspip8yeofapzralnbrib7wx\", \"sq031ga96w57m5skfv2gfgeypvkivob5a0a2s1xnnj1hi2s5xg092a8y2r4o8t5roxc1p517dlm9ckeu1hgv8uj8jsjpslnkk8i1efq29q8doz5f0a14qt9pry\", \"hff4osj13tz24ute13ujk157nye8rbwwejz66w4l69pzgrh9taqu2ts30n9fuw0zie0relvxi7vcoek2yg7e4gw8aqvnfpy25i3gv68h9xpd26tbhbycadvw75j27qwnkymkm0fx8toiu0a1ksy739u0ua2jtx8b1i5bfb8s8lw8mfpwto874jx3fb7ird4eqq6l\", \"arpca3mholbu8zbtpf9rn9mlzv9hw2c9bixeq03irsfohuv6dam17kf1bjwgfqb8fz8psoh1mtnsgouxqu96ryzgdzqajf281iapr6wq0w32i9fe7ds2m4u2979grhus2yrmb6xnynrppt695n75obdwa0uirsl8msrzccfanfq7ngzv014qu90\", \"morodq64p9pz25un7hggq0ey2kg3d1n3iarumhf18ll6z4lxt4qcl\", \"d4rwu00lrmyghashq7h3\" ],\n  \"signing_document_sid\" : \"PXab95A41AB3F3C7EE909a8ee05D7b8C1E\",\n  \"account_sid\" : \"ACA78fFEac27232e717130050CEec87393\",\n  \"phone_number\" : \"1-027-613-8726 x0246\",\n  \"verification_call_sids\" : [ \"9c21fj0rfrufwciay8c014nsjfw248h1855oo66apdkxhhaw0p3dt90ib5xrf7l27f24j22z8z5if3ww9dgxuxcru9rto9u7mxitmnfewnaqpr1voawh08f5dlzozvb5qsp0kldo6smkao7ehumg2m1z31x60d416\" ],\n  \"verification_code\" : \"isqyhoqoe2boophkuoflfnocv1qfu606i93zkapdsdvccb1ewy0t3afu13vjp1qlyqjxbppzjqy633uj3vl516pz2s5kdrcdrrmskha88gk6acefy6m9banknwx1whyyz\",\n  \"email\" : \"t5pt8piahv5fcvgr6aqmxy09932dghog3pu9hebnyqzecmw6izfg9hhnnh8s4853dk3ilg9vbsmfttie2zmunqd3g0hw3y9ta0hyp68x\",\n  \"incoming_phone_number_sid\" : \"PNEeC6aABCe578aDcFe4ec306BfDff2e17\",\n  \"status\" : \"verified\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0da86404-c12b-3097-8cac-05eea669a600",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateHostedNumbersHostedNumberOrder",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "A 34 character string that uniquely identifies the account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address_sid" : {
                "description" : "A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "call_delay" : {
                "description" : "A value between 0-30 specifying the number of seconds to delay initiating the ownership verification call.",
                "nullable" : true,
                "type" : "integer"
              },
              "capabilities" : {
                "description" : "Set of booleans describing the capabilities hosted on Twilio's platform. SMS is currently only supported.",
                "format" : "phone-number-capabilities",
                "nullable" : true,
                "properties" : {
                  "fax" : {
                    "type" : "boolean"
                  },
                  "mms" : {
                    "type" : "boolean"
                  },
                  "sms" : {
                    "type" : "boolean"
                  },
                  "voice" : {
                    "type" : "boolean"
                  }
                },
                "type" : "object"
              },
              "cc_emails" : {
                "description" : "A list of emails that LOA document for this HostedNumberOrder will be carbon copied to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "date_created" : {
                "description" : "The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "email" : {
                "description" : "Email of the owner of this phone number that is being hosted.",
                "nullable" : true,
                "type" : "string"
              },
              "extension" : {
                "description" : "A numerical extension to be used when making the ownership verification call.",
                "nullable" : true,
                "type" : "string"
              },
              "failure_reason" : {
                "description" : "A message that explains why a hosted_number_order went to status \"action-required\"",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A 64 character string that is a human-readable text that describes this resource.",
                "nullable" : true,
                "type" : "string"
              },
              "incoming_phone_number_sid" : {
                "description" : "A 34 character string that uniquely identifies the [IncomingPhoneNumber](https://www.twilio.com/docs/api/rest/incoming-phone-numbers) resource that represents the phone number being hosted.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "phone_number" : {
                "description" : "Phone number to be hosted. This must be in [E.164](https://en.wikipedia.org/wiki/E.164) format, e.g., +16175551212",
                "format" : "phone-number",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this HostedNumberOrder.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "signing_document_sid" : {
                "description" : "A 34 character string that uniquely identifies the [Authorization Document](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents) the user needs to sign.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/hosted_number_order_enum_status"
              },
              "unique_name" : {
                "description" : "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this HostedNumberOrder.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "verification_attempts" : {
                "description" : "The number of attempts made to verify ownership of the phone number that is being hosted.",
                "nullable" : true,
                "type" : "integer"
              },
              "verification_call_sids" : {
                "description" : "A list of 34 character strings that are unique identifiers for the calls placed as part of ownership verification.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "verification_code" : {
                "description" : "A verification code provided in the response for a user to enter when they pick up the phone call.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_document_sid" : {
                "description" : "A 34 character string that uniquely identifies the Identity Document resource that represents the document for verifying ownership of the number to be hosted.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RI[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "verification_type" : {
                "$ref" : "#/components/schemas/hosted_number_order_enum_verification_type"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "18aeb9da-5457-3882-96c2-edd095b24936",
    "name" : "Fetch a specific HostedNumberOrder.",
    "request" : {
      "urlPath" : "/HostedNumbers/HostedNumberOrders/HR0148Be3188eBD2a4AB5DE2FEE25eA9Cb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extension\" : \"18ffygo40r0xbtkj128cif2fdgdwfd7wjckvyf6e1079i669kcq4sbslt88c\",\n  \"friendly_name\" : \"Davina Davis\",\n  \"verification_attempts\" : 1435093756917776525,\n  \"call_delay\" : 3118711577149686628,\n  \"capabilities\" : {\n    \"voice\" : false,\n    \"mms\" : true,\n    \"sms\" : false,\n    \"fax\" : true\n  },\n  \"date_updated\" : \"2023-09-25T21:36:26.984Z\",\n  \"date_created\" : \"2023-11-27T01:09:06.984Z\",\n  \"verification_type\" : \"phone-bill\",\n  \"failure_reason\" : \"wdznmluk5o85wookzwzakudcqxdbsbgb06fmq7x7rriyfeb3f6w8xiorlgl9opft83jdo1k7obujgpn1dr73879usntu4x57m9zizugda9jox3x56mhfkwinvdsslu4tonrtcdmjmopknxtvjolvnjhwmeqofqewoh34yz\",\n  \"address_sid\" : \"ADc87cfFdBFB58c16Ef5e9EFeFC60CB9BC\",\n  \"url\" : \"https://web.example.mocklab.io/811299\",\n  \"sid\" : \"HRf0a1acF7fD7a1ca43B9E208EE94E7B42\",\n  \"verification_document_sid\" : \"RIF9EbAfEfF30fbCA9472da8520f4731ed\",\n  \"unique_name\" : \"Quinn Nitzsche\",\n  \"cc_emails\" : [ \"1qd5ntct2j2guj6s0n56sojmxzghk53rbfst14wxevpo9xa6a40um8qsebjk022cye0eh1epp\", \"agj940j6okw9vkmmfjenhil3z0d7a5qzf2fo1q7ionrpld0m7cqz867tsa2\", \"956i2fv0lu07j44u9o41ma35sm2jyf5ezpiilkmnd4nnsej44xcamx49fpnsxov0kf0pamyocp12nm7t0s87corkk4te5sxxzhrx8mx7svowc0bhcyjoyd0c3i7dhqxbewvc3zsprqu98toyynm14ey13stgp7o6z395g5b6ugh4ag29sirfhry22e8xellfbsrgi\", \"a101hn92i8dpi4ilhs7g9czobv0gse4gws8pkwfzelmt32ezxtawfvjozne5rk5p35u6ey\", \"gtbwyxeyb0fb882i8q1gtmy4yfh7gbwdoixcb869nk94fiagrp12ak0kbk2ybks75k11eupn0ual1qe00b5bf0wq5hc5cb5dffqr5wmyazawgqlg89pjb1feqy7gshzly3marqt4v6g57a0quh1jy4svbwz0x5jwxxgk573itz\", \"r38v6i20wsujf99g2793sasqv7gdiygrayhq7bsfbsjn4v3ybbgzex185rold8rzu44nvlxye0cfdrae3ghv02g6orbetvrso4zn53q23blztle70kerjf8modr5mtmkom4ldmjoig66x0an4t9c9xe1d0dt9eskd7dqwybe5ljkg525cawl5n1s60mad8wskhspc\" ],\n  \"signing_document_sid\" : \"PX4A67e1FcaBC188221FF702cBE68bfCe5\",\n  \"account_sid\" : \"AC66E3EAb6c647BFADECca327A20Cfe5eB\",\n  \"phone_number\" : \"765.699.7123 x16417\",\n  \"verification_call_sids\" : [ \"wi82hhmcde9km76puqoj40z9tbvh9ntuc4gp0faqz6m233my21h7dsnx9bin8vlcu5o4gle4rf711w21cbo9t9z4kiejjmue1oim0v4d2izglqm3cgvoq892eubtcbute43bbny7v8vrxsfg\", \"t27qs\", \"yjoamw\", \"gidz20o0g4bg6p10yeo9wxbwj24i0hrlebtw2yvogbt5fa2hideonym0a313nno3y7aa4mv0bu6nepwmmmuqle4tutmwvl6kwdjd4bow8qor0fa027dvolygiq3pkfsoumx9q6248hs65v5rh1rbm8etrljenam232kb2umz2ol7tdby\", \"ozak8nvibdm5sd9sdj5fegoa0h2eaiw0sha5ii4cfk0goludj60y56h6cc282m5pgle87v34xsjyks7b4cli6zvo5cor8q2dvehuwm4wu7qwhuypglkf5d82bbityrtiuo86yzvupc65ofxfk9o0dm\", \"7f3zten93xzy96zg4at21jed2s3n6e060bg3ihjrwu84\", \"yrn2tq6ltesj640t61u54o25iy6w47go13xyqujf2upzwnws9m71lfp9l\", \"cix0mbvnbyja28sstjhis2dxl5e8nqbh\" ],\n  \"verification_code\" : \"apespgh71rl70vkemfadg9chn3l4rn8b448mt670iqy1cri50t3qmhezqj11ookq4t0k8p3gvhrd85zdb78rlz5pmirlc1hjr57rk16jrwav9eltoxp6t11lsp6t7evri7ojrmopott2a0yt1\",\n  \"email\" : \"qct9usz3p3kvzanp7varmau67inxvc68vmlclrpu03wawft1hf38l02ysltcstyzv0xilo4ncekd5aks4c21p9g1ralhwn\",\n  \"incoming_phone_number_sid\" : \"PN8fe37FaACCc5E3F9573957E5CEfF5c7a\",\n  \"status\" : \"testing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18aeb9da-5457-3882-96c2-edd095b24936",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchHostedNumbersHostedNumberOrder",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "A 34 character string that uniquely identifies the account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address_sid" : {
                "description" : "A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "call_delay" : {
                "description" : "A value between 0-30 specifying the number of seconds to delay initiating the ownership verification call.",
                "nullable" : true,
                "type" : "integer"
              },
              "capabilities" : {
                "description" : "Set of booleans describing the capabilities hosted on Twilio's platform. SMS is currently only supported.",
                "format" : "phone-number-capabilities",
                "nullable" : true,
                "properties" : {
                  "fax" : {
                    "type" : "boolean"
                  },
                  "mms" : {
                    "type" : "boolean"
                  },
                  "sms" : {
                    "type" : "boolean"
                  },
                  "voice" : {
                    "type" : "boolean"
                  }
                },
                "type" : "object"
              },
              "cc_emails" : {
                "description" : "A list of emails that LOA document for this HostedNumberOrder will be carbon copied to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "date_created" : {
                "description" : "The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "email" : {
                "description" : "Email of the owner of this phone number that is being hosted.",
                "nullable" : true,
                "type" : "string"
              },
              "extension" : {
                "description" : "A numerical extension to be used when making the ownership verification call.",
                "nullable" : true,
                "type" : "string"
              },
              "failure_reason" : {
                "description" : "A message that explains why a hosted_number_order went to status \"action-required\"",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A 64 character string that is a human-readable text that describes this resource.",
                "nullable" : true,
                "type" : "string"
              },
              "incoming_phone_number_sid" : {
                "description" : "A 34 character string that uniquely identifies the [IncomingPhoneNumber](https://www.twilio.com/docs/api/rest/incoming-phone-numbers) resource that represents the phone number being hosted.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "phone_number" : {
                "description" : "Phone number to be hosted. This must be in [E.164](https://en.wikipedia.org/wiki/E.164) format, e.g., +16175551212",
                "format" : "phone-number",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this HostedNumberOrder.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "signing_document_sid" : {
                "description" : "A 34 character string that uniquely identifies the [Authorization Document](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents) the user needs to sign.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/hosted_number_order_enum_status"
              },
              "unique_name" : {
                "description" : "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this HostedNumberOrder.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "verification_attempts" : {
                "description" : "The number of attempts made to verify ownership of the phone number that is being hosted.",
                "nullable" : true,
                "type" : "integer"
              },
              "verification_call_sids" : {
                "description" : "A list of 34 character strings that are unique identifiers for the calls placed as part of ownership verification.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "verification_code" : {
                "description" : "A verification code provided in the response for a user to enter when they pick up the phone call.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_document_sid" : {
                "description" : "A 34 character string that uniquely identifies the Identity Document resource that represents the document for verifying ownership of the number to be hosted.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RI[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "verification_type" : {
                "$ref" : "#/components/schemas/hosted_number_order_enum_verification_type"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "9bfd4068-7d78-3b0a-8dee-257bbbfbf287",
    "name" : "Cancel the HostedNumberOrder (only available when the status is in `received`). - 204",
    "request" : {
      "urlPath" : "/HostedNumbers/HostedNumberOrders/HR0f2ee96928275e87cda50B2CB5aadF62",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9bfd4068-7d78-3b0a-8dee-257bbbfbf287",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteHostedNumbersHostedNumberOrder"
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "f9957b04-eb2d-3b8d-8c4c-2106afd640d6",
    "name" : "Host a phone number's capability on Twilio's platform.",
    "request" : {
      "urlPath" : "/HostedNumbers/HostedNumberOrders",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"extension\" : \"rotvzfpcc0j9047xn3d6raa5hq1xkan20n1fwum198ifclr6vyy39o4cvvrkal16fcp9f6ivlu0ve2garlw6ibi63kvat0zfu67yrwuq5sale191t3wnluu482xgzxe43i0\",\n  \"friendly_name\" : \"Candelaria Boyle V\",\n  \"verification_attempts\" : 7377333219785608635,\n  \"call_delay\" : 1942558390819898125,\n  \"capabilities\" : {\n    \"voice\" : false,\n    \"mms\" : true,\n    \"sms\" : true,\n    \"fax\" : false\n  },\n  \"date_updated\" : \"2022-12-08T13:51:52.983Z\",\n  \"date_created\" : \"2022-03-16T03:12:23.983Z\",\n  \"verification_type\" : \"phone-call\",\n  \"failure_reason\" : \"v01xwvblwqgm5vfbas25uxwh6sjgfc8t8twgqbjnd98mbvl8b53k8cua1qhspc854kntsxwuahebhp94m8ddjua06ofaxx8eqzuj9g9jj1l0ket298m4739dsr8fnfzo4tl3ep7mk1gyjigw1dpw91jzgwcrc1lqcutjx89\",\n  \"address_sid\" : \"AD6Cd3edd56dBe6CCBFeE7bc4547bD58F9\",\n  \"url\" : \"https://web.example.mocklab.io/518189\",\n  \"sid\" : \"HR78fAa8ecc2605036DFd2DbCFDA96bfbf\",\n  \"verification_document_sid\" : \"RIE90Ac95dC775b9B925A1DddADae7497B\",\n  \"unique_name\" : \"Jim Morar Sr.\",\n  \"cc_emails\" : [ \"fn4b8eiawm09j8jfetzftmaldnhsi1tbhzkvpalxwaayd3p7st7bh6xgfitpphh3we3kl821dmw435x01d317otxkjidjfvm0x2wl7cpox2ru8s6wep92grp66qdkv19slbhk4891sp7la2vv4rzak2nzi5zvy38ut8xndmekfc8k2id4mzbcugwdht\", \"b9xpe7pchi9ak667145wcq7w3xdssl3rtwhvynt026k6t3ttmzz1\", \"fnljiyf9s2isr6lob0y8t78jb190ipxm1iyusavvxy39fsaa5lbiu8mpmlb367lzu3gt4tkb0sy7fmqve6zuvjgzny1gv3pqphvj3gwlb\", \"cvpkz4z06xxoxpg49donohxqasvxt5avggedkk00zvykvdi6o3b66vvyq05e2j7wgtw\", \"ht8t9rpr7dhefca10bcq096eaws4mlwt05plz7ukt7cvr7bjfladu2frt6hmj5iuot9n2ilitbcwzrib9xqowo74n05zdunqtmupvfkqjwdxk7\" ],\n  \"signing_document_sid\" : \"PX5D43FC37F5b0c1aFC4BeffeE5b93aaBc\",\n  \"account_sid\" : \"ACcF86C070DfEa56aAAfd0a6Ebc5129fca\",\n  \"phone_number\" : \"424.917.6377 x868\",\n  \"verification_call_sids\" : [ \"fnka7blh7cbmelwyixbt9nszry2pdipf\" ],\n  \"verification_code\" : \"ql5ct14229f8abjm56gmmph282djkjxkzjn09vmn5lktcjtlx9p99h1jsrq3kos8bhvat99a49g6r8pnh6ubvakx2rm1s9fyh9mq5fd05hb9o18htov6vd64cka8bgm2hp7lzcede1qw32cbuetait7ncwwkyt0zb4bid5cgi\",\n  \"email\" : \"wd7jbqj1wbprvq32cigmjqrh5h9sas9t405qgxj81oexeh3o9ssuz18bik6gywo3z405s2ufzsjodiz85u7x3tq46m674kem7p7k39grxm7071veab3e5ktohs5hcwponfqk4h1zay3atsbh9zb6vmhqnzcjd1ie362os\",\n  \"incoming_phone_number_sid\" : \"PNcc4aAF509Ed05AfE5E787520a87BdBCD\",\n  \"status\" : \"received\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9957b04-eb2d-3b8d-8c4c-2106afd640d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateHostedNumbersHostedNumberOrder",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "A 34 character string that uniquely identifies the account.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address_sid" : {
                "description" : "A 34 character string that uniquely identifies the Address resource that represents the address of the owner of this phone number.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "call_delay" : {
                "description" : "A value between 0-30 specifying the number of seconds to delay initiating the ownership verification call.",
                "nullable" : true,
                "type" : "integer"
              },
              "capabilities" : {
                "description" : "Set of booleans describing the capabilities hosted on Twilio's platform. SMS is currently only supported.",
                "format" : "phone-number-capabilities",
                "nullable" : true,
                "properties" : {
                  "fax" : {
                    "type" : "boolean"
                  },
                  "mms" : {
                    "type" : "boolean"
                  },
                  "sms" : {
                    "type" : "boolean"
                  },
                  "voice" : {
                    "type" : "boolean"
                  }
                },
                "type" : "object"
              },
              "cc_emails" : {
                "description" : "A list of emails that LOA document for this HostedNumberOrder will be carbon copied to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "date_created" : {
                "description" : "The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "email" : {
                "description" : "Email of the owner of this phone number that is being hosted.",
                "nullable" : true,
                "type" : "string"
              },
              "extension" : {
                "description" : "A numerical extension to be used when making the ownership verification call.",
                "nullable" : true,
                "type" : "string"
              },
              "failure_reason" : {
                "description" : "A message that explains why a hosted_number_order went to status \"action-required\"",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "A 64 character string that is a human-readable text that describes this resource.",
                "nullable" : true,
                "type" : "string"
              },
              "incoming_phone_number_sid" : {
                "description" : "A 34 character string that uniquely identifies the [IncomingPhoneNumber](https://www.twilio.com/docs/api/rest/incoming-phone-numbers) resource that represents the phone number being hosted.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "phone_number" : {
                "description" : "Phone number to be hosted. This must be in [E.164](https://en.wikipedia.org/wiki/E.164) format, e.g., +16175551212",
                "format" : "phone-number",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this HostedNumberOrder.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "signing_document_sid" : {
                "description" : "A 34 character string that uniquely identifies the [Authorization Document](https://www.twilio.com/docs/api/phone-numbers/hosted-number-authorization-documents) the user needs to sign.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/hosted_number_order_enum_status"
              },
              "unique_name" : {
                "description" : "Provides a unique and addressable name to be assigned to this HostedNumberOrder, assigned by the developer, to be optionally used in addition to SID.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The URL of this HostedNumberOrder.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "verification_attempts" : {
                "description" : "The number of attempts made to verify ownership of the phone number that is being hosted.",
                "nullable" : true,
                "type" : "integer"
              },
              "verification_call_sids" : {
                "description" : "A list of 34 character strings that are unique identifiers for the calls placed as part of ownership verification.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "verification_code" : {
                "description" : "A verification code provided in the response for a user to enter when they pick up the phone call.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_document_sid" : {
                "description" : "A 34 character string that uniquely identifies the Identity Document resource that represents the document for verifying ownership of the number to be hosted.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RI[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "verification_type" : {
                "$ref" : "#/components/schemas/hosted_number_order_enum_verification_type"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "8f7a6d89-b8f3-385e-ab5b-02edc5427fe9",
    "name" : "Retrieve a list of HostedNumberOrders belonging to the account initiating the re...",
    "request" : {
      "urlPath" : "/HostedNumbers/HostedNumberOrders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/527974\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/766925\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/260245\",\n    \"page\" : 444172017710768586,\n    \"key\" : \"hq62s0oxpl2287m4rogcm2d2lwrs6tyoph91\",\n    \"url\" : \"https://web.example.mocklab.io/793107\",\n    \"page_size\" : 8451663042833944473\n  },\n  \"items\" : [ {\n    \"extension\" : \"kbupcdvaax6rizh5o0c2st408970z5bl09ftzzkzlnxtui790dt3zt7fc9unvcirtadhsxlq5xxtsh6lzmnri7cfbmwpctduqoidtsbf32\",\n    \"friendly_name\" : \"Sanda Bayer\",\n    \"verification_attempts\" : 7354849482313449141,\n    \"call_delay\" : 7795223396211502379,\n    \"capabilities\" : {\n      \"voice\" : false,\n      \"mms\" : false,\n      \"sms\" : false,\n      \"fax\" : false\n    },\n    \"date_updated\" : \"2023-02-09T00:04:38.982Z\",\n    \"date_created\" : \"2022-06-28T02:07:16.982Z\",\n    \"verification_type\" : \"phone-call\",\n    \"failure_reason\" : \"jepn4bawlymabj83ycqbq1h4xhx61frq074jet3eihsvaiel0xynatp6nrzjfs2hy8fook\",\n    \"address_sid\" : \"ADEbaf3Dbd629B3F0e62FebCd21f5aaeEf\",\n    \"url\" : \"https://web.example.mocklab.io/507708\",\n    \"sid\" : \"HRa535696ffFAc5AC19cbbAc6c1E6ebd1f\",\n    \"verification_document_sid\" : \"RI456fd937EE3C90AEB92933487d2B94Bf\",\n    \"unique_name\" : \"Aaron Little\",\n    \"cc_emails\" : [ \"zro9tc7yi6iuyvoielaac5li296b1bcd9h2208eau2e3kj5op1uthjyegkgq89a4n5uo52r4c0it22dl5pnc6d7ylzjs4phju25j76l7rd6kdg0gpwlcqwrd67deru4vx1zjiw8zlhi2ah0tfb0g56i8ewsozk8ritgkenlgz366ml8kxasbv8pt3t1azvf\", \"00en5afbbw8wte2rmrgzse8xduhnomjbfedl1ujln4d272nctmf9qe13jb9q8modqb1buy3ko4lf5et3dma9cb8lknml40sepz32qx3l1popxrkgr308u6uljucr5lwwibjy0lzejutwg9xjiazhkay\", \"g6zzceeyz0zgmcds4wcfpi710n4k0um8zbgdvh16\", \"d88yc1ai87rkub3v81rquihixynfahk9ccx7mxp70rglphzirmdrxg82hymium1qnv60agl0l8rjbr6vx2egzel6dt4i3iyr0cjbcvd7prvgo9y6m0oudx9picilwj\" ],\n    \"signing_document_sid\" : \"PXCAEceDcA12fd86c6F6bcA1b8bDFce1F9\",\n    \"account_sid\" : \"AC316dfdaC82c6DA9bbc0AD45DFF0fb6CA\",\n    \"phone_number\" : \"1-787-073-0388\",\n    \"verification_call_sids\" : [ \"tun43rxvzb1ipelplwhuew68l1lmkoohrgy4dcgkvf1tyiaozlevso0j\", \"3ecykl71m19gqey0psooqnp29xmq9bhjdjp03abnpn7mkoy2z9axur8fuedq07czlx5t8uelkvjbeecpr00nynj7kds2p43zwuycdlz0irzsg3ei7hywkcu6s0s8h2omistxwx9ng1hglbv5ngvm66izt1hie5bh69hw\", \"1smlmguvnqhhmq0giqtn5k8g2xq42nlppe4660nkujykvoexepwwruzj59ew5i3v9vbfe6phvs6atkn9710dj4a9cwf6jk5917wqz051x4htdiwantz0i9g22jldujxnmhml1sgls8uzvef6mmtj0wrv8\", \"tbeo5v3o40t12bduhjc8csyau4vg35uesqaopfe5wbso4heh8495egf0lqx074ff0lpbcce9nd3bzu9sqgc\", \"io3g3rpfxjlq1m4xt6ihd8xczcjhgozzxfk5r8j56o0uadv3k0std57gt2sn5\", \"ufjsjl6ywe60hqm67qxowa96lc2bn4o2j370e7nx2lxaryesi4qe8c35am0wtld8t1qi0zsxhisv2xrjnevp8r95jorg4vd5ao3wsljvsrxlfsjam8kq5mxvfvgxh3gkcplg\", \"jz0nk4kzgyecdm4cvpruwf6eylnyfytsna35e8m39626u37\", \"kklkirs77jp4ni98gl42wxol998zcpsk2w4uybqzz1qpk7avzxrcgkbdtrk5f1p0v1cmisoxylqljyg5zsprfxkuq5sojxtare1ocnuxa6v8tc63\" ],\n    \"verification_code\" : \"wwluk5c745cyo9gvkd1fhl5ya75agpzx93omc2stf6cxj2so91hiqwbitz8j1avqy6v69s6tfeblbkvz0bufjea2zpoqiv7cvn9oy7uu4uss68699wpo2noyo8ky340nxiod8zssfd0\",\n    \"email\" : \"htvdgbmpowc0wv0twzikijd0zl6xfi0bf4h8bb0oj1b7wh1e6gef43ofxifwc\",\n    \"incoming_phone_number_sid\" : \"PNe308DB25D8cDcfb8DB3B89AD9598Ad2D\",\n    \"status\" : \"pending-verification\"\n  }, {\n    \"extension\" : \"qesl7u6wf68itssxhl0p0l6z8qqi1th1sbwh012ryyefvyx0forpkm2926dfk5e0zu4xwki6oe522xa675c3mcx\",\n    \"friendly_name\" : \"Tommie Ortiz\",\n    \"verification_attempts\" : 3720019246465564312,\n    \"call_delay\" : 6108723123414886736,\n    \"capabilities\" : {\n      \"voice\" : false,\n      \"mms\" : true,\n      \"sms\" : false,\n      \"fax\" : false\n    },\n    \"date_updated\" : \"2023-04-29T05:47:49.982Z\",\n    \"date_created\" : \"2022-09-26T07:26:50.982Z\",\n    \"verification_type\" : \"phone-bill\",\n    \"failure_reason\" : \"cwwaflz6mp1soyi56tu47ondyhxqlkdwf0nphrdqmrdo4os2vwa55vurdlrm2m5w0ppe1wfu5nqygvf29fwe4bsimezbtezm8arkgsthwgre76n3r0fa4soacy2fe95r1ko6ezj7ekxci1cpug3cxzpo3pgfd6umh3hmqm\",\n    \"address_sid\" : \"AD5e54ede0AbEBE2C240aba2aF32caaCB3\",\n    \"url\" : \"https://web.example.mocklab.io/760473\",\n    \"sid\" : \"HR9e74cdb41cAAc64EaDcf7B70c2D7C0E3\",\n    \"verification_document_sid\" : \"RIfFCC27b1dEd6e0969642552E6dBc3f3B\",\n    \"unique_name\" : \"Bradley Cremin\",\n    \"cc_emails\" : [ \"npqm5shaco3egekrqfm8i83szh3vn77xrvvi77bmme80o3b5dufwmxgecw46i8xxtly966np3mgbbpdtvdggzwc\", \"p7tc1dkh4l8oq9oh7gesiamjyhnbdnrnk90bpu8dc1laljl3wfqy7l3p56azkuy39uhew4zja6nh38619v9v045844b61i3426w0glhjvngtzd0ax5algvsvkql4ezu3xm33\", \"2dnj2mxoer2m2ckrjkixr9se9agmxmef59xid1n5pdnlhaup0z7e24sih5zcksp5fsy16pqt89tqv5i4rh689mnwoegsmaxykwbfodnlb9megqmggcifgq3ncmbmmrx5c0j47yul6u9nvx\", \"2gs437c0c59djh921tamcybchct2z9xbtzd7g1sy3jcoqqz4kz2k5xrljyh9zzalsk5ut7dcplzphfooxqr136vpp23c5c4rs18xtvwmpbi2ws4lt1x\" ],\n    \"signing_document_sid\" : \"PX2f154bF7Ec5B7dbfb2b49D6e6f1DE9DE\",\n    \"account_sid\" : \"ACfFEd8AD4Dce89D4E71a068DcBe0EBceA\",\n    \"phone_number\" : \"(633) 568-3262 x796\",\n    \"verification_call_sids\" : [ \"tqy85bulqxsnk8ghohcpdqq51s8imhnmd961bo3i7g0n9uojtchc4yxnnd90d4623g0b0fyh8lvn6mjbpshko91rzevqu0nyk6g8tcjcc3l18fx\", \"6gebm1a6ne0btfbh3egu0ba5dh6s4zx6zdeciwsxv4y90lnm6yorwb5ygkvc8whhe06ocponyagfm6cziemwaae4li36mlwgwqjkjsci6g76ppnbrkq\", \"o709jihwwtg1e6yhca2hwgnvpvickavzzmvf5fu9rj3xww4cd1hj05eieo1\", \"c5a2fsla6ybzqvtapmpntcx3udtblcy1y9s1ju4x9wrjo8q09i2krcd74hgrdexctmd44evhzuf410ttv4a51iw468jd2hl39zc1f6biyft80kqbd5zj6gyj4y908rsitpitog4ggo8\", \"a34cy8psfsjwlnbf8dx1aolb58zxroi59w13teazyelyb4hk7giwkunqh6q7yj3v00inbqiai0m1lea\", \"4hlqzvfcbn5pi0b0t58ehi6tiuyg6mdudc1ash5w9hye79r6nv0nza93z91vahkemzex45fwql0u70i3bs7sc12hhzg269xjtzkhw9h6f3xalxrgfkp09ohv6iz2f9u1n8876jea4fzo9d8lwry1xqx2c873g1tlgm8r9abdls\", \"pefkcyr6zmr6rc2p58c7bf6fz1p3ed7e58nk9ol3cbz8cpn6xzg7qi14dsdkqam0ynlmr5qk861t4qk3bgxcoygmnv65uxyxkshm2et5mveo6csphlezldgit7dbn2r96pzme66alqq9aqs8tg2\", \"x4i0iul7q6hheomol8b4kfb85465kliym3jryljh7h4wr6nmte2o1eyymkbqft6ir9g4641gk3k6ckfozbzn0foe4hr\" ],\n    \"verification_code\" : \"bvrpgvlshl1paqd60z8w84aw6yszjh2ksm1g4oom4uu1d23tm2h6pf1ddzbmf8rjxja6z3l\",\n    \"email\" : \"qd50bbhovjsauk93dtqcud2zzz07xchmtbsuttn6sjm4nawodu6iczoxi\",\n    \"incoming_phone_number_sid\" : \"PNE7dbD1D815cef3cacEa1F4B27Eba452D\",\n    \"status\" : \"action-required\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f7a6d89-b8f3-385e-ab5b-02edc5427fe9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListHostedNumbersHostedNumberOrder",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.hosted_numbers.hosted_number_order"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListHostedNumbersHostedNumberOrderResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "e5dd6381-63ca-3365-83df-574bea2c1896",
    "name" : "Retrieve a list of dependent HostedNumberOrders belonging to the AuthorizationDo...",
    "request" : {
      "urlPath" : "/HostedNumbers/AuthorizationDocuments/PXcFC5CDA497DbdeD1A9Dd3Be2F6520D9C/DependentHostedNumberOrders",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/514235\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/867444\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/269622\",\n    \"page\" : 8627938140770076611,\n    \"key\" : \"s4v0szodgtu2cr01kkc9u48xxosnk91n6kub2werksz6vovvpf06osifv5x6\",\n    \"url\" : \"https://web.example.mocklab.io/545224\",\n    \"page_size\" : 1498540666953654910\n  },\n  \"items\" : [ {\n    \"extension\" : \"p5d3gyd8xl7lqjy02espybv8cnhi40wvyg96dywse0jmcpvi85cl377hjfmm3t7nziy8rvpmozrih2kul4ni6aipyhkheuvcwr5s9lwlwd87zl9lsj2so5qo4dfxlbsyhrp0wkph\",\n    \"friendly_name\" : \"James Kihn\",\n    \"verification_attempts\" : 3069157377680195881,\n    \"call_delay\" : 7121891509391806120,\n    \"capabilities\" : {\n      \"voice\" : true,\n      \"mms\" : true,\n      \"sms\" : true,\n      \"fax\" : false\n    },\n    \"date_updated\" : \"2023-09-13T05:55:08.98Z\",\n    \"date_created\" : \"2024-01-03T06:59:45.98Z\",\n    \"verification_type\" : \"phone-call\",\n    \"failure_reason\" : \"k287w98f75bd0nol115higwx88utbiskygunv90nk7duwbuectf991tma28rr19p25ck7ngv0hw4e22gapfs4q211xeyl8a8n64miz6qa7h08rd3r2feipqqwvvhngwu2hkpaf1pztofwe2agg9wx4x0nidcbc9fev1hx6uo2b1wo429lfuclzgozjm8wg\",\n    \"address_sid\" : \"ADCA2F0d96dfA205cF62A7Cba43C80f1E1\",\n    \"sid\" : \"HRbdBbD4d390CB4C2ac010c27629cF63f2\",\n    \"verification_document_sid\" : \"RIC30D0BAD6A4d528bf551e4Be73730580\",\n    \"unique_name\" : \"Miss Wilford McClure\",\n    \"cc_emails\" : [ \"2rb9hi7101lf9pd4m2vphpkf6i8pk0mmebtdk9krn2yapr4ge7o057a7ofa0cex0jlhc39tx0\", \"mralq139avgjqebmyjpontlmq3d\", \"ao0y46jc6w8h73spu3xxotais1ytu\", \"bfnl9k8b6w8yn14sl1641dlxdvvbprh4d017sbxgmbgk7cq6rjlbe7ivtrbiwvjifp15k57cm4qf4mht6rbt1eyhnqcjl9my1tegz1mmwu1kbl0frqfd3x6d040galdgmi0njljchlb6ijteaaz8apdtc5opim1gjwrz4\", \"91vmzfqpo\", \"3no2foeqbaxyow14np55i58v095o4zd6zaz3kq6lw1bqfwvldy5i025kbr8jo4kskid1b3ax79h490\", \"qo5wqanbkch405ul2t6oq9\" ],\n    \"signing_document_sid\" : \"PX7ceB280FDED8eAD9b9a785a1dE1Aebd2\",\n    \"account_sid\" : \"ACCA449Aa309F104c07e7584B3E18926c3\",\n    \"phone_number\" : \"123.702.5433 x9360\",\n    \"verification_call_sids\" : [ \"11m09n472a8ck1vs1hie128d5m0bdi68m39lxyvwijyowd8rq668kzd1gzq2who2sgb6sqwrcdsr9jbpqa767nysqz5xnvl1ma4697xkjteg1mcj0b98s2\", \"etvbzu4xawhrw9o1yveco6s2dlqsfpi2yp03dp8prpwo4lhsdr5ueb7grbasi372ljzq746lk1v9eyor0gcui94yzr4i44l91ck7aiwrgu5dmkhyjqg11091cd7luv6t3c8euv\", \"5u0pmpmaeziio4bt7tt1pudpikualw0ct7zvqpwf3znfcxnbelbii33sze88z8teom58a7im9090h8mwhqv91gz4h2sxk5aq2hg0wz53qskljftf2sxxhc632p7wjeqyy3mo6tly258f4k7ubv16i\", \"ambg0j8lkvmc20e5blbs88i4jo3mnmml67h0qkajg6pol8iig0lpxcv9cbq8anewdwbdz731k9oxwsbwp5ckfgmgnloeire16adzjh56bzpx0tyi65hmadf1zzsktd4xpdqqtzaflula2x9o8kcvx8vv08qe5t132h3an\", \"5gu0k218lv9wgxu6aqsmjqk6drkll5f1n30lc4jno36j685kjisb22ijvi708z84g200vd3fm79ydhlsd1op3ptqewgwgdrvsx15qkdckcw8023mf5fm0xg5zttwqem528wcj2y9dxddbexxi33ce\", \"7d5z37lqbrwf57wz5og6euvb1u7bsu0rencrf2kfc41250823fvv94igq6vv6inif51uivs9ncwwezey4eqli0fz8uzubmo85sn12kb7pcik0dtk9eam10nkz9wg312y90s0u7sh9zf9z8tr52l8jmtkynaky9infwqjqbkvxi32v2b7xn\", \"oimitb\", \"e1vdn\" ],\n    \"verification_code\" : \"m884lv5h3tubjyppecldpm3jleo909zmd\",\n    \"email\" : \"u9pdsvqvt2d7shyfemm3slz0fllddzchkfbqgxsnkpe45ugzx0wi3kkeov2rigvyqqu0su64r6twrc54ip857ede30j2ugudrrdkf09oztd3ef730vrv2xk5wb7xlvxd3ql\",\n    \"incoming_phone_number_sid\" : \"PN70d7D3a49dCbEf359fBF85A5a95C47c5\",\n    \"status\" : \"verified\"\n  }, {\n    \"extension\" : \"l48pmcg98hftgzsoa0lj1j2d3klyjnrcahj1ytahilr5eg9u5gscq9huao7zumfok1fwapbpito8h1z911amjny695le4uqyizkff0fiesbpfq\",\n    \"friendly_name\" : \"Kurt Cassin DVM\",\n    \"verification_attempts\" : 1575286379993165102,\n    \"call_delay\" : 4227003128116778175,\n    \"capabilities\" : {\n      \"voice\" : true,\n      \"mms\" : false,\n      \"sms\" : false,\n      \"fax\" : true\n    },\n    \"date_updated\" : \"2023-05-01T05:40:37.98Z\",\n    \"date_created\" : \"2023-06-26T21:23:05.98Z\",\n    \"verification_type\" : \"phone-bill\",\n    \"failure_reason\" : \"3dmrluh4o6kvv18m79a9dwfixbs24hmchhpig3rk3d0d3f\",\n    \"address_sid\" : \"AD88dEcAB57FFCCCc3E293fd2bBe492bdd\",\n    \"sid\" : \"HReDFFEcCC13Ade42B97B0EeaFAbDFcc8e\",\n    \"verification_document_sid\" : \"RIDb4a71Dfbb3E7f38F611fAa15a882c00\",\n    \"unique_name\" : \"Rob Fay III\",\n    \"cc_emails\" : [ \"dx7vabf8kt5ror6yn552tanbtxh3b2zvxsgn4fgpznmq2sxl0ktpvf0idqnjxsrzgppdr0er645stvru78kzbbvncjgc\", \"z80qymerpsam4otgzqzgdc8pjn4gvtvmmyxqqtu117m704wn8nq9jp3brqgy0foujzik39h\", \"zftgcmp6756jpmfwovb9osirawvghnpn9t0jlhsa11prtpp4\", \"3vg3rv3voacwsamqfzaihim1pim26idzx0hqw4yreil7gncr4j7v07\", \"qo9rzfw71ejyc06p3a9nby4g9e1ytpszqjja6y9ggmmrmt0vabjx524miewg2q108na00h8n1vmkv714h4hlkcbvp3b50mfmkcf6hk11\", \"bstxbmr0ijsfuch0zc5wvb9qgi\", \"07s2bwrxg867y5r6vpn1ja3cx9sywedf002r5pg69df5lglnc6o4kwkbbsho3ek9g6o6mhuji91uk9x6v6l03gwogppg99a1yqv7n298jvpttj7lvj4b768v3mx8d7p9x3jmbvt\" ],\n    \"signing_document_sid\" : \"PXFFf673Ed9b4f2Be64A714a99e5c5Bc89\",\n    \"account_sid\" : \"AC5E0c1081AC2A8E4bE3a1Ca5A56B219Ca\",\n    \"phone_number\" : \"791-498-2373 x81259\",\n    \"verification_call_sids\" : [ \"u9p1qxnfahwv80zm7w6kaenwcxivv2wfs7fm3aylodc8l5hgckkohplve2mef0e70qajir4qpca6lzzslklmd5nuofv8ckh1mvq4n4n5ytagpazg1rtqlvt2\", \"9rid571smc89hacmdp4z97ney2wo5osg5plaf8jmbzrmgddmh50srty0jxuf8ql3uwb2m4bdaa0fdbzx8zzp0gjadnubc3\", \"dfn7y9f4d4cevv31wjqgh32qpije7r5aspim9jon92arz67q2703sdon136ot9xf2mbm9khsej7i3xtjncdelf40tqd15l9cw4dnk8p6i8ifg64vnle7o1e1hx8vwm3rjgxinuxycrjnusj5j26wgway1m4mi1dmgzvql\", \"i6pmecc4541onqg1cbjmlp0ykotcumd0abtwn3dqossakokot0rgm0ga40dohekb4ei7drcs6ke2t8zgg22p7qa3otxdgwv4rgn3e4sha4554vfk8tjh7cca1hcylh7hktqc0bx29o2hb0itfp78c9e276gcbbjsydd\", \"kyeoxbriilo91esnhzyj8m4zx7ldpjvwgg9utomrew15hierhmeltaa6kpvp5me2hattc340lpjaqkbhw8nhnlg3qveozs7c3594lwlnopup6c1o42zwxs0wcgbz6cu64yyz1u4mw6bo6zapry1kgqkv0m853kfv9bjuc63q2hhdtdw0wamffo\", \"yidqyct1gd1u61q4ein5r333apk4x8ripgs52zv13855lkhmooagledbs3d23szq0wp\" ],\n    \"verification_code\" : \"1t3c0wuf1lmfcoro3otndk90o3gu6q0pwfxyitlh47nk3qnk1q7j1gupefhbrljxteb4atxlta694zpylby7hpb5bza19api6t9043iac7e2fplfkm8slfx41mamnywbw982bp4gepbahza1nv0dd\",\n    \"email\" : \"jylztze748c08y3\",\n    \"incoming_phone_number_sid\" : \"PN051c6b9edb0AC7aee6b698b58C9fcf7C\",\n    \"status\" : \"failed\"\n  }, {\n    \"extension\" : \"nwe478hhsp4jjhgxpioa7u1nkh07afzgq683w86zoj4ym4kphrj36tralgu7418cg6xfavadz454tq8r5fewdm602crwouhkjls2\",\n    \"friendly_name\" : \"Kayleen Funk PhD\",\n    \"verification_attempts\" : 5160483258313935834,\n    \"call_delay\" : 2479456718833869080,\n    \"capabilities\" : {\n      \"voice\" : true,\n      \"mms\" : false,\n      \"sms\" : true,\n      \"fax\" : true\n    },\n    \"date_updated\" : \"2022-08-20T16:15:36.981Z\",\n    \"date_created\" : \"2022-07-09T06:26:27.981Z\",\n    \"verification_type\" : \"phone-bill\",\n    \"failure_reason\" : \"z6b04fjznzs7woi0jdzca6p8s4d3th03u8vjdicp6a9xphlknspodwm5s781bk9ssv4d9dziks881sbvcx7enksuhx89v72mrsu8n7skthx7tcx9omvpemtzns0tng49h7ui09bt83pbow0isbrzqpe4m01iudjld2bnosof\",\n    \"address_sid\" : \"AD8AECe2B6A01ddFe5108f9aDADf639A6C\",\n    \"sid\" : \"HRbCc2E3F065446D6c1750c4Bd23baB4ea\",\n    \"verification_document_sid\" : \"RIf0C347DFaea05be841eB2fbC3c7fAEbb\",\n    \"unique_name\" : \"Jacinto Abbott\",\n    \"cc_emails\" : [ \"441by3jvdirpoczfu7oc18ktbxcxekhi7aqxqzcpould1p7g8qwle6hx0bshy5f6q96qg0xgwk4p12gzxdqd3v3sspz3o2fh94zlarcw5f\", \"ghgx7za9vyw8zx3rnn7hffnrqd25wgeahgemngn5rsnhpg3m7h3it6csirxae6nifykpz\", \"lp8z9wka0aykdckszou9z9u4ks4ku4sch3mgpj8u48ecwgryoahxjxknwo0ssmoat4as3gdp5hu4nd4dkuf3bkh8fi0dctr68mgsf3v830xn9szs\", \"f4t823yrvm4v6rm2tv4uwyaq6h7f9nsmxvxdmgcdtvcma1xn75nebdlsqule2fybdl9u6lo84vc7y4vuhwo0tp3da4p8u9gsp23zy9ebunxs2en21cy1zi1k3fvak5vcyiljk597u\" ],\n    \"signing_document_sid\" : \"PX49E3a034f351eBaADebbF3D202Cc4afe\",\n    \"account_sid\" : \"ACebf5Ae6D8c5d78Ff4E5C66C7C2422CDa\",\n    \"phone_number\" : \"(823) 733-8698\",\n    \"verification_call_sids\" : [ \"cdhwm2zath4byagc92drnazzt7jw6re1oluo1vo4s1tup6ny33vqt0a1ds9y2pqw9coejzjoi4hwtch4dtblm4t43vdt7yaxledynn6zvshafxhlf028tmecl4eirpzgq8xlnri5r3cvmzqex93rftm9svo8znu0ew7ioy7hr\", \"shav20jxebjuz8jdgn17l7b1axyxruuzub07dwfqz647yeqlfk1jtgfbhxng8gvijso0v0leh8s5h2edrh2yb9oqme06v264wjjqih2lq60pdnthxv3bno6me1vk0kznn4f0nf6cgfm6xfghb9sz8uhozynukyq11oezc6w5m4h6ecfeqge6engnyg8oi8a12ykm5q\", \"9zdqz7xsju57c7h9a0xnjrdhfjrwr7i87p2lgpjcutjkd9dcv0gdehq3wcys51k2wowmu0078q4kp9hepf2mc2c7amcx3ww9ogzhaldsvwervj2b0kvnirtviawfejftb4ba36ycic3hkwko70oxk\", \"dhpjn4yamp0tg73rtivjqjpgxj7bokvisbsmor4bujkcib0ud7a392k0stvs2rfvmokf5ijuter290zc95lma6cckhz9ohjrh0g6z5jhgk60yd525\" ],\n    \"verification_code\" : \"ii9k1adv1pzkbpvkinkv1glytln00nj7sb0jr0c5tzt2gkz3o2bh4hj2f9z2oc49ahnls0f466o9gdskkg0\",\n    \"email\" : \"0lvfgvi8inwyycbwa70pktst97k5m8dz62eh0kmxfgten4zf35zhpszki9aq0nm4adcbbzk6ux3nqldv6ote8ldhbuxjs131m0htqew8y9pog1m98nvykfflokrvq9ptfldzo\",\n    \"incoming_phone_number_sid\" : \"PND97B6E51Ee34bD8e1eB1a74aa4f82FAF\",\n    \"status\" : \"carrier-processing\"\n  }, {\n    \"extension\" : \"ah4jge8fzq68swi5k41wymif3erxwbabksccodjesewnpf3lxg2w34y9nyidmjmkv3baj6w8rf5m4h9w4qcfce3n\",\n    \"friendly_name\" : \"Muriel Hansen Jr.\",\n    \"verification_attempts\" : 3732333151026090394,\n    \"call_delay\" : 1462062955132510902,\n    \"capabilities\" : {\n      \"voice\" : false,\n      \"mms\" : false,\n      \"sms\" : true,\n      \"fax\" : false\n    },\n    \"date_updated\" : \"2024-02-01T22:34:13.981Z\",\n    \"date_created\" : \"2024-02-01T19:45:46.981Z\",\n    \"verification_type\" : \"phone-bill\",\n    \"failure_reason\" : \"k2wzewesja8u5h25ygzcvzp8ootmg3vgv1wwfh6mzw67pjmbgn9jml2vrc9odsl25ddygt6bnj9j19jkm1h9tsqrswwakoedka1xrkbvqkh40vx7w5i\",\n    \"address_sid\" : \"ADcda961B6a8A5d2Fc5Da331cBC3Fe8ADc\",\n    \"sid\" : \"HRa92502B8EC1C6CDCbaD6B0AD90BEAf00\",\n    \"verification_document_sid\" : \"RIb0e6bCbFC5D40DE8D6ba28ce44ab35c4\",\n    \"unique_name\" : \"Farrah Weissnat\",\n    \"cc_emails\" : [ \"jovshqin816km42a7x2ml3mt9r8rlzzn83g7e8yayg9bufiye8vhojyjcflsotmizbpug3n8i5ocms2hh6loh3benv5n6jvrb5pf557hs49u35oojf8snyz2q67csuc2srpve45pdq6qugyvtk6c868n5f8awabe7b\", \"jw7xb8zch0axvbsdmdxmvpk1z2rvjxsjzwlvtjug3ljvl1c283k\", \"kxmra4ncx4276mcd4663ryc51ugkxqfn9bwjvbe20sb00pn5fyf21h4mmqg9xnc62tptv8gkohoerm2nrq5ta9a620zjsxnjni9\", \"t9n58bodug3yjmwnr5t\", \"z4idpqcsi2sb\", \"z1zv203ixi8h40bg1q95wuarvqcqj5xglhsihs8ds6yg67k82ig3394qh4ta99nuufjks44pffr3dria9pwjr6r1y20lml41b\", \"0asqjp261sx9b2pe2r812rewj0zrm2bgim168rxm4i55d5fpljxmrne5e61wzc0duvrl6e7in5mcav9pwx2z7ujfy7ki0yowtwvy53x7yirutm03obilj5zq15aoq4jo\", \"4kji8i7r32tsufc784an6wh4p\" ],\n    \"signing_document_sid\" : \"PX81A93De7A35abEfE2DAbF04beb3ef56E\",\n    \"account_sid\" : \"ACe5ddBf258FcABA9F2c693550cE98eEd5\",\n    \"phone_number\" : \"877-151-2586 x0677\",\n    \"verification_call_sids\" : [ \"3869zy3j5fr4kaitfpx8xzmf9vwuoqawi773y01smdptjlnpps8enhw63q9gtq6jbn465zla2mqxrazbvjjutn69qdcmjqqi71wxd0q2qp0eym64e6ci1k77bx5c0sfuhp65j0g31qthvyuzxspwp6nc6drl225pjun6yxr9oayxitx09pv5w07wyuw2wyf5bpooukw\", \"wmfbzh3c8m2uhyz0ap8o3zoft4g3jw5tz19k5a5ag8b8r0okggnxhtyyff5147pcgdxzt9lswxh7oqoq2jv66ngtaewbd05j43ha1jtgsc2wfaejl23tvtpqbepwbpqefv7i76o93prb8afes0\" ],\n    \"verification_code\" : \"70b1skl778u99x21psj9mv79rgo4kzk13vmby5eyleuxhqh9epsmm6lta7f6etdt2h2t4jypav5fpmsxwz9aqsbj3n7g273b8gdo52xqgrz2hv36gmz59xv1ilcq49b3qjb7uaire7offrtiwx52lprhjcz79\",\n    \"email\" : \"q03sn2llze74z8e16gwag6r3dzp1gpmlbgpypayzrp586bkx\",\n    \"incoming_phone_number_sid\" : \"PNbF6dCBc7Ae98BAd7f24AfBEBD542c7Ee\",\n    \"status\" : \"pending-verification\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5dd6381-63ca-3365-83df-574bea2c1896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListHostedNumbersDependentHostedNumberOrder",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.hosted_numbers.authorization_document.dependent_hosted_number_order"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListHostedNumbersDependentHostedNumberOrderResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "334be283-f694-3e26-84ff-6b6890a46b80",
    "name" : "Updates a specific AuthorizationDocument.",
    "request" : {
      "urlPath" : "/HostedNumbers/AuthorizationDocuments/PX7D2AFC947CC4AEAB9ea511eDea5745c5",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2023-04-01T21:48:29.979Z\",\n  \"cc_emails\" : [ \"bo409z2mz2qymy4kt38l8i4jey5ka1js0xnouc29h8pa7ks8ajy4u2fy5ydt00iyoj732o65rreerxjtwu132zfomm1jkhvvl4xjdy3u8ge446i4frzu6\", \"hldf7bjyy6zoc3psajmoh9soa83pk00bvv30tewwd6anul7l5y9\", \"0urtlpqtb8dk6qcfhov1dgau3gr4bra9kh9kwcz62oc1o76dsd93b4i408ui8k7i6tgm2zy5zlgehhr6r6bbiqp5j1pb\", \"lekc6fjfra66818r2c0unz3faz4owsk47bd2hfm04wpze8q4cnsmmmfb2rto8v5s68u5g8gztzqfmd0gv735b4z9viytkvw0klf5ggs3czjd3khy1i4ib99wqn15kddt8242o9\", \"6kc9plwp96yw7klpm072tnzfafdov9dbkb80fppe8rg8p77kbl17ovqmkkyhyd7n3gt\" ],\n  \"date_created\" : \"2022-03-17T18:01:31.979Z\",\n  \"links\" : { },\n  \"address_sid\" : \"AD32B7a7e9dA2d5c24425Fdcae5CbfCb79\",\n  \"email\" : \"tplmulm2wilqe4prnurk8u1v88si7swuwm0t9egkkpgx2g9j0vbqve1jjznm05qsk66s9e6cq5i0d2tbd7bvmi1ox9thyihf29j6r8zbui0vf3lbskg1kify0ezzh8b45599m8e8d3pc4k5ebnqpivq88pgnhs2i08r8kmxretlycgao9bkzc79errif1pkyaej2n\",\n  \"url\" : \"https://web.example.mocklab.io/693843\",\n  \"sid\" : \"PXB2d357Db9DA545A27Bd6629FfB45a1b8\",\n  \"status\" : \"signed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "334be283-f694-3e26-84ff-6b6890a46b80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateHostedNumbersAuthorizationDocument",
          "schema" : {
            "properties" : {
              "address_sid" : {
                "description" : "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "cc_emails" : {
                "description" : "Email recipients who will be informed when an Authorization Document has been sent and signed.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "date_created" : {
                "description" : "The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "email" : {
                "description" : "Email that this AuthorizationDocument will be sent to for signing.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this AuthorizationDocument.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/authorization_document_enum_status"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "8fbc5220-7459-3cc6-aaa4-ffb99e3d34aa",
    "name" : "Fetch a specific AuthorizationDocument.",
    "request" : {
      "urlPath" : "/HostedNumbers/AuthorizationDocuments/PXDaBc73B9853e3C7d0AeC2fED3FA87C9a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_updated\" : \"2022-09-25T19:54:23.979Z\",\n  \"cc_emails\" : [ \"pl3w9d36qhwkm0hy05j9gwmjveh71lvshqzvi2z6d8p8e1n44i1lbzdkxlvwmmno19swut3mxyl0dqqiln3t4jbv5u679ojili40ju01qvpncmn4lseq068f887whvu69wuw09tn06s7qy6gqhgx5iv1a294q0ddpobuiinmrwd73xe\" ],\n  \"date_created\" : \"2022-12-14T11:45:42.979Z\",\n  \"links\" : { },\n  \"address_sid\" : \"AD8A7A97f6dd47E4bc2dc53A0E1ad4cAbc\",\n  \"email\" : \"hzoziwgyqzcmiek7hhlf21pznkybxm664cf7rni6er6kgtlzfa64077ajr3s0g5zcurfrhi4wmzhap2myizraip5py0vu0tpzpxyhrfpm3xg8alghqvop8nonmadovpwv2w1udmcmienx08hgl6\",\n  \"url\" : \"https://web.example.mocklab.io/358542\",\n  \"sid\" : \"PXFea391C53DDabfBbA5B973c8Ed3769f7\",\n  \"status\" : \"signed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fbc5220-7459-3cc6-aaa4-ffb99e3d34aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchHostedNumbersAuthorizationDocument",
          "schema" : {
            "properties" : {
              "address_sid" : {
                "description" : "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "cc_emails" : {
                "description" : "Email recipients who will be informed when an Authorization Document has been sent and signed.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "date_created" : {
                "description" : "The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "email" : {
                "description" : "Email that this AuthorizationDocument will be sent to for signing.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this AuthorizationDocument.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/authorization_document_enum_status"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "fb559a8b-b42b-3dfc-b56a-5c98ab5921da",
    "name" : "Create an AuthorizationDocument for authorizing the hosting of phone number capa...",
    "request" : {
      "urlPath" : "/HostedNumbers/AuthorizationDocuments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_updated\" : \"2022-12-12T20:22:38.979Z\",\n  \"cc_emails\" : [ \"rez041dwzd\", \"gqwjs4xuanqjwhndj09nu6c57n9dutip6prmd98czbh56ndcspg6ie87mtrnxz0hwwzy8pjfk7nlzesxzf38ucaxn1e15w9ddatu9p2wq78qu6o8z2xwxrnt3jmfusp95nlzctt940bsx2qicj82tpq4onmz3m884kjpd98j39hsfn0hz4dvco23xevs6j78r\" ],\n  \"date_created\" : \"2023-07-17T11:04:03.979Z\",\n  \"links\" : { },\n  \"address_sid\" : \"ADB2283BDe78945b5F5a6aC2cf2E3aa9b2\",\n  \"email\" : \"vfambylgn8z1nnlucjf48nsggeq870ox8o2xbcta7vfh0mth0t1cbttdbdpfr2mpwdbrfr0maz241oh7ltvsrkewk3hzu251vp5mhpddx8s6am\",\n  \"url\" : \"https://web.example.mocklab.io/177123\",\n  \"sid\" : \"PX66016fEB2BDD63Dc4dFa150eAC5FE4c0\",\n  \"status\" : \"opened\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb559a8b-b42b-3dfc-b56a-5c98ab5921da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateHostedNumbersAuthorizationDocument",
          "schema" : {
            "properties" : {
              "address_sid" : {
                "description" : "A 34 character string that uniquely identifies the Address resource that is associated with this AuthorizationDocument.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AD[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "cc_emails" : {
                "description" : "Email recipients who will be informed when an Authorization Document has been sent and signed.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "date_created" : {
                "description" : "The date this resource was created, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was updated, given as [GMT RFC 2822](http://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "email" : {
                "description" : "Email that this AuthorizationDocument will be sent to for signing.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this AuthorizationDocument.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^PX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/authorization_document_enum_status"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "b8aafecc-15bd-38a6-996c-846e8d26cf02",
    "name" : "Retrieve a list of AuthorizationDocuments belonging to the account initiating th...",
    "request" : {
      "urlPath" : "/HostedNumbers/AuthorizationDocuments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/612135\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/144677\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/497642\",\n    \"page\" : 3085204021415338826,\n    \"key\" : \"6tdpwwwek\",\n    \"url\" : \"https://web.example.mocklab.io/835332\",\n    \"page_size\" : 3807602444897741286\n  },\n  \"items\" : [ {\n    \"date_updated\" : \"2023-01-12T10:50:00.978Z\",\n    \"cc_emails\" : [ \"eo1emp254uvhiq6w877jnhvfcwa2r8y3sc2m7up8soz8ypaopmbvnfxrsd72i3li8mn6f3aq7jlrt5q3ikjw872jccc1ad5yqaa62bpdqpa3guzpqeq715rbx7h65aenevi2j86rjqtb2jkerfk8jmonk2zj49vdldcpy0wq\" ],\n    \"date_created\" : \"2023-09-10T18:15:31.978Z\",\n    \"links\" : { },\n    \"address_sid\" : \"AD8cea27F9eF073C81AAAd9DBb9A60cB39\",\n    \"email\" : \"8p7ryporjsa4n93nu7tqle11l11owrzrq4r6sghzfm7tvrahaxugxz9hav6bhrwqhj2ue\",\n    \"url\" : \"https://web.example.mocklab.io/628884\",\n    \"sid\" : \"PX3ff598b6D28D0CDAEc08F5CB12c67Be3\",\n    \"status\" : \"failed\"\n  }, {\n    \"date_updated\" : \"2022-09-10T20:51:28.978Z\",\n    \"cc_emails\" : [ \"d6imj3ohjszluq2a848qxad78ga846vxc7uliaq7wzuejnwity3sj65q19ur7d2uw79rh9lorecqucty3u\", \"cp6dahb7mvbn3p1udrr34vtw32cewlqkhvtf5yr0eufjvh5xfh5yt5icxyxggj92kkhoszbs0ll\", \"4w77m4bk16jz2etjb2a2nqat5\", \"hnhiecqiacy5x0834gc8nz70a2mv0k6ktoo35fzemdvqjy2yzeisdqujipdedc1rgvu83yoe6jzctto9ny19x2xak8nbafn222jv2k7t30r9woz6dt54zzu99jjx5jfep2iettn9py7m4bt1tzhbve5vky8vjvpeivpnva1fbuiou7ccaoe0xigmy1ri4060s96wmr7\", \"ifpn2btgnjo9447dj3w0t0fr41ee9ween93xkzvakl3agxi0cheusimgaia2kdbae9qk6zwow60aif1zdbgrqhubf\", \"b90dmqzm7frqod32j4fq6m0qnelvbknftmbpisbwno0br0gnuec2m347e968tmdnepka6oz9atep0z9ot4wo50pjfxbzb6hy13s9czeft5mzvhaaxrj7ndjw1un9wg0lfzmlbgllvgk2\" ],\n    \"date_created\" : \"2023-04-25T04:33:59.978Z\",\n    \"links\" : { },\n    \"address_sid\" : \"ADEfbf889a0cE397a4dcf3300C7C6112e1\",\n    \"email\" : \"m5y7lcse93nxdi7vpwztwfg2zork24fo2u35esuuaykxu6lt86q82tbirkd94ukiqm1ijxvaqhstxrarumgnm17bufnc37nh2mgdidb5r85k7hhhqj8nqj5lp881t3xjze4r\",\n    \"url\" : \"https://web.example.mocklab.io/846798\",\n    \"sid\" : \"PXc7D1795CBa4A7F4164Affb9dB3817Dd9\",\n    \"status\" : \"canceled\"\n  }, {\n    \"date_updated\" : \"2023-04-26T06:17:57.978Z\",\n    \"cc_emails\" : [ \"can02nllx24ha0z4n3yas938y4u3b3oepk6ypywfkvwt4glw4i0qaye4qkmxqvfqxw9lz6wijbd0z652zd5iudcq9oxrujh6cexj9udluifufx727n9iru1fj28eyureeul6fyb86bgr45bip9befyl6awy2t8ax4jevlm60qzd7t69s43wac\", \"fe9f8lfy6ql65kf8rbsrvcd2wpq3f73e59vwj5jnlp9gue9aefe415mh4c7i7tu86ihcmsd1383qfm59uee8q8uqrfbe7rstv9o6pzsjex3ueq\", \"11jngu85edb27ctanvd6njeesf6vx2yangu62ddkqg84zegpbdq9bcmmhxz11uaey62yh8pdp3qnxwny35hbhby2siffdl0xo5avww40r3t5ollxznykegss2a2y9o86bb21zohk07119yfbrma85bx76080wppf0pikfgwewdazj9hgy7cffdg175iaie0g7eis7k\", \"znbfjp6g2d618g0pe9g76hhd1iht40q6spjgm13pjmws6pb104dnd1jeqdvg5z\", \"ntrtcskx2atbwi6inpt73n33mrm06jf8qk56hn4vbq4o42a6rx13w5t4mj2xxvocvls2vl6gzkt6a3h77xswbg5b75l8b97fz505\", \"ry4co91j22c8v1cae99z6pl6k024k8ud1h6fjoruvnjkyzonel3wunccxaujfy1mcmss2e3s2n27eo4t6smvlda7vlhr18edlkm85gdlb1l1jwzypq791ilytvep62gln333s9dd7lhr1nl3rzlxzj83ra28iangfj4krcwsdbikk8m19smxc\", \"1dufic4417bsoiaxb70pss8tes0g8g2siy6pb6d669kwecuxshrikd4\", \"1q95d8zd1gcs6qkqafmp8rtv351ujizn2z3w0csfdq7580am1bcoh71nmijdyf98hvprnmlbolni22hqpg78fvw37k5eklaz7rzehpzkzxnz5tdwumtmuf2sltaxssb67t6suupsa0t57ojar69dume8ikeaf7nu3no53tw21rsjadbi6\" ],\n    \"date_created\" : \"2023-02-21T16:59:43.978Z\",\n    \"links\" : { },\n    \"address_sid\" : \"ADcdefE4FCC97dc28aFd7Bf0C84BB3cacE\",\n    \"email\" : \"ehsyc6rsu5mhq6g1s0psafgcz4wi62peu2owwnfb1jwgftw0zncv960h3tsjjs5fhx8qushqogc0ql5c6vuwah6v580a0bbbuvdu0fjlh1xc2d1d6g726h4k4c4\",\n    \"url\" : \"https://web.example.mocklab.io/644491\",\n    \"sid\" : \"PXC1a51E6DE8BfDcC3a207eEA456F67FBe\",\n    \"status\" : \"canceled\"\n  }, {\n    \"date_updated\" : \"2023-10-09T13:00:52.978Z\",\n    \"cc_emails\" : [ \"5p7pdyghosv278ab6y54q2opnqhdookptitkfaheqptloojoe5rv90g47htk5z3pdongc3kcpgn55exgc33g96cizt3aj6gd1fij36yay4r2d7q1b4qvdzdqxsabia6h1a\", \"ksbhaou01kivng5ayezomn2ibhb99stt2ocgf8b2npr3h2lfh0jvrr05pslynvvj3s352x62ybrmsu3sv47yyms3iy5felqn2hqvx7u57ivjywzrbm5h5g02n7mlknwnhl77ue\", \"ytj4zbq1mpehnxyfkuap01azlmx27bjmtp54ao7lhu08agblqyu1joz24dob33jo\", \"l5mkd9l6265z4vc714e7v8pz3j3oigala0kzn9sdq2l6z4etoegn8upn2bi0j4cdjv7pdj3y1zkzkshvrfp65wnvf7x0psw2nefgx2xbdrw30u9lgapmpizs67gt3xk8mj4t3fvtogz3\", \"v9865380x0opbik1jffw962mfy2f17hfwpky39oiyzzp0my3g4qh8in878hhyp6g292ukg3v184axjgp433nx8aqrktx0qikt8g0gq6om8y66\", \"j6cf4ueuoath4lbw2juyepiozr82q06kmp24joesof703i79ky9zbsjhcqu0dlz7ddz63ldlvirpecuqp8cs715ktm6pvl9lhe1a4bfj3wb8\", \"06hnwd7i4sfi4ouc8mw44a8uvf6m1982mmez1rtema3\" ],\n    \"date_created\" : \"2023-12-17T23:38:23.978Z\",\n    \"links\" : { },\n    \"address_sid\" : \"ADcF378F29B7a96FFD22CF43D2eb3b6fcb\",\n    \"email\" : \"s9lh4wmqrfiwo4tpzuhtm8hun5\",\n    \"url\" : \"https://web.example.mocklab.io/803887\",\n    \"sid\" : \"PXd7d45DDda6B2DDc0eEC71e2D8Fde94e7\",\n    \"status\" : \"canceled\"\n  }, {\n    \"date_updated\" : \"2022-06-10T11:22:20.978Z\",\n    \"cc_emails\" : [ \"uouaqif0vzg7i6wr9resxt5muejr82wqw2lj41np9u57uxrohz75epu2wszio9rjh0tu1f6jrh52281e3k7n8ifjbukldt8g0ebj1vb2c14o\", \"lr7bscrx6rmfek32hz3eldt4fhhc4yic4vmoz4w1giuxaix8bztbdlm7tdx4en0vu3d5o227246srv92msh15lt5kznvihmzbmox1d0mkb4r0fae9qkd7s8bi4549fo0qs7dlxncm2r36tx9upodqrcxhuqjealmoq2o\", \"jg3sx8t9obnmcf3q40aiugi7eko4cycnk6yckvjaludzu78dbdma2xy4s7md67qzyzlhy2vupi02mfd6tbldsfj2z0fr08qbaz4bxtauo60771hhcrprcstb7grst70r90fac4jsi7uydkqsv9wgr7rzvnj1u7cwdkry4o7c65kv10m45t1d9\" ],\n    \"date_created\" : \"2023-10-08T02:47:31.978Z\",\n    \"links\" : { },\n    \"address_sid\" : \"ADF19EadA224Ee9DBbA99B60966490B45F\",\n    \"email\" : \"3mm6qn2fcofd3m5c30dhdmldsuapehkx70th5junzhn80yizddok\",\n    \"url\" : \"https://web.example.mocklab.io/417314\",\n    \"sid\" : \"PX09FBeF03bDC3e2bb9353cCAeF83FE357\",\n    \"status\" : \"opened\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8aafecc-15bd-38a6-996c-846e8d26cf02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListHostedNumbersAuthorizationDocument",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.hosted_numbers.authorization_document"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListHostedNumbersAuthorizationDocumentResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "da3428f3-7eba-355c-8cbb-41a0c9f3e67e",
    "name" : "Update the friendly name property of a specific Fleet in your account.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/1490",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Jamie Ritchie\",\n  \"unique_name\" : \"Charleen Friesen\",\n  \"date_updated\" : \"2023-05-01T01:17:16.977Z\",\n  \"date_created\" : \"2022-09-11T11:06:18.977Z\",\n  \"account_sid\" : \"AC17bBf19EE5AB8BEdef6b0FeaF91f80eA\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/028123\",\n  \"default_deployment_sid\" : \"DL5268c353F2E351D8A9A4bDD50Cafb35f\",\n  \"sid\" : \"TH0920Ab74A3CBA96398990CACE76b41c6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da3428f3-7eba-355c-8cbb-41a0c9f3e67e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployedDevicesFleet",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Speicifies the unique string identifier of the Account responsible for this Fleet.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Fleet was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Fleet was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "default_deployment_sid" : {
                "description" : "Contains the string identifier of the automatically provisioned default Deployment of this Fleet.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Fleet, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Fleet.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Fleet resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Contains a unique and addressable name of this Fleet, e.g. 'default', up to 128 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Fleet resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "a7bea0a5-3fec-3d93-95a8-6e18dd7054bb",
    "name" : "Fetch information about a specific Fleet in your account.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/705m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Saturnina Jacobs\",\n  \"unique_name\" : \"Sanford Raynor\",\n  \"date_updated\" : \"2023-09-09T02:32:37.977Z\",\n  \"date_created\" : \"2022-04-24T03:46:35.977Z\",\n  \"account_sid\" : \"ACd56fA2AD29DBa79ad5d915eDFCbb1B9a\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/781433\",\n  \"default_deployment_sid\" : \"DLCB61a81f6d11B2D5c732F8FfEdFFDc35\",\n  \"sid\" : \"TH093CF0F360Cbf3BeE6f1d1CCC6Dc5A6B\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7bea0a5-3fec-3d93-95a8-6e18dd7054bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchDeployedDevicesFleet",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Speicifies the unique string identifier of the Account responsible for this Fleet.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Fleet was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Fleet was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "default_deployment_sid" : {
                "description" : "Contains the string identifier of the automatically provisioned default Deployment of this Fleet.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Fleet, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Fleet.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Fleet resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Contains a unique and addressable name of this Fleet, e.g. 'default', up to 128 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Fleet resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "b8760df5-e0df-321b-a0b4-72420a24f60d",
    "name" : "Delete a specific Fleet from your account, also destroys all nested resources: D... - 204",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/x84l",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b8760df5-e0df-321b-a0b4-72420a24f60d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployedDevicesFleet"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "fba47bd0-cc1b-3ddd-ac01-0da44a0a0e6f",
    "name" : "Update the given properties of a specific Key credential in the Fleet, giving it...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/0n9z/Keys/KYe0FdCe95fe8dE5D5C9FfaCe7295f5652",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_sid\" : \"THC5fCFB855cD120E9117B9dC7ecB3ebed\",\n  \"friendly_name\" : \"Marlys Legros\",\n  \"date_updated\" : \"2023-07-09T19:37:05.976Z\",\n  \"date_created\" : \"2023-01-09T21:38:05.976Z\",\n  \"account_sid\" : \"ACb3Af80BdAa91d0E0DfADF4D1C48cc2e4\",\n  \"secret\" : \"wt4q6d0n8ywzanhx7cennjwn4rligqocf4wt1mbljhd4x7ytxhwwwkuf95ze83rksvtq2s9eaz14cjnljkahtgelk\",\n  \"fleet_sid\" : \"9v1i\",\n  \"url\" : \"https://web.example.mocklab.io/521795\",\n  \"sid\" : \"KY3A479236A2e1DaDDbBf9cBF4F3CEc77c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fba47bd0-cc1b-3ddd-ac01-0da44a0a0e6f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployedDevicesKey",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Key credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Key credential was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Key credential was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "description" : "Specifies the unique string identifier of a Device authenticated with this Key credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Key credential belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Key credential, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "secret" : {
                "description" : "Contains the automatically generated secret belonging to this Key credential, used to authenticate the Device.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Key credential resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^KY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Key credential resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "1fd7cf31-034f-39e3-a1a2-0391cd914eb9",
    "name" : "Fetch information about a specific Key credential in the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/8m2o/Keys/KYfd0548565bDD7D4739AAEc36b1AaEc50",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_sid\" : \"THCf0B63A05f33F96503aB0DeFfe2f8d5f\",\n  \"friendly_name\" : \"Bella Christiansen III\",\n  \"date_updated\" : \"2023-12-04T22:43:10.976Z\",\n  \"date_created\" : \"2023-06-23T21:25:21.976Z\",\n  \"account_sid\" : \"AC3438D80e9091E1D4cc26a3bE050E3Ac5\",\n  \"secret\" : \"c3d5oq5298sm8tu4s6iepsk50ihkk6274l31h\",\n  \"fleet_sid\" : \"u48i\",\n  \"url\" : \"https://web.example.mocklab.io/285367\",\n  \"sid\" : \"KYDC1601ca6D8a7cBed0E8fe29A7C92db5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fd7cf31-034f-39e3-a1a2-0391cd914eb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchDeployedDevicesKey",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Key credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Key credential was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Key credential was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "description" : "Specifies the unique string identifier of a Device authenticated with this Key credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Key credential belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Key credential, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "secret" : {
                "description" : "Contains the automatically generated secret belonging to this Key credential, used to authenticate the Device.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Key credential resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^KY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Key credential resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "6111e909-b2f9-3135-9187-ab7ba8e601d5",
    "name" : "Delete a specific Key credential from the Fleet, effectively disallowing any inb... - 204",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/1i06/Keys/KYDcd202EB5a6472c3eBFb15ECC0551CDb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6111e909-b2f9-3135-9187-ab7ba8e601d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployedDevicesKey"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "f4cf2aaa-c928-3122-bad0-d65bb4db3a3f",
    "name" : "Create a new Key credential in the Fleet, optionally giving it a friendly name a...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/fah8/Keys",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"device_sid\" : \"TH64CfB47de75b2e9f4AB45fAdbB8fb5AB\",\n  \"friendly_name\" : \"Chung Emmerich\",\n  \"date_updated\" : \"2022-05-03T22:43:50.976Z\",\n  \"date_created\" : \"2023-05-05T01:19:02.976Z\",\n  \"account_sid\" : \"AC3460d91cdEab314e5D4af382aA2EaFBE\",\n  \"secret\" : \"3fti670jjl8lm4nlok3wtqmj9fn7ppxk0m7m5fcd5y4uydvrnuyg5ktxkbco04jjjlkj0knw1bi9a3f83abj8whuv6slznerwby4g140t5l94bmjy03lxidrcoz6tsuvzdgz8mp6vc9szg9dik4ptzir\",\n  \"fleet_sid\" : \"c6dd\",\n  \"url\" : \"https://web.example.mocklab.io/917580\",\n  \"sid\" : \"KY8bED90Aa5f5A5eC5EbbDdE570A0CA0DD\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4cf2aaa-c928-3122-bad0-d65bb4db3a3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployedDevicesKey",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Key credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Key credential was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Key credential was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "description" : "Specifies the unique string identifier of a Device authenticated with this Key credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Key credential belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Key credential, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "secret" : {
                "description" : "Contains the automatically generated secret belonging to this Key credential, used to authenticate the Device.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Key credential resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^KY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Key credential resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "348dd339-df1a-31a5-8f6d-df52cefbd9fc",
    "name" : "Retrieve a list of all Keys credentials belonging to the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/8xbe/Keys",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : [ {\n    \"device_sid\" : \"TH2C9cA9b8226eA5D68eD3e334bdFBB2Eb\",\n    \"friendly_name\" : \"Madaline Daniel\",\n    \"date_updated\" : \"2022-06-18T12:00:41.974Z\",\n    \"date_created\" : \"2022-11-20T07:02:59.974Z\",\n    \"account_sid\" : \"AC86AeCB128a95FE925f1C2f8Eb53a6Cc9\",\n    \"secret\" : \"ddtcp0ie8lvn39ajnks77mfk8ml7vtjqr3h4wmiq4spelaeqwbem45yqkl2bfafxuo7kb8lvlb2xk9xy8v12v48z7to2zkz10w7y4ohenllkq60ijnqvte70hfi26t4s7qo7lx7qfjf3x91fr405bna5rudkmbu9u3qa\",\n    \"fleet_sid\" : \"2jp8\",\n    \"url\" : \"https://web.example.mocklab.io/875939\",\n    \"sid\" : \"KYB173fe0ac028F6DA2E8b6773AdBDAFDE\"\n  }, {\n    \"device_sid\" : \"TH64dddD785B516C45cBC6a92DaCFa0A7c\",\n    \"friendly_name\" : \"Randal Spinka\",\n    \"date_updated\" : \"2022-12-18T18:01:30.974Z\",\n    \"date_created\" : \"2023-07-12T23:26:38.974Z\",\n    \"account_sid\" : \"ACb0aAcBCBDCebFbaeC3DA83555bC3e0E7\",\n    \"secret\" : \"bwes4dxiofksry5lhizz4cwamy6i531p33s9d5op4bammis\",\n    \"fleet_sid\" : \"54uq\",\n    \"url\" : \"https://web.example.mocklab.io/060276\",\n    \"sid\" : \"KYEb0fCe439AbBCfcc29c7fcdaFc03a6D1\"\n  }, {\n    \"device_sid\" : \"THf24ce4FbfE9d03F8E2A4Dfb2d24deAFe\",\n    \"friendly_name\" : \"Lavelle Abbott\",\n    \"date_updated\" : \"2023-09-03T23:52:20.974Z\",\n    \"date_created\" : \"2022-08-29T16:21:01.974Z\",\n    \"account_sid\" : \"ACa1dDC5c7a19681bcA4F326F91fDdcbfF\",\n    \"secret\" : \"2ahi247n06zft17092c1mm3aa5kn3lboes0eiidzzhau74u6cnd90hu5rokycikbncqz5shw40cuaf4fj5gj16l010e4i0ndkg6r3knxfjrf6e04cr4brojom32t4dygvu2gpwvugiyu66ncde152j9gj791r02120hdzg0pmtt529t10jr\",\n    \"fleet_sid\" : \"v629\",\n    \"url\" : \"https://web.example.mocklab.io/223863\",\n    \"sid\" : \"KY3E13bfC92Fcb2C3b4daC41DCd5EbE7b7\"\n  }, {\n    \"device_sid\" : \"TH83aEeFcbbDDF5DAE2b3ea1e4464CCc3D\",\n    \"friendly_name\" : \"Dalene Gutmann\",\n    \"date_updated\" : \"2023-10-29T10:00:44.974Z\",\n    \"date_created\" : \"2022-10-21T09:22:05.974Z\",\n    \"account_sid\" : \"AC718ecFC1B1F528E70aCbeefcD403931d\",\n    \"secret\" : \"p66anusc7pk9cjes3rapo\",\n    \"fleet_sid\" : \"ak15\",\n    \"url\" : \"https://web.example.mocklab.io/992474\",\n    \"sid\" : \"KYaADb85138392ddF5Db1cfad8333efced\"\n  }, {\n    \"device_sid\" : \"THB2A3368b66EFB2C5C107b6afED1ec7dC\",\n    \"friendly_name\" : \"Valentine Thompson\",\n    \"date_updated\" : \"2022-12-25T02:57:40.975Z\",\n    \"date_created\" : \"2023-12-13T01:17:39.975Z\",\n    \"account_sid\" : \"AC5abEB266CCAFf5b02Db03B1eefd6acaa\",\n    \"secret\" : \"ilebs209tmwym4ki0l77usqq1wb37zeztiv8a48cde3c6xa86sxcu1s1nxxtj8b973emtq4s1emrdzc8ic6bx4k7b94vxkwgp72sqjld2fzofeseuiz05peoxwkkc7nuq7pi10tfnkfmzq4q50rho3ise0d4fhihyu5le5m681xy\",\n    \"fleet_sid\" : \"r53f\",\n    \"url\" : \"https://web.example.mocklab.io/453051\",\n    \"sid\" : \"KY7c2C8fF5e0CbFCe0d332DBc2F9fDBAf3\"\n  }, {\n    \"device_sid\" : \"TH8cC6dDcA4CB0cecCD5fC199eE58e3a06\",\n    \"friendly_name\" : \"Terrell Sanford\",\n    \"date_updated\" : \"2023-08-17T07:03:37.975Z\",\n    \"date_created\" : \"2022-05-12T04:03:58.975Z\",\n    \"account_sid\" : \"AC102DBABecEB1a8FDc2DDAd0BF2cEc059\",\n    \"secret\" : \"fz1h1vsru83tutawcobc41e6u5donrnrjxg4vqk70zluxohz321ndnna86m39\",\n    \"fleet_sid\" : \"z8c7\",\n    \"url\" : \"https://web.example.mocklab.io/979111\",\n    \"sid\" : \"KYc52877A5C3e3BfDB0670b8cF4FcE0DEb\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/194698\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/050054\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/101129\",\n    \"page\" : 6672134625052899925,\n    \"key\" : \"lcyehzloa4daddwatizruqds56vdcqzw8hof0cs42wshxfpb1u4kadpqfvd2qwiw6gws2jd0yoieubmp1ihjzjtg6pd7jy63nayi4ulyfmgwfwmbbbepq4ikklmwa80hrnrti6ok3kp8lcrcqovp308t0mowsmfwqe\",\n    \"url\" : \"https://web.example.mocklab.io/837737\",\n    \"page_size\" : 499560162611524256\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "348dd339-df1a-31a5-8f6d-df52cefbd9fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListDeployedDevicesKey",
          "schema" : {
            "properties" : {
              "keys" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.deployed_devices.fleet.key"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListDeployedDevicesKeyResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "cd4ecaec-d283-30c5-9c93-f878609a0480",
    "name" : "Update the given properties of a specific Device in the Fleet, giving it a frien...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/d1rt/Devices/i016",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_authenticated\" : \"2023-07-23T11:57:10.973Z\",\n  \"friendly_name\" : \"Cruz Kiehn MD\",\n  \"unique_name\" : \"Stevie Carroll I\",\n  \"date_updated\" : \"2022-11-14T04:06:15.973Z\",\n  \"date_created\" : \"2023-12-02T13:01:36.973Z\",\n  \"deployment_sid\" : \"DLa9afA1a53Ff6F34A0C85DaAdDd90c26D\",\n  \"identity\" : \"ggldtbceybtp5cg5lqxipnt4m0z95bhe6ac2e32opr92cse3z7dpjgtzc7sbqj80rolou9rdsll6nholkzu3tdu4csg54lm46raz9bhim0q7uhz75u0sl0l96y2bwtoyzb3ra7r6opfuoq\",\n  \"account_sid\" : \"ACA4BDbfcf6adaEbEbdFaD94C8220F8ad0\",\n  \"fleet_sid\" : \"4dui\",\n  \"enabled\" : false,\n  \"url\" : \"https://web.example.mocklab.io/387034\",\n  \"sid\" : \"THAAdE3f0afA77f3e9F7AdAE2A6Ffdca4D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd4ecaec-d283-30c5-9c93-f878609a0480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployedDevicesDevice",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Device.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_authenticated" : {
                "description" : "Specifies the date this Device was last authenticated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Device was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Device was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "deployment_sid" : {
                "description" : "Specifies the unique string identifier of the Deployment group that this Device is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Contains a boolean flag indicating whether the device is enabled or not, blocks device connectivity if set to false.",
                "nullable" : true,
                "type" : "boolean"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Device belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Device, up to 256 characters long",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "Contains an arbitrary string identifier representing a human user associated with this Device, assigned by the developer, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Device resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Contains a unique and addressable name of this Device, assigned by the developer, up to 128 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Device resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "61d5aa0b-896a-3ea0-a442-81b7e1331b48",
    "name" : "Fetch information about a specific Device in the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/841i/Devices/6092",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date_authenticated\" : \"2023-08-21T08:49:51.973Z\",\n  \"friendly_name\" : \"Nobuko Armstrong\",\n  \"unique_name\" : \"Dr. Karole Ward\",\n  \"date_updated\" : \"2023-10-10T00:02:45.973Z\",\n  \"date_created\" : \"2023-12-29T01:39:52.973Z\",\n  \"deployment_sid\" : \"DL2F7BA764fEf0bE6650c9439A1A79FB7a\",\n  \"identity\" : \"4tjka7bs7dyfz23208hucws2n8og7423qdys53mlna4uq0jzo2oz7kwg9nrz20vz3v36p1r1dy5tznnul5788o81zfzk9ouz2zdjt07ps30w5w9wt8mu90g2kdz2nw9k8mlzz1wjobyrdgvpb8wdgq06w\",\n  \"account_sid\" : \"AC3Cb7c4A975D0B3c156487AEbcdF7eECf\",\n  \"fleet_sid\" : \"7thi\",\n  \"enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/420402\",\n  \"sid\" : \"THcBFaAAEeFd5CD58a663cAd92B53cDa01\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61d5aa0b-896a-3ea0-a442-81b7e1331b48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchDeployedDevicesDevice",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Device.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_authenticated" : {
                "description" : "Specifies the date this Device was last authenticated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Device was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Device was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "deployment_sid" : {
                "description" : "Specifies the unique string identifier of the Deployment group that this Device is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Contains a boolean flag indicating whether the device is enabled or not, blocks device connectivity if set to false.",
                "nullable" : true,
                "type" : "boolean"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Device belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Device, up to 256 characters long",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "Contains an arbitrary string identifier representing a human user associated with this Device, assigned by the developer, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Device resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Contains a unique and addressable name of this Device, assigned by the developer, up to 128 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Device resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "46f3f407-a7be-3e26-97df-b6075bfa2cea",
    "name" : "Delete a specific Device from the Fleet, also removing it from associated Deploy... - 204",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/454y/Devices/2us1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "46f3f407-a7be-3e26-97df-b6075bfa2cea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployedDevicesDevice"
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "58b77c3e-0aca-37ab-854b-e511372afb06",
    "name" : "Create a new Device in the Fleet, optionally giving it a unique name, friendly n...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/2v2n/Devices",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"date_authenticated\" : \"2024-01-21T21:54:44.972Z\",\n  \"friendly_name\" : \"Lara Pouros\",\n  \"unique_name\" : \"Wilton Williamson\",\n  \"date_updated\" : \"2023-04-01T19:05:02.972Z\",\n  \"date_created\" : \"2023-05-22T09:36:35.972Z\",\n  \"deployment_sid\" : \"DL33415e0bfc8bE8D8C4d2e169EDaF3fc9\",\n  \"identity\" : \"od49qb9dd6jd5rejqnelreg7wtjjrfn2scqg9hbeicjoc3mdpo8jdgq88vpqcti4t1zqc6x8dung5wc00iqag13ngqh0kxdmadgktqua2n0l5khxq9qslek9b7rlnj9jlsrbu9osh8g73p53ydew095lulj18npj5ly1bo4\",\n  \"account_sid\" : \"AC250f7c2dCcDF3Ae72fA22e4eEDAf1fec\",\n  \"fleet_sid\" : \"99b8\",\n  \"enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/321658\",\n  \"sid\" : \"THfdF6aB134c96b0dC7682b9ADd06c3226\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58b77c3e-0aca-37ab-854b-e511372afb06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployedDevicesDevice",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Device.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_authenticated" : {
                "description" : "Specifies the date this Device was last authenticated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Device was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Device was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "deployment_sid" : {
                "description" : "Specifies the unique string identifier of the Deployment group that this Device is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Contains a boolean flag indicating whether the device is enabled or not, blocks device connectivity if set to false.",
                "nullable" : true,
                "type" : "boolean"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Device belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Device, up to 256 characters long",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "Contains an arbitrary string identifier representing a human user associated with this Device, assigned by the developer, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Device resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Contains a unique and addressable name of this Device, assigned by the developer, up to 128 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Device resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "150d4ec8-a83d-34ef-ac2b-65f19ac3b978",
    "name" : "Retrieve a list of all Devices belonging to the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/gaf4/Devices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"devices\" : [ {\n    \"date_authenticated\" : \"2022-07-08T08:22:48.969Z\",\n    \"friendly_name\" : \"Ebonie Baumbach\",\n    \"unique_name\" : \"Franklyn Moen MD\",\n    \"date_updated\" : \"2024-01-19T12:40:45.97Z\",\n    \"date_created\" : \"2023-08-28T16:13:18.97Z\",\n    \"deployment_sid\" : \"DL794829E3cbeD886bC3f63dEA8920cCE4\",\n    \"identity\" : \"h7p3jtjwmvmwplcrl6l4qur4nef7ymrusj2g419jeqey0x0g13rsecu4n47xqky9rb2c41ul77352azijfeeeste1o22blyb0nugli0ofppk7x99tcbw1f42co74sircdr0b3gw2cryb6mao5wtwg4v3fzi9qnhf4rj5keq3gz1f4jep228\",\n    \"account_sid\" : \"ACfBdBfaEDcBaE7a15fc7599a1C4aBeAbF\",\n    \"fleet_sid\" : \"0q34\",\n    \"enabled\" : false,\n    \"url\" : \"https://web.example.mocklab.io/715538\",\n    \"sid\" : \"THa628122b8a274541bbDdCF9FcC7EDB2B\"\n  }, {\n    \"date_authenticated\" : \"2022-04-02T09:36:49.97Z\",\n    \"friendly_name\" : \"Benito Gleichner\",\n    \"unique_name\" : \"Mr. Collene Gaylord\",\n    \"date_updated\" : \"2023-11-20T15:08:25.97Z\",\n    \"date_created\" : \"2022-07-22T23:41:01.97Z\",\n    \"deployment_sid\" : \"DLFc6Ede88eeCEcA86aAd9A4f10CA8C39D\",\n    \"identity\" : \"iiz1hlfk4x2867tnke0cj9gnin92x94he7mqdzbs8ndf46iteahzidh6xbfdzc157zt4cu53adajaykfv485p5xikg0wysjniut4k7kufn5er6hicqquosc5rsm7h8hs20e0zh59ax672nxy5137fyb9bt7qywvnk18pn12zwytttgmad4zay0xug4828hxqgxzce\",\n    \"account_sid\" : \"ACeB5DDC7CefCfFEeFaCD36daC7e33ebF5\",\n    \"fleet_sid\" : \"1ubo\",\n    \"enabled\" : true,\n    \"url\" : \"https://web.example.mocklab.io/920951\",\n    \"sid\" : \"THcf8B9F17C1574E2FFdBF628502d2c6ef\"\n  }, {\n    \"date_authenticated\" : \"2023-06-05T22:32:55.97Z\",\n    \"friendly_name\" : \"Elinore Cronin\",\n    \"unique_name\" : \"Diedra Carter\",\n    \"date_updated\" : \"2022-12-24T10:36:23.97Z\",\n    \"date_created\" : \"2023-05-13T03:31:51.97Z\",\n    \"deployment_sid\" : \"DLEaF5CC1ef3Ef3EDa41D37a9b515b5dA7\",\n    \"identity\" : \"di7x093l5qjk5h6rd0uv5fwm2wadjbxoyo5gqur44ouxz7ln9fc9x7iyvzofnpxpihp3imnd42zbpqm5ivj1hpi06xmfba7mppzizzgq8hkjt6va9oxxmgou9m6w9mt6446enntpx8z14jiwlybuyi839od4n1ar2j\",\n    \"account_sid\" : \"ACBbDf0ABcb1C76fB1AA4F0Ee5F5FE5454\",\n    \"fleet_sid\" : \"3sa2\",\n    \"enabled\" : false,\n    \"url\" : \"https://web.example.mocklab.io/741043\",\n    \"sid\" : \"TH4a139aa71befE5eA6B4d91E1DF2c3A71\"\n  }, {\n    \"date_authenticated\" : \"2024-02-05T16:40:47.97Z\",\n    \"friendly_name\" : \"Giovanni Altenwerth\",\n    \"unique_name\" : \"Aretha Keebler\",\n    \"date_updated\" : \"2023-07-27T21:11:37.971Z\",\n    \"date_created\" : \"2023-10-29T05:33:05.971Z\",\n    \"deployment_sid\" : \"DLd9Bd7e20FfE0392d4DaFFace71fFEB97\",\n    \"identity\" : \"zy8j4ennw92f13d590wjyh8zf9prb6uxchp3d3y2te3s6hqgh03ylbqc4ld1nhqh1ef26hw6zn6tu17yg4xlu5kxosp1vz0xn6bblvnbikcpr3va98wq3eys8kx7re7uh5ow47lqys1ayj9s9ylcuq4rm1rvq1rzza7jgx5qg0cur2z97kfef12egk4pp0401\",\n    \"account_sid\" : \"ACefcD673a1e4bEaB3D5a3F7cBdcA50E6f\",\n    \"fleet_sid\" : \"h99t\",\n    \"enabled\" : true,\n    \"url\" : \"https://web.example.mocklab.io/144286\",\n    \"sid\" : \"THdFBc3Ce6F26b4139Bc7eF2bbaAa5f2aB\"\n  }, {\n    \"date_authenticated\" : \"2022-11-23T01:54:43.971Z\",\n    \"friendly_name\" : \"Kyla Corkery\",\n    \"unique_name\" : \"Ms. Joshua Schneider\",\n    \"date_updated\" : \"2023-06-26T15:27:09.971Z\",\n    \"date_created\" : \"2023-01-09T22:52:26.971Z\",\n    \"deployment_sid\" : \"DLFcEB7a5A9AeAadE8fCb4C9C688A16be3\",\n    \"identity\" : \"kakyth\",\n    \"account_sid\" : \"AC02A41cd8Fa73df3AbFb4076Dadb2C8F7\",\n    \"fleet_sid\" : \"1x7n\",\n    \"enabled\" : false,\n    \"url\" : \"https://web.example.mocklab.io/868536\",\n    \"sid\" : \"TH6a24d87b4BB01EAe3bc5F16BAeCB8b76\"\n  }, {\n    \"date_authenticated\" : \"2022-11-01T12:48:45.971Z\",\n    \"friendly_name\" : \"Alise Prohaska\",\n    \"unique_name\" : \"Mr. Bryant O'Conner\",\n    \"date_updated\" : \"2023-06-25T17:21:17.971Z\",\n    \"date_created\" : \"2023-07-07T17:40:04.971Z\",\n    \"deployment_sid\" : \"DL17871CFC2fb0a307f0c59ad7Fe813221\",\n    \"identity\" : \"pmq0bn51zq7btuoctyzrmisvtg3gref4w4bh1f29dxnk0hnypgnsau942r4tjhqgha7q4o\",\n    \"account_sid\" : \"ACCC45Aa114CAEE855cE892cb74486A4ae\",\n    \"fleet_sid\" : \"3nwc\",\n    \"enabled\" : true,\n    \"url\" : \"https://web.example.mocklab.io/201037\",\n    \"sid\" : \"TH63AED1Bc921ec7Cf19fe43dA7ac2765B\"\n  }, {\n    \"date_authenticated\" : \"2022-09-07T09:59:29.971Z\",\n    \"friendly_name\" : \"Jasmine Hettinger\",\n    \"unique_name\" : \"Jarod Mraz\",\n    \"date_updated\" : \"2023-07-04T02:44:13.971Z\",\n    \"date_created\" : \"2023-11-23T17:11:34.971Z\",\n    \"deployment_sid\" : \"DLa8e5C683e976f2c7D2dFea4Cf1371F10\",\n    \"identity\" : \"yavfn5umxazgres5pld566xbpvqwy9rond7yny03kaekegzdghommoydo0ujb5msauujtxob1qtnjj8cgl08ifdsds0jsrdrj37ij94m6qipiyezo3b1vwrsb5fxdcp4vyr3i45bye0bydji7l4kwmg8m03winceohtrlyz0xaogftt5kh4er65muid\",\n    \"account_sid\" : \"ACceCe1CbA9077AA39E786031ac34Dec6E\",\n    \"fleet_sid\" : \"p884\",\n    \"enabled\" : false,\n    \"url\" : \"https://web.example.mocklab.io/956016\",\n    \"sid\" : \"TH5FF71DB4f760d7cfafe234c528bBc4ED\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/005632\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/339963\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/880243\",\n    \"page\" : 8896157052984968714,\n    \"key\" : \"91pex00bwb3m5bbjav9hspy4wx26aizcc9w9kybf7q1xzvwas8vpg5a41jxagkozrxpqyhyzbntgm1621r89pr0w17z4ceflb8m2ccg5xs\",\n    \"url\" : \"https://web.example.mocklab.io/084516\",\n    \"page_size\" : 5547476075813162199\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "150d4ec8-a83d-34ef-ac2b-65f19ac3b978",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListDeployedDevicesDevice",
          "schema" : {
            "properties" : {
              "devices" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.deployed_devices.fleet.device"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListDeployedDevicesDeviceResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "e6c3b456-d32b-319f-9109-17a46cfbdfe8",
    "name" : "Update the given properties of a specific Deployment credential in the Fleet, gi...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/k9xk/Deployments/DLDDA00c6B9380c25046ABC5DA9F88Fd3f",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Dr. Tamatha Monahan\",\n  \"date_updated\" : \"2023-12-12T00:31:51.969Z\",\n  \"sync_service_sid\" : \"ISc8a8d2fB3A8bdDB75b29e7b4AF26259F\",\n  \"date_created\" : \"2023-10-17T01:56:18.969Z\",\n  \"account_sid\" : \"ACDb787fEdF113a25C7EEbbeBa4d59cBbC\",\n  \"fleet_sid\" : \"r5sz\",\n  \"url\" : \"https://web.example.mocklab.io/120667\",\n  \"sid\" : \"DL2fAA53B73F7bB9B009E0592ef0f8B66c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6c3b456-d32b-319f-9109-17a46cfbdfe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployedDevicesDeployment",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Deployment.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Deployment was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Deployment was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Deployment belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Deployment, up to 64 characters long",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Deployment resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sync_service_sid" : {
                "description" : "Specifies the unique string identifier of the Twilio Sync service instance linked to and accessible by this Deployment.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Deployment resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "aa07b3cc-4a82-3d9a-9011-3baec4d919b5",
    "name" : "Fetch information about a specific Deployment in the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/9nu0/Deployments/DL06AdBE2ab46EAda4cd04780456FA8bF3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Georgann Ondricka\",\n  \"date_updated\" : \"2023-04-05T06:14:21.969Z\",\n  \"sync_service_sid\" : \"IS7c6a9faFDEA2dE41Be47f9DC2c4b0cDd\",\n  \"date_created\" : \"2023-09-25T03:28:03.969Z\",\n  \"account_sid\" : \"ACBfCf5d2DBBEACfC25bb2DA62bBC7EACa\",\n  \"fleet_sid\" : \"303g\",\n  \"url\" : \"https://web.example.mocklab.io/060646\",\n  \"sid\" : \"DL6cAb973fEcE1EBc54dEfFE813cAD2296\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa07b3cc-4a82-3d9a-9011-3baec4d919b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchDeployedDevicesDeployment",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Deployment.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Deployment was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Deployment was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Deployment belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Deployment, up to 64 characters long",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Deployment resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sync_service_sid" : {
                "description" : "Specifies the unique string identifier of the Twilio Sync service instance linked to and accessible by this Deployment.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Deployment resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "2eae452c-77c4-3c3c-b848-1b54bac8719f",
    "name" : "Delete a specific Deployment from the Fleet, leaving associated devices effectiv... - 204",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/dlp1/Deployments/DLA3ae29a6ab4ED1A019952ccdb4E9e826",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2eae452c-77c4-3c3c-b848-1b54bac8719f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployedDevicesDeployment"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "12e697c5-75f2-3df2-9c46-cf319d55cbec",
    "name" : "Create a new Deployment in the Fleet, optionally giving it a friendly name and l...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/e57d/Deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Danial Emard\",\n  \"date_updated\" : \"2022-04-28T11:54:40.968Z\",\n  \"sync_service_sid\" : \"ISbac9ebeBFc5C91eAABaebFDC32d407c6\",\n  \"date_created\" : \"2022-06-12T19:30:22.968Z\",\n  \"account_sid\" : \"AC5CE753A98C6fcc3a2dB6a0adBf4e10aD\",\n  \"fleet_sid\" : \"k34p\",\n  \"url\" : \"https://web.example.mocklab.io/156999\",\n  \"sid\" : \"DLAFdCa4C1e34Bf61ed16Ecfe6Afb70ff2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12e697c5-75f2-3df2-9c46-cf319d55cbec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployedDevicesDeployment",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Deployment.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Deployment was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Deployment was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Deployment belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Deployment, up to 64 characters long",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Deployment resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sync_service_sid" : {
                "description" : "Specifies the unique string identifier of the Twilio Sync service instance linked to and accessible by this Deployment.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Deployment resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "81f23f6e-bba9-3330-acc7-02a929281ed8",
    "name" : "Retrieve a list of all Deployments belonging to the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/pn6w/Deployments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deployments\" : [ {\n    \"friendly_name\" : \"Mrs. Dora Greenholt\",\n    \"date_updated\" : \"2022-04-26T15:09:26.966Z\",\n    \"sync_service_sid\" : \"IS3d13a6F33f7D1c6b5ceB626b365A1AbC\",\n    \"date_created\" : \"2023-11-20T07:51:33.966Z\",\n    \"account_sid\" : \"AC5e39BadB6C59A6C0B576e1b0Bf13DD65\",\n    \"fleet_sid\" : \"l9xd\",\n    \"url\" : \"https://web.example.mocklab.io/295258\",\n    \"sid\" : \"DL2dA768d0037ecC37AbbFdBE2Df2930DE\"\n  }, {\n    \"friendly_name\" : \"Geraldine DuBuque\",\n    \"date_updated\" : \"2022-06-07T01:56:21.967Z\",\n    \"sync_service_sid\" : \"IS85b7B99AeAcE8A75e6939f3Ce1f615Cf\",\n    \"date_created\" : \"2023-08-19T12:29:18.967Z\",\n    \"account_sid\" : \"AC56bCa5Ee0A47C4776c06fd826D7c567e\",\n    \"fleet_sid\" : \"ev7b\",\n    \"url\" : \"https://web.example.mocklab.io/830996\",\n    \"sid\" : \"DL0A0c7A4dDab60fe1aaBa249f17Da701D\"\n  }, {\n    \"friendly_name\" : \"Tennille Medhurst\",\n    \"date_updated\" : \"2023-09-01T08:04:20.967Z\",\n    \"sync_service_sid\" : \"IS66050E089DDb71A0Ef483FdaeBD6B3Ba\",\n    \"date_created\" : \"2024-02-29T16:27:26.967Z\",\n    \"account_sid\" : \"AC46009eEd1251ca80861Bb69deeeADefe\",\n    \"fleet_sid\" : \"uc0d\",\n    \"url\" : \"https://web.example.mocklab.io/899254\",\n    \"sid\" : \"DL8e6dC0c2208A415Baba7A4d19Be948A5\"\n  }, {\n    \"friendly_name\" : \"Roselle Stracke\",\n    \"date_updated\" : \"2023-09-04T04:55:51.967Z\",\n    \"sync_service_sid\" : \"IS3A0Bd85a7fF8Ad6aFc89CAdC20C78a7a\",\n    \"date_created\" : \"2023-08-20T06:58:30.967Z\",\n    \"account_sid\" : \"AC52a2124B99fAdadBE393ed930bc5e3A9\",\n    \"fleet_sid\" : \"rpt6\",\n    \"url\" : \"https://web.example.mocklab.io/276239\",\n    \"sid\" : \"DL65f27D5d42BB39EC3BD5deFbeFdeA6ed\"\n  }, {\n    \"friendly_name\" : \"Vernon Marks\",\n    \"date_updated\" : \"2023-09-25T02:28:06.967Z\",\n    \"sync_service_sid\" : \"IS4fE3fD52A1cD1DeDf41D330CfEEBfed3\",\n    \"date_created\" : \"2022-09-16T11:54:14.967Z\",\n    \"account_sid\" : \"ACb1c4DeB63a1debFEB0C68EDB52b40A13\",\n    \"fleet_sid\" : \"7gmz\",\n    \"url\" : \"https://web.example.mocklab.io/017676\",\n    \"sid\" : \"DL4daFCC59Ce146c91EE1a7fccF8F252e4\"\n  }, {\n    \"friendly_name\" : \"Christopher Lang\",\n    \"date_updated\" : \"2023-11-06T16:52:20.967Z\",\n    \"sync_service_sid\" : \"IS2eaeCf8f9BCC4D4A8D1f25aFc0aA5Fce\",\n    \"date_created\" : \"2023-11-08T13:00:01.967Z\",\n    \"account_sid\" : \"AC4Ed5e70AF6d8F18735FF01A9fC9E76CF\",\n    \"fleet_sid\" : \"nx4g\",\n    \"url\" : \"https://web.example.mocklab.io/723470\",\n    \"sid\" : \"DL476C34784AbB6bB8Bccf83aC8F6EdD43\"\n  }, {\n    \"friendly_name\" : \"Deetta Von III\",\n    \"date_updated\" : \"2022-07-25T01:40:01.967Z\",\n    \"sync_service_sid\" : \"ISA5fCdeFaa3B47293bCc9a452364BBCde\",\n    \"date_created\" : \"2023-05-04T08:18:27.967Z\",\n    \"account_sid\" : \"ACFdB4B12a33fa8FbEfFa7BF98e178deac\",\n    \"fleet_sid\" : \"4nta\",\n    \"url\" : \"https://web.example.mocklab.io/090528\",\n    \"sid\" : \"DLe5fEafE1cB85DF5294fB9673569EEaCa\"\n  }, {\n    \"friendly_name\" : \"Joshua Ankunding DDS\",\n    \"date_updated\" : \"2023-05-11T00:38:20.968Z\",\n    \"sync_service_sid\" : \"IS10A5EbD2b8aD28ADa8E7E25325Ab67a4\",\n    \"date_created\" : \"2023-06-24T13:04:18.968Z\",\n    \"account_sid\" : \"AC67cd6DacadCa7ef997Cfdd39f4d5de1B\",\n    \"fleet_sid\" : \"dw6q\",\n    \"url\" : \"https://web.example.mocklab.io/914518\",\n    \"sid\" : \"DL390e42F121A8ACaf97aae1DA76B9a693\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/291091\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/662625\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/502344\",\n    \"page\" : 8931819990341498011,\n    \"key\" : \"h7j6260ofov4nbuwrvb9u94dj0lb5v1xlbkwrwgonnmfr2dnjcqwgxao5ypbwtgfmeuxrf5ntvsxbbwatfo4r3mg41xp5e0d39l5md4ls8v3bpvy6z5sz7myhvh4di7s5g5vszfrexwxr832elhy0gs1zgopr99qc66xum50o23af0szoc78j80dsrg0ajtizbcxq\",\n    \"url\" : \"https://web.example.mocklab.io/539960\",\n    \"page_size\" : 2899302255126272883\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81f23f6e-bba9-3330-acc7-02a929281ed8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListDeployedDevicesDeployment",
          "schema" : {
            "properties" : {
              "deployments" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.deployed_devices.fleet.deployment"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListDeployedDevicesDeploymentResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "484c8eff-b63b-3230-8dff-b03ef4fcb950",
    "name" : "Update the given properties of a specific Certificate credential in the Fleet, g...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/8esq/Certificates/CYE6AB3d01AEbA2DFf7E242ff72FE8f4d3",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_sid\" : \"TH1bA5d4EDA173da9CCDFdaF2e621ad154\",\n  \"friendly_name\" : \"Malka O'Conner\",\n  \"date_updated\" : \"2022-07-09T09:40:27.966Z\",\n  \"date_created\" : \"2024-02-26T01:57:44.966Z\",\n  \"thumbprint\" : \"rlhc5em32d6l6e293zk2jkir8a2gil5rc10tosk0ttukwl2hjua0z2280e0tf0aofov9hrvxzuyc9ppjnke0mbyaeas9kjkb249hsudx2\",\n  \"account_sid\" : \"AC314Ce4bFC9F74fB6ce46CB8BA9EC9A0e\",\n  \"fleet_sid\" : \"0xa2\",\n  \"url\" : \"https://web.example.mocklab.io/183850\",\n  \"sid\" : \"CYc0a5baFC4EbEcc12e047fFFB5cbf99EE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "484c8eff-b63b-3230-8dff-b03ef4fcb950",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployedDevicesCertificate",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Certificate credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Certificate credential was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Certificate credential was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "description" : "Specifies the unique string identifier of a Device authenticated with this Certificate credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Certificate credential belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Certificate credential, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Certificate credential resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "thumbprint" : {
                "description" : "Contains a unique hash of the payload of this Certificate credential, used to authenticate the Device.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Certificate credential resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "d72d0605-b4f3-320f-9960-91b108c12439",
    "name" : "Fetch information about a specific Certificate credential in the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/z85k/Certificates/CYaCcDd5D4b5C454dF9CCB740fb84B89C6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_sid\" : \"TH5313bb78f4B3A7cdCffB8DBdc41b3Dbb\",\n  \"friendly_name\" : \"Palmira Boehm DDS\",\n  \"date_updated\" : \"2022-08-07T01:08:24.966Z\",\n  \"date_created\" : \"2022-04-10T01:16:04.966Z\",\n  \"thumbprint\" : \"ww2jfpdtkng6jzxuvlkcjaaa1ni6h8mn4nduw8phbqlvpcnik9bxv5f1n6rs\",\n  \"account_sid\" : \"ACD32B506b7d4D2DEFF2deC7022a24BdFf\",\n  \"fleet_sid\" : \"3lq8\",\n  \"url\" : \"https://web.example.mocklab.io/898595\",\n  \"sid\" : \"CY160C3AD1e7AF177834434BDe8cF31a14\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d72d0605-b4f3-320f-9960-91b108c12439",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FetchDeployedDevicesCertificate",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Certificate credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Certificate credential was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Certificate credential was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "description" : "Specifies the unique string identifier of a Device authenticated with this Certificate credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Certificate credential belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Certificate credential, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Certificate credential resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "thumbprint" : {
                "description" : "Contains a unique hash of the payload of this Certificate credential, used to authenticate the Device.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Certificate credential resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "b11bdb7c-6900-3c14-bd08-618c118426a0",
    "name" : "Unregister a specific Certificate credential from the Fleet, effectively disallo... - 204",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/7w1z/Certificates/CYFF8Eb1c2FBB98343F2CBAb1efd23AB49",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b11bdb7c-6900-3c14-bd08-618c118426a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployedDevicesCertificate"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "2417f92e-6984-3804-9f01-5032f1b6cff6",
    "name" : "Enroll a new Certificate credential to the Fleet, optionally giving it a friendl...",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/c5cn/Certificates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"device_sid\" : \"TH9bfaeAbDCd1d2fE6230D7ABd91f23dDB\",\n  \"friendly_name\" : \"Ms. Lolita Hauck\",\n  \"date_updated\" : \"2022-12-02T16:25:26.965Z\",\n  \"date_created\" : \"2023-04-13T10:29:35.965Z\",\n  \"thumbprint\" : \"iqtb7to5fm42hk7l0125d2bb6lvhn72kznae3lblmxktdk4lax3q5ujbvo88feg2wytlszkv2vfxyjrzrh4fkezfouptzp6lhcdrppg9wwoo1kl3x68u5w3uzh7ca9yki13vnlhujaoguvz\",\n  \"account_sid\" : \"ACC6F96a9fb5FADfc6f52EB3BE6b7E61B3\",\n  \"fleet_sid\" : \"0o16\",\n  \"url\" : \"https://web.example.mocklab.io/146948\",\n  \"sid\" : \"CY28Fda7fF6AE87d4c7BbeDabD4bd8AB9D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2417f92e-6984-3804-9f01-5032f1b6cff6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployedDevicesCertificate",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Specifies the unique string identifier of the Account responsible for this Certificate credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Certificate credential was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Certificate credential was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "device_sid" : {
                "description" : "Specifies the unique string identifier of a Device authenticated with this Certificate credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "fleet_sid" : {
                "description" : "Specifies the unique string identifier of the Fleet that the given Certificate credential belongs to.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Certificate credential, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Certificate credential resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "thumbprint" : {
                "description" : "Contains a unique hash of the payload of this Certificate credential, used to authenticate the Device.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Certificate credential resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "cf67ee91-ebd6-3ba4-8c75-8a542795e86b",
    "name" : "Retrieve a list of all Certificate credentials belonging to the Fleet.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets/n8hk/Certificates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"certificates\" : [ {\n    \"device_sid\" : \"THC9feDba6eb9F2CEC92C7929e5AEb4256\",\n    \"friendly_name\" : \"Latonia Reilly\",\n    \"date_updated\" : \"2023-08-27T03:12:36.964Z\",\n    \"date_created\" : \"2022-03-21T15:50:28.964Z\",\n    \"thumbprint\" : \"rd4y6ay5z2x3bif11d4531nljg5w8ytcu2tb4ni3y9usr9fybulpaie60tebucteo7pm91x4vpsywiluxbnizm4zss6gjzplgamh61uyx9g0gj09w2308mkzd5dcle8d7lzg62auqks6iiwzgeh3nyuof9oaqq\",\n    \"account_sid\" : \"AC6Fa6cc5E682DEcc8FB258bd5FFfe34EA\",\n    \"fleet_sid\" : \"9139\",\n    \"url\" : \"https://web.example.mocklab.io/513179\",\n    \"sid\" : \"CYAadD7D0949f0a865aEd5bbfDFfb61BbC\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/881054\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/575655\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/231585\",\n    \"page\" : 238336448536684025,\n    \"key\" : \"1l2nuwjazkhh9e9m2b1bhnnx2bidv9b6bowxwldpoi\",\n    \"url\" : \"https://web.example.mocklab.io/726233\",\n    \"page_size\" : 600679486126259768\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf67ee91-ebd6-3ba4-8c75-8a542795e86b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListDeployedDevicesCertificate",
          "schema" : {
            "properties" : {
              "certificates" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.deployed_devices.fleet.certificate"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListDeployedDevicesCertificateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "872e9936-7202-3dcb-9062-bdeba73e6a37",
    "name" : "Create a new Fleet for scoping of deployed devices within your account.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Janene Shields\",\n  \"unique_name\" : \"Irvin Parisian\",\n  \"date_updated\" : \"2022-07-27T07:13:29.964Z\",\n  \"date_created\" : \"2022-12-03T02:49:58.964Z\",\n  \"account_sid\" : \"ACCCBeAc0ef2cFA7fE451fBC626E935cDF\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/584229\",\n  \"default_deployment_sid\" : \"DLEFc3FCf5BE7Ec5f6d87C6b4dcD8E6e8D\",\n  \"sid\" : \"THA8acE3e6a41969e7d8cb1cdC0b68a2d3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "872e9936-7202-3dcb-9062-bdeba73e6a37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployedDevicesFleet",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "Speicifies the unique string identifier of the Account responsible for this Fleet.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "Specifies the date this Fleet was created, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "Specifies the date this Fleet was last updated, given in UTC ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "default_deployment_sid" : {
                "description" : "Contains the string identifier of the automatically provisioned default Deployment of this Fleet.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "Contains a human readable descriptive text for this Fleet, up to 256 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains a dictionary of URL links to nested resources of this Fleet.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "Contains a 34 character string that uniquely identifies this Fleet resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^TH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "unique_name" : {
                "description" : "Contains a unique and addressable name of this Fleet, e.g. 'default', up to 128 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "Contains an absolute URL for this Fleet resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "20f503a1-59ed-3a5b-9c3c-02ce21ef4470",
    "name" : "Retrieve a list of all Fleets belonging to your account.",
    "request" : {
      "urlPath" : "/DeployedDevices/Fleets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/579206\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/071345\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/794985\",\n    \"page\" : 5855204478601475579,\n    \"key\" : \"qhvtvo43ionpouw7anh4spfazzv025ydofciwyuerxoyp3f\",\n    \"url\" : \"https://web.example.mocklab.io/358207\",\n    \"page_size\" : 8707795879149987419\n  },\n  \"fleets\" : [ {\n    \"friendly_name\" : \"Orval Koelpin\",\n    \"unique_name\" : \"Bok Heller\",\n    \"date_updated\" : \"2022-11-27T05:11:09.963Z\",\n    \"date_created\" : \"2022-03-25T00:45:30.963Z\",\n    \"account_sid\" : \"ACde717cDa1b7f14BE4758a067fB71eAd9\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/934148\",\n    \"default_deployment_sid\" : \"DLa6a3F2b5cF229dFBc0cAd805Fdaf6453\",\n    \"sid\" : \"TH8f6d7Cb40aDaeD167d5f0Ba6775AC95A\"\n  }, {\n    \"friendly_name\" : \"Nelson Douglas MD\",\n    \"unique_name\" : \"Chadwick Torp\",\n    \"date_updated\" : \"2023-04-06T08:44:52.964Z\",\n    \"date_created\" : \"2022-08-12T15:49:09.964Z\",\n    \"account_sid\" : \"AC5FF8bAB13D4B7FE365d528208b8Fd45B\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/226438\",\n    \"default_deployment_sid\" : \"DL9ccA4AEF8EDE9b6d701Efe4CFE2cD6A1\",\n    \"sid\" : \"THb39a514C39c910693e9C5EEd4beB5f8F\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20f503a1-59ed-3a5b-9c3c-02ce21ef4470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListDeployedDevicesFleet",
          "schema" : {
            "properties" : {
              "fleets" : {
                "items" : {
                  "$ref" : "#/components/schemas/preview.deployed_devices.fleet"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListDeployedDevicesFleetResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 146
  } ]
}