{
  "mappings" : [ {
    "id" : "89c56db8-54c8-3173-b530-22158342ac9e",
    "name" : "Update Message",
    "request" : {
      "urlPath" : "/sms/messages/yln9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89c56db8-54c8-3173-b530-22158342ac9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4d3e861c-aa42-3580-944a-b027c52c4941",
    "name" : "Update Message",
    "request" : {
      "urlPath" : "/sms/messages/916x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d3e861c-aa42-3580-944a-b027c52c4941",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "9dceb83b-a66e-33c1-87bc-69ba4249dbdc",
    "name" : "Update Message",
    "request" : {
      "urlPath" : "/sms/messages/3pbg",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dceb83b-a66e-33c1-87bc-69ba4249dbdc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f9f4f5ec-c8ba-304f-bb29-071ee5a2249f",
    "name" : "Update Message",
    "request" : {
      "urlPath" : "/sms/messages/tnnc",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9f4f5ec-c8ba-304f-bb29-071ee5a2249f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f617a56a-d088-3082-8f18-de98ce941c12",
    "name" : "Update Message",
    "request" : {
      "urlPath" : "/sms/messages/eb2i",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f617a56a-d088-3082-8f18-de98ce941c12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesUpdate",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "46143a10-2d77-319d-a426-2a3b127df021",
    "name" : "Update Message",
    "request" : {
      "urlPath" : "/sms/messages/80yh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Messages\",\n  \"service\" : \"twilio\",\n  \"operation\" : \"update\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46143a10-2d77-319d-a426-2a3b127df021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesUpdate",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "update",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Messages",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "twilio",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "UpdateMessageResponse"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "108ca391-6c3a-3c69-8f58-f184afd1d059",
    "name" : "Get Message",
    "request" : {
      "urlPath" : "/sms/messages/y4j8",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "108ca391-6c3a-3c69-8f58-f184afd1d059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "e0f87704-cf73-3f1e-9bf8-b2c45a871ff9",
    "name" : "Get Message",
    "request" : {
      "urlPath" : "/sms/messages/e594",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0f87704-cf73-3f1e-9bf8-b2c45a871ff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "4f99e8b1-8181-3b64-a43f-af303e9ae213",
    "name" : "Get Message",
    "request" : {
      "urlPath" : "/sms/messages/fo8a",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f99e8b1-8181-3b64-a43f-af303e9ae213",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "a14b0aa4-26b7-357b-9626-50c42e94f6bd",
    "name" : "Get Message",
    "request" : {
      "urlPath" : "/sms/messages/7q7n",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a14b0aa4-26b7-357b-9626-50c42e94f6bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "27398d45-079d-31d7-88b4-742cc7eb0564",
    "name" : "Get Message",
    "request" : {
      "urlPath" : "/sms/messages/8qe8",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27398d45-079d-31d7-88b4-742cc7eb0564",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesOne",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "0d5a4f0d-3f9e-380f-8c35-dbf4b99f3314",
    "name" : "Get Message",
    "request" : {
      "urlPath" : "/sms/messages/ua8x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  },\n  \"resource\" : \"Messages\",\n  \"service\" : \"twilio\",\n  \"operation\" : \"one\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d5a4f0d-3f9e-380f-8c35-dbf4b99f3314",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesOne",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/Message"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "one",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Messages",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "twilio",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetMessageResponse",
            "x-graphql-type-name" : "Message"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "24a758f4-54ff-3ba0-add0-6c289fed42ff",
    "name" : "Delete Message",
    "request" : {
      "urlPath" : "/sms/messages/kqt8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24a758f4-54ff-3ba0-add0-6c289fed42ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "20ff3560-92f0-35d7-b965-9d26995f5851",
    "name" : "Delete Message",
    "request" : {
      "urlPath" : "/sms/messages/l77b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20ff3560-92f0-35d7-b965-9d26995f5851",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7f2ee073-6fdd-3979-8922-183331363448",
    "name" : "Delete Message",
    "request" : {
      "urlPath" : "/sms/messages/l356",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f2ee073-6fdd-3979-8922-183331363448",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "4de4f34d-b00d-3950-9b55-79be77caadb9",
    "name" : "Delete Message",
    "request" : {
      "urlPath" : "/sms/messages/fmfk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4de4f34d-b00d-3950-9b55-79be77caadb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "b0051a43-0f33-33bc-b03b-f553876487d3",
    "name" : "Delete Message",
    "request" : {
      "urlPath" : "/sms/messages/123k",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0051a43-0f33-33bc-b03b-f553876487d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesDelete",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "9fa74695-9a1f-33dc-8bd0-d0423cd8730a",
    "name" : "Delete Message",
    "request" : {
      "urlPath" : "/sms/messages/44cv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Messages\",\n  \"service\" : \"twilio\",\n  \"operation\" : \"delete\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fa74695-9a1f-33dc-8bd0-d0423cd8730a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesDelete",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "delete",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Messages",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "twilio",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "DeleteMessageResponse"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "df517a3f-ec21-3fe0-ba92-4a71a4d9a624",
    "name" : "Create Message",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df517a3f-ec21-3fe0-ba92-4a71a4d9a624",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "fd19b6d2-91a2-38a5-b5a0-741f83d4ea86",
    "name" : "Create Message",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : \"Could not find widget with id: '123'\",\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd19b6d2-91a2-38a5-b5a0-741f83d4ea86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "24406e6d-cbd2-3b38-a9ec-5c90caaa1684",
    "name" : "Create Message",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24406e6d-cbd2-3b38-a9ec-5c90caaa1684",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "2c99e130-ada6-3c41-a35b-d6803340bc14",
    "name" : "Create Message",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c99e130-ada6-3c41-a35b-d6803340bc14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "ec576d22-69ff-3608-a607-0245e175f2e0",
    "name" : "Create Message",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : \"Missing property foobar\",\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec576d22-69ff-3608-a607-0245e175f2e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAdd",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "5e488473-fd9f-3959-9942-e06e77679885",
    "name" : "Create Message",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : {\n    \"id\" : \"12345\"\n  },\n  \"resource\" : \"Messages\",\n  \"service\" : \"twilio\",\n  \"operation\" : \"add\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e488473-fd9f-3959-9942-e06e77679885",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAdd",
          "schema" : {
            "properties" : {
              "data" : {
                "$ref" : "#/components/schemas/UnifiedId"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "add",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Messages",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "twilio",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "CreateMessageResponse"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "83e0fbe9-f055-35c8-a3de-29f7ceebeebc",
    "name" : "List Messages",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#invalidstateerror\",\n  \"type_name\" : \"InvalidStateError\",\n  \"status_code\" : 422,\n  \"detail\" : \"Unprocessable request, please verify your request headers and body.\",\n  \"error\" : \"Unprocessable Entity\",\n  \"message\" : \"Invalid State\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83e0fbe9-f055-35c8-a3de-29f7ceebeebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Unprocessable request, please verify your request headers and body.",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unprocessable Entity",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid State",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#invalidstateerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 422,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "InvalidStateError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unprocessable"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "e65f9c76-7ff7-3e43-98a1-d7c0ff0c8e41",
    "name" : "List Messages",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#entitynotfounderror\",\n  \"type_name\" : \"EntityNotFoundError\",\n  \"status_code\" : 404,\n  \"detail\" : {\n    \"not_found\" : {\n      \"entity\" : \"widget\",\n      \"id\" : \"123\"\n    }\n  },\n  \"error\" : \"Not Found\",\n  \"message\" : \"Unknown Widget\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e65f9c76-7ff7-3e43-98a1-d7c0ff0c8e41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Could not find widget with id: '123'",
                  "type" : "string"
                }, {
                  "example" : {
                    "not_found" : {
                      "entity" : "widget",
                      "id" : "123"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unknown Widget",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#entitynotfounderror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 404,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "EntityNotFoundError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "NotFound"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "a94684ee-5a9a-3f70-bb9c-4a957c90b7ba",
    "name" : "List Messages",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 402,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestlimiterror\",\n  \"type_name\" : \"RequestLimitError\",\n  \"status_code\" : 402,\n  \"detail\" : \"You have reached your limit of 2000\",\n  \"error\" : \"Payment Required\",\n  \"message\" : \"Request Limit Reached\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a94684ee-5a9a-3f70-bb9c-4a957c90b7ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "You have reached your limit of 2000",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Payment Required",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Request Limit Reached",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestlimiterror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 402,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestLimitError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "PaymentRequired"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "54cce32e-4e62-3789-b5a8-44b34be36b22",
    "name" : "List Messages",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#unauthorizederror\",\n  \"type_name\" : \"UnauthorizedError\",\n  \"status_code\" : 401,\n  \"detail\" : \"Failed to generate valid JWT Session. Verify applicationId is correct\",\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Unauthorized Request\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54cce32e-4e62-3789-b5a8-44b34be36b22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "description" : "Contains parameter or domain specific information related to the error and why it occurred.",
                "example" : "Failed to generate valid JWT Session. Verify applicationId is correct",
                "type" : "string"
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Unauthorized Request",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#unauthorizederror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 401,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "UnauthorizedError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "Unauthorized"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "be34fdd1-0bfc-35aa-9f15-7ad38061c59e",
    "name" : "List Messages",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"ref\" : \"https://developers.apideck.com/errors#requestvalidationerror\",\n  \"type_name\" : \"RequestValidationError\",\n  \"status_code\" : 400,\n  \"detail\" : {\n    \"missing\" : [ {\n      \"foobar\" : \"required\"\n    } ]\n  },\n  \"error\" : \"Bad Request\",\n  \"message\" : \"Invalid Params\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be34fdd1-0bfc-35aa-9f15-7ad38061c59e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAll",
          "schema" : {
            "properties" : {
              "detail" : {
                "anyOf" : [ {
                  "example" : "Missing property foobar",
                  "type" : "string"
                }, {
                  "example" : {
                    "missing" : [ {
                      "foobar" : "required"
                    } ]
                  },
                  "type" : "object"
                } ],
                "description" : "Contains parameter or domain specific information related to the error and why it occurred."
              },
              "error" : {
                "description" : "Contains an explanation of the status_code as defined in HTTP/1.1 standard (RFC 7231)",
                "example" : "Bad Request",
                "type" : "string"
              },
              "message" : {
                "description" : "A human-readable message providing more details about the error.",
                "example" : "Invalid Params",
                "type" : "string"
              },
              "ref" : {
                "description" : "Link to documentation of error type",
                "example" : "https://developers.apideck.com/errors#requestvalidationerror",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP status code",
                "example" : 400,
                "type" : "number"
              },
              "type_name" : {
                "description" : "The type of error returned",
                "example" : "RequestValidationError",
                "type" : "string"
              }
            },
            "type" : "object",
            "x-apideck-schema-id" : "BadRequest"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "a34c7804-2cd1-367e-8287-4739b99200ee",
    "name" : "List Messages",
    "request" : {
      "urlPath" : "/sms/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"status_code\" : 200,\n  \"data\" : [ {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  }, {\n    \"webhook_url\" : \"https://unify.apideck.com/webhook/webhooks/eyz329dkffdl4949/x/sms\",\n    \"subject\" : \"Picture\",\n    \"created_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"scheduled_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"body\" : \"Hi! How are you doing?\",\n    \"error\" : {\n      \"code\" : \"X1\",\n      \"message\" : \"Something went wrong\"\n    },\n    \"type\" : \"sms\",\n    \"created_by\" : \"12345\",\n    \"reference\" : \"CUST001\",\n    \"sent_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"messaging_service_id\" : \"123456\",\n    \"updated_at\" : \"2020-09-30T07:43:32.000Z\",\n    \"price\" : {\n      \"currency\" : \"USD\",\n      \"per_unit\" : \"0.01\",\n      \"total_amount\" : \"0.01\"\n    },\n    \"number_of_media_files\" : 1,\n    \"updated_by\" : \"12345\",\n    \"from\" : \"+15017122661\",\n    \"id\" : \"12345\",\n    \"to\" : \"+15017122662\",\n    \"direction\" : \"outbound-api\",\n    \"number_of_units\" : 1,\n    \"status\" : \"sent\"\n  } ],\n  \"resource\" : \"Messages\",\n  \"meta\" : {\n    \"cursors\" : {\n      \"next\" : \"em9oby1jcm06OnBhZ2U6OjM=\",\n      \"current\" : \"em9oby1jcm06OnBhZ2U6OjI=\",\n      \"previous\" : \"em9oby1jcm06OnBhZ2U6OjE=\"\n    },\n    \"items_on_page\" : 50\n  },\n  \"service\" : \"twilio\",\n  \"links\" : {\n    \"next\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjM\",\n    \"current\" : \"https://unify.apideck.com/crm/companies\",\n    \"previous\" : \"https://unify.apideck.com/crm/companies?cursor=em9oby1jcm06OnBhZ2U6OjE%3D\"\n  },\n  \"operation\" : \"all\",\n  \"status\" : \"OK\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a34c7804-2cd1-367e-8287-4739b99200ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "messagesAll",
          "schema" : {
            "properties" : {
              "data" : {
                "items" : {
                  "$ref" : "#/components/schemas/Message"
                },
                "type" : "array"
              },
              "links" : {
                "$ref" : "#/components/schemas/Links"
              },
              "meta" : {
                "$ref" : "#/components/schemas/Meta"
              },
              "operation" : {
                "description" : "Operation performed",
                "example" : "all",
                "type" : "string"
              },
              "resource" : {
                "description" : "Unified API resource name",
                "example" : "Messages",
                "type" : "string"
              },
              "service" : {
                "description" : "Apideck ID of service provider",
                "example" : "twilio",
                "type" : "string"
              },
              "status" : {
                "description" : "HTTP Response Status",
                "example" : "OK",
                "type" : "string"
              },
              "status_code" : {
                "description" : "HTTP Response Status Code",
                "example" : 200,
                "type" : "integer"
              }
            },
            "required" : [ "status_code", "status", "service", "resource", "operation", "data" ],
            "type" : "object",
            "x-apideck-schema-id" : "GetMessagesResponse",
            "x-graphql-type-name" : "MessageList"
          }
        }
      }
    },
    "insertionIndex" : 29
  } ]
}