{
  "mappings" : [ {
    "id" : "05f8b587-61c3-462d-abae-44ccaa170444",
    "name" : "Retrieve single statement based on unique id provided - 404",
    "request" : {
      "urlPath" : "/Statements/kw27",
      "method" : "GET",
      "queryParameters" : {
        "statementId" : {
          "equalTo" : "792d7652-782b-4233-a9e5-e1bc06e68790"
        }
      }
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "05f8b587-61c3-462d-abae-44ccaa170444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getStatement"
        }
      }
    }
  }, {
    "id" : "f594b5eb-c08a-4489-aca5-f58fe35e3af0",
    "name" : "Retrieve single statement based on unique id provided (application/json)",
    "request" : {
      "urlPath" : "/Statements/wc5m",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "statementId" : {
          "equalTo" : "22d1ca1c-a3da-4a18-980e-76ec82452aac"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"endBalance\" : {\n    \"amount\" : \"150.0000\",\n    \"creditDebitIndicator\" : \"CREDIT\"\n  },\n  \"endDate\" : \"2019-10-11\",\n  \"feedConnectionId\" : \"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n  \"id\" : \"97aca24a-dd10-4cda-98c7-1084a048257b\",\n  \"startBalance\" : {\n    \"amount\" : \"100.0000\",\n    \"creditDebitIndicator\" : \"CREDIT\"\n  },\n  \"startDate\" : \"2019-08-11\",\n  \"statementLineCount\" : \"1\",\n  \"status\" : \"DELIVERED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f594b5eb-c08a-4489-aca5-f58fe35e3af0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getStatement",
          "schema" : {
            "properties" : {
              "endBalance" : {
                "$ref" : "#/components/schemas/EndBalance"
              },
              "endDate" : {
                "description" : "Closing balance date ISO-8601 YYYY-MM-DD",
                "example" : "2018-07-27",
                "format" : "date",
                "type" : "string"
              },
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/Error"
                },
                "type" : "array"
              },
              "feedConnectionId" : {
                "description" : "The Xero generated feed connection Id that identifies the Xero Bank Account Container into which the statement should be delivered. This is obtained by calling GET FeedConnections.",
                "example" : "87cb0dc8-fa32-409c-b622-19f8de8dcc83",
                "format" : "uuid",
                "type" : "string"
              },
              "id" : {
                "description" : "GUID used to identify the Statement.",
                "example" : "ba4f3127-5e46-427d-80ea-dea2fcd26afe",
                "format" : "uuid",
                "type" : "string"
              },
              "startBalance" : {
                "$ref" : "#/components/schemas/StartBalance"
              },
              "startDate" : {
                "description" : "Opening balance date (can be no older than one year from the current date) ISO-8601 YYYY-MM-DD",
                "example" : "2018-07-27",
                "format" : "date",
                "type" : "string"
              },
              "statementLineCount" : {
                "example" : 1,
                "type" : "integer"
              },
              "statementLines" : {
                "$ref" : "#/components/schemas/StatementLines"
              },
              "status" : {
                "description" : "Current status of statements",
                "enum" : [ "PENDING", "REJECTED", "DELIVERED" ],
                "example" : "PENDING"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "85c5c1cb-98ad-4f0a-9ea0-87d6c6b078b4",
    "name" : "Creates one or more new statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"detail\" : \"The request should be retried. If the error persists, a Xero support issue should be raised.\",\n  \"status\" : 500,\n  \"title\" : \"Intermittent Internal Xero Error\",\n  \"type\" : \"internal-error\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "85c5c1cb-98ad-4f0a-9ea0-87d6c6b078b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24540938-2e41-4a4c-89e6-b4d2dcfb2be1",
    "name" : "Creates one or more new statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"detail\" : \"End balance does not match start balance +/- statement line amounts.\",\n  \"status\" : 422,\n  \"title\" : \"Invalid End Balance\",\n  \"type\" : \"invalid-end-balance\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "24540938-2e41-4a4c-89e6-b4d2dcfb2be1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ccb3348-6fad-45b5-be4e-34ba653a3982",
    "name" : "Creates one or more new statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 413,
      "body" : "{\n  \"detail\" : \"Request size of 3500000 bytes exceeds the limit of 3000000 bytes.\",\n  \"status\" : 413,\n  \"title\" : \"Request too large\",\n  \"type\" : \"invalid-request\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "0ccb3348-6fad-45b5-be4e-34ba653a3982",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32458eb8-fc55-484b-996d-bea90586602e",
    "name" : "Creates one or more new statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"items\" : [ {\n    \"errors\" : [ {\n      \"detail\" : \"The received statement was marked as a duplicate.\",\n      \"status\" : 409,\n      \"title\" : \"Duplicate Statement Received\",\n      \"type\" : \"duplicate-statement\"\n    } ],\n    \"feedConnectionId\" : \"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n    \"id\" : \"29fefeb6-f449-470d-9179-f1d8900930d6\",\n    \"status\" : \"REJECTED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "32458eb8-fc55-484b-996d-bea90586602e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "598ecf65-83a4-472f-86c0-c3321ddde1c7",
    "name" : "Creates one or more new statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"detail\" : \"The application has not been configured to use these API endpoints.\",\n  \"status\" : 403,\n  \"title\" : \"Invalid Application\",\n  \"type\" : \"invalid-application\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "598ecf65-83a4-472f-86c0-c3321ddde1c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "description" : "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
            "properties" : {
              "detail" : {
                "description" : "Human readable detailed error description.",
                "example" : "The application has not been configured to use these API endpoints.",
                "maximum" : 255,
                "type" : "string"
              },
              "status" : {
                "description" : "The numeric HTTP Status Code, e.g. 404",
                "example" : 403,
                "type" : "integer"
              },
              "title" : {
                "description" : "Human readable high level error description.",
                "example" : "Invalid Application",
                "maximum" : 255,
                "type" : "string"
              },
              "type" : {
                "description" : "Identifies the type of error.",
                "enum" : [ "invalid-request", "invalid-application", "invalid-feed-connection", "duplicate-statement", "invalid-end-balance", "invalid-start-and-end-date", "invalid-start-date", "internal-error", "feed-already-connected-in-current-organisation", "invalid-end-date", "statement-not-found", "feed-connected-in-different-organisation", "feed-already-connected-in-different-organisation", "bank-feed-not-found", "invalid-country-specified", "invalid-organisation-bank-feeds", "invalid-organisation-multi-currency", "invalid-feed-connection-for-organisation", "invalid-user-role", "account-not-valid" ],
                "example" : "invalid-application",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b48b3d25-25d2-467b-91e8-b6c4fba2dfc6",
    "name" : "Creates one or more new statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"For the request field 'StatementLine.ChequeNumber' exceeded the maximum length of 20.\",\n  \"status\" : 400,\n  \"title\" : \"Invalid Request\",\n  \"type\" : \"invalid-request\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "b48b3d25-25d2-467b-91e8-b6c4fba2dfc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17554ec4-3405-4f6a-aa6e-ba6bf66c078d",
    "name" : "Creates one or more new statements (application/json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"items\" : [ {\n    \"feedConnectionId\" : \"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n    \"id\" : \"d69b02b7-a30c-464a-99cf-ba9770373c61\",\n    \"status\" : \"PENDING\"\n  }, {\n    \"feedConnectionId\" : \"2ebe6393-f3bb-48ab-9a0e-b04fa8585a70\",\n    \"id\" : \"598f255c-015b-4138-93df-2e06c64565b3\",\n    \"status\" : \"PENDING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17554ec4-3405-4f6a-aa6e-ba6bf66c078d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.89414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b9e88eb-7714-4e4d-9111-2b42ebdef1cc",
    "name" : "Retrieve all statements (application/problem+json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/problem+json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"detail\" : \"For the request field missing parameter.\",\n  \"status\" : 400,\n  \"title\" : \"Invalid Request\",\n  \"type\" : \"invalid-request\"\n}",
      "headers" : {
        "Content-Type" : "application/problem+json"
      }
    },
    "uuid" : "9b9e88eb-7714-4e4d-9111-2b42ebdef1cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "739beeeb-75f5-4cef-b608-050e81b921b3",
    "name" : "Retrieve all statements (application/json)",
    "request" : {
      "urlPath" : "/Statements",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"items\" : [ {\n    \"endBalance\" : {\n      \"amount\" : \"150.0000\",\n      \"creditDebitIndicator\" : \"CREDIT\"\n    },\n    \"endDate\" : \"2019-08-15\",\n    \"errors\" : [ {\n      \"detail\" : \"The received statement was marked as a duplicate.\",\n      \"status\" : 409,\n      \"title\" : \"Duplicate Statement Received\",\n      \"type\" : \"duplicate-statement\"\n    } ],\n    \"feedConnectionId\" : \"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n    \"id\" : \"9817e4b8-82b3-4526-91f7-040bd278053f\",\n    \"startBalance\" : {\n      \"amount\" : \"100.0000\",\n      \"creditDebitIndicator\" : \"CREDIT\"\n    },\n    \"startDate\" : \"2019-08-01\",\n    \"statementLineCount\" : \"1\",\n    \"status\" : \"REJECTED\"\n  }, {\n    \"endBalance\" : {\n      \"amount\" : \"150.0000\",\n      \"creditDebitIndicator\" : \"CREDIT\"\n    },\n    \"endDate\" : \"2019-08-15\",\n    \"feedConnectionId\" : \"6a4b9ff5-3a5f-4321-936b-4796163550f6\",\n    \"id\" : \"2fc57bac-7aa7-4981-a5cd-8aee83fe698c\",\n    \"startBalance\" : {\n      \"amount\" : \"100.0000\",\n      \"creditDebitIndicator\" : \"CREDIT\"\n    },\n    \"startDate\" : \"2019-08-01\",\n    \"statementLineCount\" : \"1\",\n    \"status\" : \"DELIVERED\"\n  } ],\n  \"pagination\" : {\n    \"itemCount\" : 3,\n    \"page\" : 1,\n    \"pageCount\" : 210,\n    \"pageSize\" : 3\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "739beeeb-75f5-4cef-b608-050e81b921b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.894052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getStatements",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/statements"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/Statement"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bf1b1220-5214-4b2a-befb-f53c143c5e9d",
    "name" : "Retrieve single feed connection based on a unique id provided - 400",
    "request" : {
      "urlPath" : "/FeedConnections/d495b707-d707-4a07-8818-7a8ec51516cc",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bf1b1220-5214-4b2a-befb-f53c143c5e9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getFeedConnection"
        }
      }
    }
  }, {
    "id" : "1986fb24-f0cf-449c-9f24-5d4dbc080481",
    "name" : "Retrieve single feed connection based on a unique id provided (application/json)",
    "request" : {
      "urlPath" : "/FeedConnections/79051d64-0819-4755-8885-27d85a3dbdff",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountId\" : \"f4c4d595-da94-493b-999a-19d1ae1f508a\",\n  \"accountName\" : \"SDK Bank 5517\",\n  \"accountNumber\" : \"123434859\",\n  \"accountToken\" : \"foobar84778\",\n  \"accountType\" : \"BANK\",\n  \"country\" : \"GB\",\n  \"currency\" : \"GBP\",\n  \"id\" : \"b58b685a-1bee-4904-91f1-fee30bb6ea52\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1986fb24-f0cf-449c-9f24-5d4dbc080481",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getFeedConnection",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties" : {
              "accountId" : {
                "description" : "Xero identifier for a bank account in Xero. Must be included if AccountNumber is not specified.",
                "example" : "079a88ea-276d-41fb-a1f1-366ef3e22921",
                "format" : "uuid",
                "type" : "string"
              },
              "accountName" : {
                "description" : "The Account Name will be used for the creation of a new Xero Bank Account if a matching Xero Bank Account is not found.",
                "example" : "Joe's Savings Account",
                "maximum" : 30,
                "type" : "string"
              },
              "accountNumber" : {
                "description" : "String(40) when AccountType is BANK String(4) when AccountType is CREDITCARD The Account Number is used to match the feed to a Xero Bank Account. The API will create a new Xero Bank Account if a match to an existing Xero Bank Account is not found. Only the last 4 digits must be supplied for Credit Card numbers. Must be included if AccountId is not specified.",
                "example" : "3809087654321500",
                "maximum" : 40,
                "type" : "string"
              },
              "accountToken" : {
                "description" : "This account identifier is generated by the financial institute (FI). This must be unique for your financial institute.",
                "example" : "10000123",
                "maximum" : 50,
                "type" : "string"
              },
              "accountType" : {
                "description" : "High level bank account type - BANK CREDITCARD BANK encompasses all bank account types other than credit cards.",
                "enum" : [ "BANK", "CREDITCARD" ],
                "example" : "BANK"
              },
              "country" : {
                "$ref" : "#/components/schemas/CountryCode"
              },
              "currency" : {
                "$ref" : "#/components/schemas/CurrencyCode"
              },
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "id" : {
                "description" : "GUID used to identify the Account.",
                "example" : "0d3cf8d-95dc-4466-8dc0-47e6d1197e28",
                "format" : "uuid",
                "type" : "string"
              },
              "status" : {
                "description" : "the current status of the feed connection",
                "enum" : [ "PENDING", "REJECTED" ],
                "example" : "REJECTED",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "43ac452a-3258-4939-9480-ee3a95e02f2b",
    "name" : "Delete an existing feed connection - 400",
    "request" : {
      "urlPath" : "/FeedConnections/DeleteRequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "43ac452a-3258-4939-9480-ee3a95e02f2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteFeedConnections"
        }
      }
    }
  }, {
    "id" : "34ac86c0-32aa-4a9a-aab0-4cb0515badc9",
    "name" : "Delete an existing feed connection (application/json)",
    "request" : {
      "urlPath" : "/FeedConnections/DeleteRequests",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"items\" : [ {\n    \"id\" : \"b4cc693b-24d9-42ec-a6d4-2943d253ff63\",\n    \"status\" : \"PENDING\"\n  }, {\n    \"accountToken\" : \"10000125\",\n    \"error\" : {\n      \"detail\" : \"The AccountToken is connected to another Xero Bank Account associated with this bank. This Xero Bank Account belongs to a different Xero Organisation.\",\n      \"title\" : \"Feed connected in different organisation\",\n      \"type\" : \"feed-connected-in-different-organisation\"\n    },\n    \"status\" : \"REJECTED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34ac86c0-32aa-4a9a-aab0-4cb0515badc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteFeedConnections",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/FeedConnection"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f413220e-7ad1-49fa-9ffe-39b1950190d2",
    "name" : "Create one or more new feed connection (application/json)",
    "request" : {
      "urlPath" : "/FeedConnections",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 409,
      "body" : "{\n  \"detail\" : \"The application has not been configured to use these API endpoints.\",\n  \"title\" : \"Invalid Application\",\n  \"type\" : \"invalid-application\",\n  \"status\" : 403\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f413220e-7ad1-49fa-9ffe-39b1950190d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createFeedConnections",
          "schema" : {
            "description" : "On error, the API consumer will receive an HTTP response with a HTTP Status Code of 4xx or 5xx and a Content-Type of application/problem+json.",
            "properties" : {
              "detail" : {
                "description" : "Human readable detailed error description.",
                "example" : "The application has not been configured to use these API endpoints.",
                "maximum" : 255,
                "type" : "string"
              },
              "status" : {
                "description" : "The numeric HTTP Status Code, e.g. 404",
                "example" : 403,
                "type" : "integer"
              },
              "title" : {
                "description" : "Human readable high level error description.",
                "example" : "Invalid Application",
                "maximum" : 255,
                "type" : "string"
              },
              "type" : {
                "description" : "Identifies the type of error.",
                "enum" : [ "invalid-request", "invalid-application", "invalid-feed-connection", "duplicate-statement", "invalid-end-balance", "invalid-start-and-end-date", "invalid-start-date", "internal-error", "feed-already-connected-in-current-organisation", "invalid-end-date", "statement-not-found", "feed-connected-in-different-organisation", "feed-already-connected-in-different-organisation", "bank-feed-not-found", "invalid-country-specified", "invalid-organisation-bank-feeds", "invalid-organisation-multi-currency", "invalid-feed-connection-for-organisation", "invalid-user-role", "account-not-valid" ],
                "example" : "invalid-application",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95f80793-a6bc-4125-98fd-435ed9a120c9",
    "name" : "Create one or more new feed connection - 400",
    "request" : {
      "urlPath" : "/FeedConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "95f80793-a6bc-4125-98fd-435ed9a120c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createFeedConnections"
        }
      }
    }
  }, {
    "id" : "7c07dc37-8acf-46cf-8407-547167089175",
    "name" : "Create one or more new feed connection (application/json)",
    "request" : {
      "urlPath" : "/FeedConnections",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"items\" : [ {\n    \"accountToken\" : \"foobar71760\",\n    \"id\" : \"2a19d46c-2a92-4e50-9401-dcf2cb895be7\",\n    \"status\" : \"PENDING\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c07dc37-8acf-46cf-8407-547167089175",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.89359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createFeedConnections",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/FeedConnection"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5132d170-ff28-4fad-89e5-a6e42841ef76",
    "name" : "Searches for feed connections - 400",
    "request" : {
      "urlPath" : "/FeedConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5132d170-ff28-4fad-89e5-a6e42841ef76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getFeedConnections"
        }
      }
    }
  }, {
    "id" : "805b61ad-5edc-4484-8264-ad4906a74732",
    "name" : "Searches for feed connections (application/json)",
    "request" : {
      "urlPath" : "/FeedConnections",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"items\" : [ {\n    \"accountId\" : \"aefbf6be-4285-4ca5-bf39-0f486c8515c7\",\n    \"accountName\" : \"SDK Bank 95921\",\n    \"accountNumber\" : \"123496842\",\n    \"accountToken\" : \"foobar31306\",\n    \"accountType\" : \"BANK\",\n    \"country\" : \"GB\",\n    \"currency\" : \"GBP\",\n    \"id\" : \"c0eb97b5-4f97-465a-8268-276513c14396\"\n  }, {\n    \"accountId\" : \"fc2f3cc2-126e-40d7-9fc1-12e52d0a71f1\",\n    \"accountName\" : \"SDK Bank 11272\",\n    \"accountNumber\" : \"123481122\",\n    \"accountToken\" : \"foobar74770\",\n    \"accountType\" : \"BANK\",\n    \"country\" : \"GB\",\n    \"currency\" : \"GBP\",\n    \"id\" : \"3b44b539-4e39-4d53-9334-d8ba01674752\"\n  } ],\n  \"pagination\" : {\n    \"itemCount\" : 39,\n    \"page\" : 1,\n    \"pageCount\" : 1,\n    \"pageSize\" : 87654321\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "805b61ad-5edc-4484-8264-ad4906a74732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.893495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getFeedConnections",
          "schema" : {
            "externalDocs" : {
              "url" : "https://developer.xero.com/documentation/bank-feeds-api/feed-connections"
            },
            "properties" : {
              "items" : {
                "items" : {
                  "$ref" : "#/components/schemas/FeedConnection"
                },
                "type" : "array"
              },
              "pagination" : {
                "$ref" : "#/components/schemas/Pagination"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}