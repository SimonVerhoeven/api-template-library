{
  "mappings" : [ {
    "id" : "b3af9f07-f2b7-48e3-b03b-2f3eeb693153",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/i2m2/Conversations/x54c",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH0ac083DaB3cf5Ed4A841B2Bbea23aC00\",\n  \"friendly_name\" : \"Kurtis Feeney\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-12-05T23:19:28.41Z\",\n  \"date_created\" : \"2023-09-19T08:19:16.41Z\",\n  \"participant_sid\" : \"MBD6b3f425e6624D02AaE16abbdFB6acB1\",\n  \"chat_service_sid\" : \"IS611B1Bef07bCD5c0D80790438e886Fc5\",\n  \"created_by\" : \"wxqbkpd62ry29q8iesw4fvj6azfeprn5n8fio2u7ltiea9dy9q7kv1pdfrdh7wxbgz4020cmo5reixdecoghw42otgwc64biy8j22a5zyjvntmbpzal9phm87dqcjiqd3fko1rniuc\",\n  \"url\" : \"https://web.example.mocklab.io/221662\",\n  \"unique_name\" : \"Racquel Klein\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 8354260418849325402,\n  \"user_sid\" : \"US38E7903eEb9c2BC3De8CB45A7F0bafd2\",\n  \"account_sid\" : \"ACA2aD5ebA4AF8c9D1571D3123A8e8Dfc1\",\n  \"attributes\" : \"i8pb45fj066ngq26k9g2gt8c8f09noepg8806wlep4zda7gqsc2pe35671j4kuepwbuplf9gbrtnv3u3mdusk\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 3558245217540858171\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3af9f07-f2b7-48e3-b03b-2f3eeb693153",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.410955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "11702d70-02eb-4183-8c54-b92f259685b6",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/0em3/Conversations/lykl",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHbd67E43f87BFD0431a49C3fc8AEDAccC\",\n  \"friendly_name\" : \"Zackary Rice\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-05-17T19:47:19.41Z\",\n  \"date_created\" : \"2023-01-17T23:58:43.41Z\",\n  \"participant_sid\" : \"MBeDdF20caeFbfeE607EBA1bEb05Ad3a3E\",\n  \"chat_service_sid\" : \"IScDd4152d9d9639Fe8396979BC0DfB940\",\n  \"created_by\" : \"infg3eim4asgylp7nbjycd7wk3x9ly21lt5ahpjm7h08nw0pytqtq8ojdb0ufmfdvlahwjxoqucmt1tpo3y1fsldvv5qqe91cm5xki1rtqj2u14zkkztjc5u6k0qtjr2r086lr3gzxzfgh6v8do8qsdj0x5y1uy718arcu2t8my2dfm6p2rd904jfz8l\",\n  \"url\" : \"https://web.example.mocklab.io/073635\",\n  \"unique_name\" : \"Lance Adams\",\n  \"conversation_state\" : \"inactive\",\n  \"last_read_message_index\" : 8119357498280194395,\n  \"user_sid\" : \"USb9103E1dE4274AbA201cD6a9da8afA6B\",\n  \"account_sid\" : \"AC58Eaf5c83FE37D7B08cAbd60e0960556\",\n  \"attributes\" : \"1a1b67sndg0ivwr6kyjtx5b185yeqtlcta135di1i5frz6xchqvvrhhkmhe8yiw6ssaxz8wnql3ao5a37veef3p2y1smxnb3uknxm2gxqjlpu0\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 4211588773254651326\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11702d70-02eb-4183-8c54-b92f259685b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.41047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b9ee6475-23e2-4383-8d96-a98e585d0e96",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Users/6lu9/Conversations/x60b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b9ee6475-23e2-4383-8d96-a98e585d0e96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.409936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserConversation"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "2d711f84-090f-4528-b619-aa68328c8604",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Users/f51g/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/582092\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/417701\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/827767\",\n    \"page\" : 8794811041145930505,\n    \"key\" : \"qjqni8jh53mhunqzkbjjkoafmg2qrrhbc1gliug4pm6mbqqao98dswsj2sdjbswv\",\n    \"url\" : \"https://web.example.mocklab.io/084851\",\n    \"page_size\" : 7731488659923398117\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CHd32DfE1AACb634b1e90CCcEF486AEDFF\",\n    \"friendly_name\" : \"Katheleen Gulgowski\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-04-09T15:11:21.408Z\",\n    \"date_created\" : \"2022-11-07T03:09:06.408Z\",\n    \"participant_sid\" : \"MBF9fCCf53B26cF1E2c6F8E2b8aeBb0b57\",\n    \"chat_service_sid\" : \"ISCDAE57C3f3EDbce1b5C2FaD0f4ebcFa6\",\n    \"created_by\" : \"jc4v8xung2nrno2fx2zl8bc1fvdpyhmepvlwjquorf70qr3ggoysmm4tdmjqo915kk3eggb0dx8m0dkqsesu7w0bcf1v3dwe856dgvu0e2w72du8rew3lyuan2384qnyvk1i1shox0lainbfxn84j7ovz75id7qtmjtzoyurzlcnaoe6rgirpbl\",\n    \"url\" : \"https://web.example.mocklab.io/599514\",\n    \"unique_name\" : \"Rex Runte\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 5720983647515593991,\n    \"user_sid\" : \"USbe1694A2FddAA465579Fc6BBE1fa6c62\",\n    \"account_sid\" : \"AC36Cf0A7B59d7BcFfA0b04C45B08fef73\",\n    \"attributes\" : \"62xgtp0ttapxibi8kj6vfnsuhqgu3lwn1mc4j884x49pd0w4g23nftdf2vsz\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 8859198591592400255\n  }, {\n    \"conversation_sid\" : \"CHA69f46DBFDF5b250EeDBEfC4FF5e4ADA\",\n    \"friendly_name\" : \"Mr. Stanford Kuphal\",\n    \"timers\" : { },\n    \"date_updated\" : \"2024-01-19T04:31:25.408Z\",\n    \"date_created\" : \"2022-03-25T12:21:39.408Z\",\n    \"participant_sid\" : \"MBD3BAD9Fa5ACa8C278d14B6fEa6e9408A\",\n    \"chat_service_sid\" : \"ISDCCe2bEabfEc2CB0BDeA7Eeb9DC6A925\",\n    \"created_by\" : \"jqh3nlh09q1io2dehfjl7znkfy\",\n    \"url\" : \"https://web.example.mocklab.io/657152\",\n    \"unique_name\" : \"Fabian Okuneva MD\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 2547049364300778890,\n    \"user_sid\" : \"USaD60EfDaE06f0b7A927834A48073afa4\",\n    \"account_sid\" : \"AC7B1dbad00Dc013b5d2Be3cdbA1ded3D5\",\n    \"attributes\" : \"0roctrgbcxua2h5p8fa7e53v1y47fqgfimsvzl2k39nwhh56yjnc5s99uk7ru7m1tgzrpmxnr9m01c5ubvvgy09ubbyrg2yoaoy4rmzz2kvia23w4bfr506jw2akhah\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 7861513609810319216\n  }, {\n    \"conversation_sid\" : \"CHaAf128b8c8aFCfB1d3a5BfaaA9cE5A5e\",\n    \"friendly_name\" : \"Veronika Mosciski\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-01-04T13:41:22.408Z\",\n    \"date_created\" : \"2024-02-10T16:31:38.408Z\",\n    \"participant_sid\" : \"MB30FC9aff9D56Ac6eAd6Af06dd88a36c2\",\n    \"chat_service_sid\" : \"IS8e7093BaFaDcA9cB193fEb39916aA66D\",\n    \"created_by\" : \"9v25rn5vmg6nahf42nhx6x6671oahsd94d42r6h7fii9ljlw38sutrvci24fv39hbmvte\",\n    \"url\" : \"https://web.example.mocklab.io/086005\",\n    \"unique_name\" : \"Sherman Bogisich\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 559830934839587193,\n    \"user_sid\" : \"US6f66D330Cb3eaFFeC4A7b3Ba60186fcf\",\n    \"account_sid\" : \"AC970e0DB28FaeA146E97dc7d7BC7e2ef3\",\n    \"attributes\" : \"qusv5y1q\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 2399674520828257932\n  }, {\n    \"conversation_sid\" : \"CHf2B82CdEe524F8E4F3E8Db11Bb13Ed2a\",\n    \"friendly_name\" : \"Herschel Reichert\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-05-08T12:08:46.408Z\",\n    \"date_created\" : \"2023-08-02T18:03:48.408Z\",\n    \"participant_sid\" : \"MB01324DeeA9B75D8287853b19d39A10ad\",\n    \"chat_service_sid\" : \"IS684635ceD4D26CdD5D8400fCFF3eAcBb\",\n    \"created_by\" : \"0dgx65gyd16v0stv2xu95x4xpdmbalweiemiuztgbjok97c14j55rcd32suuryl8511hqkj3s1kyrmsl9libjkw1fpndjswwm32gq3g8rd2j2wk4efz98vxq9uw42z3wri0uaxq\",\n    \"url\" : \"https://web.example.mocklab.io/655388\",\n    \"unique_name\" : \"Scarlet Hegmann\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 8855605304173195158,\n    \"user_sid\" : \"USB57c82eF53dEbb7fe6EE2Aacdf96b28d\",\n    \"account_sid\" : \"AC747DbF1B62a40dde4CEfD012FEEDCaDf\",\n    \"attributes\" : \"ct5a983wwkguzv5pul3lzspta7k7itsxrecflvnhfn7\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 4299289347455558473\n  }, {\n    \"conversation_sid\" : \"CH325cFcB2DEaAc6eaDCD1b835Ef59e6E0\",\n    \"friendly_name\" : \"Allyn Abshire I\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-06-14T03:24:47.409Z\",\n    \"date_created\" : \"2023-07-31T05:03:36.409Z\",\n    \"participant_sid\" : \"MBEBDba37290bc698cDaF2f3e468a3B41e\",\n    \"chat_service_sid\" : \"IS0BaC5AFFd1aFef5736ffc5FEBAaE10bE\",\n    \"created_by\" : \"ro75setvmsjupnxzl0w8fg353lino5jvvnxh0gmoxh55lalhy0r1kozxzck9r7n27x58rhu27izmt57cn16w7uq6vg01hcs9c9pcy93dm7ebm5fsa\",\n    \"url\" : \"https://web.example.mocklab.io/516919\",\n    \"unique_name\" : \"Elton Kiehn\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 2862648449132832492,\n    \"user_sid\" : \"USad0aEFBE4bFbAbeA5B44F27fd2D3E9BF\",\n    \"account_sid\" : \"AC54c97f7bf919ABbA19f34C27cFc99Ab9\",\n    \"attributes\" : \"rxzr7j3eip7cqsc61a334pv5qz8z6a5o7q2wiewpfshgdid2yi8wi5vb9wo91vh5bn115g0nhcq98wimpgrvbtqmqcpazqelukavpk807ds0m1c66924yq2verif0e0eilcx0rvc6\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 3384509369288782925\n  }, {\n    \"conversation_sid\" : \"CH833AAb741ECdfbD6eE0E185348df87Df\",\n    \"friendly_name\" : \"Dr. Kindra Powlowski\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-03-17T16:12:12.409Z\",\n    \"date_created\" : \"2022-03-15T14:40:25.409Z\",\n    \"participant_sid\" : \"MB52FaC2CBcCE1c7785C945c553527F233\",\n    \"chat_service_sid\" : \"ISF1F274eF3a2e8D1B31c0f52171e011c1\",\n    \"created_by\" : \"gbs37dv1u4jnf4dquv7y697vrvr\",\n    \"url\" : \"https://web.example.mocklab.io/050928\",\n    \"unique_name\" : \"Mrs. Reginald Lehner\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 1570156764169726471,\n    \"user_sid\" : \"US9ca56fcb5a7045eFe3302e60C8DD65dF\",\n    \"account_sid\" : \"ACEaFBABf144cB2Af4dC548c39cDFaa91b\",\n    \"attributes\" : \"ax47q0zpetsg3sahry3ganql70i9ovkowycrwmhkps7wpr3215uym524d6qu2d9aco7dkz0drxa91pqiowynmymzg8p0hwb4fslrsuhz4dx0ny3wryvbt7l5xbx5zst6kqjqyr8uhow0wirocsl2bloysmsuq54t4lita6rj2dnni99z5lkk0qp\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 439924867178433706\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d711f84-090f-4528-b619-aa68328c8604",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.409758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user.user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUserConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "4904b14f-99bd-493b-a86a-5e68b4d5862a",
    "name" : "Update an existing conversation user in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/763h",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Louvenia Bradtke DVM\",\n  \"date_updated\" : \"2023-07-15T18:06:19.407Z\",\n  \"role_sid\" : \"RL9CfE6b98B1EBFA45e046D0eD9A26B8d0\",\n  \"date_created\" : \"2022-08-15T10:53:30.407Z\",\n  \"chat_service_sid\" : \"IS96d8c612332B3c635D6aB461fd2C5Af8\",\n  \"url\" : \"https://web.example.mocklab.io/407201\",\n  \"sid\" : \"USedE5bf68A81e87F5E6c72aDE17F952Fc\",\n  \"identity\" : \"qxuf4edvm183vd8rvij8e3kbyee2x88wi2fbhhv4mdw6q3zzgk8wfu3rldg057tpzebr4nc7xxry0z7etvnt887ntbjou6l7pyljsr91i6vv4nb0hgh8tzh000rz7j2v011n2dc95oplzlyytng2dtbo03x9lt5wl9kzi1mkyis42jy0sw4degiqwl9hk4uve\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACd3811a713abEb7DDdBa22FCA8BA2CD10\",\n  \"attributes\" : \"slt1jl0r4q028s0s0l6abx2lkd0tnw5tqui0am964746rogo45qcmm2lwue5goeepe3e58xwl9q2nt04za6rudg7n5hbjkmedhajfdky03y2y80c4516ie6yqbbawml8xodqszvf4\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4904b14f-99bd-493b-a86a-5e68b4d5862a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.407764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "931ec297-b853-4b7c-b327-9c85408e11e0",
    "name" : "Fetch a conversation user from your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/0z16",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Boyce Schinner\",\n  \"date_updated\" : \"2022-10-30T20:20:39.407Z\",\n  \"role_sid\" : \"RLaC8B9b4caFF3653ca9FCD2c4a3b8cc9A\",\n  \"date_created\" : \"2022-04-03T02:18:49.407Z\",\n  \"chat_service_sid\" : \"IS07Ffd8E3f7E199d3568bE5D068190d3C\",\n  \"url\" : \"https://web.example.mocklab.io/385627\",\n  \"sid\" : \"US1f92bf2566A6cBc5b5faB1a1eb73dE09\",\n  \"identity\" : \"ivs8kk85vh96pcab1ujk5ut6ul0gfvkefm97dgy7tninhky5ewihebvm0jxw7lby\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC9CfacAA4C9E33Fb9BE5ABa555fda766C\",\n  \"attributes\" : \"bb5uhd5zizhvmjsuu11j1dqeffcifdx2sbw52ii1kf21cpcnqilxtmfsy5drufbyk7\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "931ec297-b853-4b7c-b327-9c85408e11e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.407425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "29cbdde8-327d-4dfd-b16c-b6199e509f8d",
    "name" : "Remove a conversation user from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Users/1359",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "29cbdde8-327d-4dfd-b16c-b6199e509f8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.407081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "44697de5-6981-495f-bbde-d8e697ca8401",
    "name" : "Add a new conversation user to your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Edgar Bechtelar\",\n  \"date_updated\" : \"2022-09-26T05:32:34.406Z\",\n  \"role_sid\" : \"RL65289a771E0adA6AaCfee9BC84a5552c\",\n  \"date_created\" : \"2022-05-30T12:44:48.406Z\",\n  \"chat_service_sid\" : \"ISd6AD371D3BDbe5995e4aB6af597bEBd1\",\n  \"url\" : \"https://web.example.mocklab.io/153380\",\n  \"sid\" : \"US9b6Ba11B5f19c6c6d1B57aFb0eBD2a51\",\n  \"identity\" : \"11225yvjr2hspcil5gejz69x9zs5yqkwis1q06ve9cradzon576fs4h7s3cx4uvcb4r40mgchv9ejg\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC53FDcec13c3f562Df87EA71CaffbdFdd\",\n  \"attributes\" : \"y588v266a9gbm6p\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44697de5-6981-495f-bbde-d8e697ca8401",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.406971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "12ee7954-8f32-4843-873d-df956d336bbd",
    "name" : "Retrieve a list of all conversation users in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/366505\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/700994\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/003818\",\n    \"page\" : 19941260495497919,\n    \"key\" : \"n1gkt1xh9b3e4b4sdslw4eep0wmwaoygob3etreoxznmxxdiq31349mp7syhhj0we6ubpnp18ab1jyx8ye3b9jua6b5sfr3a1msfdtu61fdou2wfhtfk5hq4ynico872usux4kmywvfbycit4201e3ivmnq93tcgoqsqke\",\n    \"url\" : \"https://web.example.mocklab.io/212963\",\n    \"page_size\" : 1097901955473980394\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Gretchen Collier\",\n    \"date_updated\" : \"2022-11-10T20:32:53.405Z\",\n    \"role_sid\" : \"RLca9Ff6b0A3AFAA45AAf0df7aab08EffF\",\n    \"date_created\" : \"2023-09-14T05:43:18.405Z\",\n    \"chat_service_sid\" : \"ISF6474231b37cFeB672ba3fed85C96d60\",\n    \"url\" : \"https://web.example.mocklab.io/527306\",\n    \"sid\" : \"US19951E7Aa9Da649d8c2CD8d3E0CfCC8D\",\n    \"identity\" : \"894sks3d2l5hs5n0swgy9zkv3i59sp9l44q763w2xwl45fj4g72ngj0dpmn3w8b2u1xuvk0iylryr5zfc3vmlvev3yqt8l3394mvsk0jxlrx52hc7y8xjzuw1zx32bual9sl1m1mrk9cg6\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC2AbBacbC09413ceb141625f76cA3DAC0\",\n    \"attributes\" : \"8k4huh8rlxsgthufjgchytlwx7jesbyjl79h3wftir3uty5oqydbs43mzsqzzhpfro4zutby58q09qddernntgnsnp22\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Mrs. Verena Corkery\",\n    \"date_updated\" : \"2022-12-14T08:25:00.406Z\",\n    \"role_sid\" : \"RL03bA3994dA5403f7D8aCdfE1ff6Ac4Ea\",\n    \"date_created\" : \"2024-01-18T14:37:43.406Z\",\n    \"chat_service_sid\" : \"IS2713EBE6cC777a081ad1bbA09A838Bbe\",\n    \"url\" : \"https://web.example.mocklab.io/886044\",\n    \"sid\" : \"UScbD0EBEDfE85CEc9cCbcA5AeceF1F5b5\",\n    \"identity\" : \"7ziwsnuggck3ib4qnprn2nnd2706jeqjzxjm\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACb1AC005278870AAA55bFFaf24271523A\",\n    \"attributes\" : \"p6t6bxy5g98zx1ci4wvducdclv51emp68beg5pqtu66qzc335xxr8va290gnt7qcxiafgfwbjj4esv67mofiu936jzmjslg8qe85a8igd6pfjely2xig4suhge8us4w\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Jesse Medhurst\",\n    \"date_updated\" : \"2022-10-01T05:18:24.406Z\",\n    \"role_sid\" : \"RLFA1209fC84af621a90F3bE0DFdf1f8ec\",\n    \"date_created\" : \"2023-11-26T16:13:58.406Z\",\n    \"chat_service_sid\" : \"ISe03dCEc5DbA109106bC2FD44f5CAFCA5\",\n    \"url\" : \"https://web.example.mocklab.io/454871\",\n    \"sid\" : \"USabdAC9f3D67cF3E35F58dACDbA42222E\",\n    \"identity\" : \"nqbpwljdbxjdscve4w8xghy3y5xae9n4o8flwrhl0hmrabpic7gzphpcu50sfaqb534t7nyg5hv7xfiu3i8bgf4qe8siu9p5aavmn386gfr8u6taziiei5i9oyg41dlc2ca4757ijm4n4hmmks\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACf119Bb6d3b0EF5Bdb75eB16630b7DFd8\",\n    \"attributes\" : \"anyph5by59cepgp658t60a\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Ricardo Harris\",\n    \"date_updated\" : \"2022-08-28T06:57:25.406Z\",\n    \"role_sid\" : \"RLc50790AdBB6F18a6f78D6097eadCc499\",\n    \"date_created\" : \"2022-04-16T19:37:07.406Z\",\n    \"chat_service_sid\" : \"ISa029Fb1C9d7daE4eB3b0cEf4A6a4492d\",\n    \"url\" : \"https://web.example.mocklab.io/621594\",\n    \"sid\" : \"US1FDdA3f53b8529eD776FDCdFa90B303D\",\n    \"identity\" : \"utab5z8zwykmzjpf83284ajx5apq2rjn8ludv80s438cfd20vlj93wwxxatbe1sg97w508gw9z0pehcqx80ivrgz47m6yp943jg0nuo0vmzz1loww2xsm1nu99\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACFBEc1F6eC2A69Ba0B6550EcdDE8D25D4\",\n    \"attributes\" : \"s8xmlbcc2cv3ktx9moyvrnw\",\n    \"links\" : { },\n    \"is_online\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12ee7954-8f32-4843-873d-df956d336bbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.406675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user"
                },
                "type" : "array"
              }
            },
            "title" : "ListUserResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "4cc38c6f-0ffe-4e9f-a23d-40721677fcbe",
    "name" : "Fetch a conversation service from your account",
    "request" : {
      "urlPath" : "/v1/Services/ISe75a2807AE47bBa3ADB26cc764EB44Cf",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Robby D'Amore\",\n  \"date_updated\" : \"2022-07-14T15:06:34.405Z\",\n  \"date_created\" : \"2022-05-11T14:04:57.405Z\",\n  \"account_sid\" : \"ACFafc2FFfbdD8Ae43e3bad5D85924AC2E\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/743586\",\n  \"sid\" : \"ISB5979Bb2123A48f5467337B5eff2dcbE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cc38c6f-0ffe-4e9f-a23d-40721677fcbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.405557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "70cac773-38ff-41d5-bc3b-814b6818fc39",
    "name" : "Remove a conversation service with all its nested resources from your account - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISe124cFAefEC2Af7AB36C72CAfB5F45bC",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "70cac773-38ff-41d5-bc3b-814b6818fc39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.405306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "0b0e60c2-6aa5-4a58-9314-52b147087a47",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/ISdbD86dDC38C21aABbA140aAd5eFbEeff/Users/58q6/Conversations/dayk",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHe7a6fc947Ab79E9aBb73b8af3D34FD81\",\n  \"friendly_name\" : \"Lloyd Sauer\",\n  \"timers\" : { },\n  \"date_updated\" : \"2024-01-04T07:50:46.404Z\",\n  \"date_created\" : \"2022-06-27T23:22:18.404Z\",\n  \"participant_sid\" : \"MB56FfFbB81e97CBBF9fEd7aFC0E66020b\",\n  \"chat_service_sid\" : \"ISb23e7C1B35E0Aaa76c0CEDB76DbC871B\",\n  \"created_by\" : \"utpar56xn3xvtotkbqsp1kgb1r4h2qnpv4xawinttrm6c9lndf89189argxbsg0drou34itgpa4c2ev2f76\",\n  \"url\" : \"https://web.example.mocklab.io/067773\",\n  \"unique_name\" : \"Mckinley Jacobs\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 1649752163737142936,\n  \"user_sid\" : \"USA0961fca2BFF1aa06BB0baAAe15cd946\",\n  \"account_sid\" : \"AC70BF6b81e6a32eAeF924b2fDF25DF342\",\n  \"attributes\" : \"4uvdhtey1w8x4w89mm8yba\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 4331615467968544551\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b0e60c2-6aa5-4a58-9314-52b147087a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.40527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "16ead882-c418-4b1b-aa89-190b6205c651",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/ISda0cFF7Ad5C9eFd8516c3A8C4c76bAfa/Users/663i/Conversations/65c8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH6f88b2698BC4C6F7E65234b00FA23aB3\",\n  \"friendly_name\" : \"Ward Halvorson\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-08-01T22:27:09.404Z\",\n  \"date_created\" : \"2024-03-02T01:35:11.404Z\",\n  \"participant_sid\" : \"MBd48A4C4e166b77aFf4ca25fcDD6fDB42\",\n  \"chat_service_sid\" : \"IS960fA8c7Be07456E694Adb25CA16edbF\",\n  \"created_by\" : \"wlk23a52sc764604jl3j8i9k\",\n  \"url\" : \"https://web.example.mocklab.io/006173\",\n  \"unique_name\" : \"Kristy Witting Jr.\",\n  \"conversation_state\" : \"active\",\n  \"last_read_message_index\" : 966862313320331510,\n  \"user_sid\" : \"US2fdA3AD1F77d1e6000Cba0153ffDde60\",\n  \"account_sid\" : \"ACcde0106B9e4EfAD9F576Def777286D39\",\n  \"attributes\" : \"uq8xixetdw2kvz2eqllglfk4ym3l8wzmae9paslu2po6ddwr40da3xd4qhuxo0crzuecou1dqvwfif8e1ikrx15fygnw695ld3zur3apcz1n9p675j9eap0lzm8osk9v8c5evjw1\",\n  \"links\" : { },\n  \"notification_level\" : \"default\",\n  \"unread_messages_count\" : 4762533625216091643\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16ead882-c418-4b1b-aa89-190b6205c651",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.404788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "5fefbbd5-87b9-4e7b-b926-0600cc555989",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISC4f95A481fa6EcaAb8DfDCeE9bdb133c/Users/mn0w/Conversations/9j74",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5fefbbd5-87b9-4e7b-b926-0600cc555989",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.404262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUserConversation"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "63b3cd93-ed2f-41f8-96b2-cce213136ea6",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Services/IS382Bf49E23C9B8D12a89246aD73bF3bC/Users/1312/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/151593\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/068553\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/083398\",\n    \"page\" : 7993123754559361818,\n    \"key\" : \"9on6qujt8sjrlhkoarek2wmd6cbqzn8k10egmn4p748k5dcn3\",\n    \"url\" : \"https://web.example.mocklab.io/695830\",\n    \"page_size\" : 313130613542764599\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CHAB0bE56bb095F11BD1a572B78AA17845\",\n    \"friendly_name\" : \"Miss Stanley Bogan\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-03-13T10:32:06.403Z\",\n    \"date_created\" : \"2024-03-01T07:45:31.403Z\",\n    \"participant_sid\" : \"MB9dF18CaefcE1E4Eb7e2DB1952DF1cbBA\",\n    \"chat_service_sid\" : \"ISC0Db4654Fa7BEc4A7000F5e64D238aDC\",\n    \"created_by\" : \"188b7ii3s2jlovl94grlwloqwkvfax56ulyjgcydze4nrulgez3f5fiuqkoyyyl5zrdgr7p0ox1zlapbnhb8i7603tulidqq1uzur5eq7ddahu44j2wk60tckzo8yf03wnr2o25locsvzen9a6oohvqm500g7z46fkkrq4vvqdm\",\n    \"url\" : \"https://web.example.mocklab.io/232047\",\n    \"unique_name\" : \"Doyle Dibbert\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 2850301360593488039,\n    \"user_sid\" : \"USCf13Cedbd259061d540209a59Ddaf69F\",\n    \"account_sid\" : \"AC5Da7AE6Eb3aD92b7E0f9078dAe715d50\",\n    \"attributes\" : \"x628wqbpz9vrs4whyur1q1ipit1c3cbqndbvlccp1ifh8ujjw7gmweh5ssfhs2357d33zlfzo93h2k63771dershbkax5cknu3v46bf9t7ji2gi6r3rgzgikclohuo1rgehqafshfffdx8djvfmpr1wej670j53a43as3q3agab6yveaoyi532xfnntc0i9q35a\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 8229340526802351029\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63b3cd93-ed2f-41f8-96b2-cce213136ea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.4041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceUserConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "84fb72a1-7f33-49ba-8e07-12ca720e199e",
    "name" : "Update an existing conversation user in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS80c402b52b180baa1cb2Fb5C0d33D53E/Users/njsy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Faviola Buckridge II\",\n  \"date_updated\" : \"2022-06-29T12:45:13.403Z\",\n  \"role_sid\" : \"RLF8973aa97EdcBCc12B157fCc3Fb35B14\",\n  \"date_created\" : \"2022-11-24T05:34:13.403Z\",\n  \"chat_service_sid\" : \"ISE9E0BdE9DD16d4d0DfFAdBcCeA09CDda\",\n  \"url\" : \"https://web.example.mocklab.io/496384\",\n  \"sid\" : \"US3ef7cC2E8C0Cb1b4691acBdeD4D9da3B\",\n  \"identity\" : \"j1psan0j8yvlay0wfoyh17sbdnxgz9uuseh5p5b45c4yq7mr9rc0sqei607ou8bj09vj2z52iup1mka7g4al0re81s2yfdygosqmkocd4kn1o6rype8xzagh2\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC444f60CFF1a6Dc9fDFda4eB12ccd249E\",\n  \"attributes\" : \"kil0c0gibk88xunpkqseseuhk18p21iuvj6drjqd1b954skatvou4zdnaofu9i6iksvp6v7nmr620s1jvfqq68t6e8xkjf397rv3s1i4hex7dv8p0at3q8smhr5kc9667gbkr5bgy8ff61vms131s0g7yjfd749lohbfx62f\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84fb72a1-7f33-49ba-8e07-12ca720e199e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.403351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "b5ecec6b-a90a-4808-99f4-544bedb6ccab",
    "name" : "Fetch a conversation user from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISEFc84db2dfA9d50cA9aAAf1EE323c550/Users/3r5e",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Epifania Konopelski\",\n  \"date_updated\" : \"2023-02-21T06:17:39.402Z\",\n  \"role_sid\" : \"RL74EFAF8FB5d5AA1Efd2BB8BD8FBA7cc7\",\n  \"date_created\" : \"2023-09-15T23:53:57.402Z\",\n  \"chat_service_sid\" : \"ISa7FDE88a7828ddC3fFf59E5FD38B6a30\",\n  \"url\" : \"https://web.example.mocklab.io/223444\",\n  \"sid\" : \"USca39Dc8294BE215c4263BC482Bcc6786\",\n  \"identity\" : \"ofnmedsb7d5rbah53imgi1nwbh6y0atsgzsnlnla0xwoyxyrrm6w1q7z8buel132axi3dvdads1ty4vm3fct3wgb19952u0nuq92ir45xr7bcfkak0lr4a3m\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"ACf0C4BC13b90eb5Ff0850C4f5D6A1af82\",\n  \"attributes\" : \"zr56pr3g6o1j9ma88jics98fsbz2eo0guji1wth08j5jhkn53oyk80g0j3wd7w4xuavitpxvhfbpcsaeu29\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5ecec6b-a90a-4808-99f4-544bedb6ccab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.403014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "ea593ba2-6fb1-4dee-84ed-50f7f60a2d28",
    "name" : "Remove a conversation user from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS029BedDba0dc157eacb520a993eAE12A/Users/eu2k",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ea593ba2-6fb1-4dee-84ed-50f7f60a2d28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.402676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUser"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "60084b7b-720c-42c4-a091-63b7044b4f91",
    "name" : "Add a new conversation user to your service",
    "request" : {
      "urlPath" : "/v1/Services/IS25DbDb38A892eF9FAa1F851BaC4cDCf7/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Felicitas White\",\n  \"date_updated\" : \"2022-08-25T19:08:28.402Z\",\n  \"role_sid\" : \"RL8FaF54fA48E50f35efA67BBf6DeCDBC0\",\n  \"date_created\" : \"2023-05-17T12:48:22.402Z\",\n  \"chat_service_sid\" : \"IScB25bf092E2F0c29F77dc0F0fec6D1fA\",\n  \"url\" : \"https://web.example.mocklab.io/154949\",\n  \"sid\" : \"USBE567Ce8afEea2D09Ad6c1D6bca8E8e3\",\n  \"identity\" : \"c99iy0lhk6o4ilygwvk2cwi4n8s7eaf9v7y714mzwion3sna143cmkcub5n84h3jfl47fmq9m80nficlwtg05kbq7dy58yd4q42ovhdt1xvtve1el0vfkfj9im8kdapyq1odytbp1n64fwedo2qs8akfkjenc4ovyi3nszshizzo31adiwq3cpik18j6d90ge02p878r\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACf4B6B8ff3f78CA83Ece79Ab1C5FC87B1\",\n  \"attributes\" : \"aof\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60084b7b-720c-42c4-a091-63b7044b4f91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.402572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "da6f0ae7-0616-4ffa-a880-75c0f96e63da",
    "name" : "Retrieve a list of all conversation users in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISBB247eB16da3E34Ea7e5AccA01F6ccEB/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/785638\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/237889\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/983872\",\n    \"page\" : 2887128217241836503,\n    \"key\" : \"t04k0khfas0alvwr00vwecv8jana7o3eigeambz9ktbsigkxaje1wrj5b9ja1tvqmwzfqxu3e30qnzgt58578ag5g67jmss6w3tqyyw6g2dnkbrqwz4t9tw4nn5odl\",\n    \"url\" : \"https://web.example.mocklab.io/778313\",\n    \"page_size\" : 6465920104025637646\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Kary Feest\",\n    \"date_updated\" : \"2022-09-20T14:54:12.401Z\",\n    \"role_sid\" : \"RL3E634676980cc5aeaec06249f87Fca9f\",\n    \"date_created\" : \"2023-10-20T00:53:22.401Z\",\n    \"chat_service_sid\" : \"IS8346B80d61B70b2E2fC92aCE1cc7b99b\",\n    \"url\" : \"https://web.example.mocklab.io/125151\",\n    \"sid\" : \"US48bbdcD5190E4Ec39d00c9879DD86aFC\",\n    \"identity\" : \"ilkjfuv4fj82mgrhod9sthvh3z5xw8gk93i0uxgefm4qhih9r1xu0cztmc1y0estdejs6qb4u7amwqztpolcpsqhlathrlxlfi82d105bm41sw053qsnkbq3pcemadna2otb41bszf3gyao5wg8fc66th6fsn1e9mzuqfwtj4zevger59h573o69mk64v6ibs\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACFAAdaFafe7AE9Ba6Bfa596C1a95D5Ce9\",\n    \"attributes\" : \"otokzvrlkiiaqek1mevqcbr313k4u0dyvqxs74licv5ij44w15mhtkhs5cwq5l5ofbnztew4iqoifq5ln\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Mrs. Buster Armstrong\",\n    \"date_updated\" : \"2022-03-29T07:54:34.401Z\",\n    \"role_sid\" : \"RLcfAcf378A2cFb4Db9db0a71eb25c086b\",\n    \"date_created\" : \"2023-06-03T05:01:15.401Z\",\n    \"chat_service_sid\" : \"IS42BEC4475b07c3DfACFdbA9a4c76ab05\",\n    \"url\" : \"https://web.example.mocklab.io/533260\",\n    \"sid\" : \"USf6e75B59392F19429D2B742ABFDa8dC7\",\n    \"identity\" : \"uvzh8rx81xmapti00ayw61vdn6gfu374jp0k9kbr1psh1bepxrk3j1dc3sv1q2mtxq8ke\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC4FFc2c1C7eBf8CA61Bb4B1BD7fe36e5b\",\n    \"attributes\" : \"z9gywtbneixvstyofg3bw65d1c4cxjaaf4xyik3vw2nlczn178297f47n0l4jel4sf7078ljn213qrmmyqc1oijnhd72l0yn9kv\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Riley Schiller\",\n    \"date_updated\" : \"2023-11-17T09:10:29.401Z\",\n    \"role_sid\" : \"RL2cA61FCB562C90C30baC09fbaE5f09b9\",\n    \"date_created\" : \"2022-08-19T03:20:59.401Z\",\n    \"chat_service_sid\" : \"ISd19bAdEbFa0310d95C0B5FbabCAc0773\",\n    \"url\" : \"https://web.example.mocklab.io/796763\",\n    \"sid\" : \"USB34d86cCc3C685fFB8860Ae4F2c9FF7a\",\n    \"identity\" : \"0e5tayl18vhiibz8r6hkzo31c27lhbf65kpl6d412srqm34sqlzat7t374sbgr047mtqlg02ds0macj9oeuh3q1vtwrk\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACF7aBbEa1bdCEA35cA27a5EAC6d1Bb9CC\",\n    \"attributes\" : \"tbpid1yqi4tith3xwf5li1tukv3u0ogpz6e689epsejdb5om5uyzgc016owgvcr0zl0cy0h3\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Dorsey Welch\",\n    \"date_updated\" : \"2023-03-05T15:07:14.401Z\",\n    \"role_sid\" : \"RLe83C181F1Cd2AE1A821Dc386Adc737AB\",\n    \"date_created\" : \"2022-04-14T22:23:31.401Z\",\n    \"chat_service_sid\" : \"ISf29BFF4e6e4AF30f2efa1fAabC28016F\",\n    \"url\" : \"https://web.example.mocklab.io/491812\",\n    \"sid\" : \"US73D9B03dfEC7BF91F61E439c20F6B79D\",\n    \"identity\" : \"9op1mecb4ro8cxezs6nkq0v7y1hv7owfulo2cisfielumizanofv97hsoy9qx5idxxqklldr1h5k4vfv5yphyfjsec3w13d6wg4q2nhkfk936dmdmmz4bclr0c35flwbwx53y0t1yv675zn1yuj573qky3x6w4kz4x5h5horbxj5ttv7dn\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACFcd1ee1825f8fbf125bfD3b115D1422C\",\n    \"attributes\" : \"juez\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Sid Weber I\",\n    \"date_updated\" : \"2023-01-11T09:16:25.401Z\",\n    \"role_sid\" : \"RLF8C05a1eaAaAc84246D6b4bdB5EEAFc0\",\n    \"date_created\" : \"2022-09-07T17:36:48.401Z\",\n    \"chat_service_sid\" : \"IScF4c6E0848f9dc213DFc7dfaE89C3b07\",\n    \"url\" : \"https://web.example.mocklab.io/882079\",\n    \"sid\" : \"US6c4e4a2B8962AC60ae407ddE23BCdF7b\",\n    \"identity\" : \"zstp5nsi1p5pib6pawohlwics8g3okoqjltjixlv2gi58idd77wi82zlu3oeerr9ivh1lejwe0v0uwme58x61s2nmlb5pte5o14o4rsg5xptgycs7g3u286rqzh8etco34zhd6xs8k7btlf9d7kgg1l8\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC0C39D15A906C4A5cfcacFb958e0f6bcA\",\n    \"attributes\" : \"oo4yxbz5nuv8yox5hta248a338ep46xes5r9zlznfync05u0252u20veatxuoqe3vygzjd2nb0hc4cfng9gdo7qlvxbl1ixppgeik9hiqk6efy9divm9yeul2i2cf6zw2zxjz3s4\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Pearlie Zemlak\",\n    \"date_updated\" : \"2024-02-15T18:27:25.402Z\",\n    \"role_sid\" : \"RL1f0e6fEfb1AFCDdB5cca2CfD6eEbc0d8\",\n    \"date_created\" : \"2023-06-20T04:59:56.402Z\",\n    \"chat_service_sid\" : \"ISca6CBAfDAef5264a68FFac0F7DAc3F90\",\n    \"url\" : \"https://web.example.mocklab.io/350215\",\n    \"sid\" : \"USD8EfAeb006b0f46Ac79169d7Bd784F5f\",\n    \"identity\" : \"7xjm2b6kunei13n1f3k3vygsu8sy8tbwuwcyi1b8o6zytm47q6ye\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACcdEb62dfeBD0f76A5e1BDdF9965B0B6d\",\n    \"attributes\" : \"gajdu8pte862gffiu4p36h1opp5dz8y2njrtasro9e02sbs9an1\",\n    \"links\" : { },\n    \"is_online\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da6f0ae7-0616-4ffa-a880-75c0f96e63da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.40226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceUserResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "b3b7fedd-29f0-41b5-83e6-b2e4bd2b3bf4",
    "name" : "Update an existing user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS3bfAEbDEe76f9cEf57e44c259B9f6Cde/Roles/RL1022Ba7cbCC79f1c39abe52cA29EAd55",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Ariel Roob\",\n  \"date_updated\" : \"2022-06-21T22:33:38.4Z\",\n  \"date_created\" : \"2023-06-08T00:17:49.4Z\",\n  \"permissions\" : [ \"c74huq27zvmh863uk9jricidi7badsm74g3ecawb67zxma232gxxl8kplxa7i40pxpxt2rc\", \"f97dpl5aprzkejjbdyrjqbpa\", \"nbnhvtttnxnt5v0emyvmyoexilpr047g262qpmd0o0nw63iv9pia1y51dsckdp8axomdyy85r9axcjuri9sliohgdl4u8cvdmnsejcn8g638i22\", \"5t28vaoumak19esyg5aht1ffgpq6i0dxud24gqdwoymfy53qkydobs40cok4vca8394i26y0\", \"6vzko494jv6e7xj7smqkqpqggf4s0w6wuj6\", \"z45sfymwrhbpokqwdpppmrjm1547wqxf3weyzjskejfz5cp5r1uab8a5pvxh011qkf7ev5ich54fsjo0rcnif5j6lebov145xdrwgh33xv6i19owp3a\", \"8ol5mb2qd24sj50rwugmyct42fs0v6r65f32k958jc5zo02a0o9h8zi8r6p7tub2en0kkixk982nfhm9z1cqm1694ph5bdrsv6h20xxypfx01gnzkq0i75kap5325susx2l8u7abz9kyknx1k7u7yv\", \"snoruvs5td5zug3jm4wm26pi8xqzulke49moe2038u5cv73qxbt30xtk300wel319jfbqe2i0btrbo20ldz1670utqnhko6mn9f4sqgkev8oju3xgxy9agno33o4gfi4dkua5o7k1700sma1mz1yejkrpjimlahrzr7teysdp1v78p7kao9hvpl1d7jmp0\" ],\n  \"account_sid\" : \"ACcae26CD74DD51b74F5F868EcCB0BbFf3\",\n  \"chat_service_sid\" : \"ISddFf2aEcEB3B2F3Bb5e1be89c7624327\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/872809\",\n  \"sid\" : \"RLa1DaF1C189Cd3381aaFF6F87bbD30EC0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3b7fedd-29f0-41b5-83e6-b2e4bd2b3bf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.400806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "ae56ce7c-0393-4de6-a3b4-fb94ea200820",
    "name" : "Fetch a user role from your service",
    "request" : {
      "urlPath" : "/v1/Services/IS9BDEfC7Db7c3aA7aF6ac77B4F7Ea012B/Roles/RLafD7acE54A3F06c5EDC9EC4F1F8422c0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Ms. Tamica Little\",\n  \"date_updated\" : \"2024-03-02T06:31:20.4Z\",\n  \"date_created\" : \"2023-01-29T20:15:46.4Z\",\n  \"permissions\" : [ \"ecbkqfj9svwevmdsu5zojc96sxpjwnaxkf0t0lhc022bj9q2fx87hexlgsosdpio5xu76gdn1dclh3ifpui9k76xu4p84f8x5639bxgd9f113e25sfvatfk6ydslp87x40utwu225p1u1wez8g1pbym8wkjtq6lyyq8\", \"5xeckb19u9lj2ai8km7kg7ahsa0s4d9ot\", \"4gs8b5erzevz9i6zq4naadpsrxy6hwu74bhqucatk39tvyj1kcptmfnc8rs53scjt4d\", \"v3v50c90uvgay23k6k8p81se1d\", \"40v4oe8z0k44aqw664mlhiv4y1dcklp0jgjjrodt3hzh8ucnlm6qfrznh3wqpzxtnl0qw5f9fw3osmqk2y5mjckmvc87puurieqf88jgkcud5py94pf4ljkuwojs5ejfhfh39ecuutbm48li5d4k5mzq3fenzc1u8\", \"4i4u33l7753xdcbvesmw2jgpad2ba5cb7lyqvji202fapcu6l9u6euu4ipyr612vqixrhd\", \"5dnquiymgp4fztjzdws9ed9hyvlbarjpbu088miz6e0o3botpu1nd4el5sijez6eag59tgh3v2g8wv0b0ijo7i668nqopon\", \"2eqq2g6gdltf2mx76qf1c1u4tv7xqyznm19go7fwp0sa65z2n3jrsy4itzi4mzooo\" ],\n  \"account_sid\" : \"ACC1AF345BA12A0ad05eD5a9F5e12887C9\",\n  \"chat_service_sid\" : \"ISb923ACeB98642724a7DC7CFC5C8dC15c\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/827871\",\n  \"sid\" : \"RL37dC364Ba1a8d39cDbcDB4376A7825e1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae56ce7c-0393-4de6-a3b4-fb94ea200820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.40054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "9b00cf1e-d8b3-4ea7-a08d-f8175eeeea04",
    "name" : "Remove a user role from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS97eeDA3DF852CCEb792c6BADff7AcD04/Roles/RL6D9DFEeBB54d6b49c4556cbea0cDb318",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9b00cf1e-d8b3-4ea7-a08d-f8175eeeea04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.400259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceRole"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "933481f8-cc8b-4c17-99fe-8797bd24a993",
    "name" : "Create a new user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISA87D458CA1185E3c635fC3Fa85C4FfCE/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Brian Walsh\",\n  \"date_updated\" : \"2023-11-28T16:56:50.399Z\",\n  \"date_created\" : \"2022-06-30T00:30:20.399Z\",\n  \"permissions\" : [ \"1rzmq30fommhzqjb\", \"saqhgi6weuomaewq491k4fjqcgwolj5744cthf071n53iua9sxlq64shvdrnp3vpqn3vfyub6db0omh3vcflybl7bptbipcjknh8rsxg50q9l6a25lnpmmot2t74k0i9nexn0qxzfxjd8i48ehudm2d5y84oi27bjes5ve22201hqqh8n27e1v\", \"aj7jnpkl245jrad0uuhztv7y3kmkysi0aksa5zfc8x32kz2ybmxn62ddu33rylr9slglio9wdaklp8kvb466em04hslg0ear7lew0vq784c6cr10irfer9w01tdpm5jjr5nmromx5j0kqyz8sxkkzxxsxnax006t5litpz9kxv46qzsw6nynfo39tl17093jcgw\", \"jfwxdfsjiugrjdfou12rl0fzjsly1gpvej6lgx6ljb6pci17rm285hzqtuimudb0aic5meqvfvrz5jivnrv46zsf7u1logz5nn9i4r7dgf9ri9dmyypmtqr0lnjz6eymp0py1ubsfj\", \"1go0q7wdgkby6ajiserkpe9gv0l3nm0ze93vj4wosrfab1k6kgh440\", \"urj24zbxdhlusw38eejdrs70wsae0o0z6g41det8r7ax7nm8tmoglew5hk1h7qwp2n2t8zpnrvklmtlhwwodvuaogcjz74an3jwg6p5cwgzm1czk4iy8dap2j8pptn6tsn7onc4he8kwzv6lifi1tqcf5k6992c2xhq8695fdmmw\", \"37iqzf7weio7ekttvqjkr04z22rff6\", \"dkn4wrl4699n1003afg3yw07fkg5kad71d59iwo2fpq3p2xooxjwxntk74fnd5z9zmyiqnamz37wsct8u2uyzmap4v7crmokyv5zbskdpgn2qhuszkajhm4acxo893qxen6k7f0\" ],\n  \"account_sid\" : \"ACEC71e51F9240EEF88d1f730f6aeE3D43\",\n  \"chat_service_sid\" : \"IS67D17A3eBeE9C3CD5565c17adedaaBe0\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/042701\",\n  \"sid\" : \"RLef8cDCbb47B2e71793BaFD7ce89C2dD8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "933481f8-cc8b-4c17-99fe-8797bd24a993",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.400204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "1ba78152-a81b-4fe2-a349-045d708419a7",
    "name" : "Retrieve a list of all user roles in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS8Dfd26dC171a0819a250aFE0A5ff6B67/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/040493\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/489174\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/708729\",\n    \"page\" : 5605910706531611818,\n    \"key\" : \"94zbfnnvkfo169ca4jgwr5w90l5jebxxcfvh1zokreaqbjf6gwqqymad6esaj3klczr4qj98pe23su261zahueu6jqe3mt5jpd1v2rxz82v46e2zef9088z44g05rvhv6wvcic42gn3dj3vg5w0wfsh45wedegbukhiht877ag82tpr1zrt5u1xtaj8v7\",\n    \"url\" : \"https://web.example.mocklab.io/963683\",\n    \"page_size\" : 3517622925321926776\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Chase Glover\",\n    \"date_updated\" : \"2023-08-19T18:37:04.399Z\",\n    \"date_created\" : \"2022-11-01T14:36:29.399Z\",\n    \"permissions\" : [ \"ijsf3slpcf0n9fpg2u3a36sbtlkaz1lg67kbpw99spai39yzn7cbviuwm\", \"qotjuoqr802tzd0j7fdguzzb9ptim3te98rcob6magi8kthznbaoaskuddnhipqewh946sdt\", \"2kp5f0dfpddp28wezx6eywitezpfceey1nbq1m116hcahr5xvm1183rr3ufzuiw4sj7u87t7w86rkk8kyzge76z6rxmu62w5beip7\" ],\n    \"account_sid\" : \"ACDE9bcE5374BcEDfC68C06Cb90B5A8101\",\n    \"chat_service_sid\" : \"IS4fd191feCc4EDD640EdfEbefA0304DBE\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/801162\",\n    \"sid\" : \"RLFde5e412Eac94D318f9Dac40F0F7Be1c\"\n  }, {\n    \"friendly_name\" : \"Seth Stracke\",\n    \"date_updated\" : \"2022-08-01T21:11:01.399Z\",\n    \"date_created\" : \"2023-12-05T16:11:03.399Z\",\n    \"permissions\" : [ \"2hf5h3rrrt6peuue7pah2ruoyj53cshj8tpaok0nieqth0lh8yipbo27zqd6c2ahpywyxncnh0jfzw5zi7h1spcv115xlx9117wjuv4gksjdj255daktwmnktfl6uv3m4pujmd4pfe11q6hntkhlbds5g5tg3yfhqo8we8ngu2xhvxz8yputywn\" ],\n    \"account_sid\" : \"AC6E39A395B5cd49f4E565e1489Be88fF3\",\n    \"chat_service_sid\" : \"ISeED6155d80Cd34dec03C6852a49BFAB4\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/062126\",\n    \"sid\" : \"RL0172fa710AfBaDFd96fd69E00B97419F\"\n  }, {\n    \"friendly_name\" : \"Nanette Rowe\",\n    \"date_updated\" : \"2022-04-24T19:08:30.399Z\",\n    \"date_created\" : \"2024-02-09T01:08:02.399Z\",\n    \"permissions\" : [ \"f4qr4g7e6wfcfmn09wj2i20bvccfi9h2a6fzd2rjoupf3euqp4bpdy1cbqayc42ygsbe6fbcnqvgtlycni4ke0djinyua01cv2e2k9r2052jlnio4g22lzm08asa0h8amnt0ilaodlheegfx2\", \"ph9mkqacync4biyvxmm6v4c2fh696o3a244lvx0wvccaf03ra74hcuymdayme4rsp0z8sry1ruomf7p3of8y352b17sifnzcy9lhss84ei9oemv41p2re13qtjg32n2m6qr3vofvloysmxftjyhzmefmzb3znicbro0hdzpirr82ho8muad1u91kijcj5akijf\", \"w9n95g2u30hi0mv4ho9yfr74qtpmwuwef4tubtj2pk030pxxtrn6ccb0nsnorun6y5ureewlpcldyk9dkj097z2pjxzapa53p7era4i6eiqcaymhmyulh5j3je2k4xuz50zlfvvxl\" ],\n    \"account_sid\" : \"ACd47C0cceD0BaEaC92De0EfadBa2fFE17\",\n    \"chat_service_sid\" : \"ISfc4B6cce96Df5AbB3c4e0929Db4bC7aB\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/901210\",\n    \"sid\" : \"RL1B1fD4EbEA6B03f485ca6dD212b238ac\"\n  }, {\n    \"friendly_name\" : \"Norbert Leannon\",\n    \"date_updated\" : \"2024-03-01T20:23:00.399Z\",\n    \"date_created\" : \"2023-12-01T12:53:11.399Z\",\n    \"permissions\" : [ \"4de0zv9b367bom1pcpvsy3vel69qetahslrlg381md3qnfn5eqv1lrx84jrmmb90cs7o41e6qgwghkpk5vi21to1epwb7sqw3\", \"oioads99vuv3jiwwa640gqn805w24tg6lpjz3s\" ],\n    \"account_sid\" : \"AC1EdF0526AB99E22EbFC45358d8DF00A2\",\n    \"chat_service_sid\" : \"ISFABd5Be2b4A90AAA8800A1d1aeEcfAEa\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/079512\",\n    \"sid\" : \"RLcb7d34C60DEC997A1Acf9c3a0C21D8EA\"\n  }, {\n    \"friendly_name\" : \"Miss Jerold White\",\n    \"date_updated\" : \"2024-02-09T17:27:38.399Z\",\n    \"date_created\" : \"2022-12-25T13:45:41.399Z\",\n    \"permissions\" : [ \"owu79ost05u9vu9gr3sgnm712nszlp71x0bhxru\", \"k65516ecm04dv4ly84yu1kwezis3si9m6too5l6c39m6z3hfasb3qcw3wn0dcsedlc3qonfpycxmhyz2376mnwziq4s4lgq0hsnq3b98rv1meon\", \"vdmzb3ksamcgkscxqhb2zjgjv9kk6emwuv429bsuf4xee68jcc3nzjde\", \"8xpcpzhtffy7vvha3memoawuhstes1dd5lbzpqf1gisji2vk0l5wr5cdzpgule54cvcoraya8d9u87692s16pu5uy3gptwsr9wn8juc8nbilhyu377ypg6tmuq38ht5azq2mdfpzsgovuyyn8aocr5ps6mcqjx5d83xnugqr9xpku8qdopff6f0637bsy\" ],\n    \"account_sid\" : \"ACC8A5Ff6EC9b9CA9F7fefc01F678F3aFb\",\n    \"chat_service_sid\" : \"ISF8Dfad551579BBa28a5BCa4CA6bA8374\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/882102\",\n    \"sid\" : \"RL062d0c8d8982EB6a51edF1f6dCEcc9B4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ba78152-a81b-4fe2-a349-045d708419a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.399911Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_role"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceRoleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "de9de3d0-8098-4a55-9dd0-7e50fc07b712",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/Services/ISCA7c65a0Fac0fbB1CCd0D0E0BBeF8FeB/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/490302\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/939814\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/335320\",\n    \"page\" : 5738650661418208472,\n    \"key\" : \"86eupf7uxa1tqh8qtntlbi51wzvbnu3naqsssvzyc35bowavwcggez4yv6zmj16uma0df6mxjp\",\n    \"url\" : \"https://web.example.mocklab.io/049366\",\n    \"page_size\" : 2317843521001098811\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"3zhjo2y0xdzgikudx5rhws00zi65iscl9o7b2gtzd57qvky48\",\n    \"conversation_sid\" : \"CH3AfBe91B04a3e5e0B05CBdbcEB01A50d\",\n    \"conversation_friendly_name\" : \"Rashida Larson\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"4zeg0wjnvc32gla6rbdgsi669bown8o8abzdgw40vwu5k7bgdt86w5quema2qg5vhnu48fgse5tasxtfzl6bom3s854kjuddbpyw2iwwkjph78stmss6pb7ajorxaawukqhpaotjebaiau8s1m5tbm1vonqzmgekuljae89tq9f519l\",\n    \"conversation_date_created\" : \"2023-01-21T03:08:12.398Z\",\n    \"conversation_attributes\" : \"edwwrhdxrsk6v1h00k2rzvzg3py192m9kopox1536ifg6my5wgwp1m8lprfyqshvsaozwfgno478l3s9sytqrc2eb72xr0ubws5m1nimzr6cyq59i9op8v5o92ez5dd0ql9949389e85uhawcqnxpmdiofwg\",\n    \"participant_sid\" : \"MBcaC7a677eb33CBFC82cDc908B3Ac2F43\",\n    \"chat_service_sid\" : \"ISDEa0b78cfF93EB93527E245d6fac6c65\",\n    \"conversation_date_updated\" : \"2023-07-01T07:27:08.398Z\",\n    \"conversation_unique_name\" : \"Tiana O'Conner\",\n    \"participant_user_sid\" : \"USD21366cb9999c7C67e902d73e1f857a5\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC3FbDA292Cfefa6Fefa4Db95c8df3da39\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de9de3d0-8098-4a55-9dd0-7e50fc07b712",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.398697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "f9491379-7800-4fd0-bfaf-d801d86cd5c7",
    "name" : "Update an existing conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISF5076401A201f984aD525b18a63C80b8/Conversations/84mb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Stacy Schiller\",\n  \"timers\" : { },\n  \"date_updated\" : \"2024-03-11T11:41:23.397Z\",\n  \"date_created\" : \"2022-08-08T06:42:00.397Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISec6FF1eDE8E63f4dB4f283A3Bc0C5441\",\n  \"url\" : \"https://web.example.mocklab.io/554917\",\n  \"sid\" : \"CHFA40bF40FA6aDcE79B022C415Ddf6aE9\",\n  \"unique_name\" : \"Jennell Jast\",\n  \"messaging_service_sid\" : \"MGe6D849b6A19FFDFd5c06b7bAfF5f117E\",\n  \"account_sid\" : \"ACA40BB2B9eCB9aF42C7916ea0Aed0dddA\",\n  \"attributes\" : \"lm7cha8fkhgs3ni3cv\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9491379-7800-4fd0-bfaf-d801d86cd5c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.398063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "63a782d9-8c83-4508-b506-ceafcb19588b",
    "name" : "Fetch a conversation from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISD0ee0f9a9DbFCA560e0dda31FC4aCd56/Conversations/924r",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Kurtis Christiansen\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-10-07T17:55:25.397Z\",\n  \"date_created\" : \"2023-09-01T21:37:02.397Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS9afdBfFEbA3BD82Ef0d51Bc216FF3de4\",\n  \"url\" : \"https://web.example.mocklab.io/133434\",\n  \"sid\" : \"CHc058A719cC101E6f1C5c9306Ce8b65Bc\",\n  \"unique_name\" : \"Micheal Wolff\",\n  \"messaging_service_sid\" : \"MG1E77F51da145e9aaf806e8aFd73726dD\",\n  \"account_sid\" : \"AC9Ea9ae3d93EeEcb47Cf8cAfc6ca3f5B2\",\n  \"attributes\" : \"1yrkwhlv6j6ea1nqqgptdwjwjjkwhmmf5o69lo2n8chwroi97uqz35f9l88dlrzx9xf2xnb3vyacv0hnag3c1z6xy34xx3b3l6homhjkfsmmax6uroswnfqpd1hx7a6d8ep2tvkjqfxtg3xnhdsm4\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63a782d9-8c83-4508-b506-ceafcb19588b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.397688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "bfc8196a-a458-4d41-a1d4-fb909ba6c7f9",
    "name" : "Remove a conversation from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISAbAec2BEBca006bcB27ee3fE271fCbaE/Conversations/vum1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bfc8196a-a458-4d41-a1d4-fb909ba6c7f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.397244Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversation"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "72684231-7486-44bc-a895-1f0a446dde18",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/ISBEeb0c7D607f8703B9caa2cCD67bE3bA/Conversations/s3x8/Webhooks/WH0c0Ee9D6d3BfdFeDd40a835d9De5b1bd",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHD1705b0e24583EA7ba7Bb98f7aCb0c7b\",\n  \"date_updated\" : \"2023-12-09T03:51:42.396Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-10-14T08:48:14.396Z\",\n  \"account_sid\" : \"ACB9Aa67C7cAffeeaF50b47f9e0D0bdBeE\",\n  \"chat_service_sid\" : \"ISA7aBaa5AAfDe8fA4CC8CD3E3f4EF7Daa\",\n  \"url\" : \"https://web.example.mocklab.io/446343\",\n  \"sid\" : \"WHae82ea02c4B57DEC22286EcE3Ef9ccBb\",\n  \"target\" : \"ppj1mb8csrelskm82iwhw6490pt1xztxwxuyeg6u7lll5o8if047t9q69kys4juk7ez2yq0qayghgc2rtmgm918y4ngqv9mk2w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72684231-7486-44bc-a895-1f0a446dde18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.397147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "427b1485-c3ba-407e-a632-c9d40525c305",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/ISc1A5edde7D9E6BBCb81D6cc4d1e17E35/Conversations/6458/Webhooks/WH49Dac1E10f35a5DB5805b4AfEFE3c0b9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHf0efCD964aAB0Ec218746b6E5c6eCFAc\",\n  \"date_updated\" : \"2023-05-12T01:19:43.396Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-08-26T13:59:40.396Z\",\n  \"account_sid\" : \"ACABf2383E090CaD98fBaEA4bE00202ea6\",\n  \"chat_service_sid\" : \"ISDeccE00F804632c0DA5f37bdeCc874a2\",\n  \"url\" : \"https://web.example.mocklab.io/588698\",\n  \"sid\" : \"WH956FdB67e1E2a1EbE781f9E01D94cE6C\",\n  \"target\" : \"093p8j1pjk4mlm9fefl9wb3p57t3dlgsql4vcj3w4yo5o9vvc5ophwh42x7w6k3u51hz2h24ih0cm43054lqxhhfwmoqahd059vq6vyqvmvj7814p3gg54xs13cqkkzf92wjfz38usuhqjcavzxu4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "427b1485-c3ba-407e-a632-c9d40525c305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.396891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "d509bdf0-bf50-492a-abb3-c88cb548edf1",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISC4EcE905cec6b34c4dE6F9BAB4D6441D/Conversations/1l04/Webhooks/WHb140342437f6d0C803c5E51581aeD2eb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d509bdf0-bf50-492a-abb3-c88cb548edf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.396628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationScopedWebhook"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "35929671-8a23-4ae6-af0f-513159e0e6d3",
    "name" : "Create a new webhook scoped to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISbd36e9E6FaF228E7837b9Fb7d8148DAD/Conversations/6h3a/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHB76Adabdcbf5DAcAd1C9bf4962d69EB5\",\n  \"date_updated\" : \"2022-05-29T15:17:31.396Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-11-21T05:02:23.396Z\",\n  \"account_sid\" : \"ACcf3f1D6d1886dc04eAc649E82c35a379\",\n  \"chat_service_sid\" : \"ISafFE4cA148f10DE4cDAc5deAc7f570ee\",\n  \"url\" : \"https://web.example.mocklab.io/847181\",\n  \"sid\" : \"WH2c51d7E57fbac6BeCABdfB1d7fa42E14\",\n  \"target\" : \"obm7jz7gyowxqdz9yzikql8hd0tb1j5onh3dcjdbu6jaftghwca599qfpgktwe950y3385jwqwbk50ikbi3wg165a5yjqy2v1yf0comsmm85bm2mqxz0hh9zx97\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35929671-8a23-4ae6-af0f-513159e0e6d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.396522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "024467e3-14e6-4800-9f42-fb2a6343cbc1",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS68Ef98383eaadbB36B3A94DE4Cb4Db0C/Conversations/9hdr/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CH02091370501F89DbD4B907fF3B2CFebF\",\n    \"date_updated\" : \"2023-11-23T10:03:58.395Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-05-02T11:36:36.395Z\",\n    \"account_sid\" : \"ACcb8fa9fFEE4dD5f44Aa6b0c83c2d26f1\",\n    \"chat_service_sid\" : \"IS574a7fC7BC1387d9Dc69eeA91BE7fcFe\",\n    \"url\" : \"https://web.example.mocklab.io/843995\",\n    \"sid\" : \"WHcafC782fCaE1cECBc9052DB08Be02a75\",\n    \"target\" : \"dzzgmkyazf1cpuexoa2gc4dhqag34bx4rxs8yjgnkimumfjkecuu8nkevkkv9dri580m6y6ld8q8ovda11biyituyqmg5908ih3suob5bfndzw6vyht7dojf802f0gnbbel9v5z251nbju8600w1nurecpvpy1dvsbyxvevh847xk0izjqrkzzwm27q\"\n  }, {\n    \"conversation_sid\" : \"CH82A2Ac645Ce7A8ec319eFAB403eeD19A\",\n    \"date_updated\" : \"2023-04-07T04:34:02.395Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-05-07T12:25:50.395Z\",\n    \"account_sid\" : \"ACeA8dEef0E2C56c646452bcaACd0817FF\",\n    \"chat_service_sid\" : \"IS40Ae23C0ca028Ea4112e62CBdE37272d\",\n    \"url\" : \"https://web.example.mocklab.io/942113\",\n    \"sid\" : \"WHefF9f8eae4dcF27aEf25fe48Edc0D21a\",\n    \"target\" : \"e4kx7ee961aodolbpmsmqmda9nrnflp28wquo06almtzzcdgpbxk4igr3v5udlpxs3z3b71sz3wq381balbvi9h32ohedkrcmfgxdiknwmq4vrrbymy68e3297jzqr4rtibq1u6jbhl2ufwly77ybdqo2mj2s9s6vjdt7qcsly0rphf2hdwyi0bdfzim8kqgq7frk\"\n  }, {\n    \"conversation_sid\" : \"CHa6db4AAaAD1c0fAca2f1C0DE6FAeB78b\",\n    \"date_updated\" : \"2023-06-07T01:20:59.395Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2024-01-03T15:36:31.395Z\",\n    \"account_sid\" : \"ACAA7D3cfdEa1ad4BC0B25eFAc42ab3E83\",\n    \"chat_service_sid\" : \"IScfCB14414a38E96bbb94AB4E9666ba56\",\n    \"url\" : \"https://web.example.mocklab.io/088029\",\n    \"sid\" : \"WHdc3f6c3B1187e7dFddbFCF1d377F57d1\",\n    \"target\" : \"52hz2hiqqkouz2g1ngzyyjcju2xw2qpp9j7un8np9ku46xnu2a9574t3w5uimq4o37xvdtvqfnvm7i450swhcojh7hdxvpijbsivqa8nwls4s0\"\n  }, {\n    \"conversation_sid\" : \"CH6ad1ad8d02B79b87b6117abe3ec6BE4F\",\n    \"date_updated\" : \"2023-01-02T21:17:41.395Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-11-12T02:22:17.395Z\",\n    \"account_sid\" : \"ACCFc38ad8b587DFEB1C1083d6F4caDD11\",\n    \"chat_service_sid\" : \"IS510eb7CfB6FEcB2bDd1AE32A67f7BCdf\",\n    \"url\" : \"https://web.example.mocklab.io/989779\",\n    \"sid\" : \"WHcc1FA4aF329F71d142f6cd5CFf4dbd24\",\n    \"target\" : \"953mp0waomjfgy6imqjtf8nnvtvb653k1vwzk84di3tr10h08vyyfe6rjap77tyv70xs3gvqg1ht3s2xb2ue25\"\n  }, {\n    \"conversation_sid\" : \"CHac5c2D75FFbF3E48C0EB8a472F417b3f\",\n    \"date_updated\" : \"2023-04-20T05:17:28.395Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-06-20T11:32:46.395Z\",\n    \"account_sid\" : \"ACf0A3482B2184aB078D5594Bf25eCce5C\",\n    \"chat_service_sid\" : \"IS9B74Ee0cecDD87E5FAFD2341E28af8af\",\n    \"url\" : \"https://web.example.mocklab.io/010158\",\n    \"sid\" : \"WH1Ed1a42BedF1848489d453a433ad357D\",\n    \"target\" : \"wyu6jseo0p3nvbxewkv06l1humx7413zqwkulgrpy8nluoysr9klumli9n4hxtjkahkeojjozhbxr8n61rd9p35co09ikq\"\n  }, {\n    \"conversation_sid\" : \"CHE77A2a9C8ddb3A71E1eC59D3EeaE39b7\",\n    \"date_updated\" : \"2023-05-05T15:24:19.395Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-07-15T11:07:31.395Z\",\n    \"account_sid\" : \"ACf5F96519da1A822EAaBAd0c5fF7f39F4\",\n    \"chat_service_sid\" : \"ISCd500e671E74FC2CbbA6Dc3C5BEfFD13\",\n    \"url\" : \"https://web.example.mocklab.io/735440\",\n    \"sid\" : \"WHeD8236a2DFD7AdE9673bcAe0a7CFDDE3\",\n    \"target\" : \"nlcalc8gbzatlm2fwkviu37266coidv3e6p4y90q4r7d3cfscbfibfguijqmqkiu33mf3qeezrxzvkbj3be9iqxeuss9i6kyisu3103ne1kvgdnc2p2ogzb68ntny37q7k3sw5vifjs9ig34e5d5wv9129ymwsw\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/733315\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/690603\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/844076\",\n    \"page\" : 6564016033195891792,\n    \"key\" : \"cw6nepk68yk6ggr8jctle8yphv6i645cpgar8e3rizfppvjug6i966vquupatobfjxag55gybyvmupjgwn85hzh5ruubqtmkrzh8myb5irvgkqyusch2e87c96q26z6wwf7rnktivmj5jxs\",\n    \"url\" : \"https://web.example.mocklab.io/704737\",\n    \"page_size\" : 3056928586057260677\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "024467e3-14e6-4800-9f42-fb2a6343cbc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.396245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "bf46c465-9452-4f68-972b-a89783b5b664",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISd791610C8CfFE2f268c35759d9e4ce84/Conversations/lq84/Participants/2z25",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHe3D0EAbFad1DedcE3C7Bf0eA764E2eBe\",\n  \"date_updated\" : \"2022-09-16T06:26:34.394Z\",\n  \"role_sid\" : \"RL8b95Ff8Eaa6e9C6591AcC09FdD79EF38\",\n  \"date_created\" : \"2022-12-15T10:53:52.394Z\",\n  \"chat_service_sid\" : \"IS37Bd14Bf4d8EDbb4e51dB0f4e99b323D\",\n  \"url\" : \"https://web.example.mocklab.io/249154\",\n  \"sid\" : \"MBe2AaeD56eDd8AEB36eb50BeeF58a562d\",\n  \"last_read_message_index\" : 5540673713149572739,\n  \"identity\" : \"c5kjqrmsz1qmknv99buf7he0ole7zues3t4rsva3gs4nl1ze9d970o1ru90vo6ytoyrc57xqc1u76w8i46pe6habdgwzu82uj7ducehcg8ucv2rr05ng076oa7br61s401cx2jphr457rxqgk7bcvajafapbcn5do05xbsh\",\n  \"last_read_timestamp\" : \"2022-09-04T09:05:49.394864Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACfFedbfAB230345a97b30CFB09e611148\",\n  \"attributes\" : \"zrem786fpov90hu8z6m6d7nh144i9turfosoevubx8ivxnilqjvzcxcp9iu128s63d0u4t9h25g2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf46c465-9452-4f68-972b-a89783b5b664",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.395108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "10f7d34c-06b6-4736-b5e2-174ac3891850",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISa4AeA934C145C6cB38dBE5525b9Ea6C8/Conversations/3srk/Participants/7g19",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH745DacD0cdcB67176fc8dFEbce2BB2F0\",\n  \"date_updated\" : \"2023-09-04T11:50:21.394Z\",\n  \"role_sid\" : \"RLD25687EAD2029AF4bF9209A06a3bB7DE\",\n  \"date_created\" : \"2022-07-08T05:25:58.394Z\",\n  \"chat_service_sid\" : \"IS7284BF222ACba2254cA8Ec54AF20195D\",\n  \"url\" : \"https://web.example.mocklab.io/489310\",\n  \"sid\" : \"MBc5434312b6eBD034D2ebA1CBFafdA3fC\",\n  \"last_read_message_index\" : 8630517619335443341,\n  \"identity\" : \"ocv64zm\",\n  \"last_read_timestamp\" : \"2022-08-15T07:56:49.394474Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC2cb0e1C56F68E6c22adDAF29c5E9c14f\",\n  \"attributes\" : \"rwimq0i190yxtkkosuvxmsbqke0f2h3he9jlvtahoaxeyj4roo3y5t1dhnepl28rtqkyosr9kj0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10f7d34c-06b6-4736-b5e2-174ac3891850",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.394719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "224e2737-4c72-435b-911e-e7bdcbec308b",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS4dCFfEC6ff3A777Cdd2Cb0Ac97cbE5eb/Conversations/0c82/Participants/r8a9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "224e2737-4c72-435b-911e-e7bdcbec308b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.394341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationParticipant"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "2f7cfb6b-3bbd-4cd3-8d86-a2bc7b745228",
    "name" : "Add a new participant to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISAFEF38f022E5adba678CaCF5aA2EdE19/Conversations/wlkd/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHa204a0F1d9AAdb7aE2cd88e3FF8e747D\",\n  \"date_updated\" : \"2022-05-24T04:30:49.393Z\",\n  \"role_sid\" : \"RLa2E0B2Be800cA7DaBA419DCAa3fC7eD9\",\n  \"date_created\" : \"2023-01-07T07:18:56.393Z\",\n  \"chat_service_sid\" : \"IS02cbafAdfebcdfB7E9aD7eFAbbbAa848\",\n  \"url\" : \"https://web.example.mocklab.io/637827\",\n  \"sid\" : \"MBAE98f6495A5C6ECEdcc7eD18f7Cfd1Eb\",\n  \"last_read_message_index\" : 3466334915589115331,\n  \"identity\" : \"difqkl8h3lzyxvap66zebanyo43qiw6bx8tuf264315bid2d8pne1j126v2kqcmmxgsuc3te4srsmsz0wotcxt5nzz8xybivqzuui003r6dnnducbrk81rgs4s8m2awmk7wj023ukbhi\",\n  \"last_read_timestamp\" : \"2022-04-28T11:44:49.393951Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC6d8bea5f08DD4aEEcCE3e988ce57Fc8e\",\n  \"attributes\" : \"kyhe8hmvgobeshdoj4pf0s8ou0oyzuevdysqlmtb0aho0m755atq7220aeo6kmhi3awlhyokidsm803rttp28lf7n47vjhbhuakvpigu6dhv21lk43iqtmzl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f7cfb6b-3bbd-4cd3-8d86-a2bc7b745228",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.394187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "2fad5ea4-0fee-4a7e-90b9-39fc54435af4",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS98d9C80958838116812DaECdFeaE3c0b/Conversations/k9b4/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/804421\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/219300\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/905513\",\n    \"page\" : 4812845837673931322,\n    \"key\" : \"jf073w44nwgrblf1hkw4mk4qmsl\",\n    \"url\" : \"https://web.example.mocklab.io/662863\",\n    \"page_size\" : 2525835191970733797\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CHbc2b8b63f94FEd5C3E9803a20189AE6e\",\n    \"date_updated\" : \"2023-08-12T03:15:00.392Z\",\n    \"role_sid\" : \"RL848e7eDb01eACeA0b22A5b78fC989b98\",\n    \"date_created\" : \"2023-06-17T12:55:12.392Z\",\n    \"chat_service_sid\" : \"IS33FdAfBFBb78DFED7dcc3da1fedC21AF\",\n    \"url\" : \"https://web.example.mocklab.io/847853\",\n    \"sid\" : \"MB60aeb0Ef7CFAF484deed7ff9a11A115A\",\n    \"last_read_message_index\" : 6336686992140136850,\n    \"identity\" : \"ksda5qoh8u8laobvzwbq8t2cbs18xe3wbnr1le4akbmaat9eb9cbr0s5f7w4imncq4owfp95suny0hqkkyqaljei\",\n    \"last_read_timestamp\" : \"2022-07-31T11:34:49.392666Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC3cC14CabF7ba3c54ff96E8E21eBD9cD8\",\n    \"attributes\" : \"gcdaq4tnrmeye0ba3m3ojzib7iy7q0hob0cxawv5eb8ewgesvq9pn14j0ik0wrsml6jeuklsei7g3k6k8jv2ch8mo6tt420lv6b9ah9feojhimtq7rivr7o793e3b37acbo5lxij65xduxe9fqco4bj2hx2ql8a0om8gdqsrbd1cn\"\n  }, {\n    \"conversation_sid\" : \"CHD8FA00Bd5afCAa23cAbD9BE09E54bD3a\",\n    \"date_updated\" : \"2022-09-30T10:20:46.392Z\",\n    \"role_sid\" : \"RLC038f5c1179992F1CE590C7cCF4a8Fcc\",\n    \"date_created\" : \"2022-03-19T14:27:53.392Z\",\n    \"chat_service_sid\" : \"ISEB656D41A38e71EC9B2DEC9c7bc9b0ae\",\n    \"url\" : \"https://web.example.mocklab.io/625954\",\n    \"sid\" : \"MB199FDBE91A3Dac0b32DA9faFd47eFBa9\",\n    \"last_read_message_index\" : 2667713847742918919,\n    \"identity\" : \"26gxkbvm2fikpxf4osb2b28n7nxo7jl7fxj6g3siznyzwh6110a8vfmpd4wk8femwqwo9e7jwi2ctvvwyfa8fkbmam5f9x4euw0jn6oxxzer3tbl8ujjldjao09buwvqswefbpt9tfl30udpycd93inibmiik32uw5cgr1gq9dxentmrh5k5jz3p1x9gx\",\n    \"last_read_timestamp\" : \"2023-01-10T09:28:49.392832Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACF5ae0dAdAE1FD9eAcc67BbEA3da945ad\",\n    \"attributes\" : \"9q8k6unnu2hfm0g5lew5nyp0mjpyi7qufq49jg8lhsqya5xkm9947es1zsifsifjdlvfbbn6ti3r2w812by2odmi7dglfmxqnllra720jqbfecxasihkyr8jbprwkhuyq2xofgz9yfrplzw6sck2lb542s9n7gcadu8n8lhvyxbil7tczwwzou9ixukn0y2o13h7\"\n  }, {\n    \"conversation_sid\" : \"CH5ef0fA3eAb58cf2C10F638f482C8aA62\",\n    \"date_updated\" : \"2022-11-23T06:21:16.392Z\",\n    \"role_sid\" : \"RLF0Ba0E366A8bcEaf3DeE7aa0f5Cf6fC9\",\n    \"date_created\" : \"2023-06-10T22:59:30.392Z\",\n    \"chat_service_sid\" : \"ISfeFC9834437C4A4620C9Fd88D9583fB0\",\n    \"url\" : \"https://web.example.mocklab.io/345091\",\n    \"sid\" : \"MB99300DDF48Cb9D624Ce0518a3aD2FF6B\",\n    \"last_read_message_index\" : 6527028480972983190,\n    \"identity\" : \"nxe8omw3qpee1skgk3ys6n0yfh9hlefdiehmdrtpw8l4064l0a10dcj2zlmqq9vr8o\",\n    \"last_read_timestamp\" : \"2022-07-21T11:50:49.392981Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC1a866bd2Dd2D6bBa1FccCECCCF9eB9aF\",\n    \"attributes\" : \"1sfv468a7etcvj9sj3di7dbvzh04yeg2qa35resh74zjsc9d6z32tvkxuon8qrdco2s4wjys2rlxwvju414eihvx2uecv9m275u1ba42np25osgpyv0gk6ia6ddtqff2gblu1z44bzlrywbnj\"\n  }, {\n    \"conversation_sid\" : \"CHeae4cAfdFdb8aDe51970B9B7a6A3B53b\",\n    \"date_updated\" : \"2022-12-18T20:12:41.393Z\",\n    \"role_sid\" : \"RL55A368dB4D21e6b2Df6ba3a1cdB6BF39\",\n    \"date_created\" : \"2023-10-23T18:16:45.393Z\",\n    \"chat_service_sid\" : \"ISD600DD218FBf65fcA3B9C718Cf8aA6d2\",\n    \"url\" : \"https://web.example.mocklab.io/559782\",\n    \"sid\" : \"MBd107d140aCedBd59067eE18e5Ea222F4\",\n    \"last_read_message_index\" : 9162363392177724523,\n    \"identity\" : \"xoz16xu8p5v1gye68t3bw0rm2yfetijcximn30rvy7lfbpxposgfr8cv2oge01ovhnrse637zee7irwdk6yqgwu2w5yol0lt7htz5qwf72m7ddpah5zh611tjxkjb947bzionco0unw2k7iuumv9oirhk7j64k9pi80v7xie102cvv3r\",\n    \"last_read_timestamp\" : \"2022-08-03T11:22:49.39314Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACAD1d7D922E4cBC6eDfDc1aE1Ca6cFeF3\",\n    \"attributes\" : \"ur2i5o91cnla3w9qigdyc0va4bcdyu2ctof\"\n  }, {\n    \"conversation_sid\" : \"CHcD3BCc8af5b0d6eeF426AAaeec22F909\",\n    \"date_updated\" : \"2023-01-25T13:53:37.393Z\",\n    \"role_sid\" : \"RL7bacc6151ef0cEadECB4EAaa0169FbDD\",\n    \"date_created\" : \"2022-07-02T09:47:04.393Z\",\n    \"chat_service_sid\" : \"ISBedEbeBabb530BaA60a77f72aAfce9ea\",\n    \"url\" : \"https://web.example.mocklab.io/627181\",\n    \"sid\" : \"MB66D0b57d3B671310c6fe5cd3e7c77F96\",\n    \"last_read_message_index\" : 7855120080853577113,\n    \"identity\" : \"sw0ys0pbx5wgbo9k7ivmiqkbehf7n9m4uafnvivv4ztgi6qhgr9jy0y69hotkart47ec1l6psdww5j00adxk7670me5xawwsb7p3ayd5b7\",\n    \"last_read_timestamp\" : \"2022-07-25T10:11:49.393288Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC71d3b8bDC88e50EAd6dD9dF53Fa7DD0E\",\n    \"attributes\" : \"4g1tv125zbtz4q3a4np21u5eadunmjpqy391md2wwra0s6wpc0vo4ibkn8nfusy1h40g7vubtaygs1je\"\n  }, {\n    \"conversation_sid\" : \"CH215A88CE0e9B168be4cAC810CDBCf08d\",\n    \"date_updated\" : \"2022-09-17T14:05:50.393Z\",\n    \"role_sid\" : \"RLc2DDCc8E3a4bfcd8aEee6CF9BfC16CFE\",\n    \"date_created\" : \"2022-11-11T22:51:02.393Z\",\n    \"chat_service_sid\" : \"ISbe6DFC2cA711Dd01E0F6C5D7FB6D5Fd5\",\n    \"url\" : \"https://web.example.mocklab.io/855414\",\n    \"sid\" : \"MBdDEAe082DAfBF0cF4B606c34D6A6c5E5\",\n    \"last_read_message_index\" : 2826064467535985777,\n    \"identity\" : \"ueqehqh9oqk3e7lecig6g30ils2a5fr8rdukk02j8ch9ujd3vf60l5fbdjum319amxqobnrs8p0piojd\",\n    \"last_read_timestamp\" : \"2022-11-03T11:18:49.393434Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACbf0dAd1C4aB16640a90aCDa6C44C1ec3\",\n    \"attributes\" : \"esuf9mope9xvv1nhcjzgvdu6mnv812q6qu7df70vyc9bolazg78kj26tpiw9s7pby05z5sx7ak7kuwvkp1wy5vepv5kkqyxa5r4q8vgvrmrf1bzyjtku9dd58ylfvmab4hwxzh06wphgiupb4be5oknn8n9mc4fyzg5pqp2nfk1hckylinvqpbpte7q\"\n  }, {\n    \"conversation_sid\" : \"CHc5484De5aE5E0da87BDdD8DE8106daa4\",\n    \"date_updated\" : \"2023-02-20T20:08:56.393Z\",\n    \"role_sid\" : \"RLaF33fc4a4d1ea18aAc71A7Ae63af5a8D\",\n    \"date_created\" : \"2022-09-13T10:23:12.393Z\",\n    \"chat_service_sid\" : \"IS54aD33EF3744ea16adbcA103a6B54Cc1\",\n    \"url\" : \"https://web.example.mocklab.io/412848\",\n    \"sid\" : \"MB0Ee1F60Cc59d4EcF4aA2eFAc9d5E786B\",\n    \"last_read_message_index\" : 4917928434772633649,\n    \"identity\" : \"8qe834arkczhprylckqm629p8ao87\",\n    \"last_read_timestamp\" : \"2023-02-08T08:20:49.393586Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACB20E1818cabEd2cf3CEBB07e0DfA39f0\",\n    \"attributes\" : \"7aqmozbz6tgj80b6pggosudwb8xjipc08ttzfyyvdnehjajf64a9u0kz7jag8kwrudo5xkda3zlx97sssc3l10w4s\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fad5ea4-0fee-4a7e-90b9-39fc54435af4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.393813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "42492074-d084-4694-99ce-b441a495287d",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS706f0F7EECB7Fc40bE1F972F5ac29c49/Conversations/3b06/Messages/IMd2d62F4C9df2EeaCB0Ec3bbaAF676ace",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHF5Be39e3c0c7BcD755991fF3ff1e5e6d\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-06-15T14:39:39.391Z\",\n  \"author\" : \"o54hqyx6qvw7xa2us9wmyjh2sbfqgd65mu9t03m003ossy3epd9sx3pcs3d1mp4swrqe4406jk92xjsqskv3ni0bqeme8g4j8025depch6601pfzkdn8xon0i09mz30sc6ek1swlc5se0295o4vy70qzkpqsfh98nv9mibkra\",\n  \"date_created\" : \"2022-09-02T20:40:43.391Z\",\n  \"participant_sid\" : \"MBcD8Ca4EBAd69f4b37B2F3eCC882461Bb\",\n  \"chat_service_sid\" : \"IS812A419160C02e96aceeaeDF2F3AEc75\",\n  \"index\" : 8842562483456835895,\n  \"media\" : [ { }, { }, { } ],\n  \"body\" : \"Odit incidunt consequatur nihil accusantium maxime corporis. Dolore repellat dolores sed voluptatibus aliquid qui voluptas. Architecto rerum suscipit optio. Dicta non non. Occaecati qui aut.\",\n  \"url\" : \"https://web.example.mocklab.io/903478\",\n  \"sid\" : \"IMe99F9013ed5f09e3Fe99FA20FeFcbA6A\",\n  \"account_sid\" : \"AC1DFba92dfCAFDf67edf6dF98AE4FD3dF\",\n  \"attributes\" : \"pf3dmrxbn6tbao8ey3s30n1oqjpa3ldvaogjeqxbj450nea9wb885qrm4l6zg33ot1v9qml3dn7i2mmtlzkbdlzak3cvlidomfkiab602k5thcnyekjcrmh4csyu1w2csm3jfhb166i\",\n  \"links\" : { },\n  \"content_sid\" : \"HXA934a6CcA9acCa640EA83bEC64A7d4ff\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42492074-d084-4694-99ce-b441a495287d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.392204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "51941f31-e38a-4126-ab8a-2a6b76b30e7a",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISd0E9a2fFD54334FE4cC9B84D0ED98DFB/Conversations/57d9/Messages/IMdF629CF9E815DC334ADb44C44aA8FDFE",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHFfBa14D69B24C06dD7eE2Df3cCeB20dB\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-09-29T22:36:15.391Z\",\n  \"author\" : \"4wmxp8ujq9lfkp02paw1k7t91mp1h2l1b5thvucfb626oodbjzri98e3uyjgmni0q8udgstp5eaqldihr17yoccfanjuc8cdfp25tjwrrtqsv3zjrnbhc7ecb50hudo\",\n  \"date_created\" : \"2023-12-26T17:06:34.391Z\",\n  \"participant_sid\" : \"MB99de24397FD3B9bB9eDeEd6311AE4A83\",\n  \"chat_service_sid\" : \"ISa8C92AA425Ed9Bc9c67AEB49CcEC0cb9\",\n  \"index\" : 3228704008917041094,\n  \"media\" : [ { }, { }, { }, { }, { } ],\n  \"body\" : \"Est ratione quod ducimus architecto fugiat ratione et. Necessitatibus velit fugiat et aspernatur earum consequatur. Doloremque voluptatem magnam quo.\",\n  \"url\" : \"https://web.example.mocklab.io/046226\",\n  \"sid\" : \"IMc8aAEf901b34cb01494F0B485EbDbE12\",\n  \"account_sid\" : \"AC7475A2A9B02B0E9E0caBebFA33b2ACc2\",\n  \"attributes\" : \"wexiutbsky9pyko9fv5pvc7ut3tt2tfo33rrp\",\n  \"links\" : { },\n  \"content_sid\" : \"HXF8eA8deBF3f6e23b0B4e0ba0afcccF9b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51941f31-e38a-4126-ab8a-2a6b76b30e7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.391792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "06d18804-e0c9-43fb-8311-2b26754ee0e5",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS8ed7ce85cAcD9df18C1b21608dfAbe47/Conversations/td1g/Messages/IM5CEdeB8D4E4C9EECEea5A3F7D9D0D30f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "06d18804-e0c9-43fb-8311-2b26754ee0e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.391358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationMessage"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "422ef79d-282f-4474-a732-fdd757d7e785",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/ISb7B58c4E0FD8266D7B34EAE80cBaec03/Conversations/25si/Messages/IM8FFC0AEAbAF36Fb8E357DA7C212A4FDa/Receipts/DYc9D9dBdEDdffD0FEFfa8404c34a316bb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH17F99bc2b2b62Efb09c57adf482F6E2c\",\n  \"date_updated\" : \"2023-01-04T20:28:02.39Z\",\n  \"date_created\" : \"2023-09-19T12:30:15.39Z\",\n  \"participant_sid\" : \"MBCdEB9D6cbEC60Fdbfb9F0e1BeC5aDD0F\",\n  \"account_sid\" : \"AC4D7A4d2b95d1E3b97614fCFe08a9b227\",\n  \"chat_service_sid\" : \"IS48e3Cb0E761a2d4a2325A20eECDECB17\",\n  \"error_code\" : 6220524307169812842,\n  \"message_sid\" : \"IM011B7f4Fd5eAC14Fad0a85fAE3aeB58e\",\n  \"channel_message_sid\" : \"Rj4CCC2FDfEBc486380b19Ba93066dDAfC\",\n  \"url\" : \"https://web.example.mocklab.io/640257\",\n  \"sid\" : \"DY50d0aE59bB55CDc8F60D4e8edf10C451\",\n  \"status\" : \"delivered\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "422ef79d-282f-4474-a732-fdd757d7e785",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.391249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/service_conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "63645d5e-114a-42f8-a692-ea24932aa30d",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/ISa46e1cFc4EFbBE95Ffd2B8CbBf3EbcFA/Conversations/u49z/Messages/IMd8Db0ce2D769dCd2AfF106db7fCaC55E/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/500384\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/739893\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/669760\",\n    \"page\" : 4104814865285358865,\n    \"key\" : \"p59s4o6z8g2j2t1975ht5i3wmv87p3xq3iw3xkeecn5jau34kl2lydbhuc2pd4jx4ab9fya2lgpxf1mv3erl9vcoxk910fnve9onl2mdvsxj\",\n    \"url\" : \"https://web.example.mocklab.io/342357\",\n    \"page_size\" : 1759444011308630921\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CHa27be9796524bAf6bE1Bab38C11b6BFB\",\n    \"date_updated\" : \"2024-03-10T02:14:02.39Z\",\n    \"date_created\" : \"2023-04-23T21:39:52.39Z\",\n    \"participant_sid\" : \"MBdcE3d8f8d8C36bEe3C4ab3Cb047E8E24\",\n    \"account_sid\" : \"AC81f9f7cda36BFF0DFe4BFb76BeBCDcEF\",\n    \"chat_service_sid\" : \"ISde9f881ADB7B02DaB8D8510F2A7FA17C\",\n    \"error_code\" : 4460683388556183220,\n    \"message_sid\" : \"IM833210Fa925E8D9AA1656697cAABA06d\",\n    \"channel_message_sid\" : \"xRCd4fc1Bae63A7f14EEaeF9637eE93E3b\",\n    \"url\" : \"https://web.example.mocklab.io/734454\",\n    \"sid\" : \"DYc61C5Ca21dDBA88c7003CbC0EaecbCF0\",\n    \"status\" : \"failed\"\n  }, {\n    \"conversation_sid\" : \"CH1FeC0C1fDbd1D4dB5f1EfDAec0562e1D\",\n    \"date_updated\" : \"2023-01-05T23:32:47.39Z\",\n    \"date_created\" : \"2022-12-20T06:38:22.39Z\",\n    \"participant_sid\" : \"MBA4B8A8E682D8b881D7bcd2DDA701eF55\",\n    \"account_sid\" : \"ACC3B7cCDd62F2d780ffa93eb1865Bc67d\",\n    \"chat_service_sid\" : \"ISF7bFcAaff381B7ddeeaBeDFE66Cfb9F1\",\n    \"error_code\" : 6681753742999731175,\n    \"message_sid\" : \"IMC578A680Cf562CEAcd55b9BdA4Cc3F70\",\n    \"channel_message_sid\" : \"dPeaA8bB23eeBB8F0adfC56F2CBb8Eef5e\",\n    \"url\" : \"https://web.example.mocklab.io/320956\",\n    \"sid\" : \"DYC31E49fBADf013BA37Fb3b9Dab21798b\",\n    \"status\" : \"read\"\n  }, {\n    \"conversation_sid\" : \"CH2ec2DbD154CdfE633dACd3E8F0fdAEf7\",\n    \"date_updated\" : \"2022-04-17T09:01:35.39Z\",\n    \"date_created\" : \"2023-06-01T17:51:31.39Z\",\n    \"participant_sid\" : \"MBba2F275b96DEEfdC52651cdAF5A43B73\",\n    \"account_sid\" : \"AC4dC4e1b99c543C867f2aFEC91cDE01Bf\",\n    \"chat_service_sid\" : \"ISF84ffC8ac32eA21B93d8CBfFbC19DbB5\",\n    \"error_code\" : 6343827217897073108,\n    \"message_sid\" : \"IM4Ecf26da06aB8EAFAEDA8C10f48083B8\",\n    \"channel_message_sid\" : \"xl7eb6242e6123BcBFC8EdbaDf43A7E6e7\",\n    \"url\" : \"https://web.example.mocklab.io/624146\",\n    \"sid\" : \"DYC776EEFfbBEc89e998BDd8ab7446c32f\",\n    \"status\" : \"sent\"\n  }, {\n    \"conversation_sid\" : \"CH1CfD210eDF2dA4975EA54b104a541974\",\n    \"date_updated\" : \"2023-04-04T08:04:45.39Z\",\n    \"date_created\" : \"2023-11-07T09:42:13.39Z\",\n    \"participant_sid\" : \"MB4E3BcC1bb22c9BB653332D4184c38aA2\",\n    \"account_sid\" : \"AC49Fc2A831Bf0D9F48F18669cad3DeD0B\",\n    \"chat_service_sid\" : \"IS5C55c0fC9b5fEEdA688Ff8f51Da85aa6\",\n    \"error_code\" : 3704045871518173957,\n    \"message_sid\" : \"IMeF199047D6d529efafd3eC574EE94DfE\",\n    \"channel_message_sid\" : \"BhAfFc81bb131713BEb15d72E9CA6f887E\",\n    \"url\" : \"https://web.example.mocklab.io/935658\",\n    \"sid\" : \"DY9b817FFfea6529236aE84bBCdD14f90A\",\n    \"status\" : \"failed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63645d5e-114a-42f8-a692-ea24932aa30d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.390902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "f6eb8baa-0a5d-4044-991c-ee1ba16c9b0f",
    "name" : "Add a new message to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/IS0EDaE9Cf83ffa3bCeB9aec2C55fA6c8B/Conversations/541n/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH8B3b0ab4dDF4Ae5724Eb7926A92E32c8\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-02-27T15:38:21.389Z\",\n  \"author\" : \"e7i6yifazcbc5hlal39b57ufwkhw74kuxpkwm4kdmwdud2fjr5rn1xi2h\",\n  \"date_created\" : \"2023-01-10T10:40:59.389Z\",\n  \"participant_sid\" : \"MB32eD7ff6be10CE3cbf8EEB0a91b5e58B\",\n  \"chat_service_sid\" : \"ISb29Bd8CB6c1B388b1265875DFC4Bb3ae\",\n  \"index\" : 4249448030341426512,\n  \"media\" : [ { } ],\n  \"body\" : \"Ea qui doloribus quia quae qui. Rerum id dolorem. Fuga debitis atque et ea voluptatum nesciunt non. Autem velit eveniet unde. Iusto soluta iusto est.\",\n  \"url\" : \"https://web.example.mocklab.io/117308\",\n  \"sid\" : \"IM094E8C110E04DB796cCFE2d0c0DAbc81\",\n  \"account_sid\" : \"ACDde6f2ACEfbaDa46fC7fA83523A97C66\",\n  \"attributes\" : \"5xk40976ewicc4rxqdihl0rv3wv6bp2m4eyz42rl9zsuwsf5r6qn4u55ll0qvt4zzb2t0us32oppdsxg9h6gq5\",\n  \"links\" : { },\n  \"content_sid\" : \"HX8288A5ff7e4625D7cF33dccbd75af074\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6eb8baa-0a5d-4044-991c-ee1ba16c9b0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.389906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "457389c1-6d0d-44f3-bcd0-db2c05856050",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS3Bbeb8f9AeB0eD39AfA08D6BCDD159b2/Conversations/85y6/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/581598\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/486684\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/929113\",\n    \"page\" : 3345968107151632114,\n    \"key\" : \"7tg2jnmw5ocgpzy6j661y0zauz29flo5irbc7031p4t7fu3rc8npi2m8dxdgmjfqb1zbthk59hrwxo8geomwv6f02brvvntdfsl3y8alc4p66bre53iftfqgb0beydmqdg8kmvvoml0nke3grc780dmn36y93ylepoy21x83bk895tc3mg3o0khe3ffclggcnx71y2u5\",\n    \"url\" : \"https://web.example.mocklab.io/984938\",\n    \"page_size\" : 4161708826109037883\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CHe9Ea948bB48c3ad139cDBE2FDec7adFD\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-03-18T15:57:13.389Z\",\n    \"author\" : \"lff9tvbjnipj7rkudjb81bq94deejscw\",\n    \"date_created\" : \"2022-07-20T05:00:13.389Z\",\n    \"participant_sid\" : \"MB0FeaceA49AaBb93c4Ee0499aFfb9f1f2\",\n    \"chat_service_sid\" : \"IS6Ba17eB5d8b9EB2DcCd3Af7f55F8cdFc\",\n    \"index\" : 6898254150835819866,\n    \"media\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Et iste quia facere. Repellat magni ut distinctio. Sit ad doloremque.\",\n    \"url\" : \"https://web.example.mocklab.io/654906\",\n    \"sid\" : \"IM9Ba6f6eb7f1EE0BecE49c2dC1Aa6cfD3\",\n    \"account_sid\" : \"AC66d8702aFd60A3cF0d2ECFf8b45D3Fec\",\n    \"attributes\" : \"f0xj7thmoaw0zl0q0kar2u0n1humyeu0fh1ixfu6cnipr46321as9m2uqzaeizbkwz9b3by1ny5mkxfv3drb6u82zpa4diplj3pfdonfojx626rzgtmemeqzhjjsjy0\",\n    \"links\" : { },\n    \"content_sid\" : \"HXd501EddedB5a64133D1541CDbdB4A7FE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "457389c1-6d0d-44f3-bcd0-db2c05856050",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.389452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "342d6ba3-25c6-405f-a43b-503eb44e9a3b",
    "name" : "Create a new conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISf96A87234f054FAE70f77dF84D407CED/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Georgia Prosacco\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-06-02T05:08:18.388Z\",\n  \"date_created\" : \"2023-04-07T04:25:08.388Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS68228ac9DbAE5f89b1EfBce8FdBd315e\",\n  \"url\" : \"https://web.example.mocklab.io/433945\",\n  \"sid\" : \"CH2E7Bbf8bB0bbe60489E19dfc85dDC551\",\n  \"unique_name\" : \"Mr. Marie Lowe\",\n  \"messaging_service_sid\" : \"MG0EaB17cA5C479EDd0DD4CcB456C1e8fe\",\n  \"account_sid\" : \"ACda5167d9B642d7Ee29DeEAcEe8Aa8B53\",\n  \"attributes\" : \"hkba18rizea9dscbtqllyb8lgtukjr22wl1rq6k8rx1wvvvfgt2qgsyduxt53abttfagyisqn0dtl0buxxf9bjtepbx65eyui4\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "342d6ba3-25c6-405f-a43b-503eb44e9a3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.388716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "239b1655-95aa-483b-afa2-642fdb8212dc",
    "name" : "Retrieve a list of conversations in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISeb89FE3dcf6b77CB0439DF312cCD2905/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/583247\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/392287\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/817373\",\n    \"page\" : 1106763994547657421,\n    \"key\" : \"76wes7279tole4dhd28fdt4k0cnlse2mtznqx37yphk1h5nkimg3is71cd8os0r96n1jnxr2rl4jvcyc5va35qp8f9c7gm\",\n    \"url\" : \"https://web.example.mocklab.io/646845\",\n    \"page_size\" : 2087660994574803658\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Chauncey Herzog\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-07-11T07:53:59.387Z\",\n    \"date_created\" : \"2024-01-30T15:57:23.387Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS3144fAbDC9A69EBa9e08B0be09cCFa0F\",\n    \"url\" : \"https://web.example.mocklab.io/982180\",\n    \"sid\" : \"CH29Ee5Ec39e9ed7Bc44f4D212E6Fe37a5\",\n    \"unique_name\" : \"Chang Schinner\",\n    \"messaging_service_sid\" : \"MG1Ed46F4cBaD59B8A2f21cEF77ABe55b3\",\n    \"account_sid\" : \"AC4F10B49B1F39a7ebDF929EB72d3265E2\",\n    \"attributes\" : \"j3aev6rewi6bimx92yog3w6xbhiamhc9hx3c3jgo7blvp4xum3i1jppv1xgxpkomrpapdp2uy7ow\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  }, {\n    \"friendly_name\" : \"Valentine Crona\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-12-11T13:33:51.388Z\",\n    \"date_created\" : \"2022-06-03T06:58:04.388Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS5BD1ABEf2c4663badE6C71ee2Acc0bE8\",\n    \"url\" : \"https://web.example.mocklab.io/306382\",\n    \"sid\" : \"CHCdcc9b8cc48582eaF9076b9F9D5ec57B\",\n    \"unique_name\" : \"Ms. Wm Nicolas\",\n    \"messaging_service_sid\" : \"MGfc9bc51e58cF4C62342Ec8aF969427E4\",\n    \"account_sid\" : \"AC64a8ca271DD9FbcEcb2549FaF20CF71A\",\n    \"attributes\" : \"sfupqx3eldxsyj4uk76ess6nbj2tajzjqn0lg73g8d9g2o1d2kft95jpalp7bya158d8tpzcsy0k8ii6anldxcybvni2uryf261zba1hg2zo6kzef5kjuxahn5p48716jdrgdj0lpfahp7thxiradvnblrl\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "239b1655-95aa-483b-afa2-642fdb8212dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.388365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "b441adad-5f73-44ae-b30b-1a160b15cfd5",
    "name" : "Update a specific Webhook.",
    "request" : {
      "urlPath" : "/v1/Services/ISfFE0578D6B9aB3c06DEF5d6E171c91C6/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"ACf43b0Dc9c04C3cABdB6b0F914Ba062bE\",\n  \"chat_service_sid\" : \"IS86d1FfAAe3dCABbcC17BfEaD8A0a64Fb\",\n  \"filters\" : [ \"63vjeu4lcpe8v27yvt9qqd05q5mvjshp229kgfrkp6qg8b98h7px6p5sb5olxc4j6r9p3q416uypzv5f7ozupkyfptcqnpnx8to87fmjngzkxyrqq8hafkzaeu5cd7uoxt738fe3w1f1kol2asctx0avjsd5ziq38b8nbs7kggfsaqohaw8793qc3myi5f\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/877730\",\n  \"url\" : \"https://web.example.mocklab.io/431035\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/829584\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b441adad-5f73-44ae-b30b-1a160b15cfd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.3875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "c303f9fb-1aa2-45c8-9d59-3afed8d8fc36",
    "name" : "Fetch a specific service webhook configuration.",
    "request" : {
      "urlPath" : "/v1/Services/ISfe4fc2fBD5Ee0E69d455a72Cbb0ebFEE/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"AC38dBfE23D027c6Cf0EDAd05FEBC03363\",\n  \"chat_service_sid\" : \"ISaE3D4eF0C9ECfAf3071Ae31D9D785d34\",\n  \"filters\" : [ \"5qsgyalvkw3gclcwtryvchnp8wpr9en34mci1dye9sgx8k11e3v1mw7gbvgxfz80vkox6tvzcvqm1k321knxzyy\", \"y84w2mazm9mplukqunzev3yi8003nqzzjwamjdzvjy0h7nxl970h9o6xswd6pzwt12ufr6zo3qpcz53yjg983gbwh9oedcgvxz1iw\", \"l6z30ex7ay4bqebrnm6ldrmpri4t91em75biqeav1yz22gipchxr1zcml2wfswx2xh9xgivewjhl25\", \"5e6awmusrmkbf9qhd827ya1v9qr437mar4pz5f00lgdmfrpdxm9\", \"2gyj4uo3f1e38letllgfoe37vwl6betu4nf76w3d7i2k8oee5msu691ewnja972s4iftlxfapfhgp7gyyjxk2tp6yzt7nq2gazhh4dluz\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/911869\",\n  \"url\" : \"https://web.example.mocklab.io/713750\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/153291\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c303f9fb-1aa2-45c8-9d59-3afed8d8fc36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.387228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "7e3e507b-5c91-45c9-9fd0-3568f867f566",
    "name" : "Update push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/IS8Da7B303CbDcB41C8eC7EE6adc8DaaC9/Configuration/Notifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"ACd4aaE7eAD44acc8353b9E63bbBc0faFC\",\n  \"chat_service_sid\" : \"IS86eE67A7A1C2dbeedD49375Bf4A6756E\",\n  \"log_enabled\" : false,\n  \"url\" : \"https://web.example.mocklab.io/031664\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e3e507b-5c91-45c9-9fd0-3568f867f566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.386882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "17d2537b-a6c1-447b-8241-64ca8c7d1372",
    "name" : "Fetch push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/IS87FA3Ebc71D3d0B1cfdD9FFccEeCddD7/Configuration/Notifications",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"ACAbDd058F7d88e012c55eBfb4DDFbeaE1\",\n  \"chat_service_sid\" : \"ISB2E13ce79cB1741Bd8EC4bdbb6D4fC6c\",\n  \"log_enabled\" : false,\n  \"url\" : \"https://web.example.mocklab.io/828722\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17d2537b-a6c1-447b-8241-64ca8c7d1372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.386726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "f2ffc0da-4f49-4543-a97b-90a80c53d65a",
    "name" : "Update configuration settings of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS757E0d6Ef2E34EE5E489Fe84C89DEA7a/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : true,\n  \"default_conversation_creator_role_sid\" : \"RL0bbbeEbC466c36bE8Ac888D3de9DdfeE\",\n  \"default_chat_service_role_sid\" : \"RLDb3FaEd5C8dF17fb3e424ADEFc6E680E\",\n  \"chat_service_sid\" : \"IS52F90CaFC352F4E4edE282fC9AfEdC76\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/050269\",\n  \"default_conversation_role_sid\" : \"RLb0B9ba148Ffd197fcbdE2fAdfE79B89B\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2ffc0da-4f49-4543-a97b-90a80c53d65a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.38653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "4c131f18-e0d8-4b61-a543-db1ad25ca059",
    "name" : "Fetch the configuration of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISa64dCa46e00df7B6AB7E1DCD9EB1eBaa/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : false,\n  \"default_conversation_creator_role_sid\" : \"RL575D2f1d6D8bDd1b40C06f84f6Ddc1e1\",\n  \"default_chat_service_role_sid\" : \"RL5B563EE66cF53C566932A1734811A5c1\",\n  \"chat_service_sid\" : \"IS2C1adBFa7B82D4dCB6DaC2d1EcFB7ddA\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/790327\",\n  \"default_conversation_role_sid\" : \"RL891Ca3150e58C0820F93d41fF0ED202D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c131f18-e0d8-4b61-a543-db1ad25ca059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.386358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "4684cc6c-481e-4faa-b5ca-4e48ead13000",
    "name" : "Fetch a push notification binding from the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS93B422f0fd7d6dC3c4E998b62c8cB2eB/Bindings/BSb820C5356D81Fbdf9631D7cA12BE29eF",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credential_sid\" : \"CR0Dba7dbcb1aA6efBBdcCEF6fb9eb3C9A\",\n  \"binding_type\" : \"gcm\",\n  \"endpoint\" : \"8h1dwbu4cx8puftzjppcriaw0203cz2zsoak4jopplrol1xap9lp3tae7uqzhiiqwwlwle1ykc9ywzluqm89mx8jmr1wmdvkutaqs54vk4e6oqpz55fhdkm15o9hf9a5crhp7kmn6nydjd7487rkfscd0u2ysxac\",\n  \"date_updated\" : \"2022-10-15T16:23:14.385Z\",\n  \"date_created\" : \"2023-10-30T02:57:17.385Z\",\n  \"identity\" : \"hh82q29ipf4jmjnrmlf2srdbm2i9fw9bx1wvfklreq609txzpu2mupr8duff7ei3thhwd6x8wl\",\n  \"account_sid\" : \"AC927B4Cf92b06cbBe8292Af1eddd254eD\",\n  \"chat_service_sid\" : \"IS89aD6E19b56dCcCFafE2589f6c71B2B6\",\n  \"url\" : \"https://web.example.mocklab.io/912098\",\n  \"message_types\" : [ \"killg7kx43nvkaocxi77uz4ezte9jxgbj0zz1rtvrc54\" ],\n  \"sid\" : \"BSB2A7feE913D9A9ca10a1FD71e9E72dB0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4684cc6c-481e-4faa-b5ca-4e48ead13000",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.38613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceBinding",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "binding_type" : {
                "$ref" : "#/components/schemas/service_binding_enum_binding_type"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "credential_sid" : {
                "description" : "The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "endpoint" : {
                "description" : "The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.",
                "nullable" : true,
                "type" : "string"
              },
              "message_types" : {
                "description" : "The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this binding.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "51492c68-5de3-4cfb-9116-e037f23b2670",
    "name" : "Remove a push notification binding from the conversation service - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISa4E99BE3dBc95685A2C3b6d01C52Efb7/Bindings/BS43AbFE0249b7a2AB9Efc86A8fEEF87b9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "51492c68-5de3-4cfb-9116-e037f23b2670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.385862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceBinding"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "7a60caac-2b67-48cc-9964-f2d017b2af25",
    "name" : "Retrieve a list of all push notification bindings in the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS6f6f220e621654EdEe888Cf167ea33a1/Bindings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/605801\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/004245\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/531690\",\n    \"page\" : 8596972984574928538,\n    \"key\" : \"p6e83yl6cckuyihkdsse59cjpq9ar5m723nhdq94\",\n    \"url\" : \"https://web.example.mocklab.io/076477\",\n    \"page_size\" : 4930603203088199143\n  },\n  \"bindings\" : [ {\n    \"credential_sid\" : \"CRc85dA740cd97Cea3C5A7Cf56911a209C\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"2jjrb6tjhgpo2acqnfl2nrdpcjew041t14bltsc2gzq0ocstzd75106s9jqv9qsr6gvq38smzr5su9\",\n    \"date_updated\" : \"2022-04-22T05:48:11.384Z\",\n    \"date_created\" : \"2022-05-21T03:03:21.384Z\",\n    \"identity\" : \"qcfgdbuiyptn267s1qedpgfwhfot50gp03mmloeib3i9czoelk\",\n    \"account_sid\" : \"ACaCd6Fcfa65d8cb0b7d0FC2a189cAeFfd\",\n    \"chat_service_sid\" : \"IS1f2083BFAadA63ae5397131FE9Aeb5BF\",\n    \"url\" : \"https://web.example.mocklab.io/620124\",\n    \"message_types\" : [ \"ktuzfe2a09j8y1ozny5hyhesdfzh\" ],\n    \"sid\" : \"BS8028cBF0279c265EbC3B958d9beBfCE5\"\n  }, {\n    \"credential_sid\" : \"CR6cEaA9c8f4df88107FCD9c4fE62A78fE\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"acx9l7jpca0estpy6c6hm04owrjzm5nb86xcsxca2m3b006loccebrcij9pcl70azjkbk90ea61h764oi3w80y5xytgssurdgo9tzojohzi4h3luyzcoptrz9fw3hzcem8h8311hmpvklrbnu10z55qjgh39qs79p07vhnekxrbk0bs4adlvusaac1ydsfgdt\",\n    \"date_updated\" : \"2023-02-24T15:09:51.384Z\",\n    \"date_created\" : \"2023-09-01T13:08:02.384Z\",\n    \"identity\" : \"90dbnscns3r3mm2rfqgvi0z4w2ztr8v6l41gba34mj23zug6qxfgtakdu162chi8ws817g6mdu5eghe437au6l5if4ais10fr12t71fvxzcuvisl5ond2xoyyj0na7biezywbm8oxhzyaiiw908pnj8qwis3onxicaxrfesstu1rnfhu232\",\n    \"account_sid\" : \"AC8471d8Bd7DB83EfC958dae4476e570f3\",\n    \"chat_service_sid\" : \"ISDc60858Ca4c523ca6782ff0c6654ed1E\",\n    \"url\" : \"https://web.example.mocklab.io/552154\",\n    \"message_types\" : [ \"w5c33dttyx5d0p6vjk39qpzwzwsi9t4ecd1ka4ti6wxcg0b2jwnzb1qmk8v9hcc0d1ht\", \"3efdpvoyxz56iyr6xbxm7mjfhblpfbdhnccfhgmp03sv8yous9w04k5hjzruif2r4lv7r954ifvs93ioyo5z41lr18o8\", \"mevi5i7nsmlnaczdudyuiy663yysv50tgrbxgarvzfe2ck0jgc2pqy9908tyf4doxtxmjlzmfu8icsiwlazp159wr6a73mootke2iglancdp50k7z3hntofq5vdq2y2dxceax9fnnredqduiurc6wpukup1zf8ym9xg9xn4b0g70tal7blzyswiyw6\", \"zkrt47lr1zbd25qp7am7mz4j1gn2bm03yeahbcpvxcfnp9zkc8n6zw0kv41u5k0hdyip3x2i7l8qqy0mbeucwfrmupixiao9db1ptbn3fkq2yx38ksbb7cr\", \"5olyfnn1wqyf1c\", \"p6m3imh6j6vyhqwmcsvbr57bxphtn028jxuykutmsvxyrcc2puejfis0zx1ricq5jbi03anmcno2cz47qdg1qctoyy1z96camwy9no42z7lnq10k34gbwjr9ydc6wpc6f2g3wk12euwd2v9r9ro8xrbdcxv83nukvza7ak1mgo\", \"zhlf2awieu9kugmjx57n30gzg7h388d91kq4pbb1jfmm1754owr5z3gqrolwsk2uquarrp1mwu22bcolnnkd0csnjrqcib8p5zk6ckivhelrqb7fgmc0vhut688zrbcywesh5\" ],\n    \"sid\" : \"BS09ef8a1FAa8f380ABe0f8Edee463dbDE\"\n  }, {\n    \"credential_sid\" : \"CR1e38fD8e6dFAE91Bb10fec54FCa2CAAB\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"4k6artlm1ezosfoaalbb3hqee\",\n    \"date_updated\" : \"2023-10-02T03:36:49.384Z\",\n    \"date_created\" : \"2022-04-26T11:22:01.384Z\",\n    \"identity\" : \"521j4xqdjnyx3viwguw7ukjmtvnkfwvsyfot9675w73tkzkp4muvfcb5bzick8ul2slv37zkdwk44jt0lptccnfycxogpfa9ppa1s4wcyticj2dvc9datkudrrn9vhf4wmvlqanjs4pk9i8uzcuap8makc2s1r\",\n    \"account_sid\" : \"AC7A0da4D76ffbA2efcFBF6f0d4a6E3ee4\",\n    \"chat_service_sid\" : \"ISD19E3143cbcDABdEdFaEd7D6FB78F1a6\",\n    \"url\" : \"https://web.example.mocklab.io/885734\",\n    \"message_types\" : [ \"x5ojnrxo3o82mdpauehn3rx3yvoyuitx5ynj3elbzsybrd8e6opy5j04ey1xpe752lym4ec04zrcp0i4oy1um7zdleutgnela3foyrdxyqy1m87819drl3vckh0j7cuawg2p0xskitw2kfj2f4wl71eoioerhqrvdseln51pvvw244\", \"pul77eke99famdlelxhvxd31lpnxxgubhhpzo\", \"rr0ue33z1397dmwbaejs\", \"9f3lboodm5r86ylcaz98bsqjpg9lqeq4glqqmjem7tmlihhh278c6\", \"z9fla6rdyzk5ddysi2l5httf0q4eqsugex06uol1dypa7ffmfxqcvbwxw4s9psq37k1zjotig5zwblzxhwp4w3csiw3eotweb0jkx0pqqj4uxrk0z0zakb4eu2du60149g247e\", \"8v7e7y20c0yv6av0t3xxat3htoqck62y0ja4996jadlqq11kfhh65whg7s5e7q82shwpymzil9kcp7ppy39k5gjs8k15gka08c71tyh9h7fykx6hkhlf50ehoqbj2r39kd50a4wfxss93y9n3i53dl5x30l7pfpsjg122gbkjtsn0ah5c4\", \"hwxpjgqppwuthd6u4uvkfe3r03t6qikv49qiwf359m5x37uzfhpeo8ncs62011gw3dl1irzp\", \"pjbdk13ug57alxoyhfeom2x686jfuare\" ],\n    \"sid\" : \"BS7dc64fFdbaf0ac1622e36cf1EC4ACcb8\"\n  }, {\n    \"credential_sid\" : \"CRb14Fec36FD9f0f7D0f6C1b751388efff\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"28z1j6q19j1jtoc6masj1004hip0p43fev0ou2jvvm1hoqqrt5\",\n    \"date_updated\" : \"2022-11-23T12:23:29.384Z\",\n    \"date_created\" : \"2022-04-20T12:51:19.384Z\",\n    \"identity\" : \"2lrut3b1dmcd8ymergz3vps1bt0yq1nl1wwxu12t8mgkzx3btnht6bfu5wmnfjf5pk5gkgtkdt450uxo0ht6cooze0yvxpzneyy0fgg9jvpezxoo7ondlbjty1hnmxne7uyjfbourcbd8hswzj3yd40ou2f6oudbcgmnw7k0czycbui3jldxl0noe\",\n    \"account_sid\" : \"AC2B3ed8dFCaedC07EBa3665aAE0FCf4bA\",\n    \"chat_service_sid\" : \"IS553C0Af5a7063C6f3Fcab8F4CAfdabEe\",\n    \"url\" : \"https://web.example.mocklab.io/706525\",\n    \"message_types\" : [ \"etz6gdf62c9zd9l7gcf9xwczseq0f585m66jkgfqoukeky237ecfhozfxfs68247lyneiga4cz7038vt9pnpx8wzqa8xq2jah4885sp6j8\", \"eodzjwwegcf4cid4ro7w9lkh3qh2j4901t069p599qy158s4qzfkl7rrzuv56cezns8bk7fl64f1bv821jjjv2pdabveovn1xtcmadldvk9ze3re695fjcd5egbb5a0uyrl7gvhq4jwpy5sqws9iszln\" ],\n    \"sid\" : \"BSdBfBD2C89ef60e01C55fCD5c834D2161\"\n  }, {\n    \"credential_sid\" : \"CRB8Bdf0B75BABDB943e524CAA9dcbe49F\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"7akivqosvdmo036t3o1k9vfv30x9g8pe75g15mm2o\",\n    \"date_updated\" : \"2022-12-25T10:49:58.385Z\",\n    \"date_created\" : \"2023-12-05T10:14:26.385Z\",\n    \"identity\" : \"1jtoqjrxy8kfh4ci48rku7pzj3rf66783i1j0jhn9xgt2d84p34wpmhsfajf3z0ojwkh8d9mu618z2yoscqyc6qviqpreypgn4e84w\",\n    \"account_sid\" : \"AC4C87AD4b64062be23AADDfc7FC1ED903\",\n    \"chat_service_sid\" : \"ISAcD7bB9042770aaeF4F5B5F7AFdaa556\",\n    \"url\" : \"https://web.example.mocklab.io/686879\",\n    \"message_types\" : [ \"9gwa9wot70hboij7iqsvrsyv4c7ma32d19rhtrb8uhxshkx7o3cu0pflplopcque6gw5f7ttvrhx8902yr8\" ],\n    \"sid\" : \"BS330ed3f1B1d1c55bDbaEeF6d3a65ed1e\"\n  }, {\n    \"credential_sid\" : \"CR5f4B9B9FD78F8EBbd27C59CC4D3dae1A\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"vtdgoy3n6j2jz7ntxtoxxewy945nfb1qj3sz9pdoj73sqactt0jsuv0ru10i0iabmfzovhfz1xudj96on1tv3v1kld42xkx9fv1ar6os61wluxtni5qefvj3emoz4nn98wjrspt04nfscoc95kyli6op5681638zjyqqz1e3li\",\n    \"date_updated\" : \"2023-06-07T04:18:45.385Z\",\n    \"date_created\" : \"2022-09-05T20:21:38.385Z\",\n    \"identity\" : \"5ds60r7q5xuk6492o0drbwlujqq4alcfv0ozqkabch4m6qqow7utvor0ohq4hhxs7kfpmxijwcjp8xwlvxk0rn1qk40nc0hrryms6ml55xq1phgqto529k02g52ef21fri1ywfpmoqfv7zk716nqyby9nyabmcfp0g7k\",\n    \"account_sid\" : \"AC191Be4de7a57bE2efD51AeeCe58ECbC2\",\n    \"chat_service_sid\" : \"IS9Aaa7C7f729Ca5AeAAaf26c68B84c242\",\n    \"url\" : \"https://web.example.mocklab.io/385495\",\n    \"message_types\" : [ \"rr80wjwlm2\", \"h829rib9f0vn8virj6eqvh0yajvcjn9wubmukyowqca5t014678yscs6nk831a0h0v8k3xwbtff1cboeob78ht19n1m9b1syvsgs6\", \"e8hgfmiosux2iuf\", \"42m5kmkisyadcpkzg17gddo3wdifsiagji6h12au9y79w2dprxdrlo4b42njizsz0cermwaywpm1ajapv2lf5ru0pwplcd19k83is6hukn2apfoe4jckj\", \"67i3rwcwwm\", \"dgxz2leux92l00x5bicgh\" ],\n    \"sid\" : \"BS5E550bEAdEb4ed7b4Ee843a638A9B9Fc\"\n  }, {\n    \"credential_sid\" : \"CRfCD21aB76790De0aFe913CDac7ACc4Be\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"y4jqabwolbecfvpkrv4covrei8fucr9ui23vw\",\n    \"date_updated\" : \"2024-01-18T12:49:30.385Z\",\n    \"date_created\" : \"2023-10-17T19:04:13.385Z\",\n    \"identity\" : \"csy5lvb4ndfgu4vpqrqc4px1n70l9wppsqdmdbhq28qhdjtxwkfcas0fo5bx8232ancacn6y62adkq3gsal8n0\",\n    \"account_sid\" : \"AC8FafBefa0aeecB6C202cfc0BCbeA6Ff0\",\n    \"chat_service_sid\" : \"IS4ADEA8bca497daced6DCEeEFaF02227F\",\n    \"url\" : \"https://web.example.mocklab.io/522267\",\n    \"message_types\" : [ \"kn53dlmyqvsmuxbi8ikknkyfy07n3f7m3f6nz5d6ljbmthm77p69wz1bpkqtf7z3wjdyvottkwdqz2mxft86n7bvdfpvv6k6jtb2inxrq1f1u30ufrjvoyjz2rig6vxepf8aj97wzu\", \"7yw3govozmmghup20zmkamflb66aam0d25\", \"tch1orhe150o8nn33rjr2poupvyf8dw5np73nup8uybsf6xt1oag2bod7iyq3wp4t6c0g0wojdcq\", \"ea1hpge9sv3t53caopq5irr3xdz2qbimmekgf59tbaqib51cdxkj0hlx9vix4xw1tsjl9as51z3vdd0j31o8nqud81ps0a2mw3awjrkmczprll60bd4eo5vrokslnr8nikelw\", \"2zhqg0u2xaf1l8q4ztjg684hsmcpsn3d8g7w6xggrmn2ak1j0x8ggc0bm1fgllv7tis4px6ju8i8l0h8mx2q9ucon3k9i528i9osghjghwxu4p0jm8x9f5riiab1hfv3jl3ou4bjxqwshu\" ],\n    \"sid\" : \"BSE9FCBa09b32AC2bDAdFB75E0B72d6b84\"\n  }, {\n    \"credential_sid\" : \"CRBb6c36f87D9CB0Cd2D8f212145EEbb80\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"vmegq2dbxt1t7xidedkdsoqwdy7v2fyqwgvg5j0bwbya3gqh31zj5bbk4r52utaj7s25hi880g79yq3vhx3056v79tt9j8nrt9syia62jfjp2nc00kwc4m3anvo\",\n    \"date_updated\" : \"2023-06-04T08:22:31.385Z\",\n    \"date_created\" : \"2023-11-16T23:24:05.385Z\",\n    \"identity\" : \"zqap0h0m11uc0pfi6qb6ups2vkoewdpd54la48jkf6zvarv6mraa7exb3beu304vz6ayrqjmhofazwm8mjda9wmn7xkswk49bcww1lehqryr\",\n    \"account_sid\" : \"AC5bbFD6B5cccDCaacFbCfE947E4Fc3bB7\",\n    \"chat_service_sid\" : \"IS4b5dFabf69f1BeBeCd7f307D74DfeAde\",\n    \"url\" : \"https://web.example.mocklab.io/489258\",\n    \"message_types\" : [ \"tjr3nc2rl3vqwy397j32facwindpxvgh9ee1xg12a0zp1vhsthjmmsk0qmns3kwculs02f0sqbod5stn86tm52btjpg3ajrkq93kh6exx3a4lq532qxw2u78prn244\", \"p6o2jx9ng00ai896wd49ojsd5khu5jygehuyfo65yx8royib5ppxa5\", \"x1yog7qlwbpu9ibhm8m5dptsodiclz613e7cit4s0rltrb22ob3c1hqeqc1wxfygdj9ozg1dteb2rj4kvg66wpjiw2f7z4nucqn8j0gmke68ouestxgmdzi5wt0hflj5219l1iygcgzvs\", \"9ydu2vm57w7b1m3v3growznxp03r4hka9mzjcfxhwstwvi6jaok65pyzs0qis4eo5bc49el1muapa9bggode61caymq2q4zs1bu00epptkaq3iepnwuysw8rrg\", \"irf01qi2rsu32\", \"5l36ua1wz65kch3za12ss1629dexjl0oa50iqaf0rpslh9hxu3ho4gpd64hbx4yyg2yf3ksdmcxyz0srs5v86qm7bj96f1q1n9pers293h9g5j70lns29yps\", \"tzwrqjpyz3rfcfzvs0ll0a4osr2c3q31eowseo4nr5382r9mr6u8suo6poshgeb3jso1af7bjb8e80xkbdewhm7\", \"mh7bpwwtx9730gbtc97fhkynhk1per3co9ib16qcnzkaa9pykld8xjvwbeb7imzk1tfvf431ex332rsx4m2o91q8nmpc8km36kd7v6pq9o5dudsq6cb26kvr6sowug87ze\" ],\n    \"sid\" : \"BSc1552dBaC94DEF5D24E4bC583F10fb9C\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a60caac-2b67-48cc-9964-f2d017b2af25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.385815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceBinding",
          "schema" : {
            "properties" : {
              "bindings" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_binding"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceBindingResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "d45b341a-b993-4c5c-8ce0-9cc9bef3ae60",
    "name" : "Create a new conversation service on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Holley Kunde PhD\",\n  \"date_updated\" : \"2023-10-23T19:34:14.384Z\",\n  \"date_created\" : \"2022-06-10T17:58:03.384Z\",\n  \"account_sid\" : \"AC4ccfEB430FD21C26c79789FA80B7FBDF\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/068701\",\n  \"sid\" : \"IScc3Fe0C1BC0F0dE265DCdf673F024948\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d45b341a-b993-4c5c-8ce0-9cc9bef3ae60",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.38417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "d4525065-607e-4af7-983b-8517247a5bb9",
    "name" : "Retrieve a list of all conversation services on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/286082\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/221700\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/701475\",\n    \"page\" : 9085836284207449573,\n    \"key\" : \"9d549hn7dk3p07mlifavxa15mu314b52pow3mjq3u0wgectfc130e\",\n    \"url\" : \"https://web.example.mocklab.io/936507\",\n    \"page_size\" : 9142706169587338639\n  },\n  \"services\" : [ {\n    \"friendly_name\" : \"Miss Jon Beier\",\n    \"date_updated\" : \"2022-06-30T11:11:26.383Z\",\n    \"date_created\" : \"2023-01-30T03:33:12.383Z\",\n    \"account_sid\" : \"ACb25588D20cACF1A7CC2CDffAAcFACFaB\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/286237\",\n    \"sid\" : \"ISf4b4d28db8a139EdE05FFcf400DBFBA2\"\n  }, {\n    \"friendly_name\" : \"Dee Maggio Sr.\",\n    \"date_updated\" : \"2023-10-21T21:42:58.383Z\",\n    \"date_created\" : \"2022-06-28T02:58:27.383Z\",\n    \"account_sid\" : \"AC2a9D426Fc1eDa50EF6EC9276c1EFF26f\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/713477\",\n    \"sid\" : \"IS37d42475B4E996EFD3ad5Aa1dAdca80F\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4525065-607e-4af7-983b-8517247a5bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.383951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListService",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "services" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "01d3fd04-13ce-4b6f-abaf-74a473ddfa5e",
    "name" : "Update an existing user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RLDa57da822CB76087bcfDaEa0d5A0DD70",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Miss Lyman Kshlerin\",\n  \"date_updated\" : \"2024-01-13T15:44:59.383Z\",\n  \"date_created\" : \"2022-05-03T07:57:02.383Z\",\n  \"permissions\" : [ \"ceaej\", \"rx8iocsejbqotz4i3qw9laj4awz225680fjamx2o7sorxeh2ecrut0wc\", \"3tmy9h88hzx3i4x5qwju3vo1gbqno0rf5vd0yojosb2uvln8d9wnwiezdcd2a7cur7x81nxlc5hrjb03zc5n1uljds2ec9fz277lh5m5ydcjx2t0gjee13tpqpjnmxz0md4wij11p3lp19ex4pzx1zhpa\", \"riess6t3skrks16ab4x9md9hvmuqenihtzkykdfqepyjjxc24so51\", \"xoowuchs6cfr9vvjg8ozwe3yunmaytdc21fudzq2m8sfv7qrkyxuu8nxowgnlpj6294vfponefwqtrvbawzq0ib2gpqyu20q6a8fc5egsojmyytzm95frpd0oszr0wpgvutquz1dus5d6wuovbzxj\", \"sqqtifm7u1uke1rhai760q26o96ksx2gdk7h44ctbdsgwbuzh554z5uq2nke92a97wba1zzkek6dy9w7vwccnm9djmvzsmyttgza56ccvch3ok8kw4l2p0pm975fy88opm13hs2cmkb676nz05yy8v8im6tyj0qzub3b8qf47zmaqp5fe7h4soy8cu34ef0if6ss7\", \"0ffe1si4o3wqy8qcagu59an3t06586f3xluhl1ltb5ui74ji5a61eswokx22uqe978k0wtcg2a1pzx554nsw47zr868fqrgd886hihkj5jwezlossmrnqw4rhi1wfbpnk43aunv9un0xe5sjktf0diq486llaxt0xhg89de7jowh2\", \"cjawyx14wcqld2fdcwy6hnlulao7ca0gob0h51gv889w90vet0b2qp65p04r2m64msew4fl7usjaeyupumlanowrv4t46zzo79zitnovpanzrb428uimqjdvfczyx9ofjlpllaxgv93w8n2g2cqu9nfqo7dy9tr59dlr5gdi0shb9kn4hofz176br4w63mn\" ],\n  \"account_sid\" : \"AC9aFacA9f5ba05BeAf783568a22af7dCF\",\n  \"chat_service_sid\" : \"IS5a7c1f18ea1330E97Db653DC4D6e1D49\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/605821\",\n  \"sid\" : \"RL7Fa2EBBe136ACaFB0D8f3de052379a1b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01d3fd04-13ce-4b6f-abaf-74a473ddfa5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.383276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "05437fd9-6cff-4d96-86b4-2f206fc6c8b4",
    "name" : "Fetch a user role from your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RLCdB635dFaf010fE46a77e316F0584314",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Mr. Marlin Koepp\",\n  \"date_updated\" : \"2023-11-04T23:44:55.382Z\",\n  \"date_created\" : \"2023-09-26T00:47:12.382Z\",\n  \"permissions\" : [ \"hq5a0gptuxhtw4ftm3nwd1ncgz7vjiuldyapf709m9nf6ez6mrvejjg\", \"fq70uafq7jqzxizcbi49dnbak4w57jg60wud0me9n18zsbmeyiyuvufsxs35jejn\", \"jkzi8brl5p626a8aad1puu4i3j7dj5twor7vhd8guj7wrlrdkhnxsnwo02w8w05m9ej5e6rxg0xykwsv5mm6wivk1e4rzu987mqzp6bmhlva6kotmrilddmju9x0cphlfewthel\", \"9yan7xvwbhlkiv15h2r66zjnu2b3bsgs553qjx9p5nelctbgdzbfyganruqu7vyak4oicquwxp54jtiqepaztqiytc4e65us46hvyopo98sdzi02zlnyy\", \"82y42mbzumcs2z84llhu3xdsh06oaaz93gxoynsarb630ommt1vc4nwzw0406ym16u79za9m08oyrwg9kimydk0olzbtyyx0xf458nylbhn3wvocp06gcauv6s6v5kaucsgqlaalvux224cqrsnltr\" ],\n  \"account_sid\" : \"AC3ac611c43Ca0540Db9cec042aD95Ac3D\",\n  \"chat_service_sid\" : \"ISC4D0BBEEc2D4531e0106b0BCEa1681Ce\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/132534\",\n  \"sid\" : \"RL4BcCc86588D437cf86F4BD0c3C303DE1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05437fd9-6cff-4d96-86b4-2f206fc6c8b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.383006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "70e351aa-59e8-4787-a94a-80a2b21766c0",
    "name" : "Remove a user role from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Roles/RL857C6bC06A576DfD1aE8FFCAC0be88bB",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "70e351aa-59e8-4787-a94a-80a2b21766c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.382748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRole"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "86ffcb83-6911-41d5-8b33-f6b866239135",
    "name" : "Create a new user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Zackary Hand\",\n  \"date_updated\" : \"2023-09-18T00:20:05.382Z\",\n  \"date_created\" : \"2023-10-19T06:07:36.382Z\",\n  \"permissions\" : [ \"99365bmhbxk\", \"0jg9hu7syulcg7nquy6ho3kflhu74udpbf\" ],\n  \"account_sid\" : \"AC8e086c62ccB64D4c24068cD00Fb8b3Db\",\n  \"chat_service_sid\" : \"ISf27aDE7e8fcc49118Fd7EeCb6bbEb9d3\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/410240\",\n  \"sid\" : \"RLC4F41FCA76a45cD48fFCE8399992A89A\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86ffcb83-6911-41d5-8b33-f6b866239135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.38271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "eb012df3-d063-4747-8a19-e979ac8c21ee",
    "name" : "Retrieve a list of all user roles in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/012030\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/899574\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/168209\",\n    \"page\" : 1308084098521450705,\n    \"key\" : \"bqh5qerx6cqe7vualn63csgunp5smkqvikeg4qslngti0z7ivlp871fzvbq0k0le46j5x0lkfqxowksuu51gf3fmodh8c2m4tp0adiuzephfotfzh8jojh5u2jj4te3d3xggzzvtdm5hcaeswiy2t26z2dvgp1a409bz\",\n    \"url\" : \"https://web.example.mocklab.io/115230\",\n    \"page_size\" : 8215817041808111327\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Cuc Bechtelar\",\n    \"date_updated\" : \"2022-08-11T14:08:46.382Z\",\n    \"date_created\" : \"2023-12-31T16:16:34.382Z\",\n    \"permissions\" : [ \"mrr9tudrdrwd1efkjixgpra8zdfnpn3nmkavfaa01u641wbkvq70zgwdoltyih88mvs9t6rw3tpcwoz7llnp4gp64rmcbbp6f8y3djlvvihil02hl00hvq8vg1aqpnd64aoqmbulwn1sguxsg43jqydmrpo6yc5w6nqg8hol6uywouea6bkb0t19mhh\", \"yc8juz7b9vdf0r2r2l8j9vyvmrzxr2q\", \"p09bht5z5cp42oxnkrmifqabaqsbpsed1p5b6xsr8shb3rybu5w10ce3ec59gynue1flzc8ln559m7de88v3veq4ss4w7txxmwn1trsqk58ji4eibwa64zleqik95su9daivc6ul5\", \"vhx0vi\", \"9xcxwukm3stiwoo8my9pjxqymqufa2zxsex14us9960ck34ui9wunbsbcfiacx86flcfnzk5huu9161qadvqoa3c3sz6kpj7wunbvs0wfl29i9v6wh1qrdhldacmw3s2q1xvib\", \"ru6wrgkxflmpcqbw7el6y75p7y7zhyj6vp177wkmmud0et0rx6z4vnvxcmlihc27kjsljmcyh7ch5f1jarrlgvm0f5izwjzbxt6v85j829z92981omcmajn4uihg7rviue3geavlbvnosgb31ajjgr2nvqu5qoad7m82seamqa7qkjnzjgj3jmf4ss6ocac3oqs\" ],\n    \"account_sid\" : \"ACc2d2Cf1cAeCcF4b9A5eE8EA2e384B73E\",\n    \"chat_service_sid\" : \"IS2feAAF7E62daFeBc049383c7BdB2efDf\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/354699\",\n    \"sid\" : \"RL7AaC3E6a08Fd2100ddcA12bbcedD63d9\"\n  }, {\n    \"friendly_name\" : \"Dylan Huel DVM\",\n    \"date_updated\" : \"2023-10-15T00:55:20.382Z\",\n    \"date_created\" : \"2023-02-13T15:30:23.382Z\",\n    \"permissions\" : [ \"rub48z1jx7ebeg1w6hq62r0m7llidi58l5tfztretf21byj5n57onvx3ns86lsmev3c92wj613on2hkhzavjanpke1vbwjk897mabhpf766c3r4bxzav\", \"erk14tjkvbri9khr8r2a1hegksljkkhn55mcy2xqe9kgej23ksjswvor8g9kvkcurdyzncpmgrolks0n6879gx3e2lythzlsw3cbc23iz4nbfj1c4hwp7mvrqn5mlj4t489j92l4xtanm0elr3ig\", \"9mbe6ywzbykf82yza61l3u6c7dqj5eja8kli0h29tmnihxnffo7w4ucfbgo7ma8qf7rxp7hmvlr4ri6kldvbvkds5n70y5td502lmqxghe8x2wnmc6aq0g1gdsdec3jsa3qfb1inseopi3ayozfdezoqbp252kwmb7eo0c0qj1og2j33a0rbe\", \"4msz7cfl6b0rq44uxo0l5xqf8r2sfn0zfs9bwy9c2c69adwppg6vpeqrgsmandmtoa2nsmrl9m6wu2duewn6tu9i73qjlg78dejebb6gb73jfswfnyyqo1927xd51o13kmspxm2p211jsm1nphqgf\", \"4z4917mfzmb8y1cc6peigz810fum3t8nw0nus9ycja9yyrrug27zt5y2e6wduh16pmuh0qw3yqo3n2ivy5904v2vot10hovpdk5xo4drsb19hbx60qy0ai50amd7o3n9yhgtcidxdxyig5n0dttq28m4mtlqy5d2tmsjl0nptjxsqw1sr9motrfsvcw9jeoz63j\" ],\n    \"account_sid\" : \"ACedA9dbdb042dE534fE8Aa32Bb48EfE0b\",\n    \"chat_service_sid\" : \"IS79dE4d619Ec9Dc77fCF2BC3DF0d771d6\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/083355\",\n    \"sid\" : \"RLB24B6cb5Db1A7EAb3BB41f7a2A8eDA4A\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb012df3-d063-4747-8a19-e979ac8c21ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.382446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.role"
                },
                "type" : "array"
              }
            },
            "title" : "ListRoleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "09f9d200-834f-4577-9707-03f99642dc7e",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/913398\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/402224\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/956685\",\n    \"page\" : 8316230355619622006,\n    \"key\" : \"sh4o5rjg0jxvemel6ehq5hvi3socvwb21rlnrfa4q8jsavj2kv991v0w375c95ev48szxk88080b2ml8mlgq2pwzgyvf5zbi\",\n    \"url\" : \"https://web.example.mocklab.io/599785\",\n    \"page_size\" : 1523912959478074726\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"kap1gy152h6j693s7elo1eh31rdxzh4o32oddj5voerbex5xs6jxwqbflaupaj9irmnj0op2f\",\n    \"conversation_sid\" : \"CH861dEa55EdDf9b1c8ed1acE3e444FfC5\",\n    \"conversation_friendly_name\" : \"Rocco Dickinson\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"strf447smn6ko9i0vyjc830t2bc7lsceyy5zshjwxjseh3bqd1068j6fsdw403pr1vmrkimm7f2l4r83j9jziqo50l6s3gzt73sxobot8gavk4se17wzmbe20woghmr2yf9widh5o2vrtuhz3y7ateuz9ux4mm0dsbj07\",\n    \"conversation_date_created\" : \"2024-01-08T18:34:43.38Z\",\n    \"conversation_attributes\" : \"t8jgozhpqwlenrudp3sx2mz54lgzb72nzkqh4if21wlcyk78rzkqr63wygiw1v5nghdbil3tqebwygt3c1vtygj9eex7bdpmoql1ja0wr9bpbg776ia3rh7e5nrrp01vtbubx57152dwlvnyq\",\n    \"participant_sid\" : \"MB9d16eDC291bad88cd1fAFcDe1E2DdA2f\",\n    \"chat_service_sid\" : \"ISD16acE5FFB9352fc0bCffbb85beA3981\",\n    \"conversation_date_updated\" : \"2023-09-27T21:20:22.38Z\",\n    \"conversation_unique_name\" : \"Chantell Hartmann I\",\n    \"participant_user_sid\" : \"USbcEdCDeeD5AdE8A455D4DCF18C24E24E\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC0eC73DbAd927cdB9b149F85C9830B5ea\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"0qamh7cn0lqunlct75408i6ve9u1s\",\n    \"conversation_sid\" : \"CHb89e1d5A8b14EcEEFB80aFdc4Abe1bAF\",\n    \"conversation_friendly_name\" : \"Felton Klocko\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"mj2pb5e3yypbcn6uuzlu96q4goj3gxzbg9i7z0kwj72ef1rh4e8imtgynbb4qcuf7ir2e4eflsdzua1bapzespnvzjbeb88sf41ycc406gvemuw4q8q8ktod6nos7i5yttlc3heatqv8unc4mfcmaucm5tcyhtk04863puor2wuc3q\",\n    \"conversation_date_created\" : \"2022-09-21T13:04:29.38Z\",\n    \"conversation_attributes\" : \"ruc1pbjc0q50gupkaavrx8q\",\n    \"participant_sid\" : \"MBf89C1FC9e08b730A59171B8C99F5aF6e\",\n    \"chat_service_sid\" : \"ISaa4e6Fcfde79Fe1dd7Cb1e473D5E2B76\",\n    \"conversation_date_updated\" : \"2024-02-12T17:37:12.38Z\",\n    \"conversation_unique_name\" : \"Mrs. Thurman O'Conner\",\n    \"participant_user_sid\" : \"US930502Faba3DbAC9Be17caffEae7aC13\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACfc9550916bc9Ae3D38BF811a3cCCbAac\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"bttnj2qez2qvucbb25zllylm3kjlxinloo2awvslhg1x3i1f23il8f5jopzeli16jga4rkflxkzbvx2yxgo6jcz3whyxlwqwr4jwzfajm5x8tvcr7o5v2nd34gwy24q5s8oowh62qwhl19sq8af97u96w3eszxj\",\n    \"conversation_sid\" : \"CH17c9AcDA89136EAdD3FdFa2CdAe99aA1\",\n    \"conversation_friendly_name\" : \"Shari Jacobson\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"rmm8yiq802jqtx89hnsb8mr65w143s3ccn9626qhcqbfy7vttttat58391j5hgwmohch6q6qdcdvfy4324k4gnkmgyiuig2s8t431ab46aledbj6pm5yxjbb99ngyuchrqgqsnlq0mqhvk8m5gdkzxub48sndcla\",\n    \"conversation_date_created\" : \"2023-01-02T19:28:33.38Z\",\n    \"conversation_attributes\" : \"z8lpql8m0c09mvngu3iamyl5os1b072blt65o5oukfax3ih0mou32lr0zwgnfwnw0mb3k9906j65ueaylztwai369oucvqc9scc4lz2jy831nlgv752iu7q3s4zbvvd26j64w4o4ku2p30wxglq05ho33qocri5fklo6h1\",\n    \"participant_sid\" : \"MBE64EE4bfC6560B88cbfEB59b248356FB\",\n    \"chat_service_sid\" : \"ISaD7EBd07d24039e5EacE4Eb659D38872\",\n    \"conversation_date_updated\" : \"2022-05-15T20:15:56.38Z\",\n    \"conversation_unique_name\" : \"Grant Huel\",\n    \"participant_user_sid\" : \"US920a26aAC8378Bd3aAf7fF03d6DcfA50\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC1aC8Beb2BCe43BfaCec9d0a2a08461e2\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"n1kvkkpmyx99mn0b41prwff06masl7h8tk125buwr06hj24ybde7mzazokn2sd8z9urrrgw9w3lfsjuq9u2aru0cz1s1grmwrby143bnmlavo3qursgkkkxvy7t4lhl5i3m4jebsncoer5gvojy\",\n    \"conversation_sid\" : \"CH1Dbdf5ce77B6C1223CC286fd65EB57B5\",\n    \"conversation_friendly_name\" : \"Edythe Hand\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"09zrfdj6585clecxw0qckqxx9ttwoppiqbndr33zg6gsgjih20kygcujfn7crewifdp1nv2suu6ozo4iwma1wj7on0ewfsltrfww5yuq427n1owlihw8y2knsdp66nz5htm8ry18mf2l0882h7uzcqta\",\n    \"conversation_date_created\" : \"2022-12-08T07:34:48.381Z\",\n    \"conversation_attributes\" : \"d73df3p1bx3uqw5\",\n    \"participant_sid\" : \"MBc5c6bBd1BCdC65F4c7DAdeacfedb0Cd3\",\n    \"chat_service_sid\" : \"ISa14Db10dFe968fCa9419E0ABeD62Adac\",\n    \"conversation_date_updated\" : \"2023-07-12T04:00:34.381Z\",\n    \"conversation_unique_name\" : \"Mrs. Odelia O'Conner\",\n    \"participant_user_sid\" : \"USe21E84991C18Def532CDF48CadCC53ef\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACb0ADdD68Ea5FBe3E5eF8c288Eca1FE81\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"wyfp2kbbnh2yhrj6sdor6i42jvyppquwt2z05cn2zgink1t7flgg1ooz0gjj481q2nfct5c9fkgnozumb0qlupjn0e3yy\",\n    \"conversation_sid\" : \"CHdAe00Ba3E3DC2A81b63bBc88F4E0eAf6\",\n    \"conversation_friendly_name\" : \"Penney Goldner\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"q692ixu4le47qga066o2w95dfs4vtd3134jlay7i4cbf8e6hwfzgsjlq8pixfq2rcm64na37gc90j04ygv69bup4gwsboxps0t5fgh8a9453optnhd8kn54zjv6jt61eg367l2i9qi2zmyg7dpoem96\",\n    \"conversation_date_created\" : \"2023-04-19T02:37:59.381Z\",\n    \"conversation_attributes\" : \"ret3h4uopj333z4v2c67e5d86kfx0l685s924fdq3efutnnbghnhf11cpbwtdzqstd4fpgrskbed60hdbf5ytfvyx4rjrttxvciq4txoosqbn7hphw0srgioa5on3mm9i97oqmjhv0dlbgpnrywbtrz4c0frrjy28tz8qgwy\",\n    \"participant_sid\" : \"MB4AEfAED79F52764532CB5FbbBe8d3F4C\",\n    \"chat_service_sid\" : \"ISAEB91Eb86EdfC2b8BBbED9bc5DfEad3C\",\n    \"conversation_date_updated\" : \"2023-05-30T01:24:48.381Z\",\n    \"conversation_unique_name\" : \"Cortney Metz\",\n    \"participant_user_sid\" : \"US2FD5c01EcfFADF3fEAA4C2B65bC92BEF\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC6CdAA9DC21aE2dF0fdEF0a0Af15dEed9\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"3w8kantnlsuos42qf202almjssqrarqjqf0il1wcnn3ub7dl3mp7u14nk50tjoj7g4xfe9bcz6e1shcpoummsu396r5q8cqd9wq4nn8xg4qsajbitu1uhk8t2aepx2fek2goppden9x0e5rp\",\n    \"conversation_sid\" : \"CH17D7DdeAEadeEcFb0E2D2eAFfD0C6EEA\",\n    \"conversation_friendly_name\" : \"Nathanial Dietrich Jr.\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"rxihdg3atnoq0pao9tta8nf83xghfb187qa34eu7tvr96oqxl\",\n    \"conversation_date_created\" : \"2022-04-16T15:00:43.381Z\",\n    \"conversation_attributes\" : \"u3sxeb81zlf4qoss5iu4gljxe1rm5zo9itf9gsdtcferurennuqf6tl8q2rzx40h87i1brx981sjsphq9nv08t4s22dnbx2ce96s0d0mmreo9m7cmicrpeopjs8m\",\n    \"participant_sid\" : \"MBEAFd473a2Be9E3Dfa48BedcF2AecD5cA\",\n    \"chat_service_sid\" : \"ISD2a5ce43d0aa68B5aEDe0d6C72F8F1df\",\n    \"conversation_date_updated\" : \"2023-05-04T12:44:11.381Z\",\n    \"conversation_unique_name\" : \"Mr. Mirella Emard\",\n    \"participant_user_sid\" : \"USa8083eF42C726075D2d008c0A2C721DC\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC0140c01D51ec92B78BEc90EFeF683ad7\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09f9d200-834f-4577-9707-03f99642dc7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.381638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "9b7b7cf9-bed7-4581-b028-a3637d4cbfc9",
    "name" : "Update an existing push notification credential on your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CRB21d73d76f4dc2c0E16a6f84A307ABcB",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Erma Cronin\",\n  \"date_updated\" : \"2023-04-27T14:35:19.379Z\",\n  \"date_created\" : \"2022-11-14T21:53:54.379Z\",\n  \"sandbox\" : \"nab6kvt98t39npsnk31dxmt170tr8iuinp2emqmtn0ljhcjxz65n7b8eoeh63lzfo4gf1lvcdlgk6b3bpju4ethdwbr1v9zjhsypcjd76znarq0akn94tobogs17qvelzhgkmki0rwzikte87um3i8k5qt8eug0q4zhgehn23mcp1cd02bwpn1zg5hix0nx9j9\",\n  \"account_sid\" : \"ACE0eaA37ccC83ffBdaCa3f3FEfeEbDD99\",\n  \"type\" : \"fcm\",\n  \"url\" : \"https://web.example.mocklab.io/745957\",\n  \"sid\" : \"CR1098D761ae659cBe2FBbC003FdcdEA1A\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b7b7cf9-bed7-4581-b028-a3637d4cbfc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.380022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "9305dbb0-5af4-4c37-8687-c22fe318edf9",
    "name" : "Fetch a push notification credential from your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CR1eE4DBB78dcfeea6C25Afb5dcbEB31d0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Brendan Murazik IV\",\n  \"date_updated\" : \"2022-11-12T17:37:16.379Z\",\n  \"date_created\" : \"2022-11-23T07:54:27.379Z\",\n  \"sandbox\" : \"yif2hezfcbw4qgcwbqacjr2rvjg3fpfs5oo3wjnltio68pk5svjak0onnss8f70ldq3edsdo8n1zc5l4lojopp2qihz2vay\",\n  \"account_sid\" : \"ACbe0cA6cEA0c8DCE15f5DB8B6bA23d1b2\",\n  \"type\" : \"fcm\",\n  \"url\" : \"https://web.example.mocklab.io/365067\",\n  \"sid\" : \"CR3da2A7dAf5e3FF1D28da9c0E80e3A3e7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9305dbb0-5af4-4c37-8687-c22fe318edf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.379803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "93145c82-f3d3-4980-9372-8ad2a9022845",
    "name" : "Remove a push notification credential from your account - 204",
    "request" : {
      "urlPath" : "/v1/Credentials/CRb41Aa34986eF0a6936acFB56fba126e3",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "93145c82-f3d3-4980-9372-8ad2a9022845",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.379583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCredential"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "fc73f35a-4bcf-4b15-be1d-68a04be72e83",
    "name" : "Add a new push notification credential to your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Virgilio Bosco\",\n  \"date_updated\" : \"2022-11-15T12:41:23.379Z\",\n  \"date_created\" : \"2022-04-21T23:36:07.379Z\",\n  \"sandbox\" : \"71qha2afdi0e78wgbak\",\n  \"account_sid\" : \"AC3FBf7f7E94BBDDa977acfEcaeCc1D764\",\n  \"type\" : \"gcm\",\n  \"url\" : \"https://web.example.mocklab.io/714171\",\n  \"sid\" : \"CR67c3B231522fa0C0f0FF0AbC7D64C1DA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc73f35a-4bcf-4b15-be1d-68a04be72e83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.379549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "8c8b4164-0534-4da0-bcc4-48136c2afbd5",
    "name" : "Retrieve a list of all push notification credentials on your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credentials\" : [ {\n    \"friendly_name\" : \"Dwain O'Hara PhD\",\n    \"date_updated\" : \"2022-07-24T18:51:55.378Z\",\n    \"date_created\" : \"2022-11-17T18:54:26.378Z\",\n    \"sandbox\" : \"0jqo5ppo1sht202puw9uhxaariul394dvffyoub0ag9mxzzln\",\n    \"account_sid\" : \"AC9cd3366Cd4Acd7F61ED26A8d38cB4884\",\n    \"type\" : \"apn\",\n    \"url\" : \"https://web.example.mocklab.io/864593\",\n    \"sid\" : \"CR0789Ee3EdcedbBab410e3c784F78BDdE\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/150032\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/345790\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/848297\",\n    \"page\" : 3527415448963174539,\n    \"key\" : \"39m0e327cf6ocboe9yudk5ku9kn0t54n4rr0wkkc4zbd724ndty45xdhpcfebcgx1rmi7j02qcnqwn0vkgp888q0x5c3008rq2j8zz6xc7ajj2614w496ab5so9pesqmzwtpoojm53fnssfdskirubfnadjlbcc1ts8pa2t9aqe0a0kw99gleg\",\n    \"url\" : \"https://web.example.mocklab.io/408629\",\n    \"page_size\" : 8925617250110741224\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c8b4164-0534-4da0-bcc4-48136c2afbd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.379317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListCredential",
          "schema" : {
            "properties" : {
              "credentials" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.credential"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListCredentialResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "02fcb169-3454-4680-a219-2cf52121c5c3",
    "name" : "Update an existing conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/801k",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Alease Stamm Sr.\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-06-12T20:54:04.378Z\",\n  \"date_created\" : \"2022-03-22T20:52:30.378Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS0cD84c982479DfE63905D4f07d45d7b0\",\n  \"url\" : \"https://web.example.mocklab.io/094127\",\n  \"sid\" : \"CHCa35BBc6CFDCaC2CAA68AfC8aA90f6AD\",\n  \"unique_name\" : \"Sheilah Jakubowski\",\n  \"messaging_service_sid\" : \"MG31CFe878f845b2cAb1f8041a196f5d0a\",\n  \"account_sid\" : \"ACd70Dc5aA5fcAB3859dBE89E13FA7fEA8\",\n  \"attributes\" : \"lltq2shwju4fkhfi8phr7sdexcr3f5v8c97bp2jsa0o8x477e9dgs2yjm4t6fqjx035d91ykr4ajwl04xlizc6yhvybharqwhjzzqgcu98479vy9gq19c1osw0vzyswsiwt1x77nh2v043eapyu9uy58sve9t36eg4y307e62z33tg6mgelav5rw88std3r9mqjx\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02fcb169-3454-4680-a219-2cf52121c5c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.378742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "3c1a607a-5074-497d-8a1d-3e8f464d262f",
    "name" : "Fetch a conversation from your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/66rb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Ms. Latarsha Gleichner\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-06-19T19:25:41.377Z\",\n  \"date_created\" : \"2023-01-12T09:06:23.377Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS24bBcc8dc40CF7D3bB4752a8d0D65Fbf\",\n  \"url\" : \"https://web.example.mocklab.io/299522\",\n  \"sid\" : \"CHbe9124D46ecC5fca1A856a98fFA3Fd3E\",\n  \"unique_name\" : \"George Kuphal DDS\",\n  \"messaging_service_sid\" : \"MGfcbA5FCFC6f89b73a2Fa5aF649aBFBaD\",\n  \"account_sid\" : \"AC4F15DAb9A212d9db6d4e2aFb03bDd0Fe\",\n  \"attributes\" : \"zmbc6r2b2t5u39k2kamse6v3yk9109aurhogtnnn3yol1qao86b4du60gs8eni\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c1a607a-5074-497d-8a1d-3e8f464d262f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.378357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "599610bc-7c25-4028-99f3-44211fd1f106",
    "name" : "Remove a conversation from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/jy65",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "599610bc-7c25-4028-99f3-44211fd1f106",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.377886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversation"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "2f4de9eb-8944-47fe-a52d-12126c3eddb1",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/igqz/Webhooks/WH87fB564eDE2Eed5868A9C78fDF249B95",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHFefC694eFdc84d6F4F5794684C354c3B\",\n  \"date_updated\" : \"2024-01-24T17:11:15.377Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-10-29T19:45:46.377Z\",\n  \"account_sid\" : \"AC2E7ed47fAd80C6879604CD6Af96c42ee\",\n  \"url\" : \"https://web.example.mocklab.io/266242\",\n  \"sid\" : \"WHf88Cb7CD88E16f1DEf031b185C2dcE0D\",\n  \"target\" : \"obkfpbktznmhd9oq6xyfhdah1chhkwa2aa1tyuuyt770gd4y66vl7ski71c0edhzkxxwqxlhp7str8nx4kou9minhysgmewtf0gk0u122p9x64jv0hhbdie1aqmgwbj0ezl7ebflhg57caq8joz0mldifxdlgf3oari6j5lud4t4fqfstha8g748b7unezmlq3o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f4de9eb-8944-47fe-a52d-12126c3eddb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.377793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "e6b93e78-9973-4b0c-ba8f-3fa877c84e49",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/i417/Webhooks/WHDCd51A07a7EBEDdd48eaBAE83fABb95d",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH4BbA46ef4EcA22aA85fAcCD8abcFDE58\",\n  \"date_updated\" : \"2022-10-28T13:53:54.377Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-02-02T18:16:27.377Z\",\n  \"account_sid\" : \"ACd4c4C79Fb9d229adddBD8Dc47Dc697a7\",\n  \"url\" : \"https://web.example.mocklab.io/747681\",\n  \"sid\" : \"WHf0cda6DFcDd09ef0db7957Bd0A10BeB2\",\n  \"target\" : \"dqf1bxdp8exwilx08ivfey1h2x64flymfjz3k5cjswbejzv4wx63f9j574kjltre7hyedgadpphbehdtow5ff1uutziuqr69v0yb5rbvwz5nfs6rmlkeuo22f3emowu3c4h5dqbdpklwm8iqjpr8x8yr8qjf2z80imdl3cgvkj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6b93e78-9973-4b0c-ba8f-3fa877c84e49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.377532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "5cf322a2-a9a0-415a-8540-4305706a2be9",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/n2ji/Webhooks/WH3d861b5Ee5f4A01dEeCE44CFDA46DFF0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5cf322a2-a9a0-415a-8540-4305706a2be9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.377281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationScopedWebhook"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "16b58a90-32b4-4511-9dad-afef49ab9d02",
    "name" : "Create a new webhook scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/x9c3/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH6aAA92e18e08A47351bcA7D5b6C1ABa1\",\n  \"date_updated\" : \"2022-12-03T12:30:42.376Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-11-24T12:46:22.376Z\",\n  \"account_sid\" : \"ACD25DEa5D5505d0ed2d59BBbD0e8AFcbF\",\n  \"url\" : \"https://web.example.mocklab.io/219641\",\n  \"sid\" : \"WHaeAef4B3E88B8Dd3d8b2EAb6C1e94F6f\",\n  \"target\" : \"uzwmnkh50i48baet9rmdmv3bs0ug3gqxq3f2v4ztdbgkzakc6yuovtgmb2qlcmf746xdn67lmwmcvucufb9nmkds748zn4k0mt86pqie2nzab54p1ddz5fnlcwyf9xf6lddh3dbj22boqnz2nqoiuus0rotwsmgrjkwqz22h1b6pixaoqhbafy6aoyk2e5h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16b58a90-32b4-4511-9dad-afef49ab9d02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.377181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "d8625d34-bd3a-4586-baff-9444093c5fd2",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/378h/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CHCC42d045aDd9CB62eD3F3C4d51Eab5Dd\",\n    \"date_updated\" : \"2023-02-13T12:44:41.376Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2024-02-26T07:58:09.376Z\",\n    \"account_sid\" : \"ACa2b0A559Ca2e1baC9aFeB10AFdd3Eef1\",\n    \"url\" : \"https://web.example.mocklab.io/036476\",\n    \"sid\" : \"WH4FF6CeA1fcc86a5242CB509b40f3ee84\",\n    \"target\" : \"sqhumgx9dv6dw7bvjmllauh43e08syt8w0juu1op75avwt7ykbq9hoieum7stbw936uvhx8fedoinu7kablf6uy2l1iz5e8fq4rwxvqppp8iqks3z904l2irzbx\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/805993\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/120307\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/104221\",\n    \"page\" : 3477218404013313715,\n    \"key\" : \"fu1bmbd6e3ceog8zg1f7l7kuvz5rlfb5dk28u2ocpcbp0sst2jcfnihhhgpdpcbylv2ljrwiivkw0udpxk0xvt5n71p2wdm67z\",\n    \"url\" : \"https://web.example.mocklab.io/963112\",\n    \"page_size\" : 8100417506508588583\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8625d34-bd3a-4586-baff-9444093c5fd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.376906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "92d9d81a-f40f-49fa-ae42-75e7fca22c6b",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/91k3/Participants/6o14",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH298e6dFa4ddb8B2ADFed8220D35A6264\",\n  \"date_updated\" : \"2024-01-24T09:42:09.375Z\",\n  \"role_sid\" : \"RL8ab1ED17be949B77CfeCCAFE2ec050c0\",\n  \"last_read_message_index\" : 7536074614954116425,\n  \"date_created\" : \"2022-03-28T04:27:47.375Z\",\n  \"identity\" : \"lg2gf5dmzmxmsryy1nz4bk4a3chnruikapw8zdod3oot712nyth09azo4xu1prn6rtgpd9td1du7s71wdy8nalnh0qn7nnyj5la4rs50l07bglk633vubmg89fxuphu3omqgbb4nrk0mh835c65\",\n  \"last_read_timestamp\" : \"2022-10-13T08:49:49.376005Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACcbA3DCEe2b8ac8F4F24F44Be0ea968Cc\",\n  \"attributes\" : \"9k8um2e9zhmiammcg4vbc0ozc2enpzxdc5ssz6l1gl\",\n  \"url\" : \"https://web.example.mocklab.io/670137\",\n  \"sid\" : \"MBCFB9De56c71e44cd82FFA5C80b644aBA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92d9d81a-f40f-49fa-ae42-75e7fca22c6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.376305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "8ef6d1ec-e181-47cc-80b2-c2fd4ae144b1",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/y044/Participants/9n4x",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH8beAB20fA3339929Bf6ab9dC61dBdfD5\",\n  \"date_updated\" : \"2023-05-20T11:23:55.375Z\",\n  \"role_sid\" : \"RL20de5DBbECBcB4A22e1443aBDccfafD0\",\n  \"last_read_message_index\" : 8961618615158355721,\n  \"date_created\" : \"2022-07-19T11:56:25.375Z\",\n  \"identity\" : \"7jse67uchk1rpdfsz0yksj5fyi5dvpxytx59dosmi206q7w8pq4tqwuc2b1kk2687i86395z6zb7gvt872lmhjwe8t\",\n  \"last_read_timestamp\" : \"2022-07-12T09:00:49.375617Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC2DcbB5c8BdF1CD5aA8eCf7A2aeDF75aa\",\n  \"attributes\" : \"p06tt6ai6nt6o71bbriu6cbgl0n\",\n  \"url\" : \"https://web.example.mocklab.io/372086\",\n  \"sid\" : \"MBceeE7C59FF7fE825b3BdfAd6CBDe26EE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ef6d1ec-e181-47cc-80b2-c2fd4ae144b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.375928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "a8ec278c-277e-4a82-bd6d-4e59359200dd",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/1vt3/Participants/o8pg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a8ec278c-277e-4a82-bd6d-4e59359200dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.375546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationParticipant"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "cd52ece9-afb3-4a1b-9607-b015b0651961",
    "name" : "Add a new participant to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/jk6u/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH03Acafb8BFb0Db259c2d3baD1eDDBCFf\",\n  \"date_updated\" : \"2022-06-27T00:13:33.375Z\",\n  \"role_sid\" : \"RL11d6f99960F0e994ef35b27B74CC1E9A\",\n  \"last_read_message_index\" : 4376848282903204253,\n  \"date_created\" : \"2023-01-29T00:07:13.375Z\",\n  \"identity\" : \"f34aow3zdb2uo5cuoh8hr5bnr6nxzes\",\n  \"last_read_timestamp\" : \"2022-05-24T09:08:49.375086Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACee7B05B2EDAAB8F5BBfFA59Bc999007D\",\n  \"attributes\" : \"c5nu3qkmcp017g4t497kwpobei3xiw4cgxl42422z6grsc0rl5j1trtxgnxtheslw3vqump2sjmq3xtk9ygk5vxzt0r4tbb3tbx7bhfkf6c6w3\",\n  \"url\" : \"https://web.example.mocklab.io/127251\",\n  \"sid\" : \"MBc6D1C942951e0b5EF6E7f27AFddeafBF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd52ece9-afb3-4a1b-9607-b015b0651961",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.37538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "a3694a91-e2d6-420d-8014-f61a2aac5d76",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/6xsf/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/575056\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/779404\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/363734\",\n    \"page\" : 8495191633334095890,\n    \"key\" : \"e0oazhfefttadjj8n163g1zvtkurtmoh5v2cvwkbzt4eff7vg7ugvvb0fhs3i20ieklgtptco0d49qdjdttftw6e24h08jlqk5x59znwdw84lu9gixjaoh\",\n    \"url\" : \"https://web.example.mocklab.io/162098\",\n    \"page_size\" : 2579768622437282989\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CHBF09AA35ED11F2bc0eC80864f030c6aD\",\n    \"date_updated\" : \"2022-12-28T09:50:39.374Z\",\n    \"role_sid\" : \"RLE131eD599AC4caB75E8c1CfF19ca8745\",\n    \"last_read_message_index\" : 604402031959056161,\n    \"date_created\" : \"2023-01-26T23:18:08.374Z\",\n    \"identity\" : \"ewoy2wissd83t4ghn6aaitta5rc8525b0e9d4dor5ser587xv4slczcvj2y5gvgq81xwzf83m19msf2z4577es6gziqej53xvmod\",\n    \"last_read_timestamp\" : \"2022-07-15T09:39:49.374583Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC2DBCDE20A4da95ad3a9A0Ad63fF7CF7F\",\n    \"attributes\" : \"ry4qbz6vi4wg977zuqj5v03y2yow\",\n    \"url\" : \"https://web.example.mocklab.io/081159\",\n    \"sid\" : \"MBb6Aa8B6fdd2BeEAbc5FCBF66fa89AD07\"\n  }, {\n    \"conversation_sid\" : \"CH2CdeB2175bbe90FaC7a20EBa451F75DF\",\n    \"date_updated\" : \"2023-02-13T21:42:15.374Z\",\n    \"role_sid\" : \"RLD74723b00ef05FBceCE83ABc23dC2f2a\",\n    \"last_read_message_index\" : 6234083244552192217,\n    \"date_created\" : \"2023-06-28T14:53:46.374Z\",\n    \"identity\" : \"0zirrpxf0tgqek36rsj7p8bs4xxllocu92t5zmythinvimltie26bbe\",\n    \"last_read_timestamp\" : \"2023-02-19T10:54:49.37475Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC7A6F09775Eaa8bDAcA985FDffd2F16f7\",\n    \"attributes\" : \"yp0wrc8mb6jti5srg3ijyf7e09ldpszhqudqy8kow58ovi8ou8cfzxvwb4h51x8vcqedf653zvn6f9r1t5179jv4vewxuz15cd82udktsdgeeqw4ur5tns2lzpz2ctjdl4ufjd8z8niwp27rjaor0p4ggfaykoo3nh6u6fh0a1bwicsq\",\n    \"url\" : \"https://web.example.mocklab.io/684862\",\n    \"sid\" : \"MB2E457ba367309cDC9cbC2eFCEf3aD863\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3694a91-e2d6-420d-8014-f61a2aac5d76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.375013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "1e5972e2-46f7-4aee-a4e4-6fb372d46c8b",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/d17y/Messages/IM09bFEEc2b0e5e7284ecBAEda56F0F20b",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH8c28bC707C5b7D246A628c410CF202f2\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-05-23T09:14:34.373Z\",\n  \"author\" : \"gs4etu8fb17dkr0vo77kepnc6znfqkjwhj4cmvs1pyp5vtt89znbvu93\",\n  \"date_created\" : \"2024-02-23T18:08:56.373Z\",\n  \"participant_sid\" : \"MBbc2DDECeAD3C037cfcdF08fABdEAbc20\",\n  \"index\" : 2859760026216743922,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Itaque sint non quo voluptatem. Voluptatem ipsa quisquam consectetur provident corrupti. Molestiae cupiditate et rerum quas nostrum qui illum.\",\n  \"url\" : \"https://web.example.mocklab.io/015859\",\n  \"sid\" : \"IMEE8EfBFCf4192320BD8Cc49276F4cEc0\",\n  \"account_sid\" : \"AC3E073DAFC33a0DEF0ebB37c87a4c93BF\",\n  \"attributes\" : \"8fryhm1wejh38vbwz8gjazmggzq4cpzgls2gcmn1adg1juz8d8etr5u5xezkdsrf44wj3zxlay1lufxcvgotpye59yq5g3mh7x4ytdd02rary18g3135ty3hegax2uuoci2qv08mynrujp7wkelq2ll6ebg5m97q5dubdcubiri34w54hs03hf8ln8ms5cbm1edx\",\n  \"links\" : { },\n  \"content_sid\" : \"HX37c1F600dFa3CA14E6bE8fA41Fe96F8f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e5972e2-46f7-4aee-a4e4-6fb372d46c8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.37418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "f6a55250-7f43-4622-833e-bb793a5abcdd",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/ty25/Messages/IMD2fe3DB13bAAED12d7d25B765aA4ADc1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHfd5636B3CcDDBBFC6A75721a12DfE801\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-12-11T13:09:07.373Z\",\n  \"author\" : \"wglgvaz0obn2sp6himvhhsz8y5mzu8gtw5n58v223q7jvvj1gkmqtw6kkrwvgs54x0gn31mbgzwqxexwcpjiz3zg9dlmaoqkupt1nbaj7\",\n  \"date_created\" : \"2022-08-22T19:02:39.373Z\",\n  \"participant_sid\" : \"MB83B6AD685e5a5CecEA4CEbb81AFeBAF0\",\n  \"index\" : 7778351084575632530,\n  \"media\" : [ { }, { }, { }, { } ],\n  \"body\" : \"Repudiandae adipisci sed sed. In nam deleniti consectetur. Atque recusandae minus consequuntur magni id maxime incidunt. Et reprehenderit ipsam earum excepturi laboriosam dolorum qui.\",\n  \"url\" : \"https://web.example.mocklab.io/861732\",\n  \"sid\" : \"IM24cD0fe9468A01c9Bd92dDb4F3D37d2C\",\n  \"account_sid\" : \"AC87391bEbdFf7fB9Bf1D3f5dF43B8E26c\",\n  \"attributes\" : \"r7uxql5yq6x9tp9mias7bjn49ncdnj0bc5ratn7ygg5apyf6awnxowhd5merw3dw5423a71encpmkebq8ib0a1tsbd5buldgmx4yiugdf70biesnlv3xly0h1l9ue0tfr8vc4jswsha40h8cncfi70uneeiujwksbkh2teh2m6r\",\n  \"links\" : { },\n  \"content_sid\" : \"HXfD9AE1D1CDfdfAcCeCaEaFde6671eF70\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6a55250-7f43-4622-833e-bb793a5abcdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.37378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "055ecbe9-d89d-4cac-8344-70eb0442a132",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/1hxu/Messages/IM97eE9fE58E2460885c1EbbaEaeE4dEA7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "055ecbe9-d89d-4cac-8344-70eb0442a132",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.373351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationMessage"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "48f38df5-b31a-49e7-9888-412fec8c01f9",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/f8i3/Messages/IMA2d5443dc36B5476FAdf36f5cdccD4A9/Receipts/DY4ebBEaa547a5De180B2eef5578BCaeC8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH88A035eFAC76bb38F775A4aa499DFbB2\",\n  \"date_updated\" : \"2023-06-21T21:19:40.372Z\",\n  \"date_created\" : \"2023-01-18T16:36:51.372Z\",\n  \"participant_sid\" : \"MBa9Fb87F19B6F82D47Dd7b1835AFa0EF6\",\n  \"account_sid\" : \"ACBdfAdF3629116cC0FE73ccEcddF05D69\",\n  \"error_code\" : 6306571425165563354,\n  \"message_sid\" : \"IMAb9DcEC48d2d6fb0D3DB62ca8EE9fC59\",\n  \"channel_message_sid\" : \"YF7daAC1fFD6FeF32FF59C73af73FBe43C\",\n  \"url\" : \"https://web.example.mocklab.io/383834\",\n  \"sid\" : \"DY6eAB7f98C37de879Ca3eeA3d21c1EDB1\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48f38df5-b31a-49e7-9888-412fec8c01f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.373251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "577e9a99-085d-4ff3-bb6b-28785780ce3f",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/739t/Messages/IM141A5Cd5bfbcaeC027FF85BdFCcbCAF8/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/395411\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/968922\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/311529\",\n    \"page\" : 7492738041158528910,\n    \"key\" : \"pd6oezwfsab0xynghhwmncz7y3j2kbh0n1xu0wyn57fie58hdi0nk3xsw7f3nd5rhtv78a5372xjjqojiidpclr0f6immmyxia4fikeftye1e8n\",\n    \"url\" : \"https://web.example.mocklab.io/384310\",\n    \"page_size\" : 833868626194040785\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CHCD3D5ce0f6AD69fb759F089453Bf9C79\",\n    \"date_updated\" : \"2022-09-20T16:01:41.372Z\",\n    \"date_created\" : \"2024-02-01T18:14:41.372Z\",\n    \"participant_sid\" : \"MB8e03BdB7017EcE593DABFfDDA1b3DCD5\",\n    \"account_sid\" : \"ACC7a923c8f8B4BdEB6b6fd0EFF41cB81f\",\n    \"error_code\" : 9201708506424940677,\n    \"message_sid\" : \"IMdf8F8Cc303B331e9F289ECA8ddeD1fcc\",\n    \"channel_message_sid\" : \"vQe2555F5Ae0C7b1017a3FAA628f6BF28a\",\n    \"url\" : \"https://web.example.mocklab.io/459745\",\n    \"sid\" : \"DY86FABCf459f7e0c0d8b042Ba6Ba41B9D\",\n    \"status\" : \"read\"\n  }, {\n    \"conversation_sid\" : \"CHbadbe1A1e56bFa69aDAAa88e7B4c2027\",\n    \"date_updated\" : \"2022-12-06T16:01:12.372Z\",\n    \"date_created\" : \"2023-03-03T02:30:03.372Z\",\n    \"participant_sid\" : \"MB9E4d0f3FF2B805aB56014F53643AC1d0\",\n    \"account_sid\" : \"ACAD103d639a16D3aed3CdDbAEBD4daCBf\",\n    \"error_code\" : 8472137587710510566,\n    \"message_sid\" : \"IM5aD0FF566AEc1A39DADA4096cdEe0C2E\",\n    \"channel_message_sid\" : \"fo2dA61F58EfBcFEA7DEa3BDcB3E423fEC\",\n    \"url\" : \"https://web.example.mocklab.io/776959\",\n    \"sid\" : \"DYADaB1D5eE9EEff42bC615Ce7B16394C4\",\n    \"status\" : \"undelivered\"\n  }, {\n    \"conversation_sid\" : \"CHED6ED0Deb8d4E20fA275B9c6d2b8Aa5A\",\n    \"date_updated\" : \"2024-02-04T14:48:16.372Z\",\n    \"date_created\" : \"2024-03-04T16:53:51.372Z\",\n    \"participant_sid\" : \"MBF7F2cA04CD3f76Eebd619f18debff2Ed\",\n    \"account_sid\" : \"AC968d632CCBdeA08218A16109111D5f70\",\n    \"error_code\" : 8213961467830721719,\n    \"message_sid\" : \"IM4bEABdA6389633E496C62ec9a541c9dC\",\n    \"channel_message_sid\" : \"Ete5f9acA97eFeE4CA7Dbf7A8f95Bd05DB\",\n    \"url\" : \"https://web.example.mocklab.io/918996\",\n    \"sid\" : \"DYFbC93EEA36ACE3757b4e872eb9abC0fA\",\n    \"status\" : \"sent\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "577e9a99-085d-4ff3-bb6b-28785780ce3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.372931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message.conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "cc8ee44a-933b-4731-8f71-b1e5fbca06fb",
    "name" : "Add a new message to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/z584/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHaed0996B8Cbb6c9b7d51ADcAcdFcb6e6\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-08-06T13:05:42.371Z\",\n  \"author\" : \"cov09onn89cxcrxxi5vcadqwodvxg6e2mklu2ekxdox7pncj6cz0ptr1vlqnfzime3gtgtuuwnf6oh9d\",\n  \"date_created\" : \"2023-03-13T21:21:22.371Z\",\n  \"participant_sid\" : \"MB2F9fC64f2D1DD2745a46aCd32a99E8e5\",\n  \"index\" : 5947887733084460789,\n  \"media\" : [ { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Quis sapiente eligendi et dolorem quam officiis nisi. Est sed qui. Corrupti qui aperiam omnis dignissimos est quod et. Dicta quidem cumque in saepe.\",\n  \"url\" : \"https://web.example.mocklab.io/157559\",\n  \"sid\" : \"IMd9A0DdcE5E0139DE8AF0EAe1c8dcf42c\",\n  \"account_sid\" : \"ACD0027DDb2C07a5b8785E90D501AD9a45\",\n  \"attributes\" : \"27llqfflu5rswsheu54eztohc6eeqg3qplb1f4097rz77o68p0gwm8sfu85ughk55t2ro28a56lt87vcbrkk7m48qzkw92t\",\n  \"links\" : { },\n  \"content_sid\" : \"HXbfD7f362db1C0eC446e8320e690Af6F4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc8ee44a-933b-4731-8f71-b1e5fbca06fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.372037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "381b9b50-dac0-4585-bfac-c0309571184d",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/26u3/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/671358\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/412709\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/400886\",\n    \"page\" : 6990755604902319123,\n    \"key\" : \"g4ka567e513h5kdpt39zg8kdggjxtts5m5tg\",\n    \"url\" : \"https://web.example.mocklab.io/585967\",\n    \"page_size\" : 6162793389508450565\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CHff8ffFe64C9cD3F0Be7efB481DC4E41F\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-11-12T18:50:30.371Z\",\n    \"author\" : \"b92ybt3cex0rgpqgnkfsgxnbwlr0yup6b6omd25maz8yhwpav5q4zgd8p9oehk5i4w9js31fw6bc7bnyuipz20gjtpiooly2x4cq8c7tjk9042pubdpek2frpppzc1iwcckq1skaxwin0r63k0ola5nmkitus\",\n    \"date_created\" : \"2022-04-07T13:22:35.371Z\",\n    \"participant_sid\" : \"MB98bADa10Ce957D6A7bf28B482FCCfdbf\",\n    \"index\" : 6853297016830967248,\n    \"media\" : [ { } ],\n    \"body\" : \"Temporibus odit dicta aut. Dolores consequatur fugiat mollitia voluptas. Nihil ea quidem voluptas.\",\n    \"url\" : \"https://web.example.mocklab.io/971346\",\n    \"sid\" : \"IMb905B7eC264df3D58cb0E0b8DD11917a\",\n    \"account_sid\" : \"ACef895850Ff4e6Abb2bD7b5b6A8fD761c\",\n    \"attributes\" : \"u3cgfv3u5x7ljm19v7vekeso49vanmg1rdup9jgj61za3h003dss2jbqzkrj0y67u07x4g021xcqym8dice648t3nx9cm18xz\",\n    \"links\" : { },\n    \"content_sid\" : \"HXf4F79a7cE4c2C00FEF29d0AFD24362Ea\"\n  }, {\n    \"conversation_sid\" : \"CHbE5e13CdDdcFeD9a2C66FAa77b748CeD\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-08-26T13:34:00.371Z\",\n    \"author\" : \"din1jlr0v2tsk4q1iy5hz4et4il4gh2e9632tk\",\n    \"date_created\" : \"2024-01-22T21:23:44.371Z\",\n    \"participant_sid\" : \"MBfdD3450D8Fdd05f62644F21dC9dD69B4\",\n    \"index\" : 4728830997378361669,\n    \"media\" : [ { }, { }, { } ],\n    \"body\" : \"Tenetur odit commodi. Dolorem mollitia consequatur eligendi unde. Quia placeat consequatur maiores minima.\",\n    \"url\" : \"https://web.example.mocklab.io/410788\",\n    \"sid\" : \"IM3f7aBE788Fe6d32eAb9efA0EbAE0cf7c\",\n    \"account_sid\" : \"ACEd78a7C26bbF2DACDB43274575b86BCD\",\n    \"attributes\" : \"m80vcwf7m4l55z1lt7m2etxs\",\n    \"links\" : { },\n    \"content_sid\" : \"HXbeFb10970ded09CbFfDaF92e8aF507aB\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "381b9b50-dac0-4585-bfac-c0309571184d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.371587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "55f42f25-2cc9-4de6-bf12-846d196504dd",
    "name" : "Create a new conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mrs. Marcel Breitenberg\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-11-25T12:49:48.37Z\",\n  \"date_created\" : \"2023-06-06T22:26:38.37Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS9bC25CD4A4Be46DcA7F4cA389fE35f4b\",\n  \"url\" : \"https://web.example.mocklab.io/540050\",\n  \"sid\" : \"CHeaEDecDFff42e4A44FACc60FEECB5F5f\",\n  \"unique_name\" : \"Starla Crooks\",\n  \"messaging_service_sid\" : \"MGc8a5228a9E9Ac2bcCd75CAbE39411EC4\",\n  \"account_sid\" : \"AC2EA5772FC0FA6ce65ddCF18Aa77AeBD9\",\n  \"attributes\" : \"g4aoh5bvzin4xre1t0s9w6txcghmqcuyhq76rttw5k1599l4eyirfc0ma9gy1leik22mtlm20tvxfjcozfohqf71oq5acx0qrmwmpltndkfj4enc2wi6f4zah8ebrwcgfwjd28qwchvkjd5i4g46prn1apx9359yke94knzmd0p38164h22mpb8a4fk2j98m6mwhc\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55f42f25-2cc9-4de6-bf12-846d196504dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.370688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "193c10a7-3261-4a29-ac60-81462762228f",
    "name" : "Retrieve a list of conversations in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/191133\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/860796\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/136051\",\n    \"page\" : 7204166078182409791,\n    \"key\" : \"05rkhhxbyv9a7ajx5vpamsow55xmonpm\",\n    \"url\" : \"https://web.example.mocklab.io/079125\",\n    \"page_size\" : 47717761378612818\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Leif Mosciski IV\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-09-07T08:56:14.37Z\",\n    \"date_created\" : \"2024-03-09T02:22:31.37Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISfDbad12eE84A0C9c8dB379e94EcdEab5\",\n    \"url\" : \"https://web.example.mocklab.io/471114\",\n    \"sid\" : \"CHC2DcFfe2ad0fF5b15d63E0eF13559DeE\",\n    \"unique_name\" : \"Pete Weissnat\",\n    \"messaging_service_sid\" : \"MGd6F03b57d29d29C0fFBad02C3fFF91f5\",\n    \"account_sid\" : \"ACB5a1EAA2bAefDD8Ba9E65a8DF0aE57A5\",\n    \"attributes\" : \"7r0s3lr3c1i2ws0\",\n    \"links\" : { },\n    \"state\" : \"closed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "193c10a7-3261-4a29-ac60-81462762228f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.370331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "32d6c911-9bce-4d54-b042-cfdb6d6fe5ad",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"AC113F2B42191e4bD56FFB4ba7aad65e4f\",\n  \"filters\" : [ \"zcy5hkib2zcwaco5hwq8cratwdwxva8hnmm\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/857862\",\n  \"url\" : \"https://web.example.mocklab.io/895981\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/669397\",\n  \"target\" : \"flex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32d6c911-9bce-4d54-b042-cfdb6d6fe5ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.369674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "8396a3b0-ab27-4ac4-adb2-801805c42b3e",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"ACD6f2Aa01d079Da0aF29CD3AFef5AcE1C\",\n  \"filters\" : [ \"sbdvhdkehhw0d79vof6vjeancf147wdl1eam9020ywjnu5uhkpl3ot1xxvyl289lqc3zdrofnunpvvq76iy6beb5vcqo7mhslf9mgj8ucrpd5f\", \"qgeidr3c9av9rg1u16nocsljae7ljx3ol6rkawf61pgtiieig87xho9c945cj4f3avkj3xaq5eqrt6i98p60ozioi0bqfysecno7xb7fnbdf3vmfv32qyk8gnj5duzceh4uog0amwp\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/367014\",\n  \"url\" : \"https://web.example.mocklab.io/091409\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/782790\",\n  \"target\" : \"webhook\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8396a3b0-ab27-4ac4-adb2-801805c42b3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.369403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "f4529b0b-355f-453b-90cb-80dc8ccc9b7c",
    "name" : "Update an existing address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/9jsh",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Miss Amos Harris\",\n  \"address\" : \"m54wxysrw1hrq6lq4oz3k975co9xeuiwu5uq1j0q7zawchpek9\",\n  \"date_updated\" : \"2022-10-31T18:33:50.368Z\",\n  \"date_created\" : \"2022-03-20T22:16:50.368Z\",\n  \"account_sid\" : \"AC96A607eA0Fe89129fd4aa260ACe30F2E\",\n  \"auto_creation\" : { },\n  \"type\" : \"39ufksivajx2vutjhhlwbt0m883mteha1suq90jbenm5fvi5o6jmzg463tt5n2n53qn52q4nm31a58ft4mrujc5jsoe3ehcvqf43s\",\n  \"url\" : \"https://web.example.mocklab.io/952993\",\n  \"sid\" : \"IGd55da4Ac2d0Dd475F6C6cADd077faeB5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4529b0b-355f-453b-90cb-80dc8ccc9b7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.369071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "2e6aee80-4ab7-4bfe-9e2f-f9aad287c360",
    "name" : "Fetch an address configuration ",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/1xs4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Jame Turcotte\",\n  \"address\" : \"vzvfi0pprxl6ftkk6f11x09r8c8xjjj6epz16dkko0f1loue8c9o68u9s96vsckpjeb1j9sgc8yfxkhj4f3nosixw1ov038golkhp481hxnxnjf1bx7vxu8swhwcy0bknnlqq9608ccf8je2qpi050dzzk0fk3jziae73y8vyk34wa75\",\n  \"date_updated\" : \"2023-02-28T05:26:01.368Z\",\n  \"date_created\" : \"2023-02-15T03:28:02.368Z\",\n  \"account_sid\" : \"ACfA50D1FBf4E4cCe0fcab1dE7553eabAD\",\n  \"auto_creation\" : { },\n  \"type\" : \"5n0i8cdyomq3w2ny9kba44smep1k4vnm8\",\n  \"url\" : \"https://web.example.mocklab.io/943684\",\n  \"sid\" : \"IG0d28Dc3FF7ae4b69b5f82f71d86D2eef\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e6aee80-4ab7-4bfe-9e2f-f9aad287c360",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.368764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "d636ee8e-a701-44f7-9869-10047b0c930a",
    "name" : "Remove an existing address configuration - 204",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/u6cl",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d636ee8e-a701-44f7-9869-10047b0c930a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.368462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConfigurationAddress"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "171e8462-e22d-41f9-b94c-58e8c4c5ca02",
    "name" : "Create a new address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mrs. Julian Prohaska\",\n  \"address\" : \"b0gulvu2a89zz4ank5grktfw2ufnrtox9ijy79032vqct450khn480b6nwau26j0dt7lmeqxupxi509m5yof2b08aylksi1yvrftpljvd6yxakllmi4z4k2zqvwcizcozj4jlf70fysg2n9avbr5stp0rwz3oeq0zuh9ro2alyozobp7xw90n6qvibhxarezoufn\",\n  \"date_updated\" : \"2023-02-11T13:56:06.368Z\",\n  \"date_created\" : \"2024-03-12T09:10:59.368Z\",\n  \"account_sid\" : \"AC78f061b86A0Ab274cbc7E3965f23fF4e\",\n  \"auto_creation\" : { },\n  \"type\" : \"h7qlek2u1s2orz6uqkj34pr6a8wblzcfc6x2s6ym5y3b36limri36pk3q9sov\",\n  \"url\" : \"https://web.example.mocklab.io/659177\",\n  \"sid\" : \"IG1ECD4ba24e0D0C60D5E5c2519958eFB0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "171e8462-e22d-41f9-b94c-58e8c4c5ca02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.368353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "8f5bec13-d2dc-4929-8464-e3107d196875",
    "name" : "Retrieve a list of address configurations for an account",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"address_configurations\" : [ {\n    \"friendly_name\" : \"Conception McLaughlin\",\n    \"address\" : \"llfwrekkqvf83h4dq0ubwpbz9cghesnsdfgc7h4b2dp0dg7hm1zfnvjo\",\n    \"date_updated\" : \"2023-01-28T21:46:03.366Z\",\n    \"date_created\" : \"2023-02-19T10:37:05.366Z\",\n    \"account_sid\" : \"ACa5cccc68EbCdFD0e921F6b1CD39Aad96\",\n    \"auto_creation\" : { },\n    \"type\" : \"au1a3gw425u4b34aipgpl4uame1brbq95rva11qbtqb5eu0ljs1ewhtydms9u75pogjs5s68dhx92j3y59uur9nus98vvidljubz\",\n    \"url\" : \"https://web.example.mocklab.io/035496\",\n    \"sid\" : \"IGdBa8a970B55B28adDa3b5A0f9e16A49D\"\n  }, {\n    \"friendly_name\" : \"Ms. Peggie Hintz\",\n    \"address\" : \"ixckn25r47yxlbzczt04evvdtvwzbfv181dpdubhdzzfl65re30z6nycl2zfwlt4pj8u491xlq5iucdc2pgo6q9m79jzwosksaqxhe1j2jm06dszymdlkt4s7duvk0rc72nwatvyq6vvc9t9bjj8a\",\n    \"date_updated\" : \"2022-05-20T23:46:19.366Z\",\n    \"date_created\" : \"2022-12-07T05:31:38.366Z\",\n    \"account_sid\" : \"ACad5930b3dE4d4EfBddA4C4CE829d69b6\",\n    \"auto_creation\" : { },\n    \"type\" : \"fczbuoht2ht0swdj390ocjs6gre1srkcxx1ncau3xdls4hpa9qhvhwe8fpl7xeqeoiefagd7t2gsyjrrhlb01bobwvmnwon0dkm5rtw9lyztwlcnyf5tasgos9oxu0azab1nd6mc63q5j31m449wtx2mi3810qvn3z23bqopfmw6kibn0gp0ux4rn\",\n    \"url\" : \"https://web.example.mocklab.io/439840\",\n    \"sid\" : \"IGcB26DfDF7D24Ce14D1CDfB41FcAeC28C\"\n  }, {\n    \"friendly_name\" : \"Michele Bechtelar\",\n    \"address\" : \"a8brruztq4vf1hlps6hlxekrmqdwc4ckppcjypbzbv9o9y5clgwinigyt9u0z8x\",\n    \"date_updated\" : \"2022-06-11T19:23:12.366Z\",\n    \"date_created\" : \"2023-06-07T10:52:30.366Z\",\n    \"account_sid\" : \"ACB5fccecfCFAfeA5484AEd0aca49dD84D\",\n    \"auto_creation\" : { },\n    \"type\" : \"1ozcrd4cayx302btn58jpw95rjiajttyg3898k890tve4ax2blnu4vb2vtwlxw5ui9sftphzjwenuh9xtiwl566t6asdgghchbnzb7k000wnurmku1r0s9ciodympdvukwd9pvw25c3h74nh4la\",\n    \"url\" : \"https://web.example.mocklab.io/635364\",\n    \"sid\" : \"IG6c5BB1C1d7BADf2bFcbbAc8BbE3A4f5A\"\n  }, {\n    \"friendly_name\" : \"Eryn Weber\",\n    \"address\" : \"plrk81cnu83civr4z7nxn8ezrchj050tqitgs5qrwn2cf5ok2mny62eput48znkd40gygvggl03vqv1wx5v6nlru5so2et7xfdthvgmr39a4xobea469ppzc54\",\n    \"date_updated\" : \"2023-01-29T08:41:08.367Z\",\n    \"date_created\" : \"2023-12-20T07:54:51.367Z\",\n    \"account_sid\" : \"ACDB890CAbA4f9EDEde3a915558dCd9Ebb\",\n    \"auto_creation\" : { },\n    \"type\" : \"n1d8gvrbuvjn0a5pymc9gkdfat409odgd57o0ek82vozb5q473xhxhlf8mogzioxvihcyevf34a81mbo\",\n    \"url\" : \"https://web.example.mocklab.io/711525\",\n    \"sid\" : \"IGe3e2367aa5b24eb4D6ee4EF4f73DA4c9\"\n  }, {\n    \"friendly_name\" : \"Tu Stehr\",\n    \"address\" : \"wvwgh2t7pd2718qu5tbpl6q0b0s6ztyczr55dq56igvxi58s29d2q62lhv8gu305xxh83g1euq4khda8llk2yz5y5kfum7ded0gnaokcb2w5qdpfwg4yp8btm87ni3gzwsujpm3jm8poyrj8gbcvz0pgpmhky43pyem\",\n    \"date_updated\" : \"2023-05-20T12:25:31.367Z\",\n    \"date_created\" : \"2023-03-27T16:03:04.367Z\",\n    \"account_sid\" : \"AC1C3DF4BC9b0fB2fdAcA08D47dAD1edbf\",\n    \"auto_creation\" : { },\n    \"type\" : \"zw685z3cnkfvpv15fr3z0518619m2piydyrgcpsi1e2li9guf3y8qb7w7rjrrhyg0ktaqcn16xt3gt6d4shsxygamg7uyb7ljum2z3klflize5v6pfw169m8q0r23ai2c\",\n    \"url\" : \"https://web.example.mocklab.io/019779\",\n    \"sid\" : \"IGc8F2DFde0ed8d5a3bD8f9f19fdAaEa34\"\n  }, {\n    \"friendly_name\" : \"Mrs. Eloise King\",\n    \"address\" : \"mpiaccnjgek4elii7qrms06hnu21cuao3rmewiifpp02494az2ws1xm6v2ezsvwz4igvbbmy6mpurwsqtcngcjokm0tpgevlkkubrigg404j00bm1cxv553ztq9n3z3cdfpl7wsgjvp29uh2z3n4h84fdj1fptk5pmmf8xh4vjpu9l1drvz73jeb9rlgi1cg\",\n    \"date_updated\" : \"2023-03-29T23:35:37.367Z\",\n    \"date_created\" : \"2024-01-26T01:45:32.367Z\",\n    \"account_sid\" : \"ACf062dfF6f5F1C5cf6Cd71BA9cdb764bb\",\n    \"auto_creation\" : { },\n    \"type\" : \"g4e545kxmzrljz27ued0g8fmems7qlxvbl6b5n6ka2qkox8nnyamysgtug76wacsca9ma1bhh56wrmaehxqn33288x9yoylxnbhqwkro2tf3rnvru9f7vjcvf96p0qg80fd66rdo3ih4wqc\",\n    \"url\" : \"https://web.example.mocklab.io/615736\",\n    \"sid\" : \"IG9a9e1cF673A26B2c98b62a7Acf01403E\"\n  }, {\n    \"friendly_name\" : \"Jillian Schaden\",\n    \"address\" : \"k9gez7te2ep8toyxxtnupt3pdfxsal6oddcl6j4fbqomt9wrbymyupgwyw6qzgl52\",\n    \"date_updated\" : \"2024-03-11T05:06:13.367Z\",\n    \"date_created\" : \"2023-05-24T16:03:46.367Z\",\n    \"account_sid\" : \"AC1ec6b0c389DfC6BcD97AE49BEcD4e9ea\",\n    \"auto_creation\" : { },\n    \"type\" : \"svt0nx\",\n    \"url\" : \"https://web.example.mocklab.io/178824\",\n    \"sid\" : \"IG2baEc3B0c88f3fa47fcaff6Da4112B88\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/626784\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/216443\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/709995\",\n    \"page\" : 7605809771501547096,\n    \"key\" : \"dwklaftv\",\n    \"url\" : \"https://web.example.mocklab.io/471585\",\n    \"page_size\" : 4333373969872518752\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f5bec13-d2dc-4929-8464-e3107d196875",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.368075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConfigurationAddress",
          "schema" : {
            "properties" : {
              "address_configurations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.configuration_address"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConfigurationAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "6d301957-82e0-4716-a22f-59120b826c97",
    "name" : "Update the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"ISEcc9befa7cD6030B629fDbaAb8182f0D\",\n  \"default_closed_timer\" : \"2022-10-05T09:29:49.36629Z\",\n  \"default_inactive_timer\" : \"2022-11-05T10:40:49.366317Z\",\n  \"account_sid\" : \"AC3D4ef3fFc9Da2fA96A6Ace04D09a5Be2\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MGfFDE53FFEDeedd4F5A1E0F957AaA4eC0\",\n  \"url\" : \"https://web.example.mocklab.io/064678\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d301957-82e0-4716-a22f-59120b826c97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.366466Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "615f4cb7-aa3a-443c-955c-ff7c8db393e6",
    "name" : "Fetch the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"ISEB0AB106e51A3BcAcEA2F4ecBF5989a6\",\n  \"default_closed_timer\" : \"2022-10-03T10:11:49.365991Z\",\n  \"default_inactive_timer\" : \"2022-08-26T11:39:49.366025Z\",\n  \"account_sid\" : \"ACa377b8814CAf6A2CCFaFFcff0bF9Da53\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MGd7DDE58c4C2d546e6bFFfcbB9c691Cea\",\n  \"url\" : \"https://web.example.mocklab.io/377648\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "615f4cb7-aa3a-443c-955c-ff7c8db393e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.366236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  } ]
}