{
  "mappings" : [ {
    "id" : "7ba64483-0dcc-4a08-b557-9d5ee498d705",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/bjzp/Conversations/96n2",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHe03C77C7bD7387A2ad008F568374839E\",\n  \"friendly_name\" : \"Kena Boehm\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-12-08T16:15:58.832Z\",\n  \"date_created\" : \"2023-05-28T04:07:44.832Z\",\n  \"participant_sid\" : \"MBbD8BdAceC7AcF3cC9e50cdB8D1DedD10\",\n  \"chat_service_sid\" : \"IS2eC36F6d0116684dfaB0DE46F2caEf3F\",\n  \"created_by\" : \"jgs7ah1cg2u8rvdeqav31u8nof8byzf0lbca1j4ifs9m202ussr0m2112zxv5room4o6iuc9acx5y4lk8tvv2qtalwgjk8vdhjzmb7pdkzdvtgfg4ihe\",\n  \"url\" : \"https://web.example.mocklab.io/094771\",\n  \"unique_name\" : \"Hilma Dietrich\",\n  \"conversation_state\" : \"active\",\n  \"last_read_message_index\" : 8178671602982467505,\n  \"user_sid\" : \"UScc5DD7cbcCEFd9bFC9a4EcacF722F25c\",\n  \"account_sid\" : \"ACf9CbEf9f3aAb9C39B6dfC40B554C3ce1\",\n  \"attributes\" : \"0tnvibcupnab624g1xxasagyr3ffid7uca1in7su92aom8tjpa7dluzfw9bzfxzpx9f62tyl9gnz9r439dvnvy9a7xv79x7q0ojbfzl4ney07eqnsc3c8967xfv28yfed1b9uwtb3tgg1imw75tc27mlwqqi10op210k4926q3f95h15xmafsdydc897q\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 394327906620663067\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ba64483-0dcc-4a08-b557-9d5ee498d705",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.833144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9137c2e1-47df-4efc-9433-49e392a35b05",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/j006/Conversations/6mv6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHEBe34CC114CAED16fD61AD36198B33bF\",\n  \"friendly_name\" : \"Jay Koch\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-07-12T13:20:23.831Z\",\n  \"date_created\" : \"2022-07-12T06:12:00.831Z\",\n  \"participant_sid\" : \"MB01859f5ac7Ab51adc22F5846eBeA9E01\",\n  \"chat_service_sid\" : \"ISdbC4cfcd6b89c2aB6990d36EEDaa8cEe\",\n  \"created_by\" : \"j48y4hyx85xet7c8wq5yv08ml5nv4nnl5k1pfzsaapmqsc\",\n  \"url\" : \"https://web.example.mocklab.io/759314\",\n  \"unique_name\" : \"Bradford O'Reilly\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 5790078707205515816,\n  \"user_sid\" : \"US932EC225248F5fAB6AB0FB39e5F23904\",\n  \"account_sid\" : \"ACF0dDfc0e7A6C1823cfcB1D7A6000F7D5\",\n  \"attributes\" : \"7sswvnl6zuqmwbgafvnduzkj3urx3oh91vqyx34mkh658p8imsxpvptzzkwz7xy2rwsp19ho97xeman169rvugbjlfvowbzneqlxe9cquv11eeodmq3ll2v6dmct0now1qgp7jbe2ectctfc0i\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 1392980309265018260\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9137c2e1-47df-4efc-9433-49e392a35b05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.832457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a3d57cb2-7ae8-40bd-bb5d-c693d285ab89",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Users/lbx8/Conversations/28n6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a3d57cb2-7ae8-40bd-bb5d-c693d285ab89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.831831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserConversation"
        }
      }
    }
  }, {
    "id" : "7b9d26b8-8a99-4099-93d6-2d4528e11539",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Users/gf63/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/002808\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/635806\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/403515\",\n    \"page\" : 6609853879442852275,\n    \"key\" : \"wt7vajn4rv038bdn64jp3kcp77eg2tqgw98ocbnqkkiw9tqrmwtf3mx706ts1fwyluir37d5inj307r8q7avaymvgp5v1b8fvdjbzvq3xgrsl6btrmvn4rjt1ly756l6uh64pjl6rvucxdecg4lbm29d\",\n    \"url\" : \"https://web.example.mocklab.io/599570\",\n    \"page_size\" : 4633037634692850046\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CH85c64BFbDE716070c5302C1AD8cB4bCf\",\n    \"friendly_name\" : \"Darren Kunde PhD\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-04-14T02:06:32.83Z\",\n    \"date_created\" : \"2023-01-19T07:17:45.83Z\",\n    \"participant_sid\" : \"MB6EaaD8cBca0a9Da7767852ea4a1D2eA8\",\n    \"chat_service_sid\" : \"IS1BDC2b4Cda63827aE2a96cbEaCDc14e7\",\n    \"created_by\" : \"r130wsc5kldqsiqiw9vaystkg819ndzaugzw6yw1kddjx8y066lc4op47i\",\n    \"url\" : \"https://web.example.mocklab.io/340453\",\n    \"unique_name\" : \"Pamelia Bins\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 1271362784377988382,\n    \"user_sid\" : \"US2F0C47E80AC3A3dafC622ECdCADab5d2\",\n    \"account_sid\" : \"ACC6eB5aeB6C6c6fe6693F8d475FB1BB0b\",\n    \"attributes\" : \"ucrp93lszm4ju9o5wcrf3rigdrtfnloxwjqn2z1w5pcdr8byhplt805t\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 8321679351453526484\n  }, {\n    \"conversation_sid\" : \"CH3e3868Ec29e1d1Fcb0f7fFcC3CFBa89C\",\n    \"friendly_name\" : \"Lula Mann V\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-09-11T11:28:26.83Z\",\n    \"date_created\" : \"2023-03-17T11:36:05.83Z\",\n    \"participant_sid\" : \"MBAc8eCea67602eFd224360dA5CBDcf7bC\",\n    \"chat_service_sid\" : \"ISF3A106a2F45a0AeD88feeDe117cbAF1E\",\n    \"created_by\" : \"go7djcbwmpks86g9s60nzx7nno8sf4i3iyjuuep50e1nadv2uu80nb7qvkuxuacb1s4o31tvi6dcbvto7mzcytrrvqcvmcynu4p26e2gqy64z4ly840fe26pruphbn5p4cwz3gcpwrydq63lhqop1mkq8\",\n    \"url\" : \"https://web.example.mocklab.io/434201\",\n    \"unique_name\" : \"Luigi Hoppe\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 2520014297421694096,\n    \"user_sid\" : \"US02BeCe35DA1Cff62Ce29505DbB571Bd8\",\n    \"account_sid\" : \"ACd34Fe151eef6C740B66F4eE2d4Ad8201\",\n    \"attributes\" : \"tfnfow0b86fquzyiu99wyp3y5z62i4wz7rq3ket62gjxw04zdh7iats7nhkr2jwidrzbukz6gyzu4lymya4qyeszghe0g8jaa29v69p3nxlwwo3nck9cj6liyrdx681da86gfn31b4xwy386bvl9fu5dvr5hp7i5ya7m7wlx2fx1jfubscmwbh7uzal12hq9xbbwl1\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 2876945314740344957\n  }, {\n    \"conversation_sid\" : \"CHDCBDde3a8Ae2Ce299DAe4fb6B3baB6C4\",\n    \"friendly_name\" : \"Magdalena Wiza III\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-08-15T16:32:23.83Z\",\n    \"date_created\" : \"2023-06-25T20:59:28.83Z\",\n    \"participant_sid\" : \"MB716EfE5A8A5E347D2eDfdF20E79EBffA\",\n    \"chat_service_sid\" : \"ISDC5BeC2B416Fc3B718Aa8583a5CB83FB\",\n    \"created_by\" : \"oxnl06tl7xbj4c6j2x47kf9os6y5fo2rhblgnpgdl7vqa3pt6g7kp8kg9s5n2sypazdbm8r7mfdkhtc5qi9cvpt5fvwifmdh9tmwppumla2o9cshstr333jwwkggna36ge9ncclkmkxaixx7i84htlrwelkftv4nh0hyei03h6r7vircjywn5w\",\n    \"url\" : \"https://web.example.mocklab.io/306657\",\n    \"unique_name\" : \"Ernesto Gerhold IV\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 6829565551043409906,\n    \"user_sid\" : \"USBb3Ac4f54097eBE03ba8D4778FcAeb1C\",\n    \"account_sid\" : \"ACEF5AbF94Efa03f057cD1EAB9f37de6EB\",\n    \"attributes\" : \"v6k991chhfso34wlto13xpeweay2xcrv4zm10bnk\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 5662948376879057782\n  }, {\n    \"conversation_sid\" : \"CHA7EB78Bb6aea28Fe85CE788c61eeC26D\",\n    \"friendly_name\" : \"Katherin Walker\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-11-29T06:29:38.831Z\",\n    \"date_created\" : \"2024-02-09T22:00:01.831Z\",\n    \"participant_sid\" : \"MB231AE52e49983AbCfEDE87f2eB41ACFb\",\n    \"chat_service_sid\" : \"ISBeA55A5EB71edd2dCe10B0CeA9EeE449\",\n    \"created_by\" : \"vocdr4i6e72h94lh72swezys4me8nwr2sjttffmbuuz98z6co42cbcxo2o1s5e\",\n    \"url\" : \"https://web.example.mocklab.io/496400\",\n    \"unique_name\" : \"Mr. Richard Prohaska\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 2796365362821580136,\n    \"user_sid\" : \"US8Ec62EFE2E47Cc147bbF6310aa60BcDd\",\n    \"account_sid\" : \"AC03898C3cF50bC4aBfA8Aa7E0ADB81afc\",\n    \"attributes\" : \"r4m87mz2z3mxrh4wc5p3iqq9xc6qc56fv2mzw76el0qy5nuxlrlu1c4jfynwcd5bierr73zx9selue3enm684vyi064e8a2t98f18ezhlsjf7wgpvdi3kjta8j7hu2oc4dbdv\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 742578911781708332\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b9d26b8-8a99-4099-93d6-2d4528e11539",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.831625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user.user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUserConversationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a02108cc-cb16-42d3-a5e7-272a9fed4099",
    "name" : "Update an existing conversation user in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/bh3a",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Joesph Bode\",\n  \"date_updated\" : \"2022-09-08T22:46:58.829Z\",\n  \"role_sid\" : \"RLBcDc5033c5bb161FC3b5D3B5ca5BbAFA\",\n  \"date_created\" : \"2022-11-16T14:46:15.829Z\",\n  \"chat_service_sid\" : \"IScb3dCB7C8AfEBFbbdAFdbC051fCeBAf9\",\n  \"url\" : \"https://web.example.mocklab.io/181595\",\n  \"sid\" : \"US9ae1906aD0F9c4CeA55Fb8bbd9a1b6DD\",\n  \"identity\" : \"a37ginrz5emep1tcsozzu8wiqipi55fm4w7rb3nd7g21ltmo6mvn1t50o7fwox2znbco6ia4qgmycfjdqy7io0jwujharoigzfwmyxz7cyh59xg32ijwao5q80t8mqs8bfiy7gbl773bg8g289vuwqzahlemqvojsxt6hyi0wlzkmvsh9vcv4az8b6ce\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"ACaC6Ae0AA367AF574f88aFCCfe68bFF1B\",\n  \"attributes\" : \"n2ic2luhnca4xrzvhfblwfnf6ytqd9fblw3lj9mjy1lalkvl0af6lflaovd0sxzv9v\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a02108cc-cb16-42d3-a5e7-272a9fed4099",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.829931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5fd4207d-162c-4392-860b-1cdeafd2c8ae",
    "name" : "Fetch a conversation user from your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/di11",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Berry O'Reilly\",\n  \"date_updated\" : \"2022-06-19T23:18:46.829Z\",\n  \"role_sid\" : \"RL0CCbC163EdAD6d7eef7bD44ED3Ed77b4\",\n  \"date_created\" : \"2022-08-09T13:37:46.829Z\",\n  \"chat_service_sid\" : \"ISc9AE40178f79D48EfEfB3A14C44A804A\",\n  \"url\" : \"https://web.example.mocklab.io/588249\",\n  \"sid\" : \"US12273e4cB18C21b31356da9d190B5CbD\",\n  \"identity\" : \"205m11k1s3mpba1vv45wxvdkem\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"AC6adF491513be9BB20DACd410Cf6D6259\",\n  \"attributes\" : \"8erchy6mwyshvse1k0ay3psmss81rzpz2xdltdyo907nbsfvagaesetalddgdz5m4ad1dgnf4lgc9rsod4j7kufhuvbp0g796qn76hmks236t7z7vd2tr1dwabt925d1oxex8zj6xm10fylx3yyf97zu994ugaopfyqeaj75raa1yqzg189rh90kcxz1u\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fd4207d-162c-4392-860b-1cdeafd2c8ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.829502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4f1ca7ac-09bb-444e-a955-be833ac38ef1",
    "name" : "Remove a conversation user from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Users/06fu",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4f1ca7ac-09bb-444e-a955-be833ac38ef1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.828962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    }
  }, {
    "id" : "44c9b2d0-fc46-4232-bfa8-30d179930a33",
    "name" : "Add a new conversation user to your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mayola Carter\",\n  \"date_updated\" : \"2022-12-02T10:04:52.828Z\",\n  \"role_sid\" : \"RL4B81FE49Fcfc3af84C8BB8350FA435DC\",\n  \"date_created\" : \"2022-05-18T15:47:05.828Z\",\n  \"chat_service_sid\" : \"ISD732eaF156D4EC2D459d99dCE6FdC78D\",\n  \"url\" : \"https://web.example.mocklab.io/597244\",\n  \"sid\" : \"USdD7D2EcC960FbEAD7FD34efCa8f85733\",\n  \"identity\" : \"wy42wpdn9nycvya46paa11shwgv2fzr6i22rbuig3ujapben8vduyldj7kh1kmlqqbj3vf6lk4pwyh70qdo6f819al2aa4dxgjj5i06krqy169kfwft7t6q9bwpkuj8gzlhmojx3qez1unmve2vkzy90k0l3i9\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACB25E0d9BbBAaf99DEC0D1edf16Bee7A6\",\n  \"attributes\" : \"e82zu0gnx2cwstu992aylxueijbjk42hi4k8wi1szsyjoau\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44c9b2d0-fc46-4232-bfa8-30d179930a33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.82885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fef25e47-3116-4b96-8315-cdbb66959429",
    "name" : "Retrieve a list of all conversation users in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/661688\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/606713\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/677780\",\n    \"page\" : 5227622009274925122,\n    \"key\" : \"8qf6o8go6vwnamxz8be30pfgtvacnrpy771je9ux32x5dl7rx5n6l0byr4vt4n4y1cd6faxpnx0aaorufkvyk8md6eufm62dwvgr2is0a04a905tmdw2ntn8m6v3zg9lim4y\",\n    \"url\" : \"https://web.example.mocklab.io/399342\",\n    \"page_size\" : 5793504198516821732\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Jeremiah Windler\",\n    \"date_updated\" : \"2022-09-11T14:26:48.827Z\",\n    \"role_sid\" : \"RL8D77c392D01ba6B8c0be4a66F9Ea9f04\",\n    \"date_created\" : \"2024-01-17T14:49:38.827Z\",\n    \"chat_service_sid\" : \"IS6e0C0cA3B3b4DfA1BD5eF81dD2158B7C\",\n    \"url\" : \"https://web.example.mocklab.io/217123\",\n    \"sid\" : \"US795A19f45f9e1d1fE23CB8cc593c9b7a\",\n    \"identity\" : \"1n40l5xirdpr85h1wv0z820zl92k13wbxxe5orrj4yujnvx59fpm1b8pmk4mhc\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC6BBEeaBE754eDDd5C2c62DCaaB486A8A\",\n    \"attributes\" : \"e4zmqzqfxdgljxds2rm4a2x95qtck0j6hd1hb7pxv0lklgz5v6skq3k7cflpxazjiyg037g71s14pia\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Mrs. Basil Kuphal\",\n    \"date_updated\" : \"2022-08-29T12:22:00.827Z\",\n    \"role_sid\" : \"RL32864dD7C866F9b6CaB643E979D7Dc5E\",\n    \"date_created\" : \"2022-03-09T18:36:14.827Z\",\n    \"chat_service_sid\" : \"IS00A8D9c7D811B757DD6ecEFbE48148Da\",\n    \"url\" : \"https://web.example.mocklab.io/425701\",\n    \"sid\" : \"US2452dacBEaCc702b4Bd19d7C7F9Feedc\",\n    \"identity\" : \"2jm3mndzwxgoagqmjpw8tbtfnlxwr2hmooqbxl863fxvu6z4kryj223pv92hz9w39xydxpewiu04rm4lqsieibew2l48r85q5zoxnmkt5ilcfd1ydkf4iw4jmse347gu8yckektk\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACF677b670863B66ADA221Ddd9123E9A76\",\n    \"attributes\" : \"3nx8u1bphkcy903nawbtk5nuy56b0uveyhbeqgspjh6o1suq9ta3c67ssgiws66ttyotndx9um59qv5ytzygngp7ltcy7gj753cydwt0mf4gkc9fojc5xppsxkc0eyn8g7kxz9i469330hi19cy6tb7kkm7j4u\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Mabel Barton\",\n    \"date_updated\" : \"2024-01-12T16:10:14.827Z\",\n    \"role_sid\" : \"RLC839Db2d08f5c2EC629D92Ef62fAfA9C\",\n    \"date_created\" : \"2022-11-19T15:28:47.827Z\",\n    \"chat_service_sid\" : \"IS37672E5533383852Ba2d0df773dE1ffD\",\n    \"url\" : \"https://web.example.mocklab.io/549978\",\n    \"sid\" : \"US22De8DBb67bDBefC197DFEDa6175AECD\",\n    \"identity\" : \"eu7d17sti4a62nu9hsb3aycodce3o545buljf3j0216cx2neejnwpysk79ktfkxga39p5ky6w7eq5jpk7u4vnunyme\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACCFFc3d4f57Ff9a8dBfc5bA6CFcbB3EF6\",\n    \"attributes\" : \"5i2itcuklgsk3dbu4ej99c5vbbh7ezui69uobl2hbfgbu3k2yrwe90qud0wmqiygjlllmnbqez02sa4yqbawti5j5tinfyftqhb1ve\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Otto Dickinson I\",\n    \"date_updated\" : \"2024-01-09T10:44:01.827Z\",\n    \"role_sid\" : \"RLB7f4F0F4cDa2162D6cAf0b2e6bBf40cE\",\n    \"date_created\" : \"2024-02-10T23:11:27.827Z\",\n    \"chat_service_sid\" : \"IS34Fff71FD11B402aa227ea2cD0e4bBEf\",\n    \"url\" : \"https://web.example.mocklab.io/490963\",\n    \"sid\" : \"USfc01Aa6D73c1Ed36Dc542c1d6f4Ba546\",\n    \"identity\" : \"vpsebhluvjcxgbnu45j8588brt7tkilzn36g5ybgpjzi7o54ocbjw3n4wyi3fp3yksxujod09v3vqiwkvoi4ockece833r0ua95if17ozrtsdtkz43k1q7r5dkj16svpseedn3rrvs18963fsilz4sj5c565fcwznen3t4se0uvo\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC48B98F4fdEfB61Dcc04e790AfF3B2C90\",\n    \"attributes\" : \"28zrzqtbkk6iwvbzo22vrkkdwo8ix25lswmztl75aftjezrudn8ljcgm26mk92hk67fpz8kx4abfqpvrt1x1l8t6ey14qixo40yfex2isckw\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Marcelo Anderson\",\n    \"date_updated\" : \"2024-01-13T09:38:36.827Z\",\n    \"role_sid\" : \"RLE054Cb37c5e7c8AAD84e8AEE31c68AA4\",\n    \"date_created\" : \"2023-09-07T10:48:11.827Z\",\n    \"chat_service_sid\" : \"IS9Dd1FaFD20BBE600a82afAcc11Ba30ba\",\n    \"url\" : \"https://web.example.mocklab.io/006382\",\n    \"sid\" : \"US0ADEFf7eBc63E488B11D8Ee9e506D744\",\n    \"identity\" : \"hun93tnn8i3vi43ey45cqsw0hk9gvpvbv5ic38n7314mtgjkhwi992nz8gy7p88p3qdx3xfqmn2lecsns8ycfo8gkemoeikq15m3ceph48x9cvkzz3wd1z5j5wy0bt6uerf33d78eh3hl7pwist3xnozkgiqsqip2zgoizkszlqufuiqvwc3sckit1xu90t7wxzki\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC232CeDda94dA6e4D149FDbA1563F4Fc2\",\n    \"attributes\" : \"nc0jejmirmzs1x759v8kvowr4rhuztxm55vmefekpg1ugb5pey442d7q1o3pnkcvnzmnhxli24wg8sqxjk20fp6bbo82rs4n7u4vp5himew1ccjdbp21e9x8hxzlmwl0hu6q\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Dr. Aleta Sauer\",\n    \"date_updated\" : \"2022-07-03T07:00:48.827Z\",\n    \"role_sid\" : \"RLc67a9D621C3f80dBb0DF22cdfc0c6EEB\",\n    \"date_created\" : \"2023-05-04T17:36:58.827Z\",\n    \"chat_service_sid\" : \"IS7eA4B31Ffb3e7cE28339FC1c44Fb3DB2\",\n    \"url\" : \"https://web.example.mocklab.io/766284\",\n    \"sid\" : \"US973b0d8bFc97aB9bEdd5a09aFcbEdd5C\",\n    \"identity\" : \"icrlbwancnobkpl0rlu1sqb8o0tx\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC10dC37c940E5B674dbDDaB1aF46D47a3\",\n    \"attributes\" : \"lvxaccgl213yl5dt4k4k0t45751v0kejqplyxda13xlic5pzwz746gtti5qexcuo1ig1czgr\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Ms. Malik Haley\",\n    \"date_updated\" : \"2023-12-13T06:51:06.828Z\",\n    \"role_sid\" : \"RLb076e20DaeBF8A7a2aCFe59dDB8EBcA1\",\n    \"date_created\" : \"2023-02-12T23:30:51.828Z\",\n    \"chat_service_sid\" : \"IS2eABf4865C45B097071324AB800af310\",\n    \"url\" : \"https://web.example.mocklab.io/572909\",\n    \"sid\" : \"US7df1F2AEA48488A197eA61DFfBF53861\",\n    \"identity\" : \"cqsx18r78jaqtnb5pu28t4bog663afrz6hjee5gl2jy1iwcmwxwbyyn6i4dm0lhz5u6fwpgznl2wxfe\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACe8A0D07fB40fab6FCb6A435dA4af7Ec7\",\n    \"attributes\" : \"amzw9y3\",\n    \"links\" : { },\n    \"is_online\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fef25e47-3116-4b96-8315-cdbb66959429",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.828433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user"
                },
                "type" : "array"
              }
            },
            "title" : "ListUserResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "59604007-20fc-426f-9d97-9c6970dea91e",
    "name" : "Fetch a conversation service from your account",
    "request" : {
      "urlPath" : "/v1/Services/ISeeA1FCDcBdEbcFCEafd3CE3aD1fF3cee",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Aiko Hintz\",\n  \"date_updated\" : \"2023-11-22T19:27:39.826Z\",\n  \"date_created\" : \"2022-10-01T15:37:25.826Z\",\n  \"account_sid\" : \"ACeb7307BdC2A1b20cEb49fB6Bd30EFEB2\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/545640\",\n  \"sid\" : \"ISD1BAabF6591F6366c6c7E647156D1874\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59604007-20fc-426f-9d97-9c6970dea91e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.826659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17377df7-311e-4390-9b91-6a56feacd5f2",
    "name" : "Remove a conversation service with all its nested resources from your account - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS6DFEbC1e5F3b6c744f601dE5aB037194",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "17377df7-311e-4390-9b91-6a56feacd5f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.826384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    }
  }, {
    "id" : "bc4b3d0d-cc52-4f6b-b2c7-a7231e21afc8",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/ISB0d5A3F59f96e0E4dF15F32D43a4Db0C/Users/clxm/Conversations/7h64",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH804bccDf5D9eCDb1c6A3ebe67BaDd21f\",\n  \"friendly_name\" : \"Mr. Missy Parisian\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-07-23T15:40:29.825Z\",\n  \"date_created\" : \"2022-07-08T16:47:41.825Z\",\n  \"participant_sid\" : \"MBeeccc14bE4fB7b13ab38A16e21Bb0298\",\n  \"chat_service_sid\" : \"ISFde43F7f1bfd325Addb76c3321afdDc4\",\n  \"created_by\" : \"x8b943fj4cz0ltwxpdrhd4uks7kenueqxqile4amfv5hddqoc9iuuzxydlt1ttrwb4i4nhapywqaxjbryz9p18fv6ia2q87i674kx3ygfbt\",\n  \"url\" : \"https://web.example.mocklab.io/358976\",\n  \"unique_name\" : \"Casimira Legros\",\n  \"conversation_state\" : \"inactive\",\n  \"last_read_message_index\" : 327300550677857441,\n  \"user_sid\" : \"US7Baf296C7BDD8dA13BAaB7C221f6e1af\",\n  \"account_sid\" : \"ACd41341B3B0Cc0D48B7B6611b6432de54\",\n  \"attributes\" : \"wb29eanf71wh0qkfhavs12y9zqpt7xn6ylhvaxkl4a1z3vagq9oquawe76z1e49zb\",\n  \"links\" : { },\n  \"notification_level\" : \"default\",\n  \"unread_messages_count\" : 8342676216599609926\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc4b3d0d-cc52-4f6b-b2c7-a7231e21afc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.826334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f7685ff-ad73-44c7-ac55-c97290ffea4a",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/ISEEFc9DB90DdE20cDfAb4948c7BDEc9Aa/Users/yxiq/Conversations/so59",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH6fEDDBFEFe1BDa401a3c7dcdcAd3e7a7\",\n  \"friendly_name\" : \"Riley Cassin\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-05-02T04:21:46.825Z\",\n  \"date_created\" : \"2022-05-30T11:11:40.825Z\",\n  \"participant_sid\" : \"MB28Edbb704f4CCF9B4abec8fEA6FbcED5\",\n  \"chat_service_sid\" : \"ISd12aDe78CfEBD5F8CcF4BAccF7D6C6da\",\n  \"created_by\" : \"8o1my8x3f33kafnvj5gmii96q5gady6i0vfnliiep4pdxpj2pkquumt5xcikpea0szq7r22hzeh6rfgmm932w3ammd\",\n  \"url\" : \"https://web.example.mocklab.io/336133\",\n  \"unique_name\" : \"Odis Mante\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 7307554671063722226,\n  \"user_sid\" : \"USeeae815eF4e44ee120645dAB4914cc4e\",\n  \"account_sid\" : \"ACbF58C938Cd1C4cbEad70c7bf98Edb80D\",\n  \"attributes\" : \"dc88u7zri97c6oxgjz28b3har7iqucb\",\n  \"links\" : { },\n  \"notification_level\" : \"default\",\n  \"unread_messages_count\" : 6113796893733818981\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f7685ff-ad73-44c7-ac55-c97290ffea4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.82573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8de1493a-397a-4c8a-ac25-58bf3e424a95",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISeEa7fc17b81bD1e907d43fB6d1B4fDC1/Users/ey4e/Conversations/iskr",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8de1493a-397a-4c8a-ac25-58bf3e424a95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.825048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUserConversation"
        }
      }
    }
  }, {
    "id" : "bcb93e99-c6a4-464b-8415-5408190669ab",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Services/ISDF77981bACbD47eBcDEBFC71d2f5dD46/Users/gsnf/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/787467\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/450367\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/749334\",\n    \"page\" : 4482030646360678376,\n    \"key\" : \"zi3l4q3lnitqnffgh8hpuudu8gqvdoi4xthq1wec1yxy2s2k8iug0yr7e07dg3u3qbh7pv837zro4myaxhuler4yeesw712qz8m\",\n    \"url\" : \"https://web.example.mocklab.io/457382\",\n    \"page_size\" : 8309379232872728553\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CHb1DDdF7c625b44610f5FF8D2bD51C4F3\",\n    \"friendly_name\" : \"Albert Lakin\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-12-02T09:03:41.824Z\",\n    \"date_created\" : \"2023-06-13T16:37:32.824Z\",\n    \"participant_sid\" : \"MBC988E5cfdeafccC4B2eD4B0e08f3e834\",\n    \"chat_service_sid\" : \"IS694bc6ca8a47ea69FBD2fdccb10d4fF2\",\n    \"created_by\" : \"5yi06o8fw9kanshgl9qisofle7w92upaeglfkzdvzt3tit8hclw6d627lbsxr39m8sh3mxql3ot3b39xfuk8go3pkrpp8prvjm3xbp3lezi2sbeocr965oxsb8et7l8t4zfoc44qvgdkuzw61v43fzuhfy4i4j83hpk5s2dqmkylprna8szcv08zbeealmnuc1em\",\n    \"url\" : \"https://web.example.mocklab.io/314818\",\n    \"unique_name\" : \"Dr. Ellen Rolfson\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 428590107446627855,\n    \"user_sid\" : \"US2F70cb9Eca5EF3Aaf74d51Cda2FfAd01\",\n    \"account_sid\" : \"ACde1BbA37Ebb8e6cB2cb9413a0dEecA81\",\n    \"attributes\" : \"auu3kw7vttg05kmlipmrfppwnfu097hcbjypb5qxibd5su26tabug1mrhfmk49iwc1xbqdqn9\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 2037859281306959055\n  }, {\n    \"conversation_sid\" : \"CH3Cab884dA9c4946bA70aB49caAd9e3Bc\",\n    \"friendly_name\" : \"Vivan Muller IV\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-07-21T08:21:31.824Z\",\n    \"date_created\" : \"2023-02-22T00:31:29.824Z\",\n    \"participant_sid\" : \"MB44219E3C6cfF0Ae36daaBf57937b6eA1\",\n    \"chat_service_sid\" : \"ISdE0DceC47EAa8cefEDAEa02eabb72A2C\",\n    \"created_by\" : \"z0jx8rbb4792gq2crxh1jqffpp68oz6l4mqd6pggnogazyjcjrxcatwahmw023x4shg5qlbmxovbgs32r9ejkfxdj9h8rll7ayhqifverihi3h8awu4od6aae3fzx3meb1xsc4c79isnk6cpyj701d2fv3vafiqp3hojs2nh31bdg9jmpj3208lke7\",\n    \"url\" : \"https://web.example.mocklab.io/381905\",\n    \"unique_name\" : \"Mr. Son O'Kon\",\n    \"conversation_state\" : \"inactive\",\n    \"last_read_message_index\" : 9093848272605830288,\n    \"user_sid\" : \"US34eC7D5b2b61cbee77bEe5aced51F080\",\n    \"account_sid\" : \"AC1D4Cd74Df2EdaFfD92c0DF5cDb1bF8DC\",\n    \"attributes\" : \"6uthumaf7bcoity\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 1393399612733461427\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcb93e99-c6a4-464b-8415-5408190669ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.824855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceUserConversationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86647742-2e5b-4c7d-a7a6-a78b7eb6035b",
    "name" : "Update an existing conversation user in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS49dF2cB903cF81a80Fd458Bd9E5cB76B/Users/u3n7",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Lady Schaefer III\",\n  \"date_updated\" : \"2022-12-17T02:52:03.823Z\",\n  \"role_sid\" : \"RL7cFC5F3dD8CEE0AC2C27A54b37A12e29\",\n  \"date_created\" : \"2022-07-03T03:31:24.823Z\",\n  \"chat_service_sid\" : \"IS41fD1B2F93A819eF54C58edaF7c4aF2D\",\n  \"url\" : \"https://web.example.mocklab.io/689025\",\n  \"sid\" : \"US57bb9DA17d94D3d133bCfdadeEd6b719\",\n  \"identity\" : \"46a49r8t0hyhi2m0km57fl801p7d1vj5954c3tcapw06i50rrzpqmi4xenyepy86fl88sfp4cut0emhuwyqmzyjin0aoaa9490zf8q4pkoh\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"AC1aa33eF4c3071BdFC6CFed35A39905ef\",\n  \"attributes\" : \"oc56jzwma0hb382negv8bui6pj9x0e6osbzichpjmzv9zd4u3jthbawgp7ms7m0oq73td5xvhr06ltqs1hb2jqbmeesneyghgkfdgq999i7ti\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86647742-2e5b-4c7d-a7a6-a78b7eb6035b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.823726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9275e8f1-a1b0-4dd2-a423-2782211f23b8",
    "name" : "Fetch a conversation user from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISCca41663f6eDabaEDCe57CCE24250Ef2/Users/sr68",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Miss Rosann Rippin\",\n  \"date_updated\" : \"2022-07-21T00:20:44.823Z\",\n  \"role_sid\" : \"RLe563Bb9Ba5bF5DFC2834ef3BdcD0796F\",\n  \"date_created\" : \"2023-11-05T18:28:52.823Z\",\n  \"chat_service_sid\" : \"IS115DF79E51cCC2c185ffe9DA0AefcddC\",\n  \"url\" : \"https://web.example.mocklab.io/522377\",\n  \"sid\" : \"US83aE27c0fC3fcBf1c6b8a9d721fD7B71\",\n  \"identity\" : \"ztuxinxufn0j2pl4zo2xvc0sj871thc0ag52cae6h5zr61hwnt6z65hvbb8c2xoxdxsapgect03\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC08945cC0C8D0bB04D79CAd067EDA628f\",\n  \"attributes\" : \"5heaicbm5jxd98no2g1846m3nlk5stduzp8n6szvqp4xyies168u171upfwhwu8oc690aalq41uqdrhzhjsypp9t36l77d520rw8a18miccqdahpf687iwmw35hr0ncx1qnnemlw5g9ziok6y1t9m9h6tfiqxkeo4t4p2zes49207ztp3izgov4\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9275e8f1-a1b0-4dd2-a423-2782211f23b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.823348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b8a46c9e-3411-4da4-a593-6ec2d9840011",
    "name" : "Remove a conversation user from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS0F1CaE9Cc30EFd2dd85912CF29e858a1/Users/6bq0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b8a46c9e-3411-4da4-a593-6ec2d9840011",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.822972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUser"
        }
      }
    }
  }, {
    "id" : "752520bc-319c-4540-b9db-d532784052e7",
    "name" : "Add a new conversation user to your service",
    "request" : {
      "urlPath" : "/v1/Services/IS8aE3D3DbF5D2C9bc75372AC9B5321fF7/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Leeann Farrell\",\n  \"date_updated\" : \"2023-02-11T16:53:00.822Z\",\n  \"role_sid\" : \"RLbaD769aA1d9DaAeBba8176590CF959Bd\",\n  \"date_created\" : \"2023-11-12T03:25:19.822Z\",\n  \"chat_service_sid\" : \"ISCcaebE9EbeBc962BbcACBEF3b872EC93\",\n  \"url\" : \"https://web.example.mocklab.io/663968\",\n  \"sid\" : \"US9f7950AE34C7cd67cd51eA53750fDbae\",\n  \"identity\" : \"3qj\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"AC8A75b5dCD4A54Ddd7EDDD9Fc4AB49Cfc\",\n  \"attributes\" : \"tz4yq4cq0xczbtsm3jcsmkzaveevomrbff6p1coj0glmfaw5wzv7us8xopne6055ksr5m2x5b1rvxyej5ru9cl3fnxea17gkjbv6zq0o6xcm99qw3e76et\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "752520bc-319c-4540-b9db-d532784052e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.822856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41cbc6ae-7f1e-40c1-8a30-af148f497854",
    "name" : "Retrieve a list of all conversation users in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISda6D509e900D5ad38cCf09fCEe7Ca963/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/298919\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/963559\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/247106\",\n    \"page\" : 5488252872127166874,\n    \"key\" : \"hz4xhhmlcky2emlx986kiwn298gpx1hho07k4h3ccayp9r1ep4lg20objds51xs85o0u61xm2resrozuc9534l02vwxbht22wncdytrio9au9ebysryomg6qkxg18mxtu123mw7ulqdf\",\n    \"url\" : \"https://web.example.mocklab.io/405955\",\n    \"page_size\" : 1515899666100604913\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Mrs. Francoise Dickinson\",\n    \"date_updated\" : \"2023-11-15T14:11:32.821Z\",\n    \"role_sid\" : \"RL1ba6Fb2DE200C2ba06f3C14ddf6AFf9D\",\n    \"date_created\" : \"2022-09-28T02:42:10.821Z\",\n    \"chat_service_sid\" : \"IScF5c86A674B38bCD4e7Ec9BeA2FAbB0E\",\n    \"url\" : \"https://web.example.mocklab.io/532287\",\n    \"sid\" : \"USDf3263000d0A8B7E4CdaddCFa0D080f9\",\n    \"identity\" : \"d9dr4m4j7eylpbfmrq3pstw6n2a7m9exwxgiikmnrou9xdx7k5ba6sf8qu0vjfiphau3ehgru8v3p0wfy813pwxnjng4y7wn1vkl15qih10bgzc40tcr5txz13rcnqm8u5lrrw0871ypny1\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACf8ac5Dd37e4B2de0C285B2AcFC78DEa3\",\n    \"attributes\" : \"gxms4vowsffaeeykyeskxjqitwe8hbfyt0pnk4cwuzistvdc4o3m5agh4ens9mplh6n02fesksguzoja6t3wjejo5b4prm8nj5izzxjyl6xn6p9d1jj597a50j6nkfdkfs2h0h6fqdh7\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Josef Roberts\",\n    \"date_updated\" : \"2022-12-29T11:25:04.821Z\",\n    \"role_sid\" : \"RLDd42Ba9bc36C97cec3b3aA5b63893fe0\",\n    \"date_created\" : \"2023-11-01T20:11:04.821Z\",\n    \"chat_service_sid\" : \"ISCD369696Bc3A6E5C99eE26c101BD9b2f\",\n    \"url\" : \"https://web.example.mocklab.io/445875\",\n    \"sid\" : \"USF78e61EB8074ba6A454eA26fC9BF6B62\",\n    \"identity\" : \"k2tx0o2bbv\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC46b9EC7c8fa5bCC0A3F3fbaeEdfAD73A\",\n    \"attributes\" : \"wy3wha80mfwujxl1ec1q4b47rymwd3k2kif7vo69oqit68ronghw8l4si8mqaas2cityvjupsdx3es6njdwvu5ez99yyt0i9wdf6n16gihjhixpyezmvx\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Miss Janis Tremblay\",\n    \"date_updated\" : \"2023-07-25T01:34:13.821Z\",\n    \"role_sid\" : \"RL9Cf3D90F1f1e5ADa8ca0B301EEd1540a\",\n    \"date_created\" : \"2023-08-17T08:35:21.821Z\",\n    \"chat_service_sid\" : \"ISCC1f4bfB67f19C23Fa32e0FbCce56DE6\",\n    \"url\" : \"https://web.example.mocklab.io/500082\",\n    \"sid\" : \"USE7f6A4BAFbdc49A887aaA1c81E3da96F\",\n    \"identity\" : \"wpcihl3t682mcucpirr994az4t875qtn09peua5pu3rh8duujza9leiume7khx61nmjmaqhwjjda5orvld8jvgmq66qlpe8iiz2qv4impkqnk7i0iitnbfpruxa9vgiot8ufg1tjbq9vneb08\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC1F7Ed1EC4BCb45d61e1abAEDE2ddDAaB\",\n    \"attributes\" : \"g765j19xpli3oxgcx68v2uosmft4d30gynnstos8d000ja2p969tz4kjcdqxxb7cydeue6ncuhg6pedjbkitw3va\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Refugia Lehner\",\n    \"date_updated\" : \"2022-07-12T06:29:30.821Z\",\n    \"role_sid\" : \"RL3dF0EABCDcFe0338194018563ccbf5Ea\",\n    \"date_created\" : \"2023-06-18T11:40:36.821Z\",\n    \"chat_service_sid\" : \"ISF0eB0aAcCA88Ca4b5AcBbCddb724c5C1\",\n    \"url\" : \"https://web.example.mocklab.io/346569\",\n    \"sid\" : \"US97CFB4c916f2A5Dd2E2E766d298fBdfB\",\n    \"identity\" : \"5x7rnbl4f7un5w0yst261voy0o7zoz8tdwx56vasdlh3kfddyktzii9z09k1dk8bqhj72n7v5udwwwvw24bzqk8do773a99jzfxa7o90a75bjm2a5bulxdl3rfe3bxgkx8f0l53wciansqr8fqf17wtq67j3117cbn0bkbpzxs8bbux2fxq\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC6A69AD89bb3bCFeB5F75A2efAe8F5E6E\",\n    \"attributes\" : \"8e8bo2811lptvddjvdzvcrix7q21o7h6ouqq\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Charlott Koelpin\",\n    \"date_updated\" : \"2023-09-06T00:27:28.821Z\",\n    \"role_sid\" : \"RL18deE8D48CeDB26d2ABA0118a996A6EB\",\n    \"date_created\" : \"2022-08-24T11:47:29.821Z\",\n    \"chat_service_sid\" : \"IS310d88A555d330582eFaf030e64b86bB\",\n    \"url\" : \"https://web.example.mocklab.io/244590\",\n    \"sid\" : \"UScAb3Bbdbc053F3dEfE97F0ee7ee4B5Ac\",\n    \"identity\" : \"emp4pi8wriwykravmwyojojhbrrjf1rfbiv3ziy288grrlxmf86xkuoc\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC9F2FAa7cA47fdDc20196efCdDfC40814\",\n    \"attributes\" : \"cv0zliw23nlubvj68deh5xdvc8qler32052bkjzp6ngqaveqz0r93r44db74lio2qixsuco973h5h2wcql6qxukzgmehp2lff3jszeo99p\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Bradford Goodwin\",\n    \"date_updated\" : \"2023-07-21T03:37:43.822Z\",\n    \"role_sid\" : \"RLd2CEc017f4fd2Ced6cFA3aa656d4904a\",\n    \"date_created\" : \"2023-02-06T04:18:47.822Z\",\n    \"chat_service_sid\" : \"ISf0806DF6c4DbDfae9A73c093DbC3caFe\",\n    \"url\" : \"https://web.example.mocklab.io/116231\",\n    \"sid\" : \"US697d5DfCf79aa9f1D77b09BFE9BAf12d\",\n    \"identity\" : \"jpp8br8q\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC4179f9B9469E061cC907A1B390fDF2ea\",\n    \"attributes\" : \"cds6qimla5c2i5s6xdisk038mvjav4m42wb6rn588g4fqtwqs0a5470jk6tchz6hu88cg\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Bud Hane\",\n    \"date_updated\" : \"2022-12-14T09:43:29.822Z\",\n    \"role_sid\" : \"RLBBe7B9dB5B2e8d1ec9c46CC1a57F9e8C\",\n    \"date_created\" : \"2023-07-24T20:12:15.822Z\",\n    \"chat_service_sid\" : \"ISAD7153aD0C2E6FFbAc5DE3bA298DD274\",\n    \"url\" : \"https://web.example.mocklab.io/037780\",\n    \"sid\" : \"USE2F12d8e6fb0c429D8Ec4ad6858c7f48\",\n    \"identity\" : \"tbuv48o5qyxgyo2s6s41xou9zal5rtususi5r4908uwqyd52dq9vbnprbma144mf0sh\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACaa1F8f9E1f2A9BcF7cEDEc9EEd3Ed0BB\",\n    \"attributes\" : \"p4pu5e7rk5xm6d8gjzo\",\n    \"links\" : { },\n    \"is_online\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41cbc6ae-7f1e-40c1-8a30-af148f497854",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.822508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceUserResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3f37c174-d11a-4ad7-ac08-864e5a2a0d1c",
    "name" : "Update an existing user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS0bADCBba2fAC104BbbbAa2Af9D82eDFA/Roles/RL0134CdAda559B2314621c9d2EaB09573",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Iris Farrell\",\n  \"date_updated\" : \"2023-04-20T12:06:16.82Z\",\n  \"date_created\" : \"2024-02-10T15:56:03.82Z\",\n  \"permissions\" : [ \"1xyp3dr16mi053qc0fgiwu2itpud\", \"h0vue1r2tydo4yoh4afu5us9ccw8s5w1cxjhkk4izuykezvno6jn9ls\", \"yatfxpewjabuft9vr2g6rmqjwbfi5v9r1pt87kiiftxwylrhwp4he0ggka3spydpmcpfcaha11kbfp7fxft\", \"8958uvtyz81t7bzz1qce58ny1qfbwichbpw18w3ltu1rdf0yusrnjk9se8lffwq6vyuyvbny1shqtjlxaosthnh6bssayras1a27w8umgbweg2ugeqch2z5ggzg8yjkf7ignvz54szrbekeahlmj7riv156xek88optoz9ao8kdc3tvr36rz8vh63lucoybjhkxom\", \"tlvlbuzoqv3xsadgms91clr9b1m4nfk\", \"z7ijn36okh9c0jamks9ixlbfzchphy44bgw7k76gq8ktpvuc1pb0c2fzw1u0tbxa4iis1y2xv7q0u2qswqgdpj4213cww1xtrv3five8as1xrh3fuzhef2btfhv8y9wlehcie7i8fhfdir8kolw1icxs05es66mlrij3itm7epwb1gfd9mclwz0zmil5ldjjd0w\" ],\n  \"account_sid\" : \"ACeCEBabeaCd41d1F218Ff18Ec23CFFe3E\",\n  \"chat_service_sid\" : \"ISDeAcBCca4B5a3812409bBcBEABAfd3FD\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/364999\",\n  \"sid\" : \"RLd4AdC1eCd5edF2C10beD8E73dC4eEaE4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f37c174-d11a-4ad7-ac08-864e5a2a0d1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.820764Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "05a308ff-2c00-4395-bb2b-80b2cc5cd470",
    "name" : "Fetch a user role from your service",
    "request" : {
      "urlPath" : "/v1/Services/IS1cadfE2012D12AEa6b153C1377c73eb7/Roles/RL9C1463Be502ECbce9a0c0FCdb6cab5cf",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Sal Rath\",\n  \"date_updated\" : \"2022-08-04T10:05:16.82Z\",\n  \"date_created\" : \"2024-01-05T23:28:34.82Z\",\n  \"permissions\" : [ \"30iz3zqnl8rrtk7fv80ao87mxy3vv2j46dn0v2w0mpamubelvfxpa80d3786xlxy8mb5c9h1jgl9b695xg406q6v0xa2q2yti4pdgzxpwh4gx\" ],\n  \"account_sid\" : \"AC2EC8C926CB6EBAcFcCbDF6ABCfa9412b\",\n  \"chat_service_sid\" : \"IS2Da54c6Cc5BEc9aC7De4b89597aa1fc8\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/560863\",\n  \"sid\" : \"RL8E429Cd0CF671f0aF01eaEc762Be1dC5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05a308ff-2c00-4395-bb2b-80b2cc5cd470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.820457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e47dd9ae-51bf-4f15-acf1-6fa3c2eb7f93",
    "name" : "Remove a user role from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISFef7c3BaC8514C9d6C7e2f0Fa210aF2e/Roles/RLFEC0faf0e1dFdaE4aE9f9Ccd12F8bAdf",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e47dd9ae-51bf-4f15-acf1-6fa3c2eb7f93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.820199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceRole"
        }
      }
    }
  }, {
    "id" : "18edc982-7227-4496-b510-827c6a64f5fa",
    "name" : "Create a new user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS40FCCbBae520f44BFEC1b05Dec30Dd4c/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Jannet Hessel\",\n  \"date_updated\" : \"2022-06-20T12:34:13.819Z\",\n  \"date_created\" : \"2022-07-25T07:04:33.819Z\",\n  \"permissions\" : [ \"1lttcyumhz0htcjr5ar8u63gnp8dp5f\", \"u22uyh3skd9lebwksf57ealpm3t3wru8cweig9lhrkaiujyuth747cdlz76fm9w1qem2g3woodzq3glqy99p86coo2goqr6m51cpwt0tyc\", \"nft\", \"lxgyx3j8vsarokyr424h9tzewd9c7tyfm5l2nbrdw6qzerz91i8u7h1ar4m6orfmztlxxvhmtu1ofjatmnd8cnkl8626luh36l4o2g0vvfep20gxhb0wp7q9rj0lffpnppbuopqz4l6e8v1ex9fheqsv0fgmil963a1r4zdgykro8k1su15fu4\", \"oplihe5epbze9xnlisz8tq55jqo0ytwxwfgmdoqw5lmdjtrd10r7lbu4p3baf9z2rfnsv0koi2ejg9i1u9ithhz7qel8uqc9neanzgmz3v7f951vd7q3i39y5z6wtqi1igghhv1k1spf55gq5tolrff6zpy8ykl643rgdxvzwczhcqxzng4f\", \"4t5b8cekmkaqakd3e46so8t0nf0blplfagfjl98s19gocus3wl8iu9y8tdd4zwu8em3ci8yezt11zk02u1a3ezape8a9fdu6veg2mmk5agg5yk94f1sk85rhg487q75phw3dammng25a2hzg7exnzkyw69eh0rzo8szqxpj6vfgua1hkzm9ms8nwxvsg0ogc1edk1y9r\", \"1yy4uu23noo7vaeav1bbfvwhs8107nx0y0nte6afv3w4db5jx3q45a4eanucfektqs8ujyvzlx4vdmwwaxyjuofksa67rdivc1wk5vk88v\", \"z7htzuodcfb072x3d80c9iwer3dt2twfih06icwa4w8fjf5ncbf6vp94svsm8ysix1l5r2jkun9j118594aufy7b4nkc7tngpybponldi1pzmz68l2hib9l317lyakjk6hk27opzs0clly1r\" ],\n  \"account_sid\" : \"ACBd4Fe5f1F7E71D0bDEfc5343c6B80aa3\",\n  \"chat_service_sid\" : \"ISB3dCaa491FBBD6cACB5e2EFAdAB1Fe59\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/590841\",\n  \"sid\" : \"RL5D0eEDeEb6e74EfE4EC6E3bAeD88Da7A\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18edc982-7227-4496-b510-827c6a64f5fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.820152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8645b076-d93d-4f52-809b-ab0e8107d9a9",
    "name" : "Retrieve a list of all user roles in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISAdb8282fb9EEC08Ca949167f45f4Ad32/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/838744\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/032627\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/279285\",\n    \"page\" : 3768666985730466368,\n    \"key\" : \"ynn1lqat19cbldj6jkpx6b819mjj6rxbs5dxecrq9s9rqqmedyin6ucz2nczpfwfzklxyps9jj3gheybjeyqetadya6pudp0kezk3\",\n    \"url\" : \"https://web.example.mocklab.io/543788\",\n    \"page_size\" : 2322834381081784884\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Regena Pouros\",\n    \"date_updated\" : \"2024-01-21T11:50:43.818Z\",\n    \"date_created\" : \"2023-08-22T09:47:31.818Z\",\n    \"permissions\" : [ \"5oi4buho4mpf8sqbbot5acgojbitkx7pkyn0n1ve3fclts5nzad6lvdbiu4f0okw88vv8q4r40zsojvjd9hqjrz6y3ps\", \"iwmzys0g7eagu50ouywjn3uwy54e81u363yf\", \"k9l6czy124jryva\", \"tmnrckzm4l7gf0gb0oc8bwpwquunvgjep7dmrctx8u74ur922e2hw153o69skeyzyvjzanb51rony0r3ettqbqu0xp3ywkj8bfsdyjpkgcwlnc5t4mt28uhjij49w3cwvud9a\", \"2b37nsu6fb7rw7jbxcw2jdfnip0\", \"huf5wy97i95qn2ibt0elp3xwb64hui1ed1lm4tqsy347fr8xu6xaakjazl1k8u6ybdsc202cl4x8djis4waba3f98kjkzimvt15xpxy65es\", \"bjkcgyz6pldp10po9b3rc941r12duorvgg7ke5i\", \"vrloixzu45sfdq1ulc9om0zeraciuedbe\" ],\n    \"account_sid\" : \"ACcE75bdE45d20d236b12dEbA95F63D20b\",\n    \"chat_service_sid\" : \"IS21fe4c3C29Bd88953C82fce18337D14F\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/853980\",\n    \"sid\" : \"RLfcB1BafDBabaf0DAb0049f2eF68141dE\"\n  }, {\n    \"friendly_name\" : \"Ms. Jessie Russel\",\n    \"date_updated\" : \"2022-10-03T19:38:29.818Z\",\n    \"date_created\" : \"2023-08-17T06:49:30.818Z\",\n    \"permissions\" : [ \"n5gn1jeg3k0cslz75xvl5sk1xde7677488wkhenq8m4k44u14tyspx7wq9oe0of00iifui6r8tkju8wwgq5cnc5rh337jof5pfj0vhdanbo5t4nu40c7k0m4y2okhqz107q7xzgd9d3331sfsrcgoumtfkmj2q2eeuch0lpuiwxodych5n0kq95sx\", \"qwgayaoc10dq3zf4k\", \"s1eens7i7hqhwah36flv2r1wwl07gxlewjt4ulnk3okkowc9s0ux727adp320hlxpgweem9my0rgcr7eqrsh6f6vf7kt3pkl46k66we30trj7rqp4wpxoyy7y80o67cxuvbniydhlfl32psftb4sgcnf2cwnvhlx90bwngsk9a0efkm4z79puww3j\", \"514jp0af1lo30ipomltfe3nffn9bztoahszb9w7tqq9gtegfdml9axdayra3vhna4da93vnqsfzskiatlsrf31jycxyvwjebqpsso59xjbmmzmgmrb7cgqyuc48wmev6dzbpyd\" ],\n    \"account_sid\" : \"AC09161f3fcE3Ba50c20D2BfCaa63d578E\",\n    \"chat_service_sid\" : \"IS1a5EeDC6ACC3eDbB8D0c961ED2161803\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/329489\",\n    \"sid\" : \"RLDEeF1F50Ee8a2D923E2DcA78D47DFc8B\"\n  }, {\n    \"friendly_name\" : \"Larry Douglas IV\",\n    \"date_updated\" : \"2022-11-03T05:55:07.818Z\",\n    \"date_created\" : \"2022-11-07T12:32:32.818Z\",\n    \"permissions\" : [ \"ijq2yfbu54f0z1o6u5aih7o9i4fywpc8a6su9u2taavt4bag9fnjrfirvkj8uio2lubhb94790va5rprc6x5b6v31nnxsafod3cwil7eftejg1d07pymlg92kp1xxzthbgv30e3l3yj609fe9tjgeyvmf4rrxr31bl3u\", \"facic5f7l8csta9b1y4kdj387n70g0b65u3moeibll6eom7gxpfzgj1mrv4t5nrl49vhvz1z3hajsu95wl5zo5c8flkwsq19sgkrxrv66\", \"6ia15xkxdnh4axwah2nuc5oklxztdltmebwmr8og2bel9jk383gg682raha7783b99u9rsi8yck2er3\", \"p0tdeyigpc7lvy7\", \"cjc7ik40kfd2btd3vdyzvlvibtyvacmwcwn7ipiaeivbmgjmcv0d4svbx44w6khxd253kf5v0smdc9yai63pn52gm55puz8kv27cb95yt\", \"dqnew06tjvfp\", \"a0f13blby4avtntypyy0wq8svw9e2gp6qpr4g5wk8dqqteiq4vvvorqnhqzt\", \"trea78rg4it5uos7qd48h39\" ],\n    \"account_sid\" : \"ACCefDdACD2b2Ca0CA93D8fca3cbCFECeB\",\n    \"chat_service_sid\" : \"ISDa5Ea8DF0Ff013625aC26048C1b1A2Fd\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/140463\",\n    \"sid\" : \"RL4FfA0F52B6a8dA5C67F9e8C4fEcDdC33\"\n  }, {\n    \"friendly_name\" : \"Augustine Spencer Jr.\",\n    \"date_updated\" : \"2022-06-19T22:02:55.819Z\",\n    \"date_created\" : \"2023-05-01T10:30:31.819Z\",\n    \"permissions\" : [ \"7e36jfrsdbly3pjme4o1vvi2h6y0h0hpoxujao4e8f9tvnxrpfx6lsxsyc94xpbsxlatxn680cclxw7pl5l2h3gyipkgdvhhx1bzc1iolelqzlfaewocwue2hh7ogckk9182viskvxfxsa58eixghpcy7cm7qyfcl\", \"rt4hwjsoelzgp6y8v7f018g63ppphplxhrqe2rjn0je7jjbs7ec4h8hlrm74hq5zkoqkpw27351ovzu41b1n3gnuiikw137natixwcgm\", \"nnmnxlw7gz5fhgcyhm66au2h560uxei9m21tljfv09xtkc1r6eqq7cw352kqkiozqpfbk5kwlnx00wtw1ojs9aik1r5t2neh7qsee23a88ig4kzf06hcxm3zhat\", \"uqvrodcomkv9yu9b5qdzjcxvptymw0sdv8hdvf1sn3sge9frftttcy94svxrftzlt0gsadtaty6cwqb3kvmxr6jpia7yi28qbdain46fgbwtx0jn0xm7ahrqsjvldixl9l8x0n76uj0bzfpj673kzqehq8v0oy\", \"g4kvok9y95ckg2zegtt94w7gxyb6tz0n12s7lr2q5mfr5nciajy04v7v7c1je0zx9dlva81xfcdv2g3b9ffhbrtn1e7fm6bq4gafkshbdj4w\", \"9x06mqorzzoqmtqa10humiqczyxu1qeto6qbpyu4o8yilg4ip1szbeduqhprrfl8bhc0lrlk6k22fdwmhzh28gl19ywg98z1jede7cpr2eqg2nlxms0bbxoc2be879go30nv1dw0brr6z7b46d1y\", \"nbzxxoubznj64yabgtkpyxhz8uy6zebygr7agvn2tuj6xxp2oiur455sdicdf075fmxhu9x3lztt6buf01plmhisrofxujw8159ja8awa4a7vw719enryx47yem2vgqi51z32rhh9\" ],\n    \"account_sid\" : \"ACD5DE7a8fc8c62ebacCAaadeAFE265d34\",\n    \"chat_service_sid\" : \"IS6181915aD66B3ab953cCdF3d81A0BC8f\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/091090\",\n    \"sid\" : \"RLf962CDBEfE2CFf8c8cFEd11C231cACC1\"\n  }, {\n    \"friendly_name\" : \"Yolande Braun Jr.\",\n    \"date_updated\" : \"2024-02-15T15:37:52.819Z\",\n    \"date_created\" : \"2024-02-04T17:45:31.819Z\",\n    \"permissions\" : [ \"om7kzlrjh6g1c3s21yvkzx8uc5ogdy38ja6nbf6q64gl5g4ha47ib7ko1d4w1hoj21gq0j9oowbh29qh4zb2o2co9q4pz1whh9r3ld9qrnld2y\", \"9jbuhxepnigqv8ozcf1uswlo9ew36mlfj4txunpdsycq3m6iqs3gqv31cjmia59ra7xu3sww2di10n47nyxoazjanllxta8sbcqsbwb8nf7e2gkswzzoss52vso86w9l\", \"ahzzm5kv65498kjfim9bsbjcp2n6j0e5ps0ibft8omelnb6hp95enok220jkffrl01b39wuwo6ghu7vnapwnbp315j0jp7g3ogs4eo8nst19f1de8k8cjv5evneko1x0z9v7utv65ylh17dhhv0j3xyslvlscf13ajhucxv1ji4hx\", \"skfm1tm46kryqsunkp42dhtv2vnpmsw32yj5iiaictoob3mgyp9l0mfcn4z2xhjm79vhjzv8m8b6t41700\", \"7zqqkfmr5aua34262950iwswzi8hr1m\", \"hs67ynnr7msn52f9szbe5m4otoed3ufayz4299k30v95ap8vdhcajw34ij\" ],\n    \"account_sid\" : \"AC4f85DacBBC43Ce55fE0029FBECe2bbf9\",\n    \"chat_service_sid\" : \"IS614d2e5ec36c3Da04BCE8B8f9610ea2a\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/498928\",\n    \"sid\" : \"RL05bAb1aFdebDccFbadC60f55bCcd2aFc\"\n  }, {\n    \"friendly_name\" : \"Wesley Conroy\",\n    \"date_updated\" : \"2023-11-11T02:29:17.819Z\",\n    \"date_created\" : \"2024-01-31T23:09:30.819Z\",\n    \"permissions\" : [ \"zoqichdeh2ehcskjidsujzigpigrtedla71k61mw7smo7oos1ipphba3y7gn2m7c67s8p6edwsvjwm56bzbo8uqn70bxavrec5qbvh72vnldt7g0lq7\", \"bphgfh7jzu8uu69mso78izwrzskrtd8l02xgsyfaujen433oy9ks28eu1jc6v9hlo824tdtwny6yss8u2w52hekldmclh3mixdo9qngxkqoi5574g9di9xdh0w83anc2\" ],\n    \"account_sid\" : \"ACa3c8Cc0369acC39eAbd554c9aAd0826b\",\n    \"chat_service_sid\" : \"IS71eBdAd082F384A7eB072E4ed8AFf0ba\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/871520\",\n    \"sid\" : \"RLE35Be1c251ABCB3388dB77e29beEe5Df\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8645b076-d93d-4f52-809b-ab0e8107d9a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.819809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_role"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceRoleResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0d18dbab-66c1-4f57-bdb5-f49fb2f10f3c",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/Services/ISd3465ACCeab1FC7B2aC627D337487949/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/454637\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/884530\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/610579\",\n    \"page\" : 8713248080781344208,\n    \"key\" : \"9xjpjrq7h6ivju7ykez8vyqtthku\",\n    \"url\" : \"https://web.example.mocklab.io/837270\",\n    \"page_size\" : 5219653800352046743\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"8qd143ey1t5w19gre4sehwip59v6lnxyj4ynerudb4hk88yde60blkwy2gwzpqj69fybx479\",\n    \"conversation_sid\" : \"CH0d4DBdB9c57DfceFE5D4EeeA1b0C3a73\",\n    \"conversation_friendly_name\" : \"Dr. Lyle Rodriguez\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"ydaazgc41c4uujpk522pr6zz6rnjtjna3epmj1eupainbouo3kg1w8vqckyycjm5rrsfupq4xnmdnctngwlwd1i7mewt3zqq8aohyp2uvwsmnimw5cdudm1e8jf074\",\n    \"conversation_date_created\" : \"2022-06-22T15:13:02.817Z\",\n    \"conversation_attributes\" : \"z8luleyzyzggd3k2uuz9moto2v7eauh6m0ph6zd1w30eb2gfsl1a4lekkxgrk9vys41lumsv6wwx0yeoqnkyqsc9fnthlix1cd9e8lj8zoeewehhlo5cik573h0n7qmimfg8a7upnlblxdszosru2d4r9it8nf9da9remg95nb5e5xp5j6v3vj85r79d\",\n    \"participant_sid\" : \"MBa70Af31Bad4201EF0e5aeDc0084Ffa53\",\n    \"chat_service_sid\" : \"IS22DA5B1FAaF9aeeB7618894dB52c8d71\",\n    \"conversation_date_updated\" : \"2022-09-04T00:57:50.817Z\",\n    \"conversation_unique_name\" : \"Alejandro McGlynn\",\n    \"participant_user_sid\" : \"US5E0EE463df771DEd9f0a7CEeD618bd6A\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACbf8d768c03b4cc26D4211B2a8bBf77D9\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d18dbab-66c1-4f57-bdb5-f49fb2f10f3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.818195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a87fa236-c02b-4ed4-aae3-4b956f2d71a7",
    "name" : "Update an existing conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS123591b2C4BA9112e21FECdE35D8BcaF/Conversations/19j3",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Evan Bosco\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-08-31T11:28:35.817Z\",\n  \"date_created\" : \"2023-05-10T06:01:48.817Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS1fd5c15527cf034FA3b4850E9663dbbD\",\n  \"url\" : \"https://web.example.mocklab.io/999170\",\n  \"sid\" : \"CH7Ec5cceeDA648e2Fcf7D42C29DAFAc89\",\n  \"unique_name\" : \"Barrett Gibson\",\n  \"messaging_service_sid\" : \"MG7EB59A506997DDB2D16dC55f364b9Cf2\",\n  \"account_sid\" : \"AC02572C81efEfd87db278fcef4FbF61be\",\n  \"attributes\" : \"z1km2jewcwxxagclbw2ml86bgtleo1c2yx5kko3eeyjxgeesdq916e4q10egefz2nx4ltfctqh3bm8n5faw80cbln5wgi23\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a87fa236-c02b-4ed4-aae3-4b956f2d71a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.8175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b6ece82-a6b9-4ef9-a578-d757b0a4cfaa",
    "name" : "Fetch a conversation from your service",
    "request" : {
      "urlPath" : "/v1/Services/IS29A0cAa5CAe8EF8c0E859dE86AA2Dc9D/Conversations/6v1o",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Mrs. Jack Nader\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-11-20T10:00:39.816Z\",\n  \"date_created\" : \"2022-04-20T12:43:58.816Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS4b0C1B4DDF8ceE87bbd76ABE22D8F1Ff\",\n  \"url\" : \"https://web.example.mocklab.io/489433\",\n  \"sid\" : \"CH6AcbB94718ccc50a75CbB9e908b47525\",\n  \"unique_name\" : \"Terra Monahan\",\n  \"messaging_service_sid\" : \"MGacBE6B4Cb8ccAEb0e93f60eB34dfdbE6\",\n  \"account_sid\" : \"ACf8B54b4CAcBEE8fa2464A05d5cF7c7D8\",\n  \"attributes\" : \"m0hawmjoa3wcy1gsao8w52po66\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b6ece82-a6b9-4ef9-a578-d757b0a4cfaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.817082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "62a4a232-e025-41b0-abdb-568b6f14e03f",
    "name" : "Remove a conversation from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IScFDb9eDeE3d0f06Ccc35FCB81fDD284F/Conversations/7o2u",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "62a4a232-e025-41b0-abdb-568b6f14e03f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.816564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversation"
        }
      }
    }
  }, {
    "id" : "677bd0f9-97ae-4c7d-a203-3fec5fb43244",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/IS1FeDc294203656BDFbDDA4Fe4c9Da1Eb/Conversations/prb5/Webhooks/WH25E21Afe4e7F813bE1B6F8f8baBDDDb8",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH9ef2F6Db97c0cdAF4Ee4Af78bcBEfb37\",\n  \"date_updated\" : \"2022-06-01T10:18:25.816Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-08-05T17:17:28.816Z\",\n  \"account_sid\" : \"AC77b3E3Ef3bbF1CAa91b9e7b1b34da6d6\",\n  \"chat_service_sid\" : \"ISCFc105f3784d5C9DDDdcd57Bff294aEB\",\n  \"url\" : \"https://web.example.mocklab.io/127583\",\n  \"sid\" : \"WH2cc7b8eb540495dFB34dAC96997E6Eb9\",\n  \"target\" : \"0otfvgtzzbd6trhaddd0xywtvupt1xjdi7m9g278ljl53ijcirwmw5x7vet0vmecud48e8s8jw7en9haqmtfiffws1dvl9zcov5opywlr1m9nmatf3sbiu9h9isb281lw1r58ge7z022ysnof3635hc67uijej1yq2pgrvirlfn55sbdz3dlulfm31j26on\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "677bd0f9-97ae-4c7d-a203-3fec5fb43244",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.816464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a0d380d6-5f4b-456c-82f6-17ead26efe1b",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/ISA25fe0037CCdEb1905fEaD095b5EC32A/Conversations/1vob/Webhooks/WHeBB1Cc25Ff1e5C0EfE82c105FAf1dC1E",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHbcC60BbB2fAc27F98ABa9EE57A21AADa\",\n  \"date_updated\" : \"2023-04-11T06:23:04.815Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-11-11T15:13:10.815Z\",\n  \"account_sid\" : \"ACd0627b1e31b5A1EB96ad9f4bA75effB2\",\n  \"chat_service_sid\" : \"IS7516729f3a1bcA4f89Bf3B273b1fae6A\",\n  \"url\" : \"https://web.example.mocklab.io/110502\",\n  \"sid\" : \"WHb1BDeEbF8B6f7CaB6017DC54A1CffE00\",\n  \"target\" : \"g7wkqd5wa8dpsichyiglo4s7ircbvvxqugwzd5cg0h1ldfxsy9zk0zrj8jx8spozp53c6lc2kg5cmitnwtjvh9xwqi812y0c764mzh56lg1tyaiw5sr9zyjtv01rubpf34lyf7cpbmk5n5uko6kfhlruwajm005iy6g355zln5afjlk4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0d380d6-5f4b-456c-82f6-17ead26efe1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.816171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0fd12479-9caa-4ce6-97f7-bd46e74075e2",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISf53861F6FDbba0D79BFC0e261AcAe6dF/Conversations/t97c/Webhooks/WHB8DE86655ee307187f119EFdFc7D1BB1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0fd12479-9caa-4ce6-97f7-bd46e74075e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.815882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationScopedWebhook"
        }
      }
    }
  }, {
    "id" : "f553f133-87af-40a2-8a3a-9c4064000b0f",
    "name" : "Create a new webhook scoped to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISff906f67eC033c3ADC1C0F3b469110B9/Conversations/bcig/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH0dc3C5b6e8Ed2aD3F3efdACB77b1AF4a\",\n  \"date_updated\" : \"2023-03-20T05:56:05.815Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-04-11T03:03:40.815Z\",\n  \"account_sid\" : \"ACfC09A90dd1B5332a9BBdC84958BFbaf1\",\n  \"chat_service_sid\" : \"IS0BeA8BbBFFceEAadF21B4Bd8D13dd491\",\n  \"url\" : \"https://web.example.mocklab.io/706234\",\n  \"sid\" : \"WHBdD8B3F0fb88bbaC6E1bc86C18D80591\",\n  \"target\" : \"naripunpshg1p6hut5z4k422t7csux0mgxdh3rq3ql2lxm59oihux7barcumupzxmy8zn93lwzyi9nrsb4a524oy2x1jq3mxj5o0aqt41o8go1hui4rewftuh3cflp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f553f133-87af-40a2-8a3a-9c4064000b0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.815753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7189f2f5-826d-489c-8582-f128035111a0",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISaeD9A3941765250c6bAEe209c4d845b5/Conversations/885g/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CHBDabf0c5FDbDfeFca4DAB86Ac2C8bEEa\",\n    \"date_updated\" : \"2022-07-10T04:41:11.814Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-04-29T03:39:27.814Z\",\n    \"account_sid\" : \"AC286A0Af73D62C5e8EbA7e4eFdEa10E2F\",\n    \"chat_service_sid\" : \"IS0bCbfBAbafC0B7cAc5287d90fD03F19E\",\n    \"url\" : \"https://web.example.mocklab.io/491118\",\n    \"sid\" : \"WHF1Cd2E7d03D5876CfeDc6c517A22C28f\",\n    \"target\" : \"602mz3wejj9ziwlach71euyx0by9scf7gffmeckq9sow0dtyv2pf2km4ihoc7onp\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/956112\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/657046\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/021466\",\n    \"page\" : 5030619667583454021,\n    \"key\" : \"hgul06v4gqds58q2b4twuuhz9el2e1pec0pmzal6xikljr3g6va2genlykbfbqt7cse2ozvrwmarnsohoggix\",\n    \"url\" : \"https://web.example.mocklab.io/738096\",\n    \"page_size\" : 8680484528263078999\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7189f2f5-826d-489c-8582-f128035111a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.815431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "260eb1ca-9bf8-4b98-b4cc-3a646c867f72",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS092A148b7C47aCcc6E7daBde6DFdeaBf/Conversations/6c74/Participants/sghw",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH8FBE01AAaEfA90C9dBAdBD95BA47BaD1\",\n  \"date_updated\" : \"2022-03-14T06:37:27.814Z\",\n  \"role_sid\" : \"RL660259E7C3A1e43FFAcC208DBdBBA58d\",\n  \"date_created\" : \"2022-06-09T07:44:17.814Z\",\n  \"chat_service_sid\" : \"ISBBaB4ebAdf62C48929f3B0221D021ACa\",\n  \"url\" : \"https://web.example.mocklab.io/164446\",\n  \"sid\" : \"MBe3Ae91B1154D11892b11a9Af90edDd8A\",\n  \"last_read_message_index\" : 4415419922797395739,\n  \"identity\" : \"qyfu53d47vzhndft0zuqcj58tghda6jlywtmonf57z698xfdio3e6y2vl8mw8ygrnsbx9alq0nq44qm63ibelvt71un5ot4mwpuvaxuqz8lrxg2eeim2xeqkk6o823hdfpiwa96yjx9umn3j43s42bbzv9lcrcatqw3nikig9n3hvjk\",\n  \"last_read_timestamp\" : \"2022-09-11T17:18:37.814475Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC79c7fFabE9f9D39cdA93428Df0fDeBAf\",\n  \"attributes\" : \"5qhmbbr08580t0hkiffnto1rz3bnupt5okddo7ipnmu12khsvzqqyvdun8qkp0cz53jl5pt38rkc4gt3k709si41rtq2v1ebr4uya5owcjz2nbeo03deo5pgfkq407nsesftq5je1xx231s1vnevatb7bvvnvbvd2x05qaaipf1o7nn4iv6o9mjlrss\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "260eb1ca-9bf8-4b98-b4cc-3a646c867f72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.814761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34dadaf1-a384-4c62-bbe5-b5d95fb2ee23",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS1aCD1EaD5dAbC6A61efc8A4f4fa122A0/Conversations/8xk5/Participants/513h",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH9DDf9F7a5Bf6BaDf9F3B8Fcb56C43983\",\n  \"date_updated\" : \"2022-12-28T15:47:38.813Z\",\n  \"role_sid\" : \"RLDABbf9c15a3e119833BDC75ede1FEce1\",\n  \"date_created\" : \"2022-09-02T06:15:12.813Z\",\n  \"chat_service_sid\" : \"IS4Df233Dd5F55708b8df953c8Ef667c3B\",\n  \"url\" : \"https://web.example.mocklab.io/435927\",\n  \"sid\" : \"MB3C14F6510f594BaD13fbdd0fA3203a87\",\n  \"last_read_message_index\" : 9105001338086892131,\n  \"identity\" : \"vd2wodppr67vgl0p3qp8dcybqvq275y22p45qk8gslyf71380kv877sbafo7gah4pua4sbq64jshptjzjld7ckv0afz04m9yaolwtaakh\",\n  \"last_read_timestamp\" : \"2022-03-14T15:52:37.813898Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC5a6A2EC3faEAE4E81240d7Aa5E059F0E\",\n  \"attributes\" : \"3qs6rdrxrd7ka5z3bgc2eun4qde83vfql7wn13r41gh0r5qv33ye2mbtjawvplt07kczhhs7u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34dadaf1-a384-4c62-bbe5-b5d95fb2ee23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.81425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84dccad0-dcbc-46ee-8cd1-e80127bdf129",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS9C6B81aBeee54CB2c0ae702FC1b0F502/Conversations/9432/Participants/ac22",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "84dccad0-dcbc-46ee-8cd1-e80127bdf129",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.813746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationParticipant"
        }
      }
    }
  }, {
    "id" : "1375cb07-399f-4947-a468-d65373c61c59",
    "name" : "Add a new participant to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/IS0AB3BeeFaee10A2BeAaE3D9cBFB0D05b/Conversations/qlgx/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH2F5ec0e75bbD09A9D8C0ae09Bf99e9fC\",\n  \"date_updated\" : \"2022-03-08T22:14:12.813Z\",\n  \"role_sid\" : \"RL0Dd358797eaAbA7625DfDDca3a04Cc4E\",\n  \"date_created\" : \"2023-09-21T04:18:05.813Z\",\n  \"chat_service_sid\" : \"ISFCDe91Dc9b895edDcDfDB3cDBBbD70A6\",\n  \"url\" : \"https://web.example.mocklab.io/864216\",\n  \"sid\" : \"MB97b76ad32DbDAE3bb8A51f4F5316ebCc\",\n  \"last_read_message_index\" : 3276270954820774424,\n  \"identity\" : \"bovrai4n3dkssgwuvu9xb9hru6fgzjb4xbhstdn1cyim8ktkgimdhmbzon1fyofve4d0t4k8uj7vyrxpkiqylid2wh6504kutgi7qd0xm0rpib14m7yokx6lt9tozdber7esg49f7ox7fqbya8pytnc7cbstxiay20et7fsmaw\",\n  \"last_read_timestamp\" : \"2022-03-21T17:14:37.813294Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC82249fcE2a27ac3C3dc5e0eA5e6eb547\",\n  \"attributes\" : \"hf4clildiqksbs4ptzuc6flqeo4tz442w5csawzryuaed1dz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1375cb07-399f-4947-a468-d65373c61c59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.813547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b8678437-247d-4764-99cd-fa2e7608fd4a",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS03e4bdB6B9b1AA5bd6a1eFA1F1eB169d/Conversations/ti4i/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/075266\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/207225\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/301147\",\n    \"page\" : 4698665576099701192,\n    \"key\" : \"056ydf6o3ewyhpbf2rygtrxw9kwfg8ac4joy1fmmialfuo8jrghqpiwmt7xq6pzzekhovm1tw01sqrhhofwxu6jabwgxa25x7mb08b2key7o71hopjr0kmexmtr3k5kfejjq4jdk4a8vfapuzedb\",\n    \"url\" : \"https://web.example.mocklab.io/148493\",\n    \"page_size\" : 2007629255722723617\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CHd7E629B7433654AEDc3B7edAbA64acCb\",\n    \"date_updated\" : \"2023-08-15T08:06:55.812Z\",\n    \"role_sid\" : \"RL591E4B642cc437B8479BceC42C19a5Dc\",\n    \"date_created\" : \"2023-04-18T08:16:21.812Z\",\n    \"chat_service_sid\" : \"IS4AAd33f3Cb66661ABD9eb77b78fcDC76\",\n    \"url\" : \"https://web.example.mocklab.io/736752\",\n    \"sid\" : \"MB80cD070dc0FFB80c28DfA0e1c1Cc71DA\",\n    \"last_read_message_index\" : 1918230153475631191,\n    \"identity\" : \"n07t84pmhavxq4fk1am82wz24tsrzor4q2e34knub2i2jtcrp6yv3p0wl94oi1g01wr9f2kvas0jhzalnkx4ij36jaqjghvh3suafdtzp8i1kdsuuamxbyi4hyd0dacvg5xhyugg2qg34oqlrmc4qbnlknzb1zwhlergmvbuamy5haovla2cn5p2nrq\",\n    \"last_read_timestamp\" : \"2022-12-07T15:57:37.812911Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC7aCA2cB3Dc8a65352AB7BC83Ee9Df5Bb\",\n    \"attributes\" : \"plkcv6szg5u29px8ehp16a\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8678437-247d-4764-99cd-fa2e7608fd4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.813142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d79e65cb-a3d3-4685-a3cd-976e1a0000f5",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISFae79FBCE06fF3834c25fB48Fc54e93E/Conversations/oe21/Messages/IM63852800290A4388ba79Fe5Cddc6Da1D",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHB5C27dfAB9ABb4F8D7ACD0B9ef7f24e7\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-04-02T09:52:26.811Z\",\n  \"author\" : \"96t14sbq88osz86zyt5ija6tqbzcg5sfk5bo16k3mnwbw7yg7sgc838crm8a6wqmzf8e4zwpt7vwgkmgnyocdcn4vcvewcldlskoombrbkilnwf8yxgmeev4s93uo6rmvp2qvfd6wxor04vfcd51f3oshg50wcn97yap\",\n  \"date_created\" : \"2023-04-12T19:29:38.812Z\",\n  \"participant_sid\" : \"MB8F34D67cCF2bCE37EB233bF4aE1fBdBD\",\n  \"chat_service_sid\" : \"IS7bBE568e7faFA9241dc592BF334424Aa\",\n  \"index\" : 131352776148695968,\n  \"media\" : [ { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Iure exercitationem ut ut rerum cupiditate impedit ducimus. Tenetur doloribus dolorum ipsam veniam nobis dolorum totam. Dolorem et aut voluptatem et cum. Minima et omnis ea libero soluta. Impedit nam \",\n  \"url\" : \"https://web.example.mocklab.io/956162\",\n  \"sid\" : \"IM8EAfD6e500F7Ee719BbefcEde15fCFe6\",\n  \"account_sid\" : \"AC11B467C704B08Aba74D45Fb41cB0C8EF\",\n  \"attributes\" : \"yhu1eqekj9uwxy9t4aljr145f96net3bnulguego7a2hne0fvtyc5njhnkrgz5q3p6w93qog6sj4bl8yluhdz01yn9xigaiqlsc2y5h0clip3dr5rzz8ts24zz2rr45nqd9ls0b3kivkl4wy1ls3386pcwvhqlxztur9blflfn1t7iwuulr5pvq7lbg\",\n  \"links\" : { },\n  \"content_sid\" : \"HX4af6cFEef6cAa5cBa6C8B4cEFEbd8593\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d79e65cb-a3d3-4685-a3cd-976e1a0000f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.812415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e6b7a00d-c81e-45c1-b100-f8f0b5df2908",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISC9c78d652B55fF5730d4F6F08Ef0fa1a/Conversations/e4ct/Messages/IM473D1cB51D87DdfB19EdEB2700520DAd",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH7bc8BA3c22D083d8DC052C997Fc93A59\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-07-26T16:06:05.811Z\",\n  \"author\" : \"8i05vfxm0cltvto51db28ukjnzrwo0shfz0cgw5480up170yconaha1c6seid30w40pb69n0s4s7pnlg0g9199asfl4p9x17edm7k3ctyqvjuog6bm5oeygsos574q48j1rcak88v47\",\n  \"date_created\" : \"2022-08-29T20:02:08.811Z\",\n  \"participant_sid\" : \"MBCE6f76A01674eA8e1d4E1f2AC761BBb0\",\n  \"chat_service_sid\" : \"IS05C236BAd78BC6e515DB0f2aDcbbd1cB\",\n  \"index\" : 7277278398314787159,\n  \"media\" : [ { }, { }, { }, { } ],\n  \"body\" : \"Est et eos nulla ut. Earum molestiae libero quae quisquam quia nostrum debitis. Magni libero quia.\",\n  \"url\" : \"https://web.example.mocklab.io/183131\",\n  \"sid\" : \"IMCfa828afba7caDDa5cF564Fc85c1ca2d\",\n  \"account_sid\" : \"ACc146D8CDDa80A37508FECad947CE1c4e\",\n  \"attributes\" : \"zfmc324dvuv6uii333yu5ppqeucjz3lfqfex13rifcaph\",\n  \"links\" : { },\n  \"content_sid\" : \"HXedBc1ebBe63071C2CDe2FA4bfeDccf06\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6b7a00d-c81e-45c1-b100-f8f0b5df2908",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.811958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4dfc7f2f-09da-439b-8469-8f4daa5a3558",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISEBBc2d4339A241FFeb98ce5070ff2baD/Conversations/6kr8/Messages/IMF63C67e3BbaEDfdf63596AB0BEFa3769",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4dfc7f2f-09da-439b-8469-8f4daa5a3558",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.811448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationMessage"
        }
      }
    }
  }, {
    "id" : "8d35542c-aea2-43c0-94c2-68c25f6c47c1",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/ISAd1F94B6Df7bC4F23B0eF6956732A49E/Conversations/8g43/Messages/IMce24305af1fbF62E9D6f9d6EDf9c1DCF/Receipts/DY63ccc655e9A009ca1d5ac4a8Be0CbCBC",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHBefdB655D6CaeA87c23C0dA80308FA17\",\n  \"date_updated\" : \"2023-10-17T11:52:15.81Z\",\n  \"date_created\" : \"2024-01-18T13:53:56.81Z\",\n  \"participant_sid\" : \"MB0121add6aeDedd4C61AEbB0bFBac5b8F\",\n  \"account_sid\" : \"AC5176FDa0FDfC0A1493baBCDae2ee4e64\",\n  \"chat_service_sid\" : \"IS2B762CFc4ceA9EaF3Ff2857A5ceeb5E2\",\n  \"error_code\" : 8678508994652960412,\n  \"message_sid\" : \"IM8B25479e65E9dba4aC2FaDfbf91B974F\",\n  \"channel_message_sid\" : \"aS6a15E9d8cD7A5E9ffB2DF4EaCdE5a57d\",\n  \"url\" : \"https://web.example.mocklab.io/703234\",\n  \"sid\" : \"DYba9078C7C0c97F28044635ca6973DA5A\",\n  \"status\" : \"failed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d35542c-aea2-43c0-94c2-68c25f6c47c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.811327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/service_conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d088716c-2d15-4826-8d1f-e70f56c63af0",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/ISB7f707c525e2096875dfE0f8C90ccBbB/Conversations/2e9f/Messages/IMBc5Cf50bF89366Af3Af5bCb24B905100/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/797162\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/915281\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/306157\",\n    \"page\" : 4621060602911461621,\n    \"key\" : \"tpwzcwj0jmm1qgvli10440d5zwgq27qcg4fq00j55sbef9bk8k2km5gru70zyvhykrk4d6\",\n    \"url\" : \"https://web.example.mocklab.io/484437\",\n    \"page_size\" : 8287897639333456236\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CHe7B72EB4C75439e57C55AE36484AF7A1\",\n    \"date_updated\" : \"2023-04-22T08:20:57.81Z\",\n    \"date_created\" : \"2023-03-21T15:40:41.81Z\",\n    \"participant_sid\" : \"MB40Ed3ACCD4c432fe9C1Cb6cdEF546d44\",\n    \"account_sid\" : \"ACA3F61E50DeedB321eaFCcc17ADcEd5D7\",\n    \"chat_service_sid\" : \"ISD65572CA3EAfDB6dAe0bbCfeEA4Cb535\",\n    \"error_code\" : 2801599531005169995,\n    \"message_sid\" : \"IMa0CaAA3EE749bedD46A4cBefDb4c07cC\",\n    \"channel_message_sid\" : \"Xn813C8c4a26CfCC91AFa9F43D4dEBF273\",\n    \"url\" : \"https://web.example.mocklab.io/969819\",\n    \"sid\" : \"DY8A15e7eAf8992d84aF38Dc86E64a5Be2\",\n    \"status\" : \"delivered\"\n  }, {\n    \"conversation_sid\" : \"CH4F24E8BADEF8CFDc7FbD2D3BbdDE5FB9\",\n    \"date_updated\" : \"2023-10-30T05:51:38.81Z\",\n    \"date_created\" : \"2022-09-24T22:36:28.81Z\",\n    \"participant_sid\" : \"MBCa6baC3e63f6aBA33aDd9b010eAcEC5C\",\n    \"account_sid\" : \"AC1719AD0Ac287CaAaF2A03DbFC7Dc0Cd4\",\n    \"chat_service_sid\" : \"IS6DFA7C14Fc8Dd8ebf679AAdbb9741f0e\",\n    \"error_code\" : 5349251820393606111,\n    \"message_sid\" : \"IMC23B96Cbde5AA9B9F289a7B77D6067Fb\",\n    \"channel_message_sid\" : \"XjF376E8A27eE3ACC4be006068278ef6c5\",\n    \"url\" : \"https://web.example.mocklab.io/596164\",\n    \"sid\" : \"DY721C3F2c8ed7fC2d2A29F9b5D6A3f02b\",\n    \"status\" : \"sent\"\n  }, {\n    \"conversation_sid\" : \"CHA8a3Fef0acA0129CaDAbc297C7E37a4f\",\n    \"date_updated\" : \"2022-07-20T05:19:57.81Z\",\n    \"date_created\" : \"2024-01-21T04:13:18.81Z\",\n    \"participant_sid\" : \"MB9c6D34FBF2Bc2DBAfE0Dad70bdDee7B8\",\n    \"account_sid\" : \"ACAb2Fc35ADF1F5cdad589a7aeD048db85\",\n    \"chat_service_sid\" : \"IS66abb8FCa8ddd4e9db1c708D9aaF1642\",\n    \"error_code\" : 2007402798389765917,\n    \"message_sid\" : \"IMeDa5feE77a9a38F23643662F5b0Ac0CE\",\n    \"channel_message_sid\" : \"srD2cEae2756f1E9E1DB7b1BA0cB3AD4A9\",\n    \"url\" : \"https://web.example.mocklab.io/404400\",\n    \"sid\" : \"DYcf1CEB39e9BEcCb7dE1Adf1aB031D650\",\n    \"status\" : \"undelivered\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d088716c-2d15-4826-8d1f-e70f56c63af0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.810917Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "17a9544f-6466-4bb7-aed4-37967140b162",
    "name" : "Add a new message to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISdF4540d2Cac26AADB91E37a3DeFaB06E/Conversations/8ya2/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHa671a5Daaee19de7cc7CC40CFAF55c3c\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-11-19T10:13:13.809Z\",\n  \"author\" : \"x79kbifkr1y21q1feprccs3bpn4xbdyayssmy1zprrs3iqeq79932pzj7p862m5lbl5hgwtppiqqgm23quz3ln8129a3cmy8egic929j0s5pvr4thczhq2g6snaiw0zu9127i4uhuu0a28t1erkq0joiazw1ul1s9mhqu0pzqknn1lt6ummcntngwod6b8rum9b\",\n  \"date_created\" : \"2022-06-01T13:24:47.809Z\",\n  \"participant_sid\" : \"MB6ecCB8cBcc1cbaF9dddadCEE09553AB6\",\n  \"chat_service_sid\" : \"IS97dcb876bd452Cfd5e8ecba3BcCF8863\",\n  \"index\" : 4096658892933174107,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Neque similique commodi exercitationem in nemo. Voluptas est qui aliquam modi eius harum iure. Quisquam aliquid aspernatur magnam. Culpa assumenda sed odit voluptate. Nihil reprehenderit rerum facere \",\n  \"url\" : \"https://web.example.mocklab.io/415079\",\n  \"sid\" : \"IM4eEaBb2abFFe3C04f1b481d8F9D89a6A\",\n  \"account_sid\" : \"AC2744e09ecda66aA42dF80aB2dF35e00E\",\n  \"attributes\" : \"96zazfgm5lkh4z7ydxbszltrs6v6bsd5\",\n  \"links\" : { },\n  \"content_sid\" : \"HXbEAeea613e13cC45eC3bca8d64fdaA5e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17a9544f-6466-4bb7-aed4-37967140b162",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.80991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6d7e6213-1388-448c-abda-7e802cf73281",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IScad6152F8Cf6c6B66cF942F2dd6C9Ab0/Conversations/ml4x/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/331363\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/586870\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/516554\",\n    \"page\" : 3016777768877584397,\n    \"key\" : \"drasloth4t7p4ps7wzox83jpvb3ok2pe89fppa7oni1ocygaknui4b3hg0zizkfs1zk4pi2l2k135q1vcwzhd3pk23vftjtnmg5c0rhc92myltcwu5q2rbiwvhyi\",\n    \"url\" : \"https://web.example.mocklab.io/413915\",\n    \"page_size\" : 7518277620560697712\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CHd0bA35440dAB693850D5243EC8Bc623f\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-12-02T01:42:53.808Z\",\n    \"author\" : \"y0n62z7ka7o3ag02b0qtblp6dwfc8kg5beqfgzdmxv8ww966jrke\",\n    \"date_created\" : \"2023-02-25T03:36:26.809Z\",\n    \"participant_sid\" : \"MBB46aaEB6d25D5c1CcAccaE3014deAEBc\",\n    \"chat_service_sid\" : \"ISC96cE5BBe1a9188CEfCd36fDe2BaeaAa\",\n    \"index\" : 5114070041303483494,\n    \"media\" : [ { }, { } ],\n    \"body\" : \"Minima consequatur doloremque dolores. Harum voluptatem itaque sed. Perspiciatis illo possimus numquam. Ut amet nemo molestias possimus.\",\n    \"url\" : \"https://web.example.mocklab.io/254587\",\n    \"sid\" : \"IMa3b4D431d6F93f7a299fbFeF0ad6d09d\",\n    \"account_sid\" : \"ACfdCACF4FA08f26922fd5F7b4FA29e1F9\",\n    \"attributes\" : \"yrxy4iocz4cjtlqhyuj67rqkmj0ligri0o14omledfk5c1qcoe8yst5f23tkvxe3o2vbbw4p4eflrh5or58eekljrajj6kic6jrxdcttpehgeojua2sm\",\n    \"links\" : { },\n    \"content_sid\" : \"HXAdbE10b140Cfa34a8bdD933430ce1b85\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d7e6213-1388-448c-abda-7e802cf73281",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.80942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dea42735-8754-456a-9ab8-2c77698098de",
    "name" : "Create a new conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS6dc035A650BEdF41aF66Afe1c18CFaCc/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mr. Roger Cartwright\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-04-19T05:30:51.808Z\",\n  \"date_created\" : \"2023-08-10T11:33:28.808Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISdA40FE7826a3c9dBd9E13c65d2AAf9e2\",\n  \"url\" : \"https://web.example.mocklab.io/849366\",\n  \"sid\" : \"CHf938CCAC3DdB46d09ce1c28bdCbdbD3c\",\n  \"unique_name\" : \"Ms. Robert Conroy\",\n  \"messaging_service_sid\" : \"MGf0F6d0DA0015a1DedB79dc8f5E4cd7ed\",\n  \"account_sid\" : \"ACe25C4BAa4D58a7a92bFaE7a4FB40233c\",\n  \"attributes\" : \"1p9p3fqiduhj5stggvr2rq5pp8pohf2p0euwx8jj2c744403bq68o32hvsrlc0rrn8v2tasu6vf9lnkibrsmsjwtjgy6tynjxey1fxdovsyhpklw0\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dea42735-8754-456a-9ab8-2c77698098de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.808645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b499fe71-f9fc-4f1f-9509-6111f444e924",
    "name" : "Retrieve a list of conversations in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISE7b47DfDFC4fa4BEF28bEFA3a6dab776/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/864598\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/724113\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/505563\",\n    \"page\" : 4957690713913374642,\n    \"key\" : \"0apls5rvnx45l616092i1925p56ufbggkno8abwsvj3o6g8gsy5qhs\",\n    \"url\" : \"https://web.example.mocklab.io/908340\",\n    \"page_size\" : 2439023979882086124\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Mrs. Tyrell Herzog\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-08-29T21:26:52.807Z\",\n    \"date_created\" : \"2022-05-29T13:15:33.807Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS35022FBd0dF9B1ABa8daAaba2Bacc7dc\",\n    \"url\" : \"https://web.example.mocklab.io/564532\",\n    \"sid\" : \"CHc23Edd62D0Aa6EcDFC35aADA5A9e2aA0\",\n    \"unique_name\" : \"Mrs. Kira Boyle\",\n    \"messaging_service_sid\" : \"MGAea46bC1ECC08EECca272CA221fCF33A\",\n    \"account_sid\" : \"AC862FCD5489c708Ee874CfAc29Efe4df7\",\n    \"attributes\" : \"wenvnrl6ilew5qoqwjw6ipbk0hikegh1oo82j71mm285st65wla21r181te1wj1\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  }, {\n    \"friendly_name\" : \"Bianca Pagac I\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-11-03T21:40:48.807Z\",\n    \"date_created\" : \"2023-02-11T18:08:43.807Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISc9c5A0Ea3cbDeAE7Cf41bDCc3EC94c5c\",\n    \"url\" : \"https://web.example.mocklab.io/588057\",\n    \"sid\" : \"CHD3CCfcFBDB9E8e99acEDe03807eBbEE8\",\n    \"unique_name\" : \"Brock Reichert III\",\n    \"messaging_service_sid\" : \"MG8eA3C8d391C2bfa8f1ADa8eede23ECcD\",\n    \"account_sid\" : \"AC7dD6E2deAeB36dfBDC4C81b4AF71b7D1\",\n    \"attributes\" : \"hw5jc9oamh625lxzzrb9sa21m9jgl5jhatsi6lqrwv5znv43r44prcbq4u9kozp8lwl4rq3dp0wnx2262a7p2humisd29h9j6l5oes00lkrryjai10uiyd6wsf09rzkdd1le3r43gflymapckua7d37m0botj4q81rvbiqkwxpsxqyms7ps11smzg\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  }, {\n    \"friendly_name\" : \"Madelene Stamm\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-12-14T09:15:00.807Z\",\n    \"date_created\" : \"2024-02-28T17:57:03.807Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISBd396a757fEA143297BecEfBD91eA1eB\",\n    \"url\" : \"https://web.example.mocklab.io/358794\",\n    \"sid\" : \"CH33a3EC6C0AFDE4D5335BD870f4Eac59F\",\n    \"unique_name\" : \"Roger Quigley\",\n    \"messaging_service_sid\" : \"MGbAedBd7A81c7921F479Fb9996FDeb80f\",\n    \"account_sid\" : \"ACf4f75BfBEadFD057A0C9cf33E142FFBf\",\n    \"attributes\" : \"92nmf9hlemufdfahmha1ls45p04ylgjc5l297xq7eryw58bltszz8ndbsei8z5paqkiu63ol1nojrzi2rsncjtyifelprw3rii3jv30je4o4\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  }, {\n    \"friendly_name\" : \"Miss Marlin Lubowitz\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-03-31T16:24:27.807Z\",\n    \"date_created\" : \"2022-06-01T10:43:40.807Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS5ED7170f6Bd49B3E55C7C16D9AAcF98b\",\n    \"url\" : \"https://web.example.mocklab.io/508614\",\n    \"sid\" : \"CH9ecAeEECb7fCefb3E428d5dcD79Ed7EB\",\n    \"unique_name\" : \"Johnson Johns\",\n    \"messaging_service_sid\" : \"MGCaBE6AD7625Ed3e4Ff00CC8Ce6CC83b6\",\n    \"account_sid\" : \"AC14A969c3F3439AA5c9D5D6dbF2Dd838D\",\n    \"attributes\" : \"zetwwy60ksxyb3ood3cvn3maz2\",\n    \"links\" : { },\n    \"state\" : \"closed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b499fe71-f9fc-4f1f-9509-6111f444e924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.808248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0081096a-2144-41e0-9a79-72fc52e77623",
    "name" : "Update a specific Webhook.",
    "request" : {
      "urlPath" : "/v1/Services/IS29D96BbFf9BF9c8CFb6E5caf163eEce1/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"AC8a3DBF95ACBEADbc10De0eBb5ABEB233\",\n  \"chat_service_sid\" : \"IS7Fdf51E5AC0535Aba3Abdf7EDf8c6181\",\n  \"filters\" : [ \"d2nh1nxauz21ti8cj4gu174v8670thte8yutt8t4offg2gyb6qz3yamw630nm352ow69ryqm0y0khv8h3c4rdfrnsu464kov8zht5kw2l0zuv7k3b26xzny1lhu3eh62to0io7hcfdzwi1q4t4u1c1j5yx4sbtw\", \"qdoxqqcecd8rt732sft04hjx19qw198zar67cyprd8g\", \"6gb1e0kj\", \"18t2yads3g4qc78dze6457vphvw73fzx8ns33wlf4e1xpyhn1kifzdvj7noow2vl6t2mvui7hjziecq15bcr1v0nkuo6mapu0exfw6u2rwyyqfyemu8y3vxqcm\", \"wtf7mgzqrxelecx4bfhf5z8r91prz4dfw9m1rv269fl385clz9qbow1ody2999v4etqqqwikvl1iis9u5sdnpetky9zdgcctwgxr9rbj1ijt8iwxbk69jer8x7ucfaxsk21gojk17wd\", \"9jjkmkv7j7xdsvszx1vfmtzkdzp9sjf4ie4h1azr24a1ssg5k9n9m4wwmf\", \"o4qa68uhouiii1pukmq4s9eqiwo8ah71zxvs5fqnmduczbz2ijv7gimwjao5pjmvc7g87umfjridcvagfowy8lfid16bl1b\", \"3hmqsrc8mw1rndeys\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/768847\",\n  \"url\" : \"https://web.example.mocklab.io/039499\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/559225\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0081096a-2144-41e0-9a79-72fc52e77623",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.80665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "786674da-d2b4-488b-bde3-ad0b0da8d904",
    "name" : "Fetch a specific service webhook configuration.",
    "request" : {
      "urlPath" : "/v1/Services/ISAAc98bfb5Cfedd0FDe818f6f534e2AAA/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"ACFD187abFED42B8Ecab1252FC77CE3fEa\",\n  \"chat_service_sid\" : \"IS79f0E0a6fbbabc28b1ac1cEdCEF7d837\",\n  \"filters\" : [ \"laqa7p64ivw0gvas7n9zhxbovr72vh06w1vfnjfxz37gq5ro2v53fdnrfu57l8cywnqbr7vjprh0j5vezg40o1j64fcb5a2ifk7q5zs3wix3h77a2an6j\", \"6rvzkd7akh11io1kb8ytxs8oacrkqvzd2cya2txz6vorda1fju4ihosa7iiqmi7e72ggx54szbdheifcapaycqb3d4iqpdcr68oiw7b5uwx9s97eusgj4cciberefcrfrrdz76relnwp8x09twiejd\", \"pfth03eb2q01s6c7nbffrlj0mb29qphzh257izqnx507r1b8vzwly15i\", \"w2ehc48tcvas7rcvas2opbxtty5sb9tr7c51h9785upexk3odfv5ippnhns484n4vptctmmn0ludvp7o3zmr1izbcq02vplmjehm0zk05y9ntknq3lti6tzcrc7mxyp34ifja09lzu16b0kv68ui75fyilanhavaiqxj716er48315olr16u9\", \"px5gaw44tkcnjf9roqb6n123ayb8nwazuwa7cmlxled0yj0a9mfev0pexh5bfwao258o03785ru5lyq7hpmakklmsiyapfnziols6nsi600ondccaq2m1s4m4wu6g0ibt2i062zd4lrqv09kdntdpuoj839n4zasxv7jxstguwfun8\", \"wumx4zt3h13t5venkx9xvm8ghfiimgvh1oibo7t5zsvg2hgk0l3j08wazuad4hw1od0s3gyzgvvjesufzciet\", \"geaao1bscth7t3tf4luimiv88nmspdtx2phcrucjs9ov73b25u6n0lir7w5y2h6zey1itz23frm4krz0i7cijmwizd9foz2u84fjpop2l\", \"iwgtb0hn23f6al0jp9v24qphkpcgkh8fjjerharji47lfkdoakgdoq37ae1pqf6ugb7gpfuqngfs\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/835731\",\n  \"url\" : \"https://web.example.mocklab.io/529389\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/690419\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "786674da-d2b4-488b-bde3-ad0b0da8d904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.806264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ffd61ddf-7f5d-441a-b894-67ab80ccce3d",
    "name" : "Update push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/IS791dacE5a2cBCD3125e8B2585685F33B/Configuration/Notifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"ACcF3c367Bd4Ca2e396e6fa42B53Fb89E9\",\n  \"chat_service_sid\" : \"ISbCC0Aa5919d53A9beE2482e6f440a40D\",\n  \"log_enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/295978\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffd61ddf-7f5d-441a-b894-67ab80ccce3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.805865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ae80ed6-98db-444d-85cd-bb6fe02bef08",
    "name" : "Fetch push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/IS54dcef67FDcB3C7ce232E528eFBf1e3e/Configuration/Notifications",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"AC6d83dDD6F0EBF9E02fe45985FFfB3de9\",\n  \"chat_service_sid\" : \"ISCAb0Ad1aaaDdfC0f08Ea52f9B92aAD92\",\n  \"log_enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/000982\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ae80ed6-98db-444d-85cd-bb6fe02bef08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.80569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d4592216-f5b3-4ea8-b7c5-0e120b342948",
    "name" : "Update configuration settings of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISAbd5Bd78F7CbBa5ff6b2790e22A72ECe/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : false,\n  \"default_conversation_creator_role_sid\" : \"RLdE0E68fE2a351A50B7B5fDBE948c81fe\",\n  \"default_chat_service_role_sid\" : \"RLda4a9e11b484F700fA4ef26e44662DD6\",\n  \"chat_service_sid\" : \"ISeaD175Db2E15be8fDC51f3e2BF36Fcbd\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/206309\",\n  \"default_conversation_role_sid\" : \"RL5E1C3Befd8a9c6E6E63bbFa59c5f1Ed0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4592216-f5b3-4ea8-b7c5-0e120b342948",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.805474Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8dae7c41-b437-4c7f-b4b6-01772659b396",
    "name" : "Fetch the configuration of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS7eF1df26DFB8Bd9E23e87aF871CC26BB/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : true,\n  \"default_conversation_creator_role_sid\" : \"RL6b4Ad488e9c0d2faaB8Cd1D546829eBc\",\n  \"default_chat_service_role_sid\" : \"RL57E5cf4aA6f847423b7C9D6BBc98E33f\",\n  \"chat_service_sid\" : \"ISCbBAEC66CAeeEfE0CF1B86C48fC1eEFD\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/146221\",\n  \"default_conversation_role_sid\" : \"RL0E8e28481eB2CEd95Be2a5f575CDA61b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dae7c41-b437-4c7f-b4b6-01772659b396",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.805283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "126ea186-3e53-469f-a0a3-be6cab4b7f58",
    "name" : "Fetch a push notification binding from the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS1fb0D7Cd51FcDd761dad994FCB1DBC4d/Bindings/BSCC0f3363896FbB7AaF901Aaab6DEFFe1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credential_sid\" : \"CR9276bDcF9c336135CF4EB9ee8fc7B536\",\n  \"binding_type\" : \"apn\",\n  \"endpoint\" : \"ib0vip9mz1fafh1b5xmy3z6dtceht\",\n  \"date_updated\" : \"2023-01-25T13:11:29.804Z\",\n  \"date_created\" : \"2023-07-05T01:04:33.804Z\",\n  \"identity\" : \"cynv8325nmzla2by6a82j56qvc2fs7cdlknro1ej6xbicvv1dypxlxoxcvjmync3vbl7yn7wviqpe07\",\n  \"account_sid\" : \"AC5fad7bB4d3c66A1Fd1BA7eCc4Fa5fB88\",\n  \"chat_service_sid\" : \"ISfE184caD7824B8Ee26A97812613B4eDC\",\n  \"url\" : \"https://web.example.mocklab.io/464687\",\n  \"message_types\" : [ \"gemdzildmobcmrxxudiw7e4dv63i4ek72rcaamf27ncpgxzju46nw2xh98haf8wvuxjd33oqb1vtc15okddj9lrapambpbauhrzeddt4rkt4qfc1e2j65n3neb0xxqiyka011s1pch0bnn7hxpk6x5l0utjhl5yf5iz2qxi1cne0r2gk1uhy8y9fzmttxs\", \"a99qw50xoiqfy5rkmltfyoqu3ran88kjqpe1nyexn00fyiykpijvpxb9izhr4fq58z28xgesnwtpqk5s9qhv81wtsdpr15ysyfc5zzlijs5wetfgpj0pi8eivc2vi4k23i9tlzr0vkhp7rl975vtd2h1hlhmk\", \"33xpraj43cmdyoo1p7q4gflo3xlfzswc71scsuty43gqi10cwsyrjvy5kuye0j315p7k9f8fd6s9ar6nsw\", \"eb11byxhn24ydsu15vbouwyfxi3wu2rjtabl9herca0rw2oqql4t2946fq1v5t5u9w9sgwnsw55hlwqgw787ie463erhou1kkn8vx9al0g0\", \"y3h4la7vl6fj9k1wffuyw5xo6fpjlv8knxpaa7jf0u917z38rb3z3cuco8iiijry2puadd2yiymhvtsluogy7ayt3svofcfbzojqi5d2mukfehs21u753s6o6h37pxvqhahc9udlp64jpwx0fxtrauw4ew06dq3oo\", \"8pclyqz1xl6kbnfezpj4t6v3owpyjpiplucmbj7mg60cy\", \"ejb9tavzi130wy0mtk4aqdsrrstsawnk0a80qnj0xqkqdig05yj4732v8jw0qndcitpnfrco8\", \"13sy7lqad9mqqmqsw9073pkc1e77g0xgy5ga2f4qmp7hxuifa3tk3y0lyzj0r0i9fx69gtn2t1zh0e087z2etx00jm984dvyl000l61a50wuoalm371jk8wag3xrfxcr0y9wfqk3wntfc70920hi86vb5y45xrbmw3pfvt8w0iu\" ],\n  \"sid\" : \"BSdB0C7164fE9ced5A4121b7BD1ce96d62\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "126ea186-3e53-469f-a0a3-be6cab4b7f58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.805033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceBinding",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "binding_type" : {
                "$ref" : "#/components/schemas/service_binding_enum_binding_type"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "credential_sid" : {
                "description" : "The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "endpoint" : {
                "description" : "The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.",
                "nullable" : true,
                "type" : "string"
              },
              "message_types" : {
                "description" : "The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this binding.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cfb1a141-d935-4e29-9f4e-1a351b3a7649",
    "name" : "Remove a push notification binding from the conversation service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IScC9a7DF059e2319d11eeddBde14f2800/Bindings/BS3E23b25a66ebFB681A5CAA2422b8C35D",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cfb1a141-d935-4e29-9f4e-1a351b3a7649",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.804658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceBinding"
        }
      }
    }
  }, {
    "id" : "40f54003-8616-43ba-92f8-63d9b5d0b974",
    "name" : "Retrieve a list of all push notification bindings in the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISDed60f9B815cF3dBAA69ff6faB230cF4/Bindings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/559444\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/675197\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/980875\",\n    \"page\" : 6087331193449181908,\n    \"key\" : \"sa4354k2gqnig14onxxxseo67w6ekxc7m5wwgocibdmnojxwk9fruc8jgguom7ks3qp8e6m1b89v0ub0j81ax3v5fdgstny0l\",\n    \"url\" : \"https://web.example.mocklab.io/588558\",\n    \"page_size\" : 3112725393646658517\n  },\n  \"bindings\" : [ {\n    \"credential_sid\" : \"CRe8D970d72FA2F1B64F92DadA4eF71139\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"6h9l2ge2j0plw168xngvpzelt6117pzddmrm38d59e9awrwnpavww5xdnqkqsmwqjfsz59yzz6tkzu6amr4m6tlj\",\n    \"date_updated\" : \"2022-04-27T20:36:39.803Z\",\n    \"date_created\" : \"2023-08-28T08:17:11.803Z\",\n    \"identity\" : \"cl1klqpl8ho29ay6dvraqfdmjtmpnt2g0enuhxvvi2k3g5kygsffokd6xxh319k59hvb3uby5a38iqpliq8h2te2ubd8rsuyhit39w9zpbp55tqmzczwylnh7jxa0wdcqboy9ua93rpyy2xedb\",\n    \"account_sid\" : \"ACE1D38cdc23da61aA7EBFEad3317Aaddc\",\n    \"chat_service_sid\" : \"IS13F84b31DBcBbE6c584F57E66ec3B99F\",\n    \"url\" : \"https://web.example.mocklab.io/264489\",\n    \"message_types\" : [ \"g3fmxatilat9c57sx00kn9j8857va6fzimwmgkt9atnbxm3719czya107hgnwx235rng0xzcxmbwowek8q8588gjncyba3vhgpxviicbp2zcdnd5\", \"a2qewrjlvmjkaah2tlne5acru41b81r2369mxsztd82l9m0zxjo27yzjove41cw2z4ok90pdksqmps0lmpfuzochguuxhi18zvw7hdzau781lfj91vdqsx1qbauj33q7y8xdpmrripb\", \"ie9i5ncfzj94rj3g76ywdqf6u3wqscjujr8gx3pyi859o8dj\" ],\n    \"sid\" : \"BS1d8Cae17b93cf09d91C560F7d24F25D4\"\n  }, {\n    \"credential_sid\" : \"CR6122667a0ade4AABaa8cf27AfAf4366c\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"enkya7aes73gzheteb10yaz3ht3u87m1kqk1p4wsns6myzvx99xhnqgtfhsynskl5vgx5o8z506aqjbftytp0mguvuvmiliq86v9u5m7rzybdaxz1znr7uw3xn86a4h7umknd48hlkde21l2ebl5l1nf01r9xv0o2w5p4ih0r80rp\",\n    \"date_updated\" : \"2023-08-01T10:00:01.803Z\",\n    \"date_created\" : \"2022-04-08T12:11:46.803Z\",\n    \"identity\" : \"ck6j1otto6a2jj5m2c48n1p68s0bu3kxjapoja79ileslv6kc87stpizsmidjtmy98oxq1gxhnv8n1nr47nyg9wnc0obmoq2787u9a8mqyycg271ucyb3wza2\",\n    \"account_sid\" : \"ACD3bc5CdB1C0B2303defF56acd0Ea2412\",\n    \"chat_service_sid\" : \"ISba9dFDa19f9cF5530E7251702eEAE59F\",\n    \"url\" : \"https://web.example.mocklab.io/205649\",\n    \"message_types\" : [ \"9hbikdmbn6bbdwnrzdufshl2gk0ujtr595k3p444bz4vj22g4lt3tydyfr9tsng2gnmbvl4hf9q2ss2r\", \"5y0eqg91nkfq2v6a3acuqj9qygxgwx79a63yfjytrty7t6h0dk73te0gnocb0edapqbrbvkdqhj9bibuym42zw6j1efelcwax0ctlhzdodl2f97wbqhcl2noziex3uyw45158wzwsmatfb57jmoizck7m7hdm8h13urx6olvfq862jyrfr3\", \"barvgsn1do56suel7i70fnuvsb687fvitndovvhuv9olzwf0p62n3tktwowftog2jrzy5iptm2bgkl76wv7mgp6ir61q0rls8hhjtf7eyvvddjbfp0zd51howu9y\" ],\n    \"sid\" : \"BSB23FeAF2BDadCF38f3F2AAee9A9ce615\"\n  }, {\n    \"credential_sid\" : \"CRD2fe7ADd42BE1A352e2fEcb82dE93bD3\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"q1j0szz7adxy9ghan8ppfecnkp7thb9zbcpa4brvrwo7q1v8ft8xrbx7ll4zb8f40b76q5wo6xgk1ffli4ee\",\n    \"date_updated\" : \"2022-04-08T13:25:56.803Z\",\n    \"date_created\" : \"2023-03-22T06:39:18.803Z\",\n    \"identity\" : \"pt4vq1r6tv3ipytpxdy942jzqf788clf1k330voqip60ai9fonx7namufq1594byai2k4e24lml\",\n    \"account_sid\" : \"AC9EcAA19A47Ad67222C66c52594c55d2A\",\n    \"chat_service_sid\" : \"ISD6B079a2ea2dAbd38cDAd27Eb2ce97fe\",\n    \"url\" : \"https://web.example.mocklab.io/982982\",\n    \"message_types\" : [ \"wdxrp\", \"r6vjzgvsdw9iqpwgolvb44ph7hqh1fzgk4ddd51cibrgkkp6vnnyoext8s1awy3m933nt1j88om7htt2198s2bm3gwm2tyl0v0tthprmb3b4mler0x540kjt7vfxfrputlogron8zot37oy694vi7pt5tjvz88norfwmw\", \"t49dl3fkvciupdeapxxl5etcdej3fra3ntyl1b7j19lgl8qsu1lmwtups2fu16es3oczpd7vlxfpawcctwr26zmyyjvm6idhnh0z\", \"l5uh1nc82mbjg34ayro3n9elywuxqda97rdk32z0pdiszeoi4lgwwkck12aakuxrhnanhb0b0w12izgzbo3033vli2rq9bq3eqt4qohqvjm9imwbvvnqcsya1cyypo2t2rzhruccbkrbiyf4ofnvmcqxib2yrt6hxemebxu5ilrxz57t27s\", \"rjfdd4xuk9ir7znk00yzmb73g2n7b6hi59788mq75ayxumo78qbbjpte8qvow39uv4\", \"c15xy7k9o7zukmnlb7k3f75fwaigue55ne38l0ku78p8ppe9u7r82bxxtqkdjwrxmu1l94td38w52ccnav5elzy34sxz8hz34jmr0mp3n\", \"s6fv872ea0z761wzy1003ufl24tiwbqnmvdxnyzbnlv0919ihdgb1gdo7k6r9anhsqc1p4jx51qjlsqk0o3d9ilnkprg8qu4r7hm7kwxyk3odylqh4ymfdfxevtm68t8oabxlftjtaeviotdyz0vqdffrevsvf3xhzq87ctiebko0exc2ruq3th51yd2fwrn\", \"ma7xfd13ys7f2eabg0vzybpziecibh8j5llxmej20nnkje9k3s6dvjl61ixbeemiel5mt1zxhz2cggvzyx4zpaub\" ],\n    \"sid\" : \"BSB844aF1FD468a91d2D9a4fDd5770BfeE\"\n  }, {\n    \"credential_sid\" : \"CR7FADbD5F1DAFfc4EbD4dd740E94D9fE3\",\n    \"binding_type\" : \"gcm\",\n    \"endpoint\" : \"zlntuh4g97ln3\",\n    \"date_updated\" : \"2022-03-26T12:08:46.803Z\",\n    \"date_created\" : \"2023-03-25T05:45:07.803Z\",\n    \"identity\" : \"9zp5l2x449w0n0tdsee5xsad8gm83ixyhotntjkgelz1pej20kls8a8jymbp6ig6w8t8oju6mikkzl4qznvzcpbuzh3vnox433d2duafuyxrgfx6b2fp3t91jnqacn7fewded0oum9bwo19dd2s7bqwle9\",\n    \"account_sid\" : \"ACC6F94857B3150BBc4afbdb87DfAcAb61\",\n    \"chat_service_sid\" : \"ISdF1b71f26a712fbbEBdAEF6f35Ac95fc\",\n    \"url\" : \"https://web.example.mocklab.io/075505\",\n    \"message_types\" : [ \"u053uvj3huvr94jz766i08s5yv88os4jg2n36hbje7q2nsrrfzhv6rb7ykwi9c77iicava6skt4lehvs3et2ys0hrpijk61s7yowrvgjfungylvly46tkexakqieqq5tgfzuwrmzmgtroqb4i9oispwn7\", \"hur9vjm0050r2aqt47uwqigzy317dn5t569ob0k8i1fqeb9ukx0wr5ysomsijhxdle0f60nu8tganzucxtt76ezds5ro80sw5nk2me3zsn3wqb9ds3hg0bwnz6rmlq5kwjdmnn2f86zry\" ],\n    \"sid\" : \"BS99D90c551F761d660fFfa8cE62a31b7c\"\n  }, {\n    \"credential_sid\" : \"CRCd35CBCDdeF5Bde2b7EFc4C1ffBe9a10\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"yv6zz85g0uv5lo0mcezwzww5yugpw4uvq38rgvg6hx692ohoa3nm1e59buincgjsnedgot4p7veqnkocnx3qslu8cffw32h8pses4i7dc4hpk91xffdsltq157ektez0csa17yqxuehoyaqky2c83badi4swc\",\n    \"date_updated\" : \"2023-08-15T20:08:52.804Z\",\n    \"date_created\" : \"2023-04-04T11:29:45.804Z\",\n    \"identity\" : \"2rqjpdeyofgygm634562knbtzj2vluc17krw7fdud5dokwolct0gszpz7yyaggz4a4gp7i4cpmkwndozrq5q\",\n    \"account_sid\" : \"ACC98daB37Ce97CDcf6638EcEe6A3eEA2F\",\n    \"chat_service_sid\" : \"ISbC837c2D778abd44cFcc7Bf35fbB4FD8\",\n    \"url\" : \"https://web.example.mocklab.io/651178\",\n    \"message_types\" : [ \"es1lh86n2re7iqkysdgkvcuceyuzxrlxe8okcuhqv03j8erjcmd22ukxm43fqi5mnfwfrcyorw1709y5\", \"f33ngwhblo05hgtbbfigzhfwrg9jwv81twdrku73gg00ei050u5ltuayash3redz1etj5zjfzqtx\", \"x5kom4vwiwrdalas1u044sfhy7cj2o0oxewr5vfybqxr6v9zhy5b3ia5zf8fqvz3hi7c8860d8knj0enngfvcc7jrpytej52y6hiczaewjeqybf9ff6d0tme6xabp8e3ed3ztctdt2t46aos9vvw2i71ss41npusrso4ajo86hcwkv7vhd16vwtt11h89\", \"svmiudygls1bj44j4rvzy62fviknasvc82jx70rqt05sfybom7izvm0u2dj052opm1yu8dqcw0kxv8a65i9mktew7jq2a95ejkmy8tobbxuhnhrnhn\", \"edn7qqxhx9k2wbggmh8bsn6qhfdiy4cabpgiatm368nh1ch5mvaztqm0d7azdzk50elra1lenqjfenwsk9kypjcc0caae2wgodj\", \"rjsa1z3cjsq3cqrfqlvoutwo1zsldmtnb2l2sq49q9wh1gxujjrxxiu3s70it5tc5d4tx1eji9i2oa4elbe0h4t15x8u9rc5vqd98rsu6bu0jp8x40d20v32tm5rnwb2djzi01e5es1vww66lak\", \"quh3x99687qiadt67bfickddms25lnnl2o8r8al3fzjrvyxr73nkv3pixkqs48j1yu7dcb2dk02g7givlsy39q06g05oanzlwhb6964gmni8ud607xjv76aibvbaqk\" ],\n    \"sid\" : \"BS036Fa8DFd416Ac9DE0E1D38DE3deab6a\"\n  }, {\n    \"credential_sid\" : \"CR4fdF0afB8d7f0c7be3Fb65Ee5E462fdB\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"6dw8el2eygcj0o9npaeerbuup3cn4w9qzpdv1ppgwjr4azpdzbhv5xa146h9y0z3vraivewt9mn6w97e2hapc6hn82pwmg1lmxw1gw7vi5gpn9mid0\",\n    \"date_updated\" : \"2023-03-01T19:24:14.804Z\",\n    \"date_created\" : \"2024-02-21T02:07:59.804Z\",\n    \"identity\" : \"epw3w4b3yc96rs8pvztp8p3oycqimuya60e8ddtbiuhv2u79kh645rjh2ijvuht40rv0lwcqe1j673\",\n    \"account_sid\" : \"ACBbaEb11f0De18FFbF1aebffb4FAAc48d\",\n    \"chat_service_sid\" : \"ISBb13494F8f9E7AcD81fF1f29e2aDdf03\",\n    \"url\" : \"https://web.example.mocklab.io/184330\",\n    \"message_types\" : [ \"evt3mqggqr51sdvywg8s0sf6csgs9kom3qtzxltwirj0alg7at9vx0d7kqdv8q3tn55mxvooyxecji7htv8n13y398uoogjnfcg8rzp8fggbi\", \"lqo3ia6bkpzfzxd9\", \"uj2uzd07ddmir5wchd83bmowu0whn4yer56r95i1w93vs7is0wdcjmrscbvmgh21ierllgv465ajy0cxs1zdcjiunajrrnbds0i69kycwbsrcwxk1843fdqb83ki9el\", \"vkepbv2bwrhsymp6m3sv8ij31uknoa4t6lb28riyzsjggjkt1xulj6ot9xpznzr5ppior715i1o58xjvpwvcvj7brub7ezo00sn2wi9mtrz9bcsmjo\" ],\n    \"sid\" : \"BS43FaEfAb1a8B7E946bFfC58B84141c6D\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40f54003-8616-43ba-92f8-63d9b5d0b974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.804604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceBinding",
          "schema" : {
            "properties" : {
              "bindings" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_binding"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceBindingResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9c76c831-46d7-4c69-a842-f3304be79375",
    "name" : "Create a new conversation service on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Mr. Elfreda Abshire\",\n  \"date_updated\" : \"2022-12-29T00:52:17.802Z\",\n  \"date_created\" : \"2024-01-03T04:43:39.802Z\",\n  \"account_sid\" : \"AC8feFaF86Bd49BC26Ff6af3A3FBD9aC72\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/493855\",\n  \"sid\" : \"IS9D899ea5b0FBBDEA85Ebff1fEcAe0858\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c76c831-46d7-4c69-a842-f3304be79375",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.803078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "349e788e-05b9-4093-8f86-e815dc588a34",
    "name" : "Retrieve a list of all conversation services on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/818817\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/826813\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/850710\",\n    \"page\" : 588786848033399712,\n    \"key\" : \"1zar\",\n    \"url\" : \"https://web.example.mocklab.io/683914\",\n    \"page_size\" : 5064402497241938549\n  },\n  \"services\" : [ {\n    \"friendly_name\" : \"Mr. Troy Grant\",\n    \"date_updated\" : \"2023-06-09T18:01:56.802Z\",\n    \"date_created\" : \"2022-07-03T03:53:55.802Z\",\n    \"account_sid\" : \"ACcF6cedebAb49296c1e5b60beA61c9DaB\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/837787\",\n    \"sid\" : \"ISDdEbE7A4532d2bEAB9eDED13E2d600Bd\"\n  }, {\n    \"friendly_name\" : \"Eulah Yost\",\n    \"date_updated\" : \"2023-05-02T20:08:34.802Z\",\n    \"date_created\" : \"2022-05-06T20:44:59.802Z\",\n    \"account_sid\" : \"AC4EF8A2DDE345410c86cb5faA9d19d2FB\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/725852\",\n    \"sid\" : \"IS40a51e00eA0C2e7603726B4d02F1eC12\"\n  }, {\n    \"friendly_name\" : \"Mrs. Lavonna Smitham\",\n    \"date_updated\" : \"2022-12-29T05:00:00.802Z\",\n    \"date_created\" : \"2023-08-28T20:05:09.802Z\",\n    \"account_sid\" : \"ACfffB7DcA2fFd7FEe281c13fbF8FDdAb8\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/403273\",\n    \"sid\" : \"ISEDfc4B282fD6FAEd40ebf0dd27Ea854f\"\n  }, {\n    \"friendly_name\" : \"Nathan Kertzmann\",\n    \"date_updated\" : \"2023-03-21T16:36:45.802Z\",\n    \"date_created\" : \"2022-06-07T17:09:59.802Z\",\n    \"account_sid\" : \"AC7F337781aAd2ee4AdD620EDDE67F197e\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/103836\",\n    \"sid\" : \"IS7ABAB7b1C51ED9ADBaC82fB3A9458cdc\"\n  }, {\n    \"friendly_name\" : \"Shelia Hansen\",\n    \"date_updated\" : \"2022-08-31T01:08:59.802Z\",\n    \"date_created\" : \"2023-02-10T23:57:39.802Z\",\n    \"account_sid\" : \"AC90CcF04f74FAaE0f5071ae1BFB5A80E9\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/134313\",\n    \"sid\" : \"IS303ef025aBfbB1e2926f48DBA0148D30\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "349e788e-05b9-4093-8f86-e815dc588a34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.802835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListService",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "services" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7cc729d8-3036-4565-996d-ba079dfff9f1",
    "name" : "Update an existing user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RL2096a1cE9f4eE54Aa8BfF66d7F8EC7Ab",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Barbara Kihn\",\n  \"date_updated\" : \"2022-07-16T03:21:43.801Z\",\n  \"date_created\" : \"2023-01-08T00:38:51.801Z\",\n  \"permissions\" : [ \"iac\", \"jwkkwv5zbkde92n6ygt7fzsn4jlk4bxosfubkbqe6bx3n0tyi56z52410m0fqermisesqyvozo92iy7evxwl0ufgdhmmqsrpr171zggdguabggvu9sr3znwtzzieg43cmee8ad2qtyvmii0j368v\", \"xlu6e8wsas4hgs9jo5cvvy417noz7eq7jwwm7mwiax811gwoap46t8q5q3ajpjt768f384dl1qbiorkfoa0clo3kqr0yiwj5n49n4giszp27gn1b1j0j44i8am77uxpfiloaqsk4\", \"toz2eby0b1ag76w5uzbsrsgseznm9dzwysitc4zknap2hrt7ksv5avu8hayljjse9jhs89zwx09ggli9gjqiiz58zw9mzl3poyll42rasyopvkgn3zwwyiiawggtxas73se5jka81twmh0mewcdvkbh9tanqyqcfs6w7dd46\", \"03specvdi5hfr9jn4bkbljtyzddc74jzugu9o5j2dl98mleqqtm721peqnzwksv8szyijahiqrhcnacbyucj15yo26x\", \"x6x9cl4pg9nga8yuyda7kx940igvfqgyq0y7iqgrvoatvsvqq4u4fk04692t6fsnz15ws9fe7iwmtjz1hv0at6nzgooi90p089lgjcs78dknloy62wrdew\", \"c5a7slqdtyqqtu8yovdj77358llh08amws6k5ougr17hx2btflwlsydc88762kddjz1c3kgnle8hffslox445c4ghncm9g6a6pg300oarnih0fh598y5aoqa98wgxz7yv06ui1adyqcdv78m04h3e7wen19rqa2x0\", \"rn6xmh6kfhxzbqmynuiveg3nq9bl1qlmfkrtparhsoe28j0pl4pd32xnu3mh4rhz45vq9ad2v4mw7sz1hgn7jlyex08i38jjwxml182s3on83j6rmlp4t3onro5vq\" ],\n  \"account_sid\" : \"AC9a85A6AC2a5e7Ed7a111ff059aC7E43f\",\n  \"chat_service_sid\" : \"ISf49EE83Cf26b90f40d1c5EEB2545605F\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/328101\",\n  \"sid\" : \"RLdCa02E54a18cACdC7aB4b41f9fcAeF0C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cc729d8-3036-4565-996d-ba079dfff9f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.801723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "02652ce6-045f-4f55-b1a2-78ee7ce0ef02",
    "name" : "Fetch a user role from your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RLFC8f0c0feC1BD71E6cBC6BFDeFCF22B1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Addie Ruecker\",\n  \"date_updated\" : \"2023-03-02T18:11:01.801Z\",\n  \"date_created\" : \"2023-08-06T07:16:31.801Z\",\n  \"permissions\" : [ \"11rfqejbv9da1bmsq82eggfp7y4mo\", \"39hbc3epfj551tashbplk28l7hxpg90ieotrbjdi3z00zj2rs4exr7tfen7xw0qiy0k5ipay2cbi6kxmqkdabfyvtuwj47s5357yds9xa\", \"1vrb2d7687sfm15smzdmipwgy27tamdjpoy1ox08wr6effd3y2rls6mg3ylgf8qgljsn35hwu51eduqywijzdmfdvoiylxzm6sy1653r2z1jyb8lsxw74cunb22v6mfu3bwz3a18bn9ep1b3jco93hv1ad8cj6z0pbe\", \"il94iyaoxm356n5fwpnemlon65saf91gr77bgg8vbc683cnm0zsh8anj4iqbc81r0jn2yy2gxoxc12uhqo180pouoevaoe3m0za3ojenwqc\", \"wj268miudu5wlnzgww754dpeuj3x3v5qypvan06zhb4fhsgnhdep8g7vb82pw63bur9vuuc9dakw8ix6lpc5jv6w104p8xno0ovmdt4\" ],\n  \"account_sid\" : \"AC52C5eF4f7FD1cE5fBB048a2818CF88C2\",\n  \"chat_service_sid\" : \"IS1b4B3CbedAc59dB53516687DfeFe2DA9\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/724562\",\n  \"sid\" : \"RLDc4ACd1d1FfBE3EAFaEDAFE57cFD3BA0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02652ce6-045f-4f55-b1a2-78ee7ce0ef02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.801418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b8b238ae-b976-4f3a-8bb1-f70c9ee59ba7",
    "name" : "Remove a user role from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Roles/RL3cF59CdC0fF2Cde6eDfE4a3CaB4D61Be",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b8b238ae-b976-4f3a-8bb1-f70c9ee59ba7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.801131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRole"
        }
      }
    }
  }, {
    "id" : "c1749528-b25c-423d-8bed-e06722f88d7a",
    "name" : "Create a new user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Benedict Cronin\",\n  \"date_updated\" : \"2022-06-01T21:46:29.8Z\",\n  \"date_created\" : \"2023-01-06T12:32:55.8Z\",\n  \"permissions\" : [ \"oqvq9bxv263ufujvsmyzpvqu0qs8z2btec3bohxlfe4qha5ejscd0f667dcke8a9z0t3l2uxs1vey7516nelwamvrcoanexvmyv3wnpf0u9fb19j64qmwvdsgcwrxypyzxbv2wuv3l9tcdj3xie9d194isku0lquxdwuvh5\", \"m9tou83rji4dyd2dcrvds9bpz1hde0mpwfqvh26j2heye99c79jff6ox2hy3lm9ici7rlqh15f32h34ve27m16ybq10b84mgnldpe3wacveeuv416llkz9igl5hvo75\", \"w9ztb5n3aep7nok4rx91idbp0ounatd8lvwkca9x149u52vlpv5cmnrmdwod4mr7havrpycihbqw5vullb850aiolwquaxir1gzzy4luikumphauzh1odphjc2snbimtt7v2jyr1s94ef\", \"buc8tnj4pxtb6yald2oy6g8a6zduv3c49us9qi0wahrg9ow89iufw5ry7rq3eub3luxknpbetda2p6iit3bggnz25hzjsdsk62e\", \"r7j7inlg24allc2tm93huk936nv0dt096m5omgso\", \"tx7u7ufsseu0w3vnna4iy6it6kkt3jas6zme4zob74rw01jczpoguk5fxlztvo9q6ggz1e303yk1w6j40t5lgk9u6kr8dlm2lwg9p991afkodk25ildlgneyoxc3a2swneyrp5phts4tz5dq9derl1ov5m3edfxx8imagq981cm3h3831ef0ommhoi6tq\", \"hn1l12zpq4szb7mis88\", \"qi8keflibe8j\" ],\n  \"account_sid\" : \"ACDcdb0eDa8FEa37a60d81fae2DEDBca36\",\n  \"chat_service_sid\" : \"ISdefaD13B17D5ADADCaEB4eAd7dD1b7d4\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/767756\",\n  \"sid\" : \"RL4dAa1cFa6C42b0fbbA2F4F9ab5aB8DAc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1749528-b25c-423d-8bed-e06722f88d7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.801088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9604cb7f-fa8f-408b-8fdb-f3f13ffde71e",
    "name" : "Retrieve a list of all user roles in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/863150\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/849039\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/775688\",\n    \"page\" : 8310803069696628993,\n    \"key\" : \"l7gqj15mfu3ayzq6yrdq87ygc0ra56e2wp5k3yhr7j2knc2ko3a6mrth4d6g4wvgzk4mr\",\n    \"url\" : \"https://web.example.mocklab.io/919799\",\n    \"page_size\" : 1900300400089436164\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Cornelius Cummerata\",\n    \"date_updated\" : \"2022-05-04T20:44:49.8Z\",\n    \"date_created\" : \"2022-10-18T04:53:18.8Z\",\n    \"permissions\" : [ \"x7qnbhakovmyf5q2my450437mkiph1wyzcvc\", \"vuof7tqu17gmfqro17e41gwhzm16z5klse07tkr9zm4uqp9xddddo2tpx2aq0mvhkuojj2qayfr36365rt8lip2tmwrag3275ryz2yyji1rirphpejpjrg22i6w17bqr5kg0llc6r0emtrv9gj6whjqs57h3ag3wxpw586z8w4mf1sjtjmavycm02vy1wi4ogy4z3b\", \"k2evu3pjepcwh89ttptf6ews3ig6mtehu23a3qextn8pa1e0jsbyinloh1diffjs8ugmcv7b9p0t9tcs\", \"bd9lrzh2s8qyyuju8ad70ft9fxuyi3cyl2ut555sn56tfaslilk4eakjlh2vm4f64g68bpn0tpugixl0kb7h6cijoao9gyixwfat9j74xvv7lrtqs5pz0ulnyz9lu9jxeka1c6i2vw5dlkc5plgu78sp2odyy4pcmq17i4ugobveqrmco9wdtufz1hrd9x14zxg8bjh\", \"xjlos9mf6c8o6yhyiks7ml9hvsg4zygl35uh40n\" ],\n    \"account_sid\" : \"AC1ee8aA5DBCCF0DEC6D5Cc6156F52f17a\",\n    \"chat_service_sid\" : \"ISea14FB79E5C31bFE5eD25aEDf2905EAc\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/847761\",\n    \"sid\" : \"RLeE23c76Ce8C109ee9AFC1Ac9FB8CDDF5\"\n  }, {\n    \"friendly_name\" : \"Kaila Ebert\",\n    \"date_updated\" : \"2022-10-18T03:21:49.8Z\",\n    \"date_created\" : \"2024-02-24T18:09:31.8Z\",\n    \"permissions\" : [ \"cxt2cnyr9ph4sefzj3m2ea1uoza18ay\", \"pxzcrb2oie06suyauxbcjtik3f6bidg515f9eftkfv2iwtiy6shppdumeayhe1iimbf5nnf9ccdi89jspuftewgbhuf82u2yhkakf1dajsrxees8x5nq953m9zfo42xrmak01f\" ],\n    \"account_sid\" : \"ACf5cf74Ab753d5c285787de33f8E4C3cB\",\n    \"chat_service_sid\" : \"ISC5E4A8D13f678cf9b5e4cCC4EEC4c6BC\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/456124\",\n    \"sid\" : \"RLf72d3EA82Ea2c6Fbae5aF6e00dD80FE9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9604cb7f-fa8f-408b-8fdb-f3f13ffde71e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.800772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.role"
                },
                "type" : "array"
              }
            },
            "title" : "ListRoleResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c52756ec-b0bc-4872-b1e2-6e70a40a0872",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/811138\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/049593\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/533404\",\n    \"page\" : 5049741829828159539,\n    \"key\" : \"r1vly6qjmahfjzavwbnm5sg0hgaqltu46qw488irnfgsvhix51w7lyu6zb5hl730qqbjy2gozcoygr40kcbpylcu9z6vrnoffou6fj3hotno1e9l3bfmd9u5ydavghpm894tsb83r1n0flco9784ob7uchvz7x0x7hd00f7tsefp\",\n    \"url\" : \"https://web.example.mocklab.io/484983\",\n    \"page_size\" : 6455861142150116321\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"jvjls7slma9lr6bsirjcz62r4mvc1pcuw4jy6dl3edizr3wwiwzsep6jjmn0nt1boknugkeaic7lk6n6md4ujfge19zev1y4igfis2vv57i8xobscbj4kwy5c\",\n    \"conversation_sid\" : \"CHbc5b2778AA3c28C1Ad08426b831eEe33\",\n    \"conversation_friendly_name\" : \"Jamee Gulgowski\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"qkbufg9qsip2m7uuw8gt2cpgpdgpz8a8dmmxnkk9fnrwuppsoksrzcmnghhui79qjpvjtq9seugpd6hvanseohyz9lzimb4q9abxm69ratobvm3yxrs315tt9euj45y141wtpcfl0yjdx6zxz6og7em8kge2ufpvi20k\",\n    \"conversation_date_created\" : \"2023-02-22T11:30:32.798Z\",\n    \"conversation_attributes\" : \"0tn3cntt747yaggq9ahfvn0th7g4ol5g2mpa5q9bk5cyb\",\n    \"participant_sid\" : \"MBBDeC2ddD0F0a04BF4eeeaad5C6cC67a5\",\n    \"chat_service_sid\" : \"IS1B5e329B9bfb8101F8a8fA1CfdEf05Bc\",\n    \"conversation_date_updated\" : \"2023-01-16T11:22:48.798Z\",\n    \"conversation_unique_name\" : \"Belkis Mertz\",\n    \"participant_user_sid\" : \"USEdE9Fc8e7F7c2f2eD5Fc305c58f84Efa\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACa4dD10935eEA3FB53F2cE80FBaFDD9E4\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"d2r6z1kln7xkck5mcux0ttu459hpyv5uh9x5mctuybr5hhb4b3oajuu2a5k4n0qnr19zoawt3cw2r38x6wa5mst\",\n    \"conversation_sid\" : \"CHe0EAAA9b5DBCDfcc0acAF767F0cB4d6D\",\n    \"conversation_friendly_name\" : \"Rene Trantow DVM\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"rsy3hv91prva05lnkmhedatj137pmcal3ljh0ihuqefcrp1fuvezw61q3cyrgxp7dbebcf78n9nb08wtdcloqxepgpo0aboel3gi52f4sa7o0ydetsgj7pemtb8agqc5hsiqjrgk85buqoc4dco4w89vxltbj38gnzib7eq3n37fqo29\",\n    \"conversation_date_created\" : \"2022-07-01T04:28:30.798Z\",\n    \"conversation_attributes\" : \"sut00xy4461237yy5gmefyxv3hrbom5b6wha40uh6tf3pazgmvglwylq2twkxagci44qlqz77ftdykf0nxam3i4s7uol7nd9aq7mgeevwwzhddd71ndaqqf2xchl8phynp0jg0p4135fuw\",\n    \"participant_sid\" : \"MBAD8FE1E7fB17DdBDaCeD5092Fd2cbFdF\",\n    \"chat_service_sid\" : \"IS352AE0878D22d6CD2CE5aF901EfBaa24\",\n    \"conversation_date_updated\" : \"2024-02-18T21:51:46.798Z\",\n    \"conversation_unique_name\" : \"Heriberto Walter Jr.\",\n    \"participant_user_sid\" : \"US6ad8BfB1ead2DcBB3DE1C307c1e91050\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC7EB9edd17bFBC7209AE743f7D73d7baA\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"g614hyoz7mddfiyjw2t0xvkwojb74fbvk4xaowla9nkqb61myvvojb53gux935r41qy9e8vx109ltduq0qoz5vavpaqn2bvwny3ttxqskuorn75zpps9fqxlutzdn5ni09e6v7fyh\",\n    \"conversation_sid\" : \"CH1a8950043bDCcd3aeDAbA990aAd5EeFd\",\n    \"conversation_friendly_name\" : \"Lavonne Reilly\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"zjti021us0x8mubu\",\n    \"conversation_date_created\" : \"2023-12-13T19:41:37.799Z\",\n    \"conversation_attributes\" : \"5ilinsuhdumtzwlhc6hr9vbitlg652oj9xnt5cmk3ugdvxh\",\n    \"participant_sid\" : \"MB095abeD7B6ED2fA389B8a6dFE6C70CEA\",\n    \"chat_service_sid\" : \"IS03Fe5A92cb55d09DDCaEe7A20dbFcdcB\",\n    \"conversation_date_updated\" : \"2022-12-03T20:40:15.799Z\",\n    \"conversation_unique_name\" : \"Doris Marks\",\n    \"participant_user_sid\" : \"US9Ff3B7D0423daa5caA0CDa403fb290Bb\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC2dc1CE03d0b1dFaCeA8b70Fd0Df3cc05\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"wp0tfm88xwbukvt43axllk6rdys0r9u7jtgighpr0emvjdpnpsx7htf51uzzs6ppsy9t1g62ihoczur7fglmg0lixaaskzejr319q1oeailm8ke0c7dzh3np612w0gvl3ketzaetxwpiedaqg4\",\n    \"conversation_sid\" : \"CHbb0f60c53fCCaF8D5dc4eEcd123B4B73\",\n    \"conversation_friendly_name\" : \"Wendi Wisozk\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"1ah7kq8fzrq1gtvwbhmn\",\n    \"conversation_date_created\" : \"2023-11-23T02:46:14.799Z\",\n    \"conversation_attributes\" : \"v7t1q386llbe1m4lcrsmgblec3p24y2vmhiqgzogqiqd7fikx\",\n    \"participant_sid\" : \"MBDA1efe0e4591B08Edfdc26E4a7fEA332\",\n    \"chat_service_sid\" : \"IS4Dc99CDbe867A6EECA085D51e8a9e2Ef\",\n    \"conversation_date_updated\" : \"2022-03-09T01:10:23.799Z\",\n    \"conversation_unique_name\" : \"Ms. Maxwell Bergnaum\",\n    \"participant_user_sid\" : \"USe3BB0f3D05C38dAc11011fd84dfAfA4E\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACdBE2de9277b59f81CB5Ae1f60E5B08a3\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"u1pzxngcx48g36labsyq0s8t9vr38xrpse51qpwbs786h4ef6z96vfuwmaeachq41f0\",\n    \"conversation_sid\" : \"CHCdDa5a5A173455d123c10F4ecC799b2D\",\n    \"conversation_friendly_name\" : \"Shantelle Monahan\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"5zl82km1mgf1salde98ikejho29jtcjx4re0xhwqj3mvutwc5avqirhh294vftyd8fmpfqyje79qp1nmdihhhlhblo5bv4ojzjxrcqx3mtx8fxct80\",\n    \"conversation_date_created\" : \"2022-07-09T18:54:48.799Z\",\n    \"conversation_attributes\" : \"huoox\",\n    \"participant_sid\" : \"MBd2d0313F130adf40bFBfb6Ea6EfFCEfB\",\n    \"chat_service_sid\" : \"ISadF140EfFBf1CFAfB6d73AD5F63AF8Dc\",\n    \"conversation_date_updated\" : \"2023-12-12T11:40:27.799Z\",\n    \"conversation_unique_name\" : \"Dr. Sammy Reichel\",\n    \"participant_user_sid\" : \"USF6404CB6FC9c6d1049DabDA4dbBf15C3\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC74baE3b6Df7Fcb77F53693dFd0eACDAe\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"n1rbw1ywp7pcewpewvranbhtvntip3no9depqvr1khjr24jlgwxk5icbr2cszllh9ssmw\",\n    \"conversation_sid\" : \"CH2dfCE687c2760Dd8cbC9D0f3b3434Cc2\",\n    \"conversation_friendly_name\" : \"Dorian Rolfson\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"wm0qhn3oz9t2wfutsfj5qal980r4\",\n    \"conversation_date_created\" : \"2023-08-10T17:23:36.799Z\",\n    \"conversation_attributes\" : \"408rxun3oh74x57gnp5cilfpfvm2xla1v7sr4gl6i44ickwob2cbv26ozq79qz02yqb67jqhm8y7ketsegcemkvhrgulz6drt1qu383hnd0qm3q968a4oax4us8xfelahb87g8x481mhtm5kxh\",\n    \"participant_sid\" : \"MBe08E9e8Fd71e7cB0B03F3Ab88f494a8B\",\n    \"chat_service_sid\" : \"IScbEfebf007Ff0Ab6eEA6abDd0ADb04a4\",\n    \"conversation_date_updated\" : \"2022-09-15T01:15:17.799Z\",\n    \"conversation_unique_name\" : \"Perry Wehner\",\n    \"participant_user_sid\" : \"US28600aAFEDEdAe36DDdB8BccDbCA7fC7\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC59EEAcfae502fE2EDccE5bccB7ffB43B\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c52756ec-b0bc-4872-b1e2-6e70a40a0872",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.799987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "44c0a0e2-c9a9-4568-bdf5-1bc2227ced62",
    "name" : "Update an existing push notification credential on your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CRd907536Fc4fcBbBaA61a4cA872c7fcCe",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Waltraud Aufderhar IV\",\n  \"date_updated\" : \"2023-03-31T12:04:11.798Z\",\n  \"date_created\" : \"2022-05-14T04:10:39.798Z\",\n  \"sandbox\" : \"rbqkfyz1i9u81wzf9r9v8zppxzfo974lyd77q21r5f89kxftebo4xo96e5x9r8iluii0io3dxiu01ips5b1qhsi9rps0cx88tf5bvf9izdoykxfoil\",\n  \"account_sid\" : \"AC5De1DE5EeD4fd61bb90C1f286d95Aa1E\",\n  \"type\" : \"fcm\",\n  \"url\" : \"https://web.example.mocklab.io/939609\",\n  \"sid\" : \"CR45a25f9d0dcFfc5BaBAEE55457CC8cd9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44c0a0e2-c9a9-4568-bdf5-1bc2227ced62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.798261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c4a1401b-69df-4ac6-a17d-4e17b12a10aa",
    "name" : "Fetch a push notification credential from your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CRbe89bed165Cbfae2f291e708E63Fd816",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Mrs. Reginald Kemmer\",\n  \"date_updated\" : \"2022-12-28T16:43:38.797Z\",\n  \"date_created\" : \"2022-12-19T03:01:07.797Z\",\n  \"sandbox\" : \"bx9qbup9x9suw0wrhdvv3yjrql72i4aqqlqwsqudpjso8ldtjkfzq8ia0ekmuqqxn0jxq0f7a3qxs5p5z5ezl8nj6205iam0199x6iam2di5maevrdb\",\n  \"account_sid\" : \"AC4cEe6ccAB4F1FdC9FFDef3DFB7D4905e\",\n  \"type\" : \"fcm\",\n  \"url\" : \"https://web.example.mocklab.io/479575\",\n  \"sid\" : \"CRe3DAdF9Cca0B2762f4Fd0cBb0529f0ad\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4a1401b-69df-4ac6-a17d-4e17b12a10aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.798025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a7003a79-922e-45f7-bf0f-86299341cc21",
    "name" : "Remove a push notification credential from your account - 204",
    "request" : {
      "urlPath" : "/v1/Credentials/CRaB1F515Cd51efdAF1aC1a6bDff621cDa",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a7003a79-922e-45f7-bf0f-86299341cc21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.797786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCredential"
        }
      }
    }
  }, {
    "id" : "14b4dee2-e8fa-4923-b8a2-fa0514495850",
    "name" : "Add a new push notification credential to your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Doug Ernser PhD\",\n  \"date_updated\" : \"2022-12-14T16:33:57.797Z\",\n  \"date_created\" : \"2023-05-30T06:22:01.797Z\",\n  \"sandbox\" : \"rmzk98xpf4ap1ugkecntatp3xfsdbafm2b90o0anpx3r6w2roux84b0ix1uhkoogw8cbll\",\n  \"account_sid\" : \"ACFBd6e0daA98eA6cC0B0b6bA6b2129eF1\",\n  \"type\" : \"fcm\",\n  \"url\" : \"https://web.example.mocklab.io/501899\",\n  \"sid\" : \"CR4875d58E9CE7DD89dFAAB2FbEe93e3D3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14b4dee2-e8fa-4923-b8a2-fa0514495850",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.797745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dcd4f8a4-35f2-4177-af6c-4c9ee98b3b98",
    "name" : "Retrieve a list of all push notification credentials on your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credentials\" : [ {\n    \"friendly_name\" : \"Ja Deckow\",\n    \"date_updated\" : \"2023-06-22T07:49:22.796Z\",\n    \"date_created\" : \"2022-05-09T22:27:01.796Z\",\n    \"sandbox\" : \"rk8f7\",\n    \"account_sid\" : \"ACfCe59FDfDbB894EAdE32c8c597a064Aa\",\n    \"type\" : \"gcm\",\n    \"url\" : \"https://web.example.mocklab.io/290920\",\n    \"sid\" : \"CR28C3a5DDEC3Af6413769Df6dDB4f6FfE\"\n  }, {\n    \"friendly_name\" : \"Mrs. Myesha Roob\",\n    \"date_updated\" : \"2023-07-03T21:39:11.796Z\",\n    \"date_created\" : \"2022-12-27T01:10:50.796Z\",\n    \"sandbox\" : \"jk4ihkftkno3vzaf9suemjh3xkiehi791wu5zg9f0f7i3spqou186owgt8w10kfzz1ffobjkx7p1vkel2n4mxyb7w8fplf6kh0lngoqlb9ms6zschhr6d3gfipc03s8zqpqr906yyu7j4x44j62v6xj53jxwrln98o1exd2umpaiiz2lmvy0v0l8v6cj4cxlaomr8h\",\n    \"account_sid\" : \"ACe9a1edBbD01E4dDe0109c18EfED51E64\",\n    \"type\" : \"apn\",\n    \"url\" : \"https://web.example.mocklab.io/420343\",\n    \"sid\" : \"CR2CCD2EbeCFA64C3e50Ec7Ad266bac7eb\"\n  }, {\n    \"friendly_name\" : \"Gaylene O'Connell\",\n    \"date_updated\" : \"2022-10-27T07:50:56.796Z\",\n    \"date_created\" : \"2022-11-22T05:18:35.796Z\",\n    \"sandbox\" : \"aqsnut1yt0m2yd55nuz46ifofhg3dwup33uifksz9lqare7qa8dh1mgs1zbxgoe4k47ycu0tf3d59a\",\n    \"account_sid\" : \"AC7Fb55fAEb86ffcBF8f87c4cF16046CCd\",\n    \"type\" : \"fcm\",\n    \"url\" : \"https://web.example.mocklab.io/164448\",\n    \"sid\" : \"CRB19178A9a5CEB9Fa6bd607dd5feC34ea\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/256202\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/263348\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/417706\",\n    \"page\" : 7868878651395425405,\n    \"key\" : \"5grcd7w1twbktqfsm2kjqutpm6i9qr50e5tjhlvtg4bsaz3mj4n8ou7iwi24tu9ibml7ixzl7ewpsl1ot9lksvaguxe47muhfoqgrok3oogbg65v9cumb1jvysve9lfbwtgwgmv09kynhmw97i2ejk5ntardmdhqgzv5l\",\n    \"url\" : \"https://web.example.mocklab.io/266228\",\n    \"page_size\" : 4168892233414846814\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcd4f8a4-35f2-4177-af6c-4c9ee98b3b98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.797483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListCredential",
          "schema" : {
            "properties" : {
              "credentials" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.credential"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListCredentialResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c690e75b-095d-4818-848e-2f5ab32d2161",
    "name" : "Update an existing conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/kdrb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Vinita Beier\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-07-10T12:14:47.796Z\",\n  \"date_created\" : \"2023-12-31T19:20:09.796Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISB144BB7deE3EF0BF985Cc63FcffE758a\",\n  \"url\" : \"https://web.example.mocklab.io/930093\",\n  \"sid\" : \"CHeceaE57A458b4F933AB5dab8D2c2Bb2b\",\n  \"unique_name\" : \"Bryce McCullough\",\n  \"messaging_service_sid\" : \"MGc7ecdFECBb610a7b2eaA0C37f9d26816\",\n  \"account_sid\" : \"ACeAC4C2d8E61dAAEBe79083Ab1CaBdb68\",\n  \"attributes\" : \"799nvb3zcnb8oaei2pmbu5nkkywft09ho3fb8dvnniwp88jrfx1z9z83juobz594pyd4tw3zjw35982mppfvhvg5g7rwbwc76zokiqg0y104mdr9g0ga7d3un4im238hpe35mhada0ya8irnxjbijdqsw3k9\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c690e75b-095d-4818-848e-2f5ab32d2161",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.796579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "23c46772-37cc-43c0-a7dc-b1fb3b55cde1",
    "name" : "Fetch a conversation from your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/l7rf",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Jackie Parisian\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-08-24T03:12:27.795Z\",\n  \"date_created\" : \"2023-07-18T07:20:01.795Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS27B1Ddc4dE4EEC9001fb42886aeBFAd7\",\n  \"url\" : \"https://web.example.mocklab.io/634342\",\n  \"sid\" : \"CHEfAD63Ae7dFfbeae38E34cB0dDc5E8dC\",\n  \"unique_name\" : \"Rashida Bartell\",\n  \"messaging_service_sid\" : \"MGfF262FcBDac5a96D08863bEBc7f4C1e2\",\n  \"account_sid\" : \"ACeDB8c4dbaaA40e66bcF50A73ACfb89a1\",\n  \"attributes\" : \"3096tf4o36nhokp0plb5wg1ukwe7u6yvcjtiiy0x1y4u3pzdmk96nz8w7d5fkfkw96wzs3b5yyvzyi5y28depbwv61an3dguox56cq9o8u71bigq5up3vbhy9khhvgxhsbgi57286jioy921ze1z9vf6ltti4sxymhv\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23c46772-37cc-43c0-a7dc-b1fb3b55cde1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.796191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "825c45a2-0613-4835-9efe-08898c3817e9",
    "name" : "Remove a conversation from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/920s",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "825c45a2-0613-4835-9efe-08898c3817e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.7957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversation"
        }
      }
    }
  }, {
    "id" : "62027fb8-1134-44b0-9df5-90a973b1055c",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/731o/Webhooks/WHEfaFe4Ee89f7CF4dbEBe66E3e3a98FfD",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHEeF32faa1EeD1B8F0B2BD1Ed7a06E4BD\",\n  \"date_updated\" : \"2023-02-06T23:40:23.795Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-12-04T21:32:27.795Z\",\n  \"account_sid\" : \"ACb9e9aC0fE7EC6C79FDbe41F567dAd0eb\",\n  \"url\" : \"https://web.example.mocklab.io/162866\",\n  \"sid\" : \"WH7DCb667f92aB26EC6BeC2D1cfdaa4E67\",\n  \"target\" : \"ia8pkhf0rq5qpwlgtxc6bnz3ihf8k34s6emmzy6xsyewqipt3hetevvr76pi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62027fb8-1134-44b0-9df5-90a973b1055c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.795591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0d6eb530-0f49-4672-b18f-9204222ee407",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/05pl/Webhooks/WHf0aFfF15dEC6D8cC5EfAb6F4D92DfD1B",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH6C79175F963F7adCA3FFEaa6Ca1bDEA3\",\n  \"date_updated\" : \"2023-01-17T04:03:42.795Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-06-30T11:08:30.795Z\",\n  \"account_sid\" : \"AC3d1cbEAdC102eE56574D6aBBba829eD0\",\n  \"url\" : \"https://web.example.mocklab.io/628709\",\n  \"sid\" : \"WHAb224E55419Be1aEa3cf0cC5171cC6ac\",\n  \"target\" : \"y6i1lpglpb6xc2iqxbz8psy8cbe52xg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d6eb530-0f49-4672-b18f-9204222ee407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.795317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "963c409d-b4a9-4c16-a410-f67a5da5738f",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/7k9q/Webhooks/WHAEa20Ef349B6cf970371A6dB74Da1D6e",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "963c409d-b4a9-4c16-a410-f67a5da5738f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.79505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationScopedWebhook"
        }
      }
    }
  }, {
    "id" : "940ee8a7-afaf-41db-a9af-c0dffd93315d",
    "name" : "Create a new webhook scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/1bp8/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHEe35AAA5Fe5F175BEe4D3aE591d10fe0\",\n  \"date_updated\" : \"2022-05-28T23:02:55.794Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2022-10-15T11:17:41.794Z\",\n  \"account_sid\" : \"ACfBcCaC8Bc5FEaCDd6b39DB6B972A7403\",\n  \"url\" : \"https://web.example.mocklab.io/228473\",\n  \"sid\" : \"WHbDbBec2cA7EABDFB1CFE802Bb0BD900f\",\n  \"target\" : \"jsjy0543kc2d6a1fjp1b3hvo62m7e9gclo88p1cc8njhbm57zxkhq1nmwv6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "940ee8a7-afaf-41db-a9af-c0dffd93315d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.794944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "067a1558-1ea1-47a9-9171-8b51e795dc57",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/3c76/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CH74D0cA70C0aff9BF0aa48a9B12489Dc3\",\n    \"date_updated\" : \"2023-11-17T15:28:00.793Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-06-26T12:28:50.793Z\",\n    \"account_sid\" : \"ACADBfA8E4Ddb8CD64cFa9dA7Cd40264F1\",\n    \"url\" : \"https://web.example.mocklab.io/299626\",\n    \"sid\" : \"WHf2fAB53E9B28d630b01F7Da1A5bdaD53\",\n    \"target\" : \"lxojr07cyppqz000717dc7pb6jppgh4xxu56tvzmp1qoqmkqicriahnzbjevoycrigxrztmtas7snuo2fefbuxyh1032kx\"\n  }, {\n    \"conversation_sid\" : \"CH0eeDfdA9B24a5C48C28082AEba596e1D\",\n    \"date_updated\" : \"2023-04-13T03:13:35.793Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-08-22T19:32:04.793Z\",\n    \"account_sid\" : \"ACBFFB6734b3b1AB66Df33c9FdE5Fc6fc7\",\n    \"url\" : \"https://web.example.mocklab.io/882523\",\n    \"sid\" : \"WH7FD1f0465276a4fAb270d3d1cFF84464\",\n    \"target\" : \"nqvlhp2wwa8ff\"\n  }, {\n    \"conversation_sid\" : \"CH5a00E74dcd6E5A1dfF1bdC6FC0Fcc2C5\",\n    \"date_updated\" : \"2022-05-31T15:32:54.793Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-09-17T08:47:30.793Z\",\n    \"account_sid\" : \"ACF440Ba3F848da4BAcaA6046dC7Dae0eD\",\n    \"url\" : \"https://web.example.mocklab.io/128746\",\n    \"sid\" : \"WHc545d661BcdEEfb5F86678e4e574F3A7\",\n    \"target\" : \"aqk2wqrf2w5gb0lj7g98qocy48wly10e08osooyw13tcitp8jhtxa4h77oofcifygwh2kzijco7cl2n4n9os2uy9j0tn4pb4u9\"\n  }, {\n    \"conversation_sid\" : \"CHb9EB50c844c8cF9efde0d4a85C3BA054\",\n    \"date_updated\" : \"2023-07-22T11:03:44.793Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-09-19T20:37:50.793Z\",\n    \"account_sid\" : \"ACD5dCD5ec7C7B1eE99A8b56a963aE95f1\",\n    \"url\" : \"https://web.example.mocklab.io/281850\",\n    \"sid\" : \"WH87BAfa1Befcdfe6e4d56A62Dc02874bA\",\n    \"target\" : \"f5hf40ud3lbanm8lkhlo0ugv0mdwh08sfcknqa\"\n  }, {\n    \"conversation_sid\" : \"CHafBC1B3eEaA3E5C638FCf191b6c1EEBa\",\n    \"date_updated\" : \"2023-07-15T03:02:55.793Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-11-03T08:23:53.793Z\",\n    \"account_sid\" : \"AC1df74aceC0752A4AfFD8e65A44Ec9489\",\n    \"url\" : \"https://web.example.mocklab.io/995080\",\n    \"sid\" : \"WH9cc342aE5b39EeDb736c30c5c7a59B16\",\n    \"target\" : \"pr1vsl4ilhwmz1kv2icpun3yaj7m216yj7rdc87jyk73kezcw0z0nva612v2yihjcow5ofedww9jzg2v9lijn5qpr84otmud4qb1818y2maofqhhnt780hnnn7nsi09c48iowva4x2ohgpdxijoe8il2p9cj\"\n  }, {\n    \"conversation_sid\" : \"CH25ddFec7750524cc68D6Ed02b3C1A34B\",\n    \"date_updated\" : \"2022-05-12T21:36:59.794Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-05-13T13:58:07.794Z\",\n    \"account_sid\" : \"ACB0FDAcCAF3edfeD666BecDec57a75809\",\n    \"url\" : \"https://web.example.mocklab.io/060256\",\n    \"sid\" : \"WHcdDbe06FfFCBa4E17ADff9f7d8BF8B01\",\n    \"target\" : \"frdvjzk2gr9ys1o8l5yyvswn6g1untw9f06dd7dlhcrtnw6a58wvhupvvugejv39867n82zywbh3w23qtdhqzo9xtrvv7e2y788f182jm4t5ksasvp4c0nvvbg5msc1qyjqt7lpu1inuzdqgsv98g7wn0g\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/639367\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/701974\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/601944\",\n    \"page\" : 2895844433884214670,\n    \"key\" : \"ew2chuujzdkzl2ch93njvxc372rpok2g1eu57o2g0jrwfop509d2fy41957szp9qs9zumhzw90hdgs36p3j6rfvly5osgvgiwnz\",\n    \"url\" : \"https://web.example.mocklab.io/446229\",\n    \"page_size\" : 3880887354090763737\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "067a1558-1ea1-47a9-9171-8b51e795dc57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.794656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3883743-11ad-419b-afe6-53c56bc0b071",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/lvu2/Participants/77p0",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH90DD7C393cafe8ba14c93dAE6a61f870\",\n  \"date_updated\" : \"2023-07-06T08:43:05.793Z\",\n  \"role_sid\" : \"RLdA2e7A8f4eEf7AaBebCa5550FBC3D7A8\",\n  \"last_read_message_index\" : 6205211222545123221,\n  \"date_created\" : \"2023-08-01T19:10:49.793Z\",\n  \"identity\" : \"ba79ea6p0b3fh61or3pl7anjrsrcxevd3tgt4tjqlnakmferhn48dy5tymgwv0ohxfm8y3lu2sodfc8e41gcug3niuqmxlpvt4gp11jsi06ljltlzfofpjf23k5tr4j4r4j8l3mit1ckczoc62cva0fu5kxu16s580pdqcfy4xk73upe92tfjbpvs\",\n  \"last_read_timestamp\" : \"2022-05-14T17:55:37.793125Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC0B08be6B5EfFE7814468aBEC487A3F9a\",\n  \"attributes\" : \"0kr0urcg1zt3kiiz0nuv1kp1y32kud834q67bqs5o9oref2klf0szd264zibcdxwztbzs64zrivsaj4zr76k4infohxsa6pi8m7r6ty21pesj2cwxyl6t8sa1a66c4j0ktfxaqefb2it7gjkwhyr\",\n  \"url\" : \"https://web.example.mocklab.io/044644\",\n  \"sid\" : \"MBB1A0FA3EF4DEDfb7B6fC98cFeb99A6c0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3883743-11ad-419b-afe6-53c56bc0b071",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.793465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1068cc5a-7430-418b-a287-d3b627d68faf",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/l87e/Participants/h1v7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHA335cB72B9FBB75bCe0E1c578039D348\",\n  \"date_updated\" : \"2023-01-18T11:28:23.792Z\",\n  \"role_sid\" : \"RLfaAFa3Aa845bbc61F22EC7149947Ea67\",\n  \"last_read_message_index\" : 4401784101775183824,\n  \"date_created\" : \"2024-01-15T09:14:30.792Z\",\n  \"identity\" : \"9nxxfxr60j2a6ar2wp036w53vxvlu8n63nu0zhwas15vt0s4l2jh2q4osgn9vc9hnnh6k5m5rewrpi3a6pzwc5yq691y4q7rexra5kofe4eafxps3cruil38109gorkijemlofsj7ikda4z2c1vlin2\",\n  \"last_read_timestamp\" : \"2022-04-05T15:42:37.792701Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC4Bdd9853dcB13bB80aea3b51E204fb70\",\n  \"attributes\" : \"ly2g4d93xwyu\",\n  \"url\" : \"https://web.example.mocklab.io/853826\",\n  \"sid\" : \"MBCFAE3aD781BDcAE20BBDc4122Ff3fCd4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1068cc5a-7430-418b-a287-d3b627d68faf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.793041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24f8ab26-0231-4445-aef1-f242e4121a38",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/jtao/Participants/olnv",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "24f8ab26-0231-4445-aef1-f242e4121a38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.792622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationParticipant"
        }
      }
    }
  }, {
    "id" : "f51dfc01-93ec-474b-ae74-837ccbab7b2a",
    "name" : "Add a new participant to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/7197/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH95DdEcC6886EB7699cd3bdef31D47EbD\",\n  \"date_updated\" : \"2022-08-06T10:50:17.792Z\",\n  \"role_sid\" : \"RL1BAfec142fB8A64Fb7C9875Db6Fc212B\",\n  \"last_read_message_index\" : 4476149601784888447,\n  \"date_created\" : \"2023-07-19T06:26:40.792Z\",\n  \"identity\" : \"w6yt8o1djg6koit7fmpsjaxwxwonbmalz8zn8lu72fwahlscarrtcciapn7il1x9qn8gai0f0377x09njl0m44ywlmf3r2pcnzd35tbsf13crgokwy4g74d11jhhqg004rrlafrask118vlnrqlrq521xdflphzkzrlmotntcwj9ruvdu05vp3i\",\n  \"last_read_timestamp\" : \"2022-04-06T15:44:37.792136Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACb6a7A538FFe18B6F46d2fCA5d1e5bf2f\",\n  \"attributes\" : \"lauiroovmqqe1taywjnogd9u843cg7pa9z9yffakuuzs9gmz5esen2xvhfueva3ufzwimfpv6iwy04z2jl2kn3glptjis652la74gdgvqqftwo2sipvohvdqil45ruy\",\n  \"url\" : \"https://web.example.mocklab.io/205356\",\n  \"sid\" : \"MB64A97CF5fFE41f229f4E8E0Aecc8C56B\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f51dfc01-93ec-474b-ae74-837ccbab7b2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.792447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "51dcff72-7733-4a49-b2de-404601f91e7a",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/jmw5/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/875186\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/454484\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/330983\",\n    \"page\" : 8298570690766344201,\n    \"key\" : \"hn7fzkmrfo9mbepp0zdj8vsuilyhd88fk4bk30jz7854ojjkgcsd4vy4f4\",\n    \"url\" : \"https://web.example.mocklab.io/312083\",\n    \"page_size\" : 7355671634000641207\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CHe8eE80bA4043FC191E1de42F75fFA61B\",\n    \"date_updated\" : \"2022-12-15T17:23:48.791Z\",\n    \"role_sid\" : \"RLAD492846f53b6Fa1A52546A7161432f1\",\n    \"last_read_message_index\" : 2140068919235644203,\n    \"date_created\" : \"2022-12-22T18:45:48.791Z\",\n    \"identity\" : \"405hvqoyf9iywshbcs2c1kky0nvm2im95hjh00h1hzcecix3ttdrf0n1vzyzghx7kz470rc9nyuxxos8boo6ikf2knalg5i5mspow11e8v2odsrrqtyx6hffb9n4ungyrpd7yy9jl8cxed1bdrwwfinyjqt9i7rryuvwfxjt9yimrwiutru42c8vcqjywz\",\n    \"last_read_timestamp\" : \"2023-01-18T16:33:37.791398Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC51a484D79Fb6baB8D8dabcF52E9b46dc\",\n    \"attributes\" : \"effshs5e6udmtbz0y9gmjo45jqwadlok7klzma10v0vi06zc5i07z40rfmd340t5ipwnypalv2gpvrdl0n6zjk7efgal0wdqeo79sftrlluupa9qqd0b0zi283mm482pb2gs3hoj5nuxekwsglsusqc55pncut3bentvlp98cpomelxb65z\",\n    \"url\" : \"https://web.example.mocklab.io/689470\",\n    \"sid\" : \"MB9fefEf7d498Cc54f31Aa8d9d24a2e6B7\"\n  }, {\n    \"conversation_sid\" : \"CHFf08c552CE88Dde94f1C591DDcea0B7C\",\n    \"date_updated\" : \"2023-08-16T18:56:27.791Z\",\n    \"role_sid\" : \"RLE0F52664dFD8e3a7B0cb5B7919FCE8FD\",\n    \"last_read_message_index\" : 1137093990961851929,\n    \"date_created\" : \"2024-01-20T20:53:24.791Z\",\n    \"identity\" : \"oyb0jalrgpqwye43o17w1n1qe8kvq5sv7pvq55zd5tw58r4663vz2kjw0ptmygeyktdkutyz1i4arywnra089knbqyubp07puiti4elt78ktbzvpspgozg6mtzwrborsubrbudcsv024o26h8m80e6zm43oucjj50lu8pk4fr9jkqzz2xxcboruxxb0817u\",\n    \"last_read_timestamp\" : \"2022-11-27T15:22:37.791579Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC0dbf647EA74BCE4cdCd5f97f7F6d6274\",\n    \"attributes\" : \"qtoo1qvzutabynh8mubmhcm9nulkvfbegt702apzst5bmcervdqwwl5jb1v6fxrvhfvwxpmsz3awrfvu8wwf6u5811der0m67cr0ceixot5hjn8zmgscjom\",\n    \"url\" : \"https://web.example.mocklab.io/105703\",\n    \"sid\" : \"MBF5E66aDEF6dED17Bb97f630af9E8c6d8\"\n  }, {\n    \"conversation_sid\" : \"CH33ABCfd46daFb1cb519eF848dac6B568\",\n    \"date_updated\" : \"2023-06-06T03:54:42.791Z\",\n    \"role_sid\" : \"RLdfcfEF063CCaECDFA5c215Ede9baC9E6\",\n    \"last_read_message_index\" : 3104717866862863805,\n    \"date_created\" : \"2022-03-22T14:08:04.791Z\",\n    \"identity\" : \"o521te13xle2a3n2ze0bcfara24h2ofx2w78tuuwlimw70raullj84fhykycivn6ccx5mqe7l04uimvaayq6b5jjb5xtqqdpsx5889hpth\",\n    \"last_read_timestamp\" : \"2023-01-17T15:10:37.791748Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACF0E5a754Ebd06a6B2bBA9de9Ee6Fb893\",\n    \"attributes\" : \"mdvuhsgygzoa4tz8rvtvjy0u7m6dd9plcssmmvr86908xiaougr20hljcjx75gkhdhv0d9fao2fex2mhf29hudda0lha6zn8a356208fbd14k6svh2qmotz2j36ko0phvckuyyp7zcyeyp\",\n    \"url\" : \"https://web.example.mocklab.io/579340\",\n    \"sid\" : \"MBAe88d9E4E754adDC300bfaCB5d71BFcb\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51dcff72-7733-4a49-b2de-404601f91e7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.792048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dab1325c-02e1-4543-9738-ccf2c95fc407",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/0955/Messages/IMD656a4dd8CebA58C6D7dBCCF16D59efb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHD576BbB26B0943AdFAE09c3ead1DDbe1\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-02-10T10:47:32.79Z\",\n  \"author\" : \"3vwrz5wzhyuvvee6a38r01dvmr7u0ex28469tp5vxu7njgtek1xqcik6isajtdlqd8r5554t2y166yg6sbkgdxg01nw536nz52138rixsxwoozq2ya1m3okze0w7q6je5\",\n  \"date_created\" : \"2022-07-27T18:08:17.79Z\",\n  \"participant_sid\" : \"MBb030564e19a2eC53fb0Ab97D3fe98b74\",\n  \"index\" : 5180564610056747447,\n  \"media\" : [ { } ],\n  \"body\" : \"Eos sit voluptatem sunt. Quo culpa est saepe et doloribus. Quo velit optio. Quis enim molestiae.\",\n  \"url\" : \"https://web.example.mocklab.io/892541\",\n  \"sid\" : \"IM3e07858c1f7455A09ab7cbDFE473baaD\",\n  \"account_sid\" : \"AC8066cd8a1d5969f186403eBEcA46Bc24\",\n  \"attributes\" : \"492ttt32xvi1lnzy7uzldtadywl8\",\n  \"links\" : { },\n  \"content_sid\" : \"HX641056ECdBcbF59c8C3Aad4eE62BEaCc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dab1325c-02e1-4543-9738-ccf2c95fc407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.790945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d17e25f8-1938-4d73-854e-ec066ad1d093",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/295n/Messages/IMe4F5931C7CAF14Dd2aBa8BDB22c9bc4f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH79a2C3dCD1A5aB54b4ad8aCdfb9cB73c\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-10-20T16:28:43.79Z\",\n  \"author\" : \"oc2wlrd34\",\n  \"date_created\" : \"2022-05-14T13:50:18.79Z\",\n  \"participant_sid\" : \"MB1d1E2DDEaAd24aB48FdFeAAEAe87ef84\",\n  \"index\" : 141402364923774799,\n  \"media\" : [ { }, { }, { }, { } ],\n  \"body\" : \"Et rerum inventore et. Vitae sapiente nesciunt et labore ad error ipsum. Nostrum maxime minus provident quo voluptatibus dolores. Facilis exercitationem occaecati cumque nostrum.\",\n  \"url\" : \"https://web.example.mocklab.io/956403\",\n  \"sid\" : \"IM63a89c87DDaB5DfEEc1F4fABfCd3bFB9\",\n  \"account_sid\" : \"ACAeA983c452145c4A7ee2F3eEae6c4d09\",\n  \"attributes\" : \"yiys0aqceke3j8saq0yacathmphoifaer8nzm11icrwt2jh700elxg221tn4\",\n  \"links\" : { },\n  \"content_sid\" : \"HXa5b2557becD2eB9A1bbea8E3a49FBE3C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d17e25f8-1938-4d73-854e-ec066ad1d093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.7905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "16dc2512-8882-44c7-9b6b-3a2cfed284cd",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/jb99/Messages/IM3eb86dd51D3E9E4d9Bd2fe481fc5dC5a",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "16dc2512-8882-44c7-9b6b-3a2cfed284cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.78999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationMessage"
        }
      }
    }
  }, {
    "id" : "e0e605d5-9822-44da-ae8b-44d449342342",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/c7zz/Messages/IMcFBaBe40a19b8c169ac642647cebF7E3/Receipts/DY584A3BCF7c8d7855AdfF581E6b6e369d",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH06EdC01EcABdfF89d5Bfcfb404Fc5DdC\",\n  \"date_updated\" : \"2022-10-30T04:00:13.789Z\",\n  \"date_created\" : \"2022-09-03T03:47:13.789Z\",\n  \"participant_sid\" : \"MBbb39D1aB3B35CcA408e2001AC3ab49d7\",\n  \"account_sid\" : \"ACaF7b5f7ba58aCBCFCF486eBd5cEcE18A\",\n  \"error_code\" : 7719819004664301221,\n  \"message_sid\" : \"IM2A0Bfc19C182B3BCdcea8A83dDAc8f3d\",\n  \"channel_message_sid\" : \"HcbeD6e3Db20EDeA4bab238dd36DACb8DC\",\n  \"url\" : \"https://web.example.mocklab.io/376242\",\n  \"sid\" : \"DYa1BDfb5ddDDbe336c4CeefABc97e48AB\",\n  \"status\" : \"delivered\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0e605d5-9822-44da-ae8b-44d449342342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.789833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6264d4b0-6feb-4c12-8d0a-eb8705702a52",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/6x2k/Messages/IM3eC9EA66766385Ea3BBDbd6ECCdf119a/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/166539\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/009867\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/567053\",\n    \"page\" : 3027551208150203130,\n    \"key\" : \"g0qlevvmz05j6l39o9n20vsnh4p9yckk6q40jegpo1h60g8enm14gsg6xq9hrgjstm7e8ms9k93q6pr2ja7spf85qwqdpjclyg8cmx18grbm\",\n    \"url\" : \"https://web.example.mocklab.io/383441\",\n    \"page_size\" : 3712643312458698095\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CH7eB9EFA7A4d7fbb4bED8bA54bac9a743\",\n    \"date_updated\" : \"2022-11-30T17:58:57.788Z\",\n    \"date_created\" : \"2024-01-13T03:33:33.788Z\",\n    \"participant_sid\" : \"MBDb7c36E0Acb5BAfFBD65EA645fB8dF9a\",\n    \"account_sid\" : \"ACf3Fc92f9fC7fb022E64aC25fFaEce471\",\n    \"error_code\" : 3626074563476830357,\n    \"message_sid\" : \"IMad84fB9eAC212d0Ff53fF61820cFabe8\",\n    \"channel_message_sid\" : \"jq2beDA6fa31b39cFCCDb00A0ADbc58d7c\",\n    \"url\" : \"https://web.example.mocklab.io/681985\",\n    \"sid\" : \"DYdEdcdFa7df7A12Fc74cB5A4d0C5fDB83\",\n    \"status\" : \"undelivered\"\n  }, {\n    \"conversation_sid\" : \"CH1Ec7Ec1f0897b2a2BdaE17Cf15bf3CdE\",\n    \"date_updated\" : \"2023-01-14T01:09:01.788Z\",\n    \"date_created\" : \"2023-11-03T11:06:31.788Z\",\n    \"participant_sid\" : \"MBbfA5eFbA2C210B46ACb8a4FcbCEebD1f\",\n    \"account_sid\" : \"AC33aC2Fd6c8E6f01E8F0EDf0EFFBbDA10\",\n    \"error_code\" : 6769590074229723297,\n    \"message_sid\" : \"IMFFdFB496576bDD9A8A1DA900DE341e48\",\n    \"channel_message_sid\" : \"RQcE7dBe9F8DfCdcDCaA658Ba0c49aBffd\",\n    \"url\" : \"https://web.example.mocklab.io/249864\",\n    \"sid\" : \"DY97D2973a2DDA3dEecddF2227AF1Aeb4e\",\n    \"status\" : \"failed\"\n  }, {\n    \"conversation_sid\" : \"CHb60a88dC4e726e00Aa7E800a9159b2E4\",\n    \"date_updated\" : \"2023-10-09T15:57:16.788Z\",\n    \"date_created\" : \"2022-08-10T17:58:13.788Z\",\n    \"participant_sid\" : \"MBFd04Ee08ceBE4Fd6Ce9CF7e1C2ff6e98\",\n    \"account_sid\" : \"ACa3638ad609c8C308c8fCbd4FFFBf6bE4\",\n    \"error_code\" : 8710927061788363185,\n    \"message_sid\" : \"IM926Ff7Af843E8147Cbcf4bfD57ce0e5E\",\n    \"channel_message_sid\" : \"hz6dF5BDB62e5CA57E5Cd9E140fe64F5Cc\",\n    \"url\" : \"https://web.example.mocklab.io/089277\",\n    \"sid\" : \"DY25556D6de7ADE7b5764f109aa7b5Aee1\",\n    \"status\" : \"undelivered\"\n  }, {\n    \"conversation_sid\" : \"CH26ec6f170011EFCEAC677428A87c34bE\",\n    \"date_updated\" : \"2023-02-08T13:30:20.788Z\",\n    \"date_created\" : \"2022-03-11T21:27:16.788Z\",\n    \"participant_sid\" : \"MB0db346538BAee7a4E1fDa6DCfAe2E73b\",\n    \"account_sid\" : \"ACdAEfbB1BD9b94bDDF7426d34Bc08d850\",\n    \"error_code\" : 2838376883595046065,\n    \"message_sid\" : \"IM3fb9abE8A1482E1C521Ec8F67f3ddC2C\",\n    \"channel_message_sid\" : \"ocbB67affCEff9FbD74AAE21DC8aA3f1C6\",\n    \"url\" : \"https://web.example.mocklab.io/095355\",\n    \"sid\" : \"DY4c1b2b83CFdEbFeBEc43Ed6658BC9FC6\",\n    \"status\" : \"delivered\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6264d4b0-6feb-4c12-8d0a-eb8705702a52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.789197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message.conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "917f99a1-d2f9-4658-8179-65cb2dbf814e",
    "name" : "Add a new message to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/fb1b/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHb330dec67EbcBb392ca9B3E2e007DFBe\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-04-06T09:07:33.787Z\",\n  \"author\" : \"htgo4p1wjdzilfdpuhp9u4j3646atq5185t3qa8erfhl0vcx6cg6sfenhx5zzwjczo\",\n  \"date_created\" : \"2023-09-01T10:52:22.787Z\",\n  \"participant_sid\" : \"MBefcDFFca8EcABd4F019C3cbC2B6FABfe\",\n  \"index\" : 2650719782041344474,\n  \"media\" : [ { }, { }, { }, { } ],\n  \"body\" : \"Sed ipsum non itaque rerum eum numquam. Deleniti quo aspernatur blanditiis odio exercitationem eveniet repellendus. Amet aut laudantium tenetur accusamus non. Est sit deserunt et et.\",\n  \"url\" : \"https://web.example.mocklab.io/347313\",\n  \"sid\" : \"IMd35Ba033c5dF4b467EEf0caa3C7b2aAB\",\n  \"account_sid\" : \"ACC5A8767DB465Ab76caBfDEE8F49103Ed\",\n  \"attributes\" : \"3xwxlhs4btzy1qwfinmj2f6gi164dqc4w1h9gven5whcump0h9b4th1j6d5prlvflvw08674orqauhqji0omjjoeiwolc0y7rgg65m5i0el4mahdlgxx0jnlckkutwzolba\",\n  \"links\" : { },\n  \"content_sid\" : \"HXbd74aB6DFfCCEfc080017a8F2CfA0B54\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "917f99a1-d2f9-4658-8179-65cb2dbf814e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.788024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "da5c2eb2-bbf6-437c-b7db-520c9623d2ad",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/y8ky/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/575276\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/211557\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/412456\",\n    \"page\" : 8836899498805494813,\n    \"key\" : \"dou\",\n    \"url\" : \"https://web.example.mocklab.io/523910\",\n    \"page_size\" : 4611155112578956547\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CHeF56bFbfcaD1cBe0A0b07F64E6d3Df4c\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-06-24T00:36:10.786Z\",\n    \"author\" : \"kqh7w9\",\n    \"date_created\" : \"2023-08-05T22:29:21.786Z\",\n    \"participant_sid\" : \"MB6CEADC6CccD15Cc8f1b3c954Aaa60aEE\",\n    \"index\" : 7070797647503895645,\n    \"media\" : [ { }, { }, { } ],\n    \"body\" : \"Autem quod et officiis molestias officia. Et amet ut inventore. Magni reiciendis quia sit unde assumenda. Autem non quod. Repellat et sed eos veniam.\",\n    \"url\" : \"https://web.example.mocklab.io/722787\",\n    \"sid\" : \"IMB5d9Fd3CBbE52EbC6311C2EbfACbb21A\",\n    \"account_sid\" : \"ACa33bd067cF3eeaffb9DcE1F94Ab87eD0\",\n    \"attributes\" : \"mxvok4twt2qc14xuj076bebe34815dzpy6x52p95bkj5s3oxbx24c1t7a18ycoxqw5fx7kybohmy8wta0kgwj4p82sep54agk4ldg4js17t0f84z6obdabvll\",\n    \"links\" : { },\n    \"content_sid\" : \"HX445fC25A681fC9BE0b1EB1C3ccDB8aAa\"\n  }, {\n    \"conversation_sid\" : \"CHfFA4faecD43e598dAFd468e74dD7cE58\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-04-01T01:13:13.786Z\",\n    \"author\" : \"mlhhw33ynh6zkcv736r4ipeffe2b8oy6q3ysysgtfh12qzis92n9oh9fqdt7mh0ne66lo4ncaqokaup6p93ixeh6o5ck9w0r3673s19f66mw0arl98rulyeij2dd3yhaxs3iqgp2g82v4709e1vxc7705umemvw80usqdk0cf8ewropermf0nhhhzbp4uus\",\n    \"date_created\" : \"2023-05-28T22:30:47.786Z\",\n    \"participant_sid\" : \"MBC3CDC90ee1ca0E3cf9c4Fa0DC7Cc26bf\",\n    \"index\" : 6923152521841179306,\n    \"media\" : [ { }, { }, { }, { }, { } ],\n    \"body\" : \"Voluptatibus incidunt architecto. Porro itaque amet natus debitis molestiae vero. Consequatur qui magni. Consequuntur iste repellat. Quis quia illo velit qui est totam.\",\n    \"url\" : \"https://web.example.mocklab.io/506062\",\n    \"sid\" : \"IM06BC2A89FfDaF2AF4C6c7dDD5ed886ee\",\n    \"account_sid\" : \"ACAbEBaA1E500Ae7B54CB0E95D88fe10Ae\",\n    \"attributes\" : \"rmc27g5z58e042wrn21inw59gwecsn3j89bw24zxkp2srriwdlfyp50x8826u8t005ifhfjw7xzvacmuo4smdge7r09sjrwkrvq973ob6n696v8dg2km367kclsvj26bpbbkhr6zypmmyjfuq0u6yhr3cz3rhlci7cbabj5b28za4lx8h9f6r\",\n    \"links\" : { },\n    \"content_sid\" : \"HXA21E1707aaCe1E57Fe1fbf568F6be920\"\n  }, {\n    \"conversation_sid\" : \"CHB6d07Cae1b47F72Db0b0dE858C45DEd3\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-08-20T11:26:36.786Z\",\n    \"author\" : \"jwqdhlj86bnsiyh6e4a21ym6bxike8kf9mk3i585fi8v41sixyv5kywdjswqkn8ttkky7m5eua06gm\",\n    \"date_created\" : \"2022-11-18T00:06:07.786Z\",\n    \"participant_sid\" : \"MBE6Fcd2bc8Cb0C2b2bF6d81aaEb4562e3\",\n    \"index\" : 1567363731229361015,\n    \"media\" : [ { }, { }, { }, { } ],\n    \"body\" : \"Vel illo reprehenderit voluptates explicabo qui nostrum ut. Officia aut totam aut vel officiis. Tempore est sed corporis cupiditate eius adipisci quis. Unde est totam neque et.\",\n    \"url\" : \"https://web.example.mocklab.io/661309\",\n    \"sid\" : \"IMbca8Ab7bdd0787aD10b6cf531aBDE9A9\",\n    \"account_sid\" : \"ACab8FBe1D6746ca452E69D44E1Fa46e6c\",\n    \"attributes\" : \"ayvx06a7jkfj5kivmu0uw4asillglgu\",\n    \"links\" : { },\n    \"content_sid\" : \"HXfE3279ae2db4BD1ecc295f2A25Fb24Df\"\n  }, {\n    \"conversation_sid\" : \"CH98d1e0524ff44DEC22C78d6f730b2f3b\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-12-13T01:41:45.786Z\",\n    \"author\" : \"95giqyjqcyxhj836y9yst91nmiuhez6j4yysyt3g0fuldep7gouzssyvxbe4v5eofmichydbzp2drnb6z0ax4crdavjhr7majzky2522\",\n    \"date_created\" : \"2023-04-03T21:18:34.786Z\",\n    \"participant_sid\" : \"MBf86aE6C0a1F6FB29e89D6BFCb785fFea\",\n    \"index\" : 5353010520492806458,\n    \"media\" : [ { } ],\n    \"body\" : \"Accusantium molestias accusantium. Voluptatum eum iste aliquid ducimus non id ex. Aliquid eaque vero. Quia perferendis explicabo dolore distinctio sunt.\",\n    \"url\" : \"https://web.example.mocklab.io/340540\",\n    \"sid\" : \"IM84F8fc5eEdd4b3BE3a4bEB4DddFa3B7A\",\n    \"account_sid\" : \"AC0C05acefcfBAF48D523B0E0a7B17dBdc\",\n    \"attributes\" : \"sig5lant8ialsdjv8bzji7engxwgpc4y640012k3opkdjllekvwzndafig0j3wq2gboqtycf15j90ew0x66obsnfizi5sz73yn94d2soaoxdq0fhwgprdtym5atdz0p0bou89h76jknywya4khte8fe\",\n    \"links\" : { },\n    \"content_sid\" : \"HX51ccec3f6DB7B1E932663FA6faBBD46f\"\n  }, {\n    \"conversation_sid\" : \"CH7b75Bf5f9DcCA993f0Eb7f8D3cdDCDC3\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-04-20T10:57:12.787Z\",\n    \"author\" : \"8mmdqdwz88f9iwbvhkvu8rgel1x39df5g9rkdv1ie0y3g5q39twmeu9ipb0nanjradfugfx7y6ahvctbtl0j3sh3qiq8xxtrpye6mpz49abjb\",\n    \"date_created\" : \"2023-09-20T02:30:27.787Z\",\n    \"participant_sid\" : \"MB587B9E0dAadD93Ebd8a78794Cb958Df2\",\n    \"index\" : 3099785101682790759,\n    \"media\" : [ { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Qui reiciendis enim iste omnis non ut commodi. Ea rem voluptates ea. Dolorum necessitatibus beatae odit rem unde.\",\n    \"url\" : \"https://web.example.mocklab.io/058465\",\n    \"sid\" : \"IMe527b1cEE4cD45df51F9Eeee2c84Af4B\",\n    \"account_sid\" : \"ACb3ABFDFeda6c722b90976A790Cf38Fa4\",\n    \"attributes\" : \"scn7bbj548do5ci8ov4o7slsglfbjz4pcu6j1ohgng9m1r\",\n    \"links\" : { },\n    \"content_sid\" : \"HXfbe6b5300Bb9D852aaD0EC41dD903Eda\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da5c2eb2-bbf6-437c-b7db-520c9623d2ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.787504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c72b2fff-7d95-4e35-a148-d72e7c0aede3",
    "name" : "Create a new conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Bobbi Nitzsche\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-06-18T00:12:54.785Z\",\n  \"date_created\" : \"2022-08-31T00:02:06.785Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS9e8A5ae864AfDBCa96ff1ccD5d2f1314\",\n  \"url\" : \"https://web.example.mocklab.io/202267\",\n  \"sid\" : \"CHE7B4f82eAB8eb2bdB0EF8e2C86aCAcEC\",\n  \"unique_name\" : \"Yadira Rempel\",\n  \"messaging_service_sid\" : \"MG8FCE326A6cEFD0FC8357D6AB4962eb58\",\n  \"account_sid\" : \"AC49e4DBcBe534258C1Ad20c53DBf7Fb45\",\n  \"attributes\" : \"6f7h46uykqtoy5poon566chmr5iyltsvrp6rwwrjkvkp719hmzds7jx6xyzj8cg1nk0cn5n2p57q9914yylklb31unixu6a3jo5wqi6m3eqf0luyvsnp2hpkt4a2n6r2el03ee5xwslggqnnmxhotch3eps0zx1ht3j1ph74jgkllnh7u11na4e1r5klyeeyk\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c72b2fff-7d95-4e35-a148-d72e7c0aede3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.785949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5eea5ab4-3a5e-47a2-bc5e-7e07e528ec3d",
    "name" : "Retrieve a list of conversations in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/335570\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/046406\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/771643\",\n    \"page\" : 8931550709056772225,\n    \"key\" : \"3565mph0zfzj56dp7flpsdgd09uljxycof984jywmftfwr93oicogg2sjcl0w9n0y\",\n    \"url\" : \"https://web.example.mocklab.io/902582\",\n    \"page_size\" : 4119702764905773058\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Kamilah Rutherford\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-10-25T08:24:52.785Z\",\n    \"date_created\" : \"2022-12-29T19:35:52.785Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS9eFcDaE347aFff70c2FE39A5a9FF66D2\",\n    \"url\" : \"https://web.example.mocklab.io/442537\",\n    \"sid\" : \"CH2b2fAFBD5e8661C312a9dbC7F46e3DcF\",\n    \"unique_name\" : \"Lawrence Leffler\",\n    \"messaging_service_sid\" : \"MG1dF8Ae91af6018DB881CFbaF9E1dab0b\",\n    \"account_sid\" : \"AC605be82ffbd0DA4ccf0faed443F61870\",\n    \"attributes\" : \"c49vpzh5r2e932s02bg76f6xvpauq381cdrwqshfmw9zqdoeoox\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5eea5ab4-3a5e-47a2-bc5e-7e07e528ec3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.785562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3cca1cc7-b8ce-439f-9f01-1f220b4efb78",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"ACC1CC2F0A01b6fe9d638B68Ba59690760\",\n  \"filters\" : [ \"709zovqagj4tepj8raggyy7wa2e8v5dl\", \"dd0q3oaydbn1s7649jactrlry474h1ghw6zowkezp8v9fuubqg6o6fqlwuccsik7738t7x9m6xulc3cgd55kq7b6h3dtgvy5nt6t2z52puzd3lagifb4tpgy2l70j45nbb2cpncwcqv5k\", \"3tus7os2s4dua4gpko2057id3u6mc80kg7rh6r8ktvp3uoajdanwi6hofu91z53rqmhk0goo4lk5vf0khov3gyz6rvs5e3djt000q8cu1ydfkmrgo7i53magqhcsz767989eo\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/996550\",\n  \"url\" : \"https://web.example.mocklab.io/626319\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/220788\",\n  \"target\" : \"flex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cca1cc7-b8ce-439f-9f01-1f220b4efb78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.784837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ad01c26d-178c-4761-aad5-28560ae39c53",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"ACfD9931df3ABdAc39109E89A1DD9A78AD\",\n  \"filters\" : [ \"i9m4zb1udjt7yhv4gmw7njjpyf2ecgdwhzd2mm4kg0ipu4uhxufp9gtng44rv4mwtyuwruxw2nussln4yeqwoaiaj2ypb2kd03we754qb4wwnqz3c981m7n9n483hn7vplbnqfpf7gckxca\", \"1czrrfks5133dg1pnq6bn184eqo76s1flritu6zb09k01r04brwbqadm1v55zznjygxsql2tknezb31291hpgd7wzoxifq3ljz0a3k9malkzzxfcqef\", \"8k2m7boviwjllurk440onma6pjycclfzhjjcqx592h0fjvbpsepda7b2q7pmalqirekdc1gq0betq02l\", \"zyxvlop0swt4spyf35bo21p640ziofbw3vnpbnmhk9jr269psu020ukrv63j8f6n5up0jf8oowv1qagm9\", \"crti7ye10sjp17uug2okqejymybctok5scs4bovhuezj17chd40dissas0nyf8bs33vh4a4e7u566j6o7tjntnmkugnqpdheo0\", \"c9m4tt18l0fxz0ze36bmfkwwpnwifj3e4g4g0it70t8qsqu7a1wrgnkl6att6w01odhvepmaktfr5vaxkp98j737i9fl6fxegkg8da8xhcl8e88z70fv1v0b1w38fehuw59xoma7fif560gx03cbk7otz\", \"58zt1zbnzve3o40vyw0za2a8d4ns0uua2qrnd92ob480n5e3rc19f9f810tsv0w12mhtnt1814mhuwaujg23n8uac98bf6mfestxzckknmniw3\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/149726\",\n  \"url\" : \"https://web.example.mocklab.io/378501\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/303392\",\n  \"target\" : \"flex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad01c26d-178c-4761-aad5-28560ae39c53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.784531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d3c72a8-d483-415c-aba4-8d1b20cc2769",
    "name" : "Update an existing address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/deqt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Enoch Schaefer DDS\",\n  \"address\" : \"fsvfq9dsyx02il85us2wj4a1jea2rg7d4cuzirslf3vv3vfu2qlqzf7\",\n  \"date_updated\" : \"2022-09-18T13:36:26.783Z\",\n  \"date_created\" : \"2022-05-21T04:38:09.783Z\",\n  \"account_sid\" : \"ACeaA48F4cd315FaF460EA38cC3B8FE6Af\",\n  \"auto_creation\" : { },\n  \"type\" : \"z785ljaw7ugdtvj4v3zffd3wkxmlc7wcvsuiu23kg8ocjlmiuq322cknf53jnqpu6u9t1eky5k92vi68vgzexrdqox76mmg5pg6u1z4bild3hmehgcddnkpe34z25qzdqz4giq8fb0f7ajzuqnz0tp6qn0szkqb7qzm\",\n  \"url\" : \"https://web.example.mocklab.io/107798\",\n  \"sid\" : \"IG66b06bcbe04A3c00b8EECCe10ABdB3fc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d3c72a8-d483-415c-aba4-8d1b20cc2769",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.784129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a5529988-9043-42f1-8658-aebee4f0bc2f",
    "name" : "Fetch an address configuration ",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/dx7g",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Nona Crona MD\",\n  \"address\" : \"skq90rftnhq2f111pt2gun62mw6ehsyfge7e7vzsh2g2cnwrzu5129lamh0aek5i2nkfe3ihbsooebh821lh5oxp6wtves7yihx2dwgsrvcfikv3o64w6qqgwf6rqoyy3dme5gpsi\",\n  \"date_updated\" : \"2023-01-27T23:03:46.783Z\",\n  \"date_created\" : \"2023-09-03T01:56:09.783Z\",\n  \"account_sid\" : \"AC4c76302CBe290Cb6F2D2cE18f3767a1E\",\n  \"auto_creation\" : { },\n  \"type\" : \"jcw1i3r7oh3wnb02w6q5y2zd1lkh83kikwqzysmlgwggtyu9e3sw4g4t4e7y7fbo0bxr\",\n  \"url\" : \"https://web.example.mocklab.io/645711\",\n  \"sid\" : \"IGe7A83F9e3c1e8D2FCdF76bcaac88AD9A\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5529988-9043-42f1-8658-aebee4f0bc2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.783795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e70c97d1-94a0-4105-a022-2d9378e7fbb9",
    "name" : "Remove an existing address configuration - 204",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/ag1e",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e70c97d1-94a0-4105-a022-2d9378e7fbb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.783444Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConfigurationAddress"
        }
      }
    }
  }, {
    "id" : "dd968d7b-708c-4745-ab40-dbe9974c5e51",
    "name" : "Create a new address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Houston Jerde\",\n  \"address\" : \"p0jhcyrb321rfsd1m6att3gza86rkn3747rtqm2g5r88kroycnrq2ofku71m61sw8mqhtjiujujd9pwc5abu7t1f2ixb8n5svee13kivy5h4cs1fl0gb\",\n  \"date_updated\" : \"2023-08-04T17:13:53.783Z\",\n  \"date_created\" : \"2022-07-02T23:33:11.783Z\",\n  \"account_sid\" : \"AC92eDf3C304f0C4eAC38aC2ec1c4b8C4b\",\n  \"auto_creation\" : { },\n  \"type\" : \"fcc60hev89nfecc0bwz1yh0xt5krtwihbdo40zti3tjnqxl27pco4ijzz9b4cks3t638lxd085vnnmr4vi6n1xsx1mc7ozbbxmc7eeywhlm15b368x4mklpdhaajbkicjgj8074s91gs6ppwox\",\n  \"url\" : \"https://web.example.mocklab.io/581150\",\n  \"sid\" : \"IG856EB5112D1bFef30DEf4Bb1b5D4aDD2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd968d7b-708c-4745-ab40-dbe9974c5e51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.783306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c1bf417f-3ac7-46e6-8ccb-4f2f6c89b426",
    "name" : "Retrieve a list of address configurations for an account",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"address_configurations\" : [ {\n    \"friendly_name\" : \"Adella Considine\",\n    \"address\" : \"ykimyd8mf6hpgb5zifcccpktkodnq68hzacpk540tihzxrs7\",\n    \"date_updated\" : \"2023-03-30T22:09:17.782Z\",\n    \"date_created\" : \"2023-03-12T05:00:06.782Z\",\n    \"account_sid\" : \"AC29d35CCAbA276fb9B1bdaEdAD5Fd7cDd\",\n    \"auto_creation\" : { },\n    \"type\" : \"02q3php5e9gzfsd96ab5p74nv0e7ak2o1is9crrdli0xpx31k36ztvkjm\",\n    \"url\" : \"https://web.example.mocklab.io/885288\",\n    \"sid\" : \"IG9114268a407e7dd5aCbD81a89bAEfBB0\"\n  }, {\n    \"friendly_name\" : \"Ocie Aufderhar\",\n    \"address\" : \"lo9kj98aaksrgz7w2x\",\n    \"date_updated\" : \"2022-12-27T10:57:49.782Z\",\n    \"date_created\" : \"2023-12-22T07:41:07.782Z\",\n    \"account_sid\" : \"AC3165FaAF1e2fBEa91Ab9b0540EDABDEE\",\n    \"auto_creation\" : { },\n    \"type\" : \"el2zoj9yud0pjumjynnp7ymjcuaodss4hidjwowa3vkqc1j1jgizkhd2u9jzlmxy634upuhtnwctt407swij47lapk3o5djecy3rgygfi60pr1om0zwrlt93sfenb56vrede8jl4i49cac7kr18rdbdlgfvzwuuv8gn90blcufju2b5um3d0i\",\n    \"url\" : \"https://web.example.mocklab.io/764282\",\n    \"sid\" : \"IGf89FD11bF98d8ceEbf1BabaAeB891D0d\"\n  }, {\n    \"friendly_name\" : \"Dr. Antonette Zboncak\",\n    \"address\" : \"j9uhdff0nspk63qxsdpvzwi0tib5ozuh3neenqq1af5cqwh7\",\n    \"date_updated\" : \"2022-10-12T12:00:14.782Z\",\n    \"date_created\" : \"2022-10-02T06:14:34.782Z\",\n    \"account_sid\" : \"AC71bc55BbeED74c2f8E24b702eD9C4416\",\n    \"auto_creation\" : { },\n    \"type\" : \"5yg50326b1lcmhpeadpxhhsetiywr19c0b91sdqhjkardnv7ewmnf5yho701busytx2lhui92dyrjw3eeqcwse77tp8qzhroukmffc5qmofeu1yzfgv3kjr0vbizbgze15wlnw99g7vykk7b5hmmkczpjuq38dn8e8y8jnad3jg8sb3xni2r7p79x2fgc2nbj8m0\",\n    \"url\" : \"https://web.example.mocklab.io/398115\",\n    \"sid\" : \"IG9Dc9deF00A70d50E1b7c24E9ac9c532B\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/371897\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/356306\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/528814\",\n    \"page\" : 5175015952580047790,\n    \"key\" : \"qm62a2cuh10ha1dkt4g89g2uyuykjmk7sodk\",\n    \"url\" : \"https://web.example.mocklab.io/895195\",\n    \"page_size\" : 5004960465421037087\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1bf417f-3ac7-46e6-8ccb-4f2f6c89b426",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.782905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConfigurationAddress",
          "schema" : {
            "properties" : {
              "address_configurations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.configuration_address"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConfigurationAddressResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4a772c5-1414-4cd8-836f-7d00d71c64c4",
    "name" : "Update the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"IS3aF3A202d1ABad1BAf9D64EA733fb0bA\",\n  \"default_closed_timer\" : \"2022-08-02T17:07:37.781682Z\",\n  \"default_inactive_timer\" : \"2022-10-12T15:18:37.78171Z\",\n  \"account_sid\" : \"ACbAe0D65D17cB4b51A867856fF2DAe3fE\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MGc0b2C46C8f75d0df7ecC5c7EFcD91dd9\",\n  \"url\" : \"https://web.example.mocklab.io/952805\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4a772c5-1414-4cd8-836f-7d00d71c64c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.78189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d561e23-e5e1-4b0d-b840-3b535e693139",
    "name" : "Fetch the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"IS8198AaBFAe7B0fc633E81D1b71BAfF5b\",\n  \"default_closed_timer\" : \"2022-11-23T16:37:37.781258Z\",\n  \"default_inactive_timer\" : \"2022-10-31T14:38:37.7813Z\",\n  \"account_sid\" : \"ACbf5682Dfbc1ffaCE0F6D18cedFCd90eA\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MG5cE83Ae0ddDF4edcA5aab2B1f02d3BBC\",\n  \"url\" : \"https://web.example.mocklab.io/311206\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d561e23-e5e1-4b0d-b840-3b535e693139",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:37.781601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}