{
  "mappings" : [ {
    "id" : "4ae8a93e-3f1b-4959-8837-e5d244f52c6e",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/s5j5/Conversations/hpdr",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHc9DbcbF4a1D73FFdbAc246e6Ff3c54F2\",\n  \"friendly_name\" : \"Milford Mayert\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-11-30T10:33:50.175Z\",\n  \"date_created\" : \"2024-01-05T20:56:04.175Z\",\n  \"participant_sid\" : \"MB8dFDBE5FF1f60e7750bBF0d8F4b69cec\",\n  \"chat_service_sid\" : \"IS51BBADdCaBde0F781e4beCE6db9A18F9\",\n  \"created_by\" : \"qvv2bvgt8rkjo0wodlesh25f1okvf0adqatxpusf3lbq9qr8yt05cu5pnvuhofb64j4o3v\",\n  \"url\" : \"https://web.example.mocklab.io/366560\",\n  \"unique_name\" : \"Criselda Beahan\",\n  \"conversation_state\" : \"closed\",\n  \"last_read_message_index\" : 3479594665510441743,\n  \"user_sid\" : \"USEEd0D4ECC8Df0fBbE7AEa89F71E2eEBe\",\n  \"account_sid\" : \"AC5fDB46feA7C1B8aED16A6D7a07b23Bf2\",\n  \"attributes\" : \"k0fxk0s5146jml72szfg66u5i98r3r96guk69pop4v6vmiympb477nivdqeai0zpydh4r7u77nai050x6kz\",\n  \"links\" : { },\n  \"notification_level\" : \"default\",\n  \"unread_messages_count\" : 5184725614567605602\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ae8a93e-3f1b-4959-8837-e5d244f52c6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.175541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3f02182a-b3e0-43cf-a2ff-d0204da8e2d8",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Users/m9l5/Conversations/520d",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHd7Bc02b38Bb9aAE344d35cFDcAFC0A21\",\n  \"friendly_name\" : \"Roni Wolff\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-01-01T18:56:55.174Z\",\n  \"date_created\" : \"2023-05-15T03:19:27.174Z\",\n  \"participant_sid\" : \"MB4C52faAcCBD07aFa08FCFF85AFEB836b\",\n  \"chat_service_sid\" : \"IS9ED1eBfAafA5ee0cCa5bcd8dac4A289f\",\n  \"created_by\" : \"k6g51ygrznghutwjfdb06ur2sneprpdszvb266u2wcmau82mx7eh8sjujmax6ooia4qn2fit6m5w13xjmhegvdc6px6xvja3df2skm5p9fq3cz2mwmelqa2k20dldetxwqqylqbmmt8zvns35losx7hhz\",\n  \"url\" : \"https://web.example.mocklab.io/083327\",\n  \"unique_name\" : \"Terry Murray\",\n  \"conversation_state\" : \"inactive\",\n  \"last_read_message_index\" : 5182468286299055274,\n  \"user_sid\" : \"USDEe6432CA15B47cE3caf1b9c8Ad0F658\",\n  \"account_sid\" : \"ACCeAb4e44ae5b84A8f41eA7F69D01a713\",\n  \"attributes\" : \"g1y7f7ya43zrbbpwxqoctsplshvotqd0qnn5doq66rhx2g2egr6sw7tnedyd0wkgwsxwda7u9fxw990ipu1y2ojgyax4syesdlgrf78sk3p9z3nnzuvzlbc0pm184hbs61uzno5bn3agfezvvz8v7szy2wiym87wy45nwlnbzg70y9xdgl9l5ewg6g3hs9jx1\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 6222731977231187471\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f02182a-b3e0-43cf-a2ff-d0204da8e2d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.175043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5e298800-d30a-4f69-8e16-d52cc231ec37",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Users/ovh0/Conversations/zi2b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5e298800-d30a-4f69-8e16-d52cc231ec37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.174493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUserConversation"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "73e99216-582a-40dc-b419-c192db5585bb",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Users/3g1u/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/280168\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/310243\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/075370\",\n    \"page\" : 6968400466656919760,\n    \"key\" : \"dk94pyzi3y09upq5m7p87lh8c1virl2k097mtnm5pkwhsl7l8\",\n    \"url\" : \"https://web.example.mocklab.io/043045\",\n    \"page_size\" : 8130756543163137777\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CHaEE0Fcde1d1B0DFb91d726DB1Eab0C2e\",\n    \"friendly_name\" : \"Ms. Rickie Abernathy\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-08-18T22:51:00.172Z\",\n    \"date_created\" : \"2022-09-26T04:26:54.172Z\",\n    \"participant_sid\" : \"MBE5FcE5dEF8BdEed33C6Fa4EEA6f3bCAd\",\n    \"chat_service_sid\" : \"ISCE03fEA1eb89cf168A17CC9bBF543C25\",\n    \"created_by\" : \"cdx81\",\n    \"url\" : \"https://web.example.mocklab.io/185869\",\n    \"unique_name\" : \"Isabel Schowalter\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 3160169090250038262,\n    \"user_sid\" : \"USa8F1A3Dea9cCcCaa82bab55eb99C9bd9\",\n    \"account_sid\" : \"AC4BebBCB765FcB58ECfac60B7993aca75\",\n    \"attributes\" : \"3246nqs5yufpmsxhn568ky3xd46mizuzjrf020fgl4bs\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 717724487641643602\n  }, {\n    \"conversation_sid\" : \"CH122fdAc80B4b2550b03804D2bca1A18d\",\n    \"friendly_name\" : \"Chae Metz\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-07-03T05:22:02.173Z\",\n    \"date_created\" : \"2023-02-12T05:01:52.173Z\",\n    \"participant_sid\" : \"MB6fc26fead7A0bA7a3a6BF77bD5271f62\",\n    \"chat_service_sid\" : \"ISB3bAfee38EDB61CBcC28921EC5f2CF2d\",\n    \"created_by\" : \"oli86uiujdb4lywkfnht877633ed6fp4ihojxxmub97s7rcpydroed2awnag4kevraavf2q5zioqxnuul6tqljwizaxqswdcxvb07zuwmsu6nzxk8\",\n    \"url\" : \"https://web.example.mocklab.io/633079\",\n    \"unique_name\" : \"Perry Wilkinson\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 7127757138884630951,\n    \"user_sid\" : \"US68C2E8FDdF57B63200a1f4cFe7384BF6\",\n    \"account_sid\" : \"AC4b04ba43FAeDAfcCB80cE32a21EdeCE1\",\n    \"attributes\" : \"a3bh5ldesn4ktrxo8dnyaw5tqzcxnx74uzhzftw8n0spw2mcu870mphh5oamiw0r509hhvzzl2f0gbcnzzrn3sjrs5k6kch191a2blitaqi712s2bwswv6cnz\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 1623241366344615232\n  }, {\n    \"conversation_sid\" : \"CH20CaC2d27FffEc5a4bcbBec0bfAA85be\",\n    \"friendly_name\" : \"Zachary Crist Jr.\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-08-18T21:47:54.173Z\",\n    \"date_created\" : \"2023-01-26T14:31:15.173Z\",\n    \"participant_sid\" : \"MBeefbAD96c1cCfaBFE2ADeB5CE18eA5d5\",\n    \"chat_service_sid\" : \"ISB0EB4C3bAbbaD2c77334B4c047AabbCA\",\n    \"created_by\" : \"sym6xnsvv5l8\",\n    \"url\" : \"https://web.example.mocklab.io/540392\",\n    \"unique_name\" : \"Hung Connelly\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 7532961590842109587,\n    \"user_sid\" : \"US1D94fd50e24EeB4D2262c30e9fA75Dad\",\n    \"account_sid\" : \"ACAFeeeA0c3384e85dFa4564EB56Ec321E\",\n    \"attributes\" : \"mjtbm196bdjv60k6fkqmq2crzykxoq4n85feqoypdps5jkmtln3nnawf33w2l807iaemmrb21g79lhxnqj8ju7me894eszv8u5mnhrowj\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 4397277253407946624\n  }, {\n    \"conversation_sid\" : \"CH6f89Aec6798212dF257CE63fe26Bb8ef\",\n    \"friendly_name\" : \"Demetra Watsica\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-10-06T00:35:38.173Z\",\n    \"date_created\" : \"2023-12-17T20:03:51.173Z\",\n    \"participant_sid\" : \"MBF47Aa97e0bea6bd62eddbB38FfF8EbC7\",\n    \"chat_service_sid\" : \"ISfc7bacDee65CEec2e8482b36f16470CB\",\n    \"created_by\" : \"vy35gywyq1p1mtyv5nyh6vpgzu2uc3msa3gx3u4\",\n    \"url\" : \"https://web.example.mocklab.io/518707\",\n    \"unique_name\" : \"Maryln Rohan\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 9028516135720123863,\n    \"user_sid\" : \"US90b3649d630D8Aad907B0ef3FAb6aD0e\",\n    \"account_sid\" : \"ACf7Dec9cc41D4b7c136fAaC3C7F8270bf\",\n    \"attributes\" : \"014sdsa1bguocp3okld385nsirwkoxfz476jp700m2v6b8acoxm6pe0lnrrj7jw1pq8rl01ztdtmmd4xy3x7fnp83fxdn5en6uyyat48enkcl1j8mtb2i7suu72zl3ehu2gqn53p4zdybgdd5ioztv0bozcbhnw2rsrauasv7ggmdtgslm\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 6172620290164889767\n  }, {\n    \"conversation_sid\" : \"CH9dB719D6F8FaF78F6822Beff2C1f0C78\",\n    \"friendly_name\" : \"Jacques Denesik\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-05-13T17:25:21.173Z\",\n    \"date_created\" : \"2023-09-19T13:04:51.173Z\",\n    \"participant_sid\" : \"MB7E88868bee63BAc5E1cA93cd1af60DdB\",\n    \"chat_service_sid\" : \"IS17B29b7d1d9E8acFf223CC724fc81a7d\",\n    \"created_by\" : \"twhija0dkrltn7g5zvr5wq6awzm6ow5rc2b7blx0k88rrrszl1mu44rfhx4szw8wxdpykh3k0ou35p34uzazbv34ov3m62jdkfde2caqrasg238a55jqtqn45epkd0jvu14u9k35an\",\n    \"url\" : \"https://web.example.mocklab.io/376601\",\n    \"unique_name\" : \"Jaquelyn Pagac DVM\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 8682339007124775825,\n    \"user_sid\" : \"USc571bF5D7b5833B0cE55d13A94F7eCFD\",\n    \"account_sid\" : \"AC5bCa2A9Cec9bD6eDb4dFC11Cea6b3f4b\",\n    \"attributes\" : \"yhfz4aqa7wqmd89jhkuxmb3uq9o0itmmv9i67yys2ea5gqxaouj4kgjxkzyi92qtat2e1tbe4ds34sbrsh7mv97jjktxet4g7s\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 7997352022038063666\n  }, {\n    \"conversation_sid\" : \"CHc4cbcAC6EBe9D45FAb65E4A2F2e9fbaF\",\n    \"friendly_name\" : \"Barrie Steuber DVM\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-11-30T16:37:25.173Z\",\n    \"date_created\" : \"2022-06-17T20:01:58.173Z\",\n    \"participant_sid\" : \"MB8aFEB8813D9fFe1A62949F73b853cEdC\",\n    \"chat_service_sid\" : \"ISF4ACb28EB5f8DDEDaD12E4fF7e5adD18\",\n    \"created_by\" : \"lz768s56h6jxmrsn5xrujsxn2x6j1nasscw91k4mm57evn3v0s7woycn8spsbap3rlamk4onm9t9mzsamp46mgmamz7k8cc60q5q52tacf81nkny7oskasqws94drczxawscr4y5gywsz039v9307kuyiyhbdm6xxqzxyo\",\n    \"url\" : \"https://web.example.mocklab.io/693918\",\n    \"unique_name\" : \"Marcelo Ferry\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 918817341842888988,\n    \"user_sid\" : \"USbc75A5d55629066187d9ed4fD5EE6e79\",\n    \"account_sid\" : \"AC4C7aa0F7Fe95cc63affdca927f3ddeaC\",\n    \"attributes\" : \"3tttvufx9t9j0x2x\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 3428802300639987211\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73e99216-582a-40dc-b419-c192db5585bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.17432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user.user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListUserConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "8fa7e1be-c403-4e88-8728-f6ef89a58294",
    "name" : "Update an existing conversation user in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/9802",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"George Considine PhD\",\n  \"date_updated\" : \"2023-08-19T07:46:05.172Z\",\n  \"role_sid\" : \"RLFec6Dda3d3Cdb4EB42abFC1E1Af848AE\",\n  \"date_created\" : \"2023-09-20T08:13:15.172Z\",\n  \"chat_service_sid\" : \"IS2CE5c63bF03Bdb5d3Bf77cB822f57968\",\n  \"url\" : \"https://web.example.mocklab.io/291499\",\n  \"sid\" : \"US5da2e7B9F9FF2f0E001BBf4fa643fbf7\",\n  \"identity\" : \"diwmf7x5o3i5k8ewbaqca6i1qdkxvzw4sz5klh6a3n9n7pe6xr6ngyr5js39ksbppydoojvvsidwijbubxvyy09h64g8u1mx90tvvqcl0kd8l3ggwraxp0tf55vv25btxnnonx05n1ckq1ujpepx8sqcd\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC4Ab55D266732b91eB0497e49a4de8aCd\",\n  \"attributes\" : \"u19518fk0n4wyefooeow241vmh9g3epa3xacbom6dlwulzd01t496hayv98pdu\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fa7e1be-c403-4e88-8728-f6ef89a58294",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.172381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "372e6461-c382-4af3-940b-88951c95f08b",
    "name" : "Fetch a conversation user from your account's default service",
    "request" : {
      "urlPath" : "/v1/Users/2b1i",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Teresita Davis MD\",\n  \"date_updated\" : \"2022-10-25T06:40:56.171Z\",\n  \"role_sid\" : \"RLe7bcA3ffbD4aD1aDfDd39dcA52eCA77D\",\n  \"date_created\" : \"2022-05-16T08:13:28.171Z\",\n  \"chat_service_sid\" : \"ISbEcE361E0d249EEB2EEaa1F5bBa9BefA\",\n  \"url\" : \"https://web.example.mocklab.io/909285\",\n  \"sid\" : \"USdf867C9BefF90A81d31AefbEaE0A2f1C\",\n  \"identity\" : \"nnmrebu497yft5h7p83mra7siniiciuof\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"AC4a0BCD7DCFc8E91B2f6EEA5BD3C99A19\",\n  \"attributes\" : \"8lnlbhfhccf2sk4dsle7ep9iaxrk8srl07p9whenybxq8jcrdd1k\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "372e6461-c382-4af3-940b-88951c95f08b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.172047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "30d19475-4ac4-4505-9e00-340ae556b4ad",
    "name" : "Remove a conversation user from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Users/x2tx",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "30d19475-4ac4-4505-9e00-340ae556b4ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.171708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "db2d5e85-e70f-4719-bf16-c8bd7b152d40",
    "name" : "Add a new conversation user to your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Daren Predovic\",\n  \"date_updated\" : \"2024-02-21T19:53:54.171Z\",\n  \"role_sid\" : \"RLCEecad2eBacee567416dAdf7B0A0bE4d\",\n  \"date_created\" : \"2023-12-14T16:43:33.171Z\",\n  \"chat_service_sid\" : \"IS50EFdBa2baDeBA7D4aADf4bF0cE45D5A\",\n  \"url\" : \"https://web.example.mocklab.io/926403\",\n  \"sid\" : \"USaa0ff23BaC318DF68ddE6656CF7bb6c5\",\n  \"identity\" : \"9sq25amdpkbiink4w4nihyt69obe2fwu83eypn8m2bhg9avbv9qmgzzjv762ggjuorm0jwj7p7dsz6n5z1blzpf1qhfa0nh0z8uescpv95od26w8u3u7q4pk2sqe5k6d4\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"AC2D9fDa50DE98A3Dec702FBead0CdBF48\",\n  \"attributes\" : \"1utm3gn0dnthnw9ui0js3l6jqkusd\",\n  \"links\" : { },\n  \"is_online\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db2d5e85-e70f-4719-bf16-c8bd7b152d40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.171608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7ee9bb60-9fe7-4195-bd2c-690f60b9237c",
    "name" : "Retrieve a list of all conversation users in your account's default service",
    "request" : {
      "urlPath" : "/v1/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/220646\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/886653\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/733812\",\n    \"page\" : 9165810696429363235,\n    \"key\" : \"sdcxf7pt1fgibr8k646wqjopx91yfzulvok8o5o0fe5nyv8fuyye50dpa3o9iab0tpgtmtt4tkaxe2exz3m6jtmbli9vhm4s27q9dnnu2o3c186k0bb0cd2dtxvx5g\",\n    \"url\" : \"https://web.example.mocklab.io/003742\",\n    \"page_size\" : 2183981873059171973\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Hilton Oberbrunner\",\n    \"date_updated\" : \"2023-02-27T19:11:55.17Z\",\n    \"role_sid\" : \"RL1A659C0BBA320FBa0721f04Eb07a1BA9\",\n    \"date_created\" : \"2023-03-31T11:37:51.17Z\",\n    \"chat_service_sid\" : \"ISfFB33c9FBe8De6058F4D3C2e037fC4BA\",\n    \"url\" : \"https://web.example.mocklab.io/682592\",\n    \"sid\" : \"USbd8Bf0b9f6165FbFf9EFde6BB53b7D8A\",\n    \"identity\" : \"604afzr9l3qs606nn8sigfkimiqd9t0n55ukniifm44s9lmy87mqqolpeg1z3efla4ddy9az2k4czrtseuc9u668jf4rue6s9j26r39atub10un5rogpaib3hljdu5nhi486rehbjzobpinh1tk7axrj85qj5nwadb7itpjx8ivdlee9aasb7d4uc42job2\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACA14CF6b383f82Eae66bE29dA59FFECD5\",\n    \"attributes\" : \"4q97m6p6ayek870vv1tgmz2qru9loyc59oaitpyu9fkxrzg1dwy5wojostrweasnx78rsjs6dm36ikq4cd12kagj3twjch5hdoitifzios45ebu4sr7zmvbl59eb7z9xnztuxybr0su3rmsea8z4i65qse2w25y2xk4hjhlg9vugducepdal47qlic22wpjxeunlldve\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Ms. Jessie Kessler\",\n    \"date_updated\" : \"2022-10-30T11:48:43.17Z\",\n    \"role_sid\" : \"RL0C5B70DaE12eAd806DE2da1092CFC440\",\n    \"date_created\" : \"2022-07-20T01:08:01.17Z\",\n    \"chat_service_sid\" : \"ISd1fb9a6Ad6c356C82FDb6AAcbc71e01f\",\n    \"url\" : \"https://web.example.mocklab.io/616763\",\n    \"sid\" : \"US91ac1EAFEd646D3dF14a8c29B60F0359\",\n    \"identity\" : \"k4u4dfs6ub82m71hdnp9hzj4ac5zwdpzbadk76f00k67parasl00to2t0rgqqrgioptpap36zfmiip4oyar3wem95ybqbs045m4rq8rkofqsdcgrjryaqq6mqhgv1kmxq38foaw6m2hwn11q7mh8gg7pfd6z4u1dlu3w7chvbbnzrmorllsd5jgik1\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"AC624e6a26FC08C516Ba41B92F5ebFEeaF\",\n    \"attributes\" : \"hkkvxs9vmy8ogaq108462lzkmak9qd0q5tf9hvynbzinx8kx6tr7uxsy8a387umidvj1tifb9fa8kf3r5epvnzgmy7xdbnci9747g4as79odj7dtai5gqc3khg722nel81drobe9xu3cr4hare0c\",\n    \"links\" : { },\n    \"is_online\" : true\n  }, {\n    \"friendly_name\" : \"Dr. Emerita Roob\",\n    \"date_updated\" : \"2022-08-02T18:54:15.171Z\",\n    \"role_sid\" : \"RL28a402d9fadcAA84dDBaB1DAfFA1a9be\",\n    \"date_created\" : \"2023-10-24T04:44:18.171Z\",\n    \"chat_service_sid\" : \"IS5c61aEBf40A4dca8F79738eAA744ddB5\",\n    \"url\" : \"https://web.example.mocklab.io/344835\",\n    \"sid\" : \"US2Db6afADb0bccB47AeBbD2aEac95Db26\",\n    \"identity\" : \"h6vmh8nosc0xpchxiduifbrixojzd1tjvt3bgvj6kffmp457p9tzjynb1qks63uqzjo61e9ae940119kvoiqnn8oe5ug9tsailrmdhx5v1v3o4v8qnivf1wdcr4a2dzgel29zsfyj3pq3j7759mi9yoygy6f\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC33A650EDc50AF63D70CcdABDA2eFf48D\",\n    \"attributes\" : \"nwp69xoghsb8rxpu28ei1hafz0v3b08pjoxk3883bm\",\n    \"links\" : { },\n    \"is_online\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ee9bb60-9fe7-4195-bd2c-690f60b9237c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.171302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.user"
                },
                "type" : "array"
              }
            },
            "title" : "ListUserResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f6cf2a32-8702-49b2-8e01-df546832d2bc",
    "name" : "Fetch a conversation service from your account",
    "request" : {
      "urlPath" : "/v1/Services/IS62CBE480D8b4AD0B821dabC8aF3CA7Be",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Zane Kessler\",\n  \"date_updated\" : \"2022-05-17T18:51:02.17Z\",\n  \"date_created\" : \"2023-04-11T13:00:05.17Z\",\n  \"account_sid\" : \"ACaeDc1BEeEaFFEdD8D46Ef3BE9EFF8fE3\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/087358\",\n  \"sid\" : \"IS5FDcA880b541dE3B6f10cF9Ce4a7be8f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6cf2a32-8702-49b2-8e01-df546832d2bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.17033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b97fdadf-329d-43dd-b7cb-d19ff7a3e75c",
    "name" : "Remove a conversation service with all its nested resources from your account - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISF4F12Dd3cDcbededB4Bf5ae2DfdDFd6E",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b97fdadf-329d-43dd-b7cb-d19ff7a3e75c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.170095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "80776b92-e12f-4978-bc24-5512b2327552",
    "name" : "Update a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/ISa7Ad5059D5a085b3C4E5A9D5D219e8ea/Users/m48o/Conversations/0164",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHBbaf71977eDe8bf4ee0BaAF398cdf27A\",\n  \"friendly_name\" : \"Andrea Kihn\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-04-07T19:58:12.169Z\",\n  \"date_created\" : \"2023-12-23T05:23:02.169Z\",\n  \"participant_sid\" : \"MBE4B87fadF8fE34bd9CC0f1608f513bDA\",\n  \"chat_service_sid\" : \"IS05b3FBeEF241b472ba12c9Fdfebc1FEe\",\n  \"created_by\" : \"8leok0hucm2zyzu8f71lakia4aoodr7ptouvkjfobpqun07gtaihxut6dh1y2\",\n  \"url\" : \"https://web.example.mocklab.io/607922\",\n  \"unique_name\" : \"Carlton Halvorson\",\n  \"conversation_state\" : \"active\",\n  \"last_read_message_index\" : 964073719271034363,\n  \"user_sid\" : \"USeBa63Cc35Bf13daf70C57435fdBC8F05\",\n  \"account_sid\" : \"AC56d531DB515AFB05C2Ac4eABDC435a4c\",\n  \"attributes\" : \"h16s0keyer89pf8bg0wf4s0kzbj1qnyn5g47f9o081zgwlynsz0pnbwm7yjgws9ofcad00oylfwo1ez51u2cmfal67ea5jenwna3dqw01sftjo9vzh893s5exateq8han9a43f3alxfyk52bot0oka0m61ctn2vb5crtj2h8o4l7jy0cnq24zl6\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 3447514309315158826\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80776b92-e12f-4978-bc24-5512b2327552",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.170051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "1ecfa23e-2604-46b1-bc36-bf28da575e34",
    "name" : "Fetch a specific User Conversation.",
    "request" : {
      "urlPath" : "/v1/Services/IS2f522a6D771B55865327d8F3c00F4F2D/Users/5a0j/Conversations/736a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHD452ad99fcd1d73edbCA3bE549db4b2E\",\n  \"friendly_name\" : \"Enda Huel\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-10-25T10:16:16.169Z\",\n  \"date_created\" : \"2022-04-19T12:40:09.169Z\",\n  \"participant_sid\" : \"MBEA2aDa46cFAC43fa961caaddAF3278b5\",\n  \"chat_service_sid\" : \"ISed4E9B7A3AAC2A6623Ce15fCcEe44F71\",\n  \"created_by\" : \"g6pl0z46gvy9wogsv4n2fs4dqmxjqnfa7enex5n3nm5o26bwqmvtr7dmof1b6eurjryz29nuw39jd8g7dn54h1vc9prdti3upyrha3i87mmp47l3rbkrpb0g\",\n  \"url\" : \"https://web.example.mocklab.io/944268\",\n  \"unique_name\" : \"Juli Barton\",\n  \"conversation_state\" : \"inactive\",\n  \"last_read_message_index\" : 8493993144027634976,\n  \"user_sid\" : \"USdfBaefcDC98B9EEAe2D1B0Cabb9cFc6A\",\n  \"account_sid\" : \"AC196Be0adBBBA00AFCFBbF717d0Afb922\",\n  \"attributes\" : \"cmkls4e1a1x25y6ndatve6kubp3z5zde3w4mehjcxyh8yfy8tu2bv3ien88ydi778kj6yn3n3bo9mmbygns3fnixw8mzi1\",\n  \"links\" : { },\n  \"notification_level\" : \"muted\",\n  \"unread_messages_count\" : 2718896021923498260\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ecfa23e-2604-46b1-bc36-bf28da575e34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.169526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUserConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this User Conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_state" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_state"
              },
              "created_by" : {
                "description" : "Identity of the creator of this Conversation.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this conversation was created, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this conversation was last updated, given in ISO 8601 format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "The index of the last Message in the Conversation that the Participant has read.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) and [conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "notification_level" : {
                "$ref" : "#/components/schemas/service_user_conversation_enum_notification_level"
              },
              "participant_sid" : {
                "description" : "The unique ID of the [participant](https://www.twilio.com/docs/conversations/api/conversation-participant-resource) the user conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the Conversation resource. It can be used to address the resource in place of the resource's `conversation_sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "unread_messages_count" : {
                "description" : "The number of unread Messages in the Conversation for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The unique string that identifies the [User resource](https://www.twilio.com/docs/conversations/api/user-resource).",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3ff84fa5-9197-4cac-ae98-9179b7b269c6",
    "name" : "Delete a specific User Conversation. - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISc1f7afa7D60f7baAb06Ffbebb641960a/Users/5s09/Conversations/yzqn",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3ff84fa5-9197-4cac-ae98-9179b7b269c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.168968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUserConversation"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7ef0b5e5-0829-48b2-a5c5-a81e0a5e3e31",
    "name" : "Retrieve a list of all User Conversations for the User.",
    "request" : {
      "urlPath" : "/v1/Services/ISC2Fb0dF4cf4c9bB8de9E9AFFF6d2416C/Users/6d18/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/670808\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/046213\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/653961\",\n    \"page\" : 1310675999573192562,\n    \"key\" : \"6sfvmuguc30ry9fjwmo893ph3w1705qcs32t93c91g0ejdvzn90s0ahd8oq0bfxysy\",\n    \"url\" : \"https://web.example.mocklab.io/353633\",\n    \"page_size\" : 5891335910344046198\n  },\n  \"conversations\" : [ {\n    \"conversation_sid\" : \"CHfDEBe9020F1c407F7b2cfeFBda95B62A\",\n    \"friendly_name\" : \"Dr. Luis Kozey\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-04-10T14:39:16.166Z\",\n    \"date_created\" : \"2023-11-05T00:52:40.166Z\",\n    \"participant_sid\" : \"MB39FC2EE8F81acEB9ff11B6c3aadf01A9\",\n    \"chat_service_sid\" : \"ISd0E9Bfe48c6dFaede472D9A29F46f7AB\",\n    \"created_by\" : \"3iokuj4n\",\n    \"url\" : \"https://web.example.mocklab.io/765574\",\n    \"unique_name\" : \"Ms. Marcelo Schultz\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 5050110358591541497,\n    \"user_sid\" : \"USff9dE0BF81CAEBfdd196a7e1f0Ae87cf\",\n    \"account_sid\" : \"ACbbf63D9fb85Dcfa51F3281eA3F89cBc5\",\n    \"attributes\" : \"lygno4gof6k7d6t3b5jcs90be4dykhi6hahpml7qcxr1dy4dtm6ktmwl3451ti0ktorwigxdzzgv85r112jr63128gcwoshiijl8y1ugaq6br6dynoqckge1ck62k2v4fnvrjel9f4d1ai8tjacn7g9vv8rw2cjefjhfwi0exsyzgdaayfxkek5k1\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 5881667004074353359\n  }, {\n    \"conversation_sid\" : \"CHCf5dab88c10662780fA9A089CaacF3bA\",\n    \"friendly_name\" : \"Joesph Wolff\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-02-06T22:46:35.166Z\",\n    \"date_created\" : \"2022-12-27T20:27:13.166Z\",\n    \"participant_sid\" : \"MBBb4af1DeADbd28afa28bCa0138C4Ce9D\",\n    \"chat_service_sid\" : \"ISbdd2beAC3e1BACe4cEAf27AEEcA4df08\",\n    \"created_by\" : \"0eji1mo4t0vof4kceag7mq\",\n    \"url\" : \"https://web.example.mocklab.io/953643\",\n    \"unique_name\" : \"Katharina Jaskolski\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 347534189881296730,\n    \"user_sid\" : \"USa4dCcBc6cafc9BB5BAd373e97DF1DEd4\",\n    \"account_sid\" : \"AC8f67f01D1FDa7C083ae471C2f90AB384\",\n    \"attributes\" : \"wrh686q15ii2j8mwj6fyarg2n24hfrfdq673zo9o4knhgjp3el85a9vwkjwbdk39eimtpzp2fpzg8gy244fh7ptqlsw\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 2297797197650075697\n  }, {\n    \"conversation_sid\" : \"CH367Bb9b53B935dDa09BaE75bf9EE2AD9\",\n    \"friendly_name\" : \"Jerry Barton\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-07-17T03:30:13.167Z\",\n    \"date_created\" : \"2023-09-16T12:34:02.167Z\",\n    \"participant_sid\" : \"MBa464e2CAFaC3fea1cF9Fc3cD3E4A37bB\",\n    \"chat_service_sid\" : \"IS5671Bfa959DbfBff8EFAc5DA4E9C24DF\",\n    \"created_by\" : \"1n6ngsrhaxnkgoh76ipvwnwal94ghwveb614gvtqat3k9z0cngnl1zkm96gz7c00wrft62nqfkot0sslvavdgmy79rra1u847a1i8idtmamz169hdv4oe8uw0qt1z0z6i33joq8a3qhipdzhtx81k40ufqhe4mup9u14szfyhaofye3thi9wge5dyapranv3x3\",\n    \"url\" : \"https://web.example.mocklab.io/125892\",\n    \"unique_name\" : \"Sherrill Little\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 4499308114663315967,\n    \"user_sid\" : \"USe1eA82d8975BB73bDDBAd7928ACA65FD\",\n    \"account_sid\" : \"ACCb2D062a642687dfa0fcfA85bEA40bDa\",\n    \"attributes\" : \"2z381pi8kkbzm9s5nhkmzg3lve774t9wljfilqt7d\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 4281879555420990972\n  }, {\n    \"conversation_sid\" : \"CHD303CBd6AB6A6AEC47fFbc1eedFF535A\",\n    \"friendly_name\" : \"Daphne Kessler\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-08-09T18:11:37.167Z\",\n    \"date_created\" : \"2023-09-12T10:41:02.167Z\",\n    \"participant_sid\" : \"MBcdd941A7aD3Bb7cbE08cF4827ef53A71\",\n    \"chat_service_sid\" : \"ISbd3AB2d3f0335047dc1800f51AB3Baf1\",\n    \"created_by\" : \"iks7gbro8b6ne6c2xrvz24q7ys0bdi6j352k5so4hu9n87odoh53en1si7g9y3t9qi001inqh7z45x3mwf1cu7d8jzomkbxcet0nj3gm0i3ahw9jnk9zvu\",\n    \"url\" : \"https://web.example.mocklab.io/406633\",\n    \"unique_name\" : \"Pearlene Hermiston\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 4463899983021015784,\n    \"user_sid\" : \"USFB86dfA9Bd5c2A1B71a5b1dCDda66a5f\",\n    \"account_sid\" : \"ACBd5deAB4102cA05AA3e97821c13ae6F3\",\n    \"attributes\" : \"jajr35ht6c51v7dm1w07644flbn9m9h4krf871vkc6pzb6idg9w3m8e3gtengjchasx4nhe65oo586ddmycza19kespq5py8dcgei1f3zbsmhir5eynoo96jlb7j3a6i8cz30t8siadk2o2dd7oegyc3n8t2ke5287gzxp18spp1bj6979hhwm8s8ngeihu\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 6652461475880379598\n  }, {\n    \"conversation_sid\" : \"CHE19adEd667E9Da6bcC5d51451a5aD23c\",\n    \"friendly_name\" : \"Antony Langosh\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-04-21T08:19:31.167Z\",\n    \"date_created\" : \"2023-06-03T18:13:02.167Z\",\n    \"participant_sid\" : \"MBFE12EceDe8Cb2B118AdD9bfa06046Fd3\",\n    \"chat_service_sid\" : \"ISa9D3d54DeB2322caF4B0e5Eb3419bDA6\",\n    \"created_by\" : \"0zkiod\",\n    \"url\" : \"https://web.example.mocklab.io/850701\",\n    \"unique_name\" : \"Broderick Sauer\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 6241196008367628197,\n    \"user_sid\" : \"USCe0ec0Da32cAbF091A7a9B4bc51b5aDa\",\n    \"account_sid\" : \"AC14900A6DDb0CedAaEE2BE99E1b561523\",\n    \"attributes\" : \"e9n4qmqr2358rbnfdqpmx9za1f4m0q8owggpum1wwsejffot2v4wbson7h48t0z58tygnygirwxsf0qxrh\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 3471598445749497399\n  }, {\n    \"conversation_sid\" : \"CHaDEe5fAa7fC2569EE91EAD40e3FFDf6f\",\n    \"friendly_name\" : \"Jeannette Fahey\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-12-13T22:57:03.167Z\",\n    \"date_created\" : \"2024-02-16T06:59:54.167Z\",\n    \"participant_sid\" : \"MB63b3adAbAB5BFDdFb050E14BBe2AdfD2\",\n    \"chat_service_sid\" : \"IS2BfDd47e1d7Fffc8dCFc838ee65881a0\",\n    \"created_by\" : \"90v5fypvbngvwrgk6712u5xbovp64m9fdibgnjvs3m9xtmjeqyhrgbfuzo02ta6pmrt43n5gdt3qz8v6xhqg76vfu1bk1b6l8hpq2t3h2m4cxl5pb41gw5g518flvuhhbyu19u\",\n    \"url\" : \"https://web.example.mocklab.io/562704\",\n    \"unique_name\" : \"Mickey Schuster DVM\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 8023764204763318557,\n    \"user_sid\" : \"USfcEcBAc70ABbdF5e26785b47dE147A3C\",\n    \"account_sid\" : \"ACf16De2139D330f92DdC002BcDe9b33B8\",\n    \"attributes\" : \"rrg0q8atvhg5780d49lex017fv02ucu5xhj1vvaf5wjz4z9bl79w2vww1txkv568txti7zc87n63qjlpixdabxzy81nu3xwy539kf458x1lt1m\",\n    \"links\" : { },\n    \"notification_level\" : \"muted\",\n    \"unread_messages_count\" : 2265835252394763528\n  }, {\n    \"conversation_sid\" : \"CH8Dd3658b1caE4F4Af8bCFDaD0FdF6aBb\",\n    \"friendly_name\" : \"Brian Gutkowski\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-01-23T02:09:27.168Z\",\n    \"date_created\" : \"2023-12-18T11:18:04.168Z\",\n    \"participant_sid\" : \"MBdFeCC19E8a1b5Efbf0585dF3adE6A23f\",\n    \"chat_service_sid\" : \"IS889aB9C8ABaB9bAd519AbdcB67bDAfdb\",\n    \"created_by\" : \"qrfmfvyr5c6dqas64z5mf7utgtdy7ir0ft8t42a7g5r26cta95rdudu0qh24n4zrmv4j9h32uyr7o2whi06xo114y03kc33k6weqo7p807jbc5dw0vs607bh3gy1oe6aizv8zdg41c7m50pn6c8ivmjy\",\n    \"url\" : \"https://web.example.mocklab.io/966009\",\n    \"unique_name\" : \"Doyle Weissnat V\",\n    \"conversation_state\" : \"closed\",\n    \"last_read_message_index\" : 6207572223666368201,\n    \"user_sid\" : \"USad5BadaAb091AC0E75e1e82D2a0D55cC\",\n    \"account_sid\" : \"AC05f5f121B19FbC5D20caCcAea39ffFB0\",\n    \"attributes\" : \"9kfa8yw2toob0skp8pqtt393uio7kzjwvrb8un37tzjf2e599r4n7ghlaseda39746qa0chjuxmjh07\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 4254498661264774279\n  }, {\n    \"conversation_sid\" : \"CHEbcDebE1D0CF3ABbC8B3AfB8CaFb9d59\",\n    \"friendly_name\" : \"Pasquale McDermott\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-07-28T21:40:26.168Z\",\n    \"date_created\" : \"2022-09-08T01:20:32.168Z\",\n    \"participant_sid\" : \"MBC4e9c0B75b2FF0Ab1B3BC74EE68DFD76\",\n    \"chat_service_sid\" : \"IS47E7DcF42Dead05f610775A6Eb2aeC20\",\n    \"created_by\" : \"kbojvhf1kbq3hflb9r175q1vio3pgjsq6sst3l5cpu6c0erajugt0akmad4y1kdllzjnnb8ps0quk60ikzs91wxdetoqwwf3xq9q556ii9ixkyckosxn72n9euahmtm11ryo8d4b5netomefjzkba200lpdr29dy3v3nhith24uedrn49yjtr4duxenocwp\",\n    \"url\" : \"https://web.example.mocklab.io/957770\",\n    \"unique_name\" : \"Gonzalo Kassulke\",\n    \"conversation_state\" : \"active\",\n    \"last_read_message_index\" : 5592437253169131671,\n    \"user_sid\" : \"US2ecBdFDf99f017cFc6dDFFFBaD2A8387\",\n    \"account_sid\" : \"AC4Cb5CBf73bD313DD62B700B2a64713eB\",\n    \"attributes\" : \"do61w8lxnznfm5u4725vrhw4ec04y20xkzb2rzti9209sfyji1y16ex7ck08z6o914tx77r30vj2prvprb26ge723c4gonqb59k2x06\",\n    \"links\" : { },\n    \"notification_level\" : \"default\",\n    \"unread_messages_count\" : 5052013386124809157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ef0b5e5-0829-48b2-a5c5-a81e0a5e3e31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.168779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUserConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user.service_user_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceUserConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "181bfc9c-eb74-4b71-810c-9048e5840e4d",
    "name" : "Update an existing conversation user in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS2BcE1fd710B49E1fa7323D25bFf6Dfd0/Users/qr02",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Dr. Sol Considine\",\n  \"date_updated\" : \"2022-03-27T18:17:03.166Z\",\n  \"role_sid\" : \"RL331d6f625bf99DAAd9fC79b0e06A53Ba\",\n  \"date_created\" : \"2024-01-12T19:41:16.166Z\",\n  \"chat_service_sid\" : \"IS98bccbAf9eE6F99f06afcECDBB1DFE2C\",\n  \"url\" : \"https://web.example.mocklab.io/801236\",\n  \"sid\" : \"US927BC0Ef3F6cB293265D4dD70EC2F812\",\n  \"identity\" : \"2llooyje7daogng37vy4zffys01br7d1l2forcmtek6eslrftr7d5ddxid9ui4scsn8xwftyywupf27n2dllqj9hp0yrmed5pf3hfpmh9cyp9vnuzkjujy51tu5rrmog3n1h75q7e5dudumtk5\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"ACC3d40B4Eb98C8b2DbF1AaFABCCF63A57\",\n  \"attributes\" : \"8z426e6pr8910ht7g8t4i9oc3nm5bscjqc9utb0sagvulbv10ljau3vwtla21en5u29fmjei9xugthdoh9a3ii5t9bw71u665hwhejwniolg2r94u0nni3wkq8pzvo3pds\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "181bfc9c-eb74-4b71-810c-9048e5840e4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.166342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "19d57170-22f3-4b33-b580-f25b5d406ca6",
    "name" : "Fetch a conversation user from your service",
    "request" : {
      "urlPath" : "/v1/Services/IS1dCdfC90d3504CCcdFb752E71a1Ac61F/Users/0160",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Shayne Romaguera\",\n  \"date_updated\" : \"2022-05-23T02:28:07.165Z\",\n  \"role_sid\" : \"RL3a3bdcc0dB02cF8da1d8F2e9FfdeD9F5\",\n  \"date_created\" : \"2024-01-05T04:30:49.165Z\",\n  \"chat_service_sid\" : \"ISD1AeFc3bbacBEd1E4e43c8AA4BC631A0\",\n  \"url\" : \"https://web.example.mocklab.io/547727\",\n  \"sid\" : \"US81cCeAB0bFEeFcEb2F7789eE67D3B1d7\",\n  \"identity\" : \"vnraqff5fdd46920d5j22ina9avoa6qguu2msm3s8qbbee0s8evm7hm6pl5gd00ma79w9bp6n86xc5d0ij5bqgdf0wduuz4fwdrp3xyjspdjic9tkr51y27m\",\n  \"is_notifiable\" : true,\n  \"account_sid\" : \"AC9aeD5A4fD2C261B2A19E3881B247643F\",\n  \"attributes\" : \"euzqxayqafetzzkv4saxyjklke77ln4zde6c8rqyxbkmkmarippdfjoy6a10p0bfvx63vm75st7fjgsvukz8ek7gjqjg06vkahjy3py0sg9js6r37iksbt2\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19d57170-22f3-4b33-b580-f25b5d406ca6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.165991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e8cd3b3b-0965-4fdf-a217-91bb8a552d06",
    "name" : "Remove a conversation user from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISD3ffE14ea58F935f1a0f6b735D6c10d6/Users/0se8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e8cd3b3b-0965-4fdf-a217-91bb8a552d06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.165623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceUser"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c9ccc631-41ec-48f1-85bc-a5fa40777e95",
    "name" : "Add a new conversation user to your service",
    "request" : {
      "urlPath" : "/v1/Services/IS275e05aA1877E3aDB8A6A036Ac7ad20A/Users",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Andre Wuckert III\",\n  \"date_updated\" : \"2023-11-19T05:52:40.165Z\",\n  \"role_sid\" : \"RLBaed002491eF8CFdffA1Ba6C2B0cc304\",\n  \"date_created\" : \"2023-04-24T12:35:10.165Z\",\n  \"chat_service_sid\" : \"ISbbe8Ac7Fe0C4bF14B6ef7ceD8e33e7ef\",\n  \"url\" : \"https://web.example.mocklab.io/322295\",\n  \"sid\" : \"US06B6E5b56dCC4DB4dA6b0D79AfFd4a0a\",\n  \"identity\" : \"58giclltjfynidtuvvuclwkxks90d89qzmbw2w82j4l9v6rmc5etj1jw5mgmqe25rl9f0ihdi24ozpt55ezq0lqvc3ckepkkbt2zktfhxo\",\n  \"is_notifiable\" : false,\n  \"account_sid\" : \"AC0A60da4C80DABEB2ba9aAeAdeccE2399\",\n  \"attributes\" : \"0j5xeq3p88lxkznecsu0gpv0e2blazt52lwx3nc7aocclor6f84n3eotal2ezx58fce9era4ghw5ft0f6qz6f7jr3dsk6yhk604f\",\n  \"links\" : { },\n  \"is_online\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9ccc631-41ec-48f1-85bc-a5fa40777e95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.165511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceUser",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "The JSON Object string that stores application-specific data. If attributes have not been set, `{}` is returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the User resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the resource's User within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). This value is often a username or an email address, and is case-sensitive.",
                "nullable" : true,
                "type" : "string"
              },
              "is_notifiable" : {
                "description" : "Whether the User has a potentially valid Push Notification registration (APN or GCM) for this Conversations Service. If at least one registration exists, `true`; otherwise `false`. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, and if the User has never had a notification registration, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "is_online" : {
                "description" : "Whether the User is actively connected to this Conversations Service and online. This value is only returned by Fetch actions that return a single resource and `null` is always returned by a Read action. This value is `null` if the Service's `reachability_enabled` is `false`, if the User has never been online for this Conversations Service, even if the Service's `reachability_enabled` is `true`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "links" : {
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "role_sid" : {
                "description" : "The SID of a service-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) assigned to the user.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the User resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d730b282-b34a-4315-854c-51fe088e11c0",
    "name" : "Retrieve a list of all conversation users in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISeBC52e1fc7bCCEf7051eA5c5dFad9D5E/Users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/963685\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/557316\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/936784\",\n    \"page\" : 487234650931647855,\n    \"key\" : \"46d6aoygx0eys0vpyh3fso4jw73tlq1o5eean0phin1ymikoit34e3mwruoj9p2m265xis723itj623njvgmn14e8wojj35ohahwflvqp7i0p\",\n    \"url\" : \"https://web.example.mocklab.io/366667\",\n    \"page_size\" : 6065027272510282954\n  },\n  \"users\" : [ {\n    \"friendly_name\" : \"Athena Sauer\",\n    \"date_updated\" : \"2022-12-11T05:27:44.164Z\",\n    \"role_sid\" : \"RL953a6b0B0E5E00be12E0EFc75AAF2c9f\",\n    \"date_created\" : \"2023-09-01T04:14:50.164Z\",\n    \"chat_service_sid\" : \"IS2e64E8e98A486DaCb5B5C1bF26a925b0\",\n    \"url\" : \"https://web.example.mocklab.io/855415\",\n    \"sid\" : \"US4e32C924CdA641Fff6a3Ab5C1001a91e\",\n    \"identity\" : \"4ovzqnurbnn42zqy46plx32urljd8g5cev4hw7h5b\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC5e0f729317492Aa3C862a9273A558BCF\",\n    \"attributes\" : \"q43hhil0mkb65rfckgl4j3x1iem0n2ij8884iz2ir9f7ugo5mjoa09yzejk15ha073sikach67gpj9o36u56brbvd54mihe9exytwh80jcto0eb36zvgyzfydenpxsf1b9obkrtbpk9oeksk8wqkcgjwws3fzlt54kmino936dflx\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Corey Homenick Jr.\",\n    \"date_updated\" : \"2024-02-12T05:20:51.164Z\",\n    \"role_sid\" : \"RLC6e30AC57DFAeB2dd638745D9D50F0Cf\",\n    \"date_created\" : \"2022-08-28T12:00:09.164Z\",\n    \"chat_service_sid\" : \"IS92c1Bca03cEe99ed270F7bD5b1Af06bA\",\n    \"url\" : \"https://web.example.mocklab.io/283464\",\n    \"sid\" : \"US7b3981EeaE0D2ecBDE2B73bAB5F7ed7a\",\n    \"identity\" : \"lumb4rtyka2tuy\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"AC20FaEE7496EfdD8035c02AB3dDBa312a\",\n    \"attributes\" : \"ygq8f2iufvohw5uqu3psi33yc5fqsw39i9g9a7mir7z1szxivvseu9qhxdrm66e9\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Mrs. Miles Crooks\",\n    \"date_updated\" : \"2023-06-22T04:28:01.164Z\",\n    \"role_sid\" : \"RLc1fCA37FF5aD124AacC8675FeEE1B5c3\",\n    \"date_created\" : \"2023-08-08T03:40:48.164Z\",\n    \"chat_service_sid\" : \"IS1AE0eEC45608dDd3e7D0079E52f16792\",\n    \"url\" : \"https://web.example.mocklab.io/157979\",\n    \"sid\" : \"US4999ad6A8b8abad382B5dcA4FB22e105\",\n    \"identity\" : \"m71qcqvmvvgyizknjh3z7hs1cqmt1fbtvzsc4p4asszdbt9r9am46xdrzqlpvhmeb60wcsaydkymxk5kca0g4zcn06z1zakpmut6fmt77j\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACbD1b5aC99C4D741a4DbaA9C91AE8D87a\",\n    \"attributes\" : \"di3zilgl5ficqvfp0j2x2fth6qdsm5stzqnpe8eh7pult623ij9vibvp2be5rreoemireyahibu7c2bsn49bapx7ufa9eewqyps2x4bu3d62w2zd752pws7wmc84kgio22y4n12g3zyiczp0u7dl0cw3hzsa0gx\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Tashia Abernathy IV\",\n    \"date_updated\" : \"2022-03-31T04:34:51.164Z\",\n    \"role_sid\" : \"RL3B852c5c3Bc95DCcEACe5CD5dACCbfd9\",\n    \"date_created\" : \"2022-06-26T07:30:07.164Z\",\n    \"chat_service_sid\" : \"ISe51e285139d68eA29fF88edBBEDeDBCF\",\n    \"url\" : \"https://web.example.mocklab.io/489502\",\n    \"sid\" : \"USf294C77f7f18CEDbddff17ac03DCA298\",\n    \"identity\" : \"xh0mxmvlnsxfka01d8eul3slz6urau8bqcdti251\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACdFaEF5cD0FCC5a707AC8b7ef210f9Dba\",\n    \"attributes\" : \"vkq0kfpdj2vgmhga6j5rc408ayo8q49yf4wx93kp3ojvze87eqeuokmomakrbgc3sv1xcu6v1ezr4m30yj8qblhg3819wxdgry4awejbpdiootmww51shb5t00oqvjkcv9hnzlrtot9meb67qxo5kk6e2k0a2zx443ygj2mmxx8lv9hek2j7qp5\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Jennine Kautzer\",\n    \"date_updated\" : \"2023-01-23T09:04:58.164Z\",\n    \"role_sid\" : \"RLa4f4CdEBF12CAFC99e531c11f1FdF0a8\",\n    \"date_created\" : \"2023-01-23T02:40:47.164Z\",\n    \"chat_service_sid\" : \"ISB7EBDE91A067b4d5b4A5f8dBcD289E5C\",\n    \"url\" : \"https://web.example.mocklab.io/608203\",\n    \"sid\" : \"USD614bdA7fAEbae7C9a6De27DE94Ee4ec\",\n    \"identity\" : \"ulke7o85avuzjsa0xsyvoau5baccmp3lesf1dvqbprynlvc2fsaqmk9po3ir1xtsmz998p7eawr96e5bkfnz8uxh61po1vm1hi\",\n    \"is_notifiable\" : false,\n    \"account_sid\" : \"ACCe50b72cb6138853Bc46b63a68DEF0C9\",\n    \"attributes\" : \"ybx1hoyeuxlq45mvx8fwjjhy7r78ucuwb9np6rngz8c4ebyykdxpc2z7nruutwzasji0kvqv2662z61f4ozokhxdycutw498tb3uvpvv6sdguconfz0j6eu143fzf5hff56jijqt35\",\n    \"links\" : { },\n    \"is_online\" : false\n  }, {\n    \"friendly_name\" : \"Tam Schaden\",\n    \"date_updated\" : \"2023-05-13T00:39:10.164Z\",\n    \"role_sid\" : \"RL7d05dA8Faf9d9EC32EE8dea34Eb6A95E\",\n    \"date_created\" : \"2023-06-20T12:04:26.164Z\",\n    \"chat_service_sid\" : \"ISdCDba0fb0f23Eaf8EeFFfBfC1E1BDffF\",\n    \"url\" : \"https://web.example.mocklab.io/380258\",\n    \"sid\" : \"USBfeeAdFB8f4B2D8452c6Dff67d34A27E\",\n    \"identity\" : \"um1aixqhscw82e2t7e22hr\",\n    \"is_notifiable\" : true,\n    \"account_sid\" : \"ACECF2dfdbA475dE7dd68cCC26Ee21FF48\",\n    \"attributes\" : \"lt7rncegvsxh89g7j5811a0uvat3g5s3qzv\",\n    \"links\" : { },\n    \"is_online\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d730b282-b34a-4315-854c-51fe088e11c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.165181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceUser",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "users" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_user"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceUserResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "3bba98d8-f5a4-4c78-9d96-daf2a16f3d85",
    "name" : "Update an existing user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISd583aBb7F397FCfBf4A7f50cBbbEfFaa/Roles/RLf5FA4cCCb0d0c4D1E6f88E85Eb28E292",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Sterling Rosenbaum\",\n  \"date_updated\" : \"2023-11-25T22:50:20.163Z\",\n  \"date_created\" : \"2023-01-22T14:22:06.163Z\",\n  \"permissions\" : [ \"gg4a4611gq\", \"kin9az03azhk8ykz8845ei5u7k0j0nhve2eoaa1ld39ltr9jw6jpi018jifqejdn9fqm23ykrww7mnpwzyezg8ch8zn4rb47ak0o25z3cf26tkpvztgns0pvlgj9sbb2tu8v7ntm73edckbnymfweb9sj9tkszlwxseg0bzqt5qupq3gwm97y07vapomvzb1r\", \"bxpgw48vfjc3p1yqg4bj594sb40ohltm85v4c8qzphzwafurzvvskffyme79kfpa28ae3yw4u7s2t5bu5ev0hulchkbry942pcj5m3izlz7rkuhd25irna41c8bhr2aj67\", \"22s0sululf0\", \"tkzmpddb81pc5eronhxti6x9tnv6rb4kirezqxdjva41iuo7dzl7je1gy9nvpmbam94j9b3gf3p6hqgol502ceqfz97xbui43lf6syfqhrpvmfccwcoev5r2yb41guqao8n0seuhgfnn1qe6t8af9f\", \"2wjjoqpqheb8576w6bryec3g736gitzf2vue1uy8ytxk5zbxztj4e0uxp3pxikm8hx305rjs1fnbtxxwo2fyaumg7o3wf2fdxs08zc0ov41249n4tohcjbgu62a4pgrq3ebav24xtc386ipbdfnvf7vfa1g986ajr6y39p3bx\" ],\n  \"account_sid\" : \"AC2ee2350788EE6bCEFABd2BbCB9cf5dE6\",\n  \"chat_service_sid\" : \"ISAeeaC76b5eaEe5e68fFF59Ef5DCD6Cf5\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/122901\",\n  \"sid\" : \"RLdbEDe9edBfae9cfD6E8c0ABbA92c091b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bba98d8-f5a4-4c78-9d96-daf2a16f3d85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.163716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "75bd2e87-a7c0-42ab-8fa7-c644129d7feb",
    "name" : "Fetch a user role from your service",
    "request" : {
      "urlPath" : "/v1/Services/IS04C23Acbed5b2181ecF65fE3de931eF4/Roles/RL4Ec9fB2cf6b6f2A17cCb04CC5C7BCbcE",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Dexter Powlowski II\",\n  \"date_updated\" : \"2022-09-08T01:58:05.163Z\",\n  \"date_created\" : \"2022-12-17T13:26:28.163Z\",\n  \"permissions\" : [ \"9v60fgvm95jyr870yhmswm02nndjdlglilbc9e\", \"ox4h9glwih0kx5qs4cv2gi7hpj32220b8o1v7xqzhgcz0vx9rjlqdxbi5j2viunbncqjsj941c0vb7m9w\", \"do2twtmykhdv28r0s9ak4aerhdmib7slnhdhh28ebst73ye0kzyix6ydg1ukf14n648dle4i7q2nglsefpk1p7qdzfjtemdti291w25jl8m51gh4hcq712hcdzzs7cqqnyqtv5zx1u6wfj89azmiv2oeckevrd4m4ehit7wjo\", \"p1u\" ],\n  \"account_sid\" : \"AC3ee87CFC6d4CbBD03Fd6915b9419B927\",\n  \"chat_service_sid\" : \"ISAD597E6Aa6F5e43640134ED2748c2abc\",\n  \"type\" : \"service\",\n  \"url\" : \"https://web.example.mocklab.io/546066\",\n  \"sid\" : \"RL7D7783fA9fDC9e15accbf2a61bbEDF7a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75bd2e87-a7c0-42ab-8fa7-c644129d7feb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.163442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "fc50140f-4b3f-43e6-b8af-b470f5afbdfa",
    "name" : "Remove a user role from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISacee74Aebdbf3d1adCDBFf291Bcb71af/Roles/RLEfb8e303d3B6Ec8Ca743ca5F3783F086",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fc50140f-4b3f-43e6-b8af-b470f5afbdfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.163186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceRole"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "3ff5035a-b2a6-421f-b495-ee3f72d87e56",
    "name" : "Create a new user role in your service",
    "request" : {
      "urlPath" : "/v1/Services/IS53F0842c80EAb10aD7BC73F5160255Fc/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Maricruz Abernathy\",\n  \"date_updated\" : \"2022-06-06T18:32:47.162Z\",\n  \"date_created\" : \"2022-11-09T09:21:08.162Z\",\n  \"permissions\" : [ \"vtxex0tsbe80e8cb6t7ek8zlo9ktsnbfucub2f90jbzxjcbxj6es6ae77ju7py1hulpd4w31wmhku5ddjr2u\", \"ahj4r1umnctw5qemwyyolk7fzh2ahbi18z99rsu852tw7co7dhutjxa5xkirzftf5i0zrzhvx62ai0eufpd920uvsd1f1mjdkpbrjnno9ysm2knc8zlscliclxb\", \"ya0s0hdjfjwhvh86ltuhkjsbcyxoabi3ta7vesiuaeg1qs1z4prxxq43jypgki3jiunlily07h8r8nv77qsnxaxv7t6w3aqkfunsb8ukzwcqgdgrg1mz12cony5yu3r32t4mb1k29079cqq6l9hgx979sqxwet6ziopw89t7t95humb8uz4\", \"4gbtllfjiov8s8emmstyzvavmuiqiivmqbsvhv3wgwwdlag5sh19qwxn5ef\", \"zuk9rf238i1nyjq2scd9hqk24qz7fn2prywat6nj8ipqu42w5jhqfx9izb8tf3r5nx95vm21u19cbbdfofxp7rf2pmndfnx1va48jrvrtofqmkvqmngsfkg56ztf3y4af61trh\" ],\n  \"account_sid\" : \"ACfefd888FBF10DFAbAf06CC4d016aC7f5\",\n  \"chat_service_sid\" : \"ISCfA6eca5dFcA7F67fc3CBaDB5C2217b2\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/066923\",\n  \"sid\" : \"RL1af9BeCAe78693AA1cd6230e7Bf6D2A8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ff5035a-b2a6-421f-b495-ee3f72d87e56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.163139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/service_role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f40d690e-b16d-45b3-877d-af760aabcf78",
    "name" : "Retrieve a list of all user roles in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISE6670E7376c7Ee2461c66DBDfcECd129/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/351173\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/878898\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/958649\",\n    \"page\" : 3221817422563221237,\n    \"key\" : \"8mzvca\",\n    \"url\" : \"https://web.example.mocklab.io/729028\",\n    \"page_size\" : 8231456819750582434\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Dalia Pfeffer\",\n    \"date_updated\" : \"2022-09-26T11:05:00.162Z\",\n    \"date_created\" : \"2023-10-18T02:45:33.162Z\",\n    \"permissions\" : [ \"vlxj1ir806bbph61iuj9mlc7eptxshdgkmfjaqtbhog7lopzpq05cbibl124q5x9l6k4m8htaul6etjpx324fdu4qxw7u87\", \"w4ko1rp5yf\", \"0bytc0q9v2vi9w8et23ubdkpn7dfx6i0uokvg9gmvoh0tdeyg0z5ajshy6ta28tbs75bfl3hy5w1g5oat2a7tjsdb7p\", \"16bau56g99l1lc9ts8sh22irfgxxat59yja41epclwqe6pf6vh6bpw8jajml0mqoxaowucsh4n7rvfx2b3cx12weaahrgqy0934iey67qw8v7irbq8c0m66s7vdetyl8sasa81oli1tqaw7mkm5vexohkh8q\", \"c3m2axzpxoge258d0s9o9xuvg8927ciop0pv59j7hb0genznkyb424lslrfe9bkru8jjowm7nremz3hcr0pm5ug3doa3veiz0ehyhbusq2r46u9bkfa8n47aoaqnsxq75vegqj1yzkyern9tcvyb0kahr66sutjkzyzpo1dycn4bd2k9lv6aogxbs0ibrccw6kf9y7o3\", \"d63di5ecs5ir5r9mlkk467ypqask7k622tsa9cug4blcr9wcjoqruze5dxxg1cvtpejcc61ez8ugmb3t4\" ],\n    \"account_sid\" : \"ACBBb86DDfE10A1f64B9e9EE9fE7B35Ef8\",\n    \"chat_service_sid\" : \"IS04fAEBdcbDCF7B1CD69d6E35Ac06D0a1\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/696075\",\n    \"sid\" : \"RLbEdaF412C0E97A313aCd7De8aeDFcA35\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f40d690e-b16d-45b3-877d-af760aabcf78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.162855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_role"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceRoleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "614f5514-7a4c-4be5-b09f-416842514ef7",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/Services/ISfe50D8CD8A94AFB74EDeA0FCD9AcFc6b/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/182270\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/891809\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/502057\",\n    \"page\" : 3357964739980248948,\n    \"key\" : \"vpbxjt9ko3ld662lzznkrp72m0tof3mnh6iycvfr274jo1339ja0dto3eu3mchxfc1tz0aozdkib50nztir24oejq00knohb2t58ifog6g0rf4wlf3arzjla0m5tkcvfdlwtc5z2v6g1wodgf0rmz20kqc59ekvnvrxu35owq16ksel914njo05cvitg6lp3eal42\",\n    \"url\" : \"https://web.example.mocklab.io/559938\",\n    \"page_size\" : 1904997082922301900\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"4dlfpw5xd5zbpfz9ni2b05bya99qi9cdkgklum4m8m1zl4a3v7csw86ol720ua0ypr1u064lg95bbpbrm3w5p7odp0mf38r3bs19419hbqmabi9ec5ak\",\n    \"conversation_sid\" : \"CHdad0c4be7276058eE2f3A4A0af302Fde\",\n    \"conversation_friendly_name\" : \"Mr. Ron Pfeffer\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"t57kk77nfpbeernxluhqk7asin9hdahdqvfbqbbz87dmk9ypugc1twvkzs89xywqnpq3raq4ktvzrs0opuwafywzrjp1447ruhorvsepiihe2b9kf5hpqtovf4131wuvpktaziwfpg3lu2w9s1fyzaw\",\n    \"conversation_date_created\" : \"2023-01-05T10:05:01.161Z\",\n    \"conversation_attributes\" : \"8vdq22wzheiqx6\",\n    \"participant_sid\" : \"MBBAB35946c13bC782138fedC9E0af0b1F\",\n    \"chat_service_sid\" : \"IS2B05a96EcCaF1DDBB8ae5E277ADAf29f\",\n    \"conversation_date_updated\" : \"2022-09-02T05:03:40.161Z\",\n    \"conversation_unique_name\" : \"Mrs. Ciera Christiansen\",\n    \"participant_user_sid\" : \"US62d61337b1FAFFd42bEe591CB3D8A8B9\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC3eADA81D4afdb7Ccece69c9CadBA0FBb\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"1jffbts59f0qoqkylc5pzl9q5meccur\",\n    \"conversation_sid\" : \"CHe9576Bba6aebBFDeDA1b1f03eABf03B4\",\n    \"conversation_friendly_name\" : \"Loren Auer\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"jkshvr6kip6gwhggcv3isgmclt6vi817bqd7k2dgpjo6pmijzjphy73307ngm3\",\n    \"conversation_date_created\" : \"2022-12-12T10:31:15.161Z\",\n    \"conversation_attributes\" : \"18dvgt0u583htji0d0d87e0n8nf7g3sqqwm6q5454uzkzytq8kdyy09h4uqye0ivkdqczjncamlgmz4gerzpr6m184ziijhm3g2hleclitnj505q02u4mfrxxr7p6qijkve4abmuk5qp2zxsto3cb987i7i0kuz7qs9mvu3\",\n    \"participant_sid\" : \"MBd8cf6BAd161fEaaf4fdEd2246Bc4AcD6\",\n    \"chat_service_sid\" : \"ISAd9d46e334b4b195CAE2c4557Eabc77e\",\n    \"conversation_date_updated\" : \"2024-02-19T09:57:52.162Z\",\n    \"conversation_unique_name\" : \"Karry Bernhard\",\n    \"participant_user_sid\" : \"USa4E32ad3CcfD6Db0a975d45EDB84816a\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACD70E68eEAb7Cbff08c2b24ACb152ABe3\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "614f5514-7a4c-4be5-b09f-416842514ef7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.162229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "7a1d29ac-fc54-4b5d-9687-58dcad2e0713",
    "name" : "Update an existing conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISdDD9ACe80efA1AD8f426Dd0050522449/Conversations/pb06",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Euna Crona\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-09-21T02:40:53.161Z\",\n  \"date_created\" : \"2022-06-22T16:44:10.161Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISDEc625c82Fb25DddB9c793F2BAEBEC7f\",\n  \"url\" : \"https://web.example.mocklab.io/684788\",\n  \"sid\" : \"CHee607C09eb51dAbCFd2edADf67bA8aDB\",\n  \"unique_name\" : \"Raven Quigley\",\n  \"messaging_service_sid\" : \"MGdc203EbDCE63a486be264F3a0dE142D7\",\n  \"account_sid\" : \"AC270671AdCD4c0bDdc818100eF1f71BA7\",\n  \"attributes\" : \"y41yt3ty0032cgh6itq7y90mo60vdrhyii\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a1d29ac-fc54-4b5d-9687-58dcad2e0713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.161372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "12085c7d-0590-4722-aedb-4adb5bf1ff38",
    "name" : "Fetch a conversation from your service",
    "request" : {
      "urlPath" : "/v1/Services/ISAA198c9F9E3e94B9bdc248ccaFB2Aa31/Conversations/z6pi",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Miss Garth Reilly\",\n  \"timers\" : { },\n  \"date_updated\" : \"2022-07-01T14:57:37.16Z\",\n  \"date_created\" : \"2022-12-08T17:01:48.16Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"IS6Bf25a08fdEbE07Cfb3d11C7fbC8277e\",\n  \"url\" : \"https://web.example.mocklab.io/056261\",\n  \"sid\" : \"CH2d8468320b306CC7D65f87E55cB633c8\",\n  \"unique_name\" : \"Mr. Tyler O'Conner\",\n  \"messaging_service_sid\" : \"MG0f7cd04d8FAD7997DaeF4CeB00ABfe06\",\n  \"account_sid\" : \"ACB5155CBe83a74F8C8a03f6B098cB42cB\",\n  \"attributes\" : \"be5iapjgpzdgjp6vim82jrc5pt9ojini8peeckaj5n7z9w60rljgmevnpwhjufg0upsixwqsb6jnqzl0xo9jebh5zkekuzq77bb1dbs79kizbwvrueb36ifrq0rp8t\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12085c7d-0590-4722-aedb-4adb5bf1ff38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.160997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "0850ac79-03ee-44d9-a604-e664a8082297",
    "name" : "Remove a conversation from your service - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISdb3a90fE9df44bDaC9eee603b39A8FDd/Conversations/wfiz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0850ac79-03ee-44d9-a604-e664a8082297",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.16053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversation"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "a46d08ce-241e-483e-baf5-bab9a0a85042",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/ISABe1dF7A37BEDC7dC2095Fb11FFBC1b9/Conversations/1734/Webhooks/WHFbD75B3EBffeFcE7cb2FcBaaB125af5F",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH3cdBCCed4204Fae2a722EAedbD0a0B4E\",\n  \"date_updated\" : \"2023-04-02T03:43:16.16Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-10-26T19:57:26.16Z\",\n  \"account_sid\" : \"AC237EBc5ECcb5837c5Af9C46c9c8e4a69\",\n  \"chat_service_sid\" : \"IS426dAab2dA1cF2ACA75aD81F810c84bF\",\n  \"url\" : \"https://web.example.mocklab.io/183032\",\n  \"sid\" : \"WH354F3372Dab7Ae1C6eB0Cb7DFD0cD6b4\",\n  \"target\" : \"ystd1vth61v4qwtvvlyeasomn4avez2pyznajgvhcakjwgdy038v6pyg45znzbong9f1utioaklhbdqhomqgh7jsbwwdp1yf8r5u6ae5ui5vgq1nx31aebr03x87uen9ijim2yblej8b6gnyqohxap250ssb7q1tmyp4my1sh1jzumawbug71sbzmaisr43zhxi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a46d08ce-241e-483e-baf5-bab9a0a85042",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.160431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "78e2a502-6ea7-41e6-afbd-d6d703bf7fd6",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Services/ISE6c0cCAa311fa7e9dCbd1019703B87D8/Conversations/7zh4/Webhooks/WH328Faa45A45eB4b4C232ccf8FBBe29ab",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH3e5c7A441239c44e2BcF2d2D983ca2cC\",\n  \"date_updated\" : \"2022-04-25T21:24:06.159Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-04-17T01:58:02.159Z\",\n  \"account_sid\" : \"AC1AafCa9F358DD275367f9EE8d2CAeA2e\",\n  \"chat_service_sid\" : \"IS72d45ea2003C3d3bEAB9F4194b4C8Ee3\",\n  \"url\" : \"https://web.example.mocklab.io/699214\",\n  \"sid\" : \"WH4a7bc5fA0d6C64FB19fb83e218FEDc23\",\n  \"target\" : \"qzrbipsm21y42lh926xe4mfv04t08zdzo4b6kozshvapqkazb9kp9tfr2lvo4hn9h2yat5wzn9s9r6mnh2ncrduy9uy160iv8jyktd3781mgrzlk7oyrataci9jsqlfgi8wx4j8kylqqgo0jll0mzmmsozjz83leu9jc6fo9qe8k04izl7qhsze384lz9a0alux\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78e2a502-6ea7-41e6-afbd-d6d703bf7fd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.160152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "5701c39e-628d-4d2a-a76a-059c168b0e7c",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS523Bd54EB7aF9Fd1Bccc35CFe13f7E55/Conversations/2231/Webhooks/WHf59Ae747Ad063b13fB1AaAEc3318FdD7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5701c39e-628d-4d2a-a76a-059c168b0e7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.159887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationScopedWebhook"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "6adc38ab-1c52-4a46-a7d3-7cb1b1685d0f",
    "name" : "Create a new webhook scoped to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISaBB948f8fDFDDe8eD85bCc9AF49Dfe1A/Conversations/3jj6/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH669142b0F457e90101bF89bA2Fe2adfd\",\n  \"date_updated\" : \"2023-10-30T09:07:11.159Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-02-26T16:57:43.159Z\",\n  \"account_sid\" : \"ACe3932abA756a8aEbd295D2CE1d3baEdB\",\n  \"chat_service_sid\" : \"IS6268faB3a7976bDa218b6Fe8FDdEFfFB\",\n  \"url\" : \"https://web.example.mocklab.io/056525\",\n  \"sid\" : \"WH5b9cAfa255d74bd1a04Fcb0f99DcBECF\",\n  \"target\" : \"53mmewsuhe8pmw31p2l63oo52vgywug0hzcwf5krbt6x7x5ty9qhkaogcmvdclkgsqdjehk1u5b2ivowptfsmtxq8rqqc24j7oz2j51gt5vx8pptx3f9zfdna2bkp7yattemh0h804p6q8ysql75cifrzcs8c64tjysquw65fdmw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6adc38ab-1c52-4a46-a7d3-7cb1b1685d0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.15978Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "d49acc69-0a06-4488-9fc6-13e7c72c9ab9",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISC36f544cfaabc1E0eC5fb95FbcDcCD0c/Conversations/05l0/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CH4eFDA6d1232FD9BC601C2Ad9F57D0db0\",\n    \"date_updated\" : \"2023-10-15T22:08:40.158Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-01-07T19:11:48.158Z\",\n    \"account_sid\" : \"AC57Ab1fc8A67f1FB03ccD791A6F086d5B\",\n    \"chat_service_sid\" : \"ISe4Ec4AeD447FDec3beAbC50EF9A74d91\",\n    \"url\" : \"https://web.example.mocklab.io/057123\",\n    \"sid\" : \"WH4cc32BD54935E2E5bafdFAEb3e31cA2D\",\n    \"target\" : \"oiukxig5ecpsmml5abokyuna0fevj24kefzzpn959u47uuahydte1wzmvi6zg0ff4esb0gk597n8lbckvrkh8nrqgzhbyow0e855d76i61vwzbdjqxw7vzoe1lwcim19fovdv\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/992205\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/986858\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/327002\",\n    \"page\" : 5651085102047297087,\n    \"key\" : \"md6v7xbq9ebridqh3x4km90cyc3hffgg5n5g83acae1pdzn\",\n    \"url\" : \"https://web.example.mocklab.io/453367\",\n    \"page_size\" : 7430883772121806801\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d49acc69-0a06-4488-9fc6-13e7c72c9ab9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.159482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "2320b13e-8d5a-44ad-9dfd-814a69e27248",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS91685f3c298DE50caE0F4CdeC202E557/Conversations/9641/Participants/67vt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHd9fB2F267b56c9F9Cd7c00DCd0AebC3c\",\n  \"date_updated\" : \"2022-09-01T21:52:14.158Z\",\n  \"role_sid\" : \"RLe054FAa521eb48cc7DB14Faa0942a3ad\",\n  \"date_created\" : \"2022-11-23T15:18:10.158Z\",\n  \"chat_service_sid\" : \"ISCB1627F18Ad90a51a98e7F5F2Bb91f92\",\n  \"url\" : \"https://web.example.mocklab.io/890707\",\n  \"sid\" : \"MBb75A9F5afFaF69e094fBBAd15B6C6Fdd\",\n  \"last_read_message_index\" : 3204017968208209448,\n  \"identity\" : \"tcmtr040kty4zwakks9mhosijyn3gbrekpwy74\",\n  \"last_read_timestamp\" : \"2022-06-22T12:04:17.158579Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC2F96CAeb46e64CE6b0e2153Cc6c8a1EC\",\n  \"attributes\" : \"kx7eu4v4w24o6l3kxe8dpzmw30yv0hqa5wi7be5u3pmm6a0iec9ww9rkqgj4jxas36mk9r3ofkt8wew0y8u4jc58izbwi2w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2320b13e-8d5a-44ad-9dfd-814a69e27248",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.158842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "9bfcea0b-369a-4a56-9550-72cec1b914a4",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS28D364E1ee1E7bd8a90AaFf70BB0DEeB/Conversations/66bc/Participants/9y7f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH5ED30df949edD3DD11EDA5eADa2BE064\",\n  \"date_updated\" : \"2022-09-11T16:22:08.158Z\",\n  \"role_sid\" : \"RLc7Cca993Dd6fefEA59e85ADE8F9c03Ba\",\n  \"date_created\" : \"2022-08-03T15:58:31.158Z\",\n  \"chat_service_sid\" : \"IS4a8183DfBEbaDF17b7b4AaEB7F73efDC\",\n  \"url\" : \"https://web.example.mocklab.io/799109\",\n  \"sid\" : \"MB3dBFfB33d8e9e5F67f5725b73B5C38ff\",\n  \"last_read_message_index\" : 3462305061439608786,\n  \"identity\" : \"zhdfz60ezqan0zj2prtrdpds7o2avdl0u1rdwxkt6o8s0aj05mxhuk9nwqx29hwn3pbbxrxhn6ph19m03m7s4tx05xuaakrpk37lucblm7fo20b\",\n  \"last_read_timestamp\" : \"2022-09-10T13:24:17.158176Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC55Ebb6dbdDE5DecaC1d7C7dF69BBeeCa\",\n  \"attributes\" : \"7b7b8domrcdihyu0vumlv0xqrhv3qgobe6ktov0x3zz2vk856pdzpk97hgwaynnwsgb4h1y078xkqspi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bfcea0b-369a-4a56-9550-72cec1b914a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.158437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "cca471e6-b1f3-4277-b345-076a91043ac4",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/IScce77e0dDc883fCCe0f2198e889Ca3Ec/Conversations/i8ol/Participants/im02",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cca471e6-b1f3-4277-b345-076a91043ac4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.158038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationParticipant"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "4324e5e1-c2a9-4e95-aa19-f2bae5fc2ac5",
    "name" : "Add a new participant to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISeC810eEbebc7684eeEf23859Fd7db4Bf/Conversations/t8q5/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH61a3fd0FA10Aa6aEabab7F474b8d1B50\",\n  \"date_updated\" : \"2023-04-27T19:27:56.157Z\",\n  \"role_sid\" : \"RL5013E4DEeCb1DbfBBbdcc8f78B8A960b\",\n  \"date_created\" : \"2023-07-06T14:19:26.157Z\",\n  \"chat_service_sid\" : \"ISaD8a650aC7EfEB9dc392111bf17E10cA\",\n  \"url\" : \"https://web.example.mocklab.io/582826\",\n  \"sid\" : \"MBC20D08ed7f7D3ac783EB7fa4034473A2\",\n  \"last_read_message_index\" : 9151061019975755179,\n  \"identity\" : \"hm7svuw6ha25ba7anftoh3ral17nte69kgsl1h4quc8wos7c0eodduzyltesdzi7w8lew4gr5sjco0chwg90rjd7vj5k1r9ak160ckhgt3y2y5emeer5db5wu1a8iqcat1f1pluzy6e5mfarm8rw6t0afszvudlwaqwbblr\",\n  \"last_read_timestamp\" : \"2022-06-29T15:03:17.157634Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACfa5CbCbE1AED2EFaAB86e5740c0bB10F\",\n  \"attributes\" : \"ev64h7dnfhyjfnif68l3tjz6r3pjjcf0rmc1rzae1flcmsu914pk7b4fbeb14yq4unabu1wmb03bmk51tn984jkfcmnqpp9c41emfokztj13h7ivue76gwsq7m5z7xd1clmyw2htel7papiv301okwkt8jkk8qt6c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4324e5e1-c2a9-4e95-aa19-f2bae5fc2ac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.157865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversation SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "68b31b66-74b7-41ae-a899-77aee200b983",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS920C7DAAD16BcE772a35bF4BadECFEb1/Conversations/wh47/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/650463\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/458016\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/597083\",\n    \"page\" : 7616554495768457034,\n    \"key\" : \"sn59zbfdzit7vfneuzlzv1li3b3tppfus28i0t6srs327lcgsbf44clbj583lu6gfc9gt587nk8obi\",\n    \"url\" : \"https://web.example.mocklab.io/353795\",\n    \"page_size\" : 5087379805889890432\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CHe93014fEAA1eE95B52ecCC42dc0A6ADa\",\n    \"date_updated\" : \"2022-04-13T13:58:05.155Z\",\n    \"role_sid\" : \"RLA3434179C2Aa3B9bDC35CDCa2F8dddeF\",\n    \"date_created\" : \"2023-02-02T09:59:19.155Z\",\n    \"chat_service_sid\" : \"IS8FDdaeF3Ef4bff75A9efeecB1C8C6811\",\n    \"url\" : \"https://web.example.mocklab.io/176151\",\n    \"sid\" : \"MBFd36F9f198379A1dc38dDa2F2657FD5e\",\n    \"last_read_message_index\" : 8333072475968158515,\n    \"identity\" : \"fev3h0275nfg\",\n    \"last_read_timestamp\" : \"2022-08-01T13:30:17.156052Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACd2F5ec1CEcC6E5E4d2C828ad39DaBAd5\",\n    \"attributes\" : \"bb8\"\n  }, {\n    \"conversation_sid\" : \"CHb4F4ffc1068Bde3D16283D6F7F409c1c\",\n    \"date_updated\" : \"2022-07-21T13:59:50.156Z\",\n    \"role_sid\" : \"RLdC6eCA879bfBeFc613F3f8F1aa2d45Fa\",\n    \"date_created\" : \"2023-07-15T09:54:00.156Z\",\n    \"chat_service_sid\" : \"IS7C53C402dd8BBcC355bf58e09F25cb90\",\n    \"url\" : \"https://web.example.mocklab.io/588579\",\n    \"sid\" : \"MBbfce4B6fAaDe79daDAa4dE0E2f2ce6cE\",\n    \"last_read_message_index\" : 7363172090235948682,\n    \"identity\" : \"owvb79rlhyl2p8ghf8c3f018hf4dwpkrrrmpf09a69ka9bo5gq9zs4dmqg8dija2b75\",\n    \"last_read_timestamp\" : \"2022-04-18T12:11:17.156218Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACc5AB7b5cFcD6EAbffA65dF4d3d8ACC09\",\n    \"attributes\" : \"ghlcwua0m92z6866oxjxtfuee2mhx67tepjj1nhodsvmwlhksvpb4lemrhvc1uwur5t3aigpxb1nchl8lyzkt3\"\n  }, {\n    \"conversation_sid\" : \"CHcA240aa321fB856bE7F77c2C7dfdcBb1\",\n    \"date_updated\" : \"2023-10-23T23:10:49.156Z\",\n    \"role_sid\" : \"RL575630f69d3B2ffDaF7d7dd39EbEc607\",\n    \"date_created\" : \"2023-07-29T15:16:07.156Z\",\n    \"chat_service_sid\" : \"ISAEDa8F08FDc56a24DdEbd16C62CabAB0\",\n    \"url\" : \"https://web.example.mocklab.io/451305\",\n    \"sid\" : \"MBfdeeF77B492dfC469E40DbC5faABee60\",\n    \"last_read_message_index\" : 5852037460272595179,\n    \"identity\" : \"emqwwaeqwd8h9yuwi4zy24blni0qt27zb79y94e5xjnr3s8qvixweh2zlse77h92bw3id19bti6bpxno9mgqe6vm5xov7ia0s1c2j0podri9v7j7k25aw12b2qv3odeo4f9odzs9kuzlh18my0fu21vlsj6\",\n    \"last_read_timestamp\" : \"2022-08-25T13:24:17.156379Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC7BF7bc9dF7FF0Fe3d2D6a0Fca9B52C26\",\n    \"attributes\" : \"c5je23gztuyv5502qztyga0tuqehfsfbsr1ctwi8y6ghi8ckw0xsv63s85gcmruwqnkrccniedxm\"\n  }, {\n    \"conversation_sid\" : \"CH5Db9bCD77c4Faf9A56D992afB98165fE\",\n    \"date_updated\" : \"2022-07-24T13:02:59.156Z\",\n    \"role_sid\" : \"RLf34E5251eB0eFeeabEa643F47d501757\",\n    \"date_created\" : \"2022-10-05T18:56:53.156Z\",\n    \"chat_service_sid\" : \"IScDBafb7bE8e8a764e5D18fAf81BbEE7f\",\n    \"url\" : \"https://web.example.mocklab.io/964363\",\n    \"sid\" : \"MB157d7dDdBcF5FcCdB5F1d6bC29FACA98\",\n    \"last_read_message_index\" : 5587626547329384079,\n    \"identity\" : \"wzl1lt2szkmv8pw85diroum13qvpa7espfrjag8a1kkj5bi10qxtc94wg8zn2skgagdh133zlevccviit6epqu1wkf65pnyikkizcf26yvfr1cqqk65evd\",\n    \"last_read_timestamp\" : \"2022-12-01T12:15:17.156548Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACF0BccD8319726cA1ade8b6448B9b730D\",\n    \"attributes\" : \"vs7yvpih0t86xqw5dfkt28lf867l6jchyz82qjqh2na5e4bpzn4wyv8f8q2vwbv2fu303tjz0ufkber5xckv8kk5hcm7ehtpm3p8oatk5d71rtxkqbgahrcj7k4o890uo3576rcchvz28g1s8ahp9n3ti\"\n  }, {\n    \"conversation_sid\" : \"CHf6a7ABF8df65eaDc75bCbDcAD8840B47\",\n    \"date_updated\" : \"2023-01-08T07:28:44.156Z\",\n    \"role_sid\" : \"RLfb7abfD0c6D5DaD3A3c8B16E1E3d065f\",\n    \"date_created\" : \"2023-06-29T09:20:32.156Z\",\n    \"chat_service_sid\" : \"ISB5fEFEc1aC23e407a2aE2BFC8347DbDF\",\n    \"url\" : \"https://web.example.mocklab.io/012078\",\n    \"sid\" : \"MB7Ed690029d5F8836409114a1E1B0EaF2\",\n    \"last_read_message_index\" : 147801117442524010,\n    \"identity\" : \"aruzgej6c7q5fzqnta9lgntnm0vriqm6e2ewh2v3cfa97vmrxc7ukrtjcsgocf1iow0ixoocaox6rvd45rz121073mvzob8uilyfdezf60510zevrj0a48rwxdld6g5dm0fxknj53nlgxzqsxbi\",\n    \"last_read_timestamp\" : \"2022-04-04T11:55:17.156711Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC1cBF6bc336fD61121cb6fe9f99eA2bE9\",\n    \"attributes\" : \"fs51tj51jt4dvdisge5fhwj7iwgl89g7f6ctm5of55s7es47ntqg15amj9y3xfwcmyikhlws5x4klu36srk1sqrqygx0umvf6k1huwcpmbrlvk73zaassro09\"\n  }, {\n    \"conversation_sid\" : \"CHdef1C654D53eBfc8Eb128Ca2FaE3CdD1\",\n    \"date_updated\" : \"2023-02-07T16:51:22.156Z\",\n    \"role_sid\" : \"RL3b4b2cc468D81f3CE83a14f9bF1BfCE0\",\n    \"date_created\" : \"2023-11-23T15:07:27.156Z\",\n    \"chat_service_sid\" : \"IS60c9FFcdb39Ddf5CAcEfd67382dFfC54\",\n    \"url\" : \"https://web.example.mocklab.io/708816\",\n    \"sid\" : \"MBad8CDF4Dfe2fDf0Fc87C689a85c6C60E\",\n    \"last_read_message_index\" : 6752125076314936429,\n    \"identity\" : \"66jvdc11jvu48yx1vz2m4jyaybbnf046meba01tox1031tkpyafn3pznn3mjueadtqjim24wmcedybtdh86oodyxlb0zqa27e7qje10eqt5gft6dxh7vay3pkm4nl01n1cd5ik80x84eg00iw8l9cfmaxt3rpowyfnng4ubdodgpsnsc92sh\",\n    \"last_read_timestamp\" : \"2022-07-17T13:26:17.156868Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACaa21615eCAafE804be3EfDe18BeeEABF\",\n    \"attributes\" : \"iyhw42bu874mx6at0s5di43d6ez35vqs7viwgfkzct44e5dojawbbd2whupi32rbiyncnu2owgtku0lkz2rvxwvb9uawjv39bk76llnc2a3qqsao3sdzsgqh72x7xy296si4ur5k0\"\n  }, {\n    \"conversation_sid\" : \"CH32f4581fc3E4a766F98764CC619B6947\",\n    \"date_updated\" : \"2023-11-12T12:26:21.156Z\",\n    \"role_sid\" : \"RLeDb5bC95EB0264Dfd7BF3ce62E1D35A2\",\n    \"date_created\" : \"2023-10-20T08:49:17.156Z\",\n    \"chat_service_sid\" : \"IS2E260c57CCE80dF6AB4b8e9AdFdd3ADc\",\n    \"url\" : \"https://web.example.mocklab.io/062530\",\n    \"sid\" : \"MBDB47D6617C1f85bF1e54cfcEdA7989dC\",\n    \"last_read_message_index\" : 8404546968217281502,\n    \"identity\" : \"bdeqowhb6yhw88vn4u3conegnba56ev4drfis3sna66px\",\n    \"last_read_timestamp\" : \"2022-11-06T14:29:17.157025Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACC642e0EB609CFfA0a22Cbe357AD463Ad\",\n    \"attributes\" : \"b4lv9x6hz91wqwg\"\n  }, {\n    \"conversation_sid\" : \"CH9f1eB30AF8fc1CC9eC7Ef71afc55efeD\",\n    \"date_updated\" : \"2022-08-15T07:10:07.157Z\",\n    \"role_sid\" : \"RL3D1b53BC0BA67473A672CD4e10CCF9fD\",\n    \"date_created\" : \"2023-01-18T04:04:50.157Z\",\n    \"chat_service_sid\" : \"IS7eDFd110EEB7FcBDbeF3Ae5Bd27a3eC9\",\n    \"url\" : \"https://web.example.mocklab.io/430461\",\n    \"sid\" : \"MBb7740b22DF1647C30cC5b546a7fD9Aa4\",\n    \"last_read_message_index\" : 3626212137199725927,\n    \"identity\" : \"nz6wsvt4d873d7wlvjtxt4vvs3h8vz9xmz8ikozi0a3ddkt1h5za0mjh\",\n    \"last_read_timestamp\" : \"2022-03-29T13:28:17.157182Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACb1bBa4bB74Ab575d8d07C6713A4BBeAc\",\n    \"attributes\" : \"dxs2n42gpa49q2ofiacimmzsv6wckmsq1a28a\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68b31b66-74b7-41ae-a899-77aee200b983",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.157477Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "3dd0086b-670f-4ed3-b87e-3c356570f475",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/ISdbaEE3D67Eb292a2d1e7bf1f0D1B6bCe/Conversations/16cs/Messages/IM00A57d4334EDBc54BE834eB8AbDeF6f2",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH9fFE025bf8a2Bab337168CEfDEB892ce\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-03-27T22:08:44.155Z\",\n  \"author\" : \"9758ca4ws151857gb3kzrv2axb6oz2snznldc4knspj6vzh4utpxcaawj3idk0y9878hzugg4nt0bx34rxufnbbx7znxotijlhx8nfni4zeu8kau9d1w4xdm54fe7rw2mnh6i3hbd0comc1utb45jcwuawbeac0yamw\",\n  \"date_created\" : \"2023-05-14T22:36:44.155Z\",\n  \"participant_sid\" : \"MB6CaC0e139dFe4c59bEb1Ad6D191f23CF\",\n  \"chat_service_sid\" : \"IS79AB4F937e398BC8d4f5eAF414Ba6AA5\",\n  \"index\" : 8909294735324140068,\n  \"media\" : [ { }, { }, { } ],\n  \"body\" : \"Dicta adipisci voluptas dolorem. Ut quia quis. Nihil ullam quia voluptatem veniam dolores. Recusandae fugit autem eos et ratione delectus. Ipsa ipsum inventore dolorum.\",\n  \"url\" : \"https://web.example.mocklab.io/117687\",\n  \"sid\" : \"IMdb3c03732Bb6e75b1FB0D65EB00f9B1B\",\n  \"account_sid\" : \"ACFEF79Da145F3feD0FBa0a3dbf87d9FBE\",\n  \"attributes\" : \"cvurub8iwliad1mzwx1btxtdkksqbitv6cpfqqotz5x1r4sbhxs4fcyqcr18hamevgkzqo6oaoemz3e8j50bz17s68q47hi3660qkkjjsn0b5htb1pw0nemg1mef6l00sd41ufkdt5bgdfv6zaam9s1b2tecoyw3owt85xs4ir9iuq6bujbua6q\",\n  \"links\" : { },\n  \"content_sid\" : \"HXD478A18b6130D93b7c906665f72dc196\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dd0086b-670f-4ed3-b87e-3c356570f475",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.155573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "177cce3b-0026-483d-8b3f-f79d3fb431d0",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS49dDCC85F87E483D1B2b0deeCffccA8b/Conversations/g3vc/Messages/IMDDF6bDD0baD83E9Ba4fe1Ef1626F2af0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHD192bBEafbebEBbcFD4A270dbDeEdfd4\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-04-11T01:16:04.154Z\",\n  \"author\" : \"77lc6x7uu5ufbajm6wj1v9f4z8axl2ittoxp95aqsls74gc0687x5yylqou1cwsp85z1v6x2nhnn878z5um5cweszd2iggc8k59fc3bkcx5vxi6ij5hnctcw5ly6ysvos84tggl2va\",\n  \"date_created\" : \"2023-02-25T18:04:22.154Z\",\n  \"participant_sid\" : \"MB1EAd136AEaECD66CBfc7070cb184c5A4\",\n  \"chat_service_sid\" : \"ISDDCc4f5A7aB01ba7233C08180dd3a1E1\",\n  \"index\" : 5707391203730146479,\n  \"media\" : [ { } ],\n  \"body\" : \"Earum sit doloremque omnis expedita eligendi fugit dolorem. Et sit voluptates non possimus. Officia ut quae. Perferendis id eos ut. Eum omnis voluptas dolorum.\",\n  \"url\" : \"https://web.example.mocklab.io/333654\",\n  \"sid\" : \"IMC73F5B19d19Ae820148121Aef2E00FA7\",\n  \"account_sid\" : \"AC7cCe831A7aCd4CFFbd9eBDeEa926a97E\",\n  \"attributes\" : \"mp8b5eycysrfn42u8wscm49vp4wavlxav9zdz6f86r0k9svk1z33\",\n  \"links\" : { },\n  \"content_sid\" : \"HXdF6286A754870257D4efE3b4f5bfB60B\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "177cce3b-0026-483d-8b3f-f79d3fb431d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.155154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "df5ae1e3-92c7-454a-ab31-7bb570b53186",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Services/ISeF91A4c023ABcE67517a4F1382a1eC54/Conversations/fzks/Messages/IM1EaAb94CeFE5288D1FbeE7FAF5d213cE",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "df5ae1e3-92c7-454a-ab31-7bb570b53186",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.154702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceConversationMessage"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "84b57fbb-734c-4d39-9f4b-32a004ac60fa",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/IS8808d112eb22A5cbB6eaFD6e0fbd3ACe/Conversations/rx02/Messages/IMf200c1a4025dfCbd58ef919569Ee3aD4/Receipts/DY51e63d5CE813E701B2Fb0B32bDaeC7cC",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHDc8e5347C4F5cb2175E63280B4E64f41\",\n  \"date_updated\" : \"2023-10-23T04:36:36.154Z\",\n  \"date_created\" : \"2023-09-30T03:30:57.154Z\",\n  \"participant_sid\" : \"MB738b8e436D20eE51F449beDbACF79DB3\",\n  \"account_sid\" : \"AC6fef18a88562Ed568D928fa70e71aFEa\",\n  \"chat_service_sid\" : \"ISAeA9eA9e80567f7ba36baae1c6Cbdc2A\",\n  \"error_code\" : 3126996375657074100,\n  \"message_sid\" : \"IM54C64DC7f6DE6AeBCc03A9eE390E8F77\",\n  \"channel_message_sid\" : \"Eh3185Db50637cD2Ca1DE6eD0B00f3FdEe\",\n  \"url\" : \"https://web.example.mocklab.io/463723\",\n  \"sid\" : \"DYb6e5a9a6Ab42DA920de936dECD1FF2bA\",\n  \"status\" : \"undelivered\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84b57fbb-734c-4d39-9f4b-32a004ac60fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.154585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Message resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/service_conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "f6fceecf-3673-41d6-9a26-375e70e6a7b3",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Services/IS3bFE8f99c871effFdDabBbf81bB5bd21/Conversations/6903/Messages/IMbeB67fD2b7E1fedcB4249EF00624aeE4/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/021374\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/220264\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/384118\",\n    \"page\" : 4172035741206629029,\n    \"key\" : \"kx5kh7vhuubij3edlt43ylz0kjde3xwav2ab4q9re3xot3hc5dpyf2yq8n0nkxkr3kl7wl5qnrqhlw8pnyvo8od1f7405cqv4w3ly3ccuc38syiakthev40n7kiy2h5n2oqsx1uiywqhcwo00v672l8n\",\n    \"url\" : \"https://web.example.mocklab.io/208112\",\n    \"page_size\" : 4474401124957500677\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CHceDCD4A4fdF09fFEC53fD4daa3ef0D09\",\n    \"date_updated\" : \"2023-09-16T09:56:34.153Z\",\n    \"date_created\" : \"2023-08-12T23:51:38.153Z\",\n    \"participant_sid\" : \"MB98A8Fbc66bEeDDC9a1a2acd633D0b9Df\",\n    \"account_sid\" : \"AC05111ae6e4F23d06cE7bE7132cEF53cE\",\n    \"chat_service_sid\" : \"IS569dbFE3ab8944e2dD33CBaD9dF1e20E\",\n    \"error_code\" : 5405670353836871618,\n    \"message_sid\" : \"IME7c35Eadf5d074A89f77CBCFF66B8b10\",\n    \"channel_message_sid\" : \"Ije6dFE8F57FA29c170D8A5Ca84dFcbB1E\",\n    \"url\" : \"https://web.example.mocklab.io/868172\",\n    \"sid\" : \"DYF04b88A9e13E8CC4dEE589c5DF2fdF6c\",\n    \"status\" : \"failed\"\n  }, {\n    \"conversation_sid\" : \"CH13F75c4253FEb7f78Feafd6CF6BCcb99\",\n    \"date_updated\" : \"2023-02-01T01:41:39.153Z\",\n    \"date_created\" : \"2022-11-05T07:05:18.153Z\",\n    \"participant_sid\" : \"MB97a783c4aFc626b386D2fDF0fDFBCcf5\",\n    \"account_sid\" : \"ACacB421dB065cfbdC64cD97D9c04C7651\",\n    \"chat_service_sid\" : \"ISDeee13DaE3E3e2e059FCc4cFcAc2d8B8\",\n    \"error_code\" : 3723098371692474520,\n    \"message_sid\" : \"IMce688Fdf85ae1Ee718dFBb7a6548bc53\",\n    \"channel_message_sid\" : \"bY1bF54f3e648Ce102AaBa5CCEBE6e9ffc\",\n    \"url\" : \"https://web.example.mocklab.io/526029\",\n    \"sid\" : \"DYa0eF8d4ef0A849b7e3DAcAcf18b4D73d\",\n    \"status\" : \"failed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6fceecf-3673-41d6-9a26-375e70e6a7b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.154218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message.service_conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "ac45817e-37c9-438c-9ace-11c3bbf33f2e",
    "name" : "Add a new message to the conversation in a specific service",
    "request" : {
      "urlPath" : "/v1/Services/ISBB4C19Bafb6675fDb3Df5F1C9daAB2AC/Conversations/22dl/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH5AE7BD06Ca4EAeC90AaefA43A7eEdbfC\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-02-04T21:12:54.153Z\",\n  \"author\" : \"3sh48t8oxap3sxyg4j\",\n  \"date_created\" : \"2023-03-03T22:14:39.153Z\",\n  \"participant_sid\" : \"MB2ccDCc644e47fB380116bf4BbEBf65E6\",\n  \"chat_service_sid\" : \"IS8EC487BdffE052Ee2B55f3DeEfA35F1D\",\n  \"index\" : 9208628229504331323,\n  \"media\" : [ { }, { }, { }, { } ],\n  \"body\" : \"Sunt numquam occaecati. Quis hic dolores. Labore suscipit labore rerum recusandae exercitationem laboriosam et. Eum odio asperiores rerum. Perspiciatis ipsam aspernatur eum similique et.\",\n  \"url\" : \"https://web.example.mocklab.io/426920\",\n  \"sid\" : \"IM8d6bcBaB7fE8ea3cc6ab4EB5fAbdCd75\",\n  \"account_sid\" : \"ACeeF7A4f2E17b60BCdD8bFF7B241F499d\",\n  \"attributes\" : \"wuhtlbe37sir9lvvtu8txt1zinfqe2ztsct6y8irrqb7btxscpnwaw70c2i1a457rhcl0xb6u7oeiel0ohnwfv0ua7ed\",\n  \"links\" : { },\n  \"content_sid\" : \"HX4D1FDBBE91BceE8D3C24eeB4D3CdeD8c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac45817e-37c9-438c-9ace-11c3bbf33f2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.153418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Participant resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "4a31bfe3-93ba-4d57-a51b-993f4bfb5de7",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Services/IS6Af896dfcf13C1E2ADa36B3fD95bEFcC/Conversations/72l6/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/135980\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/545304\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/329167\",\n    \"page\" : 6963822673612507075,\n    \"key\" : \"o9vv9h1uc40pgeeaepadkyul8mp9msgwfk6nfq3g6kekrmnrhko80jm1wi04qhov4bwi5olrite8s8cpsdphm0gfiyku0dchuj7qkr\",\n    \"url\" : \"https://web.example.mocklab.io/397430\",\n    \"page_size\" : 4598655396684070275\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CH0D448D3fD7f176B50e9B4020E3cbd6Bd\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-09-28T17:05:02.152Z\",\n    \"author\" : \"7oogmenfvwqzqo4mr2lxiudz6uzfxgqfpfwh2v3skae4g4w343ocswl6ltcrg48ziiu87ufjll4odl58amqoed6bxxt0gw52iad42ezpyicnh1jodgaff15ocwteopo\",\n    \"date_created\" : \"2023-01-28T07:01:09.152Z\",\n    \"participant_sid\" : \"MBfCd1E3aAfeA50Eea7D57a11E93AfbaA0\",\n    \"chat_service_sid\" : \"IS4deceD4A1dF3cA82B2D400ebE1fE4bAC\",\n    \"index\" : 3914573254718419563,\n    \"media\" : [ { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Dignissimos illum ea inventore. Doloribus architecto dolorem consectetur ad sunt optio ex. Quasi minima eum consequatur non quidem.\",\n    \"url\" : \"https://web.example.mocklab.io/563027\",\n    \"sid\" : \"IMbD4Aea0a2cB35F5ad974CdBBdc937376\",\n    \"account_sid\" : \"ACd6E7f1DAeB9EE877DaE229D6dA9b0114\",\n    \"attributes\" : \"469njmz93dhp0ohw2qtdby9vf8kpojkvq1e5nfzvs56z86ngh5bk2aupo4e1utujo5vfulq1er5bg60xrvpeefbpd57tx09rq25d8xs9\",\n    \"links\" : { },\n    \"content_sid\" : \"HXBb632C05501DA6bDAAD1b5432A95e1a2\"\n  }, {\n    \"conversation_sid\" : \"CHA9ccaA5a0f0ddFd08D71bDc7A33D21C8\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-06-16T15:30:58.152Z\",\n    \"author\" : \"tpj2dijs3kalrysp5g01ic7wbdwqgslio0nduxwe16xsmgs1uv0pj5o6ctjwhigchh7jexkdi2wztw4as3xypwp3a778ml6troyfztok2y3xym89hiaq029ro16lhj3781bezmol9ciegdpm521oqfy\",\n    \"date_created\" : \"2023-05-11T05:58:34.152Z\",\n    \"participant_sid\" : \"MBEca6852A4c4cFc6347cCA91A4c0BC34a\",\n    \"chat_service_sid\" : \"IS0E9384faE58cfc5f8DbcE5575316db78\",\n    \"index\" : 1705787585013131250,\n    \"media\" : [ { } ],\n    \"body\" : \"Quidem et suscipit quae non tenetur. Aut molestiae ratione ex in non optio. Neque omnis quae incidunt temporibus non soluta eaque.\",\n    \"url\" : \"https://web.example.mocklab.io/537947\",\n    \"sid\" : \"IMfc8da9FDC5DC7E07ecFE1faaADAf44cB\",\n    \"account_sid\" : \"ACD8c377C24555d6DCBDE3FEab8c46C2d9\",\n    \"attributes\" : \"kcs9jj6jdh6g67i33v9tr3z6x730spozeax8ueh3o9vzgp7s030cmtns1yx8b6wi223494g8z73gul53zr2i2\",\n    \"links\" : { },\n    \"content_sid\" : \"HX2eb6F96bfADedfD7DbbE0A9AF9A361F0\"\n  }, {\n    \"conversation_sid\" : \"CH00fa6a5A978A1fbB9B1ae14aFDf2B725\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2023-01-24T08:35:03.152Z\",\n    \"author\" : \"ldts2e5tlzkdfub36ut1nb05160zfxaw22vtr0b1egvsde98ugklyk39fl9vud79zizae2uqeyh5pivqwoqshv9onb3edvcf89p86ogk0ghoc47vss\",\n    \"date_created\" : \"2022-04-17T14:42:06.152Z\",\n    \"participant_sid\" : \"MB2f260901D451D157e3Ddce2bE8f3bD7a\",\n    \"chat_service_sid\" : \"IS9BfF9b72dAEecF609cdcA4c84D7998eA\",\n    \"index\" : 5959292475915714579,\n    \"media\" : [ { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Velit cumque sequi neque quibusdam qui enim. Laudantium et sit deleniti dolore. Et atque aut cupiditate blanditiis repellendus sed exercitationem. Quibusdam consequatur enim aut non sunt ut.\",\n    \"url\" : \"https://web.example.mocklab.io/896755\",\n    \"sid\" : \"IM21C171Eef825B83d74Bccea5BdF6fD6c\",\n    \"account_sid\" : \"ACEfC7248ddB87f95CE70Dc95de84cdF01\",\n    \"attributes\" : \"fqwllearovm8l62xzawakk41gs14ee57nfsd2fvdqs1gvsbqbfqfq0dlejz4imy9dta4afhpa6bdhznnwowdhay5ib5jzl191do7k4pqpga73edu14ly82niijjld\",\n    \"links\" : { },\n    \"content_sid\" : \"HXF15dFE203ffAC4a5B8fA8E61c6D4AEDe\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a31bfe3-93ba-4d57-a51b-993f4bfb5de7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.152966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation.service_conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "1cb59da7-080a-49c1-ac86-b1b0087103c6",
    "name" : "Create a new conversation in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISd935cAeEF7Bfa2B751c89E0d39Fca41b/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Hong Zemlak DDS\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-03-27T01:56:45.151Z\",\n  \"date_created\" : \"2023-07-23T10:29:10.151Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISc0aBF93f824E4c30163B05F7eAAFDDEA\",\n  \"url\" : \"https://web.example.mocklab.io/369574\",\n  \"sid\" : \"CH4B00D56AA4c4e02ec44CDF936FbDFCdC\",\n  \"unique_name\" : \"Delois Kreiger\",\n  \"messaging_service_sid\" : \"MG1BdfaDfAbCfA1C194eB69cfebfBDE5de\",\n  \"account_sid\" : \"ACe4AEe3fa20Ba31483deECcaaF0a5eBBa\",\n  \"attributes\" : \"pbp0dwbd4vsg9jmima0fjmzldvoxo2ht5n8y410vvxe77aroxnhp1rjha33zf94ag3hvqik2pezx8e11lvh6aztik0jq2hhgqwmyolh0ssyin5n59bhcfuhjckaim09geip\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cb59da7-080a-49c1-ac86-b1b0087103c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.151846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateServiceConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/service_conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "5001ba06-1986-4355-9178-9c7a1048761f",
    "name" : "Retrieve a list of conversations in your service",
    "request" : {
      "urlPath" : "/v1/Services/ISc8625EFA1a36dD53b6c3A882BfAAB92A/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/982660\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/367251\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/177642\",\n    \"page\" : 7396292943974394836,\n    \"key\" : \"jlpnvc63mvkhkrnuz9gt0mamixb\",\n    \"url\" : \"https://web.example.mocklab.io/132581\",\n    \"page_size\" : 7373516575161805737\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Fredda Marvin\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-08-26T17:18:30.151Z\",\n    \"date_created\" : \"2022-08-02T14:47:46.151Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS13cddfDd8993A86AfDbB836aD855fFc7\",\n    \"url\" : \"https://web.example.mocklab.io/132994\",\n    \"sid\" : \"CH8eFAEEC83fDf1ab51AdDdC1a3e38505a\",\n    \"unique_name\" : \"Jackeline Hagenes\",\n    \"messaging_service_sid\" : \"MG52dDd1DdD0Cb34ccf960df3af11BDFAA\",\n    \"account_sid\" : \"ACDb7D35dE51Bb1AE4c2Db3B66e5ECe3E9\",\n    \"attributes\" : \"4mj3n0lh6itxg14tff0bj8lzp4ur1s1nigzdjqde72jzfjj8s9r387pg1r401e3oq8aqe95g32p8ge6o0rzid2y8mgrn6v01ryj5y1wjegvtt26egyruqn87be1v00by\",\n    \"links\" : { },\n    \"state\" : \"closed\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5001ba06-1986-4355-9178-9c7a1048761f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.151498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "1968d48a-d79e-4fc7-8938-d93d17df12c6",
    "name" : "Update a specific Webhook.",
    "request" : {
      "urlPath" : "/v1/Services/ISFef769cf2e45C8CCF6d89F74be78dBc3/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"AC649A22c705BfEA15eeaCE3BC4BcA87f2\",\n  \"chat_service_sid\" : \"ISC1868735ec8e27b1FCDAA67e56abAf0d\",\n  \"filters\" : [ \"17mfbtfq7mbvi5stzkqmywidqc0rr93lewvk3su10a9cw3so3x9i2qao7q95i1\", \"no9u0o31klcb3bmu9hbnhcs9iv2xyblcd7m8w82t7671k0s8q6t2q9w7mw60ste8icpx0vsmlvf7vcirzg5ee3kr3qypi9d7trcapxx2f8oxxs4nxxp5h2j1mpaarmr5q8smra1v8nrcsgqg236o3pu8qa24xhnud81u518jkekrxf8ydy79\", \"zcqfddgqsif79f5y44in95aqgmdeuesftv5k884d55ty845t1lep1hnim85rp\", \"8pcb4bjl7p8yxhdp4ppedc7s54orropl9uxqni33ar7nwovulkov5fbleoffi3502kcfn3nogjczdme\", \"hj57xjroy9di0qgzvz2d18mc0m6w8br7z7hjuzbp4ib1fr4u6ao670p35voqeny4g667qyjjy8bux6yfvm2yprna9e\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/725362\",\n  \"url\" : \"https://web.example.mocklab.io/365941\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/214416\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1968d48a-d79e-4fc7-8938-d93d17df12c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.150823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "0d8c1459-0e82-4922-ad9e-7246bfbbe067",
    "name" : "Fetch a specific service webhook configuration.",
    "request" : {
      "urlPath" : "/v1/Services/ISFa55403fcAF2f76A7feC8cEF632AF605/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"AC5B77A7C5563C93c5F2fD141b7A0F6BE1\",\n  \"chat_service_sid\" : \"IS048F3cF9dC3156D3a34Fa7Ad59BCDF86\",\n  \"filters\" : [ \"j75wwobihuwknfnumctollfbxil\", \"t03ov803kta30m5by8t65c1m8ww2pjqbp6t40hb4dg4puuay7wx2gf0wwkegsdic\", \"37eekk52kfz875h132lwmece3g3rmpngqef66syhngaiyv13p8289g8300g\", \"8t9lr\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/134768\",\n  \"url\" : \"https://web.example.mocklab.io/002152\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/992209\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d8c1459-0e82-4922-ad9e-7246bfbbe067",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.150509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceWebhookConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of events that your configured webhook targets will receive. Events not configured here will not fire. Possible values are `onParticipantAdd`, `onParticipantAdded`, `onDeliveryUpdated`, `onConversationUpdated`, `onConversationRemove`, `onParticipantRemove`, `onConversationUpdate`, `onMessageAdd`, `onMessageRemoved`, `onParticipantUpdated`, `onConversationAdded`, `onMessageAdded`, `onConversationAdd`, `onConversationRemoved`, `onParticipantUpdate`, `onMessageRemove`, `onMessageUpdated`, `onParticipantRemoved`, `onMessageUpdate` or `onConversationStateUpdated`.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/service_webhook_configuration_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "81529b0d-0f23-4cd1-b4ed-03a6de3f95a1",
    "name" : "Update push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/ISe3f29360dEeF39dfCeabfC1BE07a2f98/Configuration/Notifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"ACfbFfD0B2B5d7D2AC8Cb7ADcbC72C9201\",\n  \"chat_service_sid\" : \"ISE1BAFb6840Ec5f26E1a7BfECBbFd23de\",\n  \"log_enabled\" : true,\n  \"url\" : \"https://web.example.mocklab.io/588533\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81529b0d-0f23-4cd1-b4ed-03a6de3f95a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.150149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "154131db-431a-458c-8554-5bb44f26a7c1",
    "name" : "Fetch push notification service settings",
    "request" : {
      "urlPath" : "/v1/Services/IS545bb597d68E22cfE1E7Abc5B0c4976e/Configuration/Notifications",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"new_message\" : { },\n  \"added_to_conversation\" : { },\n  \"removed_from_conversation\" : { },\n  \"account_sid\" : \"ACb3ae7A349BFEeC1cE0Cb5F804dBFDBF2\",\n  \"chat_service_sid\" : \"ISCd18d0CadbC3FFf93d1FF1bf4f8433AE\",\n  \"log_enabled\" : false,\n  \"url\" : \"https://web.example.mocklab.io/868223\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "154131db-431a-458c-8554-5bb44f26a7c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.149985Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceNotification",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "added_to_conversation" : {
                "description" : "The Push Notification configuration for being added to a Conversation.",
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Configuration applies to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "log_enabled" : {
                "description" : "Weather the notification logging is enabled.",
                "nullable" : true,
                "type" : "boolean"
              },
              "new_message" : {
                "description" : "The Push Notification configuration for New Messages.",
                "nullable" : true
              },
              "removed_from_conversation" : {
                "description" : "The Push Notification configuration for being removed from a Conversation.",
                "nullable" : true
              },
              "url" : {
                "description" : "An absolute API resource URL for this configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "e45f612a-b168-4ef6-89e2-8b7dac668a57",
    "name" : "Update configuration settings of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISBb7fEBEC0BfD95b3deB5b0A34E89C833/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : true,\n  \"default_conversation_creator_role_sid\" : \"RLCc303fbb2EADcb0be3DFaEac4eCB582C\",\n  \"default_chat_service_role_sid\" : \"RLFD5F2ceb7daB8B0bBeCbF2A61EFcfbad\",\n  \"chat_service_sid\" : \"IS20B0c7De253144C31dedE0e6C2bAecAF\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/749180\",\n  \"default_conversation_role_sid\" : \"RLAd3BB98Eca09aD16978Bd2bB3F1Ef94c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e45f612a-b168-4ef6-89e2-8b7dac668a57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.149772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "d9adcc4c-2f99-42d6-be6e-e21ebf0e42e8",
    "name" : "Fetch the configuration of a conversation service",
    "request" : {
      "urlPath" : "/v1/Services/IS7F737DfA1feCd75f5953B68ffCa1Ef70/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"reachability_enabled\" : true,\n  \"default_conversation_creator_role_sid\" : \"RLBCcd7f4CE5bc6AdF1D05737a2BE8Df51\",\n  \"default_chat_service_role_sid\" : \"RL0b9a7E6ffD44E6C19cdBD4c331F7d3A4\",\n  \"chat_service_sid\" : \"IS07BeAC36dAeb2263BDF682ACBC7cDab6\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/450238\",\n  \"default_conversation_role_sid\" : \"RLbcA0bd72EBF310279D556Ec60cFb8E65\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9adcc4c-2f99-42d6-be6e-e21ebf0e42e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.149588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceConfiguration",
          "schema" : {
            "properties" : {
              "chat_service_sid" : {
                "description" : "The unique string that we created to identify the Service configuration resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_role_sid" : {
                "description" : "The service-level role assigned to users when they are added to the service. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_creator_role_sid" : {
                "description" : "The conversation-level role assigned to a conversation creator user when they join a new conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_conversation_role_sid" : {
                "description" : "The conversation-level role assigned to users when they are added to a conversation. See the [Conversation Role](https://www.twilio.com/docs/conversations/api/role-resource) for more info about roles.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the push notifications configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "reachability_enabled" : {
                "description" : "Whether the [Reachability Indicator](https://www.twilio.com/docs/chat/reachability-indicator) is enabled for this Conversations Service. The default is `false`.",
                "nullable" : true,
                "type" : "boolean"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "48d1e164-5f20-4887-a523-f34d1b2e13de",
    "name" : "Fetch a push notification binding from the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISc3cEec82cB07b54e0228CD9D493bFEe4/Bindings/BS64Bb3DAe1aABc35E2BEa4Fa3240EEEc3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credential_sid\" : \"CR3f48a261D191f8B92A4fdA1DEeAedfBD\",\n  \"binding_type\" : \"apn\",\n  \"endpoint\" : \"n7k6gnuz37pn2bu1fd6kavctfx5q43qvjx10k1xlv7szl8u8m0keu9zhkmkipep5125nedx56t30ewsul3vrdch9jv8qaxoni84fkj6a9a2g5g56xlvegji4n0yq0drmyvafond07a5le6xc9r\",\n  \"date_updated\" : \"2022-06-19T02:04:02.149Z\",\n  \"date_created\" : \"2022-08-07T23:30:50.149Z\",\n  \"identity\" : \"6ts6ojv2j6ui22erbdcv1499aittycsqi0ylb97iojyfzwn9oc5sff118t1valpvo3z9xg78rd22mh5uc4q715qqtye3\",\n  \"account_sid\" : \"ACAACdDe27eCb75Be99B0ABE43DB4EDD6a\",\n  \"chat_service_sid\" : \"ISAab2b2fB3bcBD5E1922d1eAebe6deaC5\",\n  \"url\" : \"https://web.example.mocklab.io/432347\",\n  \"message_types\" : [ \"criprsuekeolvm5iih3643pfwc2gf37sxiolxrff3yoi38gei89f4h0yxvi81e51c2zvg99xkk\", \"1pjt6mi6lfcde3jvaqb95h4xetk45n3qnj8apy99hfsyp4o4u7jsnfxt8mz2c67jr38sl5qsad612qp26r\", \"osfi0djik355gaeeq2rkr85qqjtsurz6czk5g2bji2dyyovjdz5avn23d6nvh7q7iff3qlun9dwlfi9ejqvm3j4b2jl2wkfe0yxdh7c5fyj8abqhcu1svbn0qnaf9q2u9xxgia5a3n6lozoz4pw36jn5bmsnatbc208ilwdlyowydut5cc8\", \"y0kbt6fv5krkpdbdh4lx2lr82hu89erbv4dl0v7r36m\", \"j9ze7itr4xnet5i9frw90zhp3r1z2wf58ydalbgg\", \"ghsni0lpbrjkaovbxszk3qg4xh5dleh0zmqbvox007ugr73ojvlalkcsmpptwzy16mhovq62y03ytmn5svaua\", \"qunr0b3uwy92s04n1bktndujy4oy0d6jj1q60gxwxxac54vi10cwro\" ],\n  \"sid\" : \"BS7bAC900B6EBd0dC83FE6fC17dd6bc0eA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48d1e164-5f20-4887-a523-f34d1b2e13de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.149343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchServiceBinding",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this binding.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "binding_type" : {
                "$ref" : "#/components/schemas/service_binding_enum_binding_type"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Binding resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "credential_sid" : {
                "description" : "The SID of the [Credential](https://www.twilio.com/docs/conversations/api/credential-resource) for the binding. See [push notification configuration](https://www.twilio.com/docs/chat/push-notification-configuration) for more info.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "endpoint" : {
                "description" : "The unique endpoint identifier for the Binding. The format of this value depends on the `binding_type`.",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "The application-defined string that uniquely identifies the [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource) within the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource). See [access tokens](https://www.twilio.com/docs/conversations/create-tokens) for more info.",
                "nullable" : true,
                "type" : "string"
              },
              "message_types" : {
                "description" : "The [Conversation message types](https://www.twilio.com/docs/chat/push-notification-configuration#push-types) the binding is subscribed to.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^BS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this binding.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "afc537ea-8f6b-4d96-b2f3-9ec05d52be15",
    "name" : "Remove a push notification binding from the conversation service - 204",
    "request" : {
      "urlPath" : "/v1/Services/IS831FD7beAacAe4c435C4BFe8C2635e4f/Bindings/BSBBd41FDDeC1fb07f3bB7F4575F5e8aEc",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "afc537ea-8f6b-4d96-b2f3-9ec05d52be15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.149033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteServiceBinding"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "7f163e60-5f24-460b-9c93-b3695ad85a13",
    "name" : "Retrieve a list of all push notification bindings in the conversation service",
    "request" : {
      "urlPath" : "/v1/Services/ISC1f6E8dc600DBFFaac4Fdd4597c204D3/Bindings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/059563\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/321211\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/776748\",\n    \"page\" : 756894344849204530,\n    \"key\" : \"obn184xvltwn7awi4eztc0ckhx3hccr48xu7u3d3naa6v1rk2rkww3nstawdsnsp7hxgxdh2n4rg0tj1jg94ni\",\n    \"url\" : \"https://web.example.mocklab.io/590353\",\n    \"page_size\" : 6831031815642367547\n  },\n  \"bindings\" : [ {\n    \"credential_sid\" : \"CR8bFe6bbcf1aDF2b7F1EF28Be7Bf9EbD3\",\n    \"binding_type\" : \"fcm\",\n    \"endpoint\" : \"rzh8vi5lb1g3sefwaoutvge5qirapmxn0lfcrwrusbjyf17dj726j3okp25km1xnn7kggk68ofr3o4q4h5xn9bniaxpxjryywxlyp7lzujl3qtuamkaaam3g7w1jggl3au3si22l3wog2kp2j0651wnu9k45nsdorndwcmu3khsrn3w1wn362\",\n    \"date_updated\" : \"2022-10-27T01:40:14.148Z\",\n    \"date_created\" : \"2023-06-10T18:39:11.148Z\",\n    \"identity\" : \"yvp7ki9jhcx26ku5adw6oorpc8xz5mu5l414iam7ijub26hqn0frmftbaajl3gdpmznqwdqhxt9mvgg\",\n    \"account_sid\" : \"ACEF62b4D85aD06C10FDcEb9134ff0413e\",\n    \"chat_service_sid\" : \"IS0EBeEd0ef444EcCebCb173774eD233c8\",\n    \"url\" : \"https://web.example.mocklab.io/027679\",\n    \"message_types\" : [ \"h0bnatpo02areo1mji3tcv5119ywv0ifcp0ghtqngiq5buz5enect373mo8mhosn53i5kyh98dks4snz6o8sm4dh57nrl2rgcb2ytyqheih0wby5xziygoeb83m2q7vv94qa0m5m7\", \"xx75cmofat9ba8dhhcmlgqhtowe02sl3n8jz50k0ht7p32kc0tq3vfkhgdrgzwr4gk3vktvjqncg\", \"f2a39aiz\", \"292fqp03r1iqrby6wirudwua1tq2quagmxq7yhy7yexrx5aaq3h1x0gcxnsw7uw4v7abjyq1pij3y3si9rcg0ou9buodce\", \"76rwss6i1tub23xpcuh6qhu9qx4zqnnae5f4hebzgeqson06zhvph1xhtl3hr40sm5p8uhd2czsl7oee4p1uqls8v76u34jzplki9e2q2ftr5oq97linn34aczehmorelf03kvlnc\", \"nr7p2oiehy7c8tyga8z7z93olu4adtn8tkvafc0nrrd9yaz6tscwqt9ry20cneaq0o99c462ggduunic359iwi1k0lazy55l6n1ivr91x9ips9m2pf64oospou6wr7wau98iay5e8vdofzlns98ercyn91fyd7vldaqwh02qr8tiwa5w7pmw4mkmfxt\" ],\n    \"sid\" : \"BSefAF0C6F509F79e3B1dABD84e1EB9e7F\"\n  }, {\n    \"credential_sid\" : \"CR37e797f9eD71F8F1fbDF14F9e58d87cE\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"es0qln8jl6qjwh89i2ukm6wtkzfjhimlra\",\n    \"date_updated\" : \"2022-09-25T06:28:36.148Z\",\n    \"date_created\" : \"2023-08-16T17:14:32.148Z\",\n    \"identity\" : \"2hpqhoan9temkfjt8le25zord6aa71k4jl61ywnv2mnyp0xwnaudz4svlunhuqhm1rj96ojcql1uyyat9rw450p2yfamif1c976cw9f1psz0aq5srg2433w00534fnfhqewawiy\",\n    \"account_sid\" : \"ACbD4E059bEc6E8E78b1A7fe90c93bAcFd\",\n    \"chat_service_sid\" : \"IS6c975bCc5a2eeCEe160B5FcF10CbaEBb\",\n    \"url\" : \"https://web.example.mocklab.io/675935\",\n    \"message_types\" : [ \"oc967d7n2h79qoo3wkk4mljd6sell7yjobnbfj9oa1ym8\", \"urqifa6m0hu5b78oz00um5jygeifrol4axsn064wictbu7ratwsuwsmljkes5k4nk86a0h8dwzi8znr3t98h34h05lwm3i90nvzqb3nnuq73s45cb6rkup5n9mqw7e6ad\", \"pi4ktpz4ikhfvd9t2yt7ktoxs2lwb1hc3ffy5j3uekkye5wahm2ry4ovgsvit1j9f78pv3f60hapc1fzqw4x86ci1hfwgaz7f7vnmpdlo3k9d8inffioulqluloov4qv9uepsabqb1ue8u5zvj92o05tg7r3\" ],\n    \"sid\" : \"BS7DBaee0C799994edAaEABcc7BA5Ee14d\"\n  }, {\n    \"credential_sid\" : \"CR0b64054834fC87b74aF3f40dae29DE3b\",\n    \"binding_type\" : \"apn\",\n    \"endpoint\" : \"8ytay522flwz6cpj7\",\n    \"date_updated\" : \"2023-02-14T23:50:03.148Z\",\n    \"date_created\" : \"2023-07-08T11:41:17.148Z\",\n    \"identity\" : \"kuyfwe4hnj9oq6d8qnrl8j1xxt9qa36mx32ab0911g4ih9\",\n    \"account_sid\" : \"AC1B5aF21E1f18ec8FcF41c7AFaAAB6502\",\n    \"chat_service_sid\" : \"ISa02FfA84f2A82E30ECbFdBA8d477D651\",\n    \"url\" : \"https://web.example.mocklab.io/349913\",\n    \"message_types\" : [ \"qq1y2ubznoirleuu05zj1m8dwhdl9iudpwcgdbqtrgsuowx8emk5uwbrt0n0pazsbezilhwfycv65b\", \"gmtx8cryurcu7jnc9yg1mp5t9cv0hh0q5tjf7fkii1a4cdzxapi26wo6\", \"vsgued1n36m96miznzgubxqy6wlbj92w54x5h9uad1kwgdf61v4ga00hwiegl2o331sr45iform3md9ovy8zq5zg\" ],\n    \"sid\" : \"BSCDBC12abfeF9bba1cA40c8CCC5A5CE6E\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f163e60-5f24-460b-9c93-b3695ad85a13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.148983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListServiceBinding",
          "schema" : {
            "properties" : {
              "bindings" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service.service_binding"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListServiceBindingResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "6b499bbb-f5bc-4c1f-a93f-86d337e6a8e9",
    "name" : "Create a new conversation service on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Myrle Schaefer\",\n  \"date_updated\" : \"2023-10-15T16:41:40.147Z\",\n  \"date_created\" : \"2024-01-01T10:51:10.147Z\",\n  \"account_sid\" : \"ACBf340eE5F92b60235eE702BacBC9cD11\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/582073\",\n  \"sid\" : \"ISf5556611bcE702230DeC43457bfABEfc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b499bbb-f5bc-4c1f-a93f-86d337e6a8e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.148061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateService",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this service.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this service, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access conversations, users, roles, bindings and configuration of this service.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this service.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "fd5b497a-f50b-4d73-868a-9056000c1599",
    "name" : "Retrieve a list of all conversation services on your account",
    "request" : {
      "urlPath" : "/v1/Services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/721459\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/476135\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/603135\",\n    \"page\" : 2840302002801224122,\n    \"key\" : \"56l8dxvcot3vidxxkti6hobyuoc01upta8n3z8clgwta76cye3mnx7vn75xkxmwd6r7rngosqju733wu3jve5u1t388quz9qqteuwbcqv3f5l2wezkkb5ejc8iksret5ornu3wiy94zbj54xrvaeg56zyj685lqhromxwzcpym3jj\",\n    \"url\" : \"https://web.example.mocklab.io/716385\",\n    \"page_size\" : 7750615068175191459\n  },\n  \"services\" : [ {\n    \"friendly_name\" : \"Alphonse Haley\",\n    \"date_updated\" : \"2023-12-05T11:42:47.146Z\",\n    \"date_created\" : \"2022-10-01T16:24:57.146Z\",\n    \"account_sid\" : \"AC49aE81b54fFbD896B4A7Bb5c1aF3BeaB\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/142939\",\n    \"sid\" : \"ISDA32c9fe63fDa21DdAf7DABEfa2d7a7c\"\n  }, {\n    \"friendly_name\" : \"Miss Danilo Strosin\",\n    \"date_updated\" : \"2022-06-02T04:01:38.147Z\",\n    \"date_created\" : \"2023-05-04T07:16:22.147Z\",\n    \"account_sid\" : \"AC376A27Ea86dBB490690EA9eCe826a2e3\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/009697\",\n    \"sid\" : \"IS97a9634BdEdcC00b066FabFBfdcdc45E\"\n  }, {\n    \"friendly_name\" : \"Jonell Wisoky\",\n    \"date_updated\" : \"2022-11-30T13:32:01.147Z\",\n    \"date_created\" : \"2022-10-04T03:23:42.147Z\",\n    \"account_sid\" : \"AC8ba2a84D912fcaF048950eCe600fFe0a\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/523044\",\n    \"sid\" : \"ISE6B6768366bEa1a0bFB4dBCCdf9dc4Ca\"\n  }, {\n    \"friendly_name\" : \"Pablo Kuhlman I\",\n    \"date_updated\" : \"2022-08-30T07:50:15.147Z\",\n    \"date_created\" : \"2023-01-05T11:54:29.147Z\",\n    \"account_sid\" : \"ACce67F0eCaE2FC41207AaAcAC7EFD6CCf\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/754849\",\n    \"sid\" : \"ISFeeeb785b52aFb8864A188Bd0A972cC5\"\n  }, {\n    \"friendly_name\" : \"Hulda Fahey\",\n    \"date_updated\" : \"2023-01-04T10:07:59.147Z\",\n    \"date_created\" : \"2022-07-30T10:00:51.147Z\",\n    \"account_sid\" : \"ACdef9a70C7a48Ff3f61d6cFF4E58c2Bec\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/980218\",\n    \"sid\" : \"ISAfD9E2b2bb81d0C27bebaF9d2abAf1ba\"\n  }, {\n    \"friendly_name\" : \"Camelia Hirthe\",\n    \"date_updated\" : \"2022-12-17T01:36:06.147Z\",\n    \"date_created\" : \"2023-12-30T22:33:36.147Z\",\n    \"account_sid\" : \"AC9FcaF4D3d531CcFAaaff1637dcfA4f9b\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/660036\",\n    \"sid\" : \"ISE44adEebfdd9B19B39ec582FFe6b4187\"\n  }, {\n    \"friendly_name\" : \"Marcella Effertz\",\n    \"date_updated\" : \"2023-08-27T20:11:18.147Z\",\n    \"date_created\" : \"2023-07-16T14:29:21.147Z\",\n    \"account_sid\" : \"AC0DFB3CCCb036Ef8f83ba39fD6EffccE1\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/192255\",\n    \"sid\" : \"ISaF7eBBb9C9d4DbA2Aa09EFc58C13Ee59\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd5b497a-f50b-4d73-868a-9056000c1599",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.147841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListService",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "services" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.service"
                },
                "type" : "array"
              }
            },
            "title" : "ListServiceResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "6097803c-b3de-4b39-80d9-6a784a16d0c3",
    "name" : "Update an existing user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RLead2DeA4084CC30fC17E4E4FF83cBBb5",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Gil Jerde\",\n  \"date_updated\" : \"2022-05-28T13:36:20.146Z\",\n  \"date_created\" : \"2023-12-30T22:21:35.146Z\",\n  \"permissions\" : [ \"6akm86wxevnbjc1xwn\", \"v568rfqeijfcgwjotol7e80xsez6w3ip4ngtuwhgf\" ],\n  \"account_sid\" : \"AC8944C34a7EfEddFb660cEDf152A210d9\",\n  \"chat_service_sid\" : \"IS9FffEBeaFC0caD9D87cd9Be1E952dCf0\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/800775\",\n  \"sid\" : \"RL65fBde9ab6be2c8D19B3a8f4c43f4bFe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6097803c-b3de-4b39-80d9-6a784a16d0c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.146513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "836f2e37-37b7-481e-b45a-5bbf1fed67af",
    "name" : "Fetch a user role from your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles/RL0f3F0DF98eFB91f1Fb326FB2FdFCEA56",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Dr. Rudolph D'Amore\",\n  \"date_updated\" : \"2022-05-27T17:49:09.146Z\",\n  \"date_created\" : \"2023-03-12T04:20:37.146Z\",\n  \"permissions\" : [ \"qvabc1kax8t3mqc8b808wos9o9\", \"zx91k076njfrg0z5oj5oh25dggexpdntuqqjy0t82ghxbe52fn7z0q0mbxr6yabs1hk3wdsmmnuxri8gqulim8zt0nrceucejh256p7o1h0dbjysckl8tkxfzqfb09wo9z1d3asbp1rw0h6hqrb72b24\" ],\n  \"account_sid\" : \"AC7D6d306c0D69ECBD9DD6eC11FC0405f1\",\n  \"chat_service_sid\" : \"ISf033750D2AB2C0E3c628cCABD2Ffef8F\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/407091\",\n  \"sid\" : \"RL6306D11eA959175Fa69bBE0AFFdFED7D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "836f2e37-37b7-481e-b45a-5bbf1fed67af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.14628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "2afc6fe5-f4ca-495d-b80c-8e22227c9fe2",
    "name" : "Remove a user role from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Roles/RL5bC2FFBb1FfFDc3a7F1b8Cf9612d3b6c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2afc6fe5-f4ca-495d-b80c-8e22227c9fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.146042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteRole"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "f6172479-5dd3-491b-936f-e7fac67e7c05",
    "name" : "Create a new user role in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Cindi Bahringer MD\",\n  \"date_updated\" : \"2022-12-31T18:25:28.145Z\",\n  \"date_created\" : \"2022-11-23T10:22:01.145Z\",\n  \"permissions\" : [ \"on1br3fpij5j9j2pyn8k6x6lzapyw77eu0e8vojqhb7s244dfpdb0lzkl2wk7q11v0t9ooynxjnnlgos6lxgsqovnhq8qd\", \"6vxhilizdatvq9geu964l0kf6s6d7y6lp51pthf01qynq5wmmluo3ex7q8u77fbzi0p7j3lcfrv93s92acj0eq89krqa5yebuv1dodmsx6q9bgg7mhu6ujlrnu30048hz84dju076ikqecv061rcypwo3h4axf1holj1eex9ad3amwnxzkko70t58obw4tdsautubdn\", \"x081cc588b\" ],\n  \"account_sid\" : \"ACfFd6Cf3FD834dcfd9f6F2FbB7f4Dbeba\",\n  \"chat_service_sid\" : \"ISB2FCcdceAfDDdb4D5CCF9Ab558a295f8\",\n  \"type\" : \"conversation\",\n  \"url\" : \"https://web.example.mocklab.io/650438\",\n  \"sid\" : \"RL50357Da8d2FF78d3ab35BAe2bE94DdCC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6172479-5dd3-491b-936f-e7fac67e7c05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.145995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateRole",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "chat_service_sid" : {
                "description" : "The SID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) the Role resource is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the resource.",
                "nullable" : true,
                "type" : "string"
              },
              "permissions" : {
                "description" : "An array of the permissions the role has been granted.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Role resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/role_enum_role_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this user role.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "d9d4f91c-cd9d-4f5f-a988-e32095408fc0",
    "name" : "Retrieve a list of all user roles in your account's default service",
    "request" : {
      "urlPath" : "/v1/Roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/463551\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/056160\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/175276\",\n    \"page\" : 8018871552322043740,\n    \"key\" : \"9gkfex1h2pvv22jd771h9pjgs85h8efauq94mjbfgcemu8493r4w7vdhk5trl01\",\n    \"url\" : \"https://web.example.mocklab.io/918791\",\n    \"page_size\" : 2757042601715875205\n  },\n  \"roles\" : [ {\n    \"friendly_name\" : \"Will Bailey\",\n    \"date_updated\" : \"2023-09-02T13:00:18.144Z\",\n    \"date_created\" : \"2023-07-25T02:55:55.144Z\",\n    \"permissions\" : [ \"eg5l9t4s105u9icbsuu8brvolv9cj8odvcwswde890g8opbkxd2a08sifyyjd2plld0bjubt2mkga7pfkuz7dyiz4lfl\", \"9v7nwuuyd508ojwhjmi7ox4i67ts53qdg7ixdku9k0agcvnmzk2054ijlxm0wgqln5c5nh6moaw4z343ym7xmrmibot9pnlo2xk1kzk31f4suqv4a47goaqyc7d1v789o2eo0sycfasocsnb4ykcyabwkcuqyw75v5n16fhop0n0yxttkot15agcepoabb\", \"edopqar3ssfg8k3puaf\", \"uzm4a1k44aipy0mm1kbc301amscuztf1rvck0lamz521yxex1k3cfa7dbz1swhtqr9su7fk7wuoq198kzd0afl3ljfnd\", \"9hl44kljma3g96egjjce7l0nz1vcmhrnsn3cdozutc8bncv89znqtf2ryyu68hkavvxtvyhc275c3\", \"zqq17f3yrw7vehk4454iut5iwu68wcgybjbsof16d95kfdaamrbp1pnb0ayjju24cbk4687c8sofp2h0m93unbfkn3oqm73nxo9fs9yl5nnvm\", \"vyy3m8rmoq7li34cbdx2s3gexij4axohla39pyumw50muvrv27i6jxfh4q2vol2uujk\" ],\n    \"account_sid\" : \"AC61DFdF3B736BFAEdcd8ce3bfdcCd8Fe9\",\n    \"chat_service_sid\" : \"IS29b02FDCcF69fAe319C0e1fA3f5FEf7C\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/300584\",\n    \"sid\" : \"RL2fd85CbF700ceF0B69d9cdE1F0C5757e\"\n  }, {\n    \"friendly_name\" : \"Mr. Susie Douglas\",\n    \"date_updated\" : \"2023-12-01T07:20:24.144Z\",\n    \"date_created\" : \"2023-04-18T02:03:15.144Z\",\n    \"permissions\" : [ \"q6zxm368f2fkmlszv4jlpuomqczm00j6a0ghqfa91dvrieahbgqp5ezoi1nm6bua4joabohsterdn3rv3bq63a2f7rmrjey428g3jf1bjt5rcmb5yi3fvhxi4lfiiqzbnywmk8c9\" ],\n    \"account_sid\" : \"ACe3d8fcE69c861Ce1E9Ed32c2efb24F0F\",\n    \"chat_service_sid\" : \"ISAB6cB239Fb9F684C2FdCf86Cafe0e2Bf\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/837333\",\n    \"sid\" : \"RLE56fEEaCC3f8a8cB7D439cEA7fb0F78d\"\n  }, {\n    \"friendly_name\" : \"Micheal Maggio\",\n    \"date_updated\" : \"2023-04-07T10:04:12.144Z\",\n    \"date_created\" : \"2022-08-27T07:38:10.144Z\",\n    \"permissions\" : [ \"scbz0be1q1f6c1dzqm8ga5uyw1f3wdymh17qsj2b6durrj2ww6dsowaz7cudg76f59cbxiv86s9zkd61bbh7l8t1g9u07bqlnt1muotr5gjbnxz2d2abkmzjqx7hm2ihwjv38v0hy4ouv82icl37y6redat6h8ab\", \"2xkzxnocg0v3ygc7jld1187kj88w5mwifkucbrl9aksrjqzftql2eh270jhlb5gm28wm82genipeh3p2timohqa7eug799xleytoequuv6opbvml92ce6ua4gxyztajurcagf3httdbfrea419199y65zgjhpca4qtbepjjy9m\", \"ifjmfh1isybj\", \"lqz126qkcn0df0g9mdndcwbkjlpll7g8irz7hlev9\" ],\n    \"account_sid\" : \"AC4e51fccB55ed3FC40Dd14f2e808d0de0\",\n    \"chat_service_sid\" : \"ISba80D955b51e6ab8fB709C00D4deF5F7\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/863474\",\n    \"sid\" : \"RLFFfFCCcD74BCD8EacEc5b0ed96Bf259e\"\n  }, {\n    \"friendly_name\" : \"Kandra Hane\",\n    \"date_updated\" : \"2023-09-16T00:47:39.144Z\",\n    \"date_created\" : \"2023-04-14T21:53:23.144Z\",\n    \"permissions\" : [ \"j2fyvalv1dwo4rwn05ojqa9pcu1a5c1gwz48jhhrpzspppe2i6kpfl3niseomyr9nwbqcl9cny3nng6y3dvonj3r11vgj8x94awzgayk0b5afq3jonrs1\" ],\n    \"account_sid\" : \"AC09d2F118E13A3a0cB70cB7F7bCea36b6\",\n    \"chat_service_sid\" : \"ISAB87eAB5FC3bd00Bc3ED826d22C9296E\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/692058\",\n    \"sid\" : \"RL5BF5223fcAfBeD4adbeA3ADF44eb0d07\"\n  }, {\n    \"friendly_name\" : \"Liza Hodkiewicz\",\n    \"date_updated\" : \"2023-06-30T19:53:16.145Z\",\n    \"date_created\" : \"2023-08-08T02:02:03.145Z\",\n    \"permissions\" : [ \"7rqdd18a9x4vhe3eo933s4uxcmgr2dbguoucqkmdyzgr9ovsgmykjrjoahful92xq98751iampfvo1a2qg5uabscvjs08r4o8idzx46lj32w6hmn4cg757vcusa\" ],\n    \"account_sid\" : \"ACeF8bff81d96a4BDE3CBfFB0C40ec737a\",\n    \"chat_service_sid\" : \"ISe63f5F2FeDBfEac45c3Aa41f75fF1f9A\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/795928\",\n    \"sid\" : \"RLEbDa59B760Dfeec3e0A2FccDbab6A9FB\"\n  }, {\n    \"friendly_name\" : \"Robert Mills\",\n    \"date_updated\" : \"2023-11-29T11:01:00.145Z\",\n    \"date_created\" : \"2022-10-10T01:10:16.145Z\",\n    \"permissions\" : [ \"hnn1offhfcyivqq2lfouus6x45p61sjwmtco3t6qary5p0y3urccawp8ty75ec8039djl0oki3n52g2q4vvdmz4libdnxdc4cx3\" ],\n    \"account_sid\" : \"ACbD4ABE23a2a173b21C0afFEBdDb4FCdB\",\n    \"chat_service_sid\" : \"ISa8a0e6B62D45fC95aAaeE7a3538Cc362\",\n    \"type\" : \"service\",\n    \"url\" : \"https://web.example.mocklab.io/781818\",\n    \"sid\" : \"RL0e70693Db688a9FFC64c794656CC82bA\"\n  }, {\n    \"friendly_name\" : \"Francisco Kohler\",\n    \"date_updated\" : \"2023-03-16T09:02:43.145Z\",\n    \"date_created\" : \"2024-02-21T03:34:51.145Z\",\n    \"permissions\" : [ \"ld9pnq6drbjo6m6dozjbufxmv107y3ie1wmv9s81mcy4kkjpgv1s4njxmahpgotgxjq4lty6qqj43izva9a22zvox6ywioqzfy8si5is5d8f50gcw6pc48vjwqicpl4yp55ip8y75ageumz6kia35a183p9blp6qh5fftu73kw85agsnsbh791\", \"8gx37oq9bmptxz0rdblqiid2ykeyh37uerlqhxz\", \"z51p2dnk9f1js567bd9ebotbiu2brljq9lb1306sq27sg9q6w87w4akqyeynwufiu1wolxolz9p02gf3odnk7gb6xhkw7vetk788rsyed9jrlypm5z1x5x1po3oyri4fi6jmi90rdpi0pzblgm7x\", \"fk2tu8n3s48im9oosechdxje29lk2twgb795c3wuag61e2ox16glfvd295dv6nvk6hnca5ts0ox96mqtenur5guivy850qh0vy5ufg6r6ttlihho0puftppxmiitg9a2zvokfow0v9eave5ajtg4z2b5aofjapnti2i5\", \"byk3ynus1382rwalcq01o7j3b33xqv41x6xbkieluvys4lbxenq2pf4ormcinl40xml5clu3calygeu81u7carslsv7q1dnkkdm04vr3euasqdzu1ud09nn5mm90m0e5iffq\", \"dlhh3d28y5o5j8\", \"22ksrbdukgjhfybv3zfanf19s6hcf9md64pcsot7tn5rw\" ],\n    \"account_sid\" : \"ACFdFAA7c6924EFf7b09f03Aa54bEb5b86\",\n    \"chat_service_sid\" : \"ISf9AA68Db3dBc82dF1fc92A511dFeB0C8\",\n    \"type\" : \"conversation\",\n    \"url\" : \"https://web.example.mocklab.io/874630\",\n    \"sid\" : \"RL20a3F3c7eD1A0489fB1FEe45dce5AFA7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9d4f91c-cd9d-4f5f-a988-e32095408fc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.145699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListRole",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "roles" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.role"
                },
                "type" : "array"
              }
            },
            "title" : "ListRoleResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "a0389435-0939-481e-b8a2-5be921eaf84f",
    "name" : "Retrieve a list of all Conversations that this Participant belongs to by identit...",
    "request" : {
      "urlPath" : "/v1/ParticipantConversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/146209\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/275083\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/661902\",\n    \"page\" : 6242364726142835291,\n    \"key\" : \"7epwoyoyazouqm5fklk7seyhrjw7hj18g2v392aq26y5wkgbevokv5qa69f54pkp0brivtug11s7dedy0hxjt8ueik1nr8oz26uzqp6rk92m7vozjiztvvdx9okozvcwvqwcmsxkrlnfc6en7zamnm30xkayussia0pqkh4h539dj9akz7uarhxlihdvlax1ljd4\",\n    \"url\" : \"https://web.example.mocklab.io/951658\",\n    \"page_size\" : 3040599015890699686\n  },\n  \"conversations\" : [ {\n    \"conversation_created_by\" : \"782o8ni0chtksvb\",\n    \"conversation_sid\" : \"CH70D6f4b76fDA34E80FFDDEbcBA21b6e4\",\n    \"conversation_friendly_name\" : \"Robby Oberbrunner\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"1y4ylevj19u6f4kwakl5beizs36ucsm1mjzowl5vfjc65gjq4lwfe264f9gdugj4d23ooa0ac13990cdxred5pyu789o281p1ko\",\n    \"conversation_date_created\" : \"2022-08-02T16:35:38.142Z\",\n    \"conversation_attributes\" : \"h5zwohhh8nzj62ur0tqvzs1cebe9202khxh66fvvm9vs5zanskhgo2ll52n3sib0vkmvqe577ijdr96kwrly0jml\",\n    \"participant_sid\" : \"MBA11a732E575FCDfbe060e7dFDEDDa06e\",\n    \"chat_service_sid\" : \"ISc895250d923ee96Fb7C1CD5Ef6aEC96e\",\n    \"conversation_date_updated\" : \"2023-12-17T09:38:28.142Z\",\n    \"conversation_unique_name\" : \"Gale Spencer\",\n    \"participant_user_sid\" : \"US7b6c5dD24275baFF43FFBDE0c761BbeD\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACfF80ccf5fE789F74D09BAa72Ec6a7568\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"bqndggxelr28uzq4ma2fdu10wvnjzmnby1ib3antfogcw5t0ni7a0tahk8p8bh1hiitnjb1tlylevuuudl03qs2i1uoc2k24m8nn81lbmwfu0p53fwnn7n3tj4g9ils\",\n    \"conversation_sid\" : \"CHFCf050f44bC0bCdf7a744E1cD5AfBf52\",\n    \"conversation_friendly_name\" : \"Solomon Hahn\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"mngx4bn8jzwa1oma33wuphuy5s43p9bphmcxzv0mf8aq3qte445sntlpyd4f0xxsgrdqjubb4audc53azs79luhawip8fj07cocksmp1jru9bdtotc15y1mpx8warkpkpfufy\",\n    \"conversation_date_created\" : \"2022-09-08T04:27:44.142Z\",\n    \"conversation_attributes\" : \"ky8ary76b92zoyzl5akwkpblkvzja2ycqorfh\",\n    \"participant_sid\" : \"MBf54dAc14DfBF0ffff23a9e7C929Da452\",\n    \"chat_service_sid\" : \"IS01D91C8c5aD6ec44ECf153b018F4B9C3\",\n    \"conversation_date_updated\" : \"2024-03-07T09:15:51.142Z\",\n    \"conversation_unique_name\" : \"Mercedes Shanahan\",\n    \"participant_user_sid\" : \"USAA597088f3ee4828dd0A3aC7cBB10D43\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC522C08E04e13B990550DBF62deeE42eB\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"udw0rs4795iiaa03u59mpsr3yqgnu8h\",\n    \"conversation_sid\" : \"CH8f4a228fEc4Cb53b4F7CD9507efAeAc6\",\n    \"conversation_friendly_name\" : \"Blake Herzog\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"wv6z5qz8mmerafzyp6sujoqpwa0squ4rl3oitrad7h5imjovdf1oa2ju52suos6h8mgwpb2lydvsvk4t8ox6xli5g59d2sk2973cja7nt8wh7dtdof3l2ylogd7d4fp44ooage053rp1kb8aw7sgxlft5gfzlkvsd4buzcnhs655i9he8ka3fdry3p01i80\",\n    \"conversation_date_created\" : \"2022-09-27T05:19:00.142Z\",\n    \"conversation_attributes\" : \"hm49fqzfoxk4d97nl\",\n    \"participant_sid\" : \"MBa095b6C7D66a0EbCf5C7A3c738aC497c\",\n    \"chat_service_sid\" : \"ISc8Fa4d9f3019Ac3bfBecF2f8eb0C1AD5\",\n    \"conversation_date_updated\" : \"2023-05-02T09:27:44.142Z\",\n    \"conversation_unique_name\" : \"Ms. Numbers Hermiston\",\n    \"participant_user_sid\" : \"USaD8FDaBaFff69f162bc9BB33AE707cED\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACbBB3913Af857Bdef3BFCDaE5D7e7cfFd\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"lhhzmmhrbqnwl7v6pzdc9x50j4clp4cyxjkelvqfkkxwfcrp6wx5vab3lbkaqk9lj8m8m119bho4scnaidu88hlwrbec13p1vu78m4kbltu6xgs47qpvaoaou9ycxyfgh7bebnryi5ltd3117z8e19kb9n8mu1cbwabfffxahn46krvj6t4xjwr167cpwkshef\",\n    \"conversation_sid\" : \"CHc5fef801e2C7Ce6abDb6F0aA7af01aeE\",\n    \"conversation_friendly_name\" : \"Dr. Brandon Robel\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"cw28punmotyh0vmc9lfvbuaaid5rz5zzwdelstvo5sgexrx1zeo17yipn3gcp9swnzh29vy4dp9l5utf\",\n    \"conversation_date_created\" : \"2023-08-03T01:08:37.143Z\",\n    \"conversation_attributes\" : \"kgs1x8ezve2lc64vu8yn1j1bpjoahbj38o2uivku92crrry53szl7nw9cx\",\n    \"participant_sid\" : \"MBf3EfFb6Bb20cd538ad6818Ff9E7DC3ec\",\n    \"chat_service_sid\" : \"ISD5A7Da5Ba5F3eC14A6EA1eFf2eCD7e5b\",\n    \"conversation_date_updated\" : \"2023-02-06T01:50:11.143Z\",\n    \"conversation_unique_name\" : \"Dr. Lanell Baumbach\",\n    \"participant_user_sid\" : \"USE3b8eB3C37aFAED9c8B220B88ad2BAdd\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACD4022d49baE5375E7bffa7b4D6ff8DC0\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"5rhlgbndo5u4m2sy9p19appdwsz9zf3ts76nq6hcoz4f38qusmvd3udzme0rmglsz0uyrapu1imqk4yt0c6gtihtk0bv6kbk2917v7t9kjfjllg2bh9vkd0fl4c6gg21ama9acr7w9oa29g35b9e3ilddkyi4s9\",\n    \"conversation_sid\" : \"CHcda4abAe9aB1556BFF3bB0DF9aFb0B76\",\n    \"conversation_friendly_name\" : \"Dane Cartwright\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"kk4516il580w5ndp1laza6f6dpruwe1zsgkx9t6in13tb9oubgmosx4edsirgiec9sx17vut3cqawvs14qheu0gt5j0hqbqyv1mqihbccwzfnpe6o2exn0bj5pllc3z4emw3rlh9ghhb17d9zl508phcyv9ne\",\n    \"conversation_date_created\" : \"2024-02-13T19:59:34.143Z\",\n    \"conversation_attributes\" : \"lb5w9uawkld\",\n    \"participant_sid\" : \"MB5EAf6B91c1E502bAF9593Afd9fBE2cCe\",\n    \"chat_service_sid\" : \"ISeCd225d5DAF7aF37d36DBff9D8fCD5aB\",\n    \"conversation_date_updated\" : \"2023-05-12T00:52:45.143Z\",\n    \"conversation_unique_name\" : \"Laverne Ledner\",\n    \"participant_user_sid\" : \"USf2aD329f3e6A4D7D2Dfb368377276cA7\",\n    \"conversation_state\" : \"closed\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"AC3ceaEC7F429AAbe1bbAa8BF5e10Cc4C1\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"efg23hdlycl1pploaj8is76g21cyaif1np4tmsqurz3mcky3043z1qau06lv5c4cziega4iq8bxkju0etyahuhvpny8fgnu733cm5mxsucv7t\",\n    \"conversation_sid\" : \"CHDbb29B10DB5DdEBf135e7bC60af5dC2A\",\n    \"conversation_friendly_name\" : \"Miss Tony Weber\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"0qiitxpwhdb1sy1ge9yfu0h8wp5rxp1hi634ir8sgefehp7sfwvsces2j2lefzsrr1halnsu0q88267j1kenn8txnqozchtdvvn7gh\",\n    \"conversation_date_created\" : \"2022-07-04T16:58:09.143Z\",\n    \"conversation_attributes\" : \"romdut7bn760wrql5t0o675\",\n    \"participant_sid\" : \"MBBB393BD80aCd3CFe4fc439072AE0DAc6\",\n    \"chat_service_sid\" : \"ISCDEfFAed5Aa3eeFF197abAB1d6EDAEC8\",\n    \"conversation_date_updated\" : \"2023-03-22T12:56:01.143Z\",\n    \"conversation_unique_name\" : \"Scottie Mohr\",\n    \"participant_user_sid\" : \"USc7DdA3528Dad15d8aBcDc52FFcDC0d3c\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACd6f8bcBAd4aA0257CfD77ceBb88dD4Ee\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"8ljjznx69ibu9787r38kpkqw7lyft4wxcx5jrwqls0q94iojc9zbzjb05eia5u3ybeeesi1cr3rhq73nqxgcgpk6yx07qz3et6zd7xda3r8xuatfebiih21dw\",\n    \"conversation_sid\" : \"CH1D012380FfBD4dED1c7186B0ab0dcdb1\",\n    \"conversation_friendly_name\" : \"Dania Bergnaum\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"2kvzu77iqzfy1qfj4w2pfnbwl66ojme2apt0yl\",\n    \"conversation_date_created\" : \"2022-04-08T22:03:47.143Z\",\n    \"conversation_attributes\" : \"a3439tdsoah7j1i7f7d84tsjvjlysjf40mnuj4qdrsmohpybzkgeegere4if1p70j6gcwdoan0eimhkje88tezgac9jeowzqmsu9zwm2fjybb9ccql35dn0947mnwgbbc8f941pidt0lrrlq4deu\",\n    \"participant_sid\" : \"MB9CA974aD187D0A31e40E3bB7DbC1aFd0\",\n    \"chat_service_sid\" : \"IS0bB1478b12Ba930Bb02D10C6C84Cf04d\",\n    \"conversation_date_updated\" : \"2023-12-16T02:20:47.143Z\",\n    \"conversation_unique_name\" : \"Audrey Gusikowski Sr.\",\n    \"participant_user_sid\" : \"US2dBDCd0dbc6DA77D9E8060F472E02EF0\",\n    \"conversation_state\" : \"active\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACdaa3EF0015bDb0e680df9F4DBbbaCcF9\",\n    \"links\" : { }\n  }, {\n    \"conversation_created_by\" : \"7hgugan5hnfkm9ox5mrf699u793t0natxjm4nsf6thfubsbgap6s8e0mvnh35109itvgtilyanrxd8qrchqnvyf7h689ci0ky0m7y1y52lzevrsq0pqccmjp9uc7q3yw5e4ww6qc3519twy98yu9ygogbgm8a8e74bjtk7hx4i\",\n    \"conversation_sid\" : \"CH6fEacEca9EfD7cA705B8EFC31C36B7FB\",\n    \"conversation_friendly_name\" : \"Rosamond Hickle\",\n    \"conversation_timers\" : { },\n    \"participant_identity\" : \"vi0z0mzfr48ytrofondsr58ee9vd71u90pvi4b9zu5yu7x00hsubgj8idzc4v9d9xiyej1tkx0a5q4inzepxem8oielbdsw4ala4eb1td2wu2w7caz28706d25c4367vdl24p2rftv7ve61l7kia9o3hbd017s2hgsjafshxxjk6bgplp4hl5ac6r1zw6twqmflp2nhn\",\n    \"conversation_date_created\" : \"2022-06-10T08:02:27.143Z\",\n    \"conversation_attributes\" : \"zuf27l3fhn44ykkfcirl909iemljdww9clv3fr2wsmde0zpvi1wmpmf6en8g3a42g0rt08ffo\",\n    \"participant_sid\" : \"MBC26fc3AEDC0d64D628Cefa45C25E84cD\",\n    \"chat_service_sid\" : \"ISD6Ac7CAcb290712dE467963ddDf382e8\",\n    \"conversation_date_updated\" : \"2023-09-14T08:45:10.143Z\",\n    \"conversation_unique_name\" : \"Rueben Hessel\",\n    \"participant_user_sid\" : \"US77D76f3c4EF995995cED885B5Fd7BF86\",\n    \"conversation_state\" : \"inactive\",\n    \"participant_messaging_binding\" : { },\n    \"account_sid\" : \"ACD316E3E866Ca5e00AdcEF4fD9d7B68dc\",\n    \"links\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0389435-0939-481e-b8a2-5be921eaf84f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.144118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListParticipantConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.participant_conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListParticipantConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "b974fce4-e0d4-4fcc-b0e6-d38db0ea1a8a",
    "name" : "Update an existing push notification credential on your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CRb2dce28Fa7f2De2511EE254fEdB59978",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Doloris Bauch\",\n  \"date_updated\" : \"2023-06-13T09:52:34.141Z\",\n  \"date_created\" : \"2022-11-03T18:25:33.141Z\",\n  \"sandbox\" : \"0af98t6nlbv9vsf44mw64gor1ejb8bvhhbub552lbm84wk6zomcsyx2tk\",\n  \"account_sid\" : \"AC181AcbDAB8aFFB48EF013C5BfbBED5Be\",\n  \"type\" : \"gcm\",\n  \"url\" : \"https://web.example.mocklab.io/083977\",\n  \"sid\" : \"CR3f1A721306A7aebE6B2FA7Caed7DA66d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b974fce4-e0d4-4fcc-b0e6-d38db0ea1a8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.142155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "f2b595ab-c1ff-45bd-8f39-4be50902edcf",
    "name" : "Fetch a push notification credential from your account",
    "request" : {
      "urlPath" : "/v1/Credentials/CRb458DD1bF4D16c1dA1aD74Ed9F2D1B07",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Clark Heidenreich\",\n  \"date_updated\" : \"2023-11-06T19:44:25.141Z\",\n  \"date_created\" : \"2022-12-23T04:40:39.141Z\",\n  \"sandbox\" : \"2igsz7celedzhsaek4u3dc1yubr35sronvw0fyfzqzsziknd\",\n  \"account_sid\" : \"AC27Dc6A3FB098FB50915FDFe8f706bB9e\",\n  \"type\" : \"gcm\",\n  \"url\" : \"https://web.example.mocklab.io/404761\",\n  \"sid\" : \"CRCf19badd3bFEBF8Ce1AFb9AA894C981D\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2b595ab-c1ff-45bd-8f39-4be50902edcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.141941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "5937cd10-a7d7-4da9-a01f-c127d1cd8e77",
    "name" : "Remove a push notification credential from your account - 204",
    "request" : {
      "urlPath" : "/v1/Credentials/CR8351DAD70DDD1cCfC6F94dB43ed204a9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5937cd10-a7d7-4da9-a01f-c127d1cd8e77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.141725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteCredential"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "af067c58-f55a-4c98-8b69-c3fb62d30bbd",
    "name" : "Add a new push notification credential to your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Charlette Bergstrom\",\n  \"date_updated\" : \"2023-02-09T09:13:59.141Z\",\n  \"date_created\" : \"2022-04-03T08:40:03.141Z\",\n  \"sandbox\" : \"il2o58am8icz3bp6tdp50cbpyh\",\n  \"account_sid\" : \"ACdDdb58DCb94A9e222d5e1d717a952439\",\n  \"type\" : \"apn\",\n  \"url\" : \"https://web.example.mocklab.io/613721\",\n  \"sid\" : \"CR2EEF1c22Bebc0Ee288BFdB3bD91169c2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af067c58-f55a-4c98-8b69-c3fb62d30bbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.141685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateCredential",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this credential.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this credential, limited to 64 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sandbox" : {
                "description" : "[APN only] Whether to send the credential to sandbox APNs. Can be `true` to send to sandbox APNs or `false` to send to production.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CR[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "$ref" : "#/components/schemas/credential_enum_push_type"
              },
              "url" : {
                "description" : "An absolute API resource URL for this credential.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "7978cc7b-2a32-4109-a90e-1f21805a01ce",
    "name" : "Retrieve a list of all push notification credentials on your account",
    "request" : {
      "urlPath" : "/v1/Credentials",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credentials\" : [ {\n    \"friendly_name\" : \"Lasandra McGlynn\",\n    \"date_updated\" : \"2024-03-07T13:20:42.14Z\",\n    \"date_created\" : \"2022-11-22T04:50:26.14Z\",\n    \"sandbox\" : \"15ma157addipwa0v14jhx0i4vqotuhz0g3ojfodawmkljz0iism1bmla93zjr6sbbp23a5yjpcxemirr5pjbp8h9vqwrd13ccqlccwekdmunkxv4onn7fuynxwanjpg6q38orqtej9v9snygnzkhs88nwhih66jmmzlcotv7ow3pfpu0cdq8mizvr4jq29svfrks7\",\n    \"account_sid\" : \"AC6bB6f03eBc79FBDF0Ddfe864bb24AC61\",\n    \"type\" : \"apn\",\n    \"url\" : \"https://web.example.mocklab.io/746264\",\n    \"sid\" : \"CRddC73FC2cb5131b2cc2a2CaD165bCfBb\"\n  }, {\n    \"friendly_name\" : \"Yetta Tillman\",\n    \"date_updated\" : \"2022-04-02T10:34:31.14Z\",\n    \"date_created\" : \"2022-11-05T23:04:32.14Z\",\n    \"sandbox\" : \"6qvadsvgjx3jl6wzv0czs4kiyw3kkpkce9zwtqf7r10e9dsxxg7px93pxnnq69od3rrb0e672ktc1f157o70q4cjxfum9dr952t11l5ww26uwem3k4his1642oy31wwiu472823d57az7zgfdwn21atrsi4pmbkuobj99v5w4r38cxnhx07x7dba2to5hymvdh\",\n    \"account_sid\" : \"ACb83B17A71ce4F14F34314176d4f25Cb6\",\n    \"type\" : \"gcm\",\n    \"url\" : \"https://web.example.mocklab.io/818924\",\n    \"sid\" : \"CRfb8A39694e6b23Fa58Fddf94fF262c5e\"\n  }, {\n    \"friendly_name\" : \"Mr. Jana VonRueden\",\n    \"date_updated\" : \"2022-06-21T02:39:07.14Z\",\n    \"date_created\" : \"2024-03-03T08:31:29.14Z\",\n    \"sandbox\" : \"mh62spups6ah3x9hmhtlkhilanha32bwa14gu5qt0ldrlx4fhwfu5uoxt75\",\n    \"account_sid\" : \"ACa987bA850Eb68ab2CcDF3d6a925569A6\",\n    \"type\" : \"fcm\",\n    \"url\" : \"https://web.example.mocklab.io/118315\",\n    \"sid\" : \"CRebBF68f0abCeDD2BAfCA4abda67a5BdE\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/784097\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/515360\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/251548\",\n    \"page\" : 8120729666453581769,\n    \"key\" : \"nli0lj46txt27oycp6kpg85n628sl7jawdg255xqos4ual3922x\",\n    \"url\" : \"https://web.example.mocklab.io/992759\",\n    \"page_size\" : 1023766931962448036\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7978cc7b-2a32-4109-a90e-1f21805a01ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.141437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListCredential",
          "schema" : {
            "properties" : {
              "credentials" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.credential"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListCredentialResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "84fe0dce-b617-4172-94ae-ed5798444913",
    "name" : "Update an existing conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/dkl1",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Iola Conroy\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-09-10T20:18:09.14Z\",\n  \"date_created\" : \"2022-04-27T15:34:03.14Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISE1577ED2a58dA6BE2f8393F7121dCEFA\",\n  \"url\" : \"https://web.example.mocklab.io/643296\",\n  \"sid\" : \"CHff862B40de17B9ddDd4716a23c2D0CFB\",\n  \"unique_name\" : \"Trenton Moore\",\n  \"messaging_service_sid\" : \"MG472c5D04bBf5d848d11AfAe92C29DCDB\",\n  \"account_sid\" : \"ACcFaEd03CEBeD9BC1dEaFd3DfF97bB1ac\",\n  \"attributes\" : \"d05csmxx44daa5dks5dt5mm1f2bv1ui3hy34t4wjnzc2\",\n  \"links\" : { },\n  \"state\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84fe0dce-b617-4172-94ae-ed5798444913",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.140562Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "3e056581-dbdf-4e10-a83f-efcc964c851f",
    "name" : "Fetch a conversation from your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations/xk48",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Jacquie Marks DDS\",\n  \"timers\" : { },\n  \"date_updated\" : \"2023-06-15T05:37:06.139Z\",\n  \"date_created\" : \"2022-05-01T09:15:12.139Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISEa1aFb873EB1D91149365d48dC9BcCa8\",\n  \"url\" : \"https://web.example.mocklab.io/626743\",\n  \"sid\" : \"CHC8fcEa56A8B9BbC7fc6cC3f6d27c5d2e\",\n  \"unique_name\" : \"Abel Jaskolski\",\n  \"messaging_service_sid\" : \"MG9BFA4296DfC01Cac1fE25fBfe88EC743\",\n  \"account_sid\" : \"ACCAa09a5Da5eA59a8f6EF36d21d126e56\",\n  \"attributes\" : \"80n029d6jisore5f5rktk37zu8ouiv84m4f11ogci7isogprr46640t7e81sxlb1watmc4aejvi1vlk1ixg7j0julaywp0zaabo58tuf0jt9svpiwjpih49ob54m84swcvsckv7877zta8m1sya1yeom8\",\n  \"links\" : { },\n  \"state\" : \"inactive\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e056581-dbdf-4e10-a83f-efcc964c851f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.140183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "d6907bca-1e3a-48f4-a809-cc6b7efbe101",
    "name" : "Remove a conversation from your account's default service - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/7618",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d6907bca-1e3a-48f4-a809-cc6b7efbe101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.139709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversation"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "5952bcd3-d8fe-4060-be18-efafb09fddd8",
    "name" : "Update an existing conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/6n4w/Webhooks/WH6c92cd5be4f0ee2366DF9376Ae5Acf0C",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHa10063330af0ff5dADE134a8aaf973Ef\",\n  \"date_updated\" : \"2024-03-04T00:00:37.139Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-03-22T06:40:40.139Z\",\n  \"account_sid\" : \"ACAd5a5815551eACf0aaFC02DDfA6CbFD1\",\n  \"url\" : \"https://web.example.mocklab.io/939843\",\n  \"sid\" : \"WHa3669052a6bc5DfFEaFD3f1c8B3e7F51\",\n  \"target\" : \"lb0y0z3f6damcy7oknwayo5tix22t80s3ixcebve4dusf56phqj9oipagbk647k4gd2tl9f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5952bcd3-d8fe-4060-be18-efafb09fddd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.139617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "832dea02-6056-4f18-9cef-2711c4ed88f4",
    "name" : "Fetch the configuration of a conversation-scoped webhook",
    "request" : {
      "urlPath" : "/v1/Conversations/at74/Webhooks/WHCcf57041b607Dae8B8f5ABCb7eEe783B",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH3a149bc90acB1Cd26c20CDbaCAc706b7\",\n  \"date_updated\" : \"2023-07-18T09:40:29.139Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2023-07-09T09:08:33.139Z\",\n  \"account_sid\" : \"ACc7a08B86CCDCfAa991fBa04aC12647AC\",\n  \"url\" : \"https://web.example.mocklab.io/538963\",\n  \"sid\" : \"WH4BBb942eC2ACB3EeCEe5f7AA56A8A106\",\n  \"target\" : \"izk0oc2il5ulmu1v13i6dodck67lej0l41k270y3sl3jl8snie8e1csbb406157ocqwlhkdg4t86km9xd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "832dea02-6056-4f18-9cef-2711c4ed88f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.139359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "11d50f78-7af3-4b3b-bb76-1676f2eff76a",
    "name" : "Remove an existing webhook scoped to the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/a86o/Webhooks/WHD1DeaCDBf223cfc1C2eb858f290f64de",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "11d50f78-7af3-4b3b-bb76-1676f2eff76a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.139106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationScopedWebhook"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "faf7b3e5-39a8-48c0-84a2-f1b92ceeb760",
    "name" : "Create a new webhook scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/6v31/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CH080CEf19EFeb478cD9F3A8f5ACe0d605\",\n  \"date_updated\" : \"2022-03-30T08:39:03.138Z\",\n  \"configuration\" : { },\n  \"date_created\" : \"2024-02-21T04:35:16.138Z\",\n  \"account_sid\" : \"ACC5E532F3748B3153f1D5c1d661d09AF1\",\n  \"url\" : \"https://web.example.mocklab.io/882712\",\n  \"sid\" : \"WH1B01DD5A2b5d0d1f0fc1877418FCDA71\",\n  \"target\" : \"5zduwudlpdy4birx5pqnf0lzp6xmh95nropmcmi4r3ju5sja1ly48fqn55uvzayrys6l97mx7f30ps6liqee2nk69h52in5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faf7b3e5-39a8-48c0-84a2-f1b92ceeb760",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.139004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "configuration" : {
                "description" : "The configuration of this webhook. Is defined based on target.",
                "nullable" : true
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this webhook.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^WH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "target" : {
                "description" : "The target of this webhook: `webhook`, `studio`, `trigger`",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "1aff24ec-36f3-4201-825a-ef0916b7df51",
    "name" : "Retrieve a list of all webhooks scoped to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/0k3d/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"webhooks\" : [ {\n    \"conversation_sid\" : \"CHbc8eEEE3F6dcD50938DeD080cfed0Cde\",\n    \"date_updated\" : \"2023-08-21T06:11:57.137Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-09-05T04:06:17.137Z\",\n    \"account_sid\" : \"ACA40dfB0eDfa069d9BfFD07A24cB7dBB3\",\n    \"url\" : \"https://web.example.mocklab.io/805116\",\n    \"sid\" : \"WH8b1709AEAc8820BcF959c2c6B1706f20\",\n    \"target\" : \"n4jpmcygd54ryrkwqnj1qa3iog66b4uqkk4nl7b74ffam2guftahmgtqx1a3qvx6tr\"\n  }, {\n    \"conversation_sid\" : \"CHe633aBf8E10DeaF5aa54c1Ec8fcff31b\",\n    \"date_updated\" : \"2022-12-24T07:09:03.137Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-04-09T21:55:56.137Z\",\n    \"account_sid\" : \"ACc91cE4e7E0EAa3cFF1CFDFac0A4D306e\",\n    \"url\" : \"https://web.example.mocklab.io/851791\",\n    \"sid\" : \"WH73f9FFbB27FabaE1c497fAe8B5caBfA5\",\n    \"target\" : \"k0lzrq4pckr3nbecfjaggdi4i7\"\n  }, {\n    \"conversation_sid\" : \"CH709d2F4Fb25C8c595d1faa0E44E60E35\",\n    \"date_updated\" : \"2024-01-12T15:45:59.137Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2023-11-07T09:46:41.137Z\",\n    \"account_sid\" : \"AC78fB7b4B4E1C29aF383FE88Aea2AA8F0\",\n    \"url\" : \"https://web.example.mocklab.io/834864\",\n    \"sid\" : \"WH9BD97AA645bE096bd30F7Eed032D0c6c\",\n    \"target\" : \"h4r5oy4uo702zch6bl9gdhdwkzz37dzjhtqgjf6tzpaosfexu49dlh30f1ucyxl9czqv9utrcdav26u3w9f0bxtx5zo1s7j6kpov096s168z94smvk4mgzabewbaeuicwqmgrel07k9wqxk9fm52fw76akqd3\"\n  }, {\n    \"conversation_sid\" : \"CHbE2Df31a1adf55ACDfa6dF4BD14f7eD1\",\n    \"date_updated\" : \"2024-01-06T07:55:18.138Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-12-30T02:06:07.138Z\",\n    \"account_sid\" : \"AC7e201Ea0DEF46Bb274Cf229938AC7d35\",\n    \"url\" : \"https://web.example.mocklab.io/220267\",\n    \"sid\" : \"WH8fa7ceAfEdacfB23331EcD71AA8bAF5f\",\n    \"target\" : \"wxwi8sychu7r7r02q1bejmkshfxq7ttzz2899gl92ph2oj8tygu5hqkin08hb9zayrv\"\n  }, {\n    \"conversation_sid\" : \"CHbE0c03Cd1E6cbB8B446D8c1fCCbFCc4d\",\n    \"date_updated\" : \"2022-09-05T19:12:59.138Z\",\n    \"configuration\" : { },\n    \"date_created\" : \"2022-04-02T07:59:46.138Z\",\n    \"account_sid\" : \"ACad6ACCA8b34fF57ddCaB5f6A9838350d\",\n    \"url\" : \"https://web.example.mocklab.io/430483\",\n    \"sid\" : \"WHca39CdE2a6FdE1b4E5B56f2fACF0B7a3\",\n    \"target\" : \"iktx6zxo6ed8prjcbbfirmvc54gx84ia4ko1e470hwxfx52k3wvbhyzi0svjkm64r8ale0f593xg6g4dy68zc37ib61ozr72v54ty4k289py47tgk1jp9uqpah9r0x0ngqspdb6f8\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/304041\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/319596\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/169196\",\n    \"page\" : 9165059312331588007,\n    \"key\" : \"vn276uhjivd2hqkmm18d49o2z6530e4f5e7azktki5gtrqq0c708wsow9s52o4dp9kjpchmqzbzi6nrwdm142svjr7rxz9rbddisgahsnx2wlsjl5try6iz6xssu4bh\",\n    \"url\" : \"https://web.example.mocklab.io/206775\",\n    \"page_size\" : 1414905003581291750\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aff24ec-36f3-4201-825a-ef0916b7df51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.138719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationScopedWebhook",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "webhooks" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationScopedWebhookResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "b365243e-60eb-4b96-bc7e-4f7df43efb54",
    "name" : "Update an existing participant in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/6nu2/Participants/457q",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHC7E5aC6B2D048Ea022e2d99EeDe3aA4B\",\n  \"date_updated\" : \"2022-07-09T10:14:40.137Z\",\n  \"role_sid\" : \"RLCfd8c7aA867B9Db7f6a001ef3Ee6Decb\",\n  \"last_read_message_index\" : 2727595601689187458,\n  \"date_created\" : \"2024-03-18T13:32:16.137Z\",\n  \"identity\" : \"tb8wifoqufwue6880jvtqxlx5z2vqnutms4f77qnzv67ctrgebknsb2qn5pllvoz2pyhudyd3gwniftlgq0aeqeqyq5wbkrxxe25lio0emgj48bsv2146m7dv2qd6jgmhr0jj917p1ulylfxj0xrfed6d1smobif5oj7rqsv\",\n  \"last_read_timestamp\" : \"2022-07-14T15:37:17.137341Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"AC2DBAde0C5E19BdfBDC2db5bCCa9fdb4E\",\n  \"attributes\" : \"4vc2bphsh0wwntsw0bdxywk0aymvopo9vyjdvztegkq882qa2avaqnzd9dl4luxsejbdrugbk83ei6nw2eihrs3vueq8kqgqzq6h3ui8sbg503ozi2ifeskvhtc066kqr4j2irmffq9ebndtzf94\",\n  \"url\" : \"https://web.example.mocklab.io/227315\",\n  \"sid\" : \"MB4F94a313c71DCf3b618DCf6f61B8cb33\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b365243e-60eb-4b96-bc7e-4f7df43efb54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.137648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "06d9d789-17d7-49ce-a16a-615e0850fddd",
    "name" : "Fetch a participant of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/vssp/Participants/7ji4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH60AECf517722c1A3FdD4b6dDAe5D0318\",\n  \"date_updated\" : \"2023-01-07T23:05:05.136Z\",\n  \"role_sid\" : \"RLce2Df7393CBcEFecF7a2e9eF61aFcC61\",\n  \"last_read_message_index\" : 2752144611003639104,\n  \"date_created\" : \"2022-11-25T08:00:57.136Z\",\n  \"identity\" : \"ubybq1dw2b4jip7ba90matt7sabrwst701rpya8woazj22v7aqv0poelyracl4oan6owldgm33oa6b89lrlqltl0c6ylqy7xvlchwvbu0ksybbly0sznn1aqyirec1c4ld87f\",\n  \"last_read_timestamp\" : \"2022-05-10T14:41:17.136949Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACC00af1ecdAcBaE932c93Cecedd806AcB\",\n  \"attributes\" : \"7sxsncxkdwht6yz3iq9s7vgxow5eg99lq9rlhggs8yu6dbe4ziddfoqioimonopvya9uvct\",\n  \"url\" : \"https://web.example.mocklab.io/126002\",\n  \"sid\" : \"MBa5fAb310719eacEA3ebef97Cb841d8f0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06d9d789-17d7-49ce-a16a-615e0850fddd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.137264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "758247bf-0742-476b-86aa-cd0fa451b226",
    "name" : "Remove a participant from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/9098/Participants/51o2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "758247bf-0742-476b-86aa-cd0fa451b226",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.136879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationParticipant"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "5f1c28b3-3f4e-4863-869e-543c4e7c3d22",
    "name" : "Add a new participant to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/9aep/Participants",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHecbe6Bf63c1A54dAbF36BD2eF76f0cC2\",\n  \"date_updated\" : \"2023-01-17T10:34:01.136Z\",\n  \"role_sid\" : \"RLE2b05BadddF2d8Db5CBB9ae47c93f3FF\",\n  \"last_read_message_index\" : 9122808946601843766,\n  \"date_created\" : \"2023-12-09T05:11:49.136Z\",\n  \"identity\" : \"nd5s4y9wsglp9hqeoospkm7ryjzeh73mv8sxx9n5h1l4l8oc7r0togkqy8m4bchvjfageyb0bb1ex84cxgdk14vmgoj72l3k3bj1dw0lf6cylnq3pren7sma6rem0iiic2qvfmdscfbxhvqm8ldpaa8xb6fqrq56erc27xs6n56b4t5fllr7mbpts85ukqcu331vfhp9\",\n  \"last_read_timestamp\" : \"2022-12-22T14:04:17.136428Z\",\n  \"messaging_binding\" : { },\n  \"account_sid\" : \"ACDc0a3Af26CBd5c12C51CE3ECe9DCE125\",\n  \"attributes\" : \"rmox6pdrqz5r08c8ua5co65e57hhbtx78h8s9f9npkjj0figqgb6ozebeke8u32wpzkhf4rtp1me0pfcdbuz51ncaezkfvs3prj0jwcaia14acrvhiqoa0xl4qaw1dkrteaoq7vp7uhkc2z1uthdj1vedjhloxhw13iea1xyhx\",\n  \"url\" : \"https://web.example.mocklab.io/920609\",\n  \"sid\" : \"MB58f46337edD7dCD2DA5a00C35Df7377d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f1c28b3-3f4e-4863-869e-543c4e7c3d22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.136716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationParticipant",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "identity" : {
                "description" : "A unique string identifier for the conversation participant as [Conversation User](https://www.twilio.com/docs/conversations/api/user-resource). This parameter is non-null if (and only if) the participant is using the Conversations SDK to communicate. Limited to 256 characters.",
                "nullable" : true,
                "type" : "string"
              },
              "last_read_message_index" : {
                "description" : "Index of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "integer"
              },
              "last_read_timestamp" : {
                "description" : "Timestamp of last “read” message in the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for the Participant.",
                "nullable" : true,
                "type" : "string"
              },
              "messaging_binding" : {
                "description" : "Information about how this participant exchanges messages with the conversation. A JSON parameter consisting of type and address fields of the participant.",
                "nullable" : true
              },
              "role_sid" : {
                "description" : "The SID of a conversation-level [Role](https://www.twilio.com/docs/conversations/api/role-resource) to assign to the participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^RL[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this participant.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "3368c254-239d-49f9-973a-c677ced028f8",
    "name" : "Retrieve a list of all participants of the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/4830/Participants",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/820249\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/840322\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/449413\",\n    \"page\" : 3853857245005008924,\n    \"key\" : \"q4x23jk5zutt3exevik0x5u17tpcmqa47cen9px1mbmiue5r6zz7q6p1c6b6afxcbvj0biiia430ypw7par74jewrhd5zd396as9bw099yiv678iohioonq842u4azp2cnxhbnjfwvaeezlohuen1b\",\n    \"url\" : \"https://web.example.mocklab.io/703244\",\n    \"page_size\" : 5650911759923113650\n  },\n  \"participants\" : [ {\n    \"conversation_sid\" : \"CHa4fd65d7A7Ca465A9c3fE5c55a1228A0\",\n    \"date_updated\" : \"2023-04-11T16:53:07.135Z\",\n    \"role_sid\" : \"RL775Bd5cDbBcDA14AcC8a326E06FDBbf9\",\n    \"last_read_message_index\" : 2082868078713441503,\n    \"date_created\" : \"2022-10-03T07:24:29.135Z\",\n    \"identity\" : \"vzh181jv94udf43svrwahf928epp6tnfwpwk5im1w5wukqtfzk7grlsa2178a21bgxoahqit2j3gmjkw0h84vjdrdecu7wvf793o9mifsl7n1ald1w38s0lv7d4uruwwccrd8te2anoab0j40cgj2pzzmjfl5x0r0uadmdjcnte12tz339fa2pw372i26\",\n    \"last_read_timestamp\" : \"2022-05-09T15:19:17.135248Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACCfd69B0Dc65820A7Bfa5387A8Fe90e6A\",\n    \"attributes\" : \"vdk7imf32c0lazbgro1bgqz5enoo4hvmevueqeu48x7w5sis326xsqxz4sxzcqgylhwpejswom3m8ymre1u5ls8e64j7jqs6dr7qynxv9km176fjc6epzs13bxs9rha32gkawge2cj37mir7khgi6qbotitt6oab795l9xuk\",\n    \"url\" : \"https://web.example.mocklab.io/206872\",\n    \"sid\" : \"MB3fcD16316BBfEFCfBEaEC4F22c84ca2c\"\n  }, {\n    \"conversation_sid\" : \"CHCBB2090aEBf4Ada90Edef848D6Bf034E\",\n    \"date_updated\" : \"2022-06-24T18:13:03.135Z\",\n    \"role_sid\" : \"RLd7B4Faa0ED2FDfA665c305d5C4BEe8bF\",\n    \"last_read_message_index\" : 4086544803441536758,\n    \"date_created\" : \"2023-02-01T10:14:40.135Z\",\n    \"identity\" : \"4swoclvotgfpc9onrcko6ud7so09ia2lz80s0ozeyrxwulc3po4p5990x7fggg6fyaqkjzbj8u6xpz4f9td\",\n    \"last_read_timestamp\" : \"2022-05-04T12:50:17.135417Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACe7c4023Fe6afd2a019Fed98Daf928Ede\",\n    \"attributes\" : \"lhizo82fpx7oy35abao\",\n    \"url\" : \"https://web.example.mocklab.io/495831\",\n    \"sid\" : \"MBDB6fbCE3deccC0232Fddc98BfA4d38eb\"\n  }, {\n    \"conversation_sid\" : \"CH97d2a3C371c31d1ed813AAf03a5ECB1E\",\n    \"date_updated\" : \"2022-09-02T15:01:58.135Z\",\n    \"role_sid\" : \"RL2E17C0BaabA3beAdabBB3C0D4dC7B215\",\n    \"last_read_message_index\" : 7109515400888934422,\n    \"date_created\" : \"2022-12-07T19:26:01.135Z\",\n    \"identity\" : \"euufk8ouse1swcbsu0js9ibubknhlhzrd8qmkp8ag0tb9ndqhwoeq3jtfmxiz71z1ihkm40v5kyhx6gemq7tmatgf0f8d76wqdl06ftxxlkvs8d\",\n    \"last_read_timestamp\" : \"2022-12-01T14:58:17.135559Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC506BE2C9e1b0Afd99D99EA9C0B7FE97c\",\n    \"attributes\" : \"3hkhz6q3r4bxg10e1tre6gn5ao1jfcdymfowk6n6naqyxmku39n018\",\n    \"url\" : \"https://web.example.mocklab.io/500649\",\n    \"sid\" : \"MBd3c98BCBDeB6FCd1BBDC6FB835A6FB23\"\n  }, {\n    \"conversation_sid\" : \"CHDdD96066E2ecaC23Fb865b71a15cEF0B\",\n    \"date_updated\" : \"2024-01-07T00:24:42.135Z\",\n    \"role_sid\" : \"RLee00AC1Ebaed1D23d69b6D836F7Da8AD\",\n    \"last_read_message_index\" : 8930642017318831048,\n    \"date_created\" : \"2022-10-15T15:56:55.135Z\",\n    \"identity\" : \"c4uglqm2qcli7kvd4sjmyx8fvma0cyn5ebv3wvpcl110likhjmffrpchxyz0rj99m43r0n9v7hdwmmrzerkrzldexja4mkrmu31gek23d84t165ri8ppz5sn6sr0\",\n    \"last_read_timestamp\" : \"2022-04-30T15:22:17.135719Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"AC7ED65eB42dB5FCA8Fd9Fa4A7DE8de44D\",\n    \"attributes\" : \"u28qf0zhyvpy44mx02q0wp578vlt27od3xgfe4lnzhv9qokwxwttol1v8p7skg2i28z8llbe\",\n    \"url\" : \"https://web.example.mocklab.io/444114\",\n    \"sid\" : \"MB9D7c6dA970DDD62d3Cb5F93F70942217\"\n  }, {\n    \"conversation_sid\" : \"CHA1F3147D03E9cED34abA61Ce805e3cA8\",\n    \"date_updated\" : \"2023-04-20T21:28:05.135Z\",\n    \"role_sid\" : \"RLAc3aB9E5afACf2AdB5D612D947FcF86c\",\n    \"last_read_message_index\" : 2694365488271260205,\n    \"date_created\" : \"2022-09-02T21:37:53.135Z\",\n    \"identity\" : \"9a0umubn75efuuq2uka73os19jh13xsoda4hxr5mzaqkora59qhqa6bu5rb6xx63vy2e87mqfbgljwe98ioeahqmemy8h39aoiilq2t3extppcdncbmhb8a8c0ybnrtwwecqve2ols\",\n    \"last_read_timestamp\" : \"2022-05-05T12:10:17.135877Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACe43A0e5a796E9BA3B47FF78Bece4aB0a\",\n    \"attributes\" : \"ck1ilkl5krjt3ugfyoi7d8dvkbx8n4u4p8n3qwbmdrp531ahywirujbs91nm0dm8dc778z3lb4sid0whc7jg9kz15vrvrgnp566u2qr\",\n    \"url\" : \"https://web.example.mocklab.io/908012\",\n    \"sid\" : \"MBbeF319e0e4ea583dAB6549B25c2ec7E0\"\n  }, {\n    \"conversation_sid\" : \"CH5EC60DeAEcAf3aFbA238F2B14f09eEDF\",\n    \"date_updated\" : \"2023-01-25T12:03:45.135Z\",\n    \"role_sid\" : \"RL67D1688b50D8bbDbf90FaA76e6EAED6f\",\n    \"last_read_message_index\" : 6600155152226215151,\n    \"date_created\" : \"2022-10-13T17:06:21.135Z\",\n    \"identity\" : \"6me69o5l2nepnswn67a1u39jorr4k66rt6pjpy9xcf9kpr88vmzcu4g14v9czumb50dyvst5cirv9y1x7w8zdwsk4on9qhgrl3sq1eyl1mj3cplvt555sdsm0hju9yndz3wz9nflxgvqp6cmjhqrq7xhgq3g438\",\n    \"last_read_timestamp\" : \"2022-05-25T15:32:17.136029Z\",\n    \"messaging_binding\" : { },\n    \"account_sid\" : \"ACdd518BaA38Ef1a46bAD4fc7A003dE373\",\n    \"attributes\" : \"0vejrq8y12ux5i0mosedjeqhhtmfjyaxaoa1tzxe83yww00p52tvi6zedsvmz5we6g14xsethpp1gcdgoqcg613vj2exwzagxx2ohq1lfddsfusa9550ev6gxkf66q8jhyyi8hq0ipsyja23tui\",\n    \"url\" : \"https://web.example.mocklab.io/052343\",\n    \"sid\" : \"MB2ED584309fB5Bb77f6Be270bc0B7A7E1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3368c254-239d-49f9-973a-c677ced028f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.136345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationParticipant",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "participants" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_participant"
                },
                "type" : "array"
              }
            },
            "title" : "ListConversationParticipantResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "818729c2-702c-49d9-891c-58d182b00459",
    "name" : "Update an existing message in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/4311/Messages/IM507EF5646E29FC3b3fF97f7eCd1e7aBf",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CH7c0E0533F533647fcb88EB975f5767c6\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-08-01T20:24:41.134Z\",\n  \"author\" : \"hc27eqihdy9ze3oe8fpd1vz0t431m00d733kzmfwqfxke9g2qg45glghuua9wkjrgudoevh3r59gq5vju3cmw9x8wcsnug78ga10j\",\n  \"date_created\" : \"2023-03-30T19:16:56.134Z\",\n  \"participant_sid\" : \"MBaC672Eb5F0f6ED1Eb600eddA6C2eC393\",\n  \"index\" : 5908348975314714334,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Magnam commodi dolorum quae nostrum. Quia quas est non error optio pariatur. Beatae consequatur molestiae veniam non vitae. Facilis ea et facilis ut nesciunt facere deserunt. Aperiam recusandae placea\",\n  \"url\" : \"https://web.example.mocklab.io/455523\",\n  \"sid\" : \"IMdBD3b328fE0b68ECb3660AFfE0E42d0c\",\n  \"account_sid\" : \"AC80a300f2a4BD2AC7d8dFce2ad551C4e7\",\n  \"attributes\" : \"xybu43cboa4ot0v86joeewbdn4hzck2gvxynkbt39jwvosecyenrix5fe9kmuwwony32muoce9kgcazbvpbzpqmdi7mq32u0yhb5kycyn3cnbob5lckyg7mpg59x85gkzg6gkly6znrsw9x0j628u0qlc8yc2knogq7lo9xr3p7iz45yaktcel\",\n  \"links\" : { },\n  \"content_sid\" : \"HX71cf93a58b2CA27f1b42ad5bCeAC2037\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "818729c2-702c-49d9-891c-58d182b00459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.134841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "9432967a-8179-4686-8212-a1ce506bc685",
    "name" : "Fetch a message from the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/5377/Messages/IM6eC595a6ADdB28D1D2dFfAb3AA0E86Cb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHC7cfa6a21bc29aaAD2CbAEc502ea2EDA\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2022-12-09T13:15:00.134Z\",\n  \"author\" : \"ppgqa7xuosc7u8i7zje10ajsn0c6vq49o5hb\",\n  \"date_created\" : \"2023-02-27T03:08:36.134Z\",\n  \"participant_sid\" : \"MBdCAbc9fEfDf58a4b7B58ef96e27C6975\",\n  \"index\" : 5615893545651029740,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"A dicta et eos ut blanditiis fugit. Blanditiis dolorem non sit exercitationem tempore est. Soluta repellendus id.\",\n  \"url\" : \"https://web.example.mocklab.io/949760\",\n  \"sid\" : \"IMfd84BC3A5D0ADE966fEc3Fdc6f13426b\",\n  \"account_sid\" : \"AC6adEf82b7aFa6bEBEe47abFe3Fd72B26\",\n  \"attributes\" : \"pp5qhrpu65r5qjythu76d56nvr4rehv9vpna1tesud0907di7av6vekrqchjjme1ahrairibhvnizetl03f0kbs5y0nqg3s7r502rj0qb61bry21ewn3e7nafjm7\",\n  \"links\" : { },\n  \"content_sid\" : \"HXB5B8A4B8c0A0e9a330440E4B8A1AA72a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9432967a-8179-4686-8212-a1ce506bc685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.134458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "1df0fa3e-9ea1-48a9-acb6-91069dfebd6c",
    "name" : "Remove a message from the conversation - 204",
    "request" : {
      "urlPath" : "/v1/Conversations/pgf0/Messages/IMEda6df9A0EFa74ceF0D2cc1015706b4c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1df0fa3e-9ea1-48a9-acb6-91069dfebd6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.134036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConversationMessage"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "01470965-4ec2-4af4-b84a-c0ea5501e19f",
    "name" : "Fetch the delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/in5s/Messages/IMe734c1D00928DedAb77fB70EeFdc71b6/Receipts/DY4f1393A3B7e34fAD19afB6a5Ad8d994A",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"conversation_sid\" : \"CHAdeC3C9C30bA4b2c61F01eda7FCcc0ce\",\n  \"date_updated\" : \"2023-08-17T18:20:15.133Z\",\n  \"date_created\" : \"2023-11-05T21:13:55.133Z\",\n  \"participant_sid\" : \"MB01BF66f87A8a23f7CacedeaA0BC9a5BA\",\n  \"account_sid\" : \"ACeacA7131Bd8B40cd72C8Fdf9Ce3EFD4d\",\n  \"error_code\" : 4094612525899249453,\n  \"message_sid\" : \"IMFA5dDbAFf3F8190Bc1cd0155F6aDa7e4\",\n  \"channel_message_sid\" : \"Vx7b9b45f716Eb09475122cFAA2E9D74aA\",\n  \"url\" : \"https://web.example.mocklab.io/049667\",\n  \"sid\" : \"DYDc7eAc7BEE93AC9f6761F8a6E89faba2\",\n  \"status\" : \"read\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01470965-4ec2-4af4-b84a-c0ea5501e19f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.133925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this participant.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "channel_message_sid" : {
                "description" : "A messaging channel-specific identifier for the message delivered to participant e.g. `SMxx` for SMS, `WAxx` for Whatsapp etc. ",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^[a-zA-Z]{2}[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the delivery receipt has not been updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "error_code" : {
                "description" : "The message [delivery error code](https://www.twilio.com/docs/sms/api/message-resource#delivery-related-errors) for a `failed` status, ",
                "nullable" : true,
                "type" : "integer"
              },
              "message_sid" : {
                "description" : "The SID of the message within a [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) the delivery receipt belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "participant_sid" : {
                "description" : "The unique ID of the participant the delivery receipt belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^DY[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/conversation_message_receipt_enum_delivery_status"
              },
              "url" : {
                "description" : "An absolute API resource URL for this delivery receipt.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "3b361705-1569-456f-b48d-ac1c5926e3bf",
    "name" : "Retrieve a list of all delivery and read receipts of the conversation message",
    "request" : {
      "urlPath" : "/v1/Conversations/8x97/Messages/IM6E02Ed6490a75156D5ECcFFcdbfFdaD5/Receipts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/365208\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/739560\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/678165\",\n    \"page\" : 660555290293177770,\n    \"key\" : \"qwby9zgqj3833wr9y4hluahbb72a1na25kbdq81f\",\n    \"url\" : \"https://web.example.mocklab.io/935507\",\n    \"page_size\" : 2273743247192104738\n  },\n  \"delivery_receipts\" : [ {\n    \"conversation_sid\" : \"CH893BdE15DEFbE9db9EaCCcC5B53Ae890\",\n    \"date_updated\" : \"2022-09-30T23:26:50.133Z\",\n    \"date_created\" : \"2024-01-12T17:25:04.133Z\",\n    \"participant_sid\" : \"MB90A13c71fdeaDBBC43E456A01F841feb\",\n    \"account_sid\" : \"ACccD81441107DECA732a3d0dBA20cAfeD\",\n    \"error_code\" : 4418990898092803717,\n    \"message_sid\" : \"IMaea9C4CbB3AEF1a2d08edcD9fBC7399C\",\n    \"channel_message_sid\" : \"wf4CB6A8fB9129A84512d3f9AD6139DbcA\",\n    \"url\" : \"https://web.example.mocklab.io/146759\",\n    \"sid\" : \"DYaC0b6fb9cFFcfb6f7E1B7d69CE408dfE\",\n    \"status\" : \"delivered\"\n  }, {\n    \"conversation_sid\" : \"CHff53A08482afD2cABffFDC69d90aBbf7\",\n    \"date_updated\" : \"2023-11-21T09:37:50.133Z\",\n    \"date_created\" : \"2022-11-03T05:30:24.133Z\",\n    \"participant_sid\" : \"MBffa6FCc2B9E1b001DCB9630Eb34cacaF\",\n    \"account_sid\" : \"ACBe8c417bfA0f5fA81a6AEffbdF0bdbEa\",\n    \"error_code\" : 2444401623140912883,\n    \"message_sid\" : \"IMFb9df6D497cb13cBBCC08B9E9EBe8Abf\",\n    \"channel_message_sid\" : \"vq852adeE653E9Cf206F0E0Bba1692Ad6d\",\n    \"url\" : \"https://web.example.mocklab.io/722551\",\n    \"sid\" : \"DY38af7efd9b0E0E08dA17E31cf4C7e500\",\n    \"status\" : \"undelivered\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b361705-1569-456f-b48d-ac1c5926e3bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.133588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessageReceipt",
          "schema" : {
            "properties" : {
              "delivery_receipts" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message.conversation_message_receipt"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageReceiptResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "57bb952f-b58f-47b4-adb1-a157c6b339c6",
    "name" : "Add a new message to the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/31t1/Messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"conversation_sid\" : \"CHcA1db82eFD81BD1DA56dBCa9A9aB4c33\",\n  \"delivery\" : { },\n  \"date_updated\" : \"2023-07-30T19:28:51.132Z\",\n  \"author\" : \"vdw3iltxh89wnspt6jj6crg8nojcj2mg88ve5vr4tz3kqs8yn5oacrn3cgg3o3ewfhoi0il98i4q122cte24qirsf6jg6no7dkrnmlgeokc5gmk55csw930q\",\n  \"date_created\" : \"2024-01-18T19:36:59.132Z\",\n  \"participant_sid\" : \"MBf39fa2B3a82675F9Ce2569F5B91b5761\",\n  \"index\" : 8206841788445561300,\n  \"media\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n  \"body\" : \"Repellat voluptatem aut veniam et quia laborum qui. Error commodi laborum debitis repellat unde dicta. Consequuntur doloremque deleniti corrupti voluptatem voluptas corporis. Tenetur qui doloribus cor\",\n  \"url\" : \"https://web.example.mocklab.io/778654\",\n  \"sid\" : \"IM04f8eCE4ABFA4fF7d622C5Dde1e00CeE\",\n  \"account_sid\" : \"AC461cEfcFd6ECdC5F6276a20feEcd6458\",\n  \"attributes\" : \"lx21814uld68osf9nwcr4aydi3dkmbl8dhujjj5kze6qii18auktsiqsqyf6bw1lcj7dx3cyhorhcu7wnsulpuz7olk7nt6aceksyorux52typcm2tz77xowu4tjjr96su2ayeleqo1ebjiqodbrhvr40cl3alyj0e0ywedjcor58zr4zn0u42enojhmesc3g8md\",\n  \"links\" : { },\n  \"content_sid\" : \"HX2B02B74dA5AcDf627f5Da6D9cEC7C9Ec\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57bb952f-b58f-47b4-adb1-a157c6b339c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.132794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversationMessage",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "A string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "author" : {
                "description" : "The channel specific identifier of the message's author. Defaults to `system`.",
                "nullable" : true,
                "type" : "string"
              },
              "body" : {
                "description" : "The content of the message, can be up to 1,600 characters long.",
                "nullable" : true,
                "type" : "string"
              },
              "content_sid" : {
                "description" : "The unique ID of the multi-channel [Rich Content](https://www.twilio.com/docs/content-api) template.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^HX[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "conversation_sid" : {
                "description" : "The unique ID of the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource) for this message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated. `null` if the message has not been edited.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "delivery" : {
                "description" : "An object that contains the summary of delivery statuses for the message to non-chat participants.",
                "nullable" : true
              },
              "index" : {
                "description" : "The index of the message within the [Conversation](https://www.twilio.com/docs/conversations/api/conversation-resource).  Indices may skip numbers, but will always be in order of when the message was received.",
                "nullable" : true,
                "type" : "integer"
              },
              "links" : {
                "description" : "Contains an absolute API resource URL to access the delivery & read receipts of this message.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "media" : {
                "description" : "An array of objects that describe the Message's media, if the message contains media. Each object contains these fields: `content_type` with the MIME type of the media, `filename` with the name of the media, `sid` with the SID of the Media resource, and `size` with the media object's file size in bytes. If the Message has no media, this value is `null`.",
                "nullable" : true,
                "type" : "array"
              },
              "participant_sid" : {
                "description" : "The unique ID of messages's author participant. Null in case of `system` sent message.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MB[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IM[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource API URL for this message.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "bedb563d-1a88-4666-9d6a-28569d539836",
    "name" : "Retrieve a list of all messages in the conversation",
    "request" : {
      "urlPath" : "/v1/Conversations/w0w7/Messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/536691\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/531572\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/974900\",\n    \"page\" : 8548069377975838130,\n    \"key\" : \"3e87ixwiqcl3xqv2pslpciuzmga76uhrwwwm4efdww0ec2v377dnn46y6z5b4daq06z8qtycso04dqjl77t4dlkuhpirpyqctqy29l8zclkcv80965jhxyb9c221hrph2qw7ckqb\",\n    \"url\" : \"https://web.example.mocklab.io/630244\",\n    \"page_size\" : 4419149237651680956\n  },\n  \"messages\" : [ {\n    \"conversation_sid\" : \"CHf0D9C7d5bb6848A0E42c4deA39d79fEB\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2024-03-03T19:01:32.131Z\",\n    \"author\" : \"zysa0rvf8sul2ltbxkotrbfnhg4tvxj92nodf7gsq1uk0xxuigkh0v9u5wvytea66ktj0xk2dtkzfs9espzr08sbr1hkk9k2ty3dxafzvxcfxkd31i0efq1yesnqi506fn9jb2qt0kyzwr5agss369y4usl64s5kre0syczf0mpb66\",\n    \"date_created\" : \"2024-03-11T02:48:32.131Z\",\n    \"participant_sid\" : \"MBdDdD2bFad391a49CC9Eb2bd9Ffc6F357\",\n    \"index\" : 1753441426375989877,\n    \"media\" : [ { }, { }, { }, { }, { } ],\n    \"body\" : \"Optio qui tempore velit. Fugit porro excepturi consequatur optio. Molestiae fugit ut maiores delectus voluptatem architecto est. Perspiciatis cupiditate sapiente facilis corrupti nam.\",\n    \"url\" : \"https://web.example.mocklab.io/833953\",\n    \"sid\" : \"IM4a62feEf328EcD1EFBc3a17aF69FeE75\",\n    \"account_sid\" : \"ACbFd9A08DD8F3d9C7F63c3beaFaBfC2Fc\",\n    \"attributes\" : \"9nyarhv4qwn4rjppbfflahdze\",\n    \"links\" : { },\n    \"content_sid\" : \"HX6e10705b61c6Ae3bCbaF555D673cfae9\"\n  }, {\n    \"conversation_sid\" : \"CH8A1FcBd6F6AE24A1ecC560297AA52b51\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-05-17T12:50:57.131Z\",\n    \"author\" : \"he48jao8cnd8g3o1vb2ellxyv2bbaggwntyo6g8nl6vzx8wk70dwsawvb24aovbzme5andqn4vn\",\n    \"date_created\" : \"2022-04-16T02:34:17.131Z\",\n    \"participant_sid\" : \"MBB347AB8d283c94Eac5E4C921F713DF15\",\n    \"index\" : 2994562128597204507,\n    \"media\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"body\" : \"Explicabo harum minima quidem et facilis ipsa. Enim quasi alias sit quisquam fugiat dolor eos. Provident eum id voluptas.\",\n    \"url\" : \"https://web.example.mocklab.io/333510\",\n    \"sid\" : \"IMbC11114DfE646BE2E9aBFe7A1cc5e3f9\",\n    \"account_sid\" : \"ACaf9880fdCbf4eCA77BDace56D3FCA6fb\",\n    \"attributes\" : \"m9gl4x5hg6gegkffqmmrzuicxxg0t19qheyist51jgu8tfs6jrshy2d74yju93ivqganzez0nxjv6wp6egjifswqs0n84pgavlctf49eyark8bmeyqhleeknvc09lu0kzcwb\",\n    \"links\" : { },\n    \"content_sid\" : \"HXF1F801Cca6AD6F4EBbed00bEbc01835e\"\n  }, {\n    \"conversation_sid\" : \"CH40243880AdDf3D6549bf2DB6E5d3A4a1\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-06-15T12:46:51.131Z\",\n    \"author\" : \"zarw36tgujqv0we4h6wx5a7ps0u3lup0afefjrmdln3ntvvdtkrjndqyar45q\",\n    \"date_created\" : \"2023-01-07T13:49:12.131Z\",\n    \"participant_sid\" : \"MBb46f8b45dbb413773Adfb8Bf817Af4De\",\n    \"index\" : 7978619905171775224,\n    \"media\" : [ { }, { }, { }, { }, { } ],\n    \"body\" : \"Consequatur sit laborum laborum provident. Officia repellat ratione similique et commodi in. Est et unde.\",\n    \"url\" : \"https://web.example.mocklab.io/518910\",\n    \"sid\" : \"IM93Ef5e1C6CA6c1eCcf86EFb2e5aDFf8d\",\n    \"account_sid\" : \"AC9cA9A37EC9abA0654ccDADeFf71bd9e8\",\n    \"attributes\" : \"pm9orpiypq662tg5sh1apwotbvpzixjn2r3xslo2xvu8te40j1m26p48hyj8h1qsv7u35r0i9x8kta7cb45q9u81xwiwjfa68witus50qs1l2qc79g7bu04qx95fw6i34xb7w00d9gfk55cqhf8zdevsrebe5ff6wny2aulajtr8ch2tr34mj9u3vhygsl0u8kt1pjn\",\n    \"links\" : { },\n    \"content_sid\" : \"HXEa5d4Ca9eb06E1d2bb1Ab0AAfCD8AE7B\"\n  }, {\n    \"conversation_sid\" : \"CH87DaDdC9f8F202DD31BCB2Bd5ACaaD9F\",\n    \"delivery\" : { },\n    \"date_updated\" : \"2022-06-16T19:23:03.131Z\",\n    \"author\" : \"aisciuyi7grcdxl2xlqbjwrct7nri3gusk4znc7qa75p7bkk2ppceycjadp3t9d8pfm8p3s4k8qdyjty4ov\",\n    \"date_created\" : \"2022-12-04T07:46:41.131Z\",\n    \"participant_sid\" : \"MB30F1DDbfc5A8a67E5c88Cf343Ea3fafA\",\n    \"index\" : 6219292175231675907,\n    \"media\" : [ { } ],\n    \"body\" : \"Est sunt voluptatem quam tempore aut omnis. Voluptas et autem et consectetur. Quo minus ut sint quos. Qui maiores est aliquam rerum.\",\n    \"url\" : \"https://web.example.mocklab.io/177235\",\n    \"sid\" : \"IM3128B5A3bC9B2C3A2fEAF1E34aEc10fb\",\n    \"account_sid\" : \"AC62bD6E85ccCdf6Bbef67eC5B1b4adAa2\",\n    \"attributes\" : \"3f9nts7axr9q2yel5kqix9rnffyl29uaq34i0hmkydpvb8iehtsptr0zco3c1udrn13mo06io2cm81kv8j1n07skynoslosy57nbjs8ne0k00hge3dl8bnoekc4826bc9f8l0d68ihtv3zbtl1ogajbvz3g4rlq17j6k2oj14zhpgv4sfp27pu5h2z\",\n    \"links\" : { },\n    \"content_sid\" : \"HXaf663D8E556BB8e25e18F1BdB8Eb15e5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bedb563d-1a88-4666-9d6a-28569d539836",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.132334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversationMessage",
          "schema" : {
            "properties" : {
              "messages" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation.conversation_message"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationMessageResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "b48c3f34-c5a2-4c22-b96d-1d1d2ccfd40c",
    "name" : "Create a new conversation in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Daniel Stehr\",\n  \"timers\" : { },\n  \"date_updated\" : \"2024-01-26T18:07:36.13Z\",\n  \"date_created\" : \"2023-05-11T22:16:50.13Z\",\n  \"bindings\" : { },\n  \"chat_service_sid\" : \"ISb13Ab7b1DAab50Ad8cB30bE640BDDcA4\",\n  \"url\" : \"https://web.example.mocklab.io/205706\",\n  \"sid\" : \"CH2ea2dA289DfDFfDcB07bF1E7B7EF39C1\",\n  \"unique_name\" : \"Graciela Koss\",\n  \"messaging_service_sid\" : \"MGb98AEcB65d932DebD6bdc09aD01b7ceC\",\n  \"account_sid\" : \"AC3F12b9fFbFee7D8cbFb9FeeB787fb3C9\",\n  \"attributes\" : \"suxsh5wtwered33qa15n9c7002l7v86i8bzrxh723te7ls26nifcxx6nch35n5pqcp1061s8ujeoauyb2natzdphz0id6xt5beknadyf24378pdu6w9nqaj1obbtrt0gh0fce2leqoexi2mmowa4\",\n  \"links\" : { },\n  \"state\" : \"closed\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b48c3f34-c5a2-4c22-b96d-1d1d2ccfd40c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.131052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConversation",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "attributes" : {
                "description" : "An optional string metadata field you can use to store any data you wish. The string value must contain structurally valid JSON if specified.  **Note** that if the attributes are not set \"{}\" will be returned.",
                "nullable" : true,
                "type" : "string"
              },
              "bindings" : {
                "nullable" : true
              },
              "chat_service_sid" : {
                "description" : "The unique ID of the [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this conversation, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute URLs to access the [participants](https://www.twilio.com/docs/conversations/api/conversation-participant-resource), [messages](https://www.twilio.com/docs/conversations/api/conversation-message-resource) and [webhooks](https://www.twilio.com/docs/conversations/api/conversation-scoped-webhook-resource) of this conversation.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "messaging_service_sid" : {
                "description" : "The unique ID of the [Messaging Service](https://www.twilio.com/docs/sms/services/api) this conversation belongs to.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^CH[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/conversation_enum_state"
              },
              "timers" : {
                "description" : "Timer date values representing state update for this conversation.",
                "nullable" : true
              },
              "unique_name" : {
                "description" : "An application-defined string that uniquely identifies the resource. It can be used to address the resource in place of the resource's `sid` in the URL.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this conversation.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "48298382-da9d-456d-adf3-99c94c23e009",
    "name" : "Retrieve a list of conversations in your account's default service",
    "request" : {
      "urlPath" : "/v1/Conversations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/747253\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/603336\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/367702\",\n    \"page\" : 601335220299284499,\n    \"key\" : \"zc98x8pude1qxw\",\n    \"url\" : \"https://web.example.mocklab.io/392433\",\n    \"page_size\" : 5598276909616535649\n  },\n  \"conversations\" : [ {\n    \"friendly_name\" : \"Cecil Parisian\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-11-01T15:54:56.129Z\",\n    \"date_created\" : \"2023-07-31T09:31:23.129Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISfcDb3De3c95ABddf8a4Bc6Ff3B64B47E\",\n    \"url\" : \"https://web.example.mocklab.io/368775\",\n    \"sid\" : \"CHfaBc2e1BBFF6D7b5b18BC76bbF74dFAD\",\n    \"unique_name\" : \"Michiko Sawayn\",\n    \"messaging_service_sid\" : \"MGf0eA6C46AE0CB9EC7d233b5a4Eb8DDCb\",\n    \"account_sid\" : \"AC27357384c05aaeba9Ff6935bf9dFC36e\",\n    \"attributes\" : \"0okj5yeoid6coqvkp074gpgfcntdi4dsq7116kp4n8dof3qvorp8i2p76kch22n5afjdid55sgjj9wx2v\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  }, {\n    \"friendly_name\" : \"Leslie McCullough PhD\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-07-21T08:29:40.129Z\",\n    \"date_created\" : \"2024-01-14T19:59:09.129Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISB95b247d5e2eA7169efE300BE231C8Fa\",\n    \"url\" : \"https://web.example.mocklab.io/605760\",\n    \"sid\" : \"CH4Def865Ae509a65CE3Bd8BDB7FFffbDD\",\n    \"unique_name\" : \"Ms. Katharine Brekke\",\n    \"messaging_service_sid\" : \"MG5eeCA6daB51894CEdAE30E2486fE0bAA\",\n    \"account_sid\" : \"AC2EcD366333Cf4fFC0E3A39d8E48056Fc\",\n    \"attributes\" : \"brujy9n69bojnlfhjognlq9ohq0oluhjxdfh11m7itf9txl1pn5iw2lz26xoe62jtugkx98t3831l6bls70p5kpqv0hsm9d77vi8te4lic5fyworued\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  }, {\n    \"friendly_name\" : \"Dr. Ida Bashirian\",\n    \"timers\" : { },\n    \"date_updated\" : \"2024-01-02T04:59:01.13Z\",\n    \"date_created\" : \"2023-11-30T09:17:22.13Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"ISe0303d43ADE1377DDc4Dc9DB1b2EcEed\",\n    \"url\" : \"https://web.example.mocklab.io/190079\",\n    \"sid\" : \"CHa696663fCd869D9c294C14d287A1BeFb\",\n    \"unique_name\" : \"Lavona Stamm\",\n    \"messaging_service_sid\" : \"MG8cCa35DfcfdA2fADdf66af532349aB80\",\n    \"account_sid\" : \"AC5CA2912c5d5d1Ada4FfAFfAeB6E1d10c\",\n    \"attributes\" : \"o5kdj3smp17hysdmsopiwe609439cf7svv5vcv91z17xsllrymhyhlpvf7u6n15syzcs66ayp3e0nqyfjnlwkpp2n5ni0ydx1b70ngbc0vig03f\",\n    \"links\" : { },\n    \"state\" : \"inactive\"\n  }, {\n    \"friendly_name\" : \"Gina Weissnat\",\n    \"timers\" : { },\n    \"date_updated\" : \"2022-05-15T14:37:48.13Z\",\n    \"date_created\" : \"2022-07-21T20:39:06.13Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS4983717bc0aBC3dD4d7b0De142a672Dc\",\n    \"url\" : \"https://web.example.mocklab.io/747769\",\n    \"sid\" : \"CHF7F0Bab2B63A6E9dDbc468cDc63Ebda1\",\n    \"unique_name\" : \"Jonathon O'Hara DVM\",\n    \"messaging_service_sid\" : \"MGaa43b9DdBF8C970FbCBF286BafC3F993\",\n    \"account_sid\" : \"AC77d120bDa4e34d8c9F3FB4Ede2A9cC5E\",\n    \"attributes\" : \"2fj9lc6upsvug6f4f6up6hw74w3u183uwggn\",\n    \"links\" : { },\n    \"state\" : \"closed\"\n  }, {\n    \"friendly_name\" : \"Mrs. Malcolm Ward\",\n    \"timers\" : { },\n    \"date_updated\" : \"2023-09-28T07:26:07.13Z\",\n    \"date_created\" : \"2023-01-08T03:53:46.13Z\",\n    \"bindings\" : { },\n    \"chat_service_sid\" : \"IS5cbE5bC9C308C1B8851B9d4020cD95a2\",\n    \"url\" : \"https://web.example.mocklab.io/266043\",\n    \"sid\" : \"CHFEBdED50f5F3456B35a4dE3EB7F85C9e\",\n    \"unique_name\" : \"Elsy Koss II\",\n    \"messaging_service_sid\" : \"MGDD9ed52b78BdE0B0D48A650Fb69ceDbE\",\n    \"account_sid\" : \"ACa38Df5DA658ceEf7D9CA9dB1cE108f2b\",\n    \"attributes\" : \"wdqcaqd3n6h1\",\n    \"links\" : { },\n    \"state\" : \"active\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48298382-da9d-456d-adf3-99c94c23e009",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.130704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConversation",
          "schema" : {
            "properties" : {
              "conversations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.conversation"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConversationResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "5bb738c2-625e-477a-b8a3-7ceab669d7bc",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"GET\",\n  \"account_sid\" : \"AC093EC3EB0EDbc2AaCdB4aE2Af8C7C4e9\",\n  \"filters\" : [ \"kd4ox5bbc1naz7hjfn2gk93bbi98w2vuio005j\", \"8elyxfb6hmuoli\", \"35kdv\", \"253i9xynaopuuz34kv818bu\", \"rm4d4s2bk8s5g9po4eut4s9qhbmns4lgu655alw7zcb1tbu6vk59nbt9b\", \"30kv4j3h45oabi2uc4odi5qv4ckzifevlb0n9tfo7ee9pbyqmv0uupdv360gswx3bm6t2t27nfwycqt4x4yuhqt65j6ipfvud9ssobemjca6cxq6z95xmmcbeya1ye4h3ndlemhixapxaq89bsmxauk2a7g0y2bqi8qrpgzxc0s6qyiql\", \"ltspzp6zecl5wq20v215qcn9x94o5oo6pnpqh8ln08t1gb5zgaw7k9cqtvj8wp18v5umfd0e6bi69qdoea0mzqzvzgsvevpqt1i18j464qw89bq0802nbe0jeb4gjm1lxxvo5igxd6wi2g9f8n6tpms0rhsgdxoo0gwrlcpl3mwwn7ek4bc\", \"sfe2w0qq510bc8asu9p81q35c5v83adwetrv4g8e4dck9ihp479iq1glwm9n3kcl8v8jj8ky2bkatmasmiex3b4qe6tsrrpyt537jciedep443n3ysp9bc5x2cv45w3t5zqpwmul4uq6l6yj8shnrjx6pecmbi1ecp\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/368173\",\n  \"url\" : \"https://web.example.mocklab.io/380335\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/943108\",\n  \"target\" : \"flex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bb738c2-625e-477a-b8a3-7ceab669d7bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.129226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "e2a44802-2087-4341-be52-ee054cf9ba5e",
    "name" : "",
    "request" : {
      "urlPath" : "/v1/Configuration/Webhooks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"method\" : \"POST\",\n  \"account_sid\" : \"ACEDB10bdeFBC5B039fEF2ae7fD935cB28\",\n  \"filters\" : [ \"kscztke8l4hq4181669uopvkgt5hxfv1q93ieafvb7dyksjqc6n2g2k4wcv6ep4vwrjwa64dhgt6zzwzrzobc7ve24l2xpdsqv31klqnsp3relawtci9t0dlzhxg1ayjkpw9sq10s4l3omme0svk66linzq4m8yp2dngnlstdh67xysgp8dgjk04yi42h\", \"jzghet9qof5c0cfluigl0matep81li4torxpbknm2bmxbmqfk4npgmv7w3x2\", \"tktapktk8q3a\", \"741x8mtbz7jk7plbyezpdw3951ghza4na60az0n1qbl284u106u4gh9nw3lhaf0hf9wny013n5jhm4s8xwdtwx1rs1ngs0a2mcb85hn2fsqp17406hgn2o79lfy1muw3iszxo7ityhx\", \"5xhkv4h7ye8kqdvz4ypyqrchrkshqz7eahtf96sw50p00xalsz76bbf35i044un8u8v1l32hof5zbtk10bh6h6jwlrggk7xuog6od6xfm33thkeapwni06bwf2mhupg384na5kjicgczfab127\", \"w0r31fzvui33bkswyg85g09xr1e7k3s9y446w6g6j4bpie7zp12nze5fk4egmp8ouid4jng1k6cvkcew4erfc9eg2higw1238j72jgr0s\" ],\n  \"post_webhook_url\" : \"https://web.example.mocklab.io/860356\",\n  \"url\" : \"https://web.example.mocklab.io/774488\",\n  \"pre_webhook_url\" : \"https://web.example.mocklab.io/389570\",\n  \"target\" : \"flex\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2a44802-2087-4341-be52-ee054cf9ba5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.128921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationWebhook",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "filters" : {
                "description" : "The list of webhook event triggers that are enabled for this Service: `onMessageAdded`, `onMessageUpdated`, `onMessageRemoved`, `onConversationUpdated`, `onConversationRemoved`, `onParticipantAdded`, `onParticipantUpdated`, `onParticipantRemoved`",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "method" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_method"
              },
              "post_webhook_url" : {
                "description" : "The absolute url the post-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "pre_webhook_url" : {
                "description" : "The absolute url the pre-event webhook request should be sent to.",
                "nullable" : true,
                "type" : "string"
              },
              "target" : {
                "$ref" : "#/components/schemas/configuration_webhook_enum_target"
              },
              "url" : {
                "description" : "An absolute API resource API resource URL for this webhook.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "5433e78e-3245-48a9-84e2-f3f296126c2d",
    "name" : "Update an existing address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/42c4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Vernice Stamm\",\n  \"address\" : \"72v3g3bhl9url61ayl6khblub72o5hyw00dzam9ldp\",\n  \"date_updated\" : \"2022-08-24T23:08:10.128Z\",\n  \"date_created\" : \"2023-01-18T20:36:40.128Z\",\n  \"account_sid\" : \"ACa9dddb883fD0c354dAc4f3D46cde8b3D\",\n  \"auto_creation\" : { },\n  \"type\" : \"wh42p8utlf4tw1z33ro0ljpnbt0lvwl582qkbm99nn7362pf5t8qbq6077z23fvblma1\",\n  \"url\" : \"https://web.example.mocklab.io/805692\",\n  \"sid\" : \"IGEddFDA1575e98cAdac8Dd51b3Bdf07BE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5433e78e-3245-48a9-84e2-f3f296126c2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.128569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "c611562d-ac33-4a0f-88b0-3cc5d2d5a65b",
    "name" : "Fetch an address configuration ",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/ym00",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Kyle Emmerich\",\n  \"address\" : \"pj1ernvh9tvqd6teu6wordu8tk88040mn23jkkynq386zj522sr7qb24dl84rk6ab1x1kxgdasif8bu\",\n  \"date_updated\" : \"2022-11-15T09:01:49.128Z\",\n  \"date_created\" : \"2023-05-12T07:51:12.128Z\",\n  \"account_sid\" : \"AC4cbd34c164cd31F1d27C8a79dab8E4Cf\",\n  \"auto_creation\" : { },\n  \"type\" : \"1wn1jogwc73a8wf79\",\n  \"url\" : \"https://web.example.mocklab.io/868985\",\n  \"sid\" : \"IGef8e347FEB3Cb5a352D5Ef4D9e93A154\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c611562d-ac33-4a0f-88b0-3cc5d2d5a65b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.128279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "173f466a-460e-4e20-83bb-ba8c982f3cdf",
    "name" : "Remove an existing address configuration - 204",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses/qq7i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "173f466a-460e-4e20-83bb-ba8c982f3cdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.127988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteConfigurationAddress"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "bdd0f862-3b4c-4b89-bf21-3e0b70cd491f",
    "name" : "Create a new address configuration",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Dr. Zackary Schulist\",\n  \"address\" : \"s6srukdu6zlyyqr9e89nzrx18\",\n  \"date_updated\" : \"2023-10-02T15:57:35.127Z\",\n  \"date_created\" : \"2023-03-08T07:45:36.127Z\",\n  \"account_sid\" : \"ACb81DF1BB248a9cFCb992FC4E0dDf167a\",\n  \"auto_creation\" : { },\n  \"type\" : \"nuq681zt790wjg7e5ixx95wqrmyu52g9llh7y4twsjeypqu2l5fcfwxnqtax2ksh5szgl0hq2z40htwv3q2j0h1bvm8z0mw0dc03ms3sszfylqss6lfwt\",\n  \"url\" : \"https://web.example.mocklab.io/168446\",\n  \"sid\" : \"IGd692badeFf425ABFcd0Cc8CFf9eB0A85\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdd0f862-3b4c-4b89-bf21-3e0b70cd491f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.127872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateConfigurationAddress",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The unique ID of the [Account](https://www.twilio.com/docs/iam/api/account) the address belongs to",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "address" : {
                "description" : "The unique address to be configured. The address can be a whatsapp address or phone number",
                "nullable" : true,
                "type" : "string"
              },
              "auto_creation" : {
                "description" : "Auto Creation configuration for the address.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date that this resource was created.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date that this resource was last updated.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The human-readable name of this configuration, limited to 256 characters. Optional.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "A 34 character string that uniquely identifies this resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "type" : {
                "description" : "Type of Address, value can be `whatsapp` or `sms`.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "An absolute API resource URL for this address configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "db5d5fbc-74ab-4796-8ea0-5e780d33ef7b",
    "name" : "Retrieve a list of address configurations for an account",
    "request" : {
      "urlPath" : "/v1/Configuration/Addresses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"address_configurations\" : [ {\n    \"friendly_name\" : \"Ms. Tillie Stroman\",\n    \"address\" : \"gdybk3kxsaeawwa9bzl293tta0q4ev6d1370sa4bev4gyoun2h3l9cudjy2j9jbr4u\",\n    \"date_updated\" : \"2024-02-12T08:55:46.126Z\",\n    \"date_created\" : \"2023-06-13T22:02:05.126Z\",\n    \"account_sid\" : \"AC5F0666eE4feD4a84Ce5de6fE0aa9fcac\",\n    \"auto_creation\" : { },\n    \"type\" : \"utef47ao72mnwhxeza1zi5ex9rggjslyyp206dm5h3dyk1e4aldna5sbm0sl2gtn4njp6oklzmje3bz95bk1zrv2talhfw7uxulhteg3j4vr25my4s25kb1k0p9zl6s1b7caqs\",\n    \"url\" : \"https://web.example.mocklab.io/829991\",\n    \"sid\" : \"IGA1dDfc0B51de07efDef05Fd7fd6E14AD\"\n  }, {\n    \"friendly_name\" : \"Antonia Hoeger\",\n    \"address\" : \"8hdecc80e1h9slnalpwvivut90zyfujautbwpv8l8szekgs1985e95v1p1hmea22kph078gpf1im4b2b8yd9rjcg1myoapgqw\",\n    \"date_updated\" : \"2023-05-24T19:29:34.126Z\",\n    \"date_created\" : \"2023-05-19T20:19:03.126Z\",\n    \"account_sid\" : \"ACb936F8F3A7704C1c045a4A4C76eee3EA\",\n    \"auto_creation\" : { },\n    \"type\" : \"zp1lh4okei1hmrmqkgn6gq4zrhu4y0u1hujcqsz4\",\n    \"url\" : \"https://web.example.mocklab.io/227929\",\n    \"sid\" : \"IGeFD4EEFAC3d98Cd15aFD8e7DF8e5dFEE\"\n  }, {\n    \"friendly_name\" : \"Pete Heller\",\n    \"address\" : \"5h1fhc9on3110hq4vbzwq9ef3myip6jfr4xh7l01105cff3qp799yo8797t6rtjqetj62vtbg6cforrd1r7zxex5bus1ocog4e2qy2031vx26qec0oouenernu8xdf2jr0v9ey14m3ptzr0skdx6z7co388fxy5y7it73gwyynzb1\",\n    \"date_updated\" : \"2023-11-26T08:09:42.127Z\",\n    \"date_created\" : \"2022-04-26T08:55:44.127Z\",\n    \"account_sid\" : \"ACcFdAfDb8fA9d1e277D2ccCeB1BbA0a09\",\n    \"auto_creation\" : { },\n    \"type\" : \"306kto3r56qf0fq8yb3pz28uo03eueajuve5sj40ungutq5hr1u5sz3n2rgfdif8lku6zjsjbpx2vkti9320mbexzbes26aj343big\",\n    \"url\" : \"https://web.example.mocklab.io/543099\",\n    \"sid\" : \"IG1aea004ED4Fff1ecDfc96Bf9F6Cc7Abe\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/980760\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/475265\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/348128\",\n    \"page\" : 1201113069568020113,\n    \"key\" : \"t4di71mjp304yv5uy8o3lce0o65lpnr\",\n    \"url\" : \"https://web.example.mocklab.io/787849\",\n    \"page_size\" : 7942804816130806579\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db5d5fbc-74ab-4796-8ea0-5e780d33ef7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.127614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListConfigurationAddress",
          "schema" : {
            "properties" : {
              "address_configurations" : {
                "items" : {
                  "$ref" : "#/components/schemas/conversations.v1.configuration_address"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListConfigurationAddressResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "58efed7a-3d9e-4e1e-8bb8-8e2eaa1f9e68",
    "name" : "Update the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"ISa8f2bceba63e24F4bDe34Fd464277a77\",\n  \"default_closed_timer\" : \"2022-03-29T15:20:17.126505Z\",\n  \"default_inactive_timer\" : \"2022-10-01T12:27:17.126531Z\",\n  \"account_sid\" : \"ACcFdABF5Bfe8D96A012a17c0Cf48DBcAb\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MGA0Ad5d139bAde2EdAbAC230Bce3e74E1\",\n  \"url\" : \"https://web.example.mocklab.io/526046\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58efed7a-3d9e-4e1e-8bb8-8e2eaa1f9e68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.126676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "053b9c89-5b62-4703-a79b-353bcdd599dd",
    "name" : "Fetch the global configuration of conversations on your account",
    "request" : {
      "urlPath" : "/v1/Configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"default_chat_service_sid\" : \"IS9EaAB7e4eD6A4d728a436D5Ca427a48c\",\n  \"default_closed_timer\" : \"2022-09-01T12:07:17.126138Z\",\n  \"default_inactive_timer\" : \"2023-02-16T13:40:17.126174Z\",\n  \"account_sid\" : \"AC0aad18F83bcBA3D8c8AEDDaCaBcCCf1c\",\n  \"links\" : { },\n  \"default_messaging_service_sid\" : \"MGbF24aa9aFfd89b7Fb6a836fc49dDA67f\",\n  \"url\" : \"https://web.example.mocklab.io/062754\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "053b9c89-5b62-4703-a79b-353bcdd599dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.126436Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchConfiguration",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) responsible for this configuration.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_chat_service_sid" : {
                "description" : "The SID of the default [Conversation Service](https://www.twilio.com/docs/conversations/api/service-resource) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^IS[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "default_closed_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `closed` state. Minimum value for this timer is 10 minutes.",
                "nullable" : true,
                "type" : "string"
              },
              "default_inactive_timer" : {
                "description" : "Default ISO8601 duration when conversation will be switched to `inactive` state. Minimum value for this timer is 1 minute.",
                "nullable" : true,
                "type" : "string"
              },
              "default_messaging_service_sid" : {
                "description" : "The SID of the default [Messaging Service](https://www.twilio.com/docs/sms/services/api) used when creating a conversation.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^MG[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "Contains absolute API resource URLs to access the webhook and default service configurations.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "url" : {
                "description" : "An absolute API resource URL for this global configuration.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  } ]
}