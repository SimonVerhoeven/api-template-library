{
  "mappings" : [ {
    "id" : "0a539bb4-23bc-3f1a-a7a9-a7ede64d3e4b",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/6hhtyir/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jonnie Armstrong\",\n  \"error\" : {\n    \"code\" : 1186922181,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Sapiente assumenda rem facere quis dolorum omnis ut. Praesentium quaerat vel. Maxime iusto fugiat dolor nulla velit molestias.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a539bb4-23bc-3f1a-a7a9-a7ede64d3e4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "19414ab2-02a7-32dd-b02e-4ce6f7efbce5",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Graig+Crooks:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19414ab2-02a7-32dd-b02e-4ce6f7efbce5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "e4a2028d-7f88-33aa-92d3-217415675113",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Delores+Dach/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Odell Doyle\",\n    \"error\" : {\n      \"code\" : 1260535004,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Et et reiciendis voluptates cumque eveniet et. Exercitationem et hic qui enim. Beatae dignissimos eius minima eius. Sapiente non et fuga quod rerum illo sit. Distinctio est eius.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Terisa Towne III\",\n    \"error\" : {\n      \"code\" : 1840006668,\n      \"details\" : [ { } ],\n      \"message\" : \"Aut magni tenetur labore. Voluptas dolorem sed et sed. Qui velit voluptatem.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Arletta Leannon\",\n    \"error\" : {\n      \"code\" : 1087669838,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Quidem deserunt non sapiente suscipit. Sint voluptatem excepturi laboriosam ut et placeat. Iure ullam sint aspernatur molestiae aspernatur voluptatem. Enim ut ipsam. Modi consequatur eaque laboriosam \"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Timmy Murphy\",\n    \"error\" : {\n      \"code\" : 1094826215,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Magni ut atque. Itaque laborum aperiam praesentium enim. Impedit sit aut.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Chiquita Waters V\",\n    \"error\" : {\n      \"code\" : 442978251,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Sunt quo autem rem. Tempora quia architecto et. Porro necessitatibus esse adipisci doloribus. Dicta ad in nihil iste tempora tempore debitis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Eliseo Runolfsdottir\",\n    \"error\" : {\n      \"code\" : 70637872,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Pariatur ut ab cupiditate eveniet incidunt quas tenetur. Non aut sed aperiam excepturi nemo non error. Dolorum libero id fuga.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"xy46cr0rpobj7m9p74wumcz23nq4t7weevgb43zg7bj0a3dw7lhtgzyffn9au\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4a2028d-7f88-33aa-92d3-217415675113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "bc7b7a2f-78f4-312c-bc88-9aaea287b45a",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Darron+Runolfsson+III/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"1yybrbrvwdq1f9nnbn1sj0tjkwufp0f5nruznxt61h9uv\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Edgar Sporer\",\n    \"locationId\" : \"b9mn\",\n    \"name\" : \"Dwight Wilderman\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miles Flatley Sr.\",\n    \"locationId\" : \"6zo9\",\n    \"name\" : \"Antone Wiza IV\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Bud Purdy\",\n    \"locationId\" : \"9a39\",\n    \"name\" : \"Dawne Kilback\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Sheldon Schimmel\",\n    \"locationId\" : \"cfja\",\n    \"name\" : \"Roosevelt Feest I\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc7b7a2f-78f4-312c-bc88-9aaea287b45a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "cedff315-ba1a-39ce-8337-b84757b2c755",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Patty+Bode",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Barabara Muller\",\n  \"error\" : {\n    \"code\" : 1649602866,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Dignissimos mollitia et voluptas in. Necessitatibus autem dicta eius similique suscipit sunt voluptates. Consequuntur est consectetur aliquid. Recusandae officiis officia sequi. Quidem quibusdam conse\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cedff315-ba1a-39ce-8337-b84757b2c755",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}