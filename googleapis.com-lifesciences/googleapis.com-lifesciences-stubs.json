{
  "mappings" : [ {
    "id" : "934d0b10-d0e9-4e4a-b8f1-567cb04adbb1",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/1w6qamdjw3acxeyc/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Inez Pouros III\",\n  \"error\" : {\n    \"code\" : 243940635,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ipsum impedit modi deserunt est. Minima tempore ut. Alias quia tempora ea ipsa. Sint sapiente consequuntur magnam omnis ipsam similique. Laboriosam esse odit qui.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "934d0b10-d0e9-4e4a-b8f1-567cb04adbb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.646328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3e75dcad-d0c6-4a61-9f22-991d743ca82f",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Katharine+Hackett:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e75dcad-d0c6-4a61-9f22-991d743ca82f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.646147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "59bc2bec-f76a-46ee-82af-baeb2170882d",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Mr.+Silas+Schimmel/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Horace Fisher\",\n    \"error\" : {\n      \"code\" : 2027374463,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Nulla pariatur ab qui. Voluptas est magnam et eveniet reprehenderit at vitae. Quo pariatur odit qui quo aperiam.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jed Skiles\",\n    \"error\" : {\n      \"code\" : 550753626,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Error sunt sint soluta. Ipsa et ipsum. Eveniet accusamus exercitationem velit iusto et excepturi dolor. Nihil minima dolorem eveniet. Ut aut doloribus voluptatum quam quo molestiae.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"s14yywpjz7xeb3o0vbyjg0i5brxjefz5kkqyqo8lehemm4fumsxm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59bc2bec-f76a-46ee-82af-baeb2170882d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.646071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "26cd0f40-8cfc-4fad-a025-63080af50920",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Clark+Brakus+DVM/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bbwz8c1cneyk5qtzeaohgvd2o1wdzmbsgbc292fbrwap3jc077u4rr9c61xrd254qv531g5pozt5m6f8nb3tucqvgrlz85yelnjvoazvbi9i4aq1qkrtn\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Chan Littel\",\n    \"locationId\" : \"6h2g\",\n    \"name\" : \"Danilo Dach\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Clifford Jakubowski\",\n    \"locationId\" : \"10ck\",\n    \"name\" : \"Alonzo Bogisich\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Zachariah Jacobi\",\n    \"locationId\" : \"zkit\",\n    \"name\" : \"Ben Bashirian\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26cd0f40-8cfc-4fad-a025-63080af50920",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.64575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "bc3b52fd-8a95-4e05-a38d-0c90ee2945f3",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Elizabet+Schinner",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tamatha Mayert\",\n  \"error\" : {\n    \"code\" : 1870605598,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Autem voluptates doloremque sed. Iusto et repudiandae. Voluptate aut dolorum adipisci excepturi sapiente necessitatibus reiciendis.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc3b52fd-8a95-4e05-a38d-0c90ee2945f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:50.64513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}