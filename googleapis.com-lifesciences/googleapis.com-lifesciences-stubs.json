{
  "mappings" : [ {
    "id" : "b172276e-14d0-4f0c-b607-ec96ec4ea46b",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/p48p38ivh4hg4b668yaoq00ep8oss9b2du7j40704lp1nq4bmi89fa0liaj1nq88ilxfjnwywkj4hnpyy5ulzjptzvebzybkohcc6herb6lig3q5af44jhb0c/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lissette Hyatt\",\n  \"error\" : {\n    \"code\" : 709239216,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Excepturi consequatur neque nihil mollitia. Odio qui non iste pariatur natus ullam qui. Vel dicta et. Aspernatur doloribus accusamus non velit excepturi expedita. Ducimus quibusdam aliquam et velit ha\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b172276e-14d0-4f0c-b607-ec96ec4ea46b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:11.872402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "095bd18e-8b7c-4877-abf4-c406b2b5d3d8",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Yuriko+Ritchie:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "095bd18e-8b7c-4877-abf4-c406b2b5d3d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:11.872198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ef1495b0-24c8-4918-b866-8a84a461bd3f",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Johnson+Dickinson/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Gregg Leannon Jr.\",\n    \"error\" : {\n      \"code\" : 1978127610,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Iure error iure impedit. Ut iusto sed corrupti cupiditate quo dolor. Numquam ut ipsa asperiores error. Expedita accusantium itaque sit illo. Non soluta unde aut ipsum enim in.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Giselle Dickens\",\n    \"error\" : {\n      \"code\" : 2066393951,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Consequuntur dolor adipisci voluptatibus iste consectetur soluta. Hic natus quia voluptatem quod. Ratione totam cumque.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Stefania Fritsch\",\n    \"error\" : {\n      \"code\" : 1712060319,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"In sit hic perspiciatis voluptatem. Quo quis unde iste. Reiciendis laborum provident. Officia labore minima debitis corporis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Evita Mueller\",\n    \"error\" : {\n      \"code\" : 131976852,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Dolorem architecto iusto aliquam. Repellendus est qui recusandae voluptates laboriosam suscipit quis. Accusamus vel illo ut aut sit animi ut. Est odio est est cupiditate et beatae architecto. Reiciend\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Willian Kshlerin\",\n    \"error\" : {\n      \"code\" : 413966766,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Pariatur optio veritatis minus. Unde recusandae omnis natus cumque. Quia a doloremque ipsa. Unde ut reiciendis.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"zxdix80v77g\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef1495b0-24c8-4918-b866-8a84a461bd3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:11.872115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a10cbf16-8290-424e-af9f-d4c4cc35870e",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Edmundo+Swift/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"u6k6vol7szwam903j6z6c5m47wnnunod9rg8arc64sc85vnxyg5dtftg9e4arpttoqmdg904p0nhgakw2pc47iieal6m9t3jnmy1jy4i7bpm3nzbpin5axmx6wd1lhfwedlwagx4qlawlg3nlvqj90h219ti2348ot9auxi1y5mx6vlw\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Gerardo Terry\",\n    \"locationId\" : \"gswq\",\n    \"name\" : \"Hubert Feil\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kristle Cremin\",\n    \"locationId\" : \"ve96\",\n    \"name\" : \"Columbus Bednar\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kyra Marquardt\",\n    \"locationId\" : \"9km1\",\n    \"name\" : \"Esther Schulist\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Fidel Nader\",\n    \"locationId\" : \"3632\",\n    \"name\" : \"Felton Herman\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Corrinne Kunde\",\n    \"locationId\" : \"k824\",\n    \"name\" : \"Mrs. Ngoc Davis\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jacinta Christiansen\",\n    \"locationId\" : \"s196\",\n    \"name\" : \"Rex Brekke\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Katherina Koss\",\n    \"locationId\" : \"3bcu\",\n    \"name\" : \"Rob Jerde\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a10cbf16-8290-424e-af9f-d4c4cc35870e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:11.871431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2e3b0230-dc23-4bd0-8246-14e6097a629b",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Johnetta+Leffler",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Elza Kemmer\",\n  \"error\" : {\n    \"code\" : 1312508674,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Culpa et ipsam aliquam aspernatur. Assumenda aut doloribus similique laborum. Eaque voluptas magni tempora est vitae molestias.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e3b0230-dc23-4bd0-8246-14e6097a629b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:11.870091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}