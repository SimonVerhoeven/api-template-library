{
  "mappings" : [ {
    "id" : "22a832e3-a457-4eb9-8ed0-fd8645fa20c5",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/j3yx0r56ivpyv2u8ym1srhvaaahzcf9y1s7vjdoar7flqndn6hjkfnw2vf21hx34qazch3n7duamucubgbkn0jf8ag1zhagxyqlnvx8si8nejydawafyowy5jjlm7vhhyw6ckr21ok2/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mose Anderson\",\n  \"error\" : {\n    \"code\" : 149572796,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sit consequatur vel ratione est. Error sequi eius laboriosam id qui nobis rerum. Eos velit ipsum officiis sapiente consequatur quia sint. Asperiores eius sint aut eaque perferendis. Sapiente voluptate\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22a832e3-a457-4eb9-8ed0-fd8645fa20c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.927957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5163684d-5abe-4d1a-94e9-98deb85b5256",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Cruz+Torp:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5163684d-5abe-4d1a-94e9-98deb85b5256",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.927759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79f125af-9d1e-4d42-9d87-fe331339cbc1",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Sanda+Bosco/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Marjorie Brakus\",\n    \"error\" : {\n      \"code\" : 1635412704,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Molestiae officiis voluptatem quae. Laboriosam vel sint nihil. Voluptas et rem vel. Dolores et quia. Unde iste quidem est maxime reprehenderit asperiores unde.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tandra Collins\",\n    \"error\" : {\n      \"code\" : 217126292,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"At occaecati vel. Tempora magnam at incidunt commodi delectus. Ea mollitia voluptatem. Consectetur ullam dolor libero numquam quasi.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lanny Emmerich\",\n    \"error\" : {\n      \"code\" : 798399915,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Qui ipsum exercitationem provident officiis aut. Asperiores mollitia explicabo provident omnis expedita. Beatae delectus maiores eum voluptas dolores molestiae. Itaque rerum porro. Qui vel culpa est d\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"sfoyg7nvdw0lilhrssfen8yplo9n77t4ldehmsdu6p569tl6qfvsckzcombconvvgyg8ogqdyp4giilbo6pkpt5cup4gaduyq1by4b69angzpil5eq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79f125af-9d1e-4d42-9d87-fe331339cbc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.927672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1f97bdf0-3732-46dd-a249-fe16a75f8817",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Inocencia+Hermiston/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"q00aw4964vn15snl9doxxtj9tgjjyiywqgbziosn3ocr2yc2arug0unuuo0ii7mj9sal8eqsv0pvl7rs0eiz2jyo2372t9cqc78pay99wuabt7evtarhybmldcoqfbhnwe5i5wzn27ohj1akwc2zp8r\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Lakeesha Heathcote\",\n    \"locationId\" : \"iszb\",\n    \"name\" : \"Virgil Howe III\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Leonia Dicki\",\n    \"locationId\" : \"zwc9\",\n    \"name\" : \"Major Altenwerth\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f97bdf0-3732-46dd-a249-fe16a75f8817",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.927239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9cf1870a-199b-4166-a403-c56edfd0d311",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Rudy+Gusikowski",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Shaun Tromp\",\n  \"error\" : {\n    \"code\" : 327551229,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Id est quas animi sed nam ea. Asperiores mollitia culpa deserunt. Corrupti est error iste libero quibusdam dolores aliquid.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cf1870a-199b-4166-a403-c56edfd0d311",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:59.926737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}