{
  "mappings" : [ {
    "id" : "43c71a7a-197c-4856-9bb2-6f503ab8dd97",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/kqko3hn8pts30uq7pyy47k2vhick3lrnczwss0zmd4cb4s9fkhutio8jz1r5vta16i1fq1b9tniy9elbn5o0sb39q1987i46njymdkuz1m6jllttm9iclo71va76yqjyuv4/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hilma Vandervort III\",\n  \"error\" : {\n    \"code\" : 289517452,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Velit laboriosam eveniet dicta est et. Et recusandae ut facere officiis nemo assumenda. Neque ut cupiditate aspernatur nisi sint voluptatem sunt.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43c71a7a-197c-4856-9bb2-6f503ab8dd97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:11.021714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b972fba4-40da-46d2-ac1e-d671f92c7fa6",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Rickie+Balistreri:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b972fba4-40da-46d2-ac1e-d671f92c7fa6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:11.021471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7dff51e1-a75e-48fe-a6f1-6db48a3e2947",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Ms.+Dannielle+Beier/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Taisha O'Keefe\",\n    \"error\" : {\n      \"code\" : 1391963482,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Aut dolorem nisi mollitia cupiditate possimus. Molestiae illum amet earum temporibus id vel et. Et odit vel hic est id.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Herta Keebler\",\n    \"error\" : {\n      \"code\" : 1471415231,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ea dolor laborum cumque debitis possimus qui molestiae. Quo consequuntur nihil soluta. Velit aut velit sit dolor corporis. Labore corrupti eos ipsa alias. Quae iure voluptatem expedita sapiente modi o\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Shavonne Raynor\",\n    \"error\" : {\n      \"code\" : 569198368,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Corporis tenetur aut nesciunt nulla. Ex cumque porro in dolores nesciunt ad. Porro optio expedita molestiae. Earum laborum praesentium qui modi. Quos eius nisi unde.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Gayle Rempel V\",\n    \"error\" : {\n      \"code\" : 2041483352,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Unde provident minus fuga blanditiis voluptas consequatur. Dignissimos iure illum a consectetur voluptas. Laborum vel est quia necessitatibus consectetur consequuntur unde. Nihil et aliquid. Est rerum\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"hthoerv366a8l1jdxw6vu6s800rq2bplf6mcssb04a828wyk07bskv9y86dzap5ytd8r3rhr4a08m641yvo2c79mg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dff51e1-a75e-48fe-a6f1-6db48a3e2947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:11.021372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "602d835a-eba8-4895-ae1a-a1d6c1ef3794",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Lecia+Hansen+MD/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"xmk27jmhd4sb1uycpe3szgq66cdwhuhmsdp5fy4t0gc308x5ddvwzeinxgot7rh9zyer1764wl7y2cdevkz7zej420z8y4v54rwagt\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Eldon McDermott\",\n    \"locationId\" : \"o2ng\",\n    \"name\" : \"Weston Rutherford\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Marcelino Kovacek\",\n    \"locationId\" : \"7q72\",\n    \"name\" : \"Lemuel Johnson I\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dorla Greenholt III\",\n    \"locationId\" : \"9737\",\n    \"name\" : \"Roberto Rice\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ben Kemmer\",\n    \"locationId\" : \"3hlz\",\n    \"name\" : \"Jamel Lowe\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Williemae Schumm\",\n    \"locationId\" : \"3956\",\n    \"name\" : \"Jeremy O'Conner PhD\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Venessa Dibbert\",\n    \"locationId\" : \"w2bt\",\n    \"name\" : \"Beulah Schowalter\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Elvis Ankunding\",\n    \"locationId\" : \"k24w\",\n    \"name\" : \"Tanika Walter\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Preston Moen\",\n    \"locationId\" : \"155a\",\n    \"name\" : \"Karl Stiedemann\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "602d835a-eba8-4895-ae1a-a1d6c1ef3794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:11.020485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "225e3f2b-6382-433a-90ac-2864a6e2331e",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Winston+Will+I",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mitch Gutkowski II\",\n  \"error\" : {\n    \"code\" : 1125350685,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Ad nisi nemo. Nam maxime facere sunt consequatur. Commodi dolorem incidunt voluptatum consequatur voluptatibus animi. In quod reiciendis. Laboriosam autem voluptas ea.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "225e3f2b-6382-433a-90ac-2864a6e2331e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:11.01876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}