{
  "mappings" : [ {
    "id" : "57b3453c-2f40-474d-9246-a0b778173816",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/a7wa3pkq29swb9fy9ir0r7r2wqcm5afx516yhgj23aaoyqt97cnktj23u4mufwnybovrhannbp4a765q9hjnrng9i5d2cj9000fxumkhgya56lkh1mol8z59ngf/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ivory Schroeder Sr.\",\n  \"error\" : {\n    \"code\" : 1233662112,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Qui voluptatem atque assumenda amet. Deserunt aut velit in ipsam nulla qui. Fuga officiis hic quas qui est aut nesciunt. Atque fugiat voluptatibus officiis possimus.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57b3453c-2f40-474d-9246-a0b778173816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.339288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "bc842e8f-2109-40e6-b99c-52aab7809420",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Hong+Roberts+III:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc842e8f-2109-40e6-b99c-52aab7809420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.338995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "78077912-0beb-41fc-a595-99be694e99eb",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Kenna+Kuhlman/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lillia Abshire\",\n    \"error\" : {\n      \"code\" : 1473009950,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Voluptas in nostrum a repudiandae reprehenderit voluptates. Atque voluptatibus voluptatem reiciendis ea. Velit sed ipsam. Non odio quis perspiciatis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Rudolf Labadie\",\n    \"error\" : {\n      \"code\" : 847943146,\n      \"details\" : [ { } ],\n      \"message\" : \"Dolor nam saepe voluptatum consectetur rerum exercitationem. Dolores quos fugiat voluptatem iste reiciendis asperiores rerum. Quas ullam similique consequatur sint. Iste et expedita fugit qui. Officii\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Divina Kessler\",\n    \"error\" : {\n      \"code\" : 195810160,\n      \"details\" : [ { } ],\n      \"message\" : \"Nihil cumque quae in ipsa hic sequi. Reiciendis et commodi earum enim. Accusantium commodi blanditiis ea eius repellat non.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"l16xioreo1bubugu03mfkayyb6bnwhgdbre4uboudtdwdqr0ofu9ftn3cy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78077912-0beb-41fc-a595-99be694e99eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.338882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "e27e8f64-2cb7-4d44-96af-81c297fbec80",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Billy+Moen/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"6kjkwhackxq80e4j0ttvesdjbgnyhn34rlhi4mqoommolxtyey84f7nfoigfo4bk67h73do1g45vroduoam11jxmvopd6ec9hlfx6vgfvae5puggzv0y57cnwlo09tq91eamzzm9ua3mr87vziyjtovf2sr5eqqxc8j1sdrg8em319c4jybtnluly3zam8bompiy\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Myesha Pfeffer\",\n    \"locationId\" : \"md34\",\n    \"name\" : \"Ms. Leif Bradtke\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Heriberto Sporer\",\n    \"locationId\" : \"2v35\",\n    \"name\" : \"Lina Rodriguez\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ninfa Hane\",\n    \"locationId\" : \"b55s\",\n    \"name\" : \"Heath Rowe\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e27e8f64-2cb7-4d44-96af-81c297fbec80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.338285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d2c69f88-c30e-4f15-8e55-bf5c82e53b1b",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Miss+Shelli+D%27Amore",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Trena Erdman\",\n  \"error\" : {\n    \"code\" : 1513324925,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et sed porro cupiditate autem eaque unde. Vero saepe occaecati quibusdam illum illo commodi. Natus commodi voluptatem et aperiam esse et. Dignissimos hic deserunt at qui. Non voluptatem et labore.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2c69f88-c30e-4f15-8e55-bf5c82e53b1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:26.337246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}