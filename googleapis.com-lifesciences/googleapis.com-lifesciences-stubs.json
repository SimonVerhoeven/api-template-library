{
  "mappings" : [ {
    "id" : "61b53b45-1d18-4d7b-9064-c2f91c117ad4",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/puh7eyl1fvv5iwx0lxkp76ymd06g2lhbvck8/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Basil Farrell\",\n  \"error\" : {\n    \"code\" : 1358838511,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"In ut numquam quo voluptas cupiditate consequatur aperiam. Minus quis voluptatum quia cum aut. Nemo dolorem voluptatem maxime. Ut voluptates voluptatem eum dolores.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61b53b45-1d18-4d7b-9064-c2f91c117ad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:35.762789Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "316e7454-3a0c-4cb4-998d-f7c0f9f4009d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Dr.+Anika+Lesch:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "316e7454-3a0c-4cb4-998d-f7c0f9f4009d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:35.762616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7bc69efa-673e-4f2e-bc55-692f3dfbfd47",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Patsy+Harber/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Darcie Hintz\",\n    \"error\" : {\n      \"code\" : 2075677060,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Sint sunt quo possimus expedita. Qui cum dolorem nisi sed deserunt. Omnis cum dolorem non ut. Qui tempore sed at exercitationem inventore eos ad.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joel Abbott\",\n    \"error\" : {\n      \"code\" : 1540703545,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Temporibus sed exercitationem a id. Corrupti eos et est. Error amet omnis ut qui. Sit distinctio dolorem. Ut voluptas iste beatae autem sunt.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kathe Kuhn\",\n    \"error\" : {\n      \"code\" : 1607439829,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Libero optio nihil. Facere corporis velit ut. Tempore ratione eius. Laboriosam et delectus asperiores in in minus magni.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Gavin Howell\",\n    \"error\" : {\n      \"code\" : 1529474707,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Id in asperiores quod iusto enim. Voluptas impedit sint reiciendis tempore quae omnis impedit. Aut est accusantium accusamus quis. Numquam totam numquam tenetur maxime quia porro. Aliquam non expedita\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"uannziuuutjfqyltai2sncyuuvumokpz8ryzxaek68e1edt74322kqg3w6trqh5dns89eqstv4iqfdqwk26t1v97po2h2qhraighxou3t6p23s2h38jr46xwtygrcf97\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bc69efa-673e-4f2e-bc55-692f3dfbfd47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:35.762538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae19e768-e05c-4a29-a8da-23f8b7726253",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Reagan+Durgan/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"mbutpellypwqi6sjd5ah44zi35tba1uqjprq5zyd9ofgud1xf4h1sfeqt\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Jeffry Upton PhD\",\n    \"locationId\" : \"ps34\",\n    \"name\" : \"Freeman Greenholt\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Renita Marquardt\",\n    \"locationId\" : \"7mpx\",\n    \"name\" : \"Britt Daniel IV\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Fermin Fahey\",\n    \"locationId\" : \"6877\",\n    \"name\" : \"Hiram Emmerich Sr.\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Larhonda Considine\",\n    \"locationId\" : \"t918\",\n    \"name\" : \"Agnus Rowe\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Yulanda Huel\",\n    \"locationId\" : \"7w8z\",\n    \"name\" : \"Nathaniel Runolfsdottir\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Artie Reilly\",\n    \"locationId\" : \"0oie\",\n    \"name\" : \"Eveline Ratke\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae19e768-e05c-4a29-a8da-23f8b7726253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:35.762045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6c0443b5-927a-41d4-865a-79ade24e005e",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Merrie+Medhurst",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Shenika Willms\",\n  \"error\" : {\n    \"code\" : 2088885553,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Recusandae quas est ducimus. Eveniet eos quia delectus vero est consequuntur. Dignissimos consequatur ipsam inventore aperiam rerum totam. Iusto aspernatur ullam voluptas.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c0443b5-927a-41d4-865a-79ade24e005e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:35.76099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}