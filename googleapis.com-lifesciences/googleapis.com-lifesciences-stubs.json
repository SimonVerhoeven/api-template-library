{
  "mappings" : [ {
    "id" : "10ddb94e-ee23-45ce-8a6d-0415d8cbd241",
    "name" : "Runs a pipeline. The returned Operation's metadata field will contain a google.c...",
    "request" : {
      "urlPath" : "/v2beta/n6cewba76p4s2ne76cu5ngv3dadj58dou3y9z7y68z0k8as7ox2f2pb0ttkc919uv200wmjqf04qo5vxqamcl6i4z828iaxgc64o9uuvtjpqu6lt5u3wzvpcuoq8q9qjakjsw9iqapxjajus9m6mo036jlz43pjmsbp6kh7i0lxnd6pwi6do81pkiib005x2/pipelines:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Leontine Pagac\",\n  \"error\" : {\n    \"code\" : 807264606,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Eaque voluptate molestias consequatur autem. Aut animi qui quo sint distinctio asperiores exercitationem. Incidunt laborum et eos error sint. Nihil pariatur est ut in.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10ddb94e-ee23-45ce-8a6d-0415d8cbd241",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.919914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.pipelines.run",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e0860a4b-7895-425a-8c30-04a90d838d76",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v2beta/Hank+Heaney+II:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0860a4b-7895-425a-8c30-04a90d838d76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.919722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "76bc9e17-ec43-4baf-b471-7d500b932126",
    "name" : "Lists operations that match the specified filter in the request. Authorization r...",
    "request" : {
      "urlPath" : "/v2beta/Gail+McClure/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Allegra Stiedemann Jr.\",\n    \"error\" : {\n      \"code\" : 412415511,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Labore id cupiditate facilis quod. Eius illo aut consequuntur. Dolores et aspernatur odit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Barrett Kovacek DVM\",\n    \"error\" : {\n      \"code\" : 1126632974,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nostrum alias quia iusto. Quia et eos consequatur sed aut. Dolorum quae enim. Rem magnam incidunt.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ellsworth Boyer PhD\",\n    \"error\" : {\n      \"code\" : 592698064,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Voluptatem aut tenetur facere. Mollitia autem veritatis possimus nihil. Ut nulla culpa. Voluptatibus eum ut nulla. Similique aspernatur quos temporibus qui maiores rem maiores.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Rosa Tromp\",\n    \"error\" : {\n      \"code\" : 341510249,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Velit sunt nihil laudantium. Eum consequatur consequatur similique consequatur qui. Molestias modi molestiae in ratione. Omnis aut impedit. Fuga culpa dolorum debitis.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Adolfo Mertz\",\n    \"error\" : {\n      \"code\" : 285687808,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Omnis eius omnis qui architecto ut. Hic quibusdam nisi laboriosam porro distinctio. Dignissimos enim a vitae ipsum praesentium facilis. Magnam voluptatem modi et voluptas illum. Soluta expedita molest\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ai Schaefer\",\n    \"error\" : {\n      \"code\" : 1505395193,\n      \"details\" : [ { } ],\n      \"message\" : \"Iste dolorem libero. Possimus dolores et pariatur beatae officia. Et suscipit labore mollitia. Dicta culpa pariatur amet.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jeraldine Grant\",\n    \"error\" : {\n      \"code\" : 165309152,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Soluta id dolorum quo amet nulla ut dolor. Qui nam quia minima voluptatum. Odit libero qui fuga est. Atque amet omnis esse numquam sunt.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"9tnjzz6xkxwinb6oxt4q6gsjdq5umjrbyhe978blp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76bc9e17-ec43-4baf-b471-7d500b932126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.91964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6871b82d-1012-4a73-b260-e3cd54d4657f",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta/Lana+Hackett/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"tr7wocexcwn287mpyu2kaf93ly95gi9penn220avjwe12idz2tdtsjcuk6ukcxt9oq7vs1tljprt9ugm7psjqxdfmwfweowkmwpah1n2x6u07zkl0f9pa1alw1d371tkqafphy5i07ve29g17y2dfzi8isav5l9vegzqcie9php5pk85sr\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Fern Rolfson\",\n    \"locationId\" : \"598o\",\n    \"name\" : \"Rayna Hammes\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Temika Becker\",\n    \"locationId\" : \"7ya0\",\n    \"name\" : \"Wilfredo Buckridge\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Isiah Lubowitz V\",\n    \"locationId\" : \"49sb\",\n    \"name\" : \"Anton McGlynn\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Francis Gutmann\",\n    \"locationId\" : \"ju3o\",\n    \"name\" : \"Ramona Conroy\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Isidro Kassulke Sr.\",\n    \"locationId\" : \"337y\",\n    \"name\" : \"Carmen Hettinger\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6871b82d-1012-4a73-b260-e3cd54d4657f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.918793Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1efc5b4b-481f-403e-b283-fcdad4c5b5b4",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v2beta/Ivy+Blick",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Salvatore Toy\",\n  \"error\" : {\n    \"code\" : 2048842892,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Ut veniam quaerat. Ut maxime vel. Corrupti eveniet vero.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1efc5b4b-481f-403e-b283-fcdad4c5b5b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:59.917788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "lifesciences.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Metadata object. This will always be returned with the Operation.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name for the operation. This may be passed to the other operation methods to retrieve information about the operation's status.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "An Empty object.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}