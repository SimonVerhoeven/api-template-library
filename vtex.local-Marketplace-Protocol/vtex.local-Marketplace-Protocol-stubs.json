{
  "mappings" : [ {
    "id" : "b3042366-f741-4f2e-a4a7-03d2423d8ecc",
    "name" : "Update tracking status - response",
    "request" : {
      "urlPath" : "/gpzv2gy3e0ro36c7h5s3extkynd6wt50g9lt1xjfgj22g3bkpm27j0fts3ll67dd060kl1u9qsb697whqy3i3p46spsf8ad8w607hbjqipxo8fba1k3voudcr7rkhwdwvfpv1s1mmkenjz1faca6w76bts7e5ninqsubqf45jcdjlyy0d7c86/pvt/orders/l74t/invoice/w5w0bzxam03ktx2t8c6q/tracking",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2021-06-09T15:22:56.7612218-02:00\",\n  \"orderId\" : \"1138342255777-01\",\n  \"receipt\" : \"527b1ae251264ef1b7a9b597cd8f16b9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3042366-f741-4f2e-a4a7-03d2423d8ecc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.015344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "update-tracking-status"
        }
      }
    }
  }, {
    "id" : "2699aef9-28f2-40c2-b449-53f481aa9296",
    "name" : "Send tracking information - response",
    "request" : {
      "urlPath" : "/v5gdfs6cyoi62tibvwljpkxllv2hd8w9fppqad7u2g9aa38rrzymzwz0361wukiokxww4z5tb0411n1hulwslaxot19wld1nu/pvt/orders/b65z/invoice/zl8ykvkih18a09jls032z8ct6npp2ai1yktjftmrj7ecycbmv66oyteg4vduceymqalralxpml4tl2wkkdxe3lqqdl6s2yw69zlryrnyuce0eq9jrmyvzhz5ltaub8yh1gsav70477giluvbggck9eye4405gai74t7awwiep2r34gus30ckiivuf1l4sx9",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2021-06-09T15:22:56.7612218-02:00\",\n  \"orderId\" : \"1138342255777-01\",\n  \"receipt\" : \"527b1ae251264ef1b7a9b597cd8f16b9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2699aef9-28f2-40c2-b449-53f481aa9296",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.015212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "send-tracking-information"
        }
      }
    }
  }, {
    "id" : "0bf74fe0-f2b0-44ad-bd11-985f13387cab",
    "name" : "Send invoice - response",
    "request" : {
      "urlPath" : "/2laruz32z9ouxpzyzu8rsx5t4vyvb5zajkmd53ou6oc2nqamugvu3qa70yrtwwspcqkjdiis6mmirnrli0dsxte9xiwyqdhz94oavusqfy75bdh9oh3hc6rt95inttpmlpdt3d6yw1vlu8wvrvccr4ew4ycj5jolka3tts8u1xdbob0nnqx9dx4vhibz/pvt/orders/m89c/invoice",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2021-06-09T15:22:56.7612218-02:00\",\n  \"orderId\" : \"1138342255777-01\",\n  \"receipt\" : \"527b1ae251264ef1b7a9b597cd8f16b9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bf74fe0-f2b0-44ad-bd11-985f13387cab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.01508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "send-invoice"
        }
      }
    }
  }, {
    "id" : "8a58f597-f5bd-4d7b-8902-93332cd36506",
    "name" : "Cancel order in marketplace - response",
    "request" : {
      "urlPath" : "/e898rgif2ya2mra3yz5r226wl0w6kd1xqklh7zmcyiupnmvijhu396qaxeo8qmmacp59dvsg3wqv0e4exu84b96u382gibz2eyophbokcafu34be7o0j9nabzkradf1o/pvt/orders/9r16/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2021-06-09T15:22:56.7612218-02:00\",\n  \"orderId\" : \"1138342255777-01\",\n  \"receipt\" : \"527b1ae251264ef1b7a9b597cd8f16b9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a58f597-f5bd-4d7b-8902-93332cd36506",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.014957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancel-order-in-marketplace"
        }
      }
    }
  }, {
    "id" : "bcc2c258-457a-4c2d-8f7a-10b090874f00",
    "name" : "Authorize fulfillment - response",
    "request" : {
      "urlPath" : "/yn0lkpotcscm2h18r5ljs25pqyvhyya2q0gk6ci9u16k58u53015ol7jkkqo78bkm0cn5wozw662t2c9r9vs93uefo0uefnas310y2jjiqj1gyjzpj21cedg8b0qoqnm5hdp7eudrj5g4a8teygfvs6r37kxj2umt2di7b/pvt/orders/8180/fulfill",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2014-10-06 18:52:00\",\n  \"marketplaceOrderId\" : \"959311095\",\n  \"orderId\" : \"1138342255777-01\",\n  \"receipt\" : \"e39d05f9-0c54-4469-a626-8bb5cff169f8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcc2c258-457a-4c2d-8f7a-10b090874f00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.014833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "authorize-fulfillment"
        }
      }
    }
  }, {
    "id" : "45f4e6fd-1322-413f-8750-11e124dcfb7d",
    "name" : "Marketplace order cancellation - response",
    "request" : {
      "urlPath" : "/wo2qlvs82x4i0lhhbjufmdi95q158m9u9rfizga2ylrxmuonnp7p0fyq9jbw3sq9ac0qi5hba3yd3xc0a61sh0gsklx624regvpa1bsz9tyaexm2cs9tp0lq2vtzucilug9iud7hxl7giylyche93h751jf39g55prt/pvt/orders/6x41/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2019-05-09 15:31:23\",\n  \"marketplaceOrderId\" : \"959311095\",\n  \"orderId\" : \"1138342255777-01\",\n  \"receipt\" : \"e39d05f9-0c54-4469-a626-8bb5cff169f8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45f4e6fd-1322-413f-8750-11e124dcfb7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.01471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mkp-order-cancellation"
        }
      }
    }
  }, {
    "id" : "4c00d510-7820-4bfa-a21d-a96ee18dd3a1",
    "name" : "Order placement - response",
    "request" : {
      "urlPath" : "/xg6qu54rbtjryh71sie1bis11trt6sswworeps92n3dlwhcm796hfh7v7sifckdj8runsfbfhb64bufs6fizyy4fa1e4pvede8zjzjsv9slsflrnc3h3e3jl1vrw9fimi0eb/pvt/orders",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientProfileData\" : {\n    \"document\" : \"3244239851\",\n    \"email\" : \"32172239852@gmail.com.br\",\n    \"firstName\" : \"John\",\n    \"isCorporate\" : false,\n    \"lastName\" : \"Smith\",\n    \"phone\" : \"399271258\"\n  },\n  \"items\" : [ {\n    \"Seller\" : \"1\",\n    \"attachments\" : [ ],\n    \"bundleItems\" : [ ],\n    \"commission\" : 0,\n    \"freightCommission\" : 0,\n    \"id\" : \"2002495\",\n    \"isGift\" : false,\n    \"itemAttachment\" : {\n      \"content\" : { }\n    },\n    \"price\" : 9990,\n    \"priceTags\" : [ ],\n    \"quantity\" : 1,\n    \"unitMultiplier\" : 0\n  } ],\n  \"marketingData\" : {\n    \"utmCampaign\" : \"freeshipping\",\n    \"utmMedium\" : \"\",\n    \"utmSource\" : \"buscape\",\n    \"utmiCampaign\" : \"artscase for iphone 5\",\n    \"utmiPage\" : \"_\",\n    \"utmiPart\" : \"BuscaFullText\"\n  },\n  \"marketplaceOrderId\" : \"959311095\",\n  \"marketplacePaymentValue\" : 11080,\n  \"marketplaceServicesEndpoint\" : \"https://marketplaceservicesendpoint/\",\n  \"shippingData\" : {\n    \"address\" : {\n      \"addressId\" : \"Home\",\n      \"addressType\" : \"Residencial\",\n      \"city\" : \"Americana\",\n      \"country\" : \"BRA\",\n      \"geoCoordinates\" : [ ],\n      \"neighborhood\" : \"SÃO JOSÉ\",\n      \"number\" : \"311\",\n      \"postalCode\" : \"13476103\",\n      \"receiverName\" : \"John Smith\",\n      \"reference\" : \"Bairro Praia Azul / Posto de Saúde 17\",\n      \"state\" : \"SP\",\n      \"street\" : \"JOÃO DAMÁZIO GOMES\"\n    },\n    \"logisticsInfo\" : [ {\n      \"itemIndex\" : 0,\n      \"lockTTL\" : \"8d\",\n      \"price\" : 1090,\n      \"selectedSla\" : \"Regular\",\n      \"shippingEstimate\" : \"7d\"\n    } ],\n    \"updateStatus\" : \"updated\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c00d510-7820-4bfa-a21d-a96ee18dd3a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.014579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "order-placement"
        }
      }
    }
  }, {
    "id" : "1721ad7b-51fb-455c-94d7-ecefab388f59",
    "name" : "Fulfillment simulation - External Seller",
    "request" : {
      "urlPath" : "/p9432tfmi1aops3f6ayfl27oe0l4gjpzb1dl5bw3s04sxzwfc94qkdrlqaz9ejnoamel0corjizf24cnlao55w3oa0k7zcy8j5e1f2dx1ajdshr3ezmdjjv73rb7f5yx8hiyued7lwnnf8erig12r5fc09homfkdkvibdwjfo0z1b2vr5vi/pvt/orderForms/simulation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"BRA\",\n  \"items\" : [ {\n    \"id\" : \"2000037\",\n    \"listPrice\" : 67203,\n    \"measurementUnit\" : \"un\",\n    \"merchantName\" : \"mySeller1\",\n    \"offerings\" : [ {\n      \"id\" : \"5\",\n      \"name\" : \"1 year warranty\",\n      \"price\" : 10000,\n      \"type\" : \"Warranty\"\n    } ],\n    \"price\" : 67203,\n    \"priceTags\" : [ ],\n    \"priceValidUntil\" : \"2014-03-01T22:58:28.143\",\n    \"quantity\" : 1,\n    \"requestIndex\" : 0,\n    \"seller\" : \"1\",\n    \"unitMultiplier\" : 1\n  } ],\n  \"logisticsInfo\" : [ {\n    \"deliveryChannels\" : [ {\n      \"id\" : \"delivery\",\n      \"stockBalance\" : 179\n    }, {\n      \"id\" : \"pickup-in-point\",\n      \"stockBalance\" : 20\n    } ],\n    \"itemIndex\" : 0,\n    \"quantity\" : 1,\n    \"shipsTo\" : [ \"BRA\" ],\n    \"slas\" : [ {\n      \"availableDeliveryWindows\" : [ {\n        \"endDateUtc\" : \"2013-02-04T13:00:00+00:00\",\n        \"price\" : 0,\n        \"startDateUtc\" : \"2013-02-04T08:00:00+00:00\"\n      } ],\n      \"deliveryChannel\" : \"pickup-in-point\",\n      \"id\" : \"Curbside pickup\",\n      \"name\" : \"Curbside pickup\",\n      \"pickupStoreInfo\" : {\n        \"additionalInfo\" : \"\",\n        \"address\" : {\n          \"addressId\" : \"548304ed-dd40-4416-b12b-4b32bfa7b1e0\",\n          \"addressType\" : \"pickup\",\n          \"city\" : \"Curitiba\",\n          \"complement\" : \"Loja 10\",\n          \"country\" : \"BRA\",\n          \"geoCoordinates\" : [ 49.334934, 25.401705 ],\n          \"neighborhood\" : \"Santa Felicidade\",\n          \"number\" : \"100\",\n          \"postalCode\" : \"82320-040\",\n          \"receiverName\" : \"Juliana\",\n          \"reference\" : \"Next to the unicorn statue\",\n          \"state\" : \"PR\",\n          \"street\" : \"Rua Domingos Strapasson\"\n        },\n        \"friendlyName\" : \"Santa Felicidade\",\n        \"isPickupStore\" : true\n      },\n      \"price\" : 0,\n      \"shippingEstimate\" : \"0bd\"\n    } ],\n    \"stockBalance\" : 199\n  } ],\n  \"postalCode\" : \"80250000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1721ad7b-51fb-455c-94d7-ecefab388f59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.014415Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fulfillment-simulation",
          "schema" : {
            "description" : "Expected response body of fulfillment simulation",
            "example" : {
              "country" : "BRA",
              "items" : [ {
                "id" : "2000037",
                "listPrice" : 67203,
                "measurementUnit" : "un",
                "merchantName" : "mySeller1",
                "offerings" : [ {
                  "id" : "5",
                  "name" : "1 year warranty",
                  "price" : 10000,
                  "type" : "Warranty"
                } ],
                "price" : 67203,
                "priceTags" : [ ],
                "priceValidUntil" : "2014-03-01T22:58:28.143",
                "quantity" : 1,
                "requestIndex" : 0,
                "seller" : "1",
                "unitMultiplier" : 1
              } ],
              "logisticsInfo" : [ {
                "deliveryChannels" : [ {
                  "id" : "delivery",
                  "stockBalance" : 179
                }, {
                  "id" : "pickup-in-point",
                  "stockBalance" : 20
                } ],
                "itemIndex" : 0,
                "quantity" : 1,
                "shipsTo" : [ "BRA" ],
                "slas" : [ {
                  "availableDeliveryWindows" : [ {
                    "endDateUtc" : "2013-02-04T13:00:00+00:00",
                    "price" : 0,
                    "startDateUtc" : "2013-02-04T08:00:00+00:00"
                  } ],
                  "deliveryChannel" : "pickup-in-point",
                  "id" : "Curbside pickup",
                  "name" : "Curbside pickup",
                  "pickupStoreInfo" : {
                    "additionalInfo" : "",
                    "address" : {
                      "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                      "addressType" : "pickup",
                      "city" : "Curitiba",
                      "complement" : "Loja 10",
                      "country" : "BRA",
                      "geoCoordinates" : [ 49.334934, 25.401705 ],
                      "neighborhood" : "Santa Felicidade",
                      "number" : "100",
                      "postalCode" : "82320-040",
                      "receiverName" : "Juliana",
                      "reference" : "Next to the unicorn statue",
                      "state" : "PR",
                      "street" : "Rua Domingos Strapasson"
                    },
                    "friendlyName" : "Santa Felicidade",
                    "isPickupStore" : true
                  },
                  "price" : 0,
                  "shippingEstimate" : "0bd"
                } ],
                "stockBalance" : 199
              } ],
              "postalCode" : "80250000"
            },
            "properties" : {
              "country" : {
                "description" : "ISO 3-digit code of the country where the delivery address is located. If you don’t want to send it, use the value null.",
                "example" : "BRA",
                "title" : "Country",
                "type" : "string"
              },
              "items" : {
                "description" : "Contains the data about each SKU in the cart.",
                "example" : [ {
                  "id" : "2000037",
                  "listPrice" : 67203,
                  "measurementUnit" : "un",
                  "merchantName" : "mySeller1",
                  "offerings" : [ {
                    "id" : "5",
                    "name" : "1 year warranty",
                    "price" : 10000,
                    "type" : "Warranty"
                  } ],
                  "price" : 67203,
                  "priceTags" : [ ],
                  "priceValidUntil" : "2014-03-01T22:58:28.143",
                  "quantity" : 1,
                  "requestIndex" : 0,
                  "seller" : "1",
                  "unitMultiplier" : 1
                } ],
                "items" : {
                  "description" : "Contains the data about each SKU in the cart.",
                  "properties" : {
                    "id" : {
                      "description" : "SKU ID",
                      "example" : "2000037",
                      "title" : "id",
                      "type" : "string"
                    },
                    "listPrice" : {
                      "description" : "List price. It’s the amount presented to the customer as a “previous” price that has been lowered due to a discount. Don’t separate the decimal places. The last two digits are the cents.",
                      "example" : 67203,
                      "title" : "listPrice",
                      "type" : "integer"
                    },
                    "measurementUnit" : {
                      "description" : "SKU’s measurement unit.",
                      "example" : "un",
                      "title" : "measurementUnit",
                      "type" : "string"
                    },
                    "merchantName" : {
                      "description" : "Name of the marketplace, used to guide payments. This field should be nulled if the marketplace is responsible for processing payments. Check out our [​​Payments in VTEX marketplaces](https://help.vtex.com/en/tutorial/payments-in-vtex-marketplaces--2kYOfWCZYweJkYl18bw9yD) article to know more.",
                      "example" : "mySeller1",
                      "title" : "merchantName",
                      "type" : "string"
                    },
                    "offerings" : {
                      "description" : "Services that may be offered for this SKU. example are the assembly of a piece of furniture or warranty. In case these information are sent, the following fields are mandatory. If you don’t want to send it, use an empty array.",
                      "example" : [ {
                        "id" : "5",
                        "name" : "1 year warranty",
                        "price" : 10000,
                        "type" : "Warranty"
                      } ],
                      "items" : {
                        "description" : "Services that may be offered for this SKU. example are the assembly of a piece of furniture or warranty. In case these information are sent, the following fields are mandatory. If you don’t want to send it, use an empty array.",
                        "properties" : {
                          "id" : {
                            "description" : "Service ID.",
                            "example" : "5",
                            "title" : "id",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Service name.",
                            "example" : "1 year warranty",
                            "title" : "name",
                            "type" : "string"
                          },
                          "price" : {
                            "description" : "Service price. The last two digits are the cents.",
                            "example" : 10000,
                            "title" : "price",
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of the service.",
                            "example" : "Warranty",
                            "title" : "type",
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "id", "name", "price" ],
                        "title" : "offerings",
                        "type" : "object"
                      },
                      "title" : "offerings",
                      "type" : "array"
                    },
                    "price" : {
                      "description" : "Actual selling price of the SKU. Don’t separate the decimal places. The last two digits are the cents.",
                      "example" : 67203,
                      "title" : "price",
                      "type" : "integer"
                    },
                    "priceTags" : {
                      "description" : "List with the promotions applied to the SKU.",
                      "items" : {
                        "description" : "Promotions applied to the SKU.",
                        "example" : "promotion 1",
                        "title" : "priceTags",
                        "type" : "string"
                      },
                      "title" : "priceTags",
                      "type" : "array"
                    },
                    "priceValidUntil" : {
                      "description" : "Expiration date of the SKU price. Example: `2014-03-01T22:58:28.143`. In case you don’t want to send it, use the value null.",
                      "example" : "2014-03-01T22:58:28.143",
                      "nullable" : true,
                      "title" : "priceValidUntil",
                      "type" : "string"
                    },
                    "quantity" : {
                      "default" : 0,
                      "description" : "Quantity of the item. The seller should send the quantity that was indicated in the request, or the maximum quantity possible.",
                      "example" : 1,
                      "title" : "quantity",
                      "type" : "integer"
                    },
                    "requestIndex" : {
                      "description" : "Position of this item in the original array (request).",
                      "example" : 0,
                      "title" : "requestIndex",
                      "type" : "integer"
                    },
                    "seller" : {
                      "description" : "ID of the seller as registered in VTEX. You should send the same value that came in the request.",
                      "example" : "1",
                      "title" : "seller",
                      "type" : "string"
                    },
                    "unitMultiplier" : {
                      "description" : "SKU unit multiplier. The default value is 1.",
                      "example" : 1,
                      "title" : "unitMultiplier",
                      "type" : "integer"
                    }
                  },
                  "required" : [ "id", "listPrice", "measurementUnit", "merchantName", "offerings", "price", "priceTags", "priceValidUntil", "quantity", "requestIndex", "seller", "unitMultiplier" ],
                  "title" : "Items",
                  "type" : "object"
                },
                "title" : "Items",
                "type" : "array"
              },
              "logisticsInfo" : {
                "description" : "Array that contains the data regarding the delivery methods and stock for each item. If all products are unavailable, this field should return empty.",
                "example" : [ {
                  "deliveryChannels" : [ {
                    "id" : "delivery",
                    "stockBalance" : 179
                  }, {
                    "id" : "pickup-in-point",
                    "stockBalance" : 20
                  } ],
                  "itemIndex" : 0,
                  "quantity" : 1,
                  "shipsTo" : [ "BRA" ],
                  "slas" : [ {
                    "availableDeliveryWindows" : [ {
                      "endDateUtc" : "2013-02-04T13:00:00+00:00",
                      "price" : 0,
                      "startDateUtc" : "2013-02-04T08:00:00+00:00"
                    } ],
                    "deliveryChannel" : "pickup-in-point",
                    "id" : "Curbside pickup",
                    "name" : "Curbside pickup",
                    "pickupStoreInfo" : {
                      "additionalInfo" : "",
                      "address" : {
                        "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                        "addressType" : "pickup",
                        "city" : "Curitiba",
                        "complement" : "Loja 10",
                        "country" : "BRA",
                        "geoCoordinates" : [ 49.334934, 25.401705 ],
                        "neighborhood" : "Santa Felicidade",
                        "number" : "100",
                        "postalCode" : "82320-040",
                        "state" : "PR",
                        "street" : "Rua Domingos Strapasson"
                      },
                      "friendlyName" : "Santa Felicidade",
                      "isPickupStore" : true
                    },
                    "price" : 0,
                    "shippingEstimate" : "0bd"
                  } ],
                  "stockBalance" : 199
                } ],
                "items" : {
                  "description" : "An explanation about the purpose of this instance.",
                  "example" : {
                    "deliveryChannels" : [ {
                      "id" : "delivery",
                      "stockBalance" : 179
                    }, {
                      "id" : "pickup-in-point",
                      "stockBalance" : 20
                    } ],
                    "itemIndex" : 0,
                    "quantity" : 1,
                    "shipsTo" : [ "BRA" ],
                    "slas" : [ {
                      "availableDeliveryWindows" : [ {
                        "endDateUtc" : "2013-02-04T13:00:00+00:00",
                        "price" : 0,
                        "startDateUtc" : "2013-02-04T08:00:00+00:00"
                      } ],
                      "deliveryChannel" : "pickup-in-point",
                      "id" : "Curbside pickup",
                      "name" : "Curbside pickup",
                      "pickupStoreInfo" : {
                        "additionalInfo" : "",
                        "address" : {
                          "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                          "addressType" : "pickup",
                          "city" : "Curitiba",
                          "complement" : "Loja 10",
                          "country" : "BRA",
                          "geoCoordinates" : [ 49.334934, 25.401705 ],
                          "neighborhood" : "Santa Felicidade",
                          "number" : "100",
                          "postalCode" : "82320-040",
                          "state" : "PR",
                          "street" : "Rua Domingos Strapasson"
                        },
                        "friendlyName" : "Santa Felicidade",
                        "isPickupStore" : true
                      },
                      "price" : 0,
                      "shippingEstimate" : "0bd"
                    } ],
                    "stockBalance" : 199
                  },
                  "properties" : {
                    "deliveryChannels" : {
                      "description" : "Array contains the stock balance for each channel.",
                      "example" : [ {
                        "id" : "delivery",
                        "stockBalance" : 179
                      }, {
                        "id" : "pickup-in-point",
                        "stockBalance" : 20
                      } ],
                      "items" : {
                        "description" : "Object containing ID and stockbalance of each delivery channel.",
                        "example" : {
                          "id" : "delivery",
                          "stockBalance" : 179
                        },
                        "properties" : {
                          "id" : {
                            "description" : "Identifies the channel type whose stock balance will be informed in the next field. Possible values are: pickup-in-point for pickup point and delivery for regular delivery.",
                            "example" : "pickup-in-point",
                            "title" : "id",
                            "type" : "string"
                          },
                          "stockBalance" : {
                            "description" : "Stock balance for the channel type selected in the previous field.",
                            "example" : 20,
                            "title" : "stockBalance",
                            "type" : "integer"
                          }
                        },
                        "required" : [ "id", "stockBalance" ],
                        "title" : "deliveryChannels",
                        "type" : "object"
                      },
                      "title" : "deliveryChannels",
                      "type" : "array"
                    },
                    "itemIndex" : {
                      "description" : "Position of this item in the original array, i.e., in the array that came with the request. This index is what identifies which SKU you are referring to for each object inside the logisticsInfo.",
                      "example" : 0,
                      "title" : "itemIndex",
                      "type" : "integer"
                    },
                    "quantity" : {
                      "description" : "Quantity of the item. The seller should send the quantity that was indicated in the request, or the maximum quantity possible.",
                      "example" : 1,
                      "title" : "quantity",
                      "type" : "integer"
                    },
                    "shipsTo" : {
                      "description" : "ISO 3-digit code of the countries to where the SKU is delivered.",
                      "example" : [ "BRA", "BOL" ],
                      "items" : {
                        "description" : "Array of country codes",
                        "example" : "BRA",
                        "title" : "shipsTo",
                        "type" : "string"
                      },
                      "title" : "shipsTo",
                      "type" : "array"
                    },
                    "slas" : {
                      "description" : "Contains the available delivery methods.",
                      "example" : [ {
                        "availableDeliveryWindows" : [ {
                          "endDateUtc" : "2013-02-04T13:00:00+00:00",
                          "price" : 0,
                          "startDateUtc" : "2013-02-04T08:00:00+00:00"
                        } ],
                        "deliveryChannel" : "pickup-in-point",
                        "id" : "Curbside pickup",
                        "name" : "Curbside pickup",
                        "pickupStoreInfo" : {
                          "additionalInfo" : "",
                          "address" : {
                            "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                            "addressType" : "pickup",
                            "city" : "Curitiba",
                            "complement" : "Loja 10",
                            "country" : "BRA",
                            "geoCoordinates" : [ 49.334934, 25.401705 ],
                            "neighborhood" : "Santa Felicidade",
                            "number" : "100",
                            "postalCode" : "82320-040",
                            "receiverName" : "Juliana",
                            "reference" : "Right next to the Unicorn statue.",
                            "state" : "PR",
                            "street" : "Rua Domingos Strapasson"
                          },
                          "friendlyName" : "Santa Felicidade",
                          "isPickupStore" : true
                        },
                        "price" : 0,
                        "shippingEstimate" : "0bd"
                      } ],
                      "items" : {
                        "description" : "Object with delivery methods information.",
                        "example" : {
                          "availableDeliveryWindows" : [ {
                            "endDateUtc" : "2013-02-04T13:00:00+00:00",
                            "price" : 0,
                            "startDateUtc" : "2013-02-04T08:00:00+00:00"
                          } ],
                          "deliveryChannel" : "pickup-in-point",
                          "id" : "Curbside pickup",
                          "name" : "Curbside pickup",
                          "pickupStoreInfo" : {
                            "additionalInfo" : "",
                            "address" : {
                              "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                              "addressType" : "pickup",
                              "city" : "Curitiba",
                              "complement" : "Loja 10",
                              "country" : "BRA",
                              "geoCoordinates" : [ 49.334934, 25.401705 ],
                              "neighborhood" : "Santa Felicidade",
                              "number" : "100",
                              "postalCode" : "82320-040",
                              "receiverName" : "Juliana",
                              "reference" : "Right next to the Unicorn statue.",
                              "state" : "PR",
                              "street" : "Rua Domingos Strapasson"
                            },
                            "friendlyName" : "Santa Felicidade",
                            "isPickupStore" : true
                          },
                          "price" : 0,
                          "shippingEstimate" : "0bd"
                        },
                        "properties" : {
                          "availableDeliveryWindows" : {
                            "description" : "Contains the delivery windows available for the SLA.",
                            "example" : [ {
                              "endDateUtc" : "2013-02-04T13:00:00+00:00",
                              "price" : 0,
                              "startDateUtc" : "2013-02-04T08:00:00+00:00"
                            }, {
                              "endDateUtc" : "2014-02-04T13:00:00+00:00",
                              "price" : 100,
                              "startDateUtc" : "2014-02-04T08:00:00+00:00"
                            } ],
                            "items" : {
                              "description" : "Object with delivery windows information.",
                              "example" : {
                                "endDateUtc" : "2013-02-04T13:00:00+00:00",
                                "price" : 0,
                                "startDateUtc" : "2013-02-04T08:00:00+00:00"
                              },
                              "properties" : {
                                "endDateUtc" : {
                                  "description" : "End date of the delivery window.",
                                  "example" : "2013-02-04T13:00:00+00:00",
                                  "title" : "endDateUtc",
                                  "type" : "string"
                                },
                                "price" : {
                                  "description" : "Extra price for scheduled delivery. The last two digits are the cents.",
                                  "example" : 0,
                                  "title" : "price",
                                  "type" : "integer"
                                },
                                "startDateUtc" : {
                                  "description" : "Start date of the delivery window.",
                                  "example" : "2013-02-04T08:00:00+00:00",
                                  "title" : "startDateUtc",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "startDateUtc", "endDateUtc", "price" ],
                              "title" : "availableDeliveryWindows",
                              "type" : "object"
                            },
                            "title" : "availableDeliveryWindows",
                            "type" : "array"
                          },
                          "deliveryChannel" : {
                            "description" : "Type of delivery channel. The values that are possible are: `pickup-in-point` for pickup point and `delivery` for regular delivery.",
                            "example" : "pickup-in-point",
                            "title" : "deliveryChannel",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "Identifier of the delivery method.",
                            "example" : "Curbside pickup",
                            "title" : "id",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Name of the delivery method.",
                            "example" : "Curbside pickup",
                            "title" : "name",
                            "type" : "string"
                          },
                          "pickupStoreInfo" : {
                            "description" : "Contains the data about the pickup point. If you don’t want to send this, use the value `null`.",
                            "example" : {
                              "additionalInfo" : "",
                              "address" : {
                                "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                "addressType" : "pickup",
                                "city" : "Curitiba",
                                "complement" : "Loja 10",
                                "country" : "BRA",
                                "geoCoordinates" : [ 49.334934, 25.401705 ],
                                "neighborhood" : "Santa Felicidade",
                                "number" : "100",
                                "postalCode" : "82320-040",
                                "receiverName" : "Juliana",
                                "reference" : "Right next to the Unicorn statue.",
                                "state" : "PR",
                                "street" : "Rua Domingos Strapasson"
                              },
                              "friendlyName" : "Santa Felicidade",
                              "isPickupStore" : true
                            },
                            "nullable" : true,
                            "properties" : {
                              "additionalInfo" : {
                                "description" : "Description or extra information about the pickup point.",
                                "example" : "Pick up your order at the cashier.",
                                "title" : "additionalInfo",
                                "type" : "string"
                              },
                              "address" : {
                                "description" : "Address data of the pickup point.",
                                "example" : {
                                  "addressId" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                  "addressType" : "pickup",
                                  "city" : "Curitiba",
                                  "complement" : "Loja 10",
                                  "country" : "BRA",
                                  "geoCoordinates" : [ 49.334934, 25.401705 ],
                                  "neighborhood" : "Santa Felicidade",
                                  "number" : "100",
                                  "postalCode" : "82320-040",
                                  "receiverName" : "Juliana",
                                  "reference" : "Right next to the Unicorn statue.",
                                  "state" : "PR",
                                  "street" : "Rua Domingos Strapasson"
                                },
                                "properties" : {
                                  "addressId" : {
                                    "description" : "Identifies the pickup point.",
                                    "example" : "548304ed-dd40-4416-b12b-4b32bfa7b1e0",
                                    "title" : "addressId",
                                    "type" : "string"
                                  },
                                  "addressType" : {
                                    "description" : "The possible value is pickup.",
                                    "example" : "pickup",
                                    "title" : " addressType",
                                    "type" : "string"
                                  },
                                  "city" : {
                                    "description" : "Pickup point's city.",
                                    "example" : "Rio de Janeiro",
                                    "title" : "city",
                                    "type" : "string"
                                  },
                                  "complement" : {
                                    "description" : "Complement of the pickup point address.",
                                    "example" : "2nd floor",
                                    "title" : "complement",
                                    "type" : "string"
                                  },
                                  "country" : {
                                    "description" : "3-digit ISO code of the country where the pickup point is located.",
                                    "example" : "BRA",
                                    "title" : "country",
                                    "type" : "string"
                                  },
                                  "geoCoordinates" : {
                                    "description" : "Contains the geographic coordinates of the pickup point.",
                                    "example" : [ -49.334934, 25.401705 ],
                                    "items" : {
                                      "description" : "Contains the geographic coordinates of the pickup point.",
                                      "example" : 25.401705,
                                      "title" : "geoCoordinates",
                                      "type" : "number"
                                    },
                                    "title" : "geoCoordinates",
                                    "type" : "array"
                                  },
                                  "neighborhood" : {
                                    "description" : "Neighborhood where the pickup point is located.",
                                    "example" : "Botafogo",
                                    "title" : "neighborhood",
                                    "type" : "string"
                                  },
                                  "number" : {
                                    "description" : "Address number of the pickup point.",
                                    "example" : "100",
                                    "title" : "number",
                                    "type" : "string"
                                  },
                                  "postalCode" : {
                                    "description" : "Postal code of the pickup point. This field is mandatory, for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                                    "example" : "82320-040",
                                    "title" : "postalCode",
                                    "type" : "string"
                                  },
                                  "receiverName" : {
                                    "description" : "Name of the person who will receive the product. May be sent as `null`.",
                                    "example" : "Juliana",
                                    "nullable" : true,
                                    "title" : "receiverName",
                                    "type" : "string"
                                  },
                                  "reference" : {
                                    "description" : "A reference for the pickup point address. ",
                                    "example" : "Right next to the Unicorn statue.",
                                    "nullable" : true,
                                    "title" : "reference",
                                    "type" : "string"
                                  },
                                  "state" : {
                                    "description" : "Pickup point's state.",
                                    "example" : "RJ",
                                    "title" : "state",
                                    "type" : "string"
                                  },
                                  "street" : {
                                    "description" : "Street where the pickup point is located.",
                                    "example" : "Rua Praia de Botafogo",
                                    "title" : "street",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "addressType", "receiverName", "addressId", "postalCode", "city", "state", "country", "street", "number", "neighborhood", "complement", "reference", "geoCoordinates" ],
                                "title" : "address",
                                "type" : "object"
                              },
                              "friendlyName" : {
                                "description" : "Friendly name of the pickup point.",
                                "example" : "Store ABC",
                                "title" : "friendlyName",
                                "type" : "string"
                              },
                              "isPickupStore" : {
                                "description" : "`true` if it is a pickup point.",
                                "example" : true,
                                "title" : "isPickupStore",
                                "type" : "boolean"
                              }
                            },
                            "required" : [ "isPickupStore", "friendlyName", "address", "additionalInfo" ],
                            "title" : "pickupStoreInfo",
                            "type" : "object"
                          },
                          "price" : {
                            "description" : "Delivery price. The two last digits are the cents.",
                            "example" : 846,
                            "title" : "price",
                            "type" : "integer"
                          },
                          "shippingEstimate" : {
                            "description" : "Time estimated for the delivery. Possible suffixes are `bd` for *business day* , `h` for *hours*, and `m` for *minutes*.",
                            "example" : "19bd",
                            "title" : "shippingEstimate",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "deliveryChannel", "name", "price", "shippingEstimate", "availableDeliveryWindows", "pickupStoreInfo" ],
                        "title" : "slas",
                        "type" : "object"
                      },
                      "title" : "slas",
                      "type" : "array"
                    },
                    "stockBalance" : {
                      "description" : "Stock balance of the SKU.",
                      "example" : 199,
                      "title" : "stockBalance",
                      "type" : "integer"
                    }
                  },
                  "required" : [ "itemIndex", "quantity", "shipsTo", "slas", "stockBalance", "deliveryChannels" ],
                  "title" : "A Schema",
                  "type" : "object"
                },
                "title" : "logisticsInfo",
                "type" : "array"
              },
              "postalCode" : {
                "description" : "Postal code of the delivery address. This field is mandatory, for shopping carts simulations, where both Country and Postal Code are required. This field should be sent as `null` for storefront simulations, where the information is not necessary.",
                "example" : "80250000",
                "title" : "postalCode",
                "type" : "string"
              }
            },
            "required" : [ "country", "items", "logisticsInfo", "postalCode" ],
            "title" : "Response body",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ccd58a27-f0c5-45cf-9b0b-5dc870409022",
    "name" : "Authorize dispatch for fulfillment order - response",
    "request" : {
      "urlPath" : "/Dan+Hilll.qpllespizw05os36j8g7u2lhlalzr1j9dl7n5k9w4ahe6wkzozu1069ft67cighxccqnghnjks48278jzzb8h1iko35jsbs6cevb0.com.br/api/fulfillment/pvt/orders/6ye0/fulfill",
      "method" : "POST",
      "queryParameters" : {
        "affiliateId" : {
          "equalTo" : "9zi4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"marketplaceOrderId\" : \"123\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccd58a27-f0c5-45cf-9b0b-5dc870409022",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.013359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AuthorizeDispatchForFulfillmentOrder"
        }
      }
    }
  }, {
    "id" : "3f195770-e68c-45d0-b136-ae9431317fed",
    "name" : "Place fulfillment order - response",
    "request" : {
      "urlPath" : "/Larhonda+Cremin.owlitxy9vl1ilum0g0vq0y95nkwi0er.com.br/api/fulfillment/pvt/orders",
      "method" : "POST",
      "queryParameters" : {
        "affiliateId" : {
          "equalTo" : "63a1"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"clientProfileData\" : {\n    \"document\" : \"11417984642\",\n    \"documentType\" : \"cpf\",\n    \"email\" : \"fba45537f5c84d4092cf064da742fe3d@ct.vtex.com.br\",\n    \"firstName\" : \"Júlio\",\n    \"isCorporate\" : false,\n    \"lastName\" : \"Augusto de Oliveira\",\n    \"phone\" : \"395555258\"\n  },\n  \"followUpEmail\" : \"9762a2a9028a4b5d8eb9a8ff909d15ce@ct.vtex.com.br\",\n  \"items\" : [ {\n    \"bundleItems\" : [ ],\n    \"comission\" : 0,\n    \"freightComission\" : 0,\n    \"id\" : \"2\",\n    \"isGift\" : false,\n    \"measurementUnit\" : \"un\",\n    \"price\" : 13890,\n    \"priceTags\" : [ ],\n    \"quantity\" : 1,\n    \"seller\" : \"1\",\n    \"unitMultiplier\" : 1\n  } ],\n  \"marketplaceOrderId\" : \"956\",\n  \"orderId\" : \"MBR-956\",\n  \"shippingData\" : {\n    \"address\" : {\n      \"addressId\" : \"Casa\",\n      \"addressType\" : \"Residencial\",\n      \"city\" : \"Americana\",\n      \"country\" : \"BRA\",\n      \"geoCoordinates\" : [ ],\n      \"neighborhood\" : \"Grande circo\",\n      \"number\" : \"31187\",\n      \"postalCode\" : \"98776003\",\n      \"receiverName\" : \"Júlio Augusto de Oliveira\",\n      \"reference\" : \"Bairro do foca / Posto de Saúde 65\",\n      \"state\" : \"SP\",\n      \"street\" : \"Rua da casa\"\n    },\n    \"isFOB\" : false,\n    \"logisticsInfo\" : [ {\n      \"addressId\" : \"Casa\",\n      \"deliveryIds\" : [ {\n        \"dockId\" : \"1\",\n        \"warehouseId\" : \"1_1\"\n      } ],\n      \"itemIndex\" : 0,\n      \"lockTTL\" : \"8d\",\n      \"price\" : 1090,\n      \"selectedDeliveryChannel\" : \"delivery\",\n      \"selectedSla\" : \"Correios\",\n      \"shippingEstimate\" : \"7d\"\n    } ],\n    \"selectedaddresses\" : [ {\n      \"addressId\" : \"Casa\",\n      \"addressType\" : \"Residencial\",\n      \"city\" : \"Americana\",\n      \"country\" : \"BRA\",\n      \"geoCoordinates\" : [ ],\n      \"neighborhood\" : \"Grande circo\",\n      \"number\" : \"31187\",\n      \"postalCode\" : \"98776003\",\n      \"receiverName\" : \"Júlio Augusto de Oliveira\",\n      \"reference\" : \"Bairro do foca / Posto de Saúde 65\",\n      \"state\" : \"SP\",\n      \"street\" : \"Rua da casa\"\n    } ],\n    \"trackingHints\" : [ ]\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f195770-e68c-45d0-b136-ae9431317fed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.013114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PlaceFulfillmentOrder"
        }
      }
    }
  }, {
    "id" : "9ac37500-6a07-4e05-8280-042557ecbf86",
    "name" : "Update Order Status",
    "request" : {
      "urlPath" : "/Tiara+Romaguera.vtexcommercestable.com.br/api/order-integration/orders/status",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"SOI003\",\n  \"flow\" : \"ApproveOrder\",\n  \"marketplaceOrderId\" : \"7e62fcd3-827b-400d-be8a-f050a79c4976\",\n  \"message\" : \"Order successfully enqueued\",\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ac37500-6a07-4e05-8280-042557ecbf86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.012881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateOrderStatus",
          "schema" : {
            "example" : {
              "code" : "SOI003",
              "flow" : "ApproveOrder",
              "marketplaceOrderId" : "7e62fcd3-827b-400d-be8a-f050a79c4976",
              "message" : "Order successfully enqueued",
              "success" : true
            },
            "properties" : {
              "accountName" : {
                "description" : "String that indicates which account made the request.",
                "example" : "accountName",
                "nullable" : true,
                "type" : "string"
              },
              "code" : {
                "description" : "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the Response Codes section of this API Reference.",
                "example" : "SOI001",
                "type" : "string"
              },
              "errors" : {
                "description" : "List with errors related to the response, if there is any.",
                "items" : {
                  "example" : {
                    "code" : "FMT005",
                    "description" : "Message describing the error.",
                    "source" : "Fulfillment"
                  },
                  "properties" : {
                    "code" : {
                      "description" : "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                      "example" : "FMT005",
                      "title" : "code",
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "String containing the error message/description returned by the source.",
                      "example" : "Message describing the error.",
                      "title" : "description",
                      "type" : "string"
                    },
                    "source" : {
                      "description" : "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                      "example" : "Fulfillment",
                      "title" : "Checkout",
                      "type" : "string"
                    }
                  },
                  "required" : [ "source", "code", "description" ],
                  "title" : "errors",
                  "type" : "object"
                },
                "nullable" : true,
                "type" : "array"
              },
              "fields" : {
                "description" : "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                "example" : {
                  "franchiseOrderId" : "38475934875"
                },
                "nullable" : true,
                "properties" : {
                  "fields" : {
                    "example" : {
                      "franchiseOrderId" : "432874921387409182347",
                      "mainOrderId" : "MKP-123456789"
                    },
                    "properties" : {
                      "franchiseOrderId" : {
                        "description" : "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                        "example" : "432874921387409182347",
                        "title" : "The franchiseOrderId Schema",
                        "type" : "string"
                      },
                      "mainOrderId" : {
                        "description" : "String with the order’s ID inside the main seller account in VTEX.",
                        "example" : "MKP-123456789",
                        "title" : "The mainOrderId Schema",
                        "type" : "string"
                      }
                    },
                    "required" : [ "mainOrderId" ],
                    "title" : "fields",
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "flow" : {
                "description" : "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders. \n\n`ApproveOrder`: when approving existing orders. \n\n`Unknown`: when we’re not able to identify the flow.",
                "example" : "ApproveOrder",
                "type" : "string"
              },
              "marketplaceOrderId" : {
                "description" : "String that indicates the order's ID in the marketplace.",
                "example" : "7e62fcd3-827b-400d-be8a-f050a79c4976",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "String with a message explaining the code returned in the response.",
                "example" : "The order was integrated into VTEX successfully",
                "type" : "string"
              },
              "operationId" : {
                "description" : "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                "example" : "1234567",
                "nullable" : true,
                "type" : "string"
              },
              "success" : {
                "description" : "Boolean that indicates if the response is successful or not.",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "marketplaceOrderId", "accountName", "code", "flow", "success", "operationId", "errors", "fields", "message" ],
            "title" : "Approveorder",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b07090a-455a-49db-a98c-4adfc7e15f88",
    "name" : "New Order Integration",
    "request" : {
      "urlPath" : "/Dr.+Meaghan+Paucek.vtexcommercestable.com.br/api/order-integration/orders",
      "method" : "POST",
      "queryParameters" : {
        "affiliateId" : {
          "equalTo" : "065a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountName\" : \"grocery1\",\n  \"code\" : \"SOI003\",\n  \"flow\" : \"PlaceOrder\",\n  \"message\" : \"Order successfully enqueued\",\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b07090a-455a-49db-a98c-4adfc7e15f88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.012589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "EnqueueNewOrder",
          "schema" : {
            "example" : {
              "accountName" : "grocery1",
              "code" : "SOI003",
              "flow" : "PlaceOrder",
              "message" : "Order successfully enqueued",
              "success" : true
            },
            "properties" : {
              "accountName" : {
                "description" : "String that indicates which account made the request.",
                "example" : "accountName",
                "type" : "string"
              },
              "code" : {
                "description" : "String with a internal Channel Order API code that classifies the response. The possible values returned in this field are described in the [Response Codes]() section.",
                "example" : "SOI001",
                "type" : "string"
              },
              "errors" : {
                "description" : "List with errors related to the response, if there's any.",
                "items" : {
                  "example" : {
                    "code" : "FMT005",
                    "description" : "Message describing the error.",
                    "source" : "Fulfillment"
                  },
                  "properties" : {
                    "code" : {
                      "description" : "String containing the code returned by the source. Example value: If the source is `Fulfillment`, the code can be FMT005 to indicate that the item(s) in the order are not available.",
                      "example" : "FMT005",
                      "title" : "code",
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "String containing the error message/description returned by the source.",
                      "example" : "Message describing the error.",
                      "title" : "description",
                      "type" : "string"
                    },
                    "source" : {
                      "description" : "Includes the following fields pointing out the context of the error: \n\n`Fulfillment` \n\n`Checkout` \n\n`Order Integration`",
                      "example" : "Fulfillment",
                      "title" : "Checkout",
                      "type" : "string"
                    }
                  },
                  "required" : [ "source", "code", "description" ],
                  "title" : "errors",
                  "type" : "object"
                },
                "nullable" : true,
                "type" : "array"
              },
              "fields" : {
                "description" : "Structure with important fields for the connector. This structure is only returned if the response is successful. Includes the following fields: \n\n`mainOrderId`: String with the order's ID inside the main seller account in VTEX. \n\n`franchiseOrderId`: - String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \n\n- `SLA` chosen for the order is from a franchise account.",
                "example" : {
                  "franchiseOrderId" : "38475934875"
                },
                "nullable" : true,
                "properties" : {
                  "fields" : {
                    "example" : {
                      "franchiseOrderId" : "432874921387409182347",
                      "mainOrderId" : "MKP-123456789"
                    },
                    "properties" : {
                      "franchiseOrderId" : {
                        "description" : "String with the order's ID inside the franchise seller account in VTEX. Only returned if the order was integrated using the [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) feature, that is: \n\n- `allowFranchises` field set to `true` when integrating the order \r\n- SLA chosen for the order is from a franchise account",
                        "example" : "432874921387409182347",
                        "title" : "franchiseOrderId",
                        "type" : "string"
                      },
                      "mainOrderId" : {
                        "description" : "String with the order’s ID inside the main seller account in VTEX.",
                        "example" : "MKP-123456789",
                        "title" : "mainOrderId",
                        "type" : "string"
                      }
                    },
                    "required" : [ "mainOrderId" ],
                    "title" : "fields",
                    "type" : "object"
                  }
                },
                "type" : "object"
              },
              "flow" : {
                "description" : "String containing the name of the flow responsible for the response. This field can contain the following values: \n\n`PlaceOrder`: when integrating new orders \n\n`ApproveOrder`: when approving existing orders \n\n`Unknown`: when we’re not able to identify the flow",
                "example" : "ApproveOrder",
                "type" : "string"
              },
              "marketplaceOrderId" : {
                "description" : "String that indicates the order's ID in the marketplace.",
                "example" : "7e62fcd3-827b-400d-be8a-f050a79c4976",
                "nullable" : true,
                "type" : "string"
              },
              "message" : {
                "description" : "String with a message explaining the code returned in the response. ",
                "example" : "The order was integrated into VTEX successfully",
                "type" : "string"
              },
              "operationId" : {
                "description" : "String GUID that identifies the operation in our service. This field can be used to help us analyze unexpected errors or behaviors.",
                "example" : "1234567",
                "nullable" : true,
                "type" : "string"
              },
              "success" : {
                "description" : "Boolean that indicates if the response is successful or not.",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "marketplaceOrderId", "accountName", "code", "flow", "success", "operationId", "errors", "fields", "message" ],
            "title" : "Deliverybyseller",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "164b923e-9dbf-449d-ae79-7bce8b61fbf2",
    "name" : "VTEX Mapper Registration - 200",
    "request" : {
      "urlPath" : "/portal.vtexcommercestable.com.br/api/mkp-category-mapper/connector/register",
      "method" : "POST",
      "queryParameters" : {
        "an" : {
          "equalTo" : "1cq2k3xcv2x8v15via917ul3jm2g9jcqz65hy2cbzr02w7xub1sjqjvblee25wqk9o0gz5zek2jpxghzfftz2buq6la4rlixfb43u7gq2bwid4yu"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "164b923e-9dbf-449d-ae79-7bce8b61fbf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.012151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "vtex-mapper-registration"
        }
      }
    }
  }, {
    "id" : "0d4aa15f-07de-4658-b689-dc48c96397fc",
    "name" : "Send Category Mapping to VTEX Mapper - 200",
    "request" : {
      "urlPath" : "/portal.vtexcommercestable.com.br/api/mkp-category-mapper/categories/marketplace/3db2",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0d4aa15f-07de-4658-b689-dc48c96397fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.012084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "send-category-mapping-vtex-mapper"
        }
      }
    }
  }, {
    "id" : "13c15ffd-06c4-4104-877b-617e0ee75e18",
    "name" : "Fulfillment simulation - External Marketplace",
    "request" : {
      "urlPath" : "/api/checkout/pub/orderForms/simulation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"country\" : \"BRA\",\n  \"geoCoordinates\" : [ -47.924747467041016, -15.832582473754883 ],\n  \"itemMetadata\" : {\n    \"items\" : [ {\n      \"assemblyOptions\" : [ {\n        \"id\" : \"T-Shirt Customization\",\n        \"inputValues\" : {\n          \"T-Shirt Name\" : {\n            \"domain\" : [ \"[]\" ],\n            \"maximumNumberOfCharacters\" : 2\n          }\n        },\n        \"name\" : \"T-Shirt Customization\",\n        \"required\" : false\n      } ],\n      \"id\" : \"1\",\n      \"seller\" : \"1\"\n    } ]\n  },\n  \"items\" : [ {\n    \"availability\" : \"available\",\n    \"id\" : \"1\",\n    \"listPrice\" : 9999,\n    \"measurementUnit\" : \"un\",\n    \"offerings\" : [ ],\n    \"price\" : 9999,\n    \"priceDefinition\" : {\n      \"calculatedSellingPrice\" : 2999700,\n      \"sellingPrices\" : [ {\n        \"quantity\" : 1,\n        \"value\" : 2999700\n      } ],\n      \"total\" : 2999700\n    },\n    \"priceTags\" : [ {\n      \"identifier\" : \"1234abc-5678b-1234c\",\n      \"isPercentual\" : false,\n      \"name\" : \"DISCOUNT@MANUALPRICE\",\n      \"rawValue\" : -50,\n      \"value\" : -5000\n    } ],\n    \"priceValidUntil\" : \"2023-07-12T11:49:01Z\",\n    \"quantity\" : 1,\n    \"requestIndex\" : 0,\n    \"rewardValue\" : 0,\n    \"seller\" : \"1\",\n    \"sellerChain\" : [ \"1\" ],\n    \"sellingPrice\" : 2999700,\n    \"tax\" : 0,\n    \"unitMultiplier\" : 300\n  } ],\n  \"logisticsInfo\" : [ {\n    \"deliveryChannels\" : [ {\n      \"id\" : \"pickup-in-point\"\n    }, {\n      \"id\" : \"delivery\"\n    } ],\n    \"itemIndex\" : 0,\n    \"quantity\" : 1,\n    \"shipsTo\" : [ \"BRA\" ],\n    \"slas\" : [ {\n      \"availableDeliveryWindows\" : {\n        \"endDateUtc\" : \"2017-03-27T00:00:00+00:00\",\n        \"lisPrice\" : 0,\n        \"price\" : 0,\n        \"startDateUtc\" : \"2017-03-27T00:00:00+00:00\",\n        \"tax\" : 0\n      },\n      \"deliveryChannel\" : \"delivery\",\n      \"deliveryIds\" : [ {\n        \"courierId\" : \"1\",\n        \"courierName\" : \"Transportadora\",\n        \"dockId\" : \"1\",\n        \"kitItemDetails\" : [ ],\n        \"quantity\" : 1,\n        \"warehouseId\" : \"1_1\"\n      } ],\n      \"deliveryWindow\" : {\n        \"endDateUtc\" : \"2014-04-21T12:00:00+00:00\",\n        \"listprice\" : 1000,\n        \"price\" : 0,\n        \"startDateUtc\" : \"2014-04-21T09:00:00+00:00\",\n        \"tax\" : 0\n      },\n      \"id\" : \"Normal\",\n      \"listPrice\" : 1500,\n      \"lockTTL\" : \"10d\",\n      \"name\" : \"Normal\",\n      \"pickupDistance\" : 0,\n      \"pickupStoreInfo\" : {\n        \"isPickupStore\" : false\n      },\n      \"price\" : 1500,\n      \"shippingEstimate\" : \"3bd\",\n      \"tax\" : 0,\n      \"transitTime\" : \"3bd\"\n    } ]\n  } ],\n  \"marketingData\" : {\n    \"marketingTags\" : [ \"tag1\", \"tag2\" ],\n    \"utmCampaign\" : \"Black friday\",\n    \"utmMedium\" : \"CPC\",\n    \"utmSource\" : \"app\",\n    \"utmiCampaign\" : \"true\",\n    \"utmiPart\" : \"true\",\n    \"utmipage\" : \"true\"\n  },\n  \"messages\" : [ ],\n  \"paymentData\" : {\n    \"availableAccounts\" : [ ],\n    \"availableAssociations\" : { },\n    \"availableTokens\" : [ ],\n    \"giftCardMessages\" : [ ],\n    \"giftCards\" : [ ],\n    \"installmentOptions\" : [ {\n      \"installments\" : [ {\n        \"count\" : 1,\n        \"hasInterestRate\" : false,\n        \"interestRate\" : 0,\n        \"sellerMerchantInstallments\" : [ {\n          \"count\" : 1,\n          \"hasInterestRate\" : false,\n          \"id\" : \"LOJADOBRENO\",\n          \"interestRate\" : 0,\n          \"total\" : 2999700,\n          \"value\" : 2999700\n        } ],\n        \"total\" : 2999700,\n        \"value\" : 2999700\n      } ],\n      \"paymentGroupName\" : \"creditCardPaymentGroup\",\n      \"paymentName\" : \"Visa\",\n      \"paymentSystem\" : \"2\",\n      \"value\" : 2999700\n    }, {\n      \"installments\" : [ {\n        \"count\" : 1,\n        \"hasInterestRate\" : false,\n        \"interestRate\" : 0,\n        \"sellerMerchantInstallments\" : [ {\n          \"count\" : 1,\n          \"hasInterestRate\" : false,\n          \"id\" : \"LOJADOBRENO\",\n          \"interestRate\" : 0,\n          \"total\" : 2999700,\n          \"value\" : 2999700\n        } ],\n        \"total\" : 2999700,\n        \"value\" : 2999700\n      } ],\n      \"paymentGroupName\" : \"bankInvoicePaymentGroup\",\n      \"paymentName\" : \"Boleto Bancário\",\n      \"paymentSystem\" : \"6\",\n      \"value\" : 2999700\n    }, {\n      \"installments\" : [ {\n        \"count\" : 1,\n        \"hasInterestRate\" : false,\n        \"interestRate\" : 0,\n        \"sellerMerchantInstallments\" : [ {\n          \"count\" : 1,\n          \"hasInterestRate\" : false,\n          \"id\" : \"LOJADOBRENO\",\n          \"interestRate\" : 0,\n          \"total\" : 2999700,\n          \"value\" : 2999700\n        } ],\n        \"total\" : 2999700,\n        \"value\" : 2999700\n      } ],\n      \"paymentGroupName\" : \"MercadoPagoProPaymentGroup\",\n      \"paymentName\" : \"MercadoPagoPro\",\n      \"paymentSystem\" : \"127\",\n      \"value\" : 2999700\n    }, {\n      \"installments\" : [ {\n        \"count\" : 1,\n        \"hasInterestRate\" : false,\n        \"interestRate\" : 0,\n        \"sellerMerchantInstallments\" : [ {\n          \"count\" : 1,\n          \"hasInterestRate\" : false,\n          \"id\" : \"LOJADOBRENO\",\n          \"interestRate\" : 0,\n          \"total\" : 2999700,\n          \"value\" : 2999700\n        } ],\n        \"total\" : 2999700,\n        \"value\" : 2999700\n      } ],\n      \"paymentGroupName\" : \"custom202PaymentGroupPaymentGroup\",\n      \"paymentName\" : \"Dinheiro\",\n      \"paymentSystem\" : \"202\",\n      \"value\" : 2999700\n    } ],\n    \"paymentSystems\" : [ {\n      \"description\" : \"\",\n      \"displayDocument\" : false,\n      \"dueDate\" : \"2022-07-22T11:39:36.37197Z\",\n      \"groupName\" : \"custom202PaymentGroupPaymentGroup\",\n      \"id\" : 202,\n      \"isCustom\" : true,\n      \"name\" : \"Dinheiro\",\n      \"requiresAuthentication\" : false,\n      \"requiresDocument\" : false,\n      \"stringId\" : \"202\",\n      \"template\" : \"custom202PaymentGroupPaymentGroup-template\"\n    }, {\n      \"description\" : \"\",\n      \"displayDocument\" : false,\n      \"dueDate\" : \"2022-07-19T11:39:36.37197Z\",\n      \"groupName\" : \"bankInvoicePaymentGroup\",\n      \"id\" : 6,\n      \"isCustom\" : false,\n      \"name\" : \"Boleto Bancário\",\n      \"requiresAuthentication\" : false,\n      \"requiresDocument\" : false,\n      \"stringId\" : \"6\",\n      \"template\" : \"bankInvoicePaymentGroup-template\"\n    }, {\n      \"description\" : \"\",\n      \"displayDocument\" : false,\n      \"dueDate\" : \"2022-07-19T11:39:36.37197Z\",\n      \"groupName\" : \"creditCardPaymentGroup\",\n      \"id\" : 2,\n      \"isCustom\" : false,\n      \"name\" : \"Visa\",\n      \"requiresAuthentication\" : false,\n      \"requiresDocument\" : false,\n      \"stringId\" : \"2\",\n      \"template\" : \"creditCardPaymentGroup-template\"\n    }, {\n      \"description\" : \"\",\n      \"displayDocument\" : false,\n      \"dueDate\" : \"2022-07-19T11:39:36.37197Z\",\n      \"groupName\" : \"MercadoPagoProPaymentGroup\",\n      \"id\" : 127,\n      \"isCustom\" : false,\n      \"name\" : \"MercadoPagoPro\",\n      \"requiresAuthentication\" : false,\n      \"requiresDocument\" : false,\n      \"stringId\" : \"127\",\n      \"template\" : \"MercadoPagoProPaymentGroup-template\"\n    } ],\n    \"payments\" : [ ]\n  },\n  \"pickupPoints\" : [ ],\n  \"postalCode\" : \"12345-000\",\n  \"purchaseConditions\" : {\n    \"itemPurchaseConditions\" : [ {\n      \"id\" : \"1\",\n      \"listPrice\" : 9999,\n      \"price\" : 9999,\n      \"seller\" : \"1\",\n      \"sellerChain\" : [ \"1\" ],\n      \"slas\" : [ {\n        \"availableDeliveryWindows\" : {\n          \"endDateUtc\" : \"2017-03-27T00:00:00+00:00\",\n          \"lisPrice\" : 0,\n          \"price\" : 0,\n          \"startDateUtc\" : \"2017-03-27T00:00:00+00:00\",\n          \"tax\" : 0\n        },\n        \"deliveryChannel\" : \"delivery\",\n        \"deliveryIds\" : [ {\n          \"courierId\" : \"1\",\n          \"courierName\" : \"Transportadora\",\n          \"dockId\" : \"1\",\n          \"kitItemDetails\" : [ ],\n          \"quantity\" : 1,\n          \"warehouseId\" : \"1_1\"\n        } ],\n        \"deliveryWindow\" : {\n          \"endDateUtc\" : \"2014-04-21T12:00:00+00:00\",\n          \"listprice\" : 1000,\n          \"price\" : 0,\n          \"startDateUtc\" : \"2014-04-21T09:00:00+00:00\",\n          \"tax\" : 0\n        },\n        \"id\" : \"Normal\",\n        \"listPrice\" : 1500,\n        \"lockTTL\" : \"10d\",\n        \"name\" : \"Normal\",\n        \"pickupDistance\" : 0,\n        \"pickupStoreInfo\" : {\n          \"isPickupStore\" : false\n        },\n        \"price\" : 1500,\n        \"shippingEstimate\" : \"3bd\",\n        \"tax\" : 0,\n        \"transitTime\" : \"3bd\"\n      } ]\n    } ]\n  },\n  \"ratesAndBenefitsData\" : {\n    \"rateAndBenefitsIdentifiers\" : [ ],\n    \"teaser\" : [ ]\n  },\n  \"selectableGifts\" : [ ],\n  \"totals\" : [ {\n    \"id\" : \"Items\",\n    \"name\" : \"Total dos Itens\",\n    \"value\" : 2999700\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13c15ffd-06c4-4104-877b-617e0ee75e18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:47.011726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fulfillment-simulation-external-marketplace",
          "schema" : {
            "properties" : {
              "country" : {
                "description" : "Three letter ISO code of the country of the shipping address.",
                "type" : "string"
              },
              "items" : {
                "description" : "Information on each item in the cart.",
                "items" : {
                  "properties" : {
                    "availability" : {
                      "description" : "Availability.",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the item.",
                      "type" : "string"
                    },
                    "listPrice" : {
                      "description" : "List price in cents.",
                      "type" : "integer"
                    },
                    "measurementUnit" : {
                      "description" : "Measurement unit.",
                      "type" : "string"
                    },
                    "offerings" : {
                      "description" : "Array containing offering information.",
                      "type" : "array"
                    },
                    "parentAssemblyBinding" : {
                      "description" : "Parent assembly binding.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "parentItemIndex" : {
                      "description" : "Parent item index.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "price" : {
                      "description" : "Price in cents.",
                      "type" : "integer"
                    },
                    "priceDefinition" : {
                      "description" : "Price information for all units of a specific item.",
                      "properties" : {
                        "calculatedSellingPrice" : {
                          "description" : "Item's calculated unitary selling price in cents.",
                          "type" : "integer"
                        },
                        "sellingPrices" : {
                          "description" : "Array of objects, each containing value (in cents) and quantity for the different rounding instances that can be combined to form the correctly rounded total.",
                          "items" : {
                            "properties" : {
                              "quantity" : {
                                "description" : "Rounding quantity, meaning how many items are rounded to this value.",
                                "type" : "integer"
                              },
                              "value" : {
                                "description" : "Value in cents for that specific rounding.",
                                "type" : "integer"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "total" : {
                          "description" : "Total value for all units of the item in cents.",
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "priceTags" : {
                      "description" : "Array of price tags, each of which, modifies the price in some way, like discounts or rates that apply to the item in the context of the order.",
                      "items" : {
                        "properties" : {
                          "identifier" : {
                            "description" : "Price tag identifier.",
                            "type" : "string"
                          },
                          "isPercentual" : {
                            "description" : "Indicates whether price tag value is applied through a percentage.",
                            "type" : "boolean"
                          },
                          "name" : {
                            "description" : "Price tag name.",
                            "type" : "string"
                          },
                          "owner" : {
                            "description" : "Identification of the responsible for the price tag.",
                            "type" : "string"
                          },
                          "rawValue" : {
                            "description" : "Price tag raw value.",
                            "type" : "integer"
                          },
                          "value" : {
                            "description" : "Price tag value.",
                            "type" : "integer"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "priceValidUntil" : {
                      "description" : "Price expiration date and time.",
                      "type" : "string"
                    },
                    "quantity" : {
                      "description" : "The quantity of the item the cart.",
                      "type" : "integer"
                    },
                    "requestIndex" : {
                      "description" : "Request index information.",
                      "type" : "integer"
                    },
                    "rewardValue" : {
                      "description" : "Reward value in cents.",
                      "type" : "integer"
                    },
                    "seller" : {
                      "description" : "The seller responsible for the SKU.",
                      "type" : "string"
                    },
                    "sellerChain" : {
                      "description" : "Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.",
                      "items" : {
                        "description" : "Seller.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "sellingPrice" : {
                      "description" : "Selling price in cents. Note that this field may be subject to rounding discrepancies. We recommend retrieving data from the `priceDefinition` data structure instead.",
                      "type" : "integer"
                    },
                    "tax" : {
                      "description" : "Tax value in cents.",
                      "type" : "integer"
                    },
                    "unitMultiplier" : {
                      "description" : "Unit multiplier.",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "logisticsInfo" : {
                "description" : "Array with logistics information on each item of the `items` array in the `orderForm`.",
                "items" : {
                  "properties" : {
                    "addressId" : {
                      "description" : "Address ID.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "deliveryChannels" : {
                      "description" : "List of available delivery channels.",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "Delivery channel ID.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "itemIndex" : {
                      "description" : "Index of item in items array.",
                      "type" : "integer"
                    },
                    "itemMetadata" : {
                      "description" : "Item metadata.",
                      "properties" : {
                        "items" : {
                          "description" : "List of objects containing metadata on each item in the order.",
                          "items" : {
                            "properties" : {
                              "assemblyOptions" : {
                                "description" : "Assembly options information.",
                                "properties" : {
                                  "composition" : {
                                    "description" : "Composition information.",
                                    "nullable" : true,
                                    "type" : "string"
                                  },
                                  "id" : {
                                    "description" : "Item ID.",
                                    "type" : "string"
                                  },
                                  "inputValues" : {
                                    "description" : "Input values information.",
                                    "type" : "object"
                                  },
                                  "name" : {
                                    "description" : "Item name.",
                                    "type" : "string"
                                  },
                                  "required" : {
                                    "description" : "Indicates whether the item is required.",
                                    "type" : "boolean"
                                  }
                                },
                                "type" : "array"
                              },
                              "id" : {
                                "description" : "Item ID.",
                                "type" : "string"
                              },
                              "seller" : {
                                "description" : "Seller.",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        }
                      },
                      "type" : "object"
                    },
                    "messages" : {
                      "description" : "Array containing an object for each message generated by our servers while processing the request.",
                      "type" : "array"
                    },
                    "pickupPoints" : {
                      "description" : "Array containing pickup points information.",
                      "type" : "array"
                    },
                    "purchaseConditions" : {
                      "description" : "Purchase conditions information.",
                      "properties" : {
                        "itemPurchaseConditions" : {
                          "description" : "List of objects containing purchase condition information on each item in the order.",
                          "items" : {
                            "properties" : {
                              "id" : {
                                "description" : "Item ID.",
                                "type" : "string"
                              },
                              "listPrice" : {
                                "description" : "List price in cents.",
                                "type" : "integer"
                              },
                              "price" : {
                                "description" : "Price in cents.",
                                "type" : "integer"
                              },
                              "seller" : {
                                "description" : "Seller.",
                                "type" : "string"
                              },
                              "sellerChain" : {
                                "description" : "Sellers involved in the chain. The list should contain only one seller, unless it is a [Multilevel Omnichannel Inventory](https://help.vtex.com/en/tutorial/multilevel-omnichannel-inventory--7M1xyCZWUyCB7PcjNtOyw4) order.",
                                "type" : "array"
                              },
                              "slas" : {
                                "description" : "Information on available SLAs.",
                                "items" : {
                                  "properties" : {
                                    "availableDeliveryWindows" : {
                                      "description" : "This object contains information about the delivery window available to the shopper.",
                                      "properties" : {
                                        "endDateUtc" : {
                                          "description" : "Delivery window ending day and time in UTC.",
                                          "type" : "string"
                                        },
                                        "lisPrice" : {
                                          "description" : "Delivery window list price.",
                                          "type" : "integer"
                                        },
                                        "price" : {
                                          "description" : "Delivery window price.",
                                          "type" : "integer"
                                        },
                                        "startDateUtc" : {
                                          "description" : "Delivery window starting day and time in UTC.",
                                          "type" : "string"
                                        },
                                        "tax" : {
                                          "description" : "Delivery window tax.",
                                          "type" : "integer"
                                        }
                                      },
                                      "type" : "object"
                                    },
                                    "deliveryChannel" : {
                                      "description" : "Delivery channel.",
                                      "type" : "string"
                                    },
                                    "deliveryIds" : {
                                      "description" : "Information on each delivery ID.",
                                      "items" : {
                                        "properties" : {
                                          "courierId" : {
                                            "description" : "Courier ID.",
                                            "type" : "string"
                                          },
                                          "courierName" : {
                                            "description" : "Courier name.",
                                            "type" : "string"
                                          },
                                          "dockId" : {
                                            "description" : "Warehouse ID.",
                                            "type" : "string"
                                          },
                                          "quantity" : {
                                            "description" : "Quantity.",
                                            "type" : "integer"
                                          },
                                          "warehouseId" : {
                                            "description" : "Warehouse ID.",
                                            "type" : "string"
                                          }
                                        },
                                        "type" : "object"
                                      },
                                      "type" : "array"
                                    },
                                    "deliveryWindow" : {
                                      "description" : "In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.",
                                      "properties" : {
                                        "endDateUtc" : {
                                          "description" : "Delivery window ending day and time in UTC.",
                                          "type" : "string"
                                        },
                                        "lisPrice" : {
                                          "description" : "Delivery window list price.",
                                          "type" : "integer"
                                        },
                                        "price" : {
                                          "description" : "Delivery window price.",
                                          "type" : "integer"
                                        },
                                        "startDateUtc" : {
                                          "description" : "Delivery window starting day and time in UTC.",
                                          "type" : "string"
                                        },
                                        "tax" : {
                                          "description" : "Delivery window tax.",
                                          "type" : "integer"
                                        }
                                      },
                                      "type" : "object"
                                    },
                                    "id" : {
                                      "description" : "SLA ID.",
                                      "type" : "string"
                                    },
                                    "listPrice" : {
                                      "description" : "List price in cents.",
                                      "type" : "integer"
                                    },
                                    "lockTTL" : {
                                      "description" : "Estimate date of delivery.",
                                      "type" : "string"
                                    },
                                    "name" : {
                                      "description" : "SLA name.",
                                      "type" : "string"
                                    },
                                    "pickupDistance" : {
                                      "description" : "Pickup point distance.",
                                      "type" : "integer"
                                    },
                                    "pickupPointId" : {
                                      "description" : "Pickup point ID.",
                                      "nullable" : true,
                                      "type" : "string"
                                    },
                                    "pickupStoreInfo" : {
                                      "description" : "Information on the pickup store.",
                                      "properties" : {
                                        "additionalInfo" : {
                                          "description" : "Additional information.",
                                          "nullable" : true,
                                          "type" : "string"
                                        },
                                        "address" : {
                                          "description" : "Address information.",
                                          "nullable" : true,
                                          "type" : "object"
                                        },
                                        "dockId" : {
                                          "description" : "Corresponding dock ID.",
                                          "nullable" : true,
                                          "type" : "string"
                                        },
                                        "friendlyName" : {
                                          "description" : "Friendly name.",
                                          "nullable" : true,
                                          "type" : "string"
                                        },
                                        "isPickupStore" : {
                                          "description" : "Indicates whether it is the pickup store.",
                                          "type" : "boolean"
                                        }
                                      },
                                      "type" : "object"
                                    },
                                    "polygonName" : {
                                      "description" : "Polygon name.",
                                      "nullable" : true,
                                      "type" : "string"
                                    },
                                    "price" : {
                                      "description" : "Price in cents.",
                                      "type" : "integer"
                                    },
                                    "shippingEstimate" : {
                                      "description" : "Shipping estimate. For instance, \"three business days\" will be represented as `3bd`.",
                                      "type" : "string"
                                    },
                                    "shippingEstimateDate" : {
                                      "description" : "Shipping estimate date.",
                                      "nullable" : true,
                                      "type" : "string"
                                    },
                                    "tax" : {
                                      "description" : "Tax in cents.",
                                      "type" : "integer"
                                    },
                                    "transitTime" : {
                                      "description" : "Transit time. For instance, \"three business days\" is represented as `3bd`.",
                                      "type" : "string"
                                    }
                                  },
                                  "type" : "object"
                                },
                                "type" : "array"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        }
                      },
                      "type" : "object"
                    },
                    "quantity" : {
                      "description" : "Quantity.",
                      "type" : "integer"
                    },
                    "selectedDeliveryChannel" : {
                      "description" : "Delivery channel selected by the customer. For example, `\"delivery\"` or `\"pickup-in-point\"`.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "selectedSla" : {
                      "description" : "Selected SLA. For example, `\"normal\"` or `\"express\"`.",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "shipsTo" : {
                      "description" : "List of countries that the item may be shipped to.",
                      "type" : "array"
                    },
                    "slas" : {
                      "description" : "Information on available SLAs.",
                      "items" : {
                        "properties" : {
                          "availableDeliveryWindows" : {
                            "description" : "This object contains information about the delivery window available to the shopper.",
                            "properties" : {
                              "endDateUtc" : {
                                "description" : "Delivery window ending day and time in UTC.",
                                "type" : "string"
                              },
                              "lisPrice" : {
                                "description" : "Delivery window list price.",
                                "type" : "integer"
                              },
                              "price" : {
                                "description" : "Delivery window price.",
                                "type" : "integer"
                              },
                              "startDateUtc" : {
                                "description" : "Delivery window starting day and time in UTC.",
                                "type" : "string"
                              },
                              "tax" : {
                                "description" : "Delivery window tax.",
                                "type" : "integer"
                              }
                            },
                            "type" : "object"
                          },
                          "deliveryChannel" : {
                            "description" : "Delivery channel.",
                            "type" : "string"
                          },
                          "deliveryIds" : {
                            "description" : "Information on each delivery ID.",
                            "items" : {
                              "properties" : {
                                "courierId" : {
                                  "description" : "Courier ID.",
                                  "type" : "string"
                                },
                                "courierName" : {
                                  "description" : "Courier name.",
                                  "type" : "string"
                                },
                                "dockId" : {
                                  "description" : "Warehouse ID.",
                                  "type" : "string"
                                },
                                "quantity" : {
                                  "description" : "Quantity.",
                                  "type" : "integer"
                                },
                                "warehouseId" : {
                                  "description" : "Warehouse ID.",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : "array"
                          },
                          "deliveryWindow" : {
                            "description" : "In case of scheduled delivery, this object will contain information on the delivery window selected by the shopper.",
                            "properties" : {
                              "endDateUtc" : {
                                "description" : "Delivery window ending day and time in UTC.",
                                "type" : "string"
                              },
                              "lisPrice" : {
                                "description" : "Delivery window list price.",
                                "type" : "integer"
                              },
                              "price" : {
                                "description" : "Delivery window price.",
                                "type" : "integer"
                              },
                              "startDateUtc" : {
                                "description" : "Delivery window starting day and time in UTC.",
                                "type" : "string"
                              },
                              "tax" : {
                                "description" : "Delivery window tax.",
                                "type" : "integer"
                              }
                            },
                            "type" : "object"
                          },
                          "id" : {
                            "description" : "SLA ID.",
                            "type" : "string"
                          },
                          "listPrice" : {
                            "description" : "List price in cents.",
                            "type" : "integer"
                          },
                          "lockTTL" : {
                            "description" : "Estimate date of delivery.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "SLA name.",
                            "type" : "string"
                          },
                          "pickupDistance" : {
                            "description" : "Pickup point distance.",
                            "type" : "integer"
                          },
                          "pickupPointId" : {
                            "description" : "Pickup point ID.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "pickupStoreInfo" : {
                            "description" : "Information on the pickup store.",
                            "properties" : {
                              "additionalInfo" : {
                                "description" : "Additional information.",
                                "nullable" : true,
                                "type" : "string"
                              },
                              "address" : {
                                "description" : "Address information.",
                                "nullable" : true,
                                "type" : "object"
                              },
                              "dockId" : {
                                "description" : "Corresponding dock ID.",
                                "nullable" : true,
                                "type" : "string"
                              },
                              "friendlyName" : {
                                "description" : "Friendly name.",
                                "nullable" : true,
                                "type" : "string"
                              },
                              "isPickupStore" : {
                                "description" : "Indicates whether it is the pickup store.",
                                "type" : "boolean"
                              }
                            },
                            "type" : "object"
                          },
                          "polygonName" : {
                            "description" : "Polygon name.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "price" : {
                            "description" : "Price in cents.",
                            "type" : "integer"
                          },
                          "shippingEstimate" : {
                            "description" : "Shipping estimate. For instance, \"three business days\" will be represented as `3bd`.",
                            "type" : "string"
                          },
                          "shippingEstimateDate" : {
                            "description" : "Shipping estimate date.",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "tax" : {
                            "description" : "Tax in cents.",
                            "type" : "integer"
                          },
                          "transitTime" : {
                            "description" : "Transit time. For instance, \"three business days\" is represented as `3bd`.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "subscriptionData" : {
                      "description" : "Subscription information.",
                      "nullable" : true,
                      "type" : "object"
                    },
                    "totals" : {
                      "description" : "Information on order totals.",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "Total ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Total name.",
                            "type" : "string"
                          },
                          "value" : {
                            "description" : "Total value.",
                            "type" : "integer"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "marketingData" : {
                "description" : "Object containing promotion data such as coupon tracking information and internal or external UTMs.",
                "nullable" : true,
                "type" : "object"
              },
              "paymentData" : {
                "description" : "Payment data information.",
                "properties" : {
                  "availableAccounts" : {
                    "description" : "Available accounts.",
                    "type" : "array"
                  },
                  "availableAssociations" : {
                    "description" : "Available associations.",
                    "type" : "object"
                  },
                  "availableTokens" : {
                    "description" : "Available tokens.",
                    "type" : "array"
                  },
                  "giftCardMessages" : {
                    "description" : "Array of gift card messages.",
                    "type" : "array"
                  },
                  "giftCards" : {
                    "description" : "Gift card information, if it applies to the order.",
                    "type" : "array"
                  },
                  "installmentOptions" : {
                    "description" : "Installment options information.",
                    "properties" : {
                      "bin" : {
                        "description" : "Bin.",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "installments" : {
                        "description" : "Installments information.",
                        "properties" : {
                          "count" : {
                            "description" : "Count information.",
                            "type" : "integer"
                          },
                          "hasInterestRate" : {
                            "description" : "Indicates whether the payment has interest.",
                            "type" : "boolean"
                          },
                          "interestRate" : {
                            "description" : "Interest rate value.",
                            "type" : "integer"
                          },
                          "sellerMerchantInstallments" : {
                            "description" : "Seller merchant installments information.",
                            "type" : "array"
                          },
                          "total" : {
                            "description" : "Total value of the order without separating cents. For example, $24.99 is represented `2499`.",
                            "type" : "integer"
                          },
                          "value" : {
                            "description" : "Value of the order without the interest rate. The value is shown without separating cents.",
                            "type" : "integer"
                          }
                        },
                        "type" : "array"
                      },
                      "paymentGroupName" : {
                        "description" : "Payment group name.",
                        "type" : "string"
                      },
                      "paymentName" : {
                        "description" : "Payment name.",
                        "type" : "string"
                      },
                      "paymentSystem" : {
                        "description" : "Payment system identification.",
                        "type" : "integer"
                      },
                      "value" : {
                        "description" : "Total value assigned to this payment.",
                        "type" : "integer"
                      }
                    },
                    "type" : "array"
                  },
                  "paymentSystems" : {
                    "description" : "Information on payment systems.",
                    "items" : {
                      "properties" : {
                        "availablePayments" : {
                          "description" : "Availability of payment.",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description.",
                          "type" : "string"
                        },
                        "displayDocument" : {
                          "description" : "Indicates whether a document is shown.",
                          "type" : "boolean"
                        },
                        "dueDate" : {
                          "description" : "Payment due date.",
                          "type" : "string"
                        },
                        "groupName" : {
                          "description" : "Payment group name.",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "Payment system ID.",
                          "type" : "integer"
                        },
                        "isCustom" : {
                          "description" : "Indicates whether it is custom.",
                          "type" : "boolean"
                        },
                        "name" : {
                          "description" : "Payment system name.",
                          "type" : "string"
                        },
                        "requiresAuthentication" : {
                          "description" : "Indicates whether a authentication is required.",
                          "type" : "boolean"
                        },
                        "requiresDocument" : {
                          "description" : "Indicates whether a document is required.",
                          "type" : "boolean"
                        },
                        "stringId" : {
                          "description" : "String ID.",
                          "type" : "string"
                        },
                        "template" : {
                          "description" : "Template.",
                          "type" : "string"
                        },
                        "validator" : {
                          "description" : "Payment system validator.",
                          "nullable" : true,
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "payments" : {
                    "description" : "Information on each payment.",
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "postalCode" : {
                "description" : "Postal Code.",
                "nullable" : true,
                "type" : "string"
              },
              "ratesAndBenefitsData" : {
                "description" : "Information on rates and benefits that apply to the order.",
                "properties" : {
                  "rateAndBenefitsIdentifiers" : {
                    "description" : "List with rates and benefits identifiers.",
                    "type" : "array"
                  },
                  "teaser" : {
                    "description" : "List with rates and benefits teasers.",
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "selectableGifts" : {
                "description" : "Array containing the data of the item selected as a gift.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}