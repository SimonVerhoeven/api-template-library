{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "ApiManagementClient",
    "description" : "Use these REST APIs for performing operations on Product entity associated with your Azure API Management deployment. The Product entity represents a product in API Management. Products include one or more APIs and their associated terms of use. Once a product is published, developers can subscribe to the product and begin to use the productâ€™s APIs.",
    "version" : "2019-12-01-preview"
  },
  "servers" : [ {
    "url" : "https://management.azure.com/"
  } ],
  "security" : [ {
    "azure_auth" : [ "user_impersonation" ]
  } ],
  "paths" : {
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products" : {
      "get" : {
        "tags" : [ "Product" ],
        "description" : "Lists a collection of products in the specified service instance.",
        "operationId" : "Product_ListByService",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| terms | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter | eq |     | </br>| groups | expand |     |     | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "expandGroups",
          "in" : "query",
          "description" : "When set to true, the response contains an array of groups that have visibility to the product. The default is false.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "tags",
          "in" : "query",
          "description" : "Products which are part of a specific tag.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "A Collection of the Product entities for the specified API Management service instance.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Paged Products list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}" : {
      "get" : {
        "tags" : [ "Product" ],
        "description" : "Gets the details of the product specified by its identifier.",
        "operationId" : "Product_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains the specified Product entity.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Product details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "Product" ],
        "description" : "Creates or Updates a product.",
        "operationId" : "Product_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Create or update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "displayName" ],
                    "type" : "object",
                    "properties" : {
                      "displayName" : {
                        "maxLength" : 300,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Product name."
                      }
                    },
                    "description" : "Product profile."
                  }
                },
                "description" : "Product details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Product was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Product details."
                }
              }
            }
          },
          "201" : {
            "description" : "Product was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Product details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "Product" ],
        "description" : "Delete product.",
        "operationId" : "Product_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deleteSubscriptions",
          "in" : "query",
          "description" : "Delete existing subscriptions associated with the product or not.",
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product was successfully removed."
          },
          "204" : {
            "description" : "Product was successfully removed by previous request or does not exist."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "Product" ],
        "description" : "Gets the entity state (Etag) version of the product specified by its identifier.",
        "operationId" : "Product_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Specified Product entity exists and current entity state version is present in the ETag header.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "patch" : {
        "tags" : [ "Product" ],
        "description" : "Update existing product details.",
        "operationId" : "Product_Update",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "Update parameters.",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object",
                "properties" : {
                  "properties" : {
                    "type" : "object",
                    "properties" : {
                      "displayName" : {
                        "maxLength" : 300,
                        "minLength" : 1,
                        "type" : "string",
                        "description" : "Product name."
                      }
                    },
                    "description" : "Parameters supplied to the Update Product operation."
                  }
                },
                "description" : "Product Update parameters."
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "204" : {
            "description" : "Product details was successfully updated."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis" : {
      "get" : {
        "tags" : [ "ProductApi" ],
        "description" : "Lists a collection of the APIs associated with a product.",
        "operationId" : "ProductApi_ListByProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| description | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| serviceUrl | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| path | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The response body contains a collection of Api entities in the product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Paged Api list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/apis/{apiId}" : {
      "put" : {
        "tags" : [ "ProductApi" ],
        "description" : "Adds an API to the specified product.",
        "operationId" : "ProductApi_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The specified API is already added to the product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Api details."
                }
              }
            }
          },
          "201" : {
            "description" : "The API was successfully added to the product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Api details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProductApi" ],
        "description" : "Deletes the specified API from the specified product.",
        "operationId" : "ProductApi_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "API was successfully removed from product"
          },
          "204" : {
            "description" : "API successfully removed by previous request or does not exist in product"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ProductApi" ],
        "description" : "Checks that API entity specified by identifier is associated with the Product entity.",
        "operationId" : "ProductApi_CheckEntityExists",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "apiId",
          "in" : "path",
          "description" : "API revision identifier. Must be unique in the current API Management service instance. Non-current revision has ;rev=n as a suffix where n is the revision number.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "Entity exists"
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups" : {
      "get" : {
        "tags" : [ "ProductGroup" ],
        "description" : "Lists the collection of developer groups associated with the specified product.",
        "operationId" : "ProductGroup_ListByProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt |     | </br>| displayName | filter | eq, ne |     | </br>| description | filter | eq, ne |     | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists a collection of Group entities.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Paged Group list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/groups/{groupId}" : {
      "put" : {
        "tags" : [ "ProductGroup" ],
        "description" : "Adds the association between the specified developer group with the specified product.",
        "operationId" : "ProductGroup_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "Group identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The specified group is already associated with the product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Contract details."
                }
              }
            }
          },
          "201" : {
            "description" : "The group was successfully associated with the product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Contract details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProductGroup" ],
        "description" : "Deletes the association between the specified group and product.",
        "operationId" : "ProductGroup_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "Group identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The group was successfully disassociated with the product."
          },
          "204" : {
            "description" : "The group was successfully disassociated with the product."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ProductGroup" ],
        "description" : "Checks that Group entity specified by identifier is associated with the Product entity.",
        "operationId" : "ProductGroup_CheckEntityExists",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "groupId",
          "in" : "path",
          "description" : "Group identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "204" : {
            "description" : "The Group is associated with the Product."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies" : {
      "get" : {
        "tags" : [ "ProductPolicy" ],
        "description" : "Get the policy configuration at the Product level.",
        "operationId" : "ProductPolicy_ListByProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Policy information.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "The response of the list policy operation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/policies/{policyId}" : {
      "get" : {
        "tags" : [ "ProductPolicy" ],
        "description" : "Get the policy configuration at the Product level.",
        "operationId" : "ProductPolicy_Get",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "format",
          "in" : "query",
          "description" : "Policy Export Format.",
          "schema" : {
            "type" : "string",
            "default" : "xml",
            "enum" : [ "xml", "rawxml" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Policy information.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Policy Contract details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ProductPolicy" ],
        "description" : "Creates or updates policy configuration for the Product.",
        "operationId" : "ProductPolicy_CreateOrUpdate",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. Not required when creating an entity, but required when updating an entity.",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "description" : "The policy contents to apply.",
          "content" : {
            "application/json" : {
              "schema" : {
                "properties" : {
                  "properties" : {
                    "required" : [ "value" ],
                    "type" : "object",
                    "properties" : {
                      "format" : {
                        "type" : "string",
                        "description" : "Format of the policyContent.",
                        "default" : "xml",
                        "enum" : [ "xml", "xml-link", "rawxml", "rawxml-link" ]
                      },
                      "value" : {
                        "type" : "string",
                        "description" : "Contents of the Policy as defined by the format."
                      }
                    },
                    "description" : "Policy contract Properties."
                  }
                },
                "description" : "Policy Contract details.",
                "allOf" : [ {
                  "type" : "object",
                  "properties" : {
                    "id" : {
                      "type" : "string",
                      "description" : "Resource ID.",
                      "readOnly" : true
                    },
                    "name" : {
                      "type" : "string",
                      "description" : "Resource name.",
                      "readOnly" : true
                    },
                    "type" : {
                      "type" : "string",
                      "description" : "Resource type for API Management resource.",
                      "readOnly" : true
                    }
                  },
                  "description" : "The Resource definition."
                } ]
              }
            }
          },
          "required" : true
        },
        "responses" : {
          "200" : {
            "description" : "Product policy configuration of the tenant was successfully updated.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Policy Contract details."
                }
              }
            }
          },
          "201" : {
            "description" : "Product policy configuration was successfully created.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Policy Contract details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProductPolicy" ],
        "description" : "Deletes the policy configuration at the Product.",
        "operationId" : "ProductPolicy_Delete",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "If-Match",
          "in" : "header",
          "description" : "ETag of the Entity. ETag should match the current entity state from the header response of the GET request or it should be * for unconditional update.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted the policy configuration at the Product level."
          },
          "204" : {
            "description" : "Successfully deleted the policy configuration at the Product level."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ProductPolicy" ],
        "description" : "Get the ETag of the policy configuration at the Product level.",
        "operationId" : "ProductPolicy_GetEntityTag",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "policyId",
          "in" : "path",
          "description" : "The identifier of the Policy.",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "policy" ]
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Product Policy Etag information.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/subscriptions" : {
      "get" : {
        "tags" : [ "ProductSubscription" ],
        "description" : "Lists the collection of subscriptions to the specified product.",
        "operationId" : "ProductSubscriptions_List",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| stateComment | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| ownerId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| scope | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| userId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| productId | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| state | filter | eq |     | </br>| user | expand |     |     | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Lists a collection of subscription entities.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Paged Subscriptions list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "description" : "Lists all Tags associated with the Product.",
        "operationId" : "Tag_ListByProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "$filter",
          "in" : "query",
          "description" : "|   Field     |     Usage     |     Supported operators     |     Supported functions     |</br>|-------------|-------------|-------------|-------------|</br>| displayName | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>| name | filter | ge, le, eq, ne, gt, lt | substringof, contains, startswith, endswith | </br>",
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "$top",
          "in" : "query",
          "description" : "Number of records to return.",
          "schema" : {
            "minimum" : 1,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "$skip",
          "in" : "query",
          "description" : "Number of records to skip.",
          "schema" : {
            "minimum" : 0,
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "The operation returns a collection of tags associated with the Product entity.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Paged Tag list representation."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    },
    "/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/products/{productId}/tags/{tagId}" : {
      "get" : {
        "tags" : [ "ProductTag" ],
        "description" : "Get tag associated with the Product.",
        "operationId" : "Tag_GetByProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Gets the details of the tag specified by its identifier.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Tag Contract details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "put" : {
        "tags" : [ "ProductTag" ],
        "description" : "Assign tag to the Product.",
        "operationId" : "Tag_AssignToProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Tag is already assigned to the Product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Tag Contract details."
                }
              }
            }
          },
          "201" : {
            "description" : "Tag was assigned to the Product.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Tag Contract details."
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "delete" : {
        "tags" : [ "ProductTag" ],
        "description" : "Detach the tag from the Product.",
        "operationId" : "Tag_DetachFromProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully detached the tag from the Product."
          },
          "204" : {
            "description" : "Successfully detached the tag from the Product."
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      },
      "head" : {
        "tags" : [ "ProductTag" ],
        "description" : "Gets the entity state version of the tag specified by its identifier.",
        "operationId" : "Tag_GetEntityStateByProduct",
        "parameters" : [ {
          "name" : "resourceGroupName",
          "in" : "path",
          "description" : "The name of the resource group.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "serviceName",
          "in" : "path",
          "description" : "The name of the API Management service.",
          "required" : true,
          "schema" : {
            "maxLength" : 50,
            "minLength" : 1,
            "pattern" : "^[a-zA-Z](?:[a-zA-Z0-9-]*[a-zA-Z0-9])?$",
            "type" : "string"
          }
        }, {
          "name" : "productId",
          "in" : "path",
          "description" : "Product identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 256,
            "minLength" : 1,
            "type" : "string"
          }
        }, {
          "name" : "tagId",
          "in" : "path",
          "description" : "Tag identifier. Must be unique in the current API Management service instance.",
          "required" : true,
          "schema" : {
            "maxLength" : 80,
            "minLength" : 1,
            "pattern" : "^[^*#&+:<>?]+$",
            "type" : "string"
          }
        }, {
          "name" : "api-version",
          "in" : "query",
          "description" : "Version of the API to be used with the client request.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subscriptionId",
          "in" : "path",
          "description" : "Subscription credentials which uniquely identify Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Empty response body, ETag header entity state version.",
            "headers" : {
              "ETag" : {
                "description" : "Current entity state version. Should be treated as opaque and used to make conditional HTTP requests.",
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "default" : {
            "description" : "Error response describing why the operation failed.",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "description" : "Error Response."
                }
              }
            }
          }
        }
      }
    }
  },
  "components" : {
    "securitySchemes" : {
      "azure_auth" : {
        "type" : "oauth2",
        "description" : "Azure Active Directory OAuth2 Flow."
      }
    }
  }
}