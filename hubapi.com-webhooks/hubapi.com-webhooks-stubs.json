{
  "mappings" : [ {
    "id" : "51395425-17f0-4465-9e4a-5e47b3becc9b",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/1748884811/subscriptions/2102455429",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdAt\" : \"2022-09-05T17:26:53.673Z\",\n  \"propertyName\" : \"Sean Shields\",\n  \"active\" : true,\n  \"eventType\" : \"line_item.propertyChange\",\n  \"id\" : \"91is\",\n  \"updatedAt\" : \"2024-02-29T03:04:41.673Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51395425-17f0-4465-9e4a-5e47b3becc9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.673932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "patch-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_update",
          "schema" : {
            "description" : "Complete details for an event subscription.",
            "properties" : {
              "active" : {
                "description" : "Determines if the subscription is active or paused.",
                "type" : "boolean"
              },
              "createdAt" : {
                "description" : "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              },
              "eventType" : {
                "description" : "Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
                "enum" : [ "contact.propertyChange", "company.propertyChange", "deal.propertyChange", "ticket.propertyChange", "product.propertyChange", "line_item.propertyChange", "contact.creation", "contact.deletion", "contact.privacyDeletion", "company.creation", "company.deletion", "deal.creation", "deal.deletion", "ticket.creation", "ticket.deletion", "product.creation", "product.deletion", "line_item.creation", "line_item.deletion", "conversation.creation", "conversation.deletion", "conversation.newMessage", "conversation.privacyDeletion", "conversation.propertyChange" ],
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the subscription.",
                "type" : "string"
              },
              "propertyName" : {
                "description" : "The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`.",
                "type" : "string"
              },
              "updatedAt" : {
                "description" : "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              }
            },
            "required" : [ "active", "createdAt", "eventType", "id" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bdd7eff9-e728-40e0-a8ef-58c59acf2c47",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/1918081881/subscriptions/638399860",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdAt\" : \"2023-10-16T02:51:56.673Z\",\n  \"propertyName\" : \"Leesa Rutherford\",\n  \"active\" : true,\n  \"eventType\" : \"deal.deletion\",\n  \"id\" : \"ql2p\",\n  \"updatedAt\" : \"2023-06-20T19:12:57.673Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdd7eff9-e728-40e0-a8ef-58c59acf2c47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.673726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_getById",
          "schema" : {
            "description" : "Complete details for an event subscription.",
            "properties" : {
              "active" : {
                "description" : "Determines if the subscription is active or paused.",
                "type" : "boolean"
              },
              "createdAt" : {
                "description" : "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              },
              "eventType" : {
                "description" : "Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
                "enum" : [ "contact.propertyChange", "company.propertyChange", "deal.propertyChange", "ticket.propertyChange", "product.propertyChange", "line_item.propertyChange", "contact.creation", "contact.deletion", "contact.privacyDeletion", "company.creation", "company.deletion", "deal.creation", "deal.deletion", "ticket.creation", "ticket.deletion", "product.creation", "product.deletion", "line_item.creation", "line_item.deletion", "conversation.creation", "conversation.deletion", "conversation.newMessage", "conversation.privacyDeletion", "conversation.propertyChange" ],
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the subscription.",
                "type" : "string"
              },
              "propertyName" : {
                "description" : "The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`.",
                "type" : "string"
              },
              "updatedAt" : {
                "description" : "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              }
            },
            "required" : [ "active", "createdAt", "eventType", "id" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "22f7c918-17a4-4e2c-895e-9414fdbf364a",
    "request" : {
      "urlPath" : "/webhooks/v3/195236724/subscriptions/713242251",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "22f7c918-17a4-4e2c-895e-9414fdbf364a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.673493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "delete-/webhooks/v3/{appId}/subscriptions/{subscriptionId}_archive"
        }
      }
    }
  }, {
    "id" : "baef7318-7ee9-41f6-8f9e-2197044658e2",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/865615530/subscriptions/batch/update",
      "method" : "POST"
    },
    "response" : {
      "status" : 207,
      "body" : "{\n  \"completedAt\" : \"2023-11-09T16:07:36.672Z\",\n  \"numErrors\" : 1724985684,\n  \"requestedAt\" : \"2022-05-02T08:15:00.672Z\",\n  \"startedAt\" : \"2022-04-13T00:41:36.672Z\",\n  \"links\" : { },\n  \"results\" : [ {\n    \"createdAt\" : \"2023-07-04T12:36:12.672Z\",\n    \"propertyName\" : \"Olympia Mertz DDS\",\n    \"active\" : true,\n    \"eventType\" : \"line_item.deletion\",\n    \"id\" : \"w4a8\",\n    \"updatedAt\" : \"2022-10-18T20:06:07.672Z\"\n  }, {\n    \"createdAt\" : \"2023-10-27T07:58:30.672Z\",\n    \"propertyName\" : \"Mrs. Riley Pouros\",\n    \"active\" : false,\n    \"eventType\" : \"contact.privacyDeletion\",\n    \"id\" : \"2368\",\n    \"updatedAt\" : \"2023-01-18T04:54:04.672Z\"\n  } ],\n  \"errors\" : [ {\n    \"subCategory\" : { },\n    \"context\" : { },\n    \"links\" : { },\n    \"id\" : \"18hp\",\n    \"category\" : {\n      \"httpStatus\" : \"GATEWAY_TIMEOUT\",\n      \"name\" : \"Joetta Powlowski\"\n    },\n    \"message\" : \"Officiis nostrum cumque. Quam cum nihil delectus. Eos minus aspernatur aut reiciendis itaque nihil eligendi. Quasi eaque qui.\",\n    \"errors\" : [ {\n      \"subCategory\" : \"8w76dze8q06pq41efs5fvanjfayx9l5zd5vf0ylxwbhfc26p0z42j3brhexn86o3zf6lkdrk35qns5o4kpmj5yxrfvrhqfqlx0yzqtm3oyv461vaq8xmikito58qxoc08\",\n      \"code\" : \"1w4pu360og2yty2k4vq1txrwc0bycpjpu9swrp08uvo0zrbxgoekzq0a6k27funu6nucx9h04eqwzawvav77a2e1ubfs9532v7fb3n50o2krglvzezimkbaz9sn5aw5es7cji7eh4m61\",\n      \"in\" : \"49kj82ndv\",\n      \"context\" : {\n        \"missingScopes\" : [ \"scope1\", \"scope2\" ]\n      },\n      \"message\" : \"Ex id consequatur. Sit laudantium amet quisquam adipisci veniam. Est ad consequuntur repellat molestiae itaque.\"\n    }, {\n      \"subCategory\" : \"yx3pj65t4vqjwmk8ve2j7p6fahlly3mg807uzuw0dzrhwtykjibswf5p61fhojy9gnmj2rui54s8czcr3hgqx9q32v0xe8r05dzkmuaxrpp0iceu6s232vf6j51rpubrf7fdgciszwdx04o4ge1x29a9f9tgdlox29du4sg\",\n      \"code\" : \"cpznrdd0f29qc0uscrwjdaeew28162a1pg92nv71kxvuuf5lkv8k3pd9xkieehs4iq18w5eo5m0tpn4q7453s4x4hzwpas43ju\",\n      \"in\" : \"kzqzd345q92ve6vghxom9jfjlafhm2s2ieskv3h2o8v9vmjrbbf6vzh5om5krpaxu45k4slrt3p3olcoihbj0ukqwc2xxoyxbb5urilyhwy4dx9ufkboe7hfg2x3\",\n      \"context\" : {\n        \"missingScopes\" : [ \"scope1\", \"scope2\" ]\n      },\n      \"message\" : \"Quaerat saepe corrupti. Qui suscipit perferendis reiciendis deserunt recusandae. Est ad aut consequuntur repellendus aut vitae. At ut quod dicta sapiente architecto.\"\n    } ],\n    \"status\" : \"onskreuh52wbd5y8cdfu8njqbv7j5xwpwkqqhf4vjcv6y5b1uq9jvu6r7acd6k49ei576x58t56klnr90a0pstkpvazovnpfpte6jh7hocudo5em22lzmv8wb191qngft544wbwoum2jcs0qikwyr2jc8tlrkovt33ls5fruz1zj9r6rvahd6s2u\"\n  }, {\n    \"subCategory\" : { },\n    \"context\" : { },\n    \"links\" : { },\n    \"id\" : \"e50a\",\n    \"category\" : {\n      \"httpStatus\" : \"LOCKED\",\n      \"name\" : \"Krystina Ferry\"\n    },\n    \"message\" : \"Temporibus sint consectetur expedita atque nihil totam ipsa. Nemo officia ad. Voluptatum voluptatibus deserunt sed harum. Debitis magni voluptatem laboriosam. Et beatae rerum dolore.\",\n    \"errors\" : [ {\n      \"subCategory\" : \"t5kaybwvhqkdev6o4hgoq0zyxsvr7b3mbgba5b96sz60dcuxbiabcfaizb\",\n      \"code\" : \"l0qmqxap7g\",\n      \"in\" : \"0zr21hg79llbc5m7q249978uty8bqaafz1jieu3a4w07jdomdhwrprfveu5d02excqnf6uk7eu71gmd816i8g9bc9x5c9h1wzkktwjchqq0d6h5hsgyw82glwbv2mksbkwh9x96xub2bqphjst93445hxfdxeeumr5tpzyj68spnf2dtf\",\n      \"context\" : {\n        \"missingScopes\" : [ \"scope1\", \"scope2\" ]\n      },\n      \"message\" : \"Non exercitationem harum quas quos aperiam. Enim voluptatem praesentium harum. Nobis nesciunt eos qui tempora suscipit.\"\n    }, {\n      \"subCategory\" : \"a8djcn4waxrapn49mn7236k0bbb8ysoigfy39ifkpsdxi4gfukhvvr7n3w00hr684vdnh26o3sec7mah2kmy1fft8xycrmoklbd6a6agsemo6rcl6enjpqfxah5xwa94sgw\",\n      \"code\" : \"5yy1dns43ri8ypdw2legyzhydsjomaztz662i3xpzt2yzziznik6eg3p06jpzqhknxsqe1c7fzucogujg9yc7dwedmcg5t4yq43ol1xdae0k2siw66bfd6224t9w28pw0b0w7k10d\",\n      \"in\" : \"zbxgb7rj1dijq0hwwmxrusfrpqoy7b2a2yr9wske2rj5k02ryqzwhemmeq6ngeoierbvbpltxb3mtp2f4xm8gmxrfnxl99kqi1x77tnx9tax76m7kb0oeghe04lar\",\n      \"context\" : {\n        \"missingScopes\" : [ \"scope1\", \"scope2\" ]\n      },\n      \"message\" : \"Alias reprehenderit qui qui nihil magni perferendis et. Neque nam laborum rem autem et ipsum. Omnis aperiam officiis sint eos laborum est. Quisquam repellat maxime ea repudiandae molestiae. Fugit quam\"\n    } ],\n    \"status\" : \"koiu4rgj975keixdksoxw7xpgxz0p9hfab5mzajtpjdem4wk1hpu0bxmer6vw1kmf158ikyva8e\"\n  } ],\n  \"status\" : \"PENDING\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "baef7318-7ee9-41f6-8f9e-2197044658e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.673447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "post-/webhooks/v3/{appId}/subscriptions/batch/update_updateBatch",
          "schema" : {
            "properties" : {
              "completedAt" : {
                "format" : "date-time",
                "type" : "string"
              },
              "errors" : {
                "items" : {
                  "$ref" : "#/components/schemas/StandardError"
                },
                "type" : "array"
              },
              "links" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "type" : "object"
              },
              "numErrors" : {
                "format" : "int32",
                "type" : "integer"
              },
              "requestedAt" : {
                "format" : "date-time",
                "type" : "string"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                },
                "type" : "array"
              },
              "startedAt" : {
                "format" : "date-time",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ],
                "type" : "string"
              }
            },
            "required" : [ "completedAt", "results", "startedAt", "status" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c1c8e99c-d988-4c3f-94dc-a73101ed7fb8",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/791931942/subscriptions/batch/update",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"completedAt\" : \"2023-10-11T08:02:00.671Z\",\n  \"requestedAt\" : \"2022-08-12T04:25:59.671Z\",\n  \"startedAt\" : \"2022-12-08T02:38:13.671Z\",\n  \"links\" : { },\n  \"results\" : [ {\n    \"createdAt\" : \"2023-02-27T02:27:12.671Z\",\n    \"propertyName\" : \"Ernest Breitenberg\",\n    \"active\" : true,\n    \"eventType\" : \"ticket.propertyChange\",\n    \"id\" : \"3od6\",\n    \"updatedAt\" : \"2024-01-11T20:01:56.672Z\"\n  }, {\n    \"createdAt\" : \"2022-03-28T14:58:24.672Z\",\n    \"propertyName\" : \"Leonardo Brakus\",\n    \"active\" : false,\n    \"eventType\" : \"product.creation\",\n    \"id\" : \"wc2q\",\n    \"updatedAt\" : \"2022-03-15T14:55:39.672Z\"\n  } ],\n  \"status\" : \"CANCELED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1c8e99c-d988-4c3f-94dc-a73101ed7fb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.672275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "post-/webhooks/v3/{appId}/subscriptions/batch/update_updateBatch",
          "schema" : {
            "properties" : {
              "completedAt" : {
                "format" : "date-time",
                "type" : "string"
              },
              "links" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "type" : "object"
              },
              "requestedAt" : {
                "format" : "date-time",
                "type" : "string"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                },
                "type" : "array"
              },
              "startedAt" : {
                "format" : "date-time",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "PENDING", "PROCESSING", "CANCELED", "COMPLETE" ],
                "type" : "string"
              }
            },
            "required" : [ "completedAt", "results", "startedAt", "status" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9c3b73a-9e48-4e33-8c84-e9ef6b402bee",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/250034352/subscriptions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"createdAt\" : \"2023-04-22T04:56:34.671Z\",\n  \"propertyName\" : \"Marlon Franecki\",\n  \"active\" : true,\n  \"eventType\" : \"conversation.creation\",\n  \"id\" : \"580s\",\n  \"updatedAt\" : \"2022-08-03T14:25:07.671Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9c3b73a-9e48-4e33-8c84-e9ef6b402bee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.671871Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "post-/webhooks/v3/{appId}/subscriptions_create",
          "schema" : {
            "description" : "Complete details for an event subscription.",
            "properties" : {
              "active" : {
                "description" : "Determines if the subscription is active or paused.",
                "type" : "boolean"
              },
              "createdAt" : {
                "description" : "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              },
              "eventType" : {
                "description" : "Type of event to listen for. Can be one of `create`, `delete`, `deletedForPrivacy`, or `propertyChange`.",
                "enum" : [ "contact.propertyChange", "company.propertyChange", "deal.propertyChange", "ticket.propertyChange", "product.propertyChange", "line_item.propertyChange", "contact.creation", "contact.deletion", "contact.privacyDeletion", "company.creation", "company.deletion", "deal.creation", "deal.deletion", "ticket.creation", "ticket.deletion", "product.creation", "product.deletion", "line_item.creation", "line_item.deletion", "conversation.creation", "conversation.deletion", "conversation.newMessage", "conversation.privacyDeletion", "conversation.propertyChange" ],
                "type" : "string"
              },
              "id" : {
                "description" : "The unique ID of the subscription.",
                "type" : "string"
              },
              "propertyName" : {
                "description" : "The internal name of the property being monitored for changes. Only applies when `eventType` is `propertyChange`.",
                "type" : "string"
              },
              "updatedAt" : {
                "description" : "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              }
            },
            "required" : [ "active", "createdAt", "eventType", "id" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "874ef8c9-af02-44f6-85cb-269d3016415e",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/232792375/subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"results\" : [ {\n    \"createdAt\" : \"2022-05-05T03:13:05.67Z\",\n    \"propertyName\" : \"Alane Kuvalis\",\n    \"active\" : false,\n    \"eventType\" : \"line_item.creation\",\n    \"id\" : \"z72e\",\n    \"updatedAt\" : \"2022-03-05T01:35:58.67Z\"\n  }, {\n    \"createdAt\" : \"2023-09-14T16:49:36.67Z\",\n    \"propertyName\" : \"Amber Schimmel\",\n    \"active\" : false,\n    \"eventType\" : \"line_item.deletion\",\n    \"id\" : \"ww71\",\n    \"updatedAt\" : \"2022-10-17T17:08:17.671Z\"\n  }, {\n    \"createdAt\" : \"2022-09-25T11:22:34.671Z\",\n    \"propertyName\" : \"Iluminada Kassulke\",\n    \"active\" : true,\n    \"eventType\" : \"ticket.deletion\",\n    \"id\" : \"qpll\",\n    \"updatedAt\" : \"2022-07-18T16:11:08.671Z\"\n  }, {\n    \"createdAt\" : \"2023-07-26T18:59:34.671Z\",\n    \"propertyName\" : \"Dr. Earle Sporer\",\n    \"active\" : true,\n    \"eventType\" : \"company.propertyChange\",\n    \"id\" : \"jqkz\",\n    \"updatedAt\" : \"2023-06-18T13:21:17.671Z\"\n  }, {\n    \"createdAt\" : \"2022-09-06T03:46:45.671Z\",\n    \"propertyName\" : \"Stewart Fisher\",\n    \"active\" : true,\n    \"eventType\" : \"contact.creation\",\n    \"id\" : \"1h7h\",\n    \"updatedAt\" : \"2022-07-24T18:08:04.671Z\"\n  }, {\n    \"createdAt\" : \"2022-09-28T03:33:26.671Z\",\n    \"propertyName\" : \"Mrs. Jerome Bergstrom\",\n    \"active\" : true,\n    \"eventType\" : \"line_item.propertyChange\",\n    \"id\" : \"181g\",\n    \"updatedAt\" : \"2022-10-15T19:32:29.671Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "874ef8c9-af02-44f6-85cb-269d3016415e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.671618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get-/webhooks/v3/{appId}/subscriptions_getAll",
          "schema" : {
            "description" : "List of event subscriptions for your app",
            "properties" : {
              "results" : {
                "description" : "List of event subscriptions for your app",
                "items" : {
                  "$ref" : "#/components/schemas/SubscriptionResponse"
                },
                "type" : "array"
              }
            },
            "required" : [ "results" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f12af0a3-d336-46dc-915a-97f02a62e2a5",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/1662908862/settings",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdAt\" : \"2020-01-24T16:27:59Z\",\n  \"targetUrl\" : \"https://www.example.com/hubspot/target\",\n  \"throttling\" : {\n    \"maxConcurrentRequests\" : 10,\n    \"period\" : \"SECONDLY\"\n  },\n  \"updatedAt\" : \"2020-01-24T16:32:43Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f12af0a3-d336-46dc-915a-97f02a62e2a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.670561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "put-/webhooks/v3/{appId}/settings_configure",
          "schema" : {
            "description" : "Webhook settings for an app.",
            "example" : {
              "createdAt" : "2020-01-24T16:27:59Z",
              "targetUrl" : "https://www.example.com/hubspot/target",
              "throttling" : {
                "maxConcurrentRequests" : 10,
                "period" : "SECONDLY"
              },
              "updatedAt" : "2020-01-24T16:32:43Z"
            },
            "properties" : {
              "createdAt" : {
                "description" : "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              },
              "targetUrl" : {
                "description" : "A publicly available URL for Hubspot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads.",
                "type" : "string"
              },
              "throttling" : {
                "$ref" : "#/components/schemas/ThrottlingSettings"
              },
              "updatedAt" : {
                "description" : "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              }
            },
            "required" : [ "createdAt", "targetUrl", "throttling" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bcaac39f-7b16-4ac3-ba9e-4901b04ce2dd",
    "name" : "",
    "request" : {
      "urlPath" : "/webhooks/v3/915170329/settings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createdAt\" : \"2020-01-24T16:27:59Z\",\n  \"targetUrl\" : \"https://www.example.com/hubspot/target\",\n  \"throttling\" : {\n    \"maxConcurrentRequests\" : 10,\n    \"period\" : \"SECONDLY\"\n  },\n  \"updatedAt\" : \"2020-01-24T16:32:43Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcaac39f-7b16-4ac3-ba9e-4901b04ce2dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.670486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get-/webhooks/v3/{appId}/settings_getAll",
          "schema" : {
            "description" : "Webhook settings for an app.",
            "example" : {
              "createdAt" : "2020-01-24T16:27:59Z",
              "targetUrl" : "https://www.example.com/hubspot/target",
              "throttling" : {
                "maxConcurrentRequests" : 10,
                "period" : "SECONDLY"
              },
              "updatedAt" : "2020-01-24T16:32:43Z"
            },
            "properties" : {
              "createdAt" : {
                "description" : "When this subscription was created. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              },
              "targetUrl" : {
                "description" : "A publicly available URL for Hubspot to call where event payloads will be delivered. See [link-so-some-doc](#) for details about the format of these event payloads.",
                "type" : "string"
              },
              "throttling" : {
                "$ref" : "#/components/schemas/ThrottlingSettings"
              },
              "updatedAt" : {
                "description" : "When this subscription was last updated. Formatted as milliseconds from the [Unix epoch](#).",
                "format" : "date-time",
                "type" : "string"
              }
            },
            "required" : [ "createdAt", "targetUrl", "throttling" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e14e9b1-8e92-418d-900d-acb76bc94920",
    "request" : {
      "urlPath" : "/webhooks/v3/262873276/settings",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9e14e9b1-8e92-418d-900d-acb76bc94920",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:45.670324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "delete-/webhooks/v3/{appId}/settings_clear"
        }
      }
    }
  } ]
}