{
  "mappings" : [ {
    "id" : "7b5961e8-a621-43b2-9737-5db96053b4b3",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Non ut aut sint. Facere eaque dolor voluptatem dicta ut qui sapiente. Omnis saepe voluptas odit asperiores sequi labore. Eum quisquam veniam cupiditate quam in dolor. Et fugiat a dolor amet dolores si\",\n  \"error\" : \"mc7ok4qe28z699w3rm92cca2eo4sd3bspwqjhimv24s16slmjkdmykxuwk38j9n04x8paklb8i2t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b5961e8-a621-43b2-9737-5db96053b4b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.406683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "488e1012-e1c0-4151-96ea-8051c0f6c202",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Aliquid qui labore. Aut eos ut at asperiores. Minima sunt quas at fuga.\",\n  \"error\" : \"g1q6bz33ty73il5p5544duz88xnajqmdd107lyldqq1gtdwdhyrk8q9uq5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "488e1012-e1c0-4151-96ea-8051c0f6c202",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.406579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f4704b1c-1a24-470e-9366-fe5a2c7192ec",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Sint non et minima rerum est. Incidunt magnam pariatur officiis voluptas rerum. Voluptatibus sapiente earum qui dolorem.\",\n  \"error\" : \"vm7jxx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4704b1c-1a24-470e-9366-fe5a2c7192ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.406486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92ebba8b-ba7e-4ef6-a49e-6bcc6373f012",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92ebba8b-ba7e-4ef6-a49e-6bcc6373f012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.406379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8696662d-fff8-4bf0-8cbb-15b3af1261fd",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8696662d-fff8-4bf0-8cbb-15b3af1261fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "62a60cc2-dfbd-4e9b-b1b8-faa620ee9d32",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62a60cc2-dfbd-4e9b-b1b8-faa620ee9d32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7cd2366a-3b04-4ea5-85d0-334a0a5ee55a",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Nobis vitae iure odio. Rem dolor qui quae quibusdam. Velit voluptate debitis ut libero.\",\n  \"error\" : \"tsjhxcl2etvtyxbpv138ltc1gykgudvlybe9gnxz75cnyb98bpca7znofo5tjs789ifelax29q7bccw68h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cd2366a-3b04-4ea5-85d0-334a0a5ee55a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0d89bc8a-f18e-4d82-982d-6588eafff82f",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d89bc8a-f18e-4d82-982d-6588eafff82f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "fc621787-f5a5-40d4-ade1-5b7900a1502c",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc621787-f5a5-40d4-ade1-5b7900a1502c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d681c1b4-47cd-481d-bc98-9e8f809cdc4c",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d681c1b4-47cd-481d-bc98-9e8f809cdc4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8fd24c3f-ffbd-4d40-9a10-8a8d16cfcad4",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Quibusdam illo sunt blanditiis est illo et. Debitis corrupti non eum ut. Est ut ex in ut qui nihil unde. Ut facilis voluptatibus velit occaecati quia.\",\n  \"error\" : \"n6tzogluetxxtbhvx4bij9uu33man9vcj401w8jevgamd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fd24c3f-ffbd-4d40-9a10-8a8d16cfcad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "92acff48-6035-4e5c-ac87-2f4f7846c6d7",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92acff48-6035-4e5c-ac87-2f4f7846c6d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "51434af1-b289-4254-9b9f-1a3362e1ae18",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Molestiae enim pariatur eius alias. Consectetur molestias voluptatem. Magnam maxime cumque quos est animi architecto id. Incidunt excepturi et. Aut velit asperiores enim voluptatem minus laborum.\",\n  \"error\" : \"c3xkm3892g2v7riyhkf2t3ip5fs9ztvp8mw0tu3na9qks4bj15iyldkxoi6vv91xx2rcsjsn4v03ock2f5zz6dukt1o00lmop7b8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51434af1-b289-4254-9b9f-1a3362e1ae18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "b9b55efb-02c4-422a-9137-3c9b41524171",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Voluptatem repudiandae voluptatibus nobis. Impedit officia qui et ut quos odit. Enim quae eos. Et aut ut autem minima similique debitis est. Nobis provident quidem deserunt nulla eos earum quod.\",\n  \"error\" : \"mv50zbajxko1ozznfj3z6gsrj9ffhab6o6v14tqucedoydlwnf6bikcv6pt14enxqw8eqoolg10fckx6rhfplj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9b55efb-02c4-422a-9137-3c9b41524171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "c29fb1b2-7b94-45ba-976e-7bbb93c43c73",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c29fb1b2-7b94-45ba-976e-7bbb93c43c73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "738d3fc9-3480-446e-92d6-845ae820e647",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "738d3fc9-3480-446e-92d6-845ae820e647",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.405001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e6dd6207-33b1-4ce5-b778-70a241503f2c",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"25z3utpz68ti0l9t7q574h35m45l26c4e9d\",\n    \"Rar\" : \"33g2zfbky3x2g0o6ql30b8b3w70rch0plf8ffb0aacycie3kj12ij5phirer9rgbrrzy8dasb2bfvptzeun0mw4tyzjqe8c73bi5aemqjsl7m5pq92d89l3ew6zns8i7nrd7f804c87qobxem4syk9l\",\n    \"code\" : \"yuugj7hnwe6i0hrhdt5dg91zg1amdlngyu8iqjnfgqxw9ifhj5z14mjfe8zmq3yqr1f99y3a4xpv7y33dgwakgrusgjk3fs8nub2awq5bvrq0\",\n    \"Signature\" : {\n      \"xmlns\" : \"eqgqjw8u1ajd2jmp7gjmbwri64pfhsxav2jz9e47zoqegm\",\n      \"SignatureValue\" : \"4f3cxka9erj0v9dkw90fuazeog61dyncwaq44u4pb88tuh\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Ricky Abernathy\",\n          \"X509Certificate\" : \"0u35g6jb57k7ewo3iuzbuwchqyzrcymga8p8hve3e7nsll7ji98k8ctelw5tct8odqmofg369qpkbq1g\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"97nifts1x5x9ppe7kflc1ugvqh3p4yfbrnibxxywbwhc5c7rcpcyrnzub68kd71qxhurkue0j707v8025crpka1g3c905xolry4fft85gyd2bnbm9oxtr5wpigffhmcc6yghwkkwul094g1achzam27a4q9nkwew04wl55jw27m3rg\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"n8htsznnt4q127s936xlmbovucet4wnpt1lcae5x3j558nshv6sjg5tqbwoq6intrkk190tiks7ro085elv51s6nnz2blbgojg5wh1c0ukbk663zf\"\n          },\n          \"DigestValue\" : \"x92zeguzu80redq0itgh3ndak1px\",\n          \"URI\" : \"https://web.example.mocklab.io/864207\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"ede5f3sm6ds06qc4gxykp9xyo38qi1p503e4wxowhb4c1u3mkwc3vn2lrv5ud9rf3t48xc5g5\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"o3u5dhbwkwyfsdo47ky0dzamex3em43u4wfsagcshk1steoawsruja5164uvqen0gbuue6ialvoaaf64nj1c12ms9s5p0uosk0nac50s715nabqrwmmk4bz6jweibz4icm2mojoi2q68xqzag9gxfr25zeo0313rvf7hj3nnepydw\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"k799\",\n      \"Poa\" : {\n        \"country\" : \"Chile\",\n        \"lm\" : \"zxizsod05v2cqfmlmc3qqwulj5tkwn7aepl4nadt28fid51mbazih5vtjqbgsakl91vpc6woapgdvahkb10h06w9wt6v1yvp7oouv92mwwztsug86pt9n\",\n        \"loc\" : \"2heeporo6339tb8jhl8vup19zj7xusoirbem2wt9\",\n        \"pc\" : \"64qz4b4eouk8mkl0j15s260a8jmjp9uj8zc75br49l4gqjqte1jy3yz6two6z0j3016x6b07up5uwwvtgc28ajbqi56xd3lgichj4vz3tf4vbizoif0cgnrd58u43tgy52f738mi410l4lftpt50ou87gdangrer\",\n        \"vtc\" : \"4lpzia2k431ggbqej6tdxo7zz98rqlxyvgqn\",\n        \"dist\" : \"ylvl6odbbvmbgcoognyuw2sswuacezv26ty35d0\",\n        \"state\" : \"New Jersey\",\n        \"co\" : \"qtdowh7yy61xe2pytr80esa5g31rgxhs139wbine0l6ay6tie35n6gsrd\"\n      },\n      \"tkn\" : \"9re0d5omz1w6q57czajspww9lt3a5fopx6wwnczzjtk4w0ns1n7a1raw6rqfo7ng3ab2echmvf9xdplmgnugx9i52la90uccz3f67ujwfu594gnlsl4vcv3q7zuo028qjowk99tt3s6cq65jxnt56c2ryxjgkfe9a6m7pxyomvqmi\",\n      \"LData\" : {\n        \"country\" : \"Micronesia (Federated States of)\",\n        \"lm\" : \"mg50il535ggoyuiykvblyidahgr1bxjm1jwnsfmneoaw53hw6h2y43hgqnc5zmo5xuosmi64kcikr5e5m549evnrvl0q1d4qegoc70eb01wva8mvcickqd2032\",\n        \"loc\" : \"6skb69woqvky2msq\",\n        \"pc\" : \"n7k5lghjc8j07i6fku5yhzzg2vumd17aeszcaay4ccmxf5vw8v6ovlk6srqv9c4pvirbng6xat03ceoequ7d4e9bj632cfrklcx2sxz6z85d79ny5bsfe2j\",\n        \"vtc\" : \"m3thz8a08x7\",\n        \"name\" : \"Miss Virgie Collier\",\n        \"dist\" : \"rl9cap3t\",\n        \"state\" : \"Texas\",\n        \"co\" : \"nn4a71z3gtczj79r3voh5f3fhr9fx924lb20o6eg680hbenvhsc3m18ju5q3seb0jj1wr2tluw7mfplw1jrehpq1e920ldz3q25fmzkkv9b8yxfdk896hsu06nj35r1k21p1oki7vb91mv2vie5r2szkdgc\",\n        \"lang\" : \"irg8sf5wt6ltdkvj19xcgijrzo25nicdbph3lv283m2uq7q4d4jecpvn5r1akvmnja\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Genderqueer\",\n        \"dob\" : \"1990-08-25\",\n        \"name\" : \"Shaunda Kling\"\n      },\n      \"Pht\" : \"mzcx3lt6qu5o0lz3pvfmr49xaoivyza7ta7b8ub0sazhic2fl19aoyjsgkgnbo6tj59uuylbzzvx7glk2p2o1ue31uynd8h342g5qmgyj8\",\n      \"Prn\" : {\n        \"text\" : \"080570beqlh505v6x9mw07w17j0ekaov63cyeigao62ce7ilbhza24etu5j9a189613qw39oq1ozxnhniem96xvpz0xyj1t95bzmikefjnzrcn7cupry21jpu6bp5ps9bny1z8o58xc7j56xfcit8c0l6qjfmqv\",\n        \"type\" : \"rns67yhizmuakupnmp67l6tylpnepodb8y50dne2qyjmgvgz282evi8m1qakg223cap5hbx2dot\"\n      }\n    },\n    \"txn\" : \"w0mi3f6tz9stydsnbo36duq8l03y6749ch67krxpsvdecr1\",\n    \"ttl\" : \"qkzf7wvrfte88ge7we8k8sawnixewb7yryuaa05v5ahs54weake5oe0um66mmaeyt5zpk3tsq6ltlm94z6331nmkqj796bm8\",\n    \"ts\" : \"0bzhbov5all80i84tpp7u3x6r64pe239ly7qiuh8m17678de41tgri1yz4vlt4zmv6o8f7p1i5z0iux7b6dvezyu0i23s9k0kbrxvwrtdfubg2wkadwv466iaxp8mgawfy\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "e6dd6207-33b1-4ce5-b778-70a241503f2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.404883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec1ae1ca-68a2-4e43-bad3-84db88cb1ee1",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Consectetur rem nobis consequuntur rem. Ab corrupti omnis. Et placeat reprehenderit consequatur dolorum. Aut necessitatibus officiis veniam adipisci quasi qui temporibus. Sint velit reprehenderit qui \",\n  \"error\" : \"xeszffjpya7j2l8n4zuwre3c5yii1n6gx3xq4404lt4rwbboz85q28a2gpx459054qvcyyj6qwzr4rhe56v98iujbp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec1ae1ca-68a2-4e43-bad3-84db88cb1ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.403187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ed81d9a0-75d1-4d13-bb81-17a1ecad8a42",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed81d9a0-75d1-4d13-bb81-17a1ecad8a42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.403089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e21115b7-2c06-4b2a-9e65-5b4e2b3a4d54",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"tqstj1danlc2gcmiagslg8spb4wfan78ar1w0\",\n  \"items\" : [ {\n    \"date\" : \"2022-09-30T16:02:19.400744Z\",\n    \"doctype\" : \"tq29vlpyz3woq8tqd2pzcx2uzdyou3xrrenzdpmr1fpxk61e3sjg30h29iqcajwd50faaos4z9xxags7iara7pz19bqd9t7i2z8nr4mp2eifuodd6wirhwfajkt7inebb02unkun9xwlq9blcd81t671s709iwdfe7wvwsv1038lrfgaf6ou39\",\n    \"issuerid\" : \"504j\",\n    \"parent\" : \"rd0fmrx6ht812v265b3k8n9zsayl22xfi1pmt73xv01prf58kuxfe52f66cvrkgx55pakk0sa0zbu6t8gv8ez79urupagm6agko9nw2nlgxk6wy4nh51ul6b239adpbbzqzxfl3i6g7nwp8lfdq7sed\",\n    \"size\" : \"wzj8q7qy5i8mvpaeorg161eg4214rxi2erw76jzzeopy2no6ryzwagqyl6l6z44ixi5czm7g4r3wujvg3mzc5fvf98ixdrpmgs96wvb1syyh4ujet7wqaana0ti9jbtkqtgaux7vw54t843it6\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Kory Brakus\",\n    \"description\" : \"Repellat aut consequatur ut rerum facilis. Assumenda est ea necessitatibus dolorem sed. Dignissimos voluptatem et soluta et blanditiis quos. Alias temporibus voluptatum incidunt.\",\n    \"type\" : \"ifwis95glsu6gouypiuxmzzkv3lchuuhk9zqpoduvbykuzngi4q8uilhgyu37vuw8g5o6wbvxmh0cvkqv3bxs4wv0d4dy84usjla25kv3wn16q01mu8h\",\n    \"uri\" : \"https://web.example.mocklab.io/966629\",\n    \"issuer\" : \"b352oxq561cp1crh2zkwq4d33ha\"\n  }, {\n    \"date\" : \"2022-04-08T15:30:19.401081Z\",\n    \"doctype\" : \"bt61hmnyqsv4ok4gtkrqhuivaymu8rtbbjh4c2duwxekkxibuex25twl0i3mya4bma6ruhdvolud5m75n3qdm27rc605dzgwbvgqmkib4rh7osjr54ylfw455fiei\",\n    \"issuerid\" : \"f920\",\n    \"parent\" : \"g0ox6cip8tdew5d15ubhatxtta09yyrz5h9bsnr4y7uyiqdw43smzzpt7wucp7gsmzz4h6kqdq0l0lijd54kxzu69d9x3bo24zi494jrf9ks206i85jzk2l8mwggqzvw6cm74j3r5tq30s86jzs3key4r6ickl8fxcqsj6p2\",\n    \"size\" : \"y5qdz0lienvr50i86su8dlu1jbc1p83exk8sgta4kr3xh81j73pbyzz2rcvrnxs8v58hb7szziqgjj5oe3cu78zxxaf9eb2uv\",\n    \"mime\" : [ { }, { }, { }, { }, { } ],\n    \"name\" : \"Ta Larkin I\",\n    \"description\" : \"Est dicta temporibus autem. Eos blanditiis fugit explicabo voluptatem est molestiae animi. Libero necessitatibus qui enim dolor.\",\n    \"type\" : \"fe0l3ta1zcduqwcf2c4zkd9qyan\",\n    \"uri\" : \"https://web.example.mocklab.io/165306\",\n    \"issuer\" : \"9i4owc89t1ph434313y8ll25b9yrbm2oz5xquqopjix0qo9wy9ufzj90qzc0or05srl0it7ghsxb3mpa0to098sg0ncjuki14q9x3srob0ireanxbbvqazq\"\n  }, {\n    \"date\" : \"2022-09-23T17:02:19.401371Z\",\n    \"doctype\" : \"71x592r240pbabqtebov9l8q4zvxconbsrvnlb79n73trzu4h3n35q1xbxxmw2cuwi3865v37hd\",\n    \"issuerid\" : \"v4x4\",\n    \"parent\" : \"fvrho3v8nh55myxuwvqh6zbj3boqtbdbqo6isgfpvqn5wu55sdmtviyy9u9rjii4tzcsvrxryvpyqu7lrnnydn03y2l4ug34xlhyli\",\n    \"size\" : \"o7d72wnaveaapkwdtjx48xvak0254zipesyrladdjf6wzz8fk48ug9djspvpqgs3vhscq8bojd94l3hod2f6zudaes5dg8p\",\n    \"mime\" : [ { }, { } ],\n    \"name\" : \"Loma Roob\",\n    \"description\" : \"Odio et aut omnis dolores hic modi. Beatae doloremque distinctio. Magnam ea eius sit. Eos quis maiores voluptatem et doloremque numquam eum.\",\n    \"type\" : \"n67ia1qpkwr467a\",\n    \"uri\" : \"https://web.example.mocklab.io/429630\",\n    \"issuer\" : \"4akc19e4no43yh5xefzkg8ma62a5fdxzv011hs9g3yiueoafsyakyz91n7hfopgh5230y1srr6jpdu9e3skw4i2lzo3np22dq9ia5b7xyoxymlz36hl7t0gyosuvrqneypm95qyli0qmloj1rdprh972jwdd1big41zqeisr\"\n  }, {\n    \"date\" : \"2022-04-06T15:09:19.401667Z\",\n    \"doctype\" : \"lxzip35zxh1y6mug2zkoc2sauk5aesbguxee7b25ui8wrgtpug7m72g9rkgtp8rlr4vf5nvqczpgtz7jtzaixustvkvr3en5gkljvlvdfyz5sd395gwtorcup7q8cxk61n31qacouycrciiesno27h7nep\",\n    \"issuerid\" : \"5zc6\",\n    \"parent\" : \"3fekkzgvgjwnybeqpazaq8t5ol1i4p5wvw937213p7mt29z5nufe4muea6ge26pumihld3j7u2wc9ujx031v3bpx34kw05o5dy0el7mqc086kn3ujvqm9qsdjv9w0pjw4j5i70x4vhzd63q37v794s\",\n    \"size\" : \"yxrfio1zzmdoe74f8e2ayboc3fole0n00ddp3ztxbhjpqqzjx9f1pvhso10c3xmldq\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Rosemary Thompson\",\n    \"description\" : \"Itaque praesentium ullam ut maxime blanditiis recusandae. Ipsa nesciunt et. Modi quia veritatis temporibus voluptatibus.\",\n    \"type\" : \"wkpza\",\n    \"uri\" : \"https://web.example.mocklab.io/838942\",\n    \"issuer\" : \"ojm4a4\"\n  }, {\n    \"date\" : \"2023-02-05T17:55:19.401955Z\",\n    \"doctype\" : \"dd425n6r3jb9y29r44gwwbf70i071i9o5cis31nbr2xudr5q809pcs0q56r\",\n    \"issuerid\" : \"y0me\",\n    \"parent\" : \"gmrzna8xoqh1h3drpto8y35oajixg9iynfvo69v9eayylnq3f7bved3qxqpo67yeizl8pp8qmq50qiaewueg2dszrzx98kwja5da5r8wvtypp7qab\",\n    \"size\" : \"v622hsx4kaijclt1hwmuyhjsxhcbrhujcam3s71k11x7\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Georgeanna Schmeler\",\n    \"description\" : \"Ut deleniti autem a velit. Illum voluptatibus dolor molestiae et vero fuga. Voluptatem ad necessitatibus qui labore. Nemo et ut voluptas et possimus.\",\n    \"type\" : \"2nyvfcq2tcbvtuszo48p8o65gobsxlkvohjxg5tssymo6ywah3p8tr5bhr1zce3fx7qnx0lmv1oi0j2sh1rqf2i\",\n    \"uri\" : \"https://web.example.mocklab.io/156446\",\n    \"issuer\" : \"5guxc6hnescvz0h5wuyrjs7ovf5ya6rxpu0sqt5z55h471b1u0s6amnnmzqgirzskgjlvgaao6il5wucvbfygmaf1ivgvrr959x9muck571dtm33sia703zbyiyd7pqr84q3l3zpm4d8qpya6jdn7aw1k1zv6emj1\"\n  }, {\n    \"date\" : \"2023-01-03T17:38:19.402245Z\",\n    \"doctype\" : \"j9d1tayjhih1iwk3vt40y2bq0rxidyhm0tqi1q7xbcs56gve1ocn0l901b63hp5usuu36wxo8t8mjv5wgalstfw5\",\n    \"issuerid\" : \"hvf7\",\n    \"parent\" : \"4pm91gfscur834stim3\",\n    \"size\" : \"cwc5sdgzehkl2kiwp7czagptneyiqmnh6m2vz4v89wpjuulom61jdao84echkvpjg26lqaa5pp21qz2muo1vw01osm0afmasu8kh6xrlq12fqws3nzuo7y11r31akynkbg5ltzj944xwcggeylf3ztow0pzjiz3uxi7bbn9srer2jrqdf78y7j\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Lonny Ruecker III\",\n    \"description\" : \"Nisi quos quia adipisci delectus est dolores impedit. Nostrum quia voluptates perspiciatis est quia consectetur sint. In facilis pariatur aut unde occaecati consequatur.\",\n    \"type\" : \"rluy0goqfk1vj3flgzvpc3pa32dubvbk1w2tjhg1nypkytuzvbbur5\",\n    \"uri\" : \"https://web.example.mocklab.io/635814\",\n    \"issuer\" : \"6dtkha9i1gh7h3vym2wiu0s4kebxzi89dnxo5r\"\n  }, {\n    \"date\" : \"2023-02-28T15:06:19.402535Z\",\n    \"doctype\" : \"z9izygnum1cnxjzf8b5jccf7bwyztvlx1br6w11rwatq1id3drnta0i\",\n    \"issuerid\" : \"a9la\",\n    \"parent\" : \"ydvdhhnns7bjhfcca6m4h7qfj9plhmmsn65xihgyyyph5jqb82ej4nx079ked3r627govdxaa7mvqm0t5lqssdfvt0c600s3uwq41ff1hxym5y5nhe23j7eoqbl93dh0cvhrmialnl9q09ur2uq0088wh1nb8a84g16i3h96vame55xk60tqvfd2oya8d3wb90thpm\",\n    \"size\" : \"3h5qfvwacsbba48nr0gkwvekupyxwe7u7i5t51vw7qt0exht5edkeq9km8oyf9mk51k1dmgryjzbdi4u573mnxh75cjkq9uui9ia54islrgc2yie4zyj84bm9odhmln32zjk35etz46f18ebpvizkbd3v5sil7c6wyvb\",\n    \"mime\" : [ { }, { }, { }, { } ],\n    \"name\" : \"Ara Schultz V\",\n    \"description\" : \"Animi vitae consequatur sapiente laboriosam. Mollitia et repudiandae vel enim et. Est reiciendis nemo adipisci et illo odio. Sunt aliquid fuga vel dolorem qui temporibus non. Debitis ullam accusamus.\",\n    \"type\" : \"2vrmyfs752hn5ddar7w0gvzcxljf2qfb3v5\",\n    \"uri\" : \"https://web.example.mocklab.io/417315\",\n    \"issuer\" : \"v58irmoctkvkxn38hny1zfyhlnvnrx82uq3sov34xb1z5vbkjlyvu0a6j0s3kajag2ozkw1a2vuzwhr9n4lnuas5zrpdilm1ixb2p58w3b1dq3psklkiuy43mlzvlz4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e21115b7-2c06-4b2a-9e65-5b4e2b3a4d54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.40301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "91788f61-c3ad-4ebe-b4dc-da1f96a2c832",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F294163",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Laudantium corporis occaecati fugit. Inventore tempora perferendis distinctio rem placeat et ea. Non fugit et magni repudiandae omnis. Dolorem numquam officiis ea nisi aliquam veritatis iste.\",\n  \"error\" : \"m74upd7nnoxqpuxj5xunsp8vg6i6tq9zqv2ro770ax2k7xzqzy5danp8rv05ol2eu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91788f61-c3ad-4ebe-b4dc-da1f96a2c832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.400665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "b699b8bd-9c55-4620-9b2f-6fd89dabac30",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F929285",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Illo quibusdam repellendus. Temporibus facilis qui dolore voluptatem ipsum rerum qui. Quidem vel pariatur sed.\",\n  \"error\" : \"5sli6ig2ekhc3f71aqh7a5wzttf46shulgj4gzplat7pidt0aj33xj16wb7r5n9a6ia4emjdlx20ybktdvlezhc57zvbbs56ouq0ncwn5gw1ewd174lhlcg36j4b7ab3otc6oslq4rl9koqsg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b699b8bd-9c55-4620-9b2f-6fd89dabac30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.400522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "40e1f74c-c01c-451e-8086-648bd695e995",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F066047",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40e1f74c-c01c-451e-8086-648bd695e995",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.400373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "11c6ab20-7be4-48e5-965a-d643d1c04f09",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F925350",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11c6ab20-7be4-48e5-965a-d643d1c04f09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.400255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae9b2f6e-344a-4a89-a8fa-deabfd339f67",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F626134",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae9b2f6e-344a-4a89-a8fa-deabfd339f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.400139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ad31843-3858-4346-a30e-600cb6daafea",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F161200",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "8ad31843-3858-4346-a30e-600cb6daafea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.400018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7022a390-3ff0-4fc3-b036-ca7543f302ee",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7022a390-3ff0-4fc3-b036-ca7543f302ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7bd3461e-a2f7-43b3-8630-7da7e0e02223",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bd3461e-a2f7-43b3-8630-7da7e0e02223",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8bab93d4-7e0e-4096-9e79-fe884b608ae5",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"F\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"Y\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bab93d4-7e0e-4096-9e79-fe884b608ae5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "3ba3742d-03fd-4a93-8887-ffa4b07651b5",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3ba3742d-03fd-4a93-8887-ffa4b07651b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "ff3fce29-eb7a-470f-aa69-406446006608",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ff3fce29-eb7a-470f-aa69-406446006608",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "b24fb450-291a-4c47-8939-2e3e791dd023",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"F\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"wr1k3ra26sbgfn1d6ks67q8j1no1nq86pae8gp9hebjpouuya6ekny15ntjgeo12l9yev56mmzz067cn43xjotu2snx4ftqki8p6y9bip06xb2uity0xtfd44sz8d746o0qzrm6zoqtmknx5kj8ars4yk1spq8ee9cai33m25pcgp2ma6m57ewis30urk98aoglif\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b24fb450-291a-4c47-8939-2e3e791dd023",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9247f478-050d-43a9-a3bd-e10b590cf9e1",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9247f478-050d-43a9-a3bd-e10b590cf9e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "bd359e5c-5f2d-4515-bd2e-602db42379b7",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bd359e5c-5f2d-4515-bd2e-602db42379b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "c95ad149-ae9b-4e29-b915-57ad3c59a1d8",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Enim quis cumque nam eum accusamus illo tempore. Modi et occaecati dolores unde quod magni quis. Et in iste. Tempora est ea doloribus animi.\",\n  \"error\" : \"tx30w4yyz830b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c95ad149-ae9b-4e29-b915-57ad3c59a1d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "3ce39008-917c-4d1e-9f79-2f40ea76218e",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ce39008-917c-4d1e-9f79-2f40ea76218e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "54fcb81b-7c5c-44ce-89de-8dfc51859f7b",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54fcb81b-7c5c-44ce-89de-8dfc51859f7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "83a7e63c-f30d-436c-b847-d8fcebe14842",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Non quo unde est in eius qui quia. Iusto culpa corporis consectetur. Accusamus quasi placeat modi et cupiditate odio. Et iure velit.\",\n  \"error\" : \"njti07wli82wbgl2vdly9gi7phgtwb8gpk6b541u5cs55x3dkffwgwb5odua89y7a0oo60z7xk4znaz1bj3lo07l9c9uf51obxfiv3j29mmzzmuo752wrhotqefuta9jcqv754llzxu8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83a7e63c-f30d-436c-b847-d8fcebe14842",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.399033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "146bbb71-8a74-485a-ad10-ae643bdd135b",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/876249\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "146bbb71-8a74-485a-ad10-ae643bdd135b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.398943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "c65890cc-9428-49ed-9706-5a7465fb2a97",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c65890cc-9428-49ed-9706-5a7465fb2a97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.398815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d76bd3ad-01ab-4afc-8695-95a70eeea233",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d76bd3ad-01ab-4afc-8695-95a70eeea233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "56406a50-af99-40a8-bcec-fb939be3aef7",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56406a50-af99-40a8-bcec-fb939be3aef7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.398706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8373695-1a91-4476-b88a-a3ed3c1377d6",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Miss Victor Lind\",\n  \"label\" : \"et\",\n  \"example\" : \"bsutw5aki9r\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Lauren Murphy\",\n  \"label\" : \"corporis\",\n  \"example\" : \"xbe1vw325ypbd4h88tzg341blzxukyghqysragufbsd3p205iwuvdkqffucgy6zpraion1ho2cm8h04zrz0o28zis84ety0eg306yoy2nqxywgzjhoofxbp8o7va2en61db09x2xcmoq3ma0e0qdw\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Jinny Graham\",\n  \"label\" : \"provident\",\n  \"example\" : \"639mwjmumyc6v8ryl7gpy0u2gbklb4579yukcj\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Haydee Klocko PhD\",\n  \"label\" : \"soluta\",\n  \"example\" : \"bua9x4a3cqh8r7553f3wpaijzkavuy2h9ytsqnxpumwjr981audfkf566yj5c079\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Erika Bailey\",\n  \"label\" : \"itaque\",\n  \"example\" : \"66rosp4hyzdztebt40yfhlrnorw3sjto376qddz7kx3mev2gs46hc71pvtunialwqvpta1xfpoqvxphycuc7lvsj3277fgrcf782g1uwok2m1k363xhn9t89g2vbrxv1afnviqtuv88cahusrr0mixk5lsiq6y5bnn\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Marci White\",\n  \"label\" : \"rerum\",\n  \"example\" : \"oyfhdh36of24yup955th4ctkvhpd7mdgm716s31udveirr80gert519hyval54ax74wg28hrmclk7rl\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8373695-1a91-4476-b88a-a3ed3c1377d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.398638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    }
  }, {
    "id" : "3fe4b020-8167-49fb-84c6-ece6aa584581",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fe4b020-8167-49fb-84c6-ece6aa584581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24cd0d8a-a488-4203-a350-9725f8024829",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24cd0d8a-a488-4203-a350-9725f8024829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.398015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ab39913-f1a7-4825-a9d9-3f79e41074a0",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ab39913-f1a7-4825-a9d9-3f79e41074a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.397957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2b6b1691-6dd3-41ca-9072-3b3b902d05fd",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"4n3j\",\n    \"name\" : \"Ms. Teresa Considine\",\n    \"description\" : \"Molestiae voluptatum saepe. Magnam asperiores temporibus tenetur ratione. Voluptate cumque soluta possimus consequatur quo totam. Dolores quibusdam et odio. Perferendis deserunt magni non itaque odio \",\n    \"categories\" : \"f4turbdyb3qasvinx6iqvgu2qtdkqck0vugp3lmdrkeyxxf1piemme2yp015hfi7p8najl9f9fa2gyr75hc9092rc4gg3jdho15lnfeku8k0emyil4sybvm\",\n    \"orgid\" : \"4z7e\"\n  }, {\n    \"issuerid\" : \"7csj\",\n    \"name\" : \"Eldon Smitham PhD\",\n    \"description\" : \"Placeat nulla voluptatem excepturi in. Vero velit nulla ea sunt omnis. Cumque veritatis ex consequatur assumenda voluptatem rerum.\",\n    \"categories\" : \"dx2fc1gcljduyo8cck177hg8heciagwimyhrs8p1mwsgg0i5p8dctt0648h70d4pko\",\n    \"orgid\" : \"03g3\"\n  }, {\n    \"issuerid\" : \"78b1\",\n    \"name\" : \"Gina Ferry\",\n    \"description\" : \"Vel voluptate perferendis quia veritatis et. Consequatur excepturi illo. Sint harum est quo.\",\n    \"categories\" : \"zuyv8mo3hmsr46d3qgqhkd29uy66eb306ivmczo23jstin1vht1ggrux4frhdfz\",\n    \"orgid\" : \"6kb6\"\n  }, {\n    \"issuerid\" : \"a1t3\",\n    \"name\" : \"Mr. Blake Gutkowski\",\n    \"description\" : \"Reprehenderit veniam aut commodi maxime id qui dolore. Doloremque non beatae laudantium molestiae enim porro culpa. Earum et optio modi eos dolor. Alias optio quasi ducimus. Quaerat fugiat fugit accus\",\n    \"categories\" : \"9x614uwty8oy5y09mzebmrbp2zw23x8wojyyg3hir41axt5bxnnit2wnkoi5c28vyl11eo87dhkb3l86b86r7f9oz1avd3wmnn44eiwbnyej03i5psad97e2t54f7fxzjd2y\",\n    \"orgid\" : \"uhn9\"\n  }, {\n    \"issuerid\" : \"73k0\",\n    \"name\" : \"Keith Lubowitz\",\n    \"description\" : \"Eum ipsa porro hic veritatis. Ipsum optio voluptatibus suscipit. Ipsam veritatis aliquid esse excepturi dolores. Sit aspernatur voluptate. Consequatur aliquid velit cupiditate dolores natus.\",\n    \"categories\" : \"gt0jfhkxl6kqzu97cx4f2njgmqo7gk2nor4iu0cl9fbzqpfipwizspg4cap7efa5bcl0dqonlze8t2m0q434wqpgn5c6n4d4c8\",\n    \"orgid\" : \"74ed\"\n  }, {\n    \"issuerid\" : \"6474\",\n    \"name\" : \"Mrs. Norberto Nader\",\n    \"description\" : \"Sunt dolorem incidunt voluptates cum pariatur voluptas eligendi. Placeat molestias soluta quia. Nihil ratione error nulla eaque. Beatae in magni eius incidunt ut quibusdam dignissimos.\",\n    \"categories\" : \"8drqgwx\",\n    \"orgid\" : \"msw3\"\n  }, {\n    \"issuerid\" : \"777s\",\n    \"name\" : \"Hattie Shields\",\n    \"description\" : \"Magnam in qui. Eum distinctio quia aperiam et quis corporis. Aliquam incidunt et.\",\n    \"categories\" : \"y5inl4vl5w81rq3t6s8xva1v6h1k8tgljhcd9maqxx8kmi0xau1oddt1g545gnwbzvfu1zdjk1qvgrc3vsqohd3p2q6s9uzhlf6amvjwvp6rwzp5wj118iigq9gmdkv5t6t6tqw9y334l7m5pr\",\n    \"orgid\" : \"kg5x\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b6b1691-6dd3-41ca-9072-3b3b902d05fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.397894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d29d9ca-3397-4ce2-b627-e7bee6b78f24",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d29d9ca-3397-4ce2-b627-e7bee6b78f24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "27668506-920c-46a9-b6bc-f4c0c18d333c",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27668506-920c-46a9-b6bc-f4c0c18d333c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.396177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec4bccfb-3f75-451d-83dd-8cf82e8168f5",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec4bccfb-3f75-451d-83dd-8cf82e8168f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.396125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "54692a35-7213-418a-9bd5-2f60eaf84b88",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"1sqoxt99t33ziuvfnu7t92ki00nwn3uhkczcltfc5v070o1czfebpkseik6g9tnh9acrajzeyw1s7c9luwy9vqfyq2nidgoeko1ypa3uit\",\n    \"description\" : \"Dignissimos porro ipsam eligendi itaque voluptatem commodi. Necessitatibus consequuntur nam magnam recusandae et. Vel cupiditate ea quia. Maiores placeat quia tempora maiores quidem.\"\n  }, {\n    \"doctype\" : \"u3j353pftmk36eb45lia9kil8afq8cx39rybv21l4m43asg2rybd2ub0f4eclnn0rkvzhn19j37fwtlcqpdemxa\",\n    \"description\" : \"Repudiandae consequatur maxime. Sed aspernatur aut deleniti. Libero provident incidunt dolore sed quaerat maiores. Ea eius cum quasi ducimus. Repudiandae voluptatem sint quae et.\"\n  }, {\n    \"doctype\" : \"9y61lkrh3c4c523fqqtuh2j64wm9xwv49d4aj2gf9nq63adtytm4j\",\n    \"description\" : \"Et aliquid a praesentium quaerat qui illum. Et sit ducimus. Quo aut est dolorem. Sed repudiandae sed. Laboriosam beatae officia aut sit et corporis explicabo.\"\n  }, {\n    \"doctype\" : \"rv4hii2tssnsagtyt3co3thjadk8xvag0k73cvn9wegdsrkizvs4juom3x363g3hom2zfccvi0dli47hhutpo1oj15ndq1auyfr2964xs49sni3tb1rbcydzbv52a57e9yb\",\n    \"description\" : \"Fugit optio quos facilis cum impedit qui. Eos molestias quam laboriosam. Consequatur nobis sint aperiam possimus beatae. Voluptatum corrupti quos dignissimos quia suscipit harum. Eos omnis et voluptat\"\n  }, {\n    \"doctype\" : \"uoxexedb9pqf2ypxjl56drzsfnu1ti35wq25bi7sxk7cb2uyd3irp1f39aj5jk4hmcd\",\n    \"description\" : \"Qui pariatur commodi dignissimos molestiae. Ut id aliquam esse quaerat repellendus. Labore enim velit a velit neque.\"\n  }, {\n    \"doctype\" : \"k\",\n    \"description\" : \"Explicabo officiis explicabo voluptatem recusandae officia aut. Qui est perspiciatis quia alias. Maxime culpa praesentium et voluptas. Sed dolores beatae. Harum quas quia perferendis aliquid voluptate\"\n  }, {\n    \"doctype\" : \"7d6sxfa8wqqeqzmddtywfopxa4ef3xc9nnxa4bzhv9gxhy4x0hdf41jsfuige1hnuk9fo3vm1kjd606b8y3b3wmt5e53ef\",\n    \"description\" : \"Aut neque quia quia non amet eum vitae. Veniam qui error et odio dolores vel expedita. Nesciunt laudantium fugit quia tempore quisquam. Architecto numquam ut architecto atque dolorum ab consequatur.\"\n  }, {\n    \"doctype\" : \"erwvfu0nutfvi6hoaanovqd092woyl68jd451vzngkvypxtrxpiv51f42rcbmwpl59ndd52g92j1u9q40zqq8mge0mqwmm0bifqgobp1xeoczz73r6vikjtwyuatws48gzfhl37s7itqnah4ep5qz6lklv0\",\n    \"description\" : \"Ullam itaque est ut harum quo quidem. Et rerum unde recusandae dolores et praesentium. Voluptas ullam dolor eius ab accusamus magnam. Sint dolor optio architecto quaerat et reiciendis qui. Impedit omn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54692a35-7213-418a-9bd5-2f60eaf84b88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.396065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "395f0a81-47a6-480f-9ddf-af637a92531b",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/sb78",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "395f0a81-47a6-480f-9ddf-af637a92531b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.395574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "976c02ce-7828-479d-858c-794f8b136697",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/6n78",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "976c02ce-7828-479d-858c-794f8b136697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.395455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0cfd4d81-476d-49cc-8210-4f7d63dc6d11",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/cc47",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cfd4d81-476d-49cc-8210-4f7d63dc6d11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.395334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cea32383-fa2a-4887-a1db-63d8bb349c8c",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/q5j0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cea32383-fa2a-4887-a1db-63d8bb349c8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.395208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "ba0ed7a5-3e0d-4349-a55e-4a9df37ca384",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dolores autem mollitia. Qui ipsam dicta deleniti nihil. Sunt cupiditate rerum et perspiciatis dolorum qui ad. Ad qui amet.\",\n  \"error\" : \"z3i9lhuosjk5jzvufqjvpi88t3dh60b0hzca2gjvz2pgw1nfic96bff245kj7rv94lk96roa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba0ed7a5-3e0d-4349-a55e-4a9df37ca384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6a35eb6a-bfbd-4a61-92e3-ea37c317f003",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a35eb6a-bfbd-4a61-92e3-ea37c317f003",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b99a9a2-e069-421b-871a-b78ae1bcfb91",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b99a9a2-e069-421b-871a-b78ae1bcfb91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.394798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "505c2134-05cd-408f-99c1-ed5fc2d04c94",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "505c2134-05cd-408f-99c1-ed5fc2d04c94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.394604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4540b62e-289b-4fe9-a705-b4622e029f2c",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4540b62e-289b-4fe9-a705-b4622e029f2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.394527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "104910e9-7294-480c-8126-0feaaf097668",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "104910e9-7294-480c-8126-0feaaf097668",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.394472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21b4e1ef-558f-4ea1-9453-2a3f0841d6ea",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"lm5fvaiz2dgghsea07bol6ucsm60uv166ngj34807ofdq2azc0\",\n  \"items\" : [ {\n    \"date\" : \"2022-04-26T16:05:19.392728Z\",\n    \"parent\" : \"u678dlovc9s6azahriowaexy64b1gbzo6m82blitm57s59cxr3qgsgt89wtr3unzwtw4xzlx7asrhpf84tudufzb6vmgk53ih7s9lm0f9j2ap58hqwzfmdsxcv5fg1yv90kpt88fmollyaridg36j6czlicgem1ovw4xw7g9bal9ivz50ehcq42677mr6jzqds9gbbl\",\n    \"size\" : \"qsgysu26bm8jv458pl79i79lqrk7a5cdq1teidwq9cmdfdx5w5pc2n1usqubtr39wbzlaogtqk1nm8fhyj15muh7yxk5y7ljcjn\",\n    \"mime\" : \"f3q2thwgedslsmj3i3tg0yhlq5zy6x4hvx8l3jtsl2ch45hy8316xd0obkt02sh1bmv4p1vfdh23982\",\n    \"name\" : \"Dianne Krajcik\",\n    \"description\" : \"Enim neque est incidunt pariatur dicta. Vel non rerum tenetur et eligendi officiis. Dolor dolorem dolores dignissimos possimus quis illo. Odio qui nemo et sint. Sed eaque ad recusandae est.\",\n    \"id\" : 189079894,\n    \"type\" : \"1vqovmvrk75skxonzt5w997yxh30v3ttg7wbteiil5mw46fp\",\n    \"uri\" : \"https://web.example.mocklab.io/618195\",\n    \"issuer\" : \"4oya7xtyf9lqmh646ahpl34ct1oqesomkedi6r3w7ofu52dd3bvh93n8y1x0rlw73j6mtug6avdf4szmy5sjfijs9n7q1th6x3l7758euptqjc6gljegu70e26vznt9fux3c4abi5a1nrxwxda073kxh97w16y2qql3i9rkd13kq0d1nidzthnzxetmdhy\"\n  }, {\n    \"date\" : \"2022-03-25T16:24:19.392981Z\",\n    \"parent\" : \"pard2f0mpw9elipk2pimym5u2xgqc06ogxheoa1q7359au6oyh86qv65q1mtkyq3zba62mwll5m0nhm9e0jq4solei7d0us1s5vsgldf8ubmpyqhx67bzd9iifer22mtrtw0nhgj2sx4cqod84do1dbk3kk6fn6ffq1klfxvepklodu\",\n    \"size\" : \"eu0bjrjnqqvf8g9drthlh6kiq29kbse6c6i4lx95ahkmg53jft94ukog2hyikmksbmh92lao2pqbr5l6qvgwcm05xb6eb0neqc0elqnzs0txr\",\n    \"mime\" : \"lzimlft3ay2910li0p2z2ivf56zhwklxvqoddw5x0bptzmoz5qlc2eal45tec0uzflxw8b9b8561axgmdx8efg88or\",\n    \"name\" : \"Almeda Koelpin\",\n    \"description\" : \"Qui natus occaecati aliquam. Pariatur numquam aliquam esse in quasi. Debitis soluta impedit. Enim ea totam maiores alias ut. Nihil molestiae culpa aut est quidem provident.\",\n    \"id\" : 189079894,\n    \"type\" : \"ksbsycws541096s6w0jynelhecyjaurk4fa2i6yqxncaibu4jjt8h6q45s1doqcs0g7y4x04vhtnuzybwq2gsrf2bouq7n4i4qmq8zk2y2q01yjistc1zbml320kbtjz3fr5fjbvatatg82\",\n    \"uri\" : \"https://web.example.mocklab.io/814796\",\n    \"issuer\" : \"b86lu9\"\n  }, {\n    \"date\" : \"2023-01-01T17:21:19.39319Z\",\n    \"parent\" : \"lvzq37wy06tixg8zxh9j8wuj1dssk6jjv34nli9tmyxw4xopd5r6qv8my21co855aohxnrqicdzgicrwjcvkwz8pbwtkipi382qnbi\",\n    \"size\" : \"f94nvcvm021zel3ru8a5cyf0bl2ipe99afsm86jxhmg8iwr1wjsnlh99s659r09wf0ljy7soctx3rttravf54ixbv12mcv2a6cavgglizlyel1p5wopn2g9xrew8xqq98fsxbhnqh8mhdijeme92r47ogxsslv6qf5huqpjpvoyibsmgs5xxux84zitd\",\n    \"mime\" : \"5zm75ok8z2k5o6oop61ipkqb880vr7bo2srxcmyyp0xlk62l8f11qwbdgdga4jqwsna\",\n    \"name\" : \"Alexandra Lueilwitz\",\n    \"description\" : \"Qui eligendi vel ratione facere velit. Pariatur est ullam error repellendus soluta. Minus quibusdam ab eum. Velit magnam illum error et odit quisquam similique.\",\n    \"id\" : 189079894,\n    \"type\" : \"57ov8elmpreeeq\",\n    \"uri\" : \"https://web.example.mocklab.io/859223\",\n    \"issuer\" : \"sv1lq0ie97q1o4eqngfzf96rw35u09fgythxy346shq85o8t7qass5nnio9om9d9a0g4u29vhy6hat7z3wme2h5usuvuptp3nlq13ut5emve9gd2nmrosml\"\n  }, {\n    \"date\" : \"2022-03-14T17:26:19.393398Z\",\n    \"parent\" : \"6fojns28rqujm3ieilcautldrnlfzkni1oegga27gbw0jscppdtoqroetxjb60xpmkyc3n\",\n    \"size\" : \"qyah5fgfvun4owvdupiqzx674imd1w8y7s3f88b9jnr8s1xkpjsmqtben1ybhk8s98cilswfcxv5p5212ewkfq80ze8ssuwhcf48zwq932k3im6nvytcytkwulko9v4tbkin3yiw33oqr\",\n    \"mime\" : \"j9evgtrjt8ajde4ph72ofosfr18mb3nzc3ikjnr4zxwfm20qioxo15xcs0xwtq1b9txzl8aqm4h0c3daopdtxrrwl88shu14edjew15m51ior5qo0\",\n    \"name\" : \"Ms. Buster Thiel\",\n    \"description\" : \"Sit distinctio incidunt. Animi fugiat et amet saepe a ad dolore. Ipsa molestias non veritatis et. In dolor quibusdam vel. Odio dolores qui culpa consequatur eos voluptate.\",\n    \"id\" : 189079894,\n    \"type\" : \"kvsqgjocohuxxljynuv0jqe34irs056e18krzgeh6r7fs8yu3r87xabvaoxa3b1r677xtlv409urny2nlhx0k6hbhrc81l1zd07bfv3yxa58zaxb3buspwwsyv4y57opzoi2kq10zr740vc3umc3g9r3l59kjt05puvh9avd5b9kpumw35q\",\n    \"uri\" : \"https://web.example.mocklab.io/877726\",\n    \"issuer\" : \"u3aw5kza6s0fx3u5ckq8ld85nqs\"\n  }, {\n    \"date\" : \"2022-11-26T15:23:19.393619Z\",\n    \"parent\" : \"5cl7yk8mot0p0b6gd6d5ombbzpraytutq05obzfiizo492ml7pn9v9sho4h0yaq45sjp1fjfe70o2obrsrxjkn8l5qz26uubad66ucz4yti85gt3tkbgnzi4roiip6sw0ywaguk9ng71cal0ej514fmdu1ilb7\",\n    \"size\" : \"vz0rytsrfo22bd2g8du6o1g6nrnkxdg3he0v8fhthlnyto4igm3zs6i26afp7grn7h7j2xrwxngf\",\n    \"mime\" : \"rjzpv0yxzx9zp068xbtjwjgcmasyydyjccir0g3l2u7ymibocr0kketd5ip0pbot30ik0fk1avrpnxjpiouutre4c9ixd8khijmjni3n45io4d\",\n    \"name\" : \"Mr. Zoila Abernathy\",\n    \"description\" : \"Fuga maiores velit voluptas voluptate culpa dignissimos. Soluta dolor consequuntur in ab dolores beatae omnis. Rem occaecati qui.\",\n    \"id\" : 189079894,\n    \"type\" : \"4jx8lycwmd4oig9zj4bz3mcdnb5vu5iqvel0h7i9ps2fz7c3mip3cf45lfpahu7wm39ttkei0e5h570sqj5j7tsgiz4xaj8qsumx9la4s2y6rgrnzkovtu2pdwzdfel3xy4ywasu7h8miivfd1xe\",\n    \"uri\" : \"https://web.example.mocklab.io/139949\",\n    \"issuer\" : \"ym1uxq9alq3xkfv12g3jsnevxcuw6zvkb94dh7gu37r0lbgpz87jw8kx2oywb2zpzr5clca84fde2tc8wobpdjrhtikgu48g22l7x7yaabzxoxswmsjzoqyya4nnc2c64ty7o2mbjx0djnwgxpzrwbuot87yp0l5dlnsebknhs8naa34lj4i2nz7mmks\"\n  }, {\n    \"date\" : \"2022-06-30T17:40:19.393829Z\",\n    \"parent\" : \"llzqqgbuzderq3rr0n3dxg6guq26bim3tvb2l5pioww7qxgs40g9m4szq0nn4\",\n    \"size\" : \"7vpjctirg6flmqlmy5xmt8zntk1emotutr3gkmvpnkkiysqhjwdyy3n91mfke0s\",\n    \"mime\" : \"kct3g3afcnnnhf20zu\",\n    \"name\" : \"Laticia Dicki\",\n    \"description\" : \"Ut expedita laboriosam qui exercitationem omnis. Voluptas nihil sint qui a incidunt. Ullam sunt commodi.\",\n    \"id\" : 189079894,\n    \"type\" : \"28zfixb4jolwoybb\",\n    \"uri\" : \"https://web.example.mocklab.io/887147\",\n    \"issuer\" : \"5lioyd4k7vyp0tzslyc5aum9vk6c30ijdci22cxoy1735ztoejzww4p9umk0h59vrsxc3dkc4ykk9zptrs7nqawclc5pzubfhy7gm9c3yydyunzh1k0k2sayjebid9e0\"\n  }, {\n    \"date\" : \"2022-10-18T16:12:19.394041Z\",\n    \"parent\" : \"h0bjowe6cr90zltum07vjamsyiguy4mw5ch7gteusjvjxl8yhlcj3gj2medcw8q58vemjch30vftstib5c887ql7woun8x0c1\",\n    \"size\" : \"ggdbg3gjlfgh0czf0gab37e3jba79njz8cxcxq0l06k8ih5ratawv7k4egs3hln2cjyztx6a85wm5x3mdus524n9saok26kezkboumm95zeae2cwd4oa732b814xpoq0ebbq679natly2vtekam\",\n    \"mime\" : \"jnsq7sizu8mzphzsv6akkrrtsxep71tgk1dmbqumwqe12mu08wzgnmfstzfyinz9yv2rnzw\",\n    \"name\" : \"Marcos Lakin\",\n    \"description\" : \"Facere atque unde quas. Eos perferendis quam provident earum expedita cumque quia. Voluptas vitae doloremque. Expedita optio vitae.\",\n    \"id\" : 189079894,\n    \"type\" : \"lhibgx5uqadhs0x7lza868sf2kthhqce0pto5s82wpv2nhckrh8bxkajdthhxohq2ud6fgq6uqwu54wgqu4q\",\n    \"uri\" : \"https://web.example.mocklab.io/616440\",\n    \"issuer\" : \"32f6dojh\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21b4e1ef-558f-4ea1-9453-2a3f0841d6ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.394403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "605c08be-646b-41cc-a7e7-887dfbb2b3f4",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F096433",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"In eum assumenda qui voluptas natus. Beatae incidunt enim voluptates ipsa provident. Cum voluptate molestiae hic ut sit ut.\",\n  \"error\" : \"7g8xsxfc49kr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "605c08be-646b-41cc-a7e7-887dfbb2b3f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.392652Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "57af591c-c1a5-4076-874a-e5b9ebc0ec9d",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F274198",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Magni ullam voluptatem quo et aut consequatur. Rerum qui praesentium. Optio eum omnis inventore qui doloribus enim et.\",\n  \"error\" : \"s6wb3z2lstf031erg5woklefdulz7jv5eby1toa729yzsubgy13m2s1ua0q1gp8u5ggwc26kwa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57af591c-c1a5-4076-874a-e5b9ebc0ec9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d9f307e0-d908-4a66-bf99-510498547a1d",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F117560",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9f307e0-d908-4a66-bf99-510498547a1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.392363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ef6bcbc8-93c2-48f9-91e5-5a0a2b1ab823",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F772577",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef6bcbc8-93c2-48f9-91e5-5a0a2b1ab823",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.392253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7d40d56a-afc6-4344-91f6-555475161444",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F719020",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d40d56a-afc6-4344-91f6-555475161444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.392137Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48580ea7-6520-4153-9258-8a7cf768c9fa",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F730784",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "48580ea7-6520-4153-9258-8a7cf768c9fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.392024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "9fff5e79-9254-4a9c-b343-b523c7536f87",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F888345",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "9fff5e79-9254-4a9c-b343-b523c7536f87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "ff0b10af-42cf-43dd-9cdc-7a0b66254838",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F302593",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "ff0b10af-42cf-43dd-9cdc-7a0b66254838",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "4feace4d-b21d-4a94-acb5-9fc227f3a590",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F838162",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "4feace4d-b21d-4a94-acb5-9fc227f3a590",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "b7c5ae1e-a513-4505-9539-42404de6300e",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Earum ut aut dolorem. Nesciunt et quia quaerat aut nemo. Et quisquam tempore libero. Incidunt quibusdam blanditiis saepe mollitia.\",\n  \"error\" : \"fuoeeevlbntr4dt03fs2jnvsl9n4qzqb9gz7ddy8i59gdt3chw0nohudz3zi3jvfh0xmp0hh0vu87pncc2858hjs2vkecdz8owlbq2mx9pl3zed3zwtu6jgjekb6wh4rojf7jcow9kkypblza8247i4fvsz8cg8075ocxduasuzgk1natprbr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7c5ae1e-a513-4505-9539-42404de6300e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "78e531ef-207e-44e9-9793-4657fdfca627",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78e531ef-207e-44e9-9793-4657fdfca627",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd64e61a-9c1c-482e-be75-1d70e8d8aaba",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd64e61a-9c1c-482e-be75-1d70e8d8aaba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f608e7aa-98ca-425e-ba96-5149b95c5e64",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"xrrctdwdkra1ms0j38c656dlia48zwjf94397hladwxx4ya9gat8nisem63d37z6mh7o5js5x48cqzgynkw6uqc9riwkt24ftom\",\n    \"size\" : \"lbe1bkz7k226ibi3olo8t7cq5tm9vxlxfg4mpz0uibe0c4pdebgm18ycm73ckwgby4ezknsdu8ndmf4wa36hbzxgi8bh4ex41l5qdqkmg1nnsuk7q5zxx0yxeof41vwvu8tr1u\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f608e7aa-98ca-425e-ba96-5149b95c5e64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "fcafacf1-2abb-44b7-88ec-2b1a8a602cd1",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Qui non dicta amet aliquam. Veniam amet temporibus sed. At quam voluptatem enim sint numquam. Incidunt incidunt voluptatem quia ab explicabo dolor vero.\",\n  \"error\" : \"oe5e7rgbs44fxigfwpo7nndrsbisshko6vk6j9wdw5hgkp1on3dvbk5ovaj9ibqgbqpnjdsqb63mdkq9ep9pi9e8gmo8kzej2gdad4bwuuvgo2b3ikow0qo9ez4utpp6c8rqg1u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcafacf1-2abb-44b7-88ec-2b1a8a602cd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "8382fa6d-3fed-4761-88c4-bb3f785d29ba",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8382fa6d-3fed-4761-88c4-bb3f785d29ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "145ca3cf-f644-4437-92e7-a462966384e6",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Illum suscipit accusamus. Quod et rerum temporibus. Voluptatem amet et consequatur.\",\n  \"error\" : \"vi67gtv3tpyr2dx8zk1xmyb6lmu3d033kghcrmr0sh7j4aowgmwu6p8zraa05s20\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "145ca3cf-f644-4437-92e7-a462966384e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "c1c9e16a-d278-4cf2-af22-fb79fa1abb7d",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1c9e16a-d278-4cf2-af22-fb79fa1abb7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.391077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "273e58c0-49ed-45ac-a706-d1d416ddea59",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "wh2z4milfvrmz64poj4oc36sf1kq0rvv64xecqm5w8dawnfb56mycufrf7uk5uj4g0v30qemlenyp5q48joc9zqryaeohzep"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F973068"
        },
        "state" : {
          "equalTo" : "Michigan"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "273e58c0-49ed-45ac-a706-d1d416ddea59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    }
  }, {
    "id" : "ddefa099-5a90-4436-b0e6-675814f71d1d",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "qg536zt3kpsahretlqfez3aj0sshsmxvksw8mmymckchre28clcjgrsy2s36nqyaq69yalirnf7617p8t8ems6f39iv7d1sragog9lxwfl18gmoveow84hz5bh9giglnqvxywbywfiv4cmz7ls65qy34ey8khzbwo"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F188452"
        },
        "state" : {
          "equalTo" : "Virginia"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"ib4314ckkbxwcfjpno1wznp6gdtm5dpcw6rlchi8bg8zel3r89a6wphnvmildp4wl\",\n    \"scope\" : \"gd99ic9s4kajntrhbvpwoqn2ttuemfx352l89w8y04snw7rfdi9g5f1lc0xwnzy61w9r6\",\n    \"token_type\" : \"pkpuxkc9hlrt8njkcc39o5m2sdi76scwikv7l0gj\",\n    \"expires_in\" : 6720490742285620853\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddefa099-5a90-4436-b0e6-675814f71d1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "11470a62-aeef-4d1a-9978-e9e86befeae7",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11470a62-aeef-4d1a-9978-e9e86befeae7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "415a6bb8-bc9f-4f26-a791-a77469c17575",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Est ut et aliquid accusamus id modi. Corporis cupiditate suscipit animi. Porro voluptates aut.\",\n  \"error\" : \"eyrvvwco5lzmjtpthr6hs1fk5f7b2kafbq2yzzy6cw46kiaopxpcvxaae1afp6ua1kk225moweh7as9k5c89zu4iv1zqinmg49y9pazju9ut3hf24w181k6lnvi8hbbu41it\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "415a6bb8-bc9f-4f26-a791-a77469c17575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a3d92316-e75d-4aaf-b9a8-ecef153307ff",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3d92316-e75d-4aaf-b9a8-ecef153307ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "07750c26-003e-44e3-bbe3-320eaa323c5e",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07750c26-003e-44e3-bbe3-320eaa323c5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390342Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bca39dcb-037b-4ddb-bee8-7eb61914e37d",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Earum aliquam aut. Qui sunt et sunt aliquam vitae accusantium. Et aut illum. Eaque ullam perspiciatis vero incidunt ab autem.\",\n  \"error\" : \"egi2xok7tjlj0mpt15um8itdoppmfwvgesoz3rsys5bs9h9sc56vdi5c9yse6pi6en0psh9ag64pm907vxkajjp2vh12ukpwc9wvoiz774687c5cc2novtoisa48ettdii35oi4scpvvxgp747mnktakhdmqzteytilnvmu9yuxoz4oj7qklaeluux96\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bca39dcb-037b-4ddb-bee8-7eb61914e37d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b8bf1789-6b71-46df-8632-b438c447f427",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Itaque eos libero rerum enim iste. Atque repellat quis. Cum harum qui quia quaerat debitis libero.\",\n  \"error\" : \"4zpcmjxlv9ycy9b994fp51yhe09awhdygeg731a3id797c7eobsfcqsjs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8bf1789-6b71-46df-8632-b438c447f427",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.390152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3addc171-a332-4be2-9c25-1fc83ece6bc7",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Voluptatem eveniet minus atque. Eum tenetur voluptatem sapiente ut. Architecto est tempora voluptas totam. Nulla esse et qui ut quia deserunt. Hic sint pariatur quae.\",\n  \"error\" : \"t1cy1p7rb30i69qo8df9m5a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3addc171-a332-4be2-9c25-1fc83ece6bc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.39006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "922e54a3-20cd-4657-8d38-d0fe640066c0",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Consequuntur culpa velit esse sed. Voluptates dolorem enim nobis minus voluptas sint. Unde et at blanditiis et ea. Aut quod quis ut vel.\",\n  \"error\" : \"t8nf87lme1bsf7l8w57e7qngh6wbhng07zhsh4gz5f2g8rcbv6zb5jmilmssao2s5317qy86iv9vdii85i00t20c0aiu59vkv7z71ctslwns2i1h94hhtk1u7pag5etydck5vjb31idkrsjwfwbpaipop3r24i4s84g0sbq96\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "922e54a3-20cd-4657-8d38-d0fe640066c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.389957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "da4496fa-86b4-440f-be8c-4bf48d399153",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da4496fa-86b4-440f-be8c-4bf48d399153",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:19.38982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    }
  } ]
}