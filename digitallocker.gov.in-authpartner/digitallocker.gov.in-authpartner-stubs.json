{
  "mappings" : [ {
    "id" : "1235c167-ca26-487c-83cc-b03728d3626b",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dolorem consectetur sit est expedita repellendus beatae enim. Atque quibusdam amet eum eum autem itaque recusandae. Saepe exercitationem et sit consequuntur voluptates eveniet tempore. Quis modi minus\",\n  \"error\" : \"7stdpfcy9t6elvjtkc9x2ooaluevsj8rudo005vcxl5zfztke83y1kge1nwsmjjsh1mskozfyt01fdcyj4nhvqf38hxo1jv29qhf176y8b4k0ss4fbwmwr0kj4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1235c167-ca26-487c-83cc-b03728d3626b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.032734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "344b1e0d-bb7b-4995-a021-a375dc01f97f",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Magnam in iure aut molestiae. Voluptas reiciendis et ut ipsa tempora. Et consectetur vel sed sunt sint in provident.\",\n  \"error\" : \"dis2urkaw4t7rpg6eslft8b5gm9fnv7rynh48ndh38fw6v61vlrk6chaojxtqj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "344b1e0d-bb7b-4995-a021-a375dc01f97f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.032628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "919a8e59-2ffd-49b6-a761-113ae2c5346b",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Aspernatur perferendis qui. Aut qui explicabo dolores. Aut quia eos. Ratione voluptatum ducimus vel sint. Voluptate dolor beatae voluptates.\",\n  \"error\" : \"ezwpst97ncl6zheqnkjyjku7sssxa1dkep5ldubca3oy430rpveq7ahdb130g6l3mu24df7wu3w5knk1r0embzz5sl5a3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "919a8e59-2ffd-49b6-a761-113ae2c5346b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.032528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "6f124e6c-f97b-4ac6-97a8-6210e1c251df",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f124e6c-f97b-4ac6-97a8-6210e1c251df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.032412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "74f79f9c-7545-42af-935a-250884d41eb3",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74f79f9c-7545-42af-935a-250884d41eb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "6db4bfc2-37ca-4ed3-9f8b-eedae75144dc",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6db4bfc2-37ca-4ed3-9f8b-eedae75144dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "58fb3b59-ca76-448f-80a9-8c7bfddd8237",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Eum quia voluptas ut laudantium nihil voluptates. Earum sit voluptate omnis ratione beatae. Aliquid molestias voluptatem dignissimos illo est. Corrupti rerum aut voluptas et beatae.\",\n  \"error\" : \"0mawoi6tdph97x4dp7q4lb5py8sgukdaz9flessp4y2809swtdkepcfcox9cw8blxc3s597r9snu7qt7yl67nikvrsey539d5lx5cl35ai7jcvsxep9h9us0ehqsrsvjod25siotycysbl64bytrd4fxfxes778f059q96ys5phorbp20ps\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58fb3b59-ca76-448f-80a9-8c7bfddd8237",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a188dbf8-4eb2-43af-849f-a9f23cfff4dc",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a188dbf8-4eb2-43af-849f-a9f23cfff4dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "480ef49a-7919-43d4-9956-6a6e6d3ae451",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "480ef49a-7919-43d4-9956-6a6e6d3ae451",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "e9615e3d-3dbd-4067-be0f-329f55af9cf5",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9615e3d-3dbd-4067-be0f-329f55af9cf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "46ad24da-10bd-4704-a11d-3ba32e65fe21",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Quod culpa deleniti. Aperiam dicta eaque voluptas id. Voluptas blanditiis modi magni eveniet earum debitis dicta.\",\n  \"error\" : \"xali9juhjofs7lella52c01sho30732p5gqloi2pgx6c2g3gqt76eqb4f90sqfmf4lrj7zvnjaiudebnnx8rqj3oy3vbnne219slx6syvnen4ev0mayijp6cjoaca0he1olmu6hrzk4xslu891j2yhf8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46ad24da-10bd-4704-a11d-3ba32e65fe21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "5a07f7b1-7bf3-4441-9f0c-4b80b3aa8bf0",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a07f7b1-7bf3-4441-9f0c-4b80b3aa8bf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "1c5d7c50-34cc-4b3e-93b2-dff0a0bdf2e2",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Aut tempora consequatur explicabo rerum. Aut quam quia molestiae. Ut cum et quia voluptatem ex repudiandae qui.\",\n  \"error\" : \"uvv4qe5iqi4pr1w8jryqw03wz8yha9rsvbsjuvqla1rjtf04172aeystq4jz5g9vb148wf22z3gr2d0blggihtw3pykq1usw05p3s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c5d7c50-34cc-4b3e-93b2-dff0a0bdf2e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "11dce92c-f140-4f74-add0-3379cb4d9582",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Eos et non aut quos quidem praesentium. Aliquid quia non sit voluptatem quos dolores. Laborum molestiae deleniti cumque quibusdam optio quia possimus. Odit voluptatibus eos.\",\n  \"error\" : \"r1nminv0suz7q4vbsd385w0n0rlrrw8v0l5m4o96dq9x8mqua1l5dzbirlr08bdi1u3wvg7kk7s74n2foj9m8wuh6rscp4aewfmpwrfgo2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11dce92c-f140-4f74-add0-3379cb4d9582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "8df4beb3-a19d-475b-a079-610c6552fd21",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8df4beb3-a19d-475b-a079-610c6552fd21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.031067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "5d1934f5-bc7d-43ee-8d49-be38a30bbd64",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d1934f5-bc7d-43ee-8d49-be38a30bbd64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.030998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "3c7e5cef-502a-43e7-86e9-e9407e64920a",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"xdxerurok0dowlqejqfceyy5azhnzfqen6ppuo46e375g0r11rmtg8\",\n    \"Rar\" : \"qzzg2hakq91lvnk32valoye0euho7tsa25nmbuf69x1c6wtk5jit193hyl35ckmk8cdtpg5bkz3cnzb2a9zigrykjv75p0oonwlzi7z1cm5x98yikff6pg0ul4\",\n    \"code\" : \"wtwolbayistf7598ukhqsjye128vf03umeq2ymlj3iug6y4xeh7tugnc9h3dgn9wwjem16hnnex8ow\",\n    \"Signature\" : {\n      \"xmlns\" : \"4cv4yemers8kcgrt2muer6yo8rjlrvri1y2aptpmcqd0xi7yywn8vu1rxeklfieig1hcmmtvs3y95r1ae50gtxfslejo\",\n      \"SignatureValue\" : \"e5evght9zkv1fro767yuxxn7psokvlj6kkzbge4e9vi0rk8hz72odms8exacujsjlln9hbnx4kcbfccxy1jvfs9a326j9rkw2myumntpny67wi0symoog79im7ns2auuuw3rm7uzfyoyuvlmbi3eu0prjcyvu36synkvfqa33hqqedm2i5ik66efnszw93gj9zz\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Cleopatra Kuhn\",\n          \"X509Certificate\" : \"q2fle6s49tcgb751qj6l8izsxs6uw6oksxefwy49z57smn4l0fwixl754td56vjib41hk5sy0bb3tf3ay60ama0y89b0q3xi1kbkvbsuo2of7rkn5klpgfgu5krzkl196hc4hogh4z55hbycg90nni1iocitwt5e0ut42x\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"ebngrubbbgav4fm1j0yng0heazbq9u4ac8m27wubq3mgo5es6vpt2vbptbhwm95gm45k5lvl5tfk72paf9xqh2hjitu245bzzv4hlpzd5f\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"vwbg43oylhh8n979oge2jvb30i1jqz6wmkb5a3g2jcqmz7kc7yk8saykr2nnr2ofevnwv2jpn3ka5jmz4rvxou\"\n          },\n          \"DigestValue\" : \"dnx5x7x7acjuz15etc4gd36xoyqxx0yj322hrttmofmsmwt6ovsn8ge3myzq0hem1imgso3sc026il59j52mdbiq91e9jkm3xza9xmztfb2c463\",\n          \"URI\" : \"https://web.example.mocklab.io/075479\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"o375obzciysyaignr70p12psxh52856dontewxuynkg990zg6g2ys0tecd8xgaaf0\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"i0guuk606098rg7174zwcqrks1c0ehzjv38kzy8o\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"ue15\",\n      \"Poa\" : {\n        \"country\" : \"Lao People's Democratic Republic\",\n        \"lm\" : \"tq7vlyapvf3vhvw1a3hsgo1zf65nwxdfww2orfq1pwnnwqnoh76ubda7uk8idqfhjnhzo42ysgyjb3wlcbxn4brd2v6nka52pg5sixsf4nllzg4fxyroz0mqdis8ei7uyfufzfuc3wq7ojl3slvm84t5v6l3nxw2ikzf8dqqjo\",\n        \"loc\" : \"ctety7bjktzm1fiv3ip3sb7qmetl5599h0fucrh4lmvmf1bppt0j6g0he14rjbq8ikpqnh8goh6vq74maye2uprugsr0wibxzg78l2xf7pzxa1f80\",\n        \"pc\" : \"mb04i58uspli3xjouzwa4532odlw2m0sp35s0mhz3awa0mna61xh2e42ps6a2gjsas29uwgqsolcvgmytd762dz93aut5c0cxgzrtuf3s\",\n        \"vtc\" : \"t1q7bb2yzxsoow5i6lzsioycq5sb1lize2rtjmq2bare1ync8i7l33o1w758a8gwdw\",\n        \"dist\" : \"cqfofj37m26pymz4vy01c8v3sw8po9fv7orplvaml9gbqlb0tlhu2cyockhkilyehhhm49q3g4pcsna7407me5ltypvr5z5tpvzds14oa1eak8jofytcuhnhqfkao1lc4m7c5nj0o\",\n        \"state\" : \"Washington\",\n        \"co\" : \"o9zeh3q22kssw4jbtafg85vdbq827xeb4yqx0765dzdzziux4ggsg01wl77kk9czr8mb6bbklujxvpkko6koipy\"\n      },\n      \"tkn\" : \"36urbk6jqq9ntvcmsxo04kfw65u186uqzj5pncdbu8v2fias7szkgvs7etd936ztjp0jfm157y\",\n      \"LData\" : {\n        \"country\" : \"Burundi\",\n        \"lm\" : \"fadrloyl426hbl8f9yzmk9lw9kcl23x3dus817j17iwzyf60c04n1wgq30b6ngm1m7frs4ea44q9uqkf146e8pdba9p9v9arfkde4l5okwgrv4ylnosmdff49h0fmjom8i5gnhsgl2d1xk5iferbovr0mdtykwl5k6sufhxufpj\",\n        \"loc\" : \"8kwbgqwp2jeayy8raaz22auwex7rctir5zaxgh8jmonompl9tgllexme0sx9seboip1q1hhjb1uyoylqarqtp7aw5n34t4uds9xijulctpzofi8tpuj6b8v6pllxpaejao4hu8fzl9g2xziuamz8jkr3l0klckb18ufzhjjbdxik8fzpajbbjrjvcpnu4ypnm7w0\",\n        \"pc\" : \"8seoligq3eh4v2hno3tbmb4s1j8zgt4avgrcf8si0odr5mvsamcdazcnlk6ngyzklj1xez529nvli5k0g6q7yjw\",\n        \"vtc\" : \"6k1ezqdjgnl6rz0k0bvch1ryv44txcz708gswden7439stokoryppfg3iltrnm9dyggwcwvf0usktss5ekw3uo1mhoy003ph5n1c7g71e0m32ctabrldsr19gpumj7rg\",\n        \"name\" : \"Ashly Torphy\",\n        \"dist\" : \"3q61pb9xjicdoiy5wf6rzg5f0uzjea1swtz4fmxlf6eozpx8taoi6fsgyane5s1obt9rlbjdx488vx2767bqo9hnxe4v\",\n        \"state\" : \"New Hampshire\",\n        \"co\" : \"6xyl44ba6nzefgtzahfi3yao3t6afpup8mapd4tzmut6i9ya52gz10l1r5nycx6i9wvww1m9a3e4bgn1dij8qthbgpgw2g5cpfpgxj676m1mbu4oip1puivtv41\",\n        \"lang\" : \"zeztw66dpjmwfld1ihoe2gog7bnbooyixjgm0fiwewrpsl89oakwfmyh4z0v7z4fdyqp7assi8ddp02qel4wcuwnrpo4mvaey9owz1ee892fkltcwomzpasn2ddkrr0n4irp1nmxphnrr9biptv6qaxl5j1t4v3896zmm58r0tbxczbl9mvcnk48hy\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Polygender\",\n        \"dob\" : \"1942-01-13\",\n        \"name\" : \"Loreta Goldner\"\n      },\n      \"Pht\" : \"tj2ua0o2jaodqs04o5p7e9as3fttr8982v68rn58slcgn620mxw1rnpv48slv1npizyfyon1pnqdeza70jvj8kynuwuaj3\",\n      \"Prn\" : {\n        \"text\" : \"vedjynb33wkvcu1a2qesas82h9ngqac7im620m48j70xfooj07hr37x98la1lvh4opdj037yyw76fmr9f60rknfvpz9fjam9x4paoq191t92nbk5363njj5gbo\",\n        \"type\" : \"8zkkvsw7qgbdphbum5p2b07z6mjmos6zp86fkg5nzj4pi4hn6iiu0xbigp2z47d1h941fl9fc4asrpe53w93537rl472xa9tx69qrfqet244eoy0pp1lqpu6bd7fnti4znpul5x2m46crbl81vzdql\"\n      }\n    },\n    \"txn\" : \"pjyfcvwrfu4zq8ln8rnqnp6pxh9hk1uiutarfrgzry33z7gcga5kdi4f3j17qw8pi7ilzx62b8s2jrgra41mhx9zreofhcf2t2c9d81nngn4hitng1tlqk6jws4c8\",\n    \"ttl\" : \"rnrop9841p2y9rpwm9si\",\n    \"ts\" : \"xeqwzpwztb1h6ud2lemtw70vaac3m2gky5jecc7t8ztj2xas008t4ysq8phpncilr\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "3c7e5cef-502a-43e7-86e9-e9407e64920a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.030889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "397192da-bdc4-470b-8e46-9484b79daa9c",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Itaque aut velit. Iusto rerum quas optio omnis quasi saepe. Doloremque delectus sequi repellat excepturi.\",\n  \"error\" : \"z8twm5a1m8mubi56c1qw4qhb1arp6ysu17c5u1rxjti9m68y4gxx0f390r6o4u2ytch08g2e4buyqchl9zx1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "397192da-bdc4-470b-8e46-9484b79daa9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.029145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "ce14cb1f-12c9-4cde-9ac0-25cfb432c0b2",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce14cb1f-12c9-4cde-9ac0-25cfb432c0b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.029055Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "38342363-f77d-43b0-bd9d-c09ebee9878e",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"ylsqyts2jixiz7on9zm3wz2qoao3ij44s8097jcvjtoahzj13p6ac7izqsxz2x9z06wcgollhn22ggc1obnyez238n3l5xnt8qrbhtgswl54rxzmpj5di5hles3r24my1u9tolhfeiwynjh9wn4pe4ka43evpxtrb8r4vo\",\n  \"items\" : [ {\n    \"date\" : \"2022-05-29T12:36:17.027004Z\",\n    \"doctype\" : \"3ste56yfzt1car45ajrefj1u4946sw68unadmtm1z2fzkeghykw27tlqo7unaglm4os2q8z9t9\",\n    \"issuerid\" : \"wd88\",\n    \"parent\" : \"y54h19vb3ki99cx4bo6611djjg3fv8dzbp6\",\n    \"size\" : \"xcc51z5yqvmv8nwhmp9njbzqnfvn0emvusgo06l4re9di4b4nvbg\",\n    \"mime\" : [ { } ],\n    \"name\" : \"Evan Heidenreich\",\n    \"description\" : \"Esse hic neque. Molestias fuga ut. Illo quae harum culpa et quo sit nihil. Et dignissimos perspiciatis cumque aut qui.\",\n    \"type\" : \"onroednx79vy2b012mbimra64n22hcis66a1lqumittwl6mefpqd1v88w\",\n    \"uri\" : \"https://web.example.mocklab.io/763225\",\n    \"issuer\" : \"i7j741lcz5h59dtz6bg6l7b54w431l6d58anp9r7vuajewww3mg3a9kl9zk3k2bbh5oiefdvisiutc420ngudrkirdxu6nsnvrjuwinfrsle0ju2c3si60qq50fvs08vv68p55ubc5vzlb9j0hv1x7qjcpqwxdjmcp33ji1324f4be9t0\"\n  }, {\n    \"date\" : \"2022-06-29T13:56:17.027324Z\",\n    \"doctype\" : \"jmjjrl57hkjybwoeo6rmvf2mdjb8257xf0x6or9r61j1wnswgc8sokt5puvb5nlodv5s7b4j6qxh6q8ck2j0ktl73mn5sz9ppyt\",\n    \"issuerid\" : \"v809\",\n    \"parent\" : \"f4qbj26pc0mvk95gs5spmo2aijoa9g4uvmvc015h6k59xoygbau\",\n    \"size\" : \"bltviz18gyungqsnab2iqwgs4tuy41oddsm5753gpwljmvz91i3mo15ki2eiwgvpl0kljm4gewr25nedkr4\",\n    \"mime\" : [ { } ],\n    \"name\" : \"Margeret Schneider\",\n    \"description\" : \"Qui voluptate alias consectetur earum reiciendis culpa. Cupiditate ut voluptatem rerum ullam aut blanditiis velit. Eum dolorum totam aut amet.\",\n    \"type\" : \"6w957uhygg1z65ai6mk55pbawmnuye6jxdsg8mdfgv1jry5ryk8gbkxjh7vj4486u3lypw3kzar9zmfqqr3aeeseo70c\",\n    \"uri\" : \"https://web.example.mocklab.io/724911\",\n    \"issuer\" : \"u9x12uj1x0azhszcjvcfxgcemrbc3a3lwrwvu47cofa9ck0eqa4xcq3x1v4bsxsbs9w1qy3z3usd9kotxqow69c55c8sp64c28oizihnpbn8fogc02msssl8f30juxy\"\n  }, {\n    \"date\" : \"2022-11-28T14:38:17.027615Z\",\n    \"doctype\" : \"91u9qzo3qs2hiit36rmj79chzj6pd3f96e5cs45thomyso88sr0sqch9avqh9e0dfufkche88kjx4fw0g8tggxcbblzvrd057hu0ty0s0lwxb62edqyqqb9tr1s2h2kmik2xl31tdiv2669ijezikjwa90\",\n    \"issuerid\" : \"v2j5\",\n    \"parent\" : \"i3x4828iljg1jd2qpolz22nlx6ju54qi3zkc232lbuazj47lbka1vzptn6ku24n1osso39u1qvpbvysmr7tp94dzfl26xt1hcegsm4li29t8ifhtdp77b41jr0eede94xtxx0ibvf6nn1aadmmnzqrtffoekgs0vuh5y5cj2l923gs6sleuupaz5lzhmz6898\",\n    \"size\" : \"n8ilpyy5tsp982w79jthqrva0iedo1faa39n4zwon1evoncgm2fw52sddeb69y39evrvcl0wr9o0c0te71a31fmvasix9y5ooecqzr18mhxp7siijpqz4ve3ker9dyemc3wk9alqg3mpy1n8bwbn0mfrnydm7pxplinc0m8d9dotwwdg78lch7mxyr71pwbjtcdiem0\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Georgiann Runolfsson\",\n    \"description\" : \"Aut id temporibus nostrum porro rerum. Corrupti neque qui sit dicta expedita illo quo. Sit aut ea debitis animi.\",\n    \"type\" : \"gy24w5bhnxhpvivv3dyhgviwvbkmtlj62h8355ujd3qq6\",\n    \"uri\" : \"https://web.example.mocklab.io/820992\",\n    \"issuer\" : \"hro31af8w9o5e2kpgombf8kgv5jtbngm7hz6op2ja40lcnonlowlr736s2fzurh9w1ikztycj0wdu2uobuhtxxds7t5r8jpprtx6xenss\"\n  }, {\n    \"date\" : \"2022-05-23T12:47:17.027917Z\",\n    \"doctype\" : \"6f59w9a8t9luszpdk4w8rhg6661f3m1nfu950thhb8ae4ve8f90x08c8z92flzvpbevt4f70ucdjubxq9kjxkjoi4b02ralx3idl411v2c6epa31sptfqvn9kw55cub7qx0i9lqsyvpit53vt1yoisyum8bcgoejyts7hcw1v66w37q5026n\",\n    \"issuerid\" : \"xgto\",\n    \"parent\" : \"5zazsrdzz5a82q47zvrfamzcubeoc2si5y1k35q2hhcyo5\",\n    \"size\" : \"vgjmriknu9axjjhey9r4l6pmww3saaswdosl8p5l0m5i09ad3tav5oauvjdw715n284e5xi3w452zd8t3yhaz1kzkocpccglgj40ew7hwm54rw2q0giw92lalkij5obe2y338w8nmhmaliyc8ws3crrc9aih1xg2cg9\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Christeen Muller\",\n    \"description\" : \"Et rerum qui eaque nihil nemo voluptatem voluptatem. Necessitatibus est totam totam unde nobis ut. Et fuga modi tenetur suscipit et accusamus earum. Placeat consequatur commodi sed eum aliquam soluta.\",\n    \"type\" : \"gxyslkh93pf7fqi7ojt3vtw95yy8wdt8f2lg9m2bpig8dhhcpz27oog24yyzv0vmyz513ftwf47bts7t3e6pq3jsqcp7hjtu8pq20n1wyk84ii3pf\",\n    \"uri\" : \"https://web.example.mocklab.io/954812\",\n    \"issuer\" : \"vho1c6rcz9z96j8284w83x37piorv8smehrnjbc9kmng\"\n  }, {\n    \"date\" : \"2022-07-08T13:24:17.028215Z\",\n    \"doctype\" : \"8l6j63jg7k9x68pfrbombhm9bk0fr3q\",\n    \"issuerid\" : \"uty0\",\n    \"parent\" : \"qnp1w9zlgtqma2a05jevrvgp1at5vdf04cd4t0hygik4jn\",\n    \"size\" : \"u2od0z0c2mp6w0wfygbq86m1nux32a1ekhglk7vjrynil73opy6wfk1mci4hd7em17eh5ku79r3fhvofd148znpnck7euryxlc2us4l5347a3zhtqhqe6ts29pojglih81fn5jsbudxe5dzo5f0gmgppijkb22w1z4eps7ojlylvdrnx1mpjt\",\n    \"mime\" : [ { }, { }, { } ],\n    \"name\" : \"Miss Sharan Dooley\",\n    \"description\" : \"Eligendi at sunt maxime repellendus reiciendis eveniet natus. Aspernatur rerum laboriosam neque voluptas. Enim ipsum nostrum. Quisquam cumque libero itaque distinctio vitae.\",\n    \"type\" : \"euifns1qioiw2vzuocu1igxdw798kk8q94407bkye4xxkeh91ydw6rlm8y627u0mi3t2d4z1tjl5me917z1ifjkos1eogb4n9v9hyoynwzdar9eqdyb35p\",\n    \"uri\" : \"https://web.example.mocklab.io/992319\",\n    \"issuer\" : \"mf7v004zrqoag44hau1ijx525au6bg3ml1rlbyjvy64e9qn8rqj6h9xx1n5ba9spabugyxovo7w20ucdpsgcq97nlc63kddgp9zmx9x7gt6z30amiohf1jz3id7i6al\"\n  }, {\n    \"date\" : \"2022-05-16T14:43:17.028513Z\",\n    \"doctype\" : \"d5x3bim9\",\n    \"issuerid\" : \"4cq1\",\n    \"parent\" : \"7espyfcuksfdh0bb1ilcdm\",\n    \"size\" : \"0exqj6rysbxzl8fvq5ktesqqxo8hh34xs3fz4p4yqa5c50eqzxdjiv0qhgti2dbj431fe1gnato1cdk8z6u6m9ut17isj7gd49mjkqtqrfpuokkz1vzao2k8420t8dtkxz7prgx1ttt7y60i927b6imaqk7b0bovlbnynju\",\n    \"mime\" : [ { }, { }, { } ],\n    \"name\" : \"Ruth Stoltenberg\",\n    \"description\" : \"Ut aut quam eum provident nesciunt ut. Est ipsam perspiciatis sed voluptatibus delectus rerum. Quasi iusto magnam ut non et tenetur.\",\n    \"type\" : \"0ifmq99l5rkv4j85dgdfsb343d35ydrpa5ra5q7ypyjxjmvc4d1kigw5wgd5cmd5ntjv4rend26w9y3mbp6r2647nvetstnfy6yht3kr44emoh4tv3xxxtqq3p2x9q0wbn1ssm272wv9qhqlykd2mhe3dzsoxe0z218gng9t0xvif9d5\",\n    \"uri\" : \"https://web.example.mocklab.io/067406\",\n    \"issuer\" : \"rb825h6fectcabjrcdpu2rpf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38342363-f77d-43b0-bd9d-c09ebee9878e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.028979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "bbf3506c-cf56-4e72-8d84-41309ca450f5",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F100919",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Numquam consequatur sit impedit id. Temporibus necessitatibus sed consequatur debitis aut. Assumenda aperiam iste sequi. Quaerat eos adipisci.\",\n  \"error\" : \"5cf1ifimssd5tvjdg5jufa4qib8rii598v80degf3po0eckkooyjyu5tt7r8aphuz9bwy59dbyxohmjlyneimwgbny4t3nc7dvkod\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbf3506c-cf56-4e72-8d84-41309ca450f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "458b2471-7cc3-4902-83d5-f4cfb9c2f982",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F807838",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Sit quo officiis fuga sed laudantium reiciendis ea. Qui corrupti praesentium. Consequatur placeat ea eaque unde sequi sunt. Illo praesentium ut iusto.\",\n  \"error\" : \"3093g15rm11vl55ifidnv3h75khlztcpk5ej59ib5ydpfyti7tei68ypzvae69cq0t4yuooc3izd1ujhg6paas6ejv5xoiwcjs21u42j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "458b2471-7cc3-4902-83d5-f4cfb9c2f982",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "1a87fa76-fd7b-4f9c-bd09-8febda855305",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F242420",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a87fa76-fd7b-4f9c-bd09-8febda855305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "54926ce8-c690-4714-ba96-029411582b23",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F794852",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54926ce8-c690-4714-ba96-029411582b23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "8722dbe9-67b5-4077-8445-1988fc680211",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F252538",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8722dbe9-67b5-4077-8445-1988fc680211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "6cebbe3d-3c1d-4fce-a15d-c4c57290ed9a",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F100713",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "6cebbe3d-3c1d-4fce-a15d-c4c57290ed9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "d4970fb8-cf82-48a0-b245-12a629e95ab3",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4970fb8-cf82-48a0-b245-12a629e95ab3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.026035Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "e988f5d9-16f6-46e1-b9fa-3dafee9954ec",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e988f5d9-16f6-46e1-b9fa-3dafee9954ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025977Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "43af10bc-fccc-435e-87db-fb50457d2025",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"F\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"Y\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43af10bc-fccc-435e-87db-fb50457d2025",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "caf23061-fe38-47fb-9d58-8c084dbe97f3",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "caf23061-fe38-47fb-9d58-8c084dbe97f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "ceecbac0-5aa5-42bb-9df6-8da0ab7df2e0",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ceecbac0-5aa5-42bb-9df6-8da0ab7df2e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "3b3dfbb9-89a4-48c2-88b1-455648a28cac",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"T\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"c38astiqk47cl6ra57wsg4bpk9ktf74nzxqgmo7f7nns\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b3dfbb9-89a4-48c2-88b1-455648a28cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "52db424b-4f14-40b2-a66b-b2b536bf19c1",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "52db424b-4f14-40b2-a66b-b2b536bf19c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "3d71d205-744f-4f95-8999-a94511d02e1c",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3d71d205-744f-4f95-8999-a94511d02e1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "bf02321c-eac6-4e67-81be-15a67dcadba4",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Saepe facere nemo. Tempora porro est. Nam dolorem reiciendis nobis repellat fugit.\",\n  \"error\" : \"48bf10fidhb1crc6bse42t38etuanqp6tb89rc3ozmwj3mftnpnbmanvgspqhgylxv7z8cocqs43fb042w1hp7hjz6i55pnjuistlqln57yz53ad6ymg6ayyz8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf02321c-eac6-4e67-81be-15a67dcadba4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "30049f68-9d1c-4bdd-bf95-9d74dc01e1c0",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30049f68-9d1c-4bdd-bf95-9d74dc01e1c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "aad0139b-7eb2-4e8d-85f3-e0db72fa1d48",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aad0139b-7eb2-4e8d-85f3-e0db72fa1d48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "4df30c6f-efac-4960-a54a-0359d3ac4809",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Sit incidunt quasi voluptatem aspernatur dolorem. Et aliquam tempore minus odio cumque modi laudantium. Est suscipit soluta aliquam unde corrupti veritatis est. Ut veritatis ipsam quia.\",\n  \"error\" : \"qrl1p9bkmytucbfv0o7h23pdo2a0zmxz4epjc6s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4df30c6f-efac-4960-a54a-0359d3ac4809",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "3bc483d5-f9e3-4645-8126-1ba38c9d46bf",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/317524\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bc483d5-f9e3-4645-8126-1ba38c9d46bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.025159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "526bcce1-ab70-40f3-a510-5c7b3c23dad8",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "526bcce1-ab70-40f3-a510-5c7b3c23dad8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.02503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "533d8340-ffac-4e8f-89f2-8b75b0672374",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "533d8340-ffac-4e8f-89f2-8b75b0672374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "ea4a268a-193b-46a7-8a58-c07582ad02ba",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea4a268a-193b-46a7-8a58-c07582ad02ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "af9acdb6-7555-40be-a685-859ff4b5ca85",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Ryan Fadel\",\n  \"label\" : \"explicabo\",\n  \"example\" : \"yceooo9zy1txwh8klczq1e1hm7rya79z2fjbcoe2boijjua7sn6yxze4ad7bnhfo8si9lx4ebm2kihkj6iinpwg\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Vena Becker V\",\n  \"label\" : \"dolorem\",\n  \"example\" : \"w271n40rnv70ydx1jfwwydhf0zfchy73vv3789nh73w8w4a66y0wnqinkx2zl5fa8sc2y62x3f66k8u0au6be0zrop0p5bhufptuzgfylsty11iux4ylsypfxllc11oa3puw6eb93r5sfr12o0hq4hbusjpy3xdm69bqxw52j170fbpg3\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Aldo Gaylord\",\n  \"label\" : \"et\",\n  \"example\" : \"yyjcv1piei6u7olq71cpdxho8y00akjrwrfqj1qtr06fjmiy03kv3ccyidr43mknyf4koys\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Andres Jast\",\n  \"label\" : \"ex\",\n  \"example\" : \"dybz8564mmmildtr7qe3wfflxknt7980i7ljx3aebot7hkxj6f2wcorn0ggqu1gec0sntjn3an\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Preston Crona\",\n  \"label\" : \"magnam\",\n  \"example\" : \"rl1ixz233bq04u88q8gn64cg5j8jei9dx497mptycc3g1bnsikiwra74ya6ouwuisarihbpny6o2dmhj5ahghadbqgr5g6dgrpj17emqt2939zslizlxd9n7qm4qf3vvjgbrwelfuipvdqufl1tghzfidfowlw\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Rosana Shanahan\",\n  \"label\" : \"fugit\",\n  \"example\" : \"7quso5rw0wikf2t28ar25fgncaqxkpsyb6zu44bqoqrkyautl6qdvhynz0o1fp1jpm1lovgszyg5y38th78lzr6xzyfs15lz8r200k5vhznz8bnek8r6w3he0wfafhkjdc82x6ueu\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Johnathan Cormier\",\n  \"label\" : \"incidunt\",\n  \"example\" : \"i93l6yyba57dafivb975xjb55vc0nx0290rkjk28aw1g08w1l7f3aujmn45n7b1d8q7jw9bi4y0hrwxt31wkwb2ae4f2ekn7ce2icqaxvcvyeuli7tyq78ygwh7f7f9ohe4to2bs51qt67fdyt174o5h9gywugch3ku8z\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af9acdb6-7555-40be-a685-859ff4b5ca85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "46f9f283-9b9f-40bd-bdef-cc5edc429265",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46f9f283-9b9f-40bd-bdef-cc5edc429265",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "4a5e871f-8374-4eab-9fdf-35c9a06bf025",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a5e871f-8374-4eab-9fdf-35c9a06bf025",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024158Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "470beb9b-d014-42a7-b11a-d29e742473c7",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "470beb9b-d014-42a7-b11a-d29e742473c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "1b347077-2e8d-451b-a26a-e4d7b48fdb2d",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"6b48\",\n    \"name\" : \"Fatimah Paucek\",\n    \"description\" : \"Beatae sed libero voluptatem et incidunt. Id eius ab in nam id. Debitis magnam voluptatem cum id aliquid. Quisquam velit vero natus in vero ex earum.\",\n    \"categories\" : \"rytgzp3la0nn9o5pzxdbiwherxqm8v509j0dyzrylvwk3a\",\n    \"orgid\" : \"643i\"\n  }, {\n    \"issuerid\" : \"j7m9\",\n    \"name\" : \"Rana Donnelly\",\n    \"description\" : \"Numquam magnam iusto eius deserunt sed dolorem. Officiis est et voluptatem laborum. Quia sed qui a sed.\",\n    \"categories\" : \"6f9b15mwo8g6lur0vvwqzngely2mo5y8bveihmbb47z02kvs57ol2ttshq30rho0ssebzhjkdpg43uns1gq9tw5pznkr3nrw05z2ww94qainf0qubl6co7q0x2jr4m3m08zbiia\",\n    \"orgid\" : \"56d3\"\n  }, {\n    \"issuerid\" : \"3kev\",\n    \"name\" : \"Domingo Grant\",\n    \"description\" : \"Suscipit rerum repellat dolorem et voluptatem. Quia ipsam accusantium eligendi assumenda. Excepturi recusandae exercitationem sit quo iusto ut. Voluptatem sed neque nostrum velit rerum sequi. In et it\",\n    \"categories\" : \"9tb1ivxm3dbsh6y6fhhb7ur5oko19we8jw1sx1314jmbqgcyszuisoelp8ahm7m7nzlynzhmrihigajt2xr5033ohs3kqlwiwbhctl956woaakeu5126evczkkplxtd\",\n    \"orgid\" : \"z9ae\"\n  }, {\n    \"issuerid\" : \"g1a6\",\n    \"name\" : \"Preston Braun\",\n    \"description\" : \"Id minus accusamus. Sed iste voluptas et. Enim officia ut velit rerum ut.\",\n    \"categories\" : \"fl58gh4uver6kw1mydag89jx2mnm3rall0gqbns9qlf1q8p0tpvug32\",\n    \"orgid\" : \"yvx0\"\n  }, {\n    \"issuerid\" : \"43nz\",\n    \"name\" : \"Wesley Green\",\n    \"description\" : \"Nemo deleniti aperiam et culpa commodi. Rem vero veniam ipsa suscipit non vel. Quod doloremque nam et.\",\n    \"categories\" : \"1utszgl5iea6l3rayarvy5oac0ghqa9i593eriwx8woa2uf4j41e26xstgdvtapv3l6l087fxowcly8kb7dxceqmyrld48bs7gdth2ci8vmnmkozsvgj9skjxds33uyyts0p6wcaj0ct3nb88ypsckr84mjdhfbg0bobgb7kwaf\",\n    \"orgid\" : \"xip6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b347077-2e8d-451b-a26a-e4d7b48fdb2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.024016Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "6d715195-1f47-4a7d-91c0-b12efb2b5a91",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d715195-1f47-4a7d-91c0-b12efb2b5a91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.022575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "5ad32c54-a2c6-4998-86f2-89b1147b28df",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ad32c54-a2c6-4998-86f2-89b1147b28df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.022517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "71abdc08-35ed-41f1-bace-4a1afddcf0d5",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71abdc08-35ed-41f1-bace-4a1afddcf0d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.022455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "06445b8a-f14a-4686-8740-eb759feb37fd",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"46c02c522p18aflpttjzjstz3ku29exgpx5lwqrv7affxuu1my3r2n57vgmc88w7ulh61o369tmzcwugl2eyl63xdjxuvu0h8mjsxgrt5ii8a0jgmhj3y4yayrs8lla0t08t7q6p5hkuob\",\n    \"description\" : \"Voluptatem dolorum doloribus vero nulla est magnam. Aliquam consequuntur ipsam et. Aliquid facere officiis temporibus. Ut omnis voluptate sunt praesentium.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06445b8a-f14a-4686-8740-eb759feb37fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.022392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "03732653-2b74-4e09-971d-b61767dd77dc",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/81n7",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03732653-2b74-4e09-971d-b61767dd77dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.022241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "06f4b3d5-0762-45a2-b954-1cc0aca8d058",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/173u",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06f4b3d5-0762-45a2-b954-1cc0aca8d058",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.022119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "ea361c2c-1172-4344-8dc8-2593d3c146cc",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/7n65",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea361c2c-1172-4344-8dc8-2593d3c146cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "cb265a96-a21d-4bf0-b345-10b4a204bb98",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/ftz4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb265a96-a21d-4bf0-b345-10b4a204bb98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.02183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "cb6c6e62-c49f-42cf-9a49-16e0902f3024",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Voluptatibus cum voluptate architecto nostrum harum. Rerum voluptatibus voluptatem consectetur cumque. Officiis iusto atque nostrum ratione. Sed molestiae facere atque autem.\",\n  \"error\" : \"yq54e73dgnlhh1xem7a21b26rklx1skmxxxtlvqfcuer2vf6fhmrgrq8p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb6c6e62-c49f-42cf-9a49-16e0902f3024",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "57c7bb09-cde3-436e-a03e-bdec2e6c7a05",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57c7bb09-cde3-436e-a03e-bdec2e6c7a05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "f563142c-d9c2-4678-8d93-6868b09540cf",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f563142c-d9c2-4678-8d93-6868b09540cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.02141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "be738a67-379a-416f-bb37-e649033fd228",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be738a67-379a-416f-bb37-e649033fd228",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "7dfeffa9-bf0d-49c7-8b9d-cdde9980fa98",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dfeffa9-bf0d-49c7-8b9d-cdde9980fa98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "13c1b19c-0398-47d7-a01a-23b6ccd46d37",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13c1b19c-0398-47d7-a01a-23b6ccd46d37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "7d69b36c-7608-41d8-972c-ea01a24d2704",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"o72rfkm9s754jr58iqrt\",\n  \"items\" : [ {\n    \"date\" : \"2023-01-24T13:10:17.020291Z\",\n    \"parent\" : \"va5owfsw8e4ed5dryhahyoooxgaaqiq8vpq6mjnatjf5koddjxyijej0bs1edtr7bnuf77fcierekc8cat4zy5hu0rk7n30k6m4ho3h7jzprxt89ic1jj63mbs29rw9as3ll57\",\n    \"size\" : \"nxg\",\n    \"mime\" : \"koexkniuh9b777d2f6s6gjcn9zw7yptof7mf7uxhrji2ti8gw9c2ayqmyezxlcy5bmvhi2l1mk05use98c470lptxzgccq3vjnu1ngfjj54bossclofg8aoncxhe20x5ry3p0q4i1tjt4m0e5wuqvv7gq42a57ljs0hvm6u7cxwva286fhhmdba9ci40\",\n    \"name\" : \"Catherin Davis\",\n    \"description\" : \"Laboriosam aut a. Dolores consequatur dolores. Necessitatibus fugiat animi accusamus exercitationem est adipisci. Similique excepturi neque veniam laboriosam nobis.\",\n    \"id\" : 189079894,\n    \"type\" : \"zwy8nx6v6wq1aun88nsaep4dcqw6d1fen7vv3nyqvxfefr6vjiqes0w5aeuxdu4rfz7s1\",\n    \"uri\" : \"https://web.example.mocklab.io/010148\",\n    \"issuer\" : \"d5f8pa6dqh1ph55i9tqbqkm6zr73cc9jw30ckl3cm05au6l8idhvh7zdmh51gdn2caz5l9x9fx5dq4f1mgtrlxvtptkjxvqesuxs9hldt7p3uh3hcdua6q\"\n  }, {\n    \"date\" : \"2022-08-06T12:03:17.020597Z\",\n    \"parent\" : \"0yappfsw1gy029ewq1sxd9bppxl6ry7sab7gaphyr9p5kyjv35bgt2j180zmhon7cevkziiwnzxdin83aiufkbq6h12yygnpa2fa01fq7\",\n    \"size\" : \"4zkg77eksdfy0qsx2rho6krm8utklhtl1xpdmmyr4oyoepu42xwohgfzquj39dtn0xl6u047kidkuy2ny3nrr4vgdr0ddyieumgg7bsh4uoa3jpz3drh5k33ecqoajw9qh2ji58r79umn7qik2j2xomyxl2qaiq0m1uzepavuapz91uy6zp5dso0dn80jqsk\",\n    \"mime\" : \"zhsle45hibbc9q0y2am51dnzmafwzblx8rhj98wyntb1femfgljtodjyb2cksrjok42ehkakkcfhnz7mbdlctf0p4ghps26tq9bmxxjw3jczwdc89vil5rhbvic9r0imapdr5yyudcvr31h1b7tyz2rx2an52q07rya12\",\n    \"name\" : \"Michael Bechtelar\",\n    \"description\" : \"Similique saepe inventore eligendi ad quaerat. Necessitatibus eius ut quia rerum a odit. Sit et temporibus ex asperiores rerum. Sed perspiciatis error possimus nostrum. Aspernatur harum omnis est ut.\",\n    \"id\" : 189079894,\n    \"type\" : \"9mqdect4j66ye1l6ul072bc0ty6t21z0078xvcltknjx4dwf8dmtcf3bt0015sbea7fnwwyroo9\",\n    \"uri\" : \"https://web.example.mocklab.io/692505\",\n    \"issuer\" : \"tsj4sii1acc4jeonesu6prqlbaa5ik5410fvbzifmhfvoha64j8hismgd5jqqt76dt4qr9rjndbont1g47fdf4wb6unuht4ii8wxtzgni3rtt25memh0md94nslypw1znlvo36xpqh1zctzocisxd6zk7yig1bw2xwnsr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d69b36c-7608-41d8-972c-ea01a24d2704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.021008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "35b9ab7a-cb80-4263-bdeb-532ea6329fab",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F435867",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Temporibus voluptatibus est repellat enim. Sint odit aut unde ab et id. Aut et impedit reiciendis odio dolorem minima quo. Autem quo mollitia minus ab perferendis.\",\n  \"error\" : \"713n4de435awk4ne4ndrue87wa9fx65sa4kds7kv13otql441c4hba1vjgs5nu63fe5tk2i0m2v1a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35b9ab7a-cb80-4263-bdeb-532ea6329fab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.020207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "14e93686-d949-447f-9803-2e4bc6a8eaab",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F803026",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Voluptates labore sequi voluptatibus. Iusto totam est. Et inventore illo dolore rerum at. Vitae quia velit laboriosam est doloribus.\",\n  \"error\" : \"10uyb9fk89gbfbpdnkwi60mgnb7sxd46fl1xes42iuiqpy1rha6nlvgl0ef629bffdt9qoc2ro0jxuxssujrakv5i0176fw5puo2y4r3mno22gsf6g26is7ggxr9ptnjplg8m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14e93686-d949-447f-9803-2e4bc6a8eaab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.020047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "b9c7c9d8-bce5-4836-a51f-526808f01211",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F743311",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9c7c9d8-bce5-4836-a51f-526808f01211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "8ef752ff-866b-436c-b995-4f3986b2d2d1",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F722910",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ef752ff-866b-436c-b995-4f3986b2d2d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "1ff3f2a7-4f89-4f88-a18c-30549f12da01",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F114262",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ff3f2a7-4f89-4f88-a18c-30549f12da01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.01963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "e43f1e9d-c020-47d9-9633-0768575ab161",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F779327",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "e43f1e9d-c020-47d9-9633-0768575ab161",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.01951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "e6162fff-7d6f-4061-8f24-6518e512638b",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F510946",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "e6162fff-7d6f-4061-8f24-6518e512638b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "bc11555e-07cf-4f96-8483-39a26b3576c4",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F745980",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "bc11555e-07cf-4f96-8483-39a26b3576c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "afdf2a73-e97c-4137-b6ae-4f6f72d5fc7f",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F887115",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "afdf2a73-e97c-4137-b6ae-4f6f72d5fc7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "bf016554-99c0-4ec4-8e1d-138e083b3bf0",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Modi magni praesentium qui ut aut magni laudantium. Maxime sit consequatur dolorem et non ut quia. Voluptas earum similique quam illo perspiciatis porro. Quam reprehenderit voluptatem. Et cupiditate h\",\n  \"error\" : \"aze13xesqjghz99u87mzvh9005hl37w7pki8qcgmylbxsqwydqx1tahnud5la5zou0kmx7vz5spdvjweu98jqg0j0buutauwxs1yt1vegnysncya4lryav2bozt0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf016554-99c0-4ec4-8e1d-138e083b3bf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "5bbdf53e-0a31-42eb-a388-91d1fb158cb3",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bbdf53e-0a31-42eb-a388-91d1fb158cb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.019012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "b840644a-29c4-4310-a1f4-0eb411b6fdb6",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b840644a-29c4-4310-a1f4-0eb411b6fdb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "d47bfc44-83a0-4249-9c8a-d6c69176d8b4",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"0lmh88i131qywax7nrxqjd769psxfmeli7pb\",\n    \"size\" : \"z1x115w11adm082krglf9rilbmdkj5zxu0jztcxlf9lrqwpa7\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d47bfc44-83a0-4249-9c8a-d6c69176d8b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "6d811c78-4f9c-4191-9bad-5923f81159c4",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Vel nulla nostrum et. Quo est necessitatibus quisquam laudantium et. Nam eos sunt dolores commodi id dolores. Sit et dolor inventore et aut quasi.\",\n  \"error\" : \"tlkv2x50mxiup1zc2snmxm6t06smfswla92dtuidts3rudj19wfqjbvmj6tadkgfwm1sjw5o995mvnr923qkina2phhk5ya8ewtaw8jry8c5ncn2e9rgt4hd2151b7mx4b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d811c78-4f9c-4191-9bad-5923f81159c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "ddc6da11-ff87-4d88-946b-456bf9f4c438",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddc6da11-ff87-4d88-946b-456bf9f4c438",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "9dae444e-8f07-4839-829c-703292fb61b6",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Dolorem excepturi distinctio neque sapiente. Quibusdam officiis consequatur laudantium non molestias sequi. At earum voluptas. Nulla similique consequatur voluptas.\",\n  \"error\" : \"l66ap2j2i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dae444e-8f07-4839-829c-703292fb61b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "20e80384-ce5d-4ef3-961a-73b93eb6814c",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20e80384-ce5d-4ef3-961a-73b93eb6814c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "b4b9bf27-5b92-4f15-9480-45a54cf660df",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "sutevvte0okrtrzu4usowak1wxd8hrzpzg9lhd1bumoilen3qyqyagnf4r"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F958950"
        },
        "state" : {
          "equalTo" : "Virginia"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b4b9bf27-5b92-4f15-9480-45a54cf660df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018376Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "72b011bd-8330-4b46-83f4-238caf1a79cc",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "ftpop11sqyxeiju09ydzn3o15uv8gorqe9acm307l2qt33dczq23twiuyh1yd1f6ca3ypyohpmuxoa8pr1gd6t32s8p1yqx8anvoax7nonvu3yxbbpn4fgcwttc70inum3u50pn9nx16knlppnosr1grs9xsfau2m0927lumrhv"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F228702"
        },
        "state" : {
          "equalTo" : "Alabama"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"jpsk0h6px4ue094q9an44bs1kqt24v49h7zmi3gd07t3y4l7fkfgbs1d182sgfk8p58tw8k6jbfzvzadurbcwiyze87rptyy04vnw76w1tsm14txalu09jrh63tzs45c5agqbdjuiv41qa0i64183h0l757htkxyxviop4m9oa7m8eemzq09y\",\n    \"scope\" : \"qj2cr9t4abxhwa3875g5lwdiu39ufr7kj7uecesxn9araau0mzspxyvcuycpw4wvur3z4a\",\n    \"token_type\" : \"lq4whnv2t8vkq2iqcgcphoh\",\n    \"expires_in\" : 6186796921313960223\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72b011bd-8330-4b46-83f4-238caf1a79cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.018216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "4a1e79cf-b798-4994-a1b9-c28ca66d533b",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a1e79cf-b798-4994-a1b9-c28ca66d533b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "6b139e51-73a8-4fc5-830c-a7c3e735d9bc",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Est ut debitis quod deleniti optio. Consectetur sunt sint possimus occaecati aliquid. Ut molestiae dicta fuga praesentium.\",\n  \"error\" : \"e9y4e8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b139e51-73a8-4fc5-830c-a7c3e735d9bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "dc29a0ef-9446-4575-b62c-2f8bcc025727",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc29a0ef-9446-4575-b62c-2f8bcc025727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "1d3f067a-9a40-4efc-a5ce-04789ebfce0f",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d3f067a-9a40-4efc-a5ce-04789ebfce0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "b447811d-54b5-4e1f-8802-3e384c33bd13",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Cumque facilis asperiores praesentium sunt. Quasi suscipit aut voluptatum consectetur. Odio vitae est ut non facere.\",\n  \"error\" : \"pkzi7mn09ct4mb4j4fwdvehv3qij1clb4eyvt4rhsfry23u7pjq3jocoz3m6c4mbgkraffjzaz6relm1l5tkzxvl2ncx2ty19q8unf9fwgs2n4dv7d08o9tilv4lmpv7apz3y4sacjicfy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b447811d-54b5-4e1f-8802-3e384c33bd13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "d9702a56-8cae-432d-adc0-05b388d42137",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Vero quas veritatis. Amet eos accusamus aspernatur ex ut. Possimus est non qui iusto omnis. Non earum rerum amet dolores possimus.\",\n  \"error\" : \"t8oljn7kg1zqrla2utdyotkj9kuh10eoz20\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9702a56-8cae-432d-adc0-05b388d42137",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "9d06abf4-79cf-480c-96c3-dfb633cb35a8",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Nesciunt distinctio assumenda. Quia omnis et inventore non. Maxime tenetur veritatis aliquam minima distinctio. Assumenda blanditiis dolor consequuntur odit dolorem cumque. Consequatur sit ex est itaq\",\n  \"error\" : \"6w8rhgaggttuvy0vyhe8i6c6fl8th0bei8umoz564afaepyyo0efary9waxpxpvzurpmn2rrm8dg3m95l4hxh1osxduuj69452cfj5b0cepwc4v5un5jua3e4c2utexmq4jxn0yc466207ptz3v3upnvjpdrqui8xjqszk8p025u47yvlh0iwegkf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d06abf4-79cf-480c-96c3-dfb633cb35a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "87def06d-71b0-4c26-aced-41d344ca3c19",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Neque aut repudiandae perferendis maiores quo perferendis magni. Et magnam in vero ut excepturi. Dolorem voluptatem ut sit et deleniti quis eius. Dolor est quis.\",\n  \"error\" : \"ehir1npsgphh0rcozqvqh8a6vtcrxfwl69novsm5he7n0h09stt5w2c5yloxisqmnd7u8kmeo2yigvhnmuxfzhwhbg3z5c32vxjx7rar7u23rhn15fyoz9m6l7oc2enwtayd5qneupumv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87def06d-71b0-4c26-aced-41d344ca3c19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "7076e8a7-eaf3-4e0a-a585-bab5f4568113",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7076e8a7-eaf3-4e0a-a585-bab5f4568113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:17.017146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 89
  } ]
}