{
  "mappings" : [ {
    "id" : "3b0ec8a1-b7a1-32e8-b9eb-858fd270b1f5",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dolores delectus optio modi veniam totam. Asperiores sunt harum assumenda nesciunt voluptatibus. Nam unde aut magnam ipsam. Quisquam ut qui voluptatem tempora quis distinctio a.\",\n  \"error\" : \"qk4rnimieqmtvs86041isr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b0ec8a1-b7a1-32e8-b9eb-858fd270b1f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e87c628e-7bd5-36a0-9ab7-545ea89a8640",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"At sequi perspiciatis odio non nulla nihil aut. Dolor et officiis ducimus labore architecto quia ut. Molestiae ea ut harum distinctio. Minus autem ipsa tenetur ratione tenetur labore architecto. Ullam\",\n  \"error\" : \"g7hmbq9ut2jg85158x1o8g0lilkpt77bb0091s64ukj6li6173ubkw7h7mctpxm8ncg4bz83od6dcq5kw1e3f0lk7dsbcn7daelej0szk2kzsvfhfcans6kzjpczi10m2nwmztudhrsu6zp4pk195b3l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e87c628e-7bd5-36a0-9ab7-545ea89a8640",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7c935034-2ce1-3c2c-8e15-73cc7dcc3991",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Iure et ipsam ut non est consequuntur sunt. Reiciendis distinctio et nam similique. Similique quisquam nostrum eaque nihil nam nobis labore. Autem unde aut ratione quam eos doloribus.\",\n  \"error\" : \"mmdz4y562yd0qhfn6v89kkkfcbq1f5h7tvxah59xm177qgjabs2tm0h33st50g2i50lx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c935034-2ce1-3c2c-8e15-73cc7dcc3991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "89d59b15-530d-3622-bf3d-0ad3b54f2bc3",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89d59b15-530d-3622-bf3d-0ad3b54f2bc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "85d2368f-2747-32c9-b886-436cc6d1baa5",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85d2368f-2747-32c9-b886-436cc6d1baa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e6f4dc3c-cca8-3428-86d8-4f46b63321a1",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6f4dc3c-cca8-3428-86d8-4f46b63321a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "6d91f465-91f3-3941-a04e-bd8d4c048026",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Fuga ab numquam quos est dolore. Non eius quo neque quibusdam alias. Voluptas ut et. Voluptatem asperiores voluptates dolorem voluptate architecto aut sed.\",\n  \"error\" : \"ad3fw492ztp33kqk2u1ny8e6g50gal7bwc4okuhrfgjxsoax0nxy4hsvk2ngkgox8cg59yipr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d91f465-91f3-3941-a04e-bd8d4c048026",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4064a9a5-0463-3595-ad0d-0c27424b45bc",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4064a9a5-0463-3595-ad0d-0c27424b45bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "4a9611ff-c392-3ada-9627-f8e3358af3c4",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a9611ff-c392-3ada-9627-f8e3358af3c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "85ba11a0-79ce-3ba4-8145-29af3376340e",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85ba11a0-79ce-3ba4-8145-29af3376340e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "df9356fe-1618-3a16-8016-26b1eddac332",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Et facilis quibusdam dolores. Accusamus velit ut. Quisquam quam sint.\",\n  \"error\" : \"8zfb17zqx9mrgl4czip2fdful9b38p69ymi7krglu01kgebi3cirn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df9356fe-1618-3a16-8016-26b1eddac332",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "01f65584-2ae1-3c0e-b6e9-8e87b5db7e0c",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01f65584-2ae1-3c0e-b6e9-8e87b5db7e0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c016d3d5-eb39-35db-afd4-422230c2c6fd",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Rerum occaecati esse. Ea repellendus aut id quisquam fugit consequuntur nihil. Ea accusamus eveniet libero iusto odit. Libero alias doloremque et at.\",\n  \"error\" : \"dzwe3op9p3vkyu0gn7gxz9dhdehs5rbfrriwzwqsut0kw1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c016d3d5-eb39-35db-afd4-422230c2c6fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "eb3964fd-5ac0-31c2-ae09-3bcc7b44efd6",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Sed ut sapiente assumenda debitis unde consequatur consequuntur. Voluptatem possimus quia voluptatum. Commodi distinctio aperiam. Nulla voluptatem quod. Earum qui ut.\",\n  \"error\" : \"oy542kxpt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb3964fd-5ac0-31c2-ae09-3bcc7b44efd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "efd69660-2fba-3bb9-8d74-748b405a5eb5",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efd69660-2fba-3bb9-8d74-748b405a5eb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "3f6028f6-6067-3c54-a125-87e3dfc7fc19",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f6028f6-6067-3c54-a125-87e3dfc7fc19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "8d6bf7ff-1fa1-31d5-b851-c985ccdd9344",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"xqo5bnyj54dbm36eu30s4ij3cj1qmt6opzuo9cucd61vxkq8tmfvjyg6ulaxxj4nrbjnure4etchfkem7me76errwl4a2er\",\n    \"Rar\" : \"t52ytfsl3e63qqq082bbl323bgraiofdyoghyxzuhqynon69qqg1knpeej8rw1wvyaaqazjw\",\n    \"code\" : \"wd0f3xtx25i6oexhqmtcc60llt77dvs9\",\n    \"Signature\" : {\n      \"xmlns\" : \"jecpt\",\n      \"SignatureValue\" : \"lpke2g2bbo90i7hpsjt2s3e3la8fg8thd3n45dxmxlio1wl8oolu77pjx2xdb15hl0hvu5yvk5f5o19mdlnvb4prgjwwj4qr9b8xt4mzv0yeyjp8srbfbqefxqzo8t1mwpukumkt4r15fckp8alyvdrg9is8expqrhwle09tki94bqqlm5kezesccskd9un\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Robt Becker\",\n          \"X509Certificate\" : \"gh62ftf8y61y4l1ry99h154e5z3xoem5tmnskhfcs2z53txkpd927i7erknsvp1xfjzgty8w3witqo8l7dbus8366xu0shpr\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"l9ac2z5rlbg2vs0ipb2gee6w09bdxbolyv9dra80zmmp0ai4nxws2psyywc7opo179s9geysiuujal0pkwu1o\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"mi1akg4zeq5t115nehdmnjwipvaysfaqnrni6tl7it32kd5tq6j5ziie6r1ibqi8614\"\n          },\n          \"DigestValue\" : \"98e2b7vqde4s5l6rzdjpppwdp8rup5b46d\",\n          \"URI\" : \"https://web.example.mocklab.io/756273\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"p49yp5l6uoxc2gst175enib0cyy38cwds4g2n6v2mi1kuvpx6ux85t21zmsca6cddpuj7b5u1qdu9yc58l2dxlc84\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"rftd03ghikbcj20bblcfnxu0inwmnbz88ebjqyn1bszsrd3tcn1qg4w5w5ry1xdxfkbc7bxg7h64i06m2ma7kwrqumsx9lmn81eah66tdv6q7yp7efse90uwx27i1awbpbrftj50utgh7jcvamqvdgvi8kv3akpts0ftnfwq5o2c67wm5y5q6gl40dg6z8g3gsemu\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"7ib7\",\n      \"Poa\" : {\n        \"country\" : \"Somalia\",\n        \"lm\" : \"ztmeoilyk3khb7xgqg49alrrwz3an2pn5o939em6a2g6qgw648hg728fnqhcyjxf771n4wxynyqerd5686819715b47n2m94bu9ph5swi7g2jrxccv2e594jeawcaqxwgyldr1o2f2g15jxszvyf6w6spfwb3tol6qttb8hey3a51gsy5ps1uwa854bs\",\n        \"loc\" : \"xdz4y7jznhk914kctjui7c4asx9otlhjzie3pikalq24sroirxxzazaz58c9uc083maz5i1pq84l\",\n        \"pc\" : \"yzy5g7ew08b9u1lprw5v2wpy8dr31zuhgw8918hcbn54le4o2yuxo6pa\",\n        \"vtc\" : \"qcnxzs0g9qzg7aulzh6ouynmy2wm7t1jd9c46hir0vnhur0zgspo5e2rpq8s8dngy32cpls40fk4i7vgpnf61qodkmp2n3gyjcyanyl\",\n        \"dist\" : \"dziis2jzpk7b3ik5m86lxyl3vlt49o5h36oqjlj7px9v6k06qi29kuuy4c6xdl78utf6vr07pw9fyd6ow35r5bfeguryzgh00o0zvc6tinf5cnit8ybopg0cf83ytwsjmjpssrq6vj30j75ahvd2b6wmg002iq4zgvv9w\",\n        \"state\" : \"Arizona\",\n        \"co\" : \"l5ma94aq6goy1gdx5syhwptix4pnxtmczxs16dx7ys1piferhzuqc3gbsttz5oj7mpzy6ih0kngmfohtk4o78xry7g8b3k1d777of1bx1moeebbwjteb4epmygjau\"\n      },\n      \"tkn\" : \"w17mk66ulwd5zs6idbjpltat5o8lp8pq01dvmxx6v1mv023jjxqnhhsfh5ym9ed09m2sgzvvl7y1r5bnym2rimnloe66b3b7ocu7iotyozavb1w2bmjjyloe4a0w9y8qr79y8peb42\",\n      \"LData\" : {\n        \"country\" : \"Luxembourg\",\n        \"lm\" : \"u8lzyuyqzf9be6luar0t41zxl0k0trtmg1i66pde74ena5yv9\",\n        \"loc\" : \"w4con8p1c2syvyb69x5tsd70o2dc3o73ikl8ot6mt92xv1f9de2vsoke24rn73o6cbmtgj4a2fh2skhdtadd6p4a7rw7aho0lfghwdj8nzimu1xmwarrpkvp6ah4k2k12wyidvb9de8pgz7ljyvh3ahuomiesy16tnpa4lwnr0rnwvv9ga5366iu4bql0\",\n        \"pc\" : \"cyydyznehgbsjgxgnmjv5nyc7i1b0ac02ls9xek8yx6tdow4lav834rbzo\",\n        \"vtc\" : \"l91asop8jkasppf3wvgxfd9ifnubl\",\n        \"name\" : \"Rosenda Hilll\",\n        \"dist\" : \"32hr94wnsjnj7n7o02tk6layvj2mjxpnnhfacycrt8z4gtsud56tkwua5uikfeicxksa2p0542nn3uev51v4mujz6zbsfo0u92zx1nf2tkquyrr3dqds00p0w3tnc81hxg4kqn51xzd6jqovcy7zxr4i62dlyt0ibexbdema2n3zbxte2uq3vyg8pcrat\",\n        \"state\" : \"Texas\",\n        \"co\" : \"pmp9us8puzxbrym0mnk\",\n        \"lang\" : \"jgpzh7me2kbl868iqa0a\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Genderfluid\",\n        \"dob\" : \"1928-04-19\",\n        \"name\" : \"Tom Farrell PhD\"\n      },\n      \"Pht\" : \"mc3qf183xq89mo3g7yf21cuel7qy7hsac1b8v8s9srx2d1jgpxtaxu259ffeppuvqw3sth2xr7mmfmdg4pkee4rfgdqmocy2se3hia3gjjckcj8bhym234o72004os4ehujx0ie8bvn\",\n      \"Prn\" : {\n        \"text\" : \"7355s4w8s6730z73oh4xewmf5nl6y14rxpqam3llq6omx6gmjfsascn39ewqdy8v466n3d02li5rfhxrwpqc31o21c4xed9mkr5082c3yx3s1xsh0o8dbsdjtana22v0918ttr2xiownfd956kz7xrtbw7k70m9nbr9i1iqcvjm7q5lq\",\n        \"type\" : \"8i36ed034zmuaig5xchbu451gl4yk4pfyzlpd52wfenu2bu2vt9zuo0hcsn2tz0dmx4jq9usx9m7y9b6txkpihio9frkg5grn08utx4\"\n      }\n    },\n    \"txn\" : \"2kavjm1h0esn85u2phsuejt7arh6zxmfehlsoujzdjkahmtgznq3c9b9ygowmfhov8z73bpb9onwdtl4asp22yujbmdc1wecf9tts47gcsnypm9m4i60o13bo0s4u2ut85d18j0dlzyfgtpqp8jrunprud9zou01nqwg21s3xxubb9m4n69q985xeisqojpxguqhzlsb\",\n    \"ttl\" : \"yre1go293bxhwbs8mi03bu741527tj0lmpc5m4kfaxilv3z0ezqagvnse3yrqecvejd8nofi2file65jjr2surevb0gj0g43fugzr17c842ihm1c\",\n    \"ts\" : \"wjje8kc66fby68x3ixviguww10liqxckzuaeq3sdrndl25jfl6rv9ya4kvquhbb2zb4c7n6ve6kr00rwcbl0o\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "8d6bf7ff-1fa1-31d5-b851-c985ccdd9344",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "38d88a03-3e6f-36a5-8eae-7c5a0b69a783",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Aut aspernatur distinctio. Asperiores sunt laborum iure accusantium. Dolorum excepturi sed est porro at officia sed. Beatae sequi soluta non totam suscipit totam et. Et similique nam occaecati est.\",\n  \"error\" : \"be5j2rxd3k65pulmraczapgwxp0v0i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38d88a03-3e6f-36a5-8eae-7c5a0b69a783",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "58e66a37-05eb-321b-bf92-28bb3b5e2662",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58e66a37-05eb-321b-bf92-28bb3b5e2662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "694f8554-1c68-3468-a168-72d8cfb9ebab",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"z6hgsbh4c2dd84fqyqcyyg1tqwd3tcw3ja68bsmkioelja4095yepyivhb27rk8kyayx4ok4v1v2psnlcxo10gvk224v5ochbp4m59pu8s3myxs00noyiunwsno742ceb12hk1iap68rcgcdx9d2f4vfcviib9ow5ufkobhq5i8ewfntuji\",\n  \"items\" : [ {\n    \"date\" : \"2022-12-11T14:25:13.506297Z\",\n    \"doctype\" : \"wl7fqfa7asnz0vfpnrzdoicf72bx0aza6mv14ahqdw9zeg88fxkg6vxiv9qh9di84izqymh60wrbgpa1zo70t8056n16p89245n7nrxlm8bsm4id0gh258igee2rz8n1vj7bzzhl14zpla7ci1cle7mrc8ntc9kld1z7ns6nbppn83ae9gue1b957wbbqypdi1756ms\",\n    \"issuerid\" : \"05dj\",\n    \"parent\" : \"ndlakc8qhvt4dv1aqwagsb7c3iyz56vqu3s9pdfdcydwxwbwnlj0s2ab4y8r4wqy2kn9hf7sxku6gg0mozms0ggfnoq4ki6b8w8mm2kz93x7t2v58h4zoettxk0dt9u4ce18yfjtkduhiqpgolplgby5w29aiou3t8nncx7jx0t6e9pgrxp\",\n    \"size\" : \"v828ll51ilvsxs4h8fhww9w2h322dugrocrz6zhscaye5mtrk4wvv6b0k7n9c906gy1dsz45kavdm2kzi93y5ypxtkd7q8ssh3hzuggzk5rfawbpirxm59shavgm0nig6yazqi3ie11h79lapxqjhf3lm8vsdeg7kh\",\n    \"mime\" : [ { } ],\n    \"name\" : \"Genesis Littel MD\",\n    \"description\" : \"Incidunt quibusdam quasi. Exercitationem aut facilis. Quis beatae quia est et consequatur consequatur soluta. Sed ipsam illum fugit consequatur et est veritatis. Vitae expedita facilis assumenda quia \",\n    \"type\" : \"h77ffc71zm41w6esq3vzsxz2b7mi2y9cm7ek3hufqdl7bdg2ezgrhsjptjtsy4h6qv9bayhlk02r9rklv9exj32xs3qqogdiocci4ej9a6gprmgbg6yzygebhvmhzj7glau695eqahb851u7ty3ndadzbi03djxl8ozf0r\",\n    \"uri\" : \"https://web.example.mocklab.io/410137\",\n    \"issuer\" : \"ieae18guij1c8yf14fbwukdqaa7oq2808cnoibd7lrbmnhhjfkhggloyhlo203eh9xntalebph9wi4ltf0zevx5w383do9khab9o45sr269icry7id9w2ax748ar152ne3cz1zjvsecsi81qmdowh3gkgt\"\n  }, {\n    \"date\" : \"2022-12-14T14:30:13.506633Z\",\n    \"doctype\" : \"p51d6qr5hi3mkj75cvnphb5eoxr9c542mokmkv71qamog1vhrgfn771a14d\",\n    \"issuerid\" : \"16h1\",\n    \"parent\" : \"0l6m9usyn3n3owz6l6xfw5obf4nyk0gt9weuyok4dopa9d9c8zatrh1cpf79fxz97yafowaxvilbc0qanaiy6m0avn8h8v67nmnpdp96vb7vvykxlxhe5dnf2ukuyedo11d0k4pn98zsp6lh3qfmhki45jc6d9p7ssjhxcinupko2st9wzjcoqf0\",\n    \"size\" : \"ahb16cdqnz60cpvyrxkxa3lk3wgh6wclx1zk71tmqy16tlesqcb9xyvgx91aj8vzmjijyvizlzw504ucim79wg5vlvj918zud2gcir1d0u\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Liliana Crist\",\n    \"description\" : \"Eveniet sed odio. Quisquam vero vel praesentium. Ducimus ipsam ullam eius.\",\n    \"type\" : \"gu9eo09knsvujmyv\",\n    \"uri\" : \"https://web.example.mocklab.io/394679\",\n    \"issuer\" : \"ag2tpe2of2fmxbbke83boz9ht2e5j701vpx921xpejx3kxtrlnbsa1aclhfgdxvaq504qohagdz50g2jfudnh5781enbeuny9k1wu9n8sylxvvxohpno2ebkdlc8y9z6ty1c166e5z3psvv31quz9sfmly8wre8tu35r4\"\n  }, {\n    \"date\" : \"2022-11-30T16:44:13.506941Z\",\n    \"doctype\" : \"hfk63gtxtmgbr0fz3jrdtaslal7xgrfqlfych5q497dr2ul2v4t117kftzz4f\",\n    \"issuerid\" : \"9371\",\n    \"parent\" : \"rkvcnboq0xrdu81uilvfxkkionqj6\",\n    \"size\" : \"rqetvsrxkuwhzv2ydzslyonsz7ca5t5ckgln6qnc92i43ng2jh43jpzcy9nnwvzohczq5kwrv0zgp\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Patrick Sanford Jr.\",\n    \"description\" : \"Iure saepe quam ea consectetur culpa ut quia. Pariatur repellendus in quis. Inventore quibusdam harum corporis atque harum aut impedit. Quis molestiae architecto quasi et itaque eligendi et.\",\n    \"type\" : \"0ip5r1wkee9msucd1119pv52sutw5joxp2yir9vj3e4l4huvfcehu4611xnzcbyrqpgia8ietcbxw6et3qfinq19lw68tc17q15d31ypz1coec4g9t54dvk374br3eu9f64\",\n    \"uri\" : \"https://web.example.mocklab.io/630188\",\n    \"issuer\" : \"7wfei77kxb2sr27121mmlyq6tao0gdxer3t0ftr93hpftj41lq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "694f8554-1c68-3468-a168-72d8cfb9ebab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "1b9d07fd-0a31-3294-bf1a-b384a10393df",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F926802",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Aliquid est odit autem sed temporibus. Explicabo explicabo aut non. In natus velit qui optio. Nemo a animi recusandae amet ex adipisci. Repellendus fugiat unde.\",\n  \"error\" : \"tflyxcogmqo9cmt8klh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b9d07fd-0a31-3294-bf1a-b384a10393df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b8eee406-9c36-3d2b-bc8f-3d100a5107ad",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F384023",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Atque dolor non sit tempore et ut aliquid. Quia itaque aperiam nihil incidunt. Et officia consequuntur delectus. Non laboriosam sed minima. Rerum sed vitae omnis et nostrum sint.\",\n  \"error\" : \"ya3srxtci1g1pnnbqhqag5xd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8eee406-9c36-3d2b-bc8f-3d100a5107ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "7c642eca-8ebd-3b36-981e-31460de1539d",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F635921",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c642eca-8ebd-3b36-981e-31460de1539d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "08fa0dee-bf93-32a0-8d39-b91222d505fa",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F893553",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08fa0dee-bf93-32a0-8d39-b91222d505fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "88c53739-41f8-3820-8471-7e590cdff536",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F329039",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88c53739-41f8-3820-8471-7e590cdff536",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "bb70c793-af44-34d1-920c-8380cfde30d2",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F476796",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "bb70c793-af44-34d1-920c-8380cfde30d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "7742b611-2fa0-35ab-9735-9172760b0181",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7742b611-2fa0-35ab-9735-9172760b0181",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "e316661a-4bd4-3653-a8ad-fc0394cd5e0b",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e316661a-4bd4-3653-a8ad-fc0394cd5e0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "b863ba3d-d59b-3b03-aa7b-bb3526afb61e",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"T\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"Y\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b863ba3d-d59b-3b03-aa7b-bb3526afb61e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "c48bc912-4dfa-3a13-bfea-87359c97395f",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c48bc912-4dfa-3a13-bfea-87359c97395f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "838acdf1-aff7-31c3-a69d-7481901a6fcd",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "838acdf1-aff7-31c3-a69d-7481901a6fcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "83c97d89-915c-3389-bf50-ec0af231f21e",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"T\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"19gqa6m72tssutpdvqix8f39jzr1pcq4lw0nq1ml80ooebfazxkmnb6zawaer5gd7vnf8e50140xc01jjh4a6z2yxwbxavc3ypsfsivfwtwvpsbne74jkmn1pemz6p1uaczb2fck96vmhn26dmovqmhhtvmcqm97fmyatvwzkwt2vpkxiclk8ush9zsgsjzh\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83c97d89-915c-3389-bf50-ec0af231f21e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "c09315df-1876-3576-812f-95cd01462ced",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c09315df-1876-3576-812f-95cd01462ced",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "9aa33a78-2486-3ea7-8519-6c85eed329a9",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9aa33a78-2486-3ea7-8519-6c85eed329a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "d5b01947-2904-3a6b-b0f3-44be084bb22c",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Minima eos et iusto. Tenetur perferendis ut. Quia eos ut iure. Dolorem debitis in. Ea minus ratione consequatur facere.\",\n  \"error\" : \"elmn91gc5jrjyiw6dpkcy2y43u3m8rfq8jhib03f72sf1pqelkwq5sbxj0dkrn3jgs2sbedzutfnns1ww0sm4qcznlowsdxs8wy7yqbb407lj1wi7epo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5b01947-2904-3a6b-b0f3-44be084bb22c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "4da4d6c7-b9db-3e8b-9017-f23cb9728b37",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4da4d6c7-b9db-3e8b-9017-f23cb9728b37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "32398e5c-e60e-352f-b078-b924dcfdc775",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32398e5c-e60e-352f-b078-b924dcfdc775",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "eb45d559-c47e-3c0d-bfcf-d56ba66827b9",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Totam labore totam corporis esse repudiandae. Dolor minus consectetur. Laudantium sequi tempore ea ipsam voluptatibus et tempora. Iure dolore enim ut modi et.\",\n  \"error\" : \"fv3vtqc9yukn7et9r5w4bn99qvqr0k42ham1gwgrupkau4od2thh8l1fktz0hs7p03tyrrkzwj0nevth14o8ruraq8cxar3jj6s08\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb45d559-c47e-3c0d-bfcf-d56ba66827b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "602123ef-50ab-3cab-aae4-e5944b6d2d5a",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/640666\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "602123ef-50ab-3cab-aae4-e5944b6d2d5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "1333298c-74f7-3555-8ff8-8f1d68b130bb",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1333298c-74f7-3555-8ff8-8f1d68b130bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "00dacff5-8b8c-3124-b0b5-89c26e1035ac",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00dacff5-8b8c-3124-b0b5-89c26e1035ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "c1fae308-decd-3265-a0c2-095a6887ed33",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1fae308-decd-3265-a0c2-095a6887ed33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "2382fd09-d227-3345-b33c-379b6c7d6188",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Mrs. Evangelina Bradtke\",\n  \"label\" : \"aut\",\n  \"example\" : \"ureltms1c196rklj93ieu4aqcr0nly81qux8z1skqgbmexhcl7qrwi8ufroygw6ws8r7hu15s12mq578jk4\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Laurence Leuschke\",\n  \"label\" : \"possimus\",\n  \"example\" : \"j\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2382fd09-d227-3345-b33c-379b6c7d6188",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "932e4723-0a13-364c-880d-2137c99e30af",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "932e4723-0a13-364c-880d-2137c99e30af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "afb92556-8942-380b-9a27-094d18c63844",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afb92556-8942-380b-9a27-094d18c63844",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "f947c8d5-eea1-32e2-88f5-6e3239eb8c5f",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f947c8d5-eea1-32e2-88f5-6e3239eb8c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "4f7b0509-e68a-3d17-badb-cabb6f35ee6e",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"07f6\",\n    \"name\" : \"Garth Rempel\",\n    \"description\" : \"Architecto rerum molestias vero omnis soluta. Nihil praesentium ea. Magni aut sunt quia voluptatibus veritatis et. Quidem optio officiis ab quaerat.\",\n    \"categories\" : \"ea6likyw0ooy8uuza9305ickn8jx1orkb4vllpjjp6ks2bpki4axb4ascbhy64z2nitfk5q6itz\",\n    \"orgid\" : \"b614\"\n  }, {\n    \"issuerid\" : \"4n4v\",\n    \"name\" : \"Mrs. Brandon Beatty\",\n    \"description\" : \"Possimus aut quia eius. Ut magni laboriosam. Est aut ratione quis beatae et porro magni.\",\n    \"categories\" : \"gsz1hks459szecem23wof87vx\",\n    \"orgid\" : \"m5zz\"\n  }, {\n    \"issuerid\" : \"7ak2\",\n    \"name\" : \"Kellye Sanford\",\n    \"description\" : \"Minus ratione sit magnam exercitationem odit maiores minus. Quis tenetur repellat. Sit magni iusto eum et.\",\n    \"categories\" : \"srdwd9rprgujxlb0kipt69i2tb0uuy2wykv5z0wvgb5jiru06fwzwggmvc5dc7thqyxer8an8fhfafc3987v31hr2uugsuu3g6de2rfxzf456js9johtb8horokpxxzeozqe3ylp9w9nexbayve0fhi1wmhkse1qqeplbupwfkhtxfxehezhgv6ie1rzluw4im\",\n    \"orgid\" : \"4r7b\"\n  }, {\n    \"issuerid\" : \"0lr8\",\n    \"name\" : \"Buford Denesik\",\n    \"description\" : \"Nostrum amet deleniti est quia illo vel. Explicabo iure reprehenderit sit est ut. Voluptatem temporibus ratione magnam.\",\n    \"categories\" : \"vz5e7sojueteah2mt4o7uttr6a00enkreaeb7jl4uiou52jhn4s0sh9rfda2zp875kxjcq4e06yelmfbsxf9s5dhzyd9g8hzplqq1zyys16ijonbzq23wv8n\",\n    \"orgid\" : \"q53x\"\n  }, {\n    \"issuerid\" : \"175v\",\n    \"name\" : \"Nicholle Harber\",\n    \"description\" : \"Aut accusantium mollitia sequi consequatur voluptatibus. Ut velit voluptatem beatae eligendi tempora aut facilis. Tempore maiores quia et.\",\n    \"categories\" : \"rrub92bpv53aj5pzfz8s2wvk0293viapb0px69vk2ugtbjy\",\n    \"orgid\" : \"c86v\"\n  }, {\n    \"issuerid\" : \"y75p\",\n    \"name\" : \"Sang White\",\n    \"description\" : \"Ut sunt animi veritatis doloribus ipsa. Ut eveniet qui expedita quasi vero. Illo similique voluptas blanditiis. Et maxime rerum architecto libero molestiae placeat. Quis rerum voluptatem est quisquam \",\n    \"categories\" : \"zf3h5brfgrnu8rxqtcx3c2p34l59w78ohqxyj8oakt506gkwi648zc\",\n    \"orgid\" : \"wh5h\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f7b0509-e68a-3d17-badb-cabb6f35ee6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "86b24ff1-11f3-3ebb-a793-8cc985a8d1e7",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86b24ff1-11f3-3ebb-a793-8cc985a8d1e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "661a418e-e7c2-32d6-9879-b69a4bdbf9f6",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "661a418e-e7c2-32d6-9879-b69a4bdbf9f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "49094da1-3f19-35ec-9a30-c4055383c7fc",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49094da1-3f19-35ec-9a30-c4055383c7fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "2204b37b-80c7-3395-8914-2149e2bf1a66",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"26nrjgebagkmbidtaah3qeffl4yzhjc9av34wqa04scvoz0kssdixpc7s0kb6mewrirjxt88t1hcyyicu1a7xd9wc81iqm5ca6b9mek3xhz4xkajnttcoclisdoddjljfviezobd7jxgllmygc5lovuhcly2jxuc0x9x4lfi78846oeef\",\n    \"description\" : \"Sed nulla eaque architecto earum culpa sapiente. Ea pariatur facere eaque. Dolor est suscipit error. Vel sunt eius ut. Adipisci voluptatum repellat.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2204b37b-80c7-3395-8914-2149e2bf1a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "ecdf9148-ed41-3741-8248-46be15c3a2e8",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/4r74",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecdf9148-ed41-3741-8248-46be15c3a2e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "808d4320-4c73-3c58-a253-d41e07f90035",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/2lz9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "808d4320-4c73-3c58-a253-d41e07f90035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "53c09b67-be38-3f0d-a821-1591a4a9fcb4",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/2vep",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53c09b67-be38-3f0d-a821-1591a4a9fcb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "bce721d1-bc39-382c-a317-a3761e12ddd7",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/19o0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bce721d1-bc39-382c-a317-a3761e12ddd7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "8147a561-a40d-35c6-8726-b79f1532c361",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Iste et omnis nam. Ad deserunt quia nisi aperiam temporibus aut odit. Ea voluptas ea fuga sit corrupti asperiores quia. Et illo repellendus aut blanditiis in suscipit.\",\n  \"error\" : \"mu236j6ir1coq7pomber6insz139\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8147a561-a40d-35c6-8726-b79f1532c361",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "ec4019c6-cd2e-351f-a7b0-87cc495d7928",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec4019c6-cd2e-351f-a7b0-87cc495d7928",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "6498f454-0427-3ffe-bf2e-084f352cfa8e",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6498f454-0427-3ffe-bf2e-084f352cfa8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "b14cfcd9-5ea7-3a2f-9461-57ba66588c55",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b14cfcd9-5ea7-3a2f-9461-57ba66588c55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "20381a6d-b5cc-369f-a59c-8e8bd209a79a",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20381a6d-b5cc-369f-a59c-8e8bd209a79a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "352eea45-dc53-3c38-903b-88b5714cb820",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "352eea45-dc53-3c38-903b-88b5714cb820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "d595a80b-5e98-35c7-b43f-7f9016b6c3f6",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"zl4gciu3tfzooj9kx5obugp3s35tdkz5no4az90e75yumrozik1jw442ouxvoisearesnakjzqg5bc3o9vl8iy6gsv6fnc93akppz7r1bjg7dkgbnn89a0pqbp2gx3chvraswi7017mxpe1hzjbsdsgopgg88p3o3twuult5xzo83y8tt8pjb0v9e\",\n  \"items\" : [ {\n    \"date\" : \"2022-07-03T13:31:13.499686Z\",\n    \"parent\" : \"32pw2pc6iub8rzjjhftbaiwvfnc8zzz9mtp62zbqwqkbh21kn13e8r0fj8ilrtocg9nqvf8tahxi7k9urna1qb\",\n    \"size\" : \"rdguwdiu6dv9builig50yvax7pui7j7py5o0gwobs78ya27k34acpc97yqfz2np8xv6k73ggasjh28vhpwl1iyncg00ag2327ivuiatl10korqtmo7mhsb4n0vpholxogbud1y7n37ip8tgd4ra1d6ntbyx1wmv5deszg1y2i8td3qymymx5376hve1jif2u420nex\",\n    \"mime\" : \"m6zgl\",\n    \"name\" : \"Spencer Waelchi\",\n    \"description\" : \"Quo a minus quasi rem non ad. Earum dicta repellendus maxime. Totam velit eaque ducimus officia animi ducimus et.\",\n    \"id\" : 189079894,\n    \"type\" : \"snsm6krpcyferiqv9wi4dv1oo9oy2r43jwhxwrwrxvxsqyrirugf9t4e3\",\n    \"uri\" : \"https://web.example.mocklab.io/092384\",\n    \"issuer\" : \"lm7up114rg35dnap85kvf41kuaxbqxym0o0f2nvx6euipjbdrsrtl0skclwe2byqvuxord1xusrkhobqsddkx9dp8jcrwwdoz3oeiwih0a65yagf8f54u1r4lnfu41hd83rsd\"\n  }, {\n    \"date\" : \"2022-06-19T15:57:13.499919Z\",\n    \"parent\" : \"g5id78k9z9lqor3muw9xpqgkuf7ivyhfavdsduqe11pnqktonyhpzmosr3ilaun8gxzjfyuelmph7k0myh25qhg1bq3kryymqvf4geqgfggqdxyqkvvh1fitz8isi9gp9eynon38mj7i6jm1t8hsaswmyiql\",\n    \"size\" : \"363m4h5vuuxanv2mg8fcbp4etidh5bwoblqpgpzprlsgxdlfuh2vg0bnh4t24x9e5wo924tiv7e066xogz3pc3wdxt66g6124jsxx8ly5fzl2ypwya4ooi1f60d0cny8ttugzblo57ky86tsacxlfh8q\",\n    \"mime\" : \"1mbf7xa4fa8adp21ndjh2xsjpvnfdbya6f4aswt5c1gvyrv4087dy6h8mkormpcm8tklect4pa8ychblmqbg8fl18ebyz0q6uxvoi33bx6kf1y\",\n    \"name\" : \"Dr. Dan Volkman\",\n    \"description\" : \"Ducimus veritatis nihil quia. Architecto non culpa suscipit aut ea. A eum nisi et. Quaerat et quaerat tempore nobis repudiandae. Maxime aliquam nisi.\",\n    \"id\" : 189079894,\n    \"type\" : \"5seeuf4gdfmsijurluu3vtak9gbgknrkhlpnf4ghw5wkcnpnem9vmxwej2y0enm2nmvnx2xye0d1ohh87yf5r5876jmvkw0vfwy83x2ny0lrtgeiz3kk28vm94bpdwiw1jg44d7t1i42zudpv3imgmwwtkppu0638unzbu9jfeq5relmrqct7r4ka8w1hlf\",\n    \"uri\" : \"https://web.example.mocklab.io/116187\",\n    \"issuer\" : \"3l3rgu932wteskupadrf1qjc2jgt0qtiutkch204e846l6vn3r5d2szkr5eybywsjqk9z31puqzmgy6rk4fpxlxvpn9yiivyt09h05dmr5\"\n  }, {\n    \"date\" : \"2022-04-16T14:03:13.500141Z\",\n    \"parent\" : \"5mck7f0lypn0j8tkkdy7di54p6o53vv3152s74mgylgkl294u42qmjv8ntznz3b3x9lozdp6ro6p8p2nq3847ls10dppjvrcuzf5hbkbm65\",\n    \"size\" : \"nna533wchyphpjg24165fl2vwgf9xxe0ddl478yc4jg2d79ef2zu4zgk3x64krhyx2mc1wg8cdpkwlmc7sshdikhl4y6ctrgqmk8hfrio69k675rc31bxnj5ttrdspwitt4477aldg71eyp170t8yi7r7ssiu8wgkk6\",\n    \"mime\" : \"qiwvx29e35uz78nuldgf8mxzcoknk7xt14kikh2cqiup933qp583123a9h3n7s86tgx5hgqh02oxsn7ef6jdd3qzmq9alria87b3u92fi64suafzpv4ghdby5d73nka1qv51c0g9bcyoqhg5rg8\",\n    \"name\" : \"Erin Schimmel\",\n    \"description\" : \"Sequi dolores quis. Delectus cumque tempore ab vel. Eum ex consequatur perspiciatis. Est quia qui qui omnis voluptatum non id. Tempora sint et voluptatum dignissimos voluptas.\",\n    \"id\" : 189079894,\n    \"type\" : \"i4sdgb8hbzg5jqh3vixhbjvrl066ankovvgpzp35rzgfd672oyyns0ncy3eg\",\n    \"uri\" : \"https://web.example.mocklab.io/861228\",\n    \"issuer\" : \"agqvdo4vlpwbhkz8to8fz6cqtz1612gnb92n1a6z9fllnrr6ygasiypjbi361kmn4vnncm0jqwajp2810pwzxjdj02rf64vllr390or7s0ppnjvkglrzosr74vn3lo929wlzj5embrwfkwwvqdlvc\"\n  }, {\n    \"date\" : \"2022-11-06T16:15:13.500358Z\",\n    \"parent\" : \"qjxcswkpm1g9rncgnhj7fzqb7rly4gyhgke539szps02ejxjl2cxmftxemsly8g456b1fyvdf114zwtgjlml0es001wrsfr3erzgw48flfv2nulhnxi1ycfl4zbaz2wk5snvnemksec8ejzjosfb3omsj\",\n    \"size\" : \"s2chqh9z6x6iobvox8b9hat6x4hhv7hhweefp921ms77ae1st\",\n    \"mime\" : \"15fv5m1yv5bec2zv0oa0wzum1rbyyit7sx7tc3aiz8dmlydqfuyty1t8elu4lcdn9p4rgzwv5ud0en5fu0pup2zoblkr0qhtvref7znb38r\",\n    \"name\" : \"Nettie Lang\",\n    \"description\" : \"Qui excepturi atque a provident dolorem. Sed neque ut nihil vel consequatur voluptas ut. In excepturi nisi sed est quia.\",\n    \"id\" : 189079894,\n    \"type\" : \"lq8ayt244zqkhgl0tob4okrfyj7rxzsnornbt2ybt5afdvvrl4jnd51ooqcvwgwmhi45irma9f6usge0kg3b34o3v30dhx2qkv9mxaq2w0q4fqpaff5vdy56mphcqyzhsuwezs5fysi54m8zerfjjn73f8sstyy8e\",\n    \"uri\" : \"https://web.example.mocklab.io/219896\",\n    \"issuer\" : \"oah6hfogu0k2bx8vqdeimj83qezj0mlej4b6t6596nzdu6ofp79pxk7q4ee4h63qizggka07vkmqt\"\n  }, {\n    \"date\" : \"2022-08-11T17:02:13.500572Z\",\n    \"parent\" : \"hrjtxuyorpeuf04mxvyfkc8aqu6fsfwu99p6t3cj5abm94p9f26ubprwgz35fguw217gs5hqfhsvbi7t3nona2zyd1bvod53mhqed1pfbfge4757dn1bz6gq9zeguzuyb6yktrcw46sxdbf7u3glruhp085gu95s8pye02qlizyrx1o1gd9h1xoeuivj88ai\",\n    \"size\" : \"sa834gcp49dxzfnct6jynuniym0cbvalvzlygvj8wt7ks8cwmq6sq8jwj0qnmwflyrzi3pdqegil6tyoieljaa5mk88r0uvlrlqf98g5e6ckl9gupz24\",\n    \"mime\" : \"4s3cvi1i9dup1i3gm3cplp5cjv92xrhhbjfe0svgw1smv3k7qu1c9jcac8jecqzn16d85o7zg8o2w60c5ddo5lqj9jmw3xe98nlk04p0e3m6ibjg991hf10k4fxfh\",\n    \"name\" : \"Miss Caleb Turcotte\",\n    \"description\" : \"Harum sapiente totam nulla. Quia autem nihil cumque. Dignissimos nihil culpa minus recusandae laboriosam. Aut non neque aliquam dolorem aut ut. Cupiditate inventore dolorem recusandae autem.\",\n    \"id\" : 189079894,\n    \"type\" : \"f40ytuok4sq1sv0anoa6ux7d\",\n    \"uri\" : \"https://web.example.mocklab.io/532418\",\n    \"issuer\" : \"qjclakdye41214x9e6eontc7z8zuqipyw368b7wrt0ujqtvedhnuvbj26k3y\"\n  }, {\n    \"date\" : \"2022-05-21T13:38:13.500787Z\",\n    \"parent\" : \"1kmm1vi2o1irxr07jnxibfib3wyc8sgtekdi8kqj3tyad26h7qbp4d6n46ndpajgarryq82vhh4mxrqarujip78qcdz0c8dgoxy4cdjwjtbytfc6\",\n    \"size\" : \"zwrrd1wbpnd\",\n    \"mime\" : \"dkq1593g20p\",\n    \"name\" : \"Guy Metz\",\n    \"description\" : \"Eaque qui eveniet et quasi dolores tenetur aut. Et quisquam modi earum provident aut et eos. Error non ea eveniet quis officia animi non. Ut explicabo omnis ad natus. Quas veniam molestiae expedita en\",\n    \"id\" : 189079894,\n    \"type\" : \"xt700ajlgpry99dqmg69p9693r3qagvdw83uk2ayl1kgr1h\",\n    \"uri\" : \"https://web.example.mocklab.io/181702\",\n    \"issuer\" : \"qlj9ca5j12\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d595a80b-5e98-35c7-b43f-7f9016b6c3f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "fe7e25cd-377c-3b54-8855-a1b073aa6dde",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F730807",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Dolores tempora dolorem et asperiores vero voluptas et. Amet ut vel est. Nihil quod eveniet itaque. Et ut non voluptatem maiores est incidunt.\",\n  \"error\" : \"wq4zw5gbxp96awcd3z2jqmzgupxajez7tw8pfrmh0zj4e8vxfz6ftaxalxd95kgnrfewnuw0xnzq7lbrydqlycdbxduzmz57kmtz622nh8axkhte0e2h5qveuock5dlqu675e3a7bygtb3o6fy6rfz8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe7e25cd-377c-3b54-8855-a1b073aa6dde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "6702291f-574b-3bae-af29-9b1dfdbd054f",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F881280",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Exercitationem dolor inventore et illo deleniti. Quaerat dolores laudantium nulla sunt ab asperiores distinctio. Voluptatem maxime molestias odit iure omnis non. Omnis reiciendis placeat repellat itaq\",\n  \"error\" : \"wsmke0cg03p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6702291f-574b-3bae-af29-9b1dfdbd054f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "e90c92b6-b929-3e4e-8825-4d2743dfe64c",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F569252",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e90c92b6-b929-3e4e-8825-4d2743dfe64c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "5ff949b5-6206-3a5a-bc4b-342f457fef3c",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F362793",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ff949b5-6206-3a5a-bc4b-342f457fef3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "4f6a04f4-17ef-340e-be10-18f06b091af6",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F353850",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f6a04f4-17ef-340e-be10-18f06b091af6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "2603fb84-6e19-305a-87d3-896617a1fe7f",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F965016",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "2603fb84-6e19-305a-87d3-896617a1fe7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "50316353-4292-36b6-b255-b69bb0cb9694",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F825102",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "50316353-4292-36b6-b255-b69bb0cb9694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "b77f961b-fd98-3eb2-9e42-af328a916639",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F391807",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "b77f961b-fd98-3eb2-9e42-af328a916639",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "07cf56b3-70f5-3e14-9b05-4e33fd6606fb",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F735554",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "07cf56b3-70f5-3e14-9b05-4e33fd6606fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "a2da617c-ad15-376e-b932-f3e804a1b89d",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Sed blanditiis voluptatum. Enim fugiat reprehenderit architecto in ipsa. Vel impedit eum. Voluptatem soluta quo delectus aliquam est. Dolorem est facilis dolor totam.\",\n  \"error\" : \"jz5a3011hjtz42vdofz956srhjr7wyicyh804ccl7s36am36y57lx79wdwos30645b5k0gn6qzozj4e3jgnu6vduslqyobni4lh6i9cd3n5ed0eqa2ohkukonl6w05kss74x8feqlwp4zuxsgih16ciy9ssrhf9v8ypd5daegap5stlqf03w68\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2da617c-ad15-376e-b932-f3e804a1b89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "704288ee-c824-3139-8d3e-a2cf046fc1fe",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "704288ee-c824-3139-8d3e-a2cf046fc1fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "f1786282-7505-3129-8388-0c2baa0731b2",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1786282-7505-3129-8388-0c2baa0731b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "f494b3f2-baa8-3801-93af-643d596bbefd",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"ohaoqxtge3tpss9yxi2m5ravdpwhdkcysqh1\",\n    \"size\" : \"xktaijd0qx7m0tslp9l1dqt9zy03sbe20n1eu2at5rjbqn7do\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f494b3f2-baa8-3801-93af-643d596bbefd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "319b19c2-cd0c-38bb-ac94-6315a581af29",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Aut odio voluptates laboriosam ipsam culpa saepe officia. Labore a reiciendis. Sit ipsum eum aliquam quibusdam facere recusandae.\",\n  \"error\" : \"gfrh1vrfwdnun0n824g1bmfui45ul3nyerxtfefxcxnew02kzpv3gd9byz6adu18bmqa1qkjshfr1zw01fegj3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "319b19c2-cd0c-38bb-ac94-6315a581af29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "20592609-c60e-3bc5-aaa0-9f713a1daf14",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20592609-c60e-3bc5-aaa0-9f713a1daf14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "5f58b43c-b60b-3bc3-b6d6-8596b2b42993",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Dolorum dignissimos nam suscipit accusamus. Minima consequuntur et a velit ea debitis unde. Odit exercitationem ut ut aut iusto. Tempora ut ut doloremque iste vel asperiores qui. Sed fugit ut nisi et \",\n  \"error\" : \"4n12n9iehiqs0umtfpx89l6xxpkp8j22y897kw7ta9u51wm7fqvo4ec0mxhat45fyu0zxd28d22fn9d5fnslhb2jgp51litr7ee6m38965u0i4bvyj6v74b0mdk91cuwx29rnfvuy38wzvgp5pulg1u5hd93roc0xs3vwppywjq48cwnz0v3698soqpe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f58b43c-b60b-3bc3-b6d6-8596b2b42993",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "b61a2c02-49b8-3feb-ae2f-ad5e216fb6d1",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b61a2c02-49b8-3feb-ae2f-ad5e216fb6d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "8e92c1b1-2352-3104-afb8-104d003edda7",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "4g4n2qogff6ungzxnpr119yvyoyp5oxpqrpsv7b6m5l249yjim4nredx6k7q6tzcbjxrwdbpjlvpxrnl8ickvtv75gtb969he7ojff8jyeuuanj18kio3ks5wbwt5zrvgc555raeygs2jeslywkswp1b2d2onbldzkd8qry8b7dkcdc"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F177967"
        },
        "state" : {
          "equalTo" : "West+Virginia"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8e92c1b1-2352-3104-afb8-104d003edda7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "1ab3f8ff-a79b-38e6-a002-e7f9afae66b1",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "odw5ea9uarc7tyma454m6b5ykz7a4l2daa11wf6sobw0c2nal9t8x3hscj9d2pc04baqss4mn"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F038091"
        },
        "state" : {
          "equalTo" : "Pennsylvania"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"v820ryh6o48u3jywxhcc4f8jl5zy1nma7tg3o3vycm0r020wgoxce5z9m65cb8c0a3\",\n    \"scope\" : \"24mykyiop0b25xv7zrwmj70ly76xhsjpjcz0m69a1p4g3c0vw7ozrfox4ovbcwsolgbi0vcpfr7ijd6e\",\n    \"token_type\" : \"jtv3at4k4s3gu3wpfdlp2j053e7\",\n    \"expires_in\" : 5407096623814967730\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ab3f8ff-a79b-38e6-a002-e7f9afae66b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "a541e49d-c7d4-363d-9ca3-3719e958e01e",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a541e49d-c7d4-363d-9ca3-3719e958e01e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "f950bc85-3343-30d2-add6-69d15f96c043",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Impedit corporis modi et. Sunt possimus nostrum voluptas in dicta. Sit cupiditate adipisci similique.\",\n  \"error\" : \"2m9jft7x697kgpoeip5iwg7u55ymt7cyb4rtw0x60sul49tuyz2peici9svtwjmyue1urb6qrf92nm4v6bpqnz9nru2hb6d5xshr0vku1clvw8r8w49ogqdvf6s8vox6e6un6jkisyhxkg5njs2fdgao9ys6oviazd9fyrqlj8qvap6a3dlwddyfe5idpczp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f950bc85-3343-30d2-add6-69d15f96c043",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "4de040c2-0565-36ba-82c0-714ac2203343",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4de040c2-0565-36ba-82c0-714ac2203343",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "00dc1b5e-6cab-3003-b888-67c2a729e244",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00dc1b5e-6cab-3003-b888-67c2a729e244",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "82a8cb64-3f6f-3778-bf14-80eb93361306",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Et rem velit. Illum dolorum quidem ut rem. Ullam rerum quaerat possimus voluptatem delectus rerum et. Illum velit nulla ullam.\",\n  \"error\" : \"0khvpgfrx64i1j9c906ii85kbgkeb4wrivls2xjxe1zt8psedsqwqi1k0stnjg998ipsq9v0kb74qfrsul\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82a8cb64-3f6f-3778-bf14-80eb93361306",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "3ce96124-a33a-368a-95c3-fab5229edf91",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Cum consequatur eaque corporis officia et. Qui architecto est necessitatibus soluta quia fugiat. Sed qui amet molestias optio reprehenderit. Possimus cumque molestiae.\",\n  \"error\" : \"pt8j44epyd5jep82m1mubuye0l1b4p4i0azkr20gkdazyx2o0sjvwsegu6dfi3tiug3fn8vufoxz7b5r3rndzcdt3c0frxl9rc7w2nfq6q9qttvrw2dm067striduylbwicfhesx923v0t45icykq34d6uc3pqu58m6z3snhldu4nee8dq9p21s0l2ajyxb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ce96124-a33a-368a-95c3-fab5229edf91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "36d45cb3-c48e-3581-ba72-b097f4f69c0f",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Error molestiae dolorem consequatur ratione aliquam. Possimus aut itaque ullam eveniet enim vel. Possimus totam velit minima. Illum voluptatem sed aut qui consequuntur et rerum.\",\n  \"error\" : \"lzsdb2nymgiba50g87ol8yjst61z3owxsc2ajodizm0nx3gvyckftnj70sl8ozp42huyumop9kinbfjfue6jxfmwpgvgnhjysmiid0tsasxvns4rf3hgh2mq4sfdeaymxj19uv0j09swen5x1ahmtf2mtbymdsdepk845z5xabk8n09rsizqkqp4s1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36d45cb3-c48e-3581-ba72-b097f4f69c0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "23b5369b-b31b-315a-8546-2948b7eca95c",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Repellendus beatae sequi eligendi occaecati necessitatibus eligendi. Dolores temporibus officia. Expedita et asperiores temporibus magni ipsa velit. Incidunt quo aut. Animi reprehenderit architecto te\",\n  \"error\" : \"obecrowueiziagsm1kyxrljf8pq9vxwgtp0rgcr409k4xutfvu1e6qf949zxqkvqcx7b237jwr408vrbf1ie2s06\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23b5369b-b31b-315a-8546-2948b7eca95c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "4aa6b63f-78ae-30ba-9745-c929aa7cd978",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4aa6b63f-78ae-30ba-9745-c929aa7cd978",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 89
  } ]
}