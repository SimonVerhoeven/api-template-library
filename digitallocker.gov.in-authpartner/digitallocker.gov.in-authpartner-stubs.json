{
  "mappings" : [ {
    "id" : "ebf231ad-bd01-47b2-b22c-e81a36f5bdb9",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Deserunt vel modi impedit voluptas nulla. Quaerat non impedit consequuntur doloremque. Tempore totam debitis ducimus. Voluptate ad voluptas laboriosam vel.\",\n  \"error\" : \"w23xjbde2ggdp1e9a6o3y3tabg434hofa6a2ykntuvws8sm5vbvdcebgsqntl2qcixubxme8k42xp4bzry6lh4jtqbf5pnrkgqo0ptp7eysuqjmucx8fshic4j0wl1wjon0copp3mqt4hkmuf57\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebf231ad-bd01-47b2-b22c-e81a36f5bdb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.757202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "bb665224-c229-444e-a790-092cd869c1ce",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Molestiae eveniet vel dolor. Sit ea eum et. Expedita et quo.\",\n  \"error\" : \"zu4z6vjm7fmxr6osc6xls0difmqdtalvzxmgrhq33w22yjwxn8ild5t3getj81anq4004bkuw8u371b249w67kekiaec76xkp0kox456y1p0dzrxrdvcko8t4l5ykmuikhza2clocc9t3pfuus30mmcloxxrp8ac\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb665224-c229-444e-a790-092cd869c1ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.7571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6f2391aa-225e-42c2-9d74-d12c1de8beb4",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Est sit et minus ut. Odit aut voluptates accusamus libero expedita. Et quasi architecto quia voluptate optio rerum omnis.\",\n  \"error\" : \"hdni93y6lh8nvchnosgl6ble7m6met81u6pzumsk0s5jzmvp96kefmbjjx5bn3qxzzsshgrqqtcqqdboh338hrgwn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f2391aa-225e-42c2-9d74-d12c1de8beb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.757003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "3ad1f6e9-a040-4e2f-80d4-8cfca6de8114",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ad1f6e9-a040-4e2f-80d4-8cfca6de8114",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.756858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "680b1b82-6677-47d8-8a18-130a8ca141c2",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "680b1b82-6677-47d8-8a18-130a8ca141c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.756324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "d419bf31-d058-4051-b0b8-aff651dc7719",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d419bf31-d058-4051-b0b8-aff651dc7719",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.756269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "b08fe1cd-2e8d-4476-8430-7c2364cb9b71",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Porro eligendi cum et reprehenderit. Dolorem porro est. Culpa earum maxime quia ex. Odio sed delectus cumque vero omnis omnis suscipit.\",\n  \"error\" : \"kbyyyuth220z7sg9tysovwwf929jpm7jm8ievc5omn5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b08fe1cd-2e8d-4476-8430-7c2364cb9b71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.756214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8b2d6247-1f1d-4da6-819b-abf709258514",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b2d6247-1f1d-4da6-819b-abf709258514",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.756116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "99fe093f-aa23-40cf-a73b-a96300d667d9",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99fe093f-aa23-40cf-a73b-a96300d667d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.755974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5123c3d2-d13b-4e7d-a8a8-980d46436acd",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5123c3d2-d13b-4e7d-a8a8-980d46436acd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.755918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c9a12cd9-fdb2-43cc-a4b5-c91330b86816",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Ipsa culpa adipisci accusamus tempore. Voluptatum nam ea eos aut ea laboriosam explicabo. Possimus sed rerum.\",\n  \"error\" : \"qjyi8yifb4682c73rzmtjuvxsencvaaqvf3uw016hfki305oyqraicyhwnuh1xl9sdmhc7xzs6pwmzm4zp4w56180p1om0w9imfn9bctgl0qzgdt2c9zteoeqxymso5isew0r1gpmvebyjs50dl7d6zksja5t3rz2cgctj3q9d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9a12cd9-fdb2-43cc-a4b5-c91330b86816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.755862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "0c07e7e3-eb97-468a-931b-c78b9f9f8029",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c07e7e3-eb97-468a-931b-c78b9f9f8029",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.755731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "586b25b8-fcc7-4f60-9768-9932622e9377",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Quis necessitatibus odio sequi corrupti nisi quo. Earum aut non quidem molestiae voluptatem. Sunt cupiditate voluptas et voluptas nisi. Autem et minus ab non esse.\",\n  \"error\" : \"n9cx7dfxt1dyunwv46t3tbnl2w4t4efsitu6tbntyeatu9v3wd8rjbpu6ao2vb2w4lq85azfqdankqflx7ywpy43czgj1xfudx84uua0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "586b25b8-fcc7-4f60-9768-9932622e9377",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.755089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a2f270af-1051-431c-b75d-20c7f053a172",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quibusdam inventore aut. Doloremque in aut. Temporibus quis molestiae ullam. Et aspernatur expedita quos.\",\n  \"error\" : \"6yfvfg1039elz0o09dm819k4999zsas4995cdsgbajb4ci1lfuc3v2sqk3qlmpr2v2ji4cz4jc278lsp7gnzxmr4b77zf2uh3d5rx9e4p3dvl2z9m9cu907rt367lzs6nq6gem5jp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2f270af-1051-431c-b75d-20c7f053a172",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.754988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "01212daa-dc87-4d15-96e9-b36a79882b82",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01212daa-dc87-4d15-96e9-b36a79882b82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.754856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6b88a194-755f-47ed-8a77-ee10d1e12af4",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b88a194-755f-47ed-8a77-ee10d1e12af4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.754788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "84547497-93e7-46fe-9a85-1fff113c9003",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"3t1a64qni92nimxn2jsjm3xqkwl435bwtf3h09z85yxm9e6\",\n    \"Rar\" : \"tqlb7jgt8gc5\",\n    \"code\" : \"yzrgfffxfg4fmzbza9peryad4rqtie9lcfr3wl9yczfsstr9xmfs0zr6hcmmubv6cfrx6962ydgmsazfwkvbcl1k85d9vt33fc47whzfefj4mq8iomm0ejhs0o4crp8u8sq8o3ycasbjabgz\",\n    \"Signature\" : {\n      \"xmlns\" : \"7o471v3qeq0gmsl41\",\n      \"SignatureValue\" : \"drf6kq2orgqg\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Violette Kub\",\n          \"X509Certificate\" : \"idp3n1fam30upom1pr45685ftjlpgzgvuwz76yj9wyhmn8o35bwage80dwfilbayw7em2plkcng\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"a7ytojim3oxtjpenrnmzcm2kmzcfxqh3wda9062bb1v10h3agwn1zj3w1diin5ih96kvzeeydn1swqdk7v7v7bs3rxx273wo4ws\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"jie7cr07cd8xopkn755grz9hyu7u1f28wpqbzjjnmpxpw69zjsiq0i271s8cx0nyeuy0jhkwp6mph6o5d4xxilvcjwjl3yh4lvxklnianv43pwpsyxpna20z9icxzzsd6y7g8wy36nuqexmsabtvcdwsuikk6unyrfkd5ogysvciwj9ipqgxa0kw4f\"\n          },\n          \"DigestValue\" : \"x8rxy2k7phl8jf54mal8ff2eew226sigz82j1bgz7u75pywd5focznenwl5b60x4eraesn9rmzzr4opdczirigxdxg7f1ulx4fv13xnla69uof90ikzk7hc4twty3hxp6jpxfunu7e5f687wpz7zzvmk0eox5ryy\",\n          \"URI\" : \"https://web.example.mocklab.io/119548\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"6aw69b9q9wqjlew8xs51igndobo0b07dmxg2mhdokecnm3fxcainhlnaia446lakdakbxlih2nk4t\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"m7q2d2msehwy3e81itabufok9e87hyupadcm9u8cc7csez6vu42x4qsmmwi33nnky1k8n4ode2zfr9jr3vep1ogbb3qp04dvehtq98p7eosxi2b2frp5htozndxp9lgmia7m78pnv1nzmst3do4rk68j2savmakqvvjq3dn85e5ldx3y\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"21b4\",\n      \"Poa\" : {\n        \"country\" : \"Iceland\",\n        \"lm\" : \"1kv9sduye61eo46nep3hjpkp991mc38amqwp3yhemse\",\n        \"loc\" : \"7330x5wehtiy526l2zs8lgqla6tqd4ivni8u7rczr7jnhes4w5im8bl61pfwp2hc45ch28euw7iefvxfyyi7nwd7pm3q9jq1fslil20uwbebym20cwwsfjlj6mfrxo0ndqujcso73w7enunztnor2h6v\",\n        \"pc\" : \"njn98nd3rtol99thfrtx3evri87hha3wx6l7mxegxouu4eg3rzp2955d0knl2xz7d4t3i2o85io2p8psgk2yyib40abi3j6k3l79i72rdcdpjrglciv3es48oiqp7nqub5kmqgmx8v9wv6xyp5gs0kfh2oyccmxu\",\n        \"vtc\" : \"98chozbgyb0v30liyuoe572pm5k14ucx573otj1wd9zbftga648lydjzxlt7hk3p1dxcclzxhvjgptx7v3hgmgmw6j4q5a9wlz2ail5euqblxved78k2l23qzzq51aie90fi9vyzv9foa948x6w86pmz3iup0u6zi1fjhf\",\n        \"dist\" : \"nlnbe8kqbkui2ukbze4doq4zgp36i829tp41ncehtfzzz64rnr0qt8w7iqe6ir7qt8zlhldn6z07ufiyghwus7jc2tyzpnwsnmxnr95s2qlvmk79lgcbvd9i76ki0mxpcb1\",\n        \"state\" : \"Utah\",\n        \"co\" : \"2s6xvxspeujl1guy7u64vnf1dn0tl0vq5rpdh2itil60wlxmhd5oorp2nbslhj4gnzjfam5pqih33s56dzbayjauzf2fnwd42tb5tz10srii\"\n      },\n      \"tkn\" : \"xzo8y4cmqe8xu8h9moxso1vf2yhitowvk4jxdrna7fdxcbdjlcbwo6926m97b5hrrztu3nwz9n8bl0ky6yzz1yrbc6432n8ffikrskp2h04ajfvvhk6g2uf3mm3qn5daar4hncw86fe2gi2x6g7bky7ynmsotkftysf71wiccdhotuuu9krwn5wojpa2\",\n      \"LData\" : {\n        \"country\" : \"Malawi\",\n        \"lm\" : \"g1lygvd00yl8ghplccjrdgvdoujb7wk9z5ok04d7gdw4ys7qbb5rtucn\",\n        \"loc\" : \"irwcqfccfbsea1cmpz63pj34ddncfii43r1nomluv1gff7cl2l85rib2hk561jf2lg2tf362wp1zidy6y6dj42e8\",\n        \"pc\" : \"hx5c3kjk64to2u8p0b3mucn7ro977q6sg\",\n        \"vtc\" : \"kjsrz9w64us9o9b2mznqmdqqqqb71ql4995lf5caybvm713apxp6xy06gnifoi089cl0mrnml57x4qf71phhlmqwxwghlmyci33bcyi45ypliafnf9c5lhxqhdejwn1o74gb0jr2ucjizhrswgqku4l64e7hklrzcxqnj9zl5hogrb3f3thaobqhfrnpi7uai\",\n        \"name\" : \"Berenice Beatty\",\n        \"dist\" : \"lmh5lcnlmk45pk78s182pbr1d30gctiiaktwdgxg5rcnk14883r72sv0e63jlyv9muc3e2x7gnl1tkjvlfjtizggknrp30ibedfhennff0vs5lmkjstwl4wzl03x6sxgsfkebeaaau5uzv7i3k0g10kvg48klt9jydqz5oowagr9p2f\",\n        \"state\" : \"Maryland\",\n        \"co\" : \"64dnmf4fiy6gi3atvjwjn5ufpikv0rgw778cfye8q6b0vypis9ulrypgem4vxi5mdc3h4h8k45ohzjd33bmpyxrcl0n2zddmfjhq6pbvbrtzkpm31w0cp372xnk5p74s60vbmdhwvn8ibghryqbp6zacwilu35zfdzgcmyso2znb8t0zlv8n\",\n        \"lang\" : \"c4qhdr14dqqxh5hln623qbaga2tymlyjiubddh1yvmgo9jizilunkf5x8a8vr5g0vzg3jrpznl3b7tnv2\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Genderqueer\",\n        \"dob\" : \"1984-11-25\",\n        \"name\" : \"Bari Labadie\"\n      },\n      \"Pht\" : \"npsmg4hzbg0ij9pksu2sutukkrx18d1i9esgcd9gzjvebqhnu1k\",\n      \"Prn\" : {\n        \"text\" : \"gnaplwjbi7j6t9j76idig0k10auaiayqbp1kqlf2f52mt9qk4pe8elssc7ghxxpvc0kufbrnilns\",\n        \"type\" : \"i0foxa8ivj7q75tobyb4rsboau7z\"\n      }\n    },\n    \"txn\" : \"swboj19n9caklm7fjippzi7uv8a22zw1wa2yh2tdivg6q2tu\",\n    \"ttl\" : \"9qf3naaanoxlho5qyacnna6n6r5lwowyupexutlgi5txjgre7pirt31rfv5qaxmma1xchd8zl\",\n    \"ts\" : \"tir3kdyeqlg8nkq8luxvss7ldzmtw4preo0czj4b3dwa0lcb8qz3swny0i31rafsnlgm2f3s0fqo1hq4j1hexhcl07ttvlmh22q33ipqwd8cd8ze39v5zvgqh7nnd225fepejf\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "84547497-93e7-46fe-9a85-1fff113c9003",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.754646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f48b9a2b-ae36-4cf6-aa8b-1532728f0851",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"At nobis molestias sit ipsam nihil quo sit. Et et quisquam magni et nihil. Expedita aut quis nihil sed. Ut eum ullam ut quis voluptas itaque aut. Enim labore cumque et.\",\n  \"error\" : \"jrtheiloc8b8hxr2ls7pjq4ksbb3fzzam0f2srw5exsd5ffg9u6vw5qtj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f48b9a2b-ae36-4cf6-aa8b-1532728f0851",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.752875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e0d87ef5-dd6e-40eb-9efe-3495b36e4e16",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0d87ef5-dd6e-40eb-9efe-3495b36e4e16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.752778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "84f2fcc3-616e-42eb-b017-0f71d8add793",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"n8jfvva1bpst142mev9xeflx8p04azg7hix2pq3ro0owa4n11ykwij2x4q8qsaw8fo30hd2cupdvaq6414ps2rkqffqr31h3rqwy2hq6viuuty5cfjbhio190qb2raatnw8rottf19zayrat2wbz5siev127v84yeas0deiovkdym22zascvnrn89uvuvtvlskv\",\n  \"items\" : [ {\n    \"date\" : \"2022-06-07T09:25:20.75156Z\",\n    \"doctype\" : \"w5ukmwpols85ejwvb905w4j63y5\",\n    \"issuerid\" : \"2f5t\",\n    \"parent\" : \"i2aw2zh4modkvncsgl2pibvknkceujda8dezvd252s9mx8ukk0zesz9rb650hohor5pszmul2tg6ups3xu1qbb1ekokahe4uhmwt5repagl4v6wv1i5ef8in75m14jm9ef2jj2ikot93c01nu5j0\",\n    \"size\" : \"2p8mo2dj7tqxibv4p5wo32biv546ickfjr43rknlk0nek6iv6rcdc2ybgiptrb545qat6ukzycvgnm9km4xq8j632bctb9w1g6u50soyrnehdr0pg8hu32etjtg1wlgcf0jqul6wt0496ozwiopp97v97i5pt9p6nff126mmhbtn0a8\",\n    \"mime\" : [ { }, { }, { }, { } ],\n    \"name\" : \"Dr. Cordie Lubowitz\",\n    \"description\" : \"Aspernatur hic rem excepturi dolor consequatur non. Modi sed error sunt voluptates nobis alias animi. Et vel enim.\",\n    \"type\" : \"jpohdhm3z2jo55w9g6orf3xf7aieo2ae8ichbwqbduhkvcfn0u8io7bjkb1cxpgb0qlc3zwpx9a1k8hck9\",\n    \"uri\" : \"https://web.example.mocklab.io/130116\",\n    \"issuer\" : \"c7bjmoscsnylchxsxabj951vw8g839dc4k0d2cw13wnl37iahdwwk78w2udi8jdk7ua7dlec23fmhvieo3ofvfua94nvw9e2stmwqhhtj90jezlug98cf9c0y6qeo\"\n  }, {\n    \"date\" : \"2022-09-10T09:08:20.751936Z\",\n    \"doctype\" : \"sqjxkfqdnbokyc535g0he3trjzmx6s017gl6rps28h644zw4g3yhqwvmzzymre\",\n    \"issuerid\" : \"mqdc\",\n    \"parent\" : \"fd4u950lc9kyn1u9c9n7crgyurqi53hjd1668jnwpi7ay7y8e04e73xsmguh2hbgrworvh\",\n    \"size\" : \"7mqg1nhobtnckgqc7r3mhikq8diyhbxlifzow0nzcz4vdv7k7j2q7vldghbagq3nbe5eumwpkwllscqk69u3rkzi8aqcmqtqe15nomny2y7f3khd57p4wlgwlgkzvb9w6i6eekd2uf28rv75rwcq85u3qts7clekv9afk0cxpi\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Micha Durgan\",\n    \"description\" : \"Ut deleniti similique fuga facere temporibus sit sed. Est a rerum labore. Dolor dicta vel velit eius enim possimus. Assumenda sunt aliquam. Fugiat doloremque et.\",\n    \"type\" : \"jskqgacazh3vuxe7o144sm671ammwt1v06n2rmuzpxfei5y2h1e8080u1jx62lepwetz9yms\",\n    \"uri\" : \"https://web.example.mocklab.io/945091\",\n    \"issuer\" : \"bu2u6qjgct68vco40210dfb3wyi9k817deyxsm281a4sqrsnp1wkd4fkaimvvx851gyjntggxbrgqug0yz\"\n  }, {\n    \"date\" : \"2022-12-19T10:41:20.752236Z\",\n    \"doctype\" : \"pn1uptqwjqb8rxwglryoca79o8llvy76p5y2ogq3r8t5ji9h03tnney89ewe4y12dwvx5e6vxk4kq6wozxar\",\n    \"issuerid\" : \"0mng\",\n    \"parent\" : \"gzwpd6mhm6brfdkexws23dkevwst3lg2qcbjh9dyguytan1noo3szdpz3tlk15sdqyrmiwjkd1ofg6d8nopyi1flm6j971jht807thy6edvrfonx7a\",\n    \"size\" : \"mg2raio3efce31cn0va19iuuvxf1pqaii1s2emhru4l7pxjg5610vbs6nhdl870i8bp536\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Mrs. Chuck Cummerata\",\n    \"description\" : \"Et non non nobis enim ut. Maiores cum itaque eos enim atque facere. Dolore voluptatibus delectus. Repellendus neque eveniet dolores temporibus vitae.\",\n    \"type\" : \"3etbblpxgdiaca1lutztylm37gpg804lwn048ulqo78q32rhf6p\",\n    \"uri\" : \"https://web.example.mocklab.io/871594\",\n    \"issuer\" : \"r8fmvuc9qk9gh4fpkkz42cmwonb0g95u3edvam8octhllf91gow9hbdiy20eoc3ziimk0jndiunuguozs2wz6vjfdvvvrkpo1ish1uo3vgx3fr64xl9zhqjo1f6u5w3ydtiktehk0i593n49yl0kw165wwnrkw0a\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84f2fcc3-616e-42eb-b017-0f71d8add793",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.752704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d03db05d-545c-4013-9548-8cffbe511de8",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F672128",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Excepturi sit tempore ut. Omnis nesciunt quam. Omnis dolor eos.\",\n  \"error\" : \"0vbmquf2glzn0pwfe43cuazgp9bllhf6u6wgkbrd77l3h92plw6bvhdz1zr1qi7bq85ix1cm11xsi4aixlzbh4e3ijjzp8vl6i3vp9tw3zilglbru4lysytm6pu0b6i5cqgvgjrdgugy6qxejjed9cvtr9wielhxiy1bjqlw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d03db05d-545c-4013-9548-8cffbe511de8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.75148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "27e4fe67-73ef-4f2d-81e0-b1da30229799",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F202965",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quam consectetur sapiente velit commodi magnam distinctio et. Tempora ut impedit qui quasi incidunt facere. Eius corporis accusantium ut.\",\n  \"error\" : \"16bm5awhfz4jmw674a6kj4i7c14hwxlv4x64pzy6u1ccm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27e4fe67-73ef-4f2d-81e0-b1da30229799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.751291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "9908ffa3-c285-4144-bb10-d5ba210931a1",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F765018",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9908ffa3-c285-4144-bb10-d5ba210931a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.751132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "93519600-f8d7-4acb-a292-1aae97598545",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F486763",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93519600-f8d7-4acb-a292-1aae97598545",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.751014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "b030bc0f-8710-414e-a424-335264560ef9",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F586638",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b030bc0f-8710-414e-a424-335264560ef9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "44eaf001-b716-41b5-9d72-3dfe6f12e649",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F349295",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "44eaf001-b716-41b5-9d72-3dfe6f12e649",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750765Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "29115732-a61f-41a7-8679-64b93b5fbf83",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29115732-a61f-41a7-8679-64b93b5fbf83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "cd098285-e5ea-4349-95b1-b26bf6d059d0",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd098285-e5ea-4349-95b1-b26bf6d059d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "6d577580-f447-4ef1-b636-22266a0bb1df",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"F\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"N\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d577580-f447-4ef1-b636-22266a0bb1df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750416Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "6a2d7ef9-39b3-467a-99d7-8bc601dec19f",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6a2d7ef9-39b3-467a-99d7-8bc601dec19f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "7b268964-a7dc-4ce5-8492-862e4cb82ac8",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7b268964-a7dc-4ce5-8492-862e4cb82ac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "2e38784f-ece0-4566-bee3-72951e30c92e",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"F\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"bjqa7e4f89fp\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e38784f-ece0-4566-bee3-72951e30c92e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "8c9d28ec-c074-4e11-9647-888efd2ddfe4",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8c9d28ec-c074-4e11-9647-888efd2ddfe4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.750004Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "ce75a76e-30fe-41e5-92f9-36b734bfd076",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ce75a76e-30fe-41e5-92f9-36b734bfd076",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "31e99c4d-4359-48c6-916f-701f66dc6cf5",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Eos velit similique ipsum. Expedita illum ullam provident dolorem quis eius voluptatem. Consequatur culpa quasi ipsum autem veniam ab vitae.\",\n  \"error\" : \"o72wz7uee7jby2po2sexkvj130cwrhkt8esxakgz2661nzirw6ur6m9y61lf3rfmebbvbmgot96pz37k649d3cut136mgp6uh7yiuu4p60pgal19vqnzciftp3r9qg51hhnuzj6mmbxgcd6aciz3uznzhtsohf0ms30g6mdm85znp4dolfiqb4mmyl48h3o7v8e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31e99c4d-4359-48c6-916f-701f66dc6cf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "62d3e55e-906a-4b25-94ab-3d21419d9bf7",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62d3e55e-906a-4b25-94ab-3d21419d9bf7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "55b7f9ca-708a-4917-80cd-ec6664e49673",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55b7f9ca-708a-4917-80cd-ec6664e49673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "ae43bded-0f39-4100-85d7-77d49d5d09c3",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Nam sint provident aspernatur neque provident. Dolore aut illo iure. Sit eligendi dignissimos aut ut consequatur rem.\",\n  \"error\" : \"2zv40ommq4yc7km5lcsdkr0pmpqe3swsdg4mejpglyi9r2bjurnrlv3u3y9ujde6lmu3v0m8z8wls8backaeszetbf8fupy0h7etns5j84lglhujeegtvj26ca0dqpqif4o2ba6sdc1y5mtikfj03g6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae43bded-0f39-4100-85d7-77d49d5d09c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "92957668-283a-4911-a876-352fb2b2df8a",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/041571\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92957668-283a-4911-a876-352fb2b2df8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "f0fdfe4e-87f7-42e4-acb2-feed85812169",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0fdfe4e-87f7-42e4-acb2-feed85812169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749495Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "c249b99c-5157-409c-9666-e20139aff6ea",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c249b99c-5157-409c-9666-e20139aff6ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "75499aad-e5ad-49f7-97ab-df2629c706ba",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75499aad-e5ad-49f7-97ab-df2629c706ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "74ae4ed5-399e-46b3-962a-75c9a68de97c",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Miss Carl Batz\",\n  \"label\" : \"voluptas\",\n  \"example\" : \"j6un94ucn901n1wd5egg8lco6w4cm4k1t8n2axtrnpgkafn34c2zt8hstwbkslagp7m8h7oxa7z9fbp5st7vaqfkekq0p5jlt73zxq752i79idd6gknb\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Ms. Forest Quitzon\",\n  \"label\" : \"tenetur\",\n  \"example\" : \"ik69bz236pqi6giwtov279amr28q1ih8cpf5vsyxbqikvilbpmz25rgvcsmpf9ki29s7org1pinxkwv5mlubjh7v40jt3b2dcr4f8a138i9d3q87x0qv2xrofsbanu4qd09064ggvpgoakdwufsbsmm6kra0\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Ty Schimmel III\",\n  \"label\" : \"doloribus\",\n  \"example\" : \"o4i6vd\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Rolf Gutmann\",\n  \"label\" : \"nobis\",\n  \"example\" : \"shejor4lvy91de8i3m8olhfgh8g5uuo2yru8ido0b19aq6mg9gyiqravp43um95jlpc5ik20hz1wethq3n9v6y5ieqwyv6lumjxmjuwzmvg6hwvf8np9a4yiwry8krq6kgh6b659lj3qq2tj42d\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Keven Goodwin\",\n  \"label\" : \"sapiente\",\n  \"example\" : \"nh1vl0cnviejd844ncwhy260w01k105zum5lg16hcjb0uwv5ko5mr9jmahnsimxx6v6j7n2c7guelqalxb9n6mswgg3xzwwow46ym91mqup2k0hb9bjif6yt0jz2r4oibcmferbknaepqgr7ttnxz0kq4c5re1qu5xjcn6j4ctvt02l\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74ae4ed5-399e-46b3-962a-75c9a68de97c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.749318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "d888c0fb-391b-46e6-8fdc-fc29131fcd52",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d888c0fb-391b-46e6-8fdc-fc29131fcd52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.748794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "037d664c-cdab-44e1-ab80-8a974cb113dc",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "037d664c-cdab-44e1-ab80-8a974cb113dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.748734Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "c384382e-3dc4-46cc-8b23-8e3146257cf6",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c384382e-3dc4-46cc-8b23-8e3146257cf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "f7186430-8130-492c-b2ed-28e925c4c273",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"3fu8\",\n    \"name\" : \"Jeremiah Kassulke\",\n    \"description\" : \"Sed ut asperiores veritatis nisi quae. Nesciunt rem laboriosam velit ad provident officiis. Impedit sint non doloremque et.\",\n    \"categories\" : \"o3h7nebx1e39aov4vyu5w79hsye54od5h0g4pvl36t0fzecwgswb52bxia78m1ovirdn661dbvr1wzrsrt5\",\n    \"orgid\" : \"os72\"\n  }, {\n    \"issuerid\" : \"t85a\",\n    \"name\" : \"Yessenia Bernhard\",\n    \"description\" : \"Et ut itaque facilis. Qui quas nihil et quaerat. Quae doloremque molestias dolor. Ipsam ratione ab.\",\n    \"categories\" : \"38tsyhinii2782p06k9842x61n3j2jcaugw3qnb5jhcuie94gwdhbwojehuegmzrd2yf\",\n    \"orgid\" : \"m19s\"\n  }, {\n    \"issuerid\" : \"104c\",\n    \"name\" : \"Cleo Swift\",\n    \"description\" : \"Aut qui eos officiis amet qui dicta non. Quas quia accusamus ullam nisi nisi quo. Neque autem distinctio voluptas consequatur aut quis.\",\n    \"categories\" : \"0689f2y8voomw86lfgtu4x1bqgv427wtqy5k2frex6vliey\",\n    \"orgid\" : \"9me8\"\n  }, {\n    \"issuerid\" : \"7132\",\n    \"name\" : \"Wally Murray\",\n    \"description\" : \"Est ut molestiae quam labore saepe. Voluptatibus voluptas placeat natus. Voluptatibus temporibus veritatis ea explicabo quasi voluptatibus ab. Officia minima veniam aut.\",\n    \"categories\" : \"k47a8583cl9q1rl0lelgsuoe50d2yymy3d9all3uo71lnp7c46pkxwyr503\",\n    \"orgid\" : \"uk2k\"\n  }, {\n    \"issuerid\" : \"hq0t\",\n    \"name\" : \"Daniel Daniel\",\n    \"description\" : \"Repellendus aliquid non. Cumque sed officia in est temporibus temporibus. Eos fuga sit maiores est. Odio libero sint et voluptatibus et. Natus odit natus sunt fugit est.\",\n    \"categories\" : \"5l\",\n    \"orgid\" : \"zm31\"\n  }, {\n    \"issuerid\" : \"3r55\",\n    \"name\" : \"Jarrod DuBuque\",\n    \"description\" : \"Et explicabo ipsum inventore voluptatem pariatur neque. Nisi nulla enim nisi suscipit voluptas labore. Quam est voluptas deleniti magni pariatur quis animi. Repellendus odit facilis.\",\n    \"categories\" : \"35nnzm\",\n    \"orgid\" : \"54vt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7186430-8130-492c-b2ed-28e925c4c273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.748608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "7b9664e8-895e-49d0-bddd-c794b4789dc2",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b9664e8-895e-49d0-bddd-c794b4789dc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.747084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "44b80b6e-4807-47eb-bb10-f2620cf8d6ca",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44b80b6e-4807-47eb-bb10-f2620cf8d6ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.747025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "8ce50f15-aed2-44ea-acba-57130b304325",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ce50f15-aed2-44ea-acba-57130b304325",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.746971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "03ec316d-054e-42d1-b2f6-7431eef14bb9",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"rb4t7e5u4tf46dape9zo85ywdjvkz2sr3vklrefsihztpizfwo67uwj3fg584ruf8nxbd10dhj8295cqddxemo6zovq7zgblmi2wjs9iic3nttet13fqjvxtm0wjwcei095gcnt95qff5e\",\n    \"description\" : \"Eaque ut vero pariatur. Blanditiis est aut velit neque expedita saepe adipisci. Vel et ex.\"\n  }, {\n    \"doctype\" : \"x4dnl2psmpnx48g9w8t3977rhm7l8qstn0i\",\n    \"description\" : \"Quaerat sint eligendi. Quo sed non et voluptatem. Soluta corrupti nam provident. Voluptatem in ut perspiciatis. Adipisci odit voluptatibus ipsa hic in.\"\n  }, {\n    \"doctype\" : \"6cd1g13bffe3idplcpn0fge2r7enuqahhpq6h7uh76zvp6wuny9wzkra1abd29ayp7dloy3sdj4pot5j0xfb7n0a7154l8d\",\n    \"description\" : \"Adipisci eligendi qui adipisci vitae eum quod. Earum illo voluptatem voluptatem. Eum et nihil eaque omnis.\"\n  }, {\n    \"doctype\" : \"hde28g943lq7kg\",\n    \"description\" : \"Ut ipsam rerum nisi autem quo recusandae a. Dolor sed enim et doloremque voluptas non. Debitis voluptas et et minus nulla quibusdam possimus.\"\n  }, {\n    \"doctype\" : \"eod2wn6d6y376027r1p222ew92t9i5qqdcm0jumwb7iyr6pp8gf6bo1pkpc7hxkd580d3wj91lnxmgqyoa65sm2dz4bvdihgpwudhd1uewtf8lhhmis6wudta6lxmdi4j54bh5zxca8hwj9qwt3fo748tfacn2b3u3ew\",\n    \"description\" : \"Nihil blanditiis veniam vel non in deserunt. Est eaque id quidem voluptas sit. Alias aut sequi ratione sed.\"\n  }, {\n    \"doctype\" : \"ivko8gihczg7sw32g0pf88eeesg7m6gfraxtg3w8jrx91v2972y3djysm0cdviob5bka2b3voeiv6l350johabt8cwu4hn34yid9zea018e5vqahmlx3jaelhdst9tesjbkkmjym35sr2u3mf63z566c6ucxmdtj\",\n    \"description\" : \"At ut nam. Illo dolore pariatur dolores. Ad quisquam et ex rerum.\"\n  }, {\n    \"doctype\" : \"a1hvagsw9hc12ppne8f0941svpig6lxw6kv06w80vsaazr316g7gxx945xqq4y0xfv2cnjh9ydyri536af0hhaojqzaym5e6mb4nid7r7377gmhckxxu0l29siaolec71nvgja5meq6r\",\n    \"description\" : \"Harum eum eum et. Ex modi deserunt inventore quo exercitationem. Laboriosam enim et sit veritatis quaerat quisquam.\"\n  }, {\n    \"doctype\" : \"izhi5x1f66g1ril1u8ahbi3kwearrqdbsqh42efdlmx3l9fxiz48c85n7m8r0f9xuc6fga2ok7lu612qvayfdkdublb62f1z0hh2o6cvrg87mi36yvz45p7o25q9livtdq\",\n    \"description\" : \"Voluptatum quidem sed magnam non voluptates. Qui non ratione in dolor quia dolorum excepturi. Ea ullam et. Odio ut veniam dolor.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03ec316d-054e-42d1-b2f6-7431eef14bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.746909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "0dbd7a3f-47de-42dd-becb-8dbd4d610059",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/u621",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dbd7a3f-47de-42dd-becb-8dbd4d610059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.746437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "d6650086-3ba2-40a4-bf41-da9411289727",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/9632",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6650086-3ba2-40a4-bf41-da9411289727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "be1103ee-8c0e-4fba-9cc0-9243be8b3dd1",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/5jnv",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be1103ee-8c0e-4fba-9cc0-9243be8b3dd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.746187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "6afbac72-d7a5-438f-b00f-9936f7ba359b",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/c342",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6afbac72-d7a5-438f-b00f-9936f7ba359b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.746051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "a492df22-4a3a-46f9-b093-c3653b003d70",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Consequatur a nostrum voluptates ut odit facere. Eligendi ab provident delectus. Quidem consequuntur magni similique rem quia maiores explicabo.\",\n  \"error\" : \"opzxd0gacr7hul3ledi0e8csv0i47xq4so1ec4w9408w2kt93ka01ffiiy7vuf5vvpj2g6j8jtmksrv1kswe32nieto08czykpuuc8mnlk78site1w1tvjt142pc7ej7f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a492df22-4a3a-46f9-b093-c3653b003d70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.745774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "9bf6b87f-ec6a-40bb-974d-500e7c750d65",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bf6b87f-ec6a-40bb-974d-500e7c750d65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.745667Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "cb2b2f21-b28a-4e53-9349-3307ce667216",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb2b2f21-b28a-4e53-9349-3307ce667216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.745606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "c13d2969-bbbf-4f35-94c0-7c8cb9fde156",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c13d2969-bbbf-4f35-94c0-7c8cb9fde156",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.745402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "55342fb0-dabd-4aef-9213-889672f35d39",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55342fb0-dabd-4aef-9213-889672f35d39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.745346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "86ecebcc-d5d5-41d9-bfcb-ab3cba5e5bf6",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86ecebcc-d5d5-41d9-bfcb-ab3cba5e5bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "2b8747cd-940d-4880-9122-731faf3a07c6",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"7kbkceo08anihgde0wxo9oi1cdp3kamayfoksewky4y42q6wwmabyu9tzhpqjm2jj23brw2hjjzhwgjpkzruslcwfg5rw7c8bwr4ltzb8roh1qfb85zp8tr1amncfejgdjlmu86t507xbi66xtkd8o3ht6hakiksypd3y9vc5593wucrjnkgdgf0z2bm3r\",\n  \"items\" : [ {\n    \"date\" : \"2022-03-27T12:09:20.743268Z\",\n    \"parent\" : \"8ojpqinbs6mumaofbu327jas2q7tqv6f6aodnr0a7mf6c278zfmm7zh6a\",\n    \"size\" : \"cy89i4jkyam62b0tz5lz67bq4bzslv84mbcsgvry9yvi61imz0fp77cpnm8grj17bwcexm6g5rga9lbbbgbgkydrc3ea0r34oow33ly6s\",\n    \"mime\" : \"qd3188d2p7ymx92qvhtkcomlpkhspj4ss2d01c4nzfp7nh8n5w5404eoy30y84fq81j2t60wkpwrlzxo8vicmc3obulli5zzagga9pibyalikt1xtl0lxs8o16y2nzsh9q15libqshqdshoamyd3avpy7lsc3y721gq64xug02kspgnfrv716n38tpyg2qylf\",\n    \"name\" : \"Mrs. Ilana Lebsack\",\n    \"description\" : \"Ea at non cum sed dolore. Dicta officia adipisci. Dolorum tempore labore debitis sed.\",\n    \"id\" : 189079894,\n    \"type\" : \"3n8ogc5wzsu4uxfr47dtak3adwvf12iplw03wzrgsemxx9hdu74i1dqulussybj4k4fpsyq870mb9la2bgcmyu4c5h4o12tjcvdr3j0t5q2ip56zvx9w451xpf6jj8wwxkn250nzgs2md58nanw8wd2skyhlrsf\",\n    \"uri\" : \"https://web.example.mocklab.io/870495\",\n    \"issuer\" : \"1qef4tbe9ki76t8z4ih6qty8v1g6y3m33cqpxqsgmaxdraynmoq9qf046neuhbw6i75nkixn1ugc\"\n  }, {\n    \"date\" : \"2022-08-07T12:06:20.743535Z\",\n    \"parent\" : \"y1btrxvza1v1rjwlhqex79si8wldgm7kfv1jn2ggh3ei9e4lx8andnt64r0zegk8qi7uzvo64q20o3fns4bckc6uirucztuhm\",\n    \"size\" : \"tjezur78fnj9rgwbevzzitxaru6d4zq5eqdhorjr415607z0wtjl16fc4bje18muazfy4zzpmx62atou4avb08nzoplksdl1jhzj3gwjo9n32bnwqe82c6mgm7xo8sgwvpwms8m\",\n    \"mime\" : \"e8qz9mc7lolqfh4m1ozme0reituj1yrad99xsrfbddau0gardgbttie6ff3jed664ovrg2co21yen2ryk4m93y\",\n    \"name\" : \"Deandrea McDermott\",\n    \"description\" : \"Veniam aspernatur est adipisci nulla velit voluptatibus ab. Animi quidem est et repudiandae est sapiente. Distinctio ut qui totam eum. Nam et ut.\",\n    \"id\" : 189079894,\n    \"type\" : \"4nvcilv5ao9o15qt46juq096qanabniekkni23cfh41m2z6k03f43ml1ehnb1k4t6vvhlbzdv4irv8lwclh909carfzotxczx5thtx36v4q1zn94ss319uxxcqb5l7fzeunm4ocj6cvydwhxvsfg6vb9hwqqbhjyciutgweoncedjwin552qbcrvbzms6nb7kl6\",\n    \"uri\" : \"https://web.example.mocklab.io/427388\",\n    \"issuer\" : \"fmv6qivg5xvt3ovfdv737q31030durtji7rc7ndxpavdu12qhuwpjhm\"\n  }, {\n    \"date\" : \"2023-02-25T08:34:20.743755Z\",\n    \"parent\" : \"oapbngqu9k4seagj54juezr1wcszv3d43aiwomrn3y4n1ktbwu2myi8avnez3sen8m0nqfxogxadr6823yc2uq7d2tw0nn33yjne5mjzevxfsswolpora3mslil8050blpp2i9rrfd11ydmzeimtpg\",\n    \"size\" : \"yj1w6a72\",\n    \"mime\" : \"vaikk4np\",\n    \"name\" : \"Isidro Christiansen V\",\n    \"description\" : \"Nisi dolores voluptatem magnam. Eos laudantium a et nihil in harum nam. Assumenda quis nam voluptatem voluptas odio minima amet.\",\n    \"id\" : 189079894,\n    \"type\" : \"igy1dw1unxwe7q2c0ao4xchcmk6vgui9wlks7xvm5mw7iy21jerj7yn4j6anfsoltp459szr03qnbs6xsf1kjfhkemvl3fuuf7\",\n    \"uri\" : \"https://web.example.mocklab.io/388348\",\n    \"issuer\" : \"0p10zjz1avkcyygqjsu4x4n69orl6xz5cxqyf9ulubuch612hm68yqjp34pewg6n4hatz2sxachmrlrj8dn83hpngrimy0o989amcku64m4ymru6ii2jh4trrg44bh511c95issavvr96015182ijf21av5yr349de3t4iujqq3j0w2\"\n  }, {\n    \"date\" : \"2023-01-11T12:09:20.743973Z\",\n    \"parent\" : \"vrodde4a7z9ndqkz3iawj287z74q17ly8clq63e5nhx9mrko5j4ffvf6axxa89wfgqiv29yhr10ne0325b5roragpc1xowhwdxn481ie1fsjmf33zug25fvw7up7poz5ut55x6org7dcm4uh8subvrofshhgw4oabz4rhd\",\n    \"size\" : \"3uf8gaxbxmun97e9xrcyobpb23awckmj2xq28piy1k9b2kjpj07pjyn60jeo6o43e62rdt2frms7mkfpa6pla8pp20fhg0bmy9oa6yg5ync77t6uclvebtg3zz846ovnrgrlppgcu9zmaxwi8g8f7\",\n    \"mime\" : \"82u6yude286vbwlsvn8an5gdiqj8i6i17axqi6ur6q7yht3pxlryflr0evseyazuzp00wzc4ocprbh7ewz864c2svndjfrsl0kwbchkpsapi0by0h69h8fny4syxdjlvnx5\",\n    \"name\" : \"Ali Durgan\",\n    \"description\" : \"Eligendi aut architecto alias in enim. Rem corporis perferendis voluptatem non quia. Et voluptatum dolorem dolores fuga. Dicta consequuntur deserunt et odit aperiam.\",\n    \"id\" : 189079894,\n    \"type\" : \"19o6398hyxgcgy\",\n    \"uri\" : \"https://web.example.mocklab.io/069683\",\n    \"issuer\" : \"gsqfzyutvtwkrxopzhm810ziv1te0edt1ty402k9daulaidnx93e0ntucilsf6wrll8bq26tr779e3wlv2cn5gpvjww315b2v0cw4d5b35fpj9x6i4dh9js87prsvburvmns7s513yvgrz30t3zwg7bur4gqdf9mpjtifny163m2girtvjx6uks1dhe1e2\"\n  }, {\n    \"date\" : \"2022-09-21T10:50:20.744189Z\",\n    \"parent\" : \"jm3cd94jaw61x4ey9ii1eo5qgraoes6q0i41pl3ckvxxzhbwz9aqnmcc734mitobvkcjhmota5fuevoeqcbyf7kk943\",\n    \"size\" : \"iubf784528x0qjrbrxlxrevu8lxvdpz4mtgzenfr4hgbz00dv6j0lg3i7uub44ezvls64muq9krhzvparobr815pnpcg5zjij83nk2ouwbxf6zzgnxrzexs7fcwbk5qo8h62a22nz0o0kldh7j0nhfhw0dqrb7k3rpzkb3zhoxfoa0gvu5v74048uvuxk\",\n    \"mime\" : \"04fhmacpab4p1sgw231iwba1l0rnw386zxdfedh5bvvtr6hdf2ueh15r15wn3o9unqix4zkxr5cjnxxuv0f8g0h2tajg2bqqotodmoxdx55s6lxk21sjnte4deyxp4iwpdlvauydos\",\n    \"name\" : \"Brenna Hettinger\",\n    \"description\" : \"Sapiente qui unde quia. Repellat dolore qui et est harum reiciendis. Amet possimus optio. Vitae ut id consequatur maiores mollitia dolorum. Velit eos fuga ut ipsam itaque.\",\n    \"id\" : 189079894,\n    \"type\" : \"po89311rp8jteapcwgdz562h8szzqwdpz05enqzldp74b0x4xvcwseh7wz3rmzj40o46f211m4jr86us8eh1io2tj70i9pjstabeqyt6blni7lzigv2zdbsr8ugbs9yhplgwud9ploz2acl\",\n    \"uri\" : \"https://web.example.mocklab.io/842539\",\n    \"issuer\" : \"iqpx21w8hfg5wg9qnbf5ra0jqjq9atrday445qkely6w4su9rfdh6vaskm2mk29gm6aqh9eomys4xq2igwsax39ztz05vanehiozf7uuf7boieg7ug5tjars388rayjrzu5ob2ofg4y09buhhirtdra\"\n  }, {\n    \"date\" : \"2022-06-13T09:07:20.744404Z\",\n    \"parent\" : \"qixn4ieh6iy1jln5uk1n8ziusfr0zkw5g46qwpivggrqbjlq46sslf321beat5wm9msmjja958h6fh8jdjtgjobj8k4os1vxcaxv1krvxx8jv3sdbif3hq163ncieydmq5ldt8f4d9i2z95bxjvd5d16ofjbda6lu6t8t3ssoxiz7zbxn\",\n    \"size\" : \"ipspzx57b1i5jzzfg1rxdz0o07n9edyxubnn85kkrhnxfl50l1aezk99svn1ythltzb77fv275rp4m1wwthjl50jbgkavlr7hc6u5kzqx0b8nr6y1x8ivi2nwxihezxk\",\n    \"mime\" : \"4blghvk0re3060k1knd0j6if9cta38tt8ezbdexhn00rh0ww44v1atc7hzgetiuhlqnj8phv9p1xc9cqs1nqta3hjr8nt7v198zapi8a3xi727dlo2zc03w2lo3m24xhy1p3snjmbc30rcnznztqsdyicf3i19ft0w3bll6zafsw\",\n    \"name\" : \"Teresita Reynolds\",\n    \"description\" : \"Non nesciunt et modi aspernatur perspiciatis. Dolor aliquam nobis ad voluptas excepturi. Alias autem deserunt deserunt. Id veritatis et aut et.\",\n    \"id\" : 189079894,\n    \"type\" : \"0rl5ayb2rstangpm86spj5pty37t96wabqkziolq3acil5u65gjgb4nwwfj8z6u97788atxup4fao02ihyx85yify8451211zni8kuvhzqf91uxzzo7dm34db3psmj12gxpnmcnkcvnlginzbbozmw3v3sj9o7qecqmc10tht4041s5y9z9l\",\n    \"uri\" : \"https://web.example.mocklab.io/438390\",\n    \"issuer\" : \"8v1ff1km13qzg0yuwkbtwl9r20af288hybt2mkr6roajtxvd0m6lj4c3987ce1sakxk6bobwuvdlakacuj6rw\"\n  }, {\n    \"date\" : \"2022-12-23T11:36:20.744624Z\",\n    \"parent\" : \"vrptc8\",\n    \"size\" : \"ex2apwh5p2djcc2dmkwoswqyqq\",\n    \"mime\" : \"2ltgfjwf8ec1p013o3l5hy8nr3ps97tkk66mafjoa03roczwe2qtj68q7qvwa7ev4kv42bdua73vn1xv8b1kc8hhdlb4q29cewp4msuae21g0vaxq5l288izbm3sldyxx5ip2txw06f0b3naw1hnqjcxq31lkv8mbmsnzizf5jnm\",\n    \"name\" : \"Mitchel Simonis\",\n    \"description\" : \"Nihil unde sit est quia facere. Placeat qui nobis quia excepturi laudantium. Blanditiis quas eos exercitationem est debitis.\",\n    \"id\" : 189079894,\n    \"type\" : \"en96i9p4vnlqf803fsvwhz19hebxs339il6vj4kodvo4o3\",\n    \"uri\" : \"https://web.example.mocklab.io/945550\",\n    \"issuer\" : \"ebo14r3xr6\"\n  }, {\n    \"date\" : \"2022-06-02T10:57:20.744825Z\",\n    \"parent\" : \"3gpkoc4bk3e0yqvbjy0ucq9n145celinska69\",\n    \"size\" : \"sc92yb7zbbh3i7m8ixgotiw8kcsi5z24gl1ocsv\",\n    \"mime\" : \"zc6xlv1hap4ucibclrd8862j9pkdm6f09shc7gqzu72ez32jiaytzmcq7zlswf9c2f4tfwuoulg9plxosdcrqjzpfah4r2xsr8vvarcmriqum6j9tls\",\n    \"name\" : \"Blanch Bosco\",\n    \"description\" : \"Reprehenderit voluptas vel nemo placeat. Ducimus reiciendis ex atque. Vel eius sunt eos dolorem illo facilis. Aut et sint fugiat ut nihil aperiam eveniet. Aut ut rerum ut error.\",\n    \"id\" : 189079894,\n    \"type\" : \"x2qwdwdqmn9pd4hhggwgne7wwl1uww242ukoc41ja2y455sdd4rge3bn0ly2aqkevjto8q7lpfot7dq7yoeqt7zdfpxx1tr5yi5pmqqgcn1\",\n    \"uri\" : \"https://web.example.mocklab.io/024984\",\n    \"issuer\" : \"iasmbjdj85apg7uv4hbecl6nj38wxgwb4r4nr9c0kfiu2io537txf5uxgwqlrkkt17t8jszncp7co4kjialpo9xez8f92hksc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b8747cd-940d-4880-9122-731faf3a07c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.745216Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "ad4ae652-fe55-4e89-bd6b-c711dd00aefb",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F219020",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Consectetur quibusdam in quis explicabo nihil dolores. Voluptatem nemo rerum quas ipsum accusantium praesentium. Consequatur sed autem accusantium. Facere reiciendis dolores occaecati nihil molestiae.\",\n  \"error\" : \"9z6i2kdp1vt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad4ae652-fe55-4e89-bd6b-c711dd00aefb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.743184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "c97db990-7c77-4192-8b64-d0f405780ad9",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F924254",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Modi harum reiciendis quibusdam ab laudantium eveniet illo. Ducimus incidunt rerum ex. Corporis aut est unde nihil. Enim sapiente assumenda. Facere possimus amet cupiditate.\",\n  \"error\" : \"5fyl4gxfab8habjec913kvrlaidrmauealj8bqdnt6wrk4z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c97db990-7c77-4192-8b64-d0f405780ad9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.743031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "f42a2de1-8cbf-4c0d-b61d-2fc5480542d3",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F781242",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f42a2de1-8cbf-4c0d-b61d-2fc5480542d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "b140227c-cbfa-403d-82a1-bed53de0330c",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F396266",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b140227c-cbfa-403d-82a1-bed53de0330c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "13dffa96-ef88-49a5-89ea-320c036b3896",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F176525",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13dffa96-ef88-49a5-89ea-320c036b3896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "b0995810-329b-4e1d-986c-80232f8742bf",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F943918",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "b0995810-329b-4e1d-986c-80232f8742bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742525Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "b4d03a58-93ac-45ff-a849-66162333bac0",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F845278",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "b4d03a58-93ac-45ff-a849-66162333bac0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "36878d08-9167-4446-8a1a-7f0640280271",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F355412",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "36878d08-9167-4446-8a1a-7f0640280271",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "ce908245-5b79-47b2-8233-666789f093fe",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F005952",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "ce908245-5b79-47b2-8233-666789f093fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "d66eb67a-dc26-407f-97be-409eec5b5773",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Consectetur a dolorem cupiditate quidem temporibus illum. Vitae eum vel rem omnis. Itaque occaecati nemo tenetur. Quia nobis voluptatem fuga vero. Ut repudiandae ad et quibusdam autem.\",\n  \"error\" : \"vsjlvxxltg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d66eb67a-dc26-407f-97be-409eec5b5773",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "1ebc1852-6456-45b8-a133-b14465561897",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ebc1852-6456-45b8-a133-b14465561897",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.742021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "edc59837-773d-4dcf-89d3-047c8cece8df",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edc59837-773d-4dcf-89d3-047c8cece8df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "660891e2-de77-48a1-8cae-6f8873796387",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"56z4up2qfbnxx7fxr1b8sxlbv5v3draazai9vk\",\n    \"size\" : \"5ftkxt00hp39lrixui79zme1vfm5xpo7ch4urcdiqnupjf727kh52uy8i8hx8dtwhk3b3zpt5wad5hk6dz1x5m352bey5mpgz6kz6gc9yxysqlbnu1518s6tfil8793g8ykxbds63chzemtzjrm1wsucwnq8\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "660891e2-de77-48a1-8cae-6f8873796387",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "26b24d48-1c3e-41df-a513-d60f59ef0d4d",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Eius et ipsum eius. Neque numquam cum. Error qui iusto autem totam dolores.\",\n  \"error\" : \"sguhngv1h9xy3i4nnx018qqy1tr2zfiahitgzakgfbuwscoyonowe3r3pgjytxpdkbb8kre\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26b24d48-1c3e-41df-a513-d60f59ef0d4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "a8f9643d-a5fc-4620-b415-4637f963e7b4",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8f9643d-a5fc-4620-b415-4637f963e7b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "29cb9ab0-e933-4581-9bc5-f4a7613ffa7f",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Qui in laudantium. Sunt magnam aut nihil. Quis ratione asperiores tempore dolorem sed. Facilis ipsa facilis sunt.\",\n  \"error\" : \"4336izqv1tk0sm2pmpu510ixtl7snyv1yrx7xnnz96ap6yehh4tdwbldy8mmrce7sz5uzqx0ckr1hndnt2f1xykrx6qld42uvjb7g2z5frb0r2byepdd7t8c5buddk83xv6jwt2ra3pitd18jiv1mlksvbcumejdyuvt7zc684rc0jeqs5chuy9iy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29cb9ab0-e933-4581-9bc5-f4a7613ffa7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "790d884c-7347-426e-84d1-1b7e297abe03",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "790d884c-7347-426e-84d1-1b7e297abe03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "c6f481ed-2000-4885-a7ed-437634e4995b",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "n1u0bmar0txe218qxwmjyks53hb6rz29tkmkjmcgqrmzpi23czwush7zsj0rj9zt1zbzfghtkedxeidyatirw8p8edi2h61cy3jegujr0b7zrf5qookpq6sb9i9hzo9ax4kh0xe46yk7qyrzdryqubbg9n1q"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F931367"
        },
        "state" : {
          "equalTo" : "Idaho"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c6f481ed-2000-4885-a7ed-437634e4995b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "069f1651-477b-461d-911b-551154127417",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "x5wjsclp9wymncupyi64c025w33edl03w6qocgiam759u7e45r8o9cai7wavo1erowmn82apalr5yq7mr4a3164sjt5cynjo5k3wn77yrfssqxgudt7"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F406206"
        },
        "state" : {
          "equalTo" : "West+Virginia"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"qt78y9v3y0h8fsx2lleaygfuk5263l9g1oc46dlhpstmksrmsb9r07gt48hs74jzlajw0imyu6blcjxq2rej2v2t7lhwcwrwvst4nyel1w2lqxgds4vss791fxvkt5hqq6q8hvpzbeoqwmmb93grucp90rm\",\n    \"scope\" : \"r8q29tsl2dfl2yuab8sjmifjci0b5atk4\",\n    \"token_type\" : \"zlj2x0qv9jljh7d89ubi0vmbrlljeiizxky58\",\n    \"expires_in\" : 6552746018748070579\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "069f1651-477b-461d-911b-551154127417",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.741284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "90481dda-2ff7-4504-a180-513fb5e4c422",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90481dda-2ff7-4504-a180-513fb5e4c422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "09762e5d-44ec-4e71-8e33-dd8277fa4458",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Velit totam recusandae. Eum voluptatibus autem voluptas. Consectetur ipsam molestiae quis. Impedit nesciunt dolores aut nemo labore qui. Minus id ab commodi quod vero odit.\",\n  \"error\" : \"ljbjvm0cq9iwfln6psqtm7mazgg368u483p4w374ug63e1mihhe7awrqf0wg111crdj97221od4v8kursggwa9clrswpzqu8yryuxagm6hed1ltahagmfxr2d4n8ecxbyrlb2c8cq6jgf1x34wfb49q670pgfvu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09762e5d-44ec-4e71-8e33-dd8277fa4458",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "fed6e65b-8319-4e33-92a4-f5638c99110b",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fed6e65b-8319-4e33-92a4-f5638c99110b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "748a9cfb-e1c3-425d-98bb-507a33b7049e",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "748a9cfb-e1c3-425d-98bb-507a33b7049e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.74075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "533356ac-6cf5-4755-ad3a-5e6268b381bd",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Et sed ipsam. Nam ea itaque quae beatae. Dignissimos est veniam.\",\n  \"error\" : \"wqpkczpwjg18f8lvpgfpcdx86dttwfr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "533356ac-6cf5-4755-ad3a-5e6268b381bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "c5d8ef7e-df0f-4182-8ac3-50ed1078742f",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Ea nihil quia rerum fugit. Consequuntur minima ipsam. Illum iusto velit amet voluptas.\",\n  \"error\" : \"kgp1g6rvk1dveevw74bfw78sk78i64x6wkzpvy0za6ex7mj698zm3x2ceb5uuai3zhc5zcss1yvc0eibm31rs1lvzar\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5d8ef7e-df0f-4182-8ac3-50ed1078742f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "5a797b28-6039-485c-8c70-496efa4d730e",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Dolore dolorem ut iste provident quo aut. Ex quia in alias rem. Qui eos ad. Aliquid animi est ipsum ipsam dolorum quibusdam officia. Qui molestiae consequatur eos molestias tempora ipsa.\",\n  \"error\" : \"mh00y3uv9qx5gqcllkpvoqnhxnhv84s7gc36k60k89ij7q9z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a797b28-6039-485c-8c70-496efa4d730e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "b98b6314-354e-40ea-a687-08d5339788de",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Sit et adipisci rerum quia voluptates accusantium. Velit quis a est culpa error et inventore. Numquam voluptate vel et ipsum. Quod reprehenderit quaerat. Harum eveniet suscipit ratione occaecati repre\",\n  \"error\" : \"261xno2u8earzr0u9whyntj1zdkevvygvuunye3l7lpybukx9r7enrh046c0biw47k7noo7uvi6wq5zfbucq3ys8r5aabv1uch8o052xvobcpw9hjajhoaz012n5xuyo41inaxjfkx5n6ortgyv9oz7ga4790yp0bbvsqkmzm94pbfc5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b98b6314-354e-40ea-a687-08d5339788de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "21f89b4e-e867-4474-b3f5-99b4143ccb35",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21f89b4e-e867-4474-b3f5-99b4143ccb35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:20.740159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 89
  } ]
}