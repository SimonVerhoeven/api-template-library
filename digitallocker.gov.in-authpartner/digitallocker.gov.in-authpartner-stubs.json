{
  "mappings" : [ {
    "id" : "3f56d192-1486-47d3-9cc8-f284fa1262a8",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Expedita dolorem quisquam odio veritatis sequi quia. Fuga in et ut eos. Et et cum vel inventore et. Voluptates nihil voluptas.\",\n  \"error\" : \"9jnzmjngnx2n5ig8mvrt0xsat7715v7yu8rhoyhl7k6p4n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f56d192-1486-47d3-9cc8-f284fa1262a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.52361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cfdbf491-b60e-4b1f-bb43-8578a0c33581",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Est qui eos. Est et dolor aliquam sunt. Amet quis incidunt. Magnam ex est itaque vitae nihil et. Quia a velit est quidem sed sed et.\",\n  \"error\" : \"eknwld863n1h5yaia1s9khtx7zo02ckcn9l2fwyb0yid5xio8ew2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfdbf491-b60e-4b1f-bb43-8578a0c33581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.523513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f22ff27-1b1a-4fac-9252-08e300549fe2",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Est inventore recusandae. Architecto et quia fuga. Natus laboriosam ut rerum.\",\n  \"error\" : \"p9vdapy5ohggms16jzabaycg74tbwfczm27wqtn5fntffocr5i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f22ff27-1b1a-4fac-9252-08e300549fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.523413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a0f19aa8-0ff5-4e7e-bdc0-5d838811e99d",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0f19aa8-0ff5-4e7e-bdc0-5d838811e99d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.523302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a0cd8e5-a185-4fc8-9b07-264b80507201",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a0cd8e5-a185-4fc8-9b07-264b80507201",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3db729e7-0a8e-4141-a538-07719fb6ee2c",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3db729e7-0a8e-4141-a538-07719fb6ee2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "829d6694-c231-4d42-8a33-555a2c6032db",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Nihil et repellendus mollitia ducimus esse sunt quo. Odio porro occaecati iste inventore ut. Neque aut et.\",\n  \"error\" : \"r6j40112qd2matfsolgjshzea1odb8mtxcj9v8gwz4cdpis2hubas58u4b99qbytmcbi6pv7ozs4mn41jfees6tccbxcl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "829d6694-c231-4d42-8a33-555a2c6032db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.52272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "3f2bb8ea-1ab0-4a29-b642-1195b000249a",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f2bb8ea-1ab0-4a29-b642-1195b000249a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.52263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6ef8f7ae-2977-4614-85e7-25fc8ca3a0d7",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ef8f7ae-2977-4614-85e7-25fc8ca3a0d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "faa3793b-c5ae-4306-b947-582ae924de5d",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faa3793b-c5ae-4306-b947-582ae924de5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "894027f9-8cf6-42f3-94fe-4d74d4648e46",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Atque facilis numquam a praesentium ea distinctio ratione. Nulla eaque accusantium qui placeat ratione libero. Facilis sint et dignissimos esse a iusto. Nulla minus similique voluptas vel culpa cum ra\",\n  \"error\" : \"90b8j90u5fbgq29os02a0rd83qyjblgc8fr7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "894027f9-8cf6-42f3-94fe-4d74d4648e46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "1a65fec9-2d71-4d31-91bc-6bb061db25ca",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a65fec9-2d71-4d31-91bc-6bb061db25ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "68688a69-b9a3-4be8-89e1-ead9af3e3426",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Eius explicabo quia qui et amet. Animi quia aut et libero quis. Natus dolor aperiam ab eaque quo molestiae. Voluptatibus corporis enim doloremque ut. Possimus et vitae explicabo et.\",\n  \"error\" : \"flku56lh3mooae1ytjjcpto94rutqss370o2x25hmqo0r8z7tgbdbdl29k1l8mm50edw3uoi6yzpfjbq2tzw93wxdcs0u3cy74cim285neo0tas7dw6a0embb2w7qmhce509gawwsvc8nbuqpod2a7pssu5m2s9i8yqw4iok5wb6jsdjfmbxo6bo3cb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68688a69-b9a3-4be8-89e1-ead9af3e3426",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "dc5d696f-4502-4f6c-b1ce-eae024a7c8c5",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Officiis et facere cumque porro. Sequi ut beatae. Fugiat veritatis doloremque delectus. Corporis quod ut molestiae nulla in molestiae architecto.\",\n  \"error\" : \"iqusge6ufqdhe50bsh9n3d0o9056n3e9rvew1566avj1e7d4lgtzk9zue3ymi80l41ixo0lny6wmhgmr3uzt7d72q33hi5149oeme13onfpp0fvbn3by614etq7o07fze4vbboonl6l82hniuzd59gt076ye0pzhj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc5d696f-4502-4f6c-b1ce-eae024a7c8c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.522059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "421b2e34-78c9-4115-8eba-7c00c0e17c1d",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "421b2e34-78c9-4115-8eba-7c00c0e17c1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.521953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "050bb485-c9a1-4e8e-be9d-20ff02a8867f",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "050bb485-c9a1-4e8e-be9d-20ff02a8867f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.521884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2281e601-3d76-4387-908f-247e3557942e",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"58kdclihhb3b132ct9rveumznqtr18fxvvkfnr46d9ouwg7cvv2bvxkgistlnv2h67kmi0up89zr395m9u96lg3yx4h2cbwquifrpf0ahptfiq0jdy85x84jxt\",\n    \"Rar\" : \"e9mvrkpuxm9\",\n    \"code\" : \"hgmyf9ovhn4lqdrcj0yx9ezrglcdwt1t4usla5w1qkee7pr\",\n    \"Signature\" : {\n      \"xmlns\" : \"c0oc0j6vp29nu95q9p8jucg9jw660r1uwxi38w6hrc5jcz6c80n94g14r21acwma0sfk7x46tn56clvqhk06leijhyvemg83fmt7k49t5h3csi0n4xbgzcrrv3xj950ha2igzz0ali9xfwz4oh01cglz7\",\n      \"SignatureValue\" : \"kadk2wr4ma1m9a6n2zeo8rqqftjfp3ndwvj28kkozw9bhg7lmwouzerdc1ofpnsn40fiz2u1gvd6amxckuos7w11ssg7gbo8k5jrn2n3fvl0su817atl32ucj52rbdq99lmej3kcbz24oenqtfvnxsk9xded57o4lo1qsr0dsffz2481d6rgae8sdrxb7ugn93zdyxp\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Camelia Grady\",\n          \"X509Certificate\" : \"z9zevvkhiqde7z7n6b3noaw7v7ei3sxv1hrbwyf4xu37xd1n8jivs7betiqrm4e70g6j\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"srknbu4esvwtgfbfsbnk016jdetmsotufxrpmlc4cevq9ais0zcuii5o6xguoc3dkvhccjcubibett914l4ndd2vk8mhmvsi8yj3pkonlknfywh79ph3p2d7zmmhdn5mepc0xor32ss2mjrx65w5xjzgj4kgbusbja1ufwzm3ld\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"sz1ui0y6ktqq2z61846tqlg2rjkoubr3wq73dexlyzqmk64iawkb9i60cxdhw5ta28vkthysvqd3nriz9ov113grwsnlhqgbgohrj4vxxnc7eu086h2lbfrshhzw8gx5wu25mdmp3wt0u7h9vahv7d8xcjgwl14egz9tgi81tpvv2d7bm3hc0a8oy7yr\"\n          },\n          \"DigestValue\" : \"45gcyasr188j41tw1sbvj87dnosxr52u6f66x0rr7qm2lksyx1ins5ixssthzhx6e4g4i4ofo5qr5dddxesp21wq92h8clttfba8t5\",\n          \"URI\" : \"https://web.example.mocklab.io/033122\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"xpvcaw8zizc74m2n31gdrl3fohaf7t8c280fcmrh2kh45s0er2u29hppu96pdtgi847zbdpk57ll6wj9pmjxxsut4czez2vb0w0e558vnvb61yr5sglq3bswaisqg6d0miztwewavxhppqpzihioboul1kjwnjj4yr08jc0tuslgmgcjgcvgyolk1e21rz\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"tpaslkyjaznv9v3\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"n763\",\n      \"Poa\" : {\n        \"country\" : \"Saint Lucia\",\n        \"lm\" : \"5t8wwdu5k12i8twlyj3vo3c6hhmxtn07xyywi4ygohfyiv5npsowjialbl9f7tpk08koi8j08a1rki80przn5bktasq8pzr4v1lnngfzc4vt0faz7ssf77q48bebw86mwje5i9kitot2exfymjhx06og8gwszgmkl1imrirodogg4933p0xv27\",\n        \"loc\" : \"eopbedq50fvw0g9r57r4g8gz6wc8zp8ifln3l6j4r61hushbnril24q17j5ojstxu6b4314dfu7x4zv9628792gazastkft8gglaclbtln8463jm938rdscsvz5i8t2sz6nic93i86x54dtu9bkkuwwy3ccslwfaq430j2c95mucl5\",\n        \"pc\" : \"gqrx2u6o0n373tj388aib4yns4aqjm54kkfgad60tq3vvz\",\n        \"vtc\" : \"wj1b3i2uueqhlalsmqqwzqtv0yjtoyzac374otxpb4y2m2unsjay53es1lpbpm\",\n        \"dist\" : \"fjjjgl7snfqh5my9e02ypvtwo9\",\n        \"state\" : \"Missouri\",\n        \"co\" : \"2wejdxk4mtx310\"\n      },\n      \"tkn\" : \"40w1lxrfeuzy4yjnvgca22gg4kqqjexzvlmlpbvyxzp7tvz2hixwpi012m90lyboxnztozb2yjrf2rs2xnyasq2o6h145z4s3k\",\n      \"LData\" : {\n        \"country\" : \"Norway\",\n        \"lm\" : \"ebfqhvwmqyjuhj9d541pi5f41bceagdxnafusvd5bfxd0kutn6kjf1qkn2hhgwtlatlnkg8untz8vrj\",\n        \"loc\" : \"x4fw8uw8r9bvw23m7sb31q4mkv4cw4wu8neeqf6xytqit2acr72pe593ybhwzqsyio12kp1hsinpgl3hsaz8zv2pn6vxb1i3jda0597zjt7e2lgnmngb31m8lex0v13prb046m1jeq4uawug17w1zebvl5n3ko\",\n        \"pc\" : \"eg34xthycnllm2514mp53i47b57kf64tzl3unb\",\n        \"vtc\" : \"mkyszeyidakmlqfctg12x77r5tbusw6n6k6qn9jlvwfiako9pbt4rk99vdn8rukeulnu4rng6wwotzscjyd6dif1cykrvqs97bfzm9emn25suewoc513xdzzev523ptyheptunncunprq6nk4a6g9b2ezosl0n7\",\n        \"name\" : \"Lavone Abshire\",\n        \"dist\" : \"pkh8doa6wruq9tfzjdo6cei6dhzh4ijd6ehtluustblcjz55i9kx0ywn6ae007g600z6529ef4smq4hrdftd2ayngsdz0jovov3atahotn51362j74pf2ct5ap64\",\n        \"state\" : \"Louisiana\",\n        \"co\" : \"upue0g42wooeykwjwmrlcqln0r4olcpdal83bh6z2g3jd2xom7xipqgvcdpkxn23ws0pnaoottwc3t8si9bamwuz\",\n        \"lang\" : \"4a34ef6h3mh40e878acxzorj93bugm3uydlp91gk4aavnse9ww9qe4iwvuctl7kzxb1kk5x13kp5jqkmn2126dnqt9yx1mkdtuazfw6nt2ec0bjtpkcigrlai2chfa3jegkolh3c4aee537wy2ed8tyr1sredgtb8z8\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Bigender\",\n        \"dob\" : \"1933-01-12\",\n        \"name\" : \"Mrs. Cherlyn Pagac\"\n      },\n      \"Pht\" : \"are\",\n      \"Prn\" : {\n        \"text\" : \"ehwec7aqhqtes7w5fkjuoz3bhypix21zxm55z9mnakfjw79apkvfl1kqgvyx9b1qadakzhmgrqwdhu677b2xlgqiop7ypa4rqbgjo00h4qivgdva\",\n        \"type\" : \"5yuad142ouaunogb8pfjkb8w4xmponrlbpc1t8ce0vghy94xwz7n3nd7d47ev0pcegjipm1asi8ijvqa6on15bycxe336br10vz7divwphukkgird7hxds7howcnz4jbqu0s1pf12pqn751knc\"\n      }\n    },\n    \"txn\" : \"9omhlzvvtve61iqlx453ky20f7cqfr6ghu7wfq0i8dixa626cz7gamef1h5x4mafx3jkp6w1zf9h41uck7pfy0qzhjbsfhv4famwrjm75gvvq5u1l30arsj3v7j6d8y34geu0l77\",\n    \"ttl\" : \"j6u6himi35sotlj83f4idgrfkv03k8y7rtj7xqr62kdbe2gock0u75n7edj0i9kndlymarxn8h6f\",\n    \"ts\" : \"ycqqh8i5cl9d3frjr4p8o6isek2sf45tkplylcqscvj5ydu9p62ytex4mw0889rjenlqm21yhe1lrucwp831n6hcee3jjsbq2go1thvettuznrn1y9puwqa9fncdeflrghi16bgwodzqi393xb85238ug7q9t\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "2281e601-3d76-4387-908f-247e3557942e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.521766Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "45941ace-c6cc-4c12-8df1-80185cf19a7a",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Ipsum recusandae harum. Et nam molestiae perspiciatis aut voluptatem. Aliquam rerum ut. In distinctio accusamus distinctio.\",\n  \"error\" : \"snrz7dwst9ra0dagv6p3efp1m911wrsj25yrs56i8112500wq3azfs5uvn3fli0gw314lkp40u2u73hb4va\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45941ace-c6cc-4c12-8df1-80185cf19a7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.520056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "78c7bf6e-481c-4bc3-91bf-d4c83e97bf50",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78c7bf6e-481c-4bc3-91bf-d4c83e97bf50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.519951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b319b3ce-019f-484a-b132-9255b7d03230",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"c0zr9byix1fv3xov0bpo0z5o2jst0k8bhsia3fmlpnmd860d61c0k8t5vlc3283a0cg56lp993dr1ksudtpem\",\n  \"items\" : [ {\n    \"date\" : \"2022-07-23T11:36:35.517272Z\",\n    \"doctype\" : \"x9i3qcbyjzc98najjp25k6jzkx0tat4nnnvjc0hcuq3c25drb28blg40052ly19bmuniyp3a49xj1phvfgee\",\n    \"issuerid\" : \"y96y\",\n    \"parent\" : \"s7j1kc624dyxowc15x3qoo28ngd39uqiqbr9xnwk1nidryfh6cawmkcg34dp67tf2rj71gzn2ajdbvwsn5scyz8ktudhx0g5qle9wvukug62n2yupnf5\",\n    \"size\" : \"pqg97nsfouhs6fd8x8u8ehclqowst819evq7p98agdekfvzq7\",\n    \"mime\" : [ { }, { } ],\n    \"name\" : \"Kassandra Morissette\",\n    \"description\" : \"Eum iure architecto iste excepturi. Perspiciatis nemo aspernatur inventore deserunt illum. Aperiam libero omnis ipsum vitae. Provident libero nostrum maxime minima et aspernatur quidem.\",\n    \"type\" : \"n4asb2ucg5sngbpjqht9vbyrpzzyd4l0hyf31lrcygygsd1hi3b0qjqze3a6905svsmc0yd12u7w6hfs0lkpntjqa95w213860u40oeo8xa06f53gg8a6jg1mop3yu5hsvcot3s8mysw3vtfj00094tr99yl6j924hn23rkdus002q1moc4rm4\",\n    \"uri\" : \"https://web.example.mocklab.io/490260\",\n    \"issuer\" : \"0v88ujkigq6c4gpzz9l2ell4i93nwshvw6pgzxekhtaph6dnge7z8gvh19kk3tkob6tbounp6jt6y0kuiiai1c5iul370hat17o9dyovcq9s96c\"\n  }, {\n    \"date\" : \"2022-05-01T14:02:35.517594Z\",\n    \"doctype\" : \"zfhij69baq46asnowojkuxdivy8c3mlntvotw3j7yc4aif4oi4jh980cyjukc81zzg6ekwhzakhwdp7lgmxa04y6rfi9npghytkf7gfupyeo5or6a3op0567cn55wjl68f5eds103d\",\n    \"issuerid\" : \"atq0\",\n    \"parent\" : \"geq3d12p1tq6apgzkt864wdbrw8ect6rjpdux7op9i7f9dbqjl75tn9pn81eonr23f5uz22532e6c7nq6q5jpt4s166e1q8cpoxnvjf0sfuwtnjf47ic6y2t2iz68hmg1nndyyobsbhsymko6qdhbycztw8u7ps7yixpi6r6\",\n    \"size\" : \"fv7sh7x55gbxhg7vhdcdad8jg78o99y0b3i1dqpgjuys0emjll8kdm68fpr2xt13jvr8gdtptdh2e9nt0bc3gl3u\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Alisa Hegmann MD\",\n    \"description\" : \"Veritatis non qui rerum non. Odit et dolor. Autem similique reprehenderit. Esse iure dolorem error fugiat odit sit voluptas. Veniam at voluptates nam perspiciatis optio.\",\n    \"type\" : \"nn28thqe98lrrh2pwimmiodsy8wr1y0ot\",\n    \"uri\" : \"https://web.example.mocklab.io/661391\",\n    \"issuer\" : \"zqmlmjaz9p80gaw5oc0pfw717x89b5jbo3pjxx6uzlg593r5vzwhi7jsav965581tulxthgpy576nraz4r7ikpol1a6keh9wrjzqy7gueo0a8cfrf8lctqh7sr0krt0j07jqkdf57v7v6o864hfqcymnltyyoh\"\n  }, {\n    \"date\" : \"2023-02-26T13:51:35.518033Z\",\n    \"doctype\" : \"2fsrgubiy0osf424qovf98oxmlugevcdj222pj3a1wrzxi7l1l3h2iv9yc1bfauxxucwzn4ueequqzbeua7rf0f6hn1oqrs0r1ng4qy9ozox3fkk573v53zgmjayhgp6shcs7ugkyj5sff2u\",\n    \"issuerid\" : \"1jr8\",\n    \"parent\" : \"slq7zmybsbby7zc1g1gr6whk3yyfpzabrlupqqz0o7s6v4r7c8fd6jfrtn62n0b59k9kl86l51h4cv2y5gztkkeb18g0k2xhylq37y1htjloukotjkmkrppsbg7ezntkfd53x26wegg5wur8yky24s\",\n    \"size\" : \"mrddubmcfj5grzdlr5m8drhs1\",\n    \"mime\" : [ { }, { }, { } ],\n    \"name\" : \"Manual Effertz\",\n    \"description\" : \"Iure sit qui sed cumque. Voluptate accusamus omnis natus. Libero qui accusantium temporibus est.\",\n    \"type\" : \"pf9h8cfda1f13mmdnlm4zcqjeaorx0qn7ubss3gs0l0mg3cwgoj14962u3szqmmr6r6g31h18ofi6jfe9\",\n    \"uri\" : \"https://web.example.mocklab.io/395387\",\n    \"issuer\" : \"fca0cixx6uro6pvs4p0p7xfqet9kyx78qwug8\"\n  }, {\n    \"date\" : \"2022-11-22T12:21:35.518394Z\",\n    \"doctype\" : \"sl7qew9asx2bh3x9m8gc9zxqf1j86cnb9pbmkco4bqwk0rjkha1kw2d3xq2gm1nvb12fxjy994tje\",\n    \"issuerid\" : \"522u\",\n    \"parent\" : \"srhtmp4flx06vcbsyr1mmokrwux9f4fl7dcvx220m1x1lnoh\",\n    \"size\" : \"w1mxsl731y63v0bgws3i5x74dh6vg9d5ympywd\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Dalila Hahn\",\n    \"description\" : \"Consequatur ratione tenetur tempora. Animi sapiente facere voluptas consectetur voluptatum. Recusandae non est fuga et excepturi aspernatur. Qui iusto voluptatum quos delectus.\",\n    \"type\" : \"u7p6ier9k9j3qiitwfd9u19eo9tuvwv1x98scvy48mvu2gcw61typade0ovpgp7sblqgx2wu8kkimt77wmvxl5k39b4s8nmxj0t41hbw3tetiusr7uvfx4ki75375tt85x25bba1iiwhmsxfa0wwqd66nb16k86aeyoe03h1nifvla3f9pyg0v6k8t\",\n    \"uri\" : \"https://web.example.mocklab.io/918121\",\n    \"issuer\" : \"ptqf839zqi7ne9y2166nue7wz1lgnc04576nlv46domj9pw1lpmlaui9dhx78k4a60rk9gt7q3l1m64799sm1ceus4h1hwm9dxva\"\n  }, {\n    \"date\" : \"2022-07-14T13:52:35.518727Z\",\n    \"doctype\" : \"wx25ybfqfwghb63i8fd4llbj6eg81vn0uxj6p9t7wfpbtq2qxiy8mypvn26n5qp5v9td4wb5epsw3tusvj\",\n    \"issuerid\" : \"e87a\",\n    \"parent\" : \"tgcs7q8ljb8kz6vvcrx4m6ksmrfvoxhljgb4rg7cyjyjkrrf6a65rivt9uyoxaot1fuplgmfqk8cnq2ka2ktej3fyus2z5itsqgxqumyb6vs09jqnwz0v7a8rawdf43r6rdqxpx5dctiamxybfn0j3ivrb3o8gyhc5mo7jvlvu8wx\",\n    \"size\" : \"k1ar4pfsaj2tmnpdfcjd7jlfpb68rzrzsn5gk6b7ya8xkgvkbimwlg57crbusqjn6b9i8pv\",\n    \"mime\" : [ { }, { }, { } ],\n    \"name\" : \"Ms. Rolland Armstrong\",\n    \"description\" : \"Impedit et beatae tempore qui quos fuga eaque. Et quod sed eum sequi aliquam enim similique. Enim vitae vero sit.\",\n    \"type\" : \"rpya0fuupb8r99l4jbdnrpyj0sg3bxb4in25jl2z33zknsxdm43otsxg8jt8n1uch48v0mvaaiae9q7bbmr8w4t4s7c888dh17ih6b18comsbllqfw7eo63bkx1z80dg3pujqumogflsepcv67p2aha0ox49qfa4p6qyflb4pd5t9o3\",\n    \"uri\" : \"https://web.example.mocklab.io/641735\",\n    \"issuer\" : \"3k5\"\n  }, {\n    \"date\" : \"2022-12-18T12:40:35.519031Z\",\n    \"doctype\" : \"z74rq8ygr7yxjtfurmd8wxcmuxbj54w1yl98tvck4gc3ocfnfk1h9eu78058cc52dbk9w7czhddk6xqkh64r7ape\",\n    \"issuerid\" : \"kod9\",\n    \"parent\" : \"k4bbg8umehbusnl9wkqz7m41v63mpood1fqu7pwim0cn2s8x29bu9678kkxkxd20i4aqgpyd0y0etabn0j8wsj12gnsl4rfrpzcbeo89woafse7hgt4txgwthkbft7jodgfyzhy7i4jat3rx46nujilkypu5hh61a0oycsoz2r6sti50roqe7g\",\n    \"size\" : \"jv7ndpi7yk2gqkh9dr4lsfymu1mfbxlkm62je9k93ieio769a2tscao192jbi2mchv1rth6h\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Norris Thiel\",\n    \"description\" : \"Voluptatum et quos. Officia dolor sint expedita illo deleniti laboriosam. Voluptas quis et in totam consectetur repellat quo. Ut dolore ratione itaque. Quasi praesentium dolor quia ipsum laborum et au\",\n    \"type\" : \"n02sr27xov2hy5rxtg0flq7lbctzoxhr251zp9dezql777dfdst9ndwp0hu7p1a3xadd3mhinxmmmg2t3f2e25guglwau4okjav9daj9wixyy0ii7j550644vw21ac2n9b9lndui6x3gv50oo2ku0o3vtmsjdyh8zctpmqi7p864d1d5861ymaqyh8uhs10\",\n    \"uri\" : \"https://web.example.mocklab.io/043038\",\n    \"issuer\" : \"6cnem3jgqz4r24w6z4uhbdte5kr0sw8h3me7kjt65vw04pqqjrca4e02vzrhq979un\"\n  }, {\n    \"date\" : \"2022-11-28T13:13:35.519328Z\",\n    \"doctype\" : \"464xiyk8uoqysh7y8icp2gnwir794jil2gmt093v57rzs4ozgqot4ywc43n1y418vvwvpjbzs52v4fve2yihl2tdl8ufrnhzrcmqxx5ccyeamssei9ylncgm9t8xqi9tjj672kntk900wq332k\",\n    \"issuerid\" : \"kjnk\",\n    \"parent\" : \"9hppgxx0zoxho5vdyayybnq949wm7or26jah73jc8fdpxfn3cjo1ogonvix8awsjkm6o28ao2d9ajflwql4ejnl5y5hl1d3pm6rormpy6t6s8849umyaa9r4cskt4gey9tj5914rcw4zfb4e4zejg5ocqdut0fpf4yj1k8gaj3mccb1udsjnprc4nianz5mjgduxs\",\n    \"size\" : \"jvh4nsnp9u30rdp4qcx8xt009f3klal418xv86qmbtihh7h6gh3ey6hsirn1tbyy6n59umbf4b3v58dwwjjda44y0x28i1eylk2j8qjr1dht3cp8nl620ej7kz5uih8qukcgkcjwt5tcjpxorjvda9opxfj37f08m6r1s5xxsevkwhmykqwhe1u9859e73q\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Agnus Anderson\",\n    \"description\" : \"Reprehenderit sapiente nihil architecto. Dolorum iste eos et officiis possimus. Et earum veniam.\",\n    \"type\" : \"hfr3hmorsjzvx8a9038pwm1devzoo2r58c1vq1pb976izudugwvgs2gnk0w0ya0mi4axpujk6dxwc1t0bg3vn09171rp\",\n    \"uri\" : \"https://web.example.mocklab.io/463764\",\n    \"issuer\" : \"eflrzoukhonbtds0mge2fm3jkqk968d51s7d1s8b5cz014mrd9uiw6ufzj14bnm53y90td1f5aomgpww3l0sli6tpn5q2z14x9ka548o3ybhb9dnvk4ob5imzkssus6s4dfpikvetckuxjmrlvzrd38twoq5g51zeanofy44t89gbs0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b319b3ce-019f-484a-b132-9255b7d03230",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.519857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "da10cfee-1232-4f09-99a5-fe76bd45a947",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F404829",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Nesciunt facilis dolorum beatae inventore quae. Blanditiis aspernatur quo eaque. Aliquam voluptas ut magni nostrum nisi dolorem. Dolorum deleniti suscipit voluptates fugit ratione tempore illo. Quia v\",\n  \"error\" : \"q0sq281aztkelbm9d232aj5cm5ljt4fagxmiladdxy8paoajgvj3s9e6de6gf6r95kke2efdsweo6oxgxgxvmw84a36f7hwc7ozu6ztp9phdeaxis8txd1qt31hiocv3s92j1a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da10cfee-1232-4f09-99a5-fe76bd45a947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.517192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "0279432d-b45e-4440-8d0b-778962185f62",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F856209",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quibusdam molestiae tempora sunt occaecati incidunt omnis deserunt. Maiores est nesciunt. Culpa architecto autem fuga est voluptas ab.\",\n  \"error\" : \"42i0yaf9s4o9ory2aq8rhk81u65xiw198xt6dvgfwbtr2tk9rh8dbymnrgj1s1wehlz26wv9yglvfcduun44oezi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0279432d-b45e-4440-8d0b-778962185f62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.51702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "fc16635e-b3ec-436d-b9e6-020ec31e7b8c",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F547784",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc16635e-b3ec-436d-b9e6-020ec31e7b8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.516852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f3be4e9-06f1-4375-9609-aabdc003a894",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F543194",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f3be4e9-06f1-4375-9609-aabdc003a894",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.516726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fbd08e8b-6e96-48c2-8124-781a0ed3bf58",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F088966",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbd08e8b-6e96-48c2-8124-781a0ed3bf58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.5166Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0e368c92-10a2-4574-ac16-310055382c4a",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F519757",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "0e368c92-10a2-4574-ac16-310055382c4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.516482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "deba6b68-4c65-47c0-a3e3-563c85c2535c",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "deba6b68-4c65-47c0-a3e3-563c85c2535c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.516264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "323e9751-d0fc-4a12-a2c5-15256dd91fe6",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "323e9751-d0fc-4a12-a2c5-15256dd91fe6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.516207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b03c5af3-4bfc-45bd-8cb9-19396fd6068e",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"F\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"N\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b03c5af3-4bfc-45bd-8cb9-19396fd6068e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.516098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "894a4467-f116-42c2-94ed-5d81c0733892",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "894a4467-f116-42c2-94ed-5d81c0733892",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "e8d00046-1290-4fea-b8eb-25d00eec897b",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e8d00046-1290-4fea-b8eb-25d00eec897b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "af60df80-1cf0-4496-98fc-a1d3bf0de70e",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"F\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"rfbunauhtkxyh1lwmnvv4fahkjvwaqvh2o8leqk5oyb7j4xxgz52sngrdlpx3mhooygqz7kqmqyifpfw3nvhnj2xrc9vkz0c056nd3pk54wbaqrmmnvalrjhqr74pk7gnqc59x346\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af60df80-1cf0-4496-98fc-a1d3bf0de70e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3407ee10-a937-4710-8326-2eb6a51bb38c",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3407ee10-a937-4710-8326-2eb6a51bb38c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "fcb2e9a9-f867-4500-b8be-a98396d7ba24",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fcb2e9a9-f867-4500-b8be-a98396d7ba24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "18428b98-23dd-493a-afb3-842480eeb197",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Non ut assumenda molestiae laboriosam doloribus. Dolore pariatur quia fuga natus ex laboriosam. Earum non vel. Aut velit dolor sit ullam pariatur.\",\n  \"error\" : \"tdaz1gio2rtyvztv2aulsgoql\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18428b98-23dd-493a-afb3-842480eeb197",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515585Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "1eb9a665-b3e9-4d70-9826-ea61c6268f88",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1eb9a665-b3e9-4d70-9826-ea61c6268f88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a76419ec-8199-4b7c-9128-5cf306c635b4",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a76419ec-8199-4b7c-9128-5cf306c635b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "83bf27ae-0ef3-434a-b663-3c9924de1979",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Doloribus quis sit incidunt dolorem eos. Ex voluptas provident quibusdam dolor. Occaecati praesentium delectus ut qui autem quidem. Omnis nesciunt dolorum eos debitis. Provident aut recusandae aut.\",\n  \"error\" : \"n42ndpjz1h6p6tgxxu70ug6y89vkp2u57pwnnqz8hwkk2r3c2lyy56dc51a73opmffxz12i2gmagriyj9bixf196clcdo9e3lu5e4ictl94glqiw9gvtj2nsut0okc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83bf27ae-0ef3-434a-b663-3c9924de1979",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515292Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "30cb6550-dc67-4a41-8c2e-f2214441afaa",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/065634\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30cb6550-dc67-4a41-8c2e-f2214441afaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "514bf1da-aebc-42c7-bc83-e97d7c3c9e94",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "514bf1da-aebc-42c7-bc83-e97d7c3c9e94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.515005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d12dbf3-cdff-4f09-98a3-bf5878e3da12",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d12dbf3-cdff-4f09-98a3-bf5878e3da12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3dd0bf98-2ecf-4904-acd0-9230ca412575",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dd0bf98-2ecf-4904-acd0-9230ca412575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37800819-43da-4a7a-9712-ddd1d3e02459",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Harlan Vandervort\",\n  \"label\" : \"voluptatem\",\n  \"example\" : \"l8odak6bw2m3644mylp\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Mrs. Dennis Leannon\",\n  \"label\" : \"velit\",\n  \"example\" : \"a3dxx56qxodw05kte7jlvj12a9m21ylfst7v8f758ghoi3irwm9frkk62s7tw7itft6659p85f3b44eq2qqofxyo213kx9mu4tqi990atffzcko27qqhztn0r4n723793kmbejscwvc63i4ucws0ndw6wd7v5ywznxo655ia5\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Dane Turcotte\",\n  \"label\" : \"et\",\n  \"example\" : \"926nxwujzscqg3lwk3xpw5sl2xdvi2dkb9o4eftyne70rc\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Jewell Bergstrom\",\n  \"label\" : \"ipsum\",\n  \"example\" : \"yicehxir7jkao55l6kjee445ntzahn9am9umiyesp9sb10uu71pyeo05rffm83xp0xvzqn682ltfozz1jcbwm99qjpu9uitn59gg0m2wqjav8u\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37800819-43da-4a7a-9712-ddd1d3e02459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    }
  }, {
    "id" : "ad162dd3-1246-47c8-92c7-36d6f56615ad",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad162dd3-1246-47c8-92c7-36d6f56615ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cbee6308-2f66-4ba0-9084-454e873ec5a1",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbee6308-2f66-4ba0-9084-454e873ec5a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "766aa3d2-8c59-4827-a152-82e121c727df",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "766aa3d2-8c59-4827-a152-82e121c727df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514278Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e3f987de-65eb-4bb1-8d3a-ec4a6eb0cc86",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"7pg0\",\n    \"name\" : \"Bobby Bechtelar\",\n    \"description\" : \"Non mollitia aut. Nihil dolorem fuga quo consequatur non sed qui. Excepturi facere iusto illum odit reiciendis.\",\n    \"categories\" : \"zkhvkm99tkzj9gergdyzaeqwmk43qvd\",\n    \"orgid\" : \"0lz4\"\n  }, {\n    \"issuerid\" : \"g77i\",\n    \"name\" : \"Korey Kerluke\",\n    \"description\" : \"Hic amet ut quae maiores. Molestias nam voluptates. In itaque quam. Pariatur modi id et ut vitae ipsum. Libero et dolorum ad nihil nisi.\",\n    \"categories\" : \"osdk0okkffptdjhlarfstjs1nx3piojrhx3mx3xmsce5aqqva8fyhgpkuztb0x6fdvqiwsicjriebb0akorigeo61x8fww9t6cctl0whih6b3k4ggxoiwx58245\",\n    \"orgid\" : \"7d84\"\n  }, {\n    \"issuerid\" : \"612m\",\n    \"name\" : \"Joey Hermiston\",\n    \"description\" : \"Repellat quis quae ea voluptas sequi soluta. Iure ducimus a accusamus consequatur et distinctio. Impedit est magnam necessitatibus. Consequatur ut sed et est similique. Consequatur sit et debitis fugi\",\n    \"categories\" : \"kq66s9s1i5uw9193uoh0cgf0klx9dbovuebhs0tfz11zi2fpju0s5jq6sdm70fbjqnc6g70ykb10f0es5sdbhgdu7amu5lziq2q10bb5ivzh9sbsgxoae3i10sad9rj853k2z2g8by2ogpb946fewsfa\",\n    \"orgid\" : \"0s46\"\n  }, {\n    \"issuerid\" : \"24df\",\n    \"name\" : \"Stacey Williamson\",\n    \"description\" : \"Quisquam ullam tenetur fuga tempore. Quibusdam magnam ipsa quia iure consequatur. Nostrum et dolorem est tempore odit voluptatem aut.\",\n    \"categories\" : \"f25qapbjk10mejthr1rx47zrklim13i9y2puyt8udbjj500vj4hilp4opgumk1nagluibpdpi3wyb90800aft0ub8h61vfjjuj1vr9u24ydvknh2bhjl91zqxg7kznzszs1xo0jwum8qgyfjr3cj04hzpx\",\n    \"orgid\" : \"r2hc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3f987de-65eb-4bb1-8d3a-ec4a6eb0cc86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.514222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a9a7c1b2-d73b-46e8-ac36-c23864511b1b",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9a7c1b2-d73b-46e8-ac36-c23864511b1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.513154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2f538f00-ab7b-47c6-886f-deb497ad610f",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f538f00-ab7b-47c6-886f-deb497ad610f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.513101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b816b3c-d7b0-4ce3-8f6c-bfa72a76da5f",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b816b3c-d7b0-4ce3-8f6c-bfa72a76da5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.513047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0170c83f-1909-44a2-8d90-7e6f0d57c463",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"rnba3qcmd8h3oeuf623iyj7g9suu\",\n    \"description\" : \"Facere voluptates minus perspiciatis voluptatem ut rerum. Quo porro reiciendis. Neque tempora fugiat quia maiores. Consequatur sint omnis animi consequatur. Cumque inventore doloribus ullam.\"\n  }, {\n    \"doctype\" : \"jvjzo4apxjlgh9qdg96uosspl2yi8zff\",\n    \"description\" : \"Ut animi natus voluptas. Sequi itaque non iste commodi dolore esse laboriosam. Similique eum autem et minima consequatur cumque laboriosam.\"\n  }, {\n    \"doctype\" : \"n0i2pajaub9ndna8\",\n    \"description\" : \"Quas quia dolorem molestias. Sequi ut exercitationem facilis odit necessitatibus omnis deserunt. Est inventore mollitia. Doloribus impedit rerum. Asperiores dolorum aperiam non.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0170c83f-1909-44a2-8d90-7e6f0d57c463",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.512989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f452c78b-642e-44a6-b697-1e57cdf9fdb6",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/0au2",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f452c78b-642e-44a6-b697-1e57cdf9fdb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.512745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "adbd2ba3-c2e8-4753-8037-be1d68d7e645",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/9jr3",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adbd2ba3-c2e8-4753-8037-be1d68d7e645",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.512627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "238e0e43-f255-4d9b-8790-fc17b91d2eac",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/5k6c",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "238e0e43-f255-4d9b-8790-fc17b91d2eac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.512508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "389a6072-f86c-4617-b5bf-49750f179dab",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/g8f8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "389a6072-f86c-4617-b5bf-49750f179dab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.512373Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "d4afb026-2250-49b1-afa7-f2a647a532e1",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Nisi est rerum voluptates et. Ullam omnis culpa sapiente illum dignissimos eaque nulla. Commodi voluptas iste error ut eligendi in error.\",\n  \"error\" : \"p7uk54uy8q7jn0tryvbmamel8y3ikjpebip9bvd0mafozdkf1tjxc6c1i2j176ilpcoabhn4l7tyt7nahkby2ocxa8gwe8mztae81fqgn8em7a4u3hfyxn3fopu2655ymmhz89p6316zb16lvb24zp399g0j78r99m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4afb026-2250-49b1-afa7-f2a647a532e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.51211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "91b5c759-bfff-4ca2-96a4-b22fdaffd3e4",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91b5c759-bfff-4ca2-96a4-b22fdaffd3e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.512021Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2cfc1d0a-fd73-41f4-9f4a-696b534c10cb",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cfc1d0a-fd73-41f4-9f4a-696b534c10cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.511959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "33881e3c-cf6a-4aed-8cae-c9aae2b54464",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33881e3c-cf6a-4aed-8cae-c9aae2b54464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.511759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6ffed649-8b52-48e8-a82f-fe49db11c7fd",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ffed649-8b52-48e8-a82f-fe49db11c7fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.511702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "313b83d1-1000-428b-8d1b-2b373bb6dab7",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "313b83d1-1000-428b-8d1b-2b373bb6dab7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.511645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1649b940-9a84-4736-819a-cec57cef988d",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"mcktg5e1ngb6lei\",\n  \"items\" : [ {\n    \"date\" : \"2022-05-06T11:43:35.511216Z\",\n    \"parent\" : \"2gxnzmkdzq5kvph664ujpju2v05rdpls3gi2zdmnohvi0638eeliq6dkfcihw9lw09o3bs425n7khci7os6yyb0sexv3p31zc4x2zwcdikxcnkz3z\",\n    \"size\" : \"z8cr1g8av6bvj6xn9jkwp94cp26p1y6y0y4os9d4tykwrcgt3j9r97fhr4uhxdld06pjpdzh5w7ljhg8z01kx2tkdj2ca57d8odi1v2qp1i6bxl4soull8to\",\n    \"mime\" : \"jkaaavze8fbfhfbwendt3gj2jk1ju7awfdfi4cg932fx5jnce5bajido\",\n    \"name\" : \"Peter Lakin\",\n    \"description\" : \"Sapiente est optio consequatur. Et natus exercitationem omnis nisi aperiam sint. Nemo tenetur velit et saepe.\",\n    \"id\" : 189079894,\n    \"type\" : \"sbn9by97yw9gsg40a2e71uibswgrrn6yy2u889yr7pnwwuk14zf5yie8i9spjp3t5dl9mf7kmf6t6tusp66vr71vnybh4pfo5515ezd37baxvrudtjrabkzqxqhme378ad5wzb0jqhoc2i4sd3bmejwwmdb1ojzz9pxxuuz3z37jc87p3qt6l6f9k8sdud3\",\n    \"uri\" : \"https://web.example.mocklab.io/754418\",\n    \"issuer\" : \"e6pwnpe7q73161zobwgapxc5drmu45f55fbv6zjwbp5g7006fg2jto6misrssp9bsyicwsw6g2x77d4957cpl7r8iitoay7c6vf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1649b940-9a84-4736-819a-cec57cef988d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.511569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "32c19ae9-dde9-46e6-8bf3-55389f0d7265",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F795883",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Deserunt illum placeat odio natus. Est hic enim ullam recusandae rerum dolorem ullam. Qui doloremque id non id qui. In quidem ex consequatur officia rerum delectus incidunt. Assumenda vel exercitation\",\n  \"error\" : \"3ns1otjdy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32c19ae9-dde9-46e6-8bf3-55389f0d7265",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.511143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "4f266a00-b0a9-4d56-a244-40a5b799fe85",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F799725",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quia excepturi ut commodi sunt ducimus quos. Adipisci repellendus dolores non et. Consequatur nam labore.\",\n  \"error\" : \"o1fquzfevn7t93mrbkb3pcebgxu6i0zlko7s0vq0kcaogm2td03wiqqybt9uhzkfsussmryfhz7a8ax9c4ik09oogw8bb9ppb9p6j7sdj05nlf920vvxhvq93diosa1a6mv60ry905c2vpf0pqfxrqascuwvbamzf0ukcna4q46t5gn005x2ow9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f266a00-b0a9-4d56-a244-40a5b799fe85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "797e1643-de9b-4175-b1a9-ddd20f697dbc",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F120044",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "797e1643-de9b-4175-b1a9-ddd20f697dbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03a9d3cd-d109-491c-a863-abdffde1ad29",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F016303",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03a9d3cd-d109-491c-a863-abdffde1ad29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "04ad949a-c18d-4e59-abd4-c80e4aedaa9f",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F761550",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04ad949a-c18d-4e59-abd4-c80e4aedaa9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d0479329-0eba-468d-9e17-c4996d6af31f",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F654260",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "d0479329-0eba-468d-9e17-c4996d6af31f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "001f6008-cce4-4129-a44f-e34c01b482c8",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F688519",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "001f6008-cce4-4129-a44f-e34c01b482c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "a0965f2e-663b-4f32-97ff-ce131e29ddfa",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F101480",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "a0965f2e-663b-4f32-97ff-ce131e29ddfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "ef48012e-1446-4302-a9f0-956436cc1e54",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F761134",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "ef48012e-1446-4302-a9f0-956436cc1e54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "fff2ab6e-68ea-4033-bc77-31d80417837a",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Minus quidem magni. Et beatae quas nesciunt. Pariatur velit est aliquam magnam exercitationem commodi.\",\n  \"error\" : \"ck29ncgpvwv94a05rszai2zkhe6648w0znj415oa5bg3pu6phn5gmxl5sg44dinhpm3jkj2we67afwfoablpw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fff2ab6e-68ea-4033-bc77-31d80417837a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.510066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b9d5e801-1a02-48c5-8196-c89a11248944",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9d5e801-1a02-48c5-8196-c89a11248944",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5bf03bf0-9baa-4b80-84c2-e1ac273cf78f",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bf03bf0-9baa-4b80-84c2-e1ac273cf78f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f58a4d58-c39b-4a38-9d35-4a302c7f6857",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"5ja5cn6y09x84bfyviyjvxtsk0g0harlwc5d4x3nxaub7vyc7xdjyr92ksl5qjn9t97n0gbvcp82r6cuq6bgo59powpqik0vvwwkkahuyrnnkfyd4rqu739x8g7i9iznvcdjnds0uzq5xre763qcggdalxperl6hspy1vlapgteq46q2z7o6f560i\",\n    \"size\" : \"tzgamgoiram2asbebyyrwunlgww5c2s71e6cemi6fbb5y090xle1pqwyutlj9sgeza0yrez9jtxx4p75kan9p9un1h9id1ddb5mqoxj96wwzvz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f58a4d58-c39b-4a38-9d35-4a302c7f6857",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.50983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "fe660acc-5464-4f35-aae0-9fa26e2b0bc9",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Praesentium error necessitatibus autem ut eum. Sed perspiciatis quis unde nisi. Quae rerum minima.\",\n  \"error\" : \"a7qeiyjgwpzbmombqv9rxqeziyvjgp4nqzk7njc4fxgu56i6hzpnhwskx091lddftxovgcxvsaksti9gcoao805qqkogqcqo2anxqwbd9z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe660acc-5464-4f35-aae0-9fa26e2b0bc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "21ec6618-735f-4751-aa89-58dd6a3939ce",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21ec6618-735f-4751-aa89-58dd6a3939ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509635Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b57cf30f-3ca8-4f61-a7b8-e6211ce37225",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Consequatur ut ullam iusto temporibus culpa. Ex quo vel nobis assumenda eos ea. Unde repellat beatae aut quod est sunt. Qui aut culpa totam. Sed nesciunt pariatur nihil quos natus minima tempora.\",\n  \"error\" : \"uci73uy0dazt5yaeush21tdxezjki6pfh2tqkaohpqlh2afgbahefiaezn60fhcd1pomgqwfnrgvkoo88q0grynn8ufd734dsjbn9fzn0xtzjj1blfthy4lfi8gmqseo89by3r5kwzmlcju1urc6bkjv103e5t6wf2zlto97be9ludu9y8lh7raal3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b57cf30f-3ca8-4f61-a7b8-e6211ce37225",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509579Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "bd8bbed1-351b-4cff-bc85-0d4e750df304",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd8bbed1-351b-4cff-bc85-0d4e750df304",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8be29fc0-a66a-4be6-b463-ac0a1070a23e",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "ytppikm0fads0jll15pw6boavbcxvm5kv828v7makgcy5w8h826qrn2vhk3uboc0cg536oykrpb3d14y8rgipfyel2vqsv3funi48jbdq8pxg0uojc6fj74i4"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F746416"
        },
        "state" : {
          "equalTo" : "Colorado"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8be29fc0-a66a-4be6-b463-ac0a1070a23e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    }
  }, {
    "id" : "dbd545db-87b5-4bce-b324-c4c710e62fd0",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "vf0x1lxtoqxr5jq35urs7lbf0pedmnf5e1tt0adner61eh1ywggspvp3xzco0emn442j2tz"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F950112"
        },
        "state" : {
          "equalTo" : "New+Hampshire"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bes9ihf04qk7m5rvh8d3yuzbw1dey567hmmpbqneuxxq85ll8txmf\",\n    \"scope\" : \"71bnzy\",\n    \"token_type\" : \"hd0x70as85oynewhprz5wyufgqtjb5ov3mc0mxrltw06egqwx55mxj4594llqj239k0fnw3zv02zvgh0qd1gf8jchjhiznayro1me02622tldjszikv56o3rtegmaasxhsqu5pgxrflw2x2fjr89t075btbt3fo8jt4mx\",\n    \"expires_in\" : 4002020245776599031\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbd545db-87b5-4bce-b324-c4c710e62fd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.509219Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "a2079717-88df-4c8d-9208-0765fbbcfaeb",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2079717-88df-4c8d-9208-0765fbbcfaeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8a20b3b7-3427-40ba-833b-768183ed0152",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Perspiciatis ut quisquam. Vel porro dolore quis quo quaerat. Impedit labore nobis. Animi qui voluptas totam.\",\n  \"error\" : \"kwye30d5htved5g24jztyjpblwb8zd9bbzbxpn2kzjsf9out1w7ucitc1rj1sa73z36pw5ysrotmj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a20b3b7-3427-40ba-833b-768183ed0152",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa5ecb5b-9e6a-40d7-a409-19ef9025f51f",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa5ecb5b-9e6a-40d7-a409-19ef9025f51f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508745Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10d17394-7b0f-4596-967c-0eb924138b88",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10d17394-7b0f-4596-967c-0eb924138b88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f5d9b5c9-f35f-4e02-b069-db0b4ee49f7c",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quasi quibusdam alias recusandae possimus. Voluptatem et exercitationem animi quis quia et quis. Possimus beatae in. Fugit est ea iusto voluptatem. Eligendi sequi a possimus maxime nesciunt est.\",\n  \"error\" : \"i14sonrkzo2u4kiflativic2dg1ce58t8p5srv70ukz149l6jsk0z2hi0ho1vxzuf9yuxch1a26wn1128cwrq3gxolb717u3v2vfjhzjhtdb5q318jb3dl3vz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5d9b5c9-f35f-4e02-b069-db0b4ee49f7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5720dc9b-6c4f-459c-bdfb-97446653ca99",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Quibusdam exercitationem et ducimus dolor sunt. Exercitationem corrupti saepe aut unde recusandae. Expedita delectus culpa.\",\n  \"error\" : \"b2fe862gck4n1m5zuf6lc7ogwevem22pik14diz4rk6ck5vs1q77qdos605n3o727ptyw8zpxw5lhwqydmivmctyljzv0dt6bgwsb2apq8ijsrta65jjhormiz5sqei9xut1fioeba\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5720dc9b-6c4f-459c-bdfb-97446653ca99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.50848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3daefae-ceb9-4110-ba3e-54edf2b358e2",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Placeat odit eos debitis enim autem. Doloribus nesciunt molestiae est temporibus. Aspernatur quod et aliquid. Reiciendis dolores voluptatum illum sit quaerat. Quas culpa et veritatis culpa dignissimos\",\n  \"error\" : \"9ipqf9mkhrli68994uacam5ha45sg7ol7dy9mna84zif5bypoqywpq15oal4h3czfaqq322a61r7glkjk5fwt8ilbmstaj8ul9dib6ylr7ti9rmbsht416xrqftc5m6ksbjw921gic7hmwcho1s9aumlrxdc1xiel65t5r08cw84fa7kox93bw3twoqmn39xg4h035e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3daefae-ceb9-4110-ba3e-54edf2b358e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ba5a8c25-784e-4345-9162-3a3c43d6f3c3",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Nihil sed ut sed. Illo voluptas quia quod soluta excepturi doloremque. Ipsum non esse quis natus nihil a. Quod enim est optio. Esse autem nihil excepturi vel culpa.\",\n  \"error\" : \"z3w9xd1n84tlp6ichfodwl93dz10rzhpkm8b4k1tlwl4mv0tzwj3kddtmpikft2y1pb2j03wz10agmhs0z6la3lj7a9pei8hep84k9itbfj21ypb38uigrk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba5a8c25-784e-4345-9162-3a3c43d6f3c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "00e60f7f-ba01-494b-8adf-f16081f50ab0",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00e60f7f-ba01-494b-8adf-f16081f50ab0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:35.508129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    }
  } ]
}