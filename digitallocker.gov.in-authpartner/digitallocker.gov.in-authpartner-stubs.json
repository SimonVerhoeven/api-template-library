{
  "mappings" : [ {
    "id" : "96b51b3b-64e4-492c-b671-1c970e6757a5",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Labore nulla voluptatem quidem eius similique placeat. Consectetur voluptatem eum laboriosam necessitatibus. Odit neque ducimus sed.\",\n  \"error\" : \"lmrluk6rml4zw7703d68zbwzed7m3uczmiih4clwlvyqr0ll1cm46xwe4royu12xqivu7askb2qr5rftfzt4f3awk0sn41nl4bpq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96b51b3b-64e4-492c-b671-1c970e6757a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.239841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c15ea205-27b3-4a37-81a0-161ab6e28b9b",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Quas illum earum. Quia officia et molestias et autem praesentium explicabo. Sapiente possimus ullam nemo debitis.\",\n  \"error\" : \"gjvh6gtqixxcm4l99vuqqxwkcmzadrfxdwtsvjtvnvswypznvij3t9t0r8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c15ea205-27b3-4a37-81a0-161ab6e28b9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.239732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "150d9602-f64f-49bc-aa14-73f33f577ca0",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Architecto explicabo recusandae sit id expedita. Et iste aliquam sit possimus esse. Rem adipisci et esse enim eos maxime animi. Error nisi quasi repellendus qui odio unde.\",\n  \"error\" : \"407gg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "150d9602-f64f-49bc-aa14-73f33f577ca0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.239629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5d372296-f504-4271-8545-889b63d068e9",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d372296-f504-4271-8545-889b63d068e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.239505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e6cf1bef-bc44-4543-9fdc-8a7545b7acd6",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6cf1bef-bc44-4543-9fdc-8a7545b7acd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.239041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67223b63-7ed6-4d46-85c9-e6f2e53d6ebf",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67223b63-7ed6-4d46-85c9-e6f2e53d6ebf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3886cbb4-4d8b-4338-8e18-222c1334aac3",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Vitae nobis repudiandae molestiae quae dicta molestiae. Asperiores nihil nulla in qui nihil. Ullam inventore ipsam autem optio repudiandae.\",\n  \"error\" : \"b5oahb13z7574jc0s3cdesa215p2ccqimozl6pyvxuvjkjut1crgixzow8ro7ttdc4es5i86uqllfvu59crd23291n7bo0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3886cbb4-4d8b-4338-8e18-222c1334aac3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "135bcb85-dc35-4992-8980-92efa0cebb13",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "135bcb85-dc35-4992-8980-92efa0cebb13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "af6f7276-9f2e-402e-a936-ee71235c8bf2",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af6f7276-9f2e-402e-a936-ee71235c8bf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ef977e0b-edea-4503-9161-32177d276c5d",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef977e0b-edea-4503-9161-32177d276c5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "548d0a84-aa42-4e63-899b-5065e69fcec6",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Tempora recusandae temporibus labore. Aut et consequatur sunt pariatur quasi. Consequatur quo adipisci sunt. Quia qui et eveniet. Consequatur magnam et laudantium sed.\",\n  \"error\" : \"brw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "548d0a84-aa42-4e63-899b-5065e69fcec6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ec4f399d-d8ea-4232-b4df-928310789a66",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec4f399d-d8ea-4232-b4df-928310789a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "48a639f9-994c-49e4-a47d-ebae975e20f2",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Est cum hic consequuntur asperiores. Omnis cupiditate exercitationem consequatur sint. Hic enim assumenda et animi debitis. Rerum consequuntur vel soluta repellat.\",\n  \"error\" : \"mtqtwrok4eclmof2up1rktt5f8wc8999xpgdctx96ac622krfotnwyro1e4pzzm8xm7ht9pwzpraokdyb6cdhvrkkydwg2546mn79cu55z3021wfbcyj19xvkzbega4tgch6wiy3q8yg8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48a639f9-994c-49e4-a47d-ebae975e20f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238347Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "183e22a5-355e-4d53-96b2-8f171c555d38",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Porro et ut dolor iusto. Eos id dolorem provident dolores dignissimos exercitationem. Qui officia aut aut commodi. Facilis unde ea perspiciatis. Asperiores unde dolor voluptatibus cupiditate.\",\n  \"error\" : \"ey2vqrdqo7wren1j9tidf2n4g9z3a18ew1ztj75rdyxxasbnkk0cevk59adb0geya9cjydwq744h6g8c56elynyut2uzvnpi0ee9ghu9uosppzunhzd5u38h9feu0m21mkprcybmjqegl8ko7znbojcb3bq0yylltvvyf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "183e22a5-355e-4d53-96b2-8f171c555d38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6fbf66bd-0a51-4de8-b9f2-2ac37a3c71cf",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fbf66bd-0a51-4de8-b9f2-2ac37a3c71cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3199abab-fdd9-4dcf-9c5e-b116aa10fc87",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3199abab-fdd9-4dcf-9c5e-b116aa10fc87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.238047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f516f1df-215b-4330-b71c-c60928ab09ca",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"hy1oz77lw8ddo7iuv3b40evwstzywwbbfihkiujmt47bj\",\n    \"Rar\" : \"evcweqx6mc60oo8t6kdw4vim3fqr1bf2syhlurtmdulon3yat10rapyqtaok3fl9zobgnl7nnjjf6dmwtselgwhgojiprrs\",\n    \"code\" : \"9trf99xpwhklh5hyje6l451hofvr5orocau1xmy617fvlber4aiyh11yrnf617bg6r7hseu012tb4wy219xe7tixm\",\n    \"Signature\" : {\n      \"xmlns\" : \"x7dy5ba68gozwd3wv1mzyc38new0qkdi800i5x7rpvb3d9qu8gbzx5ezgc0gdo8ncf8rgq7hvppx0tq7kofvp3ymp39dr129pr6mvxge3utdfhjq37b\",\n      \"SignatureValue\" : \"zuc2x9ftq4qp2jtqnj2rkwui4j0gph2q43e9huwb6tnrqr1rdf1u1awwgqg1rpa6cqisbqhhwsv5pxjc1asd6oyn0ilhkv61wzlqcg7qeuajr3y6z\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Miss Macy Mayert\",\n          \"X509Certificate\" : \"qpkjwnidrjyynise4nk0ut5c\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"h0tbz4f0muoikg6jfu9serrstd4s4kq46k7ytikhhq6d128mzu73g3re12rlho5vjsjyoy99uy8748gvlvjtdglmbq14mseyfc8fb3pmfanjcw086pxz84dg\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"j9qwu436ohm78cwhveoy3eviruomjp6vmpdljeurrxg0znwp5ak5v2kivadxia4q6anz8gz76aarl3jvrwh8kpwzfhwusvh2yan7f8wlz1\"\n          },\n          \"DigestValue\" : \"4gsqroqriwjr3hoddq8tn31lb4yzfzv5g\",\n          \"URI\" : \"https://web.example.mocklab.io/186128\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"tym0y89otxcwv1ty0fh3hmf4e9z903pfaxuqmemei27fr4dtjdr6rpnq9xy1s0fjwwqayglieb7h1ohrq53nr8vco441ctew1uefr\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"4awyxjkt5ee6xcaj5i6qjsc9xgk3szkeu3qyb0ms7pi4jo6176829oty9y6mqunbgeqvag7waz7\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"2354\",\n      \"Poa\" : {\n        \"country\" : \"Kiribati\",\n        \"lm\" : \"78indq8xkdo023yuqd1hlm52hlhs6g8n3f15g5f1pmkvdh2jd\",\n        \"loc\" : \"wpmr7awhqzvic3fkqvtw8bz8es2\",\n        \"pc\" : \"mvkn5\",\n        \"vtc\" : \"sbtuo2gg1fovlpq4cwi5bvty5hxv51ycypkc3jqh01rohy8d666dvcagrgibhg6e6ct8e9rf1b9cavfowgx5ma0o59l738d4ntwg4ykg1bhdfs7v2yccxox93y7z16rw2tsn22puenv55s48msqyjejmdhakdh489mdu\",\n        \"dist\" : \"236pqifcfqf38do8cd9ft3qf0mxsx5xzydv1rnciy727qtc02x1s8gzijxxw6qkz2fqnwpd7xl4pksrem2hg\",\n        \"state\" : \"Montana\",\n        \"co\" : \"2dlycb8d7a0bnr9x7e4u68su1g99c5i6hpeunrc4cldiv0u5hq64vimzksdrmgspo1705jwgfegdv2pxawlamvm4872zd7lqz2hui9ej4gsa6bb8dcpr62yxiehymmr8zerndnxfy43ti1qyq6tzi4ly8bey1wlvzw7d825ihp279ksrij24s5gn\"\n      },\n      \"tkn\" : \"ycxc0eck7h0e9aggcisvnqjd2k54ck7sut5648yo2ob8y1ekuydly985bm0nlxy5fmkou\",\n      \"LData\" : {\n        \"country\" : \"Somalia\",\n        \"lm\" : \"fmw8frnq1066ridw73\",\n        \"loc\" : \"yck9exe2de\",\n        \"pc\" : \"vis2tiz4z6ne3okntkff2cikdrxqlpc6yycho0wuvdytta29vtb9v98r2zb53r208\",\n        \"vtc\" : \"h4v7ejqlkxpwbmxszdlpwgvo6v493tzd0jyx1ji1ppln7kp023yesr58ad9jw2c1t0kco5ju2i00t1zu2wp0o92jw04gcghy0i40d99xj7rblt4rr\",\n        \"name\" : \"Burl Boehm V\",\n        \"dist\" : \"1d8qfplywm75428pn74oplt3ffdfpcp7uexx65olujy73gx9pi1\",\n        \"state\" : \"Connecticut\",\n        \"co\" : \"xforisavpyatf12cqg5\",\n        \"lang\" : \"2hldpskfmzhd2n7bfpnydkacnvafmy62uqbn50j5ctpya1d2oky28mdfxrq4zmnvsvdos5kbf914d5bah1r0v3dx0\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Genderfluid\",\n        \"dob\" : \"2018-11-04\",\n        \"name\" : \"Damion Schultz\"\n      },\n      \"Pht\" : \"gblkd47s9a1x8zhkm7rzytrzwldaeeh53k3y46vcbbzgbv\",\n      \"Prn\" : {\n        \"text\" : \"fprqyagyu59dbl5pntzg2b964hkrqbaebh7pra2ebmcvw0zif9wjy6r40cps7z0zb47q0kc2tbbgruiho5vn907sopjxcnlwvjuhu4nfr9unb2twwfv6mjkyv1kvd\",\n        \"type\" : \"1yx1ovj6fgo0byg5dd5llyxno3kdpaaxul1tmfl31i5wgl6384wdaylqjrjjuc64v9f2hxs3wxvhv\"\n      }\n    },\n    \"txn\" : \"8v34y7kc1sy65shv9v09wv4k38tu6igcptuba7100k3o8j8wcpydollfxjtsux\",\n    \"ttl\" : \"g05u325kb45gst58ndknlsu\",\n    \"ts\" : \"p35kbwhfrjwzocpux6g8b5nopree25m3wtx43qcu0g5vsi4a5u6dxeeom2ojqj3seo7fqggbymmtg9ylf01qjz0jaogwz4teyrbf5r5uqpauluh4k0gmyidba2udrmcyme3w2nwvnubyx8vhcfdderajdnisgjqmu9hfygvulwe499vd2829bw9q47naswczqx1fh5ov\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "f516f1df-215b-4330-b71c-c60928ab09ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.237928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6dbbb517-b39d-47ab-8d54-4bdc9c023f51",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Aliquam sint et. Adipisci est corporis voluptatum corporis ut. Inventore quo voluptates nostrum. Cum fugit et modi quis velit.\",\n  \"error\" : \"nb4jwxuqjc6y8w341t3pw2o3ofi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dbbb517-b39d-47ab-8d54-4bdc9c023f51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.236169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d5cd028d-7e12-4c49-b663-ef11c3e3071b",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5cd028d-7e12-4c49-b663-ef11c3e3071b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee61d1de-f40b-432b-9463-982357af2fbc",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"ry9630xjwkhtes9pg5wu29ts5tsj6bjiutns9tcd5c0xuive0z94lgcyi5yhhs40lkxntvateeadgylqpk1ybeit0uh348wzyk4laq3r7eu0lgvhjstoskdo4ib\",\n  \"items\" : [ {\n    \"date\" : \"2022-07-23T14:27:43.235181Z\",\n    \"doctype\" : \"yv19ppgjdfqgdggywm0bk88v4w9kv2ndmg4jsati4zcvfbch11zsstwq3j\",\n    \"issuerid\" : \"wl1i\",\n    \"parent\" : \"rm8seombbpgrkjda0vu60tnd515yuignf55tmdgkrrwbc180a2iwatvosyuxh1em58ic3686irqq2b\",\n    \"size\" : \"4ai52neun1nhjekipqi7e02iho7qm3niz4h3zg9tl9pea7bzzw48uuzeky0vn4te6q3iywe7ee2478ubtjzm1cyejfvrta1c70otnde31ofzbgsf2cyyw6573bfast8jte339dilu7juhrjm63icbctk2dtv0pcjt3\",\n    \"mime\" : [ { }, { } ],\n    \"name\" : \"Lucio Bechtelar\",\n    \"description\" : \"Cum nihil non impedit corrupti adipisci velit et. Maiores officia adipisci dicta aliquid nisi magnam distinctio. Eos dolores ipsa. Quas possimus veniam. Omnis porro quo et et aspernatur.\",\n    \"type\" : \"cnqfwt7p5zb30j1icvx6ox1nud7izug9y53ox7l5aihrsoen3xo8p2whsb7hs5qruclsb15zfcpfnz5gaa6wbeicct3gy7nf5hkgcc7v3onl12ucwn7lh44f4kcpl9y8hn800mfpdzoy72fzrrcsjfeemnhgnhaekayficka7gqtpved63op6l8d83ne\",\n    \"uri\" : \"https://web.example.mocklab.io/447100\",\n    \"issuer\" : \"52thpe7yroustfx7sgrm5vf84c5nf0wecn42sx5ucimtd742sfc6d6c815zqkrgvptv3xince5fakzeybgz7kid7qqsmdg7lyzn6faaqfh2z5f0p0g49ujj63nxwfkemxp3rnkap17tzdu12dugr1x\"\n  }, {\n    \"date\" : \"2022-03-27T17:18:43.235544Z\",\n    \"doctype\" : \"d85vg1mc9auetjkqcfs6b90e2akd4qd\",\n    \"issuerid\" : \"f014\",\n    \"parent\" : \"pf89xg1c6n5xitarlwf3y40tqyb4\",\n    \"size\" : \"6i1c8e03tmc89l4plvma0rpbzdqvadodu6xduidv67bkzvybhtzgafos4\",\n    \"mime\" : [ { }, { }, { }, { }, { } ],\n    \"name\" : \"Burma Prosacco\",\n    \"description\" : \"Quidem consequatur temporibus molestias voluptas. Omnis non ullam. Quas amet error dolores et qui incidunt atque. Eum odit est.\",\n    \"type\" : \"ooxu8q9nca9u4nhgqgnm30bo04ssthqogto25awttinsljdfrjeel0fe15zfx54c3envdb\",\n    \"uri\" : \"https://web.example.mocklab.io/967415\",\n    \"issuer\" : \"p7x5011dlt3ceo93dd09t4qhgs0ovkijqh4uzxb3b5iqaw3vh7t2hdz0r8fe6bujpncgeh4z4lueq1l1d2h25whe\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee61d1de-f40b-432b-9463-982357af2fbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bddb8aba-6eb6-4ad8-8e88-43434e216925",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F424559",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Quo est sunt hic qui alias. Magnam ab molestias sequi error animi saepe iure. Ut ut autem. Quasi error exercitationem laudantium in facere. Assumenda aut sapiente nostrum molestias ut commodi nihil.\",\n  \"error\" : \"v15i1tcbjshjuccrxcd23atqxcwgjd0xjrpdb8hb12m74ufsxi8l4baedlzkzwyb5x0xocgz504sv9lmk0k6yinwxodvaz1zj96go6woeea2yjumzbltl5ghy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bddb8aba-6eb6-4ad8-8e88-43434e216925",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.235101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "2765efcc-cdc6-4f36-9e1d-616b8881e89b",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F823992",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Eius quia et et animi sit. Quam doloremque qui. Consequatur dignissimos et amet.\",\n  \"error\" : \"dw9a1jsyn53v3qo2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2765efcc-cdc6-4f36-9e1d-616b8881e89b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6da20685-4f5c-48a5-b301-62411dc82c38",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F408365",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6da20685-4f5c-48a5-b301-62411dc82c38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e2002cdd-95f0-44f7-a1f0-23846f57de55",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F730042",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2002cdd-95f0-44f7-a1f0-23846f57de55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a11d967-a6d8-446e-9afd-1b477e8f1eab",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F335647",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a11d967-a6d8-446e-9afd-1b477e8f1eab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1911ac1c-731a-4cd8-b9e0-95195180d9ad",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F567005",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "1911ac1c-731a-4cd8-b9e0-95195180d9ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1185a2fb-bc15-4fd6-b8ff-0037809fc2bf",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1185a2fb-bc15-4fd6-b8ff-0037809fc2bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "70aee74d-50a4-4974-ac0d-6d013228ad00",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70aee74d-50a4-4974-ac0d-6d013228ad00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b27f838d-54d4-49c2-b45b-a036b2b84a3d",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"F\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"Y\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b27f838d-54d4-49c2-b45b-a036b2b84a3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.234084Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "a14abe2e-25c7-462c-9f35-86caabed1f66",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a14abe2e-25c7-462c-9f35-86caabed1f66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "fda789fa-0c98-4b89-99b0-4af89775f240",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fda789fa-0c98-4b89-99b0-4af89775f240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "fca69b47-877e-448e-bf43-5f48d0652e35",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"F\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"oen57f2cvt1ezuith6f0jo4jocle7dd2d7c341wvahb43gddrdmrdyy7sm5hbwqf65nwzkg4rmyk086wo6md848y3jbc9endsidhec8vxcrzkexqwdzrwf8i98mnxw5c6gah0pegkspkxt6re759wuk\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"N\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fca69b47-877e-448e-bf43-5f48d0652e35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b5e7e27-86b9-45b9-8c04-09c7fd7742fd",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3b5e7e27-86b9-45b9-8c04-09c7fd7742fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "cc090814-481b-4ce0-9b09-ffcc0bdd0bab",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cc090814-481b-4ce0-9b09-ffcc0bdd0bab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "79f7c4fe-a736-4f2e-9ad2-76c95e230f04",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Modi autem illum eum commodi. Ut odio esse ut maxime tenetur deleniti harum. Error veritatis et molestiae voluptatem.\",\n  \"error\" : \"50plaz46gzdpd5ll0593flv3l6ckust3x8l1i44d12ymjyfvd6y6ac83u3lgpnued7hvgeuguir3k8w63kllgm1ltv7vkmstzyphop67o74ksl0pihu3vi9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79f7c4fe-a736-4f2e-9ad2-76c95e230f04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ebd888d8-ca80-4950-a5ba-88c521659d56",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebd888d8-ca80-4950-a5ba-88c521659d56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dc35a5c9-20b7-4c11-9766-7e9f1cf22a26",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc35a5c9-20b7-4c11-9766-7e9f1cf22a26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b07c5c5e-46ff-4b80-834a-2e4679a952ba",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Unde rem aliquam non quis. Dolores expedita eos quos enim nisi eum. Quam est velit sapiente.\",\n  \"error\" : \"2194p1ttc0rg3ecyye5f4ggc7emt7gzx5fqmafaxpd3bx43a84s8ax24iqpsk29mnx731zuyairu2edl0ms0wad8j0fbapl0do09nvpbg6gzukbbdsbl294pbj0ve7aznjdtripxv1yjuaxdksjd8lf62k84ya1wosa2xnoeqkl654\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b07c5c5e-46ff-4b80-834a-2e4679a952ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "56132b71-9b1a-4250-9e32-60f071587f82",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/256863\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56132b71-9b1a-4250-9e32-60f071587f82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "642d3bed-b6eb-450d-8f0e-6440180903d7",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "642d3bed-b6eb-450d-8f0e-6440180903d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233177Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "153393b7-63fc-408d-b7f4-cb8687d97bae",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "153393b7-63fc-408d-b7f4-cb8687d97bae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "79f60fcb-9b60-456b-a3df-76c9b1e0b870",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79f60fcb-9b60-456b-a3df-76c9b1e0b870",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.233061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37af3d75-27ad-419a-9297-4298c6c1f633",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Eda Hammes PhD\",\n  \"label\" : \"ratione\",\n  \"example\" : \"5qcrp1wf3h26foja5acafmgy5mpsud0xta4f7jnlw43oaq0petnuue0pbpet84mn8wrct20amec0a\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Kiyoko Franecki\",\n  \"label\" : \"molestiae\",\n  \"example\" : \"pdz2nbohs5zexwh0yzynuujdmeehsh200405mnj1j4w4f8zb47ybgboah8t2i48z6eo3wxhdr33t5zs4ngqn30wa5uqoloh6m4tamdx6hn5tidwui0tzo5tdbifrixmtlywomh4nfxyokrwy1qhbpnabutggpo\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Sherice Fadel\",\n  \"label\" : \"aut\",\n  \"example\" : \"pysao2e92skiuj47747tog7dzm9s4wioxshy\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Ed McLaughlin\",\n  \"label\" : \"cupiditate\",\n  \"example\" : \"7i389vlpxbvdqbfr3t0i8n9b6aoylabp42lp53dqejx6okfimthg6w220xh444eazh7txz983e57ck6q649o225b8uch6jvacbu5f4k5\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Gemma Doyle\",\n  \"label\" : \"error\",\n  \"example\" : \"j2knlycs2gxf14mksry8skt85b4lz8spj5raqw9yxgq4e7upra7mfp723tpk\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Arron Marvin III\",\n  \"label\" : \"perspiciatis\",\n  \"example\" : \"4m8sau1xlkejo7oc71uukiv9kc8gtk66n99p2zku5i0l18oax5cluqfik6byg27jqfbzergpi0x0ncnsln0veri93riki65n8mfiv5jfkor4y98mjzg3scg0lq1xznzli14cv66lbpcuz8wh6xm591esulw90ml\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37af3d75-27ad-419a-9297-4298c6c1f633",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.232997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    }
  }, {
    "id" : "039bea8f-aaf7-424a-8ebe-a7bbe7737038",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "039bea8f-aaf7-424a-8ebe-a7bbe7737038",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.232387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84c6345b-c09e-42f7-95f5-ecbab05489bd",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84c6345b-c09e-42f7-95f5-ecbab05489bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f775e0b5-6ed1-4e30-8500-133243427381",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f775e0b5-6ed1-4e30-8500-133243427381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.232269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1392c6fc-629b-4275-b00d-36385a1c7661",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"q7ef\",\n    \"name\" : \"Quinn Kulas\",\n    \"description\" : \"Expedita ratione porro. Debitis et dolore aut et omnis labore. Ipsam aut earum sed a. Quia fuga ipsa non.\",\n    \"categories\" : \"8xwofna453m8tevd8idbixpn24hx3e4yi8jiakzjy5supq321p36is666wyz93c1vkt7ed0jnd5j9cfctge5pp4s4ap90fyclza6hfhnaoe4obg8qz2dth8gygq90732hgf7j6txofw4vs6marv5dclc4cxequ6pmje3mukvklx3hvsim\",\n    \"orgid\" : \"94x6\"\n  }, {\n    \"issuerid\" : \"i80i\",\n    \"name\" : \"Iraida Schneider\",\n    \"description\" : \"Doloremque ipsa voluptatem natus ea. Et magni vitae doloremque et voluptatem. Earum velit quis. Blanditiis animi et.\",\n    \"categories\" : \"81\",\n    \"orgid\" : \"9d50\"\n  }, {\n    \"issuerid\" : \"8p2g\",\n    \"name\" : \"Mr. Cherlyn Hahn\",\n    \"description\" : \"Veritatis minima at. Illum consequuntur delectus maxime aut nulla velit. Aut et a.\",\n    \"categories\" : \"7eu70am52kjpmsqx99h7hlz56z7m12yl07c4pu33duuvejlmcufdt05ujniz7qn020y4w9gje171jmy7ilegvgr6pbxzmtpe0ac70jigh69j3lt9fu0cydv4u23wchel4sz5i8lulx8sao29vmg4k31m7wp6ocrshqd9lws1sk917r8ci4nxxer8\",\n    \"orgid\" : \"b475\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1392c6fc-629b-4275-b00d-36385a1c7661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.2322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "550756ac-eb54-429c-8a6e-ec2537a2389f",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "550756ac-eb54-429c-8a6e-ec2537a2389f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.231324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c097734c-0303-4398-9893-78cd28c2aa44",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c097734c-0303-4398-9893-78cd28c2aa44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.231266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "570579dd-bd61-4202-a822-73645754a110",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "570579dd-bd61-4202-a822-73645754a110",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.231209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "449aa222-b2f6-4d43-89f0-6168389a405b",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"3jy4ti9lfdq4ze\",\n    \"description\" : \"Ab velit accusantium. Et quae non. Dignissimos vel neque ut quisquam. Est dolorem sed. Earum libero officia.\"\n  }, {\n    \"doctype\" : \"8dydywq9p7ejyz0ou4baixsy5h5gfnur5inocf7baj0i9yzri2b88iuafe028sh3lxumb2gxur9othzmxpzu9wruiudkk74y2c0uqtqlpfehq1uwl40h0cr72bfkt1r2qm00mjlporateiefmhhbqlats72ysxe806j07w9it3t0rvspq2uqzcwwy\",\n    \"description\" : \"In illo neque consequuntur dolorem ab. Consequatur et delectus quibusdam aut. Officiis impedit aut voluptates asperiores fuga.\"\n  }, {\n    \"doctype\" : \"6a5y193m4qoybazxgwplokvc0sgptrsr6j3nj1bec4h1oprpkfvrcjgq02lchm022vuv245pwvnlvu\",\n    \"description\" : \"Mollitia maiores itaque quasi. Possimus ut facere quisquam consequatur et et. Corrupti aperiam quo dolor. Autem quia facere.\"\n  }, {\n    \"doctype\" : \"j1w97l1fls86o80tid1hohih2x3mf90ftuja21wwrxp3iq0m48a2buiybc90opc48gv0jtq67nh3sl1o0xaos6kobaj0jgrrf1g6g\",\n    \"description\" : \"Debitis iusto qui magnam. Sed totam laudantium praesentium veritatis voluptate rerum. Tenetur earum autem laboriosam sint exercitationem facere omnis.\"\n  }, {\n    \"doctype\" : \"xp95wboq9wjdt3qm8muagk2rmhxsph7cb8qji14hwfc7c8n12eqa586zzufj55x9651gz51np90c68p0duaiaxs9jzmc3ykggcjke4yeqq8io4t8jtars2qh65bny1el25rv3ppbwmmc5nykmcvd\",\n    \"description\" : \"Aut eos nulla sint voluptate quibusdam. Et occaecati nulla facere in ullam atque. Reprehenderit sed omnis.\"\n  }, {\n    \"doctype\" : \"hso52djucqbqsueiz9al0wn3zbmzjm1mbzunlvss4sphgb27qk1y9swdkr5lteilnrzpl9mpubaaepxgbysuqlekcu82sywfz855vegresdxj3ojr3zn174cduxcv8knk626u3gs84kfpiiau7uego375vjn2x6q2d91ikax41yv\",\n    \"description\" : \"Ut et voluptatibus qui asperiores. Qui ratione earum doloremque ut officia et sit. Laborum laboriosam rem sit et rerum quod inventore.\"\n  }, {\n    \"doctype\" : \"o6nz1m5wxkv78woukagg9dlgdluzpjmwndulwrh08k9k2na2mnb09l91f1skg75blpywona7zusxt9jy2ixz42gbspagnlh1kxzrb1g16565pw7qn8uvhf3e7c13eohselxynqk2rxa\",\n    \"description\" : \"Occaecati voluptatem voluptatum pariatur consequatur nihil quaerat sit. Veniam voluptates enim et. Harum et saepe unde praesentium quod ad.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "449aa222-b2f6-4d43-89f0-6168389a405b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.231148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ce35c26b-0408-4234-8e16-5618d04305e4",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/687a",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce35c26b-0408-4234-8e16-5618d04305e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.230665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24cda2cd-eb8c-4bdb-981c-6fc7367a4c40",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/01o9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24cda2cd-eb8c-4bdb-981c-6fc7367a4c40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.230549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "70af16eb-97ae-4d34-87d4-6005c7cf4f79",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/5g51",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70af16eb-97ae-4d34-87d4-6005c7cf4f79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.23042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6fb76952-890d-4fb7-9793-26343db19403",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/757o",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fb76952-890d-4fb7-9793-26343db19403",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.230283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "29da3806-d3f7-42f5-b48c-06753d72abe8",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Numquam modi eos fugiat ipsam. Perspiciatis ducimus quae veniam deserunt. Totam eaque eum quo temporibus fugit sequi dicta. Et et autem nisi eos quae doloremque.\",\n  \"error\" : \"8yv7l80gq413ftj6yg5hlqkufef4cjs8f8a5eamzkq5z4ostb8zqv1043fj1zyvpaegxbhh5wwipazus58e21318jztelhhph25ytjng4nnmuwsptyrh8d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29da3806-d3f7-42f5-b48c-06753d72abe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.230008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "3bb8a597-1c63-43ad-896c-eea2b0499da0",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bb8a597-1c63-43ad-896c-eea2b0499da0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.229898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82aa197b-a35f-4eba-b63b-fc12630f93df",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82aa197b-a35f-4eba-b63b-fc12630f93df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.229836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "09a286b2-c29e-4450-859b-7f0baa03a774",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09a286b2-c29e-4450-859b-7f0baa03a774",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.229632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e3e58c3d-2a56-425d-b896-c4c269afe4c3",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3e58c3d-2a56-425d-b896-c4c269afe4c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.229576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "93273fd5-3264-457e-b978-aff105a9c59a",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93273fd5-3264-457e-b978-aff105a9c59a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.229519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4e3a34af-fe1c-4547-921f-0116d068a98f",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"2xjj3kldvsk8htwm25upq9f814ibx17yd7j90dg30wppwmsjh5oa05dxvv2x7bmnlgcuo0ab63a2d6ueeltoxkfx3zrichxht4znq450qec37r8vaiigoet0751d57ybhn\",\n  \"items\" : [ {\n    \"date\" : \"2022-09-03T15:51:43.228801Z\",\n    \"parent\" : \"ztqa6a7fgrrqjcv\",\n    \"size\" : \"0v1tcpuah4753l8xcocjcfp4g82ji95gkdz2ycknib4l3m3ydjaa8vaicdr9ezx222ffxeippuouju76k6k32gljzro3ke5o44gebybyew3isdz1nl1pdtubfudth34s0d2rwhx4lx8oql5utsatejl0\",\n    \"mime\" : \"h4j9bcha7togxps0rqkhla2rmxgbq7i8ndussaelsr0sp8r0l3u5xavn1o6l024qmrv6fibrq5494zrpgfn59vi0n110i9smszqbx5htydfprt66ywtzqwozcikuu6ptihn3i68ric85ta9sp43e320\",\n    \"name\" : \"Mrs. Percy Klein\",\n    \"description\" : \"Iure quidem atque debitis sunt. Maiores fuga voluptatem quia perferendis quisquam provident. Consequatur nobis debitis. Est nulla dolor.\",\n    \"id\" : 189079894,\n    \"type\" : \"8ug7b175bmbafyiwas0zfa8iyb\",\n    \"uri\" : \"https://web.example.mocklab.io/592362\",\n    \"issuer\" : \"24n0va36cv2ti1fv56alnolqlic4zkqyos1w45851lsa96g9m1vha39o6qn7lozh53awkmt5\"\n  }, {\n    \"date\" : \"2022-03-25T14:02:43.229062Z\",\n    \"parent\" : \"stbwu80h0m7ug95jb9oau70i1jz1ob3qo4axflhw8yiw601pdi9zcl9019irqfxsg3n0jvv86j3g1oahds7wf8xztyrnqi3cpqygiayy9153criwrdus33de4i2qw5dk6qdx89njx0m1ab77g9dc7hnhrlz7o0n9wmh08eg5nd79c2bknzpjxhogh4lkqiegiu\",\n    \"size\" : \"b0pjnnbj8zupybbkzbpi1rxiz2rfut\",\n    \"mime\" : \"bb2vzivtjfcgaqy2751mj3rwyr2ua6eygdg97lgmbq\",\n    \"name\" : \"Tyrone Bartell DVM\",\n    \"description\" : \"In qui accusamus. Qui autem quia exercitationem. Eveniet amet ut temporibus. Eum deleniti et et.\",\n    \"id\" : 189079894,\n    \"type\" : \"qb43sduoen3omc02m463h54agwrmx1pd41z89a8uqmnoty4n0uk2fugbqzpvr3p2xfht8c306q7k8pbhuek2kdzmqd9nqtriqyr18qslr3w5p2lo2so4pqj\",\n    \"uri\" : \"https://web.example.mocklab.io/411714\",\n    \"issuer\" : \"vt1go937rdtlmvosyzab3rujbzbey6w5i164nv6ykbb7syzz4xif6fo2y7pexujvzob6n5gvbr10ybn41qkk9dr1mts5q51c29m7mtm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e3a34af-fe1c-4547-921f-0116d068a98f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.229443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "85f10c0d-e7df-4fcc-8a14-f874a383cd62",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F489698",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Totam similique modi ea aperiam rerum sunt. Quaerat omnis dolorem sed doloremque ipsam. Voluptas laboriosam nostrum ut non. Quisquam magni incidunt assumenda. Corrupti ut facere natus quibusdam.\",\n  \"error\" : \"j4mnva96iyfcb9cv6qr197w4mrtmizra99u0db3z1x73jnodbhxj8cz4om7w8rs62oun6p1xlag8ophwe4pksfmfaipikyeq35z07mljkiy4q1hthvopfcfll7m9wvo5m74mkwpl98b3gme0yule74sdj1mtmt6c9uqjt27bt2o9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85f10c0d-e7df-4fcc-8a14-f874a383cd62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.228718Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "f6266943-0475-4ff8-be7c-8b12edc02833",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F817574",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Aliquid sit repudiandae est nemo ducimus cum voluptatem. Non ipsam iusto vel rem. Odit dolorem neque quam. Ut atque soluta.\",\n  \"error\" : \"95oipw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6266943-0475-4ff8-be7c-8b12edc02833",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.228551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "b0c1f263-c72e-4a81-aa68-399c7b477436",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F305288",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0c1f263-c72e-4a81-aa68-399c7b477436",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.228383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "696ebedd-3fe9-4650-b09c-ca58d2356877",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F030990",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "696ebedd-3fe9-4650-b09c-ca58d2356877",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.228269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5ac6fdd7-aa65-42f1-85f1-6dca968e1242",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F254267",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ac6fdd7-aa65-42f1-85f1-6dca968e1242",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.228157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c78df941-b698-4998-853a-3faf2a93fc38",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F875332",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "c78df941-b698-4998-853a-3faf2a93fc38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.228037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "ea978130-5bdb-4793-ab41-4195d1dce217",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F052934",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "ea978130-5bdb-4793-ab41-4195d1dce217",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "f0b39da9-c3da-43ae-81fc-3c394965d9ef",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F841942",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "f0b39da9-c3da-43ae-81fc-3c394965d9ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "05dd731a-b680-4619-b0d2-9ac32c4f1c36",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F079231",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "05dd731a-b680-4619-b0d2-9ac32c4f1c36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "f75c0eea-0865-4350-8fc9-6be082b2279e",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Voluptatem natus dolor. Quas quidem id cumque quia ipsa sunt id. Unde ut consequuntur et exercitationem quibusdam enim.\",\n  \"error\" : \"c91y1tvu22rwk57kh0x3837e0gbgu0ubttkij10ritvvc820d7lc0pafpjznyd6ww5nwp27lwmo9a80b4ksfehy0bafny2bilpqyw359mvmsl2qskc9aikvx13dfhi27g9ya74mrutmdldnk39\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f75c0eea-0865-4350-8fc9-6be082b2279e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2e3eddfd-5e7f-4ec1-bace-62eeddeadc3e",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e3eddfd-5e7f-4ec1-bace-62eeddeadc3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227529Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "134b0b76-0c5c-4e29-8cfc-c804be5858fc",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "134b0b76-0c5c-4e29-8cfc-c804be5858fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c5ef69b-0320-4634-a521-1baa50ae3d2f",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"pmpw1iihj14h5itgfd32l1wxw1zqz8yri1z6qqs589gh8ykloke05ad76q7m4hc7aa4s7pnq98o6cx1g1fmwp361jgsxluye1\",\n    \"size\" : \"l3onxgqrd61zefzkpy9jpws7lqlw85adui2a4iksjejnm9f963bdt7tfbhmofdr9anlk5zo0qpgz63dnylewga8sottx4l7x25j9958oarxudwslcyo8kd6fgh0wz3nfyabamm1z08oug0djjimil97r3bp17by\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c5ef69b-0320-4634-a521-1baa50ae3d2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9946fd5e-211d-493a-be51-2de1e67ab904",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dolorum veniam quia distinctio sit ut. Est tempore vel blanditiis aliquam eveniet. Quaerat dolor autem est aut fuga.\",\n  \"error\" : \"3pu6etl9shtlkssjy242yz0il4dvkmf5sdodoqb7gdvsyavaxvam2jk6xe39cio0luuvzpyhrqumfkbfa5yfacm00jgkyntgo3to8ohhfpinyd2q3qwl1x3qjk95j6iw8xwg6atqq4chnnifj5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9946fd5e-211d-493a-be51-2de1e67ab904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "cf24f327-4133-4e87-a3a1-33154347c300",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf24f327-4133-4e87-a3a1-33154347c300",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3fd31919-d731-4199-90e0-134a8d6b4b3e",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Officiis neque itaque occaecati aut ut error enim. Rerum ad veniam. Sequi repellendus et sed odit consequatur. Repudiandae ex blanditiis reprehenderit accusamus esse asperiores non.\",\n  \"error\" : \"s6yzfqy15ey439cv6rvhhz3sak9udvarsp6j7tmjjyaofujlaia38uyi15gq4gwveklvpidno\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fd31919-d731-4199-90e0-134a8d6b4b3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "5867067e-8b24-44ce-b352-b9a2fa032414",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5867067e-8b24-44ce-b352-b9a2fa032414",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.227005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9111ab2e-d606-49c4-ad5e-4975a70b8c43",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "tyil6wcwgxr76vpz6v"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F260137"
        },
        "state" : {
          "equalTo" : "Tennessee"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9111ab2e-d606-49c4-ad5e-4975a70b8c43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226899Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    }
  }, {
    "id" : "75b3b3e7-0696-4be5-9f23-1f795fb8da9e",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "e4z4z0lysv78zqtpodjide1os399w6379y0k5656nmw6e6z1nbdjspxwr7syf3v0lt3guvurdw7jp164ypdgtxnwdkors52d7bz2rvbzpcpelstlkrmor1zowy45cxbo63gykdv4cs5bq2yx5t5vza977w5u"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F880070"
        },
        "state" : {
          "equalTo" : "Michigan"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"3a4l2mh6sor9dpuxmty84n4op29te0ii07pkeacx9enuvo4430fd9e8b2olauf5s24j3uitmnd48vaxe50mgxef0a9d62t58z1ai3fkfi5sbsvd827t9b7u9gh9qtk1u4bamvs4e57uxn5r384vovccbydi\",\n    \"scope\" : \"ud2hplsnqm8d0zui4w7uundxph94cl319\",\n    \"token_type\" : \"e4gx8d7ud7dis44pk8leqa966evag13glcpfvc8benez38k5npagt6255nf8aau7zrg935exbqaeg0brqe987iqnh0ttod1iov2ccs18nyu7ky03lus749ipnac7i81tb\",\n    \"expires_in\" : 4702903104287605053\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75b3b3e7-0696-4be5-9f23-1f795fb8da9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "a3fadebc-b84a-4189-b4e3-e047d2e81455",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3fadebc-b84a-4189-b4e3-e047d2e81455",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "96525da5-f51f-4945-9d14-d014b8b16cb2",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Qui laboriosam doloremque. Aut vitae cumque nostrum ducimus. Ipsa expedita perferendis. Corrupti maiores nihil.\",\n  \"error\" : \"zhilezl0kx4pglep2ils4np0k351fzj1r0rttptr1otzf5dg87e7isbg9as2zznm3xp07e3w3gjwq27nwf6bpjn82nqo6it0orwdgk1l7k70hsyefnp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96525da5-f51f-4945-9d14-d014b8b16cb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "15a913b4-c4fc-43d9-ad51-89e93ab55715",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15a913b4-c4fc-43d9-ad51-89e93ab55715",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9bb1232-6615-4a9a-9cd3-71a2f22b5697",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9bb1232-6615-4a9a-9cd3-71a2f22b5697",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226224Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "853e5d5e-034a-4c7b-8253-00650d9eabe1",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Aut et consequuntur. Quam hic expedita sit deserunt. Repudiandae numquam illum reiciendis consectetur. Molestiae est doloribus ut.\",\n  \"error\" : \"ydvkhezs8j14zjlv98wvn5orebeojhph4msv2c4ka8lg9f8m7pd54hryirlf7fc34fzteoyq5y0ir8w3oo0ellpldr26ggrx7opvp0hzelj31ffcjpjzrn60tms64qu1v2ywrlu1gdyyjobwh0jwucfnr1katjxl40m5s3vu4vt89riux27o2jayl36yocp3ti85syq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "853e5d5e-034a-4c7b-8253-00650d9eabe1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "08bbc928-c12d-42ef-ab80-06dad353c103",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Autem voluptas qui ut molestiae laudantium eum enim. Vitae consequuntur totam nemo assumenda illo neque. Quia id a aut recusandae mollitia quibusdam.\",\n  \"error\" : \"xhjyw0oe62m1f722gw6g6aeneobnc14hh7ty3d5avk3q1w1ettiid8md8atz5pxg990az1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08bbc928-c12d-42ef-ab80-06dad353c103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.226027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4cfab284-becc-4d91-8580-43ef099a9ca6",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Ipsa accusantium amet a quos in perspiciatis eum. Laboriosam delectus eum voluptas ipsam. Quasi recusandae rerum aut et non. Voluptatem blanditiis deleniti in deleniti rem qui.\",\n  \"error\" : \"1h1arm769q1q92\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cfab284-becc-4d91-8580-43ef099a9ca6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.225914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2dbcf12a-ce01-4095-829e-523e4abad399",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Minus ut magnam earum aut. Fugit nihil ducimus dolore et dolorem ratione. Amet quasi cum sit ullam aut ea. Eligendi voluptatem voluptatem. Voluptatem perferendis voluptate temporibus quam et.\",\n  \"error\" : \"6jpn9dxj1cnl0sbflkt3dts25cqp0gciz2o103azxj3wjcj9zvuhkj8dkg3j1r2gwvnn8t9ig957okn02b68bakqoi78qga5u680exg9ur4bi800a7kw452k143wz3k13w\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2dbcf12a-ce01-4095-829e-523e4abad399",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.225796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "069354fe-cb97-4395-8fb8-aad6e04b1679",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "069354fe-cb97-4395-8fb8-aad6e04b1679",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:43.225634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    }
  } ]
}