{
  "mappings" : [ {
    "id" : "b64fd6c0-36e7-4194-bea3-427dad5c896c",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Maiores aut qui. Cupiditate consequatur totam dignissimos est odit provident officiis. At non cum qui asperiores. Quia est vel non qui culpa nemo.\",\n  \"error\" : \"03phue6oyjmmrwjr6xzc07iju0jhlqiv2xu51mqgkhy03ws2swwjdtq4ccryx9r0n3tpd2c8rcjymht902n3parb8q5qne9zrd0r2gkf2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b64fd6c0-36e7-4194-bea3-427dad5c896c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.018276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8933377f-d93b-4e3e-a124-306beba8fbd8",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Architecto consequatur ab. Aut porro est dolore consequatur dolorum quae. Autem tenetur id.\",\n  \"error\" : \"g3akrlsi7bg3fcaxj82uq7ktd56x1a4akevkf5ekrxl62gf5debzhsrd2fi3gk5k5ztkhtfn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8933377f-d93b-4e3e-a124-306beba8fbd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.018178Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3daa4617-d131-412f-a138-c19da319e23e",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Quos quia doloremque laudantium hic et delectus aut. Sunt consectetur dolorem et eum voluptas aut officia. Omnis inventore ullam. Blanditiis nemo enim ipsam ut rem velit doloremque. Ut molestiae paria\",\n  \"error\" : \"mb8jiozw690mtfkd11tooxan7e44s5genzzza31ly5h6eqvey7vj11e3nz44ax9kpoew827dvg27pbib18fvkxcgfdzbg0hsjrspue9ca6b9b9wrzy0xrioh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3daa4617-d131-412f-a138-c19da319e23e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.018078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d16ca1c4-26fd-46ba-b1b2-82f0fd9098ef",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d16ca1c4-26fd-46ba-b1b2-82f0fd9098ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b495f08b-cd9a-48bc-ad78-460ed1afd83a",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b495f08b-cd9a-48bc-ad78-460ed1afd83a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2a55a114-0169-4196-8eef-83b88fcabe8c",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a55a114-0169-4196-8eef-83b88fcabe8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4d11b755-994f-41fe-b277-f0e2a48188ca",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Soluta sequi autem est est esse sint. Hic non aliquid eligendi dignissimos enim. Odit fuga autem. Qui sint culpa maxime perspiciatis rem.\",\n  \"error\" : \"3ub97m1ua8joqol1bbdespi7wgqzrzshcdipsisah\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d11b755-994f-41fe-b277-f0e2a48188ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "bd870049-18b4-47b7-80eb-e2985375f859",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd870049-18b4-47b7-80eb-e2985375f859",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "529f2d82-cc00-42b4-aaa5-10215ad0da8f",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "529f2d82-cc00-42b4-aaa5-10215ad0da8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017282Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a62b92ae-5255-4632-a106-5037d3bcfa35",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a62b92ae-5255-4632-a106-5037d3bcfa35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "429bbb13-80be-4cf8-8fa9-78b883d130f4",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Amet recusandae dolorum aspernatur quae. At rerum laborum molestiae esse iste. Dolor quis et. Qui est dolores esse aspernatur ea. Fugiat dolores est blanditiis eius rerum hic tenetur.\",\n  \"error\" : \"ectr3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "429bbb13-80be-4cf8-8fa9-78b883d130f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "94bc40a7-0b6b-46b7-9005-78253fce0f77",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94bc40a7-0b6b-46b7-9005-78253fce0f77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.017047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "41550a91-6ae6-4fae-a182-b4caca1b43dd",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Sequi debitis aut magni. Aspernatur quibusdam autem eius rerum. Labore minus repudiandae porro. Earum earum blanditiis labore soluta cumque rerum laborum. Impedit ad necessitatibus.\",\n  \"error\" : \"gcy6qksvgwuttcdol2ks7rj9qyhh2uk05barww2pggd2i6spn0rhmhmgoz0dpswswgt81djps2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41550a91-6ae6-4fae-a182-b4caca1b43dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.01692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "90269937-9af7-4b29-ad34-434445b46489",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Voluptatum non molestias quod. Magnam illum qui delectus odit. Non molestiae qui vel nam. Ducimus ut sint. Doloribus molestiae ullam.\",\n  \"error\" : \"a7qq0x476zuuevh4sx483unr9prm5ki9t6ms23l6sctnnxv8k9q96asn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90269937-9af7-4b29-ad34-434445b46489",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.016806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "8c0935d2-6276-441d-a4bf-938a5048cb4c",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c0935d2-6276-441d-a4bf-938a5048cb4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.016697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fd043b04-ea89-40b3-a2d8-90c5b77f8ca3",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd043b04-ea89-40b3-a2d8-90c5b77f8ca3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.016618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "68c6a45c-bdba-40f7-b543-a85f090e3665",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"hum3j6acajbvvpk5bm6mfp2b2o5qkxz71ly3o68au34r3y4v21rriexou6vcfetspuoomd6o39cx1b7rkgrip9dn5ty7hh7syvsvugllx9fxx52kpuzdilak07uu46o60euk22sv63e00j9h9ecwrvr7ne36knpwueq9sk40w7z5xj\",\n    \"Rar\" : \"93kit6\",\n    \"code\" : \"bi3ybzlpc5t8ky6z9kbuflxul3p65vs6fjr8begdywmrc0td8bhdnt18dmtthn975cxlmw5l7sqlhow7ynb4v69so0m401vshlxop\",\n    \"Signature\" : {\n      \"xmlns\" : \"ov9p9sgvq9smzn4ifofv9bfapsq4bzvichsy7mtc0catnc4smjwigve8lscdnssn6q2gdvfgpawokuvz7353ctohk5gcx7xqkujtqz3yk4655zh4jsbyrl7wfhd\",\n      \"SignatureValue\" : \"aj5ecdgbbd4c1gxta5h3j9ajspp47s4i3xn91mggbm0rzuqp7mrx38gba\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Dr. Harrison Mraz\",\n          \"X509Certificate\" : \"p0o2y84q5kcwgpaag1nuxqdu3u4i1mp157v3md24god3v5vefpyp6e5ejqpz3i7n754kedqztjvrutj75q7ilj9k\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"dmxbw5r8i2kgdyf9vthaz6613ytoqydxsfhd6\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"gwuckhqruyu1dvpypbfloxyk6y8nmdmcwk\"\n          },\n          \"DigestValue\" : \"a4xk42rl1fhjteqjyghtqz0jihnfvy7gnbv1d3egfwtaevwcg6tkajauf199datqbc7bwybxs0p8u4comfnh4mfdt65z774gh67x4flrpmezvz3adzxifirw1jmk9irnp2xg2e0vtf60jds7wck949zl30yifxry5cuss7d\",\n          \"URI\" : \"https://web.example.mocklab.io/679608\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"h0fius537uvlk5wyk6969sr3sngaqz438hbkc2pu\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"wb5lklbhf1wfozpt1alxz8xvkqiubdeyeyelzodr58jxf2xfzfkas69mv9bjogwv9t7sxp0cazj31j68m9d1wfjhjxfrdsmhcf9rmjjmrys\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"kr08\",\n      \"Poa\" : {\n        \"country\" : \"Somalia\",\n        \"lm\" : \"nxhvhnlirdv3x492fgajj54yrxd9c71g2pqxojb2kh3kkbyqkst\",\n        \"loc\" : \"j6dch5s16rjhl5rc0\",\n        \"pc\" : \"oqkyz0v6vol93rkk9iwlyncj3m65xfd3xaehrxjxpq1j\",\n        \"vtc\" : \"3iczygivp2jkw3dlicjoyl2zk6lwpdyft1mqa0t0aazbv6zuablv9cu2zk1maivspk8zw3knsv8\",\n        \"dist\" : \"g82lnru0lk3a84gbuuvkz66mb88kdhzr7r77scl6j0n6unh0bv5c3km1qnahzdn6hrlk64vfcz4ex2dqy8h1\",\n        \"state\" : \"Idaho\",\n        \"co\" : \"ur2sfy4lafyoqdh2694v03o7c47vwzqqx7no4ihtmh0fmkw6idalkhmm7akgdp21pj32s8yrpvi3pd6xnr83xur417z10entekthvqczksffd0ibrrncn6s7nrwvlwjmaoie490p1lsogl4dilnd1tj58\"\n      },\n      \"tkn\" : \"4iitmr\",\n      \"LData\" : {\n        \"country\" : \"Latvia\",\n        \"lm\" : \"8fuki57k0oqpty9s3onxm61ag0ie3oxsubrsh8ws8k7bvc2zbsd1n1qv5viu0xej0dgkgfu3pmyibklu1g1bayu9f20i553r3xl8x35dgwpfeah8ydrrhe8w0yp0yoz4ejdl28f54w512gmyp5nda8c3w8xufrf8qu9ud9qo\",\n        \"loc\" : \"5mz16p6avt8aru2ttcdqx71aykbslyqwgya7c2xnug7tsuiz5805iax3d8opc1h3au9gjozv9honnpepu2h07wz2h4maw704j4623klpo8opt1vqcra\",\n        \"pc\" : \"7m2e2uexsdenzzl5gpxco8rdcpjh4r92gcxiq5mq2mpadn64mh3e6c56w1xtcd0flz4v2neberkwgh\",\n        \"vtc\" : \"sbeawdzeqn6p24blv1a67qob8wu3diym70uroqbi2bfrwhv576xqo6y0v4vtzjiwhhkzj7v6ckiuoc9br9njj9homsqlph2iwfcffl7qir1h5t3ambtzpj85qnx9iakvc6ynnowa6fyhzknuhkbk408evt6va83fyppafcynhh626l53vuq\",\n        \"name\" : \"Dr. Patrick Prohaska\",\n        \"dist\" : \"b9sjflr8zyq150pee3z54sxpxdtzvi47oc1k1csqidkki0eoiswr3mhnyg9jrux5xiinl78hqtnkyphbswiyyjtfp1oer9fq182ynz172ym7p4j3zetas79ty2drlwiyg3xpzs9de\",\n        \"state\" : \"Nevada\",\n        \"co\" : \"ew51f3rbxarm974o68pp2lnc4vugoqmq2uxa33felvfellhvcj6rrp5pttiaogxzijzrishyan0o6o2zk3w72b7c1xgwqws3gr5wp3tdiz5ii3l5j07mu1hydjc827vri9y5jmmys72e82\",\n        \"lang\" : \"kp81k72w9sfvq5xcys4dsiql0a35kz3pm4wsa80845g30qgoy0w949movs2qnlrosu8iul83ooqmpr6y74dt5sg7orc77igkhac5pg7zs4tr1v4oqdd8u5xztkpm88f9mps6pn8e5jtjo49muj2wsrnvsa917tvjj2kh89k0zm26zmheo1hrd\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Bigender\",\n        \"dob\" : \"1989-03-24\",\n        \"name\" : \"Miss Ella Collier\"\n      },\n      \"Pht\" : \"p4h4m5z77m0q9gmiqwezujd2ctrzvynlwwxj5dtyd6lt7sy44fka49eatme\",\n      \"Prn\" : {\n        \"text\" : \"nw6vnfrzbcb49ah88xtp5x6m4b5nt0l1okx0lk2ikbuo97nxfcbn17aj65e9qvfhaewkn0w2gpumblpojnwv3nb2yw2y6kmjnq7xqn61gjoje6j7emj5gya36xadqvkwf1r0r1eprwnhcb17zd1k03pa17uzyrowx2s341a56w5svo\",\n        \"type\" : \"wf3atne5rbuxshrgg64kbg0200kyomhtocfrvnnpvq6vs54sm9dexl2eg93mm0s9yhy0hz2dqmpyd2rppmi346qcqxjkju3wmbq0vx\"\n      }\n    },\n    \"txn\" : \"ig0s7rzn1vwimbwo6wj1c35ubxzuqu3yiv4063pd1pqk9d5hfqwoo7g0zukjks0i9dxbk04zazbfj14nic848zjve4yjso2a505hgcbxkn0t56cwjdwexkcczf6d1ymfksvier3eu6ks6\",\n    \"ttl\" : \"sax44j51zuca69drztfd6majas9y2haun8vcyhx8w1cwoxjskle9jqap8p8pygmz4ozbspijjh7jjbym6010btga7to4erh7fvl2a1bnqa92s4e9vqvwo8h6ex4esisuo81tcql725pz1uk2cq9fgls0y8y2lludmt3fbt3zma9gc\",\n    \"ts\" : \"soxm38kxhubeqlip2zzcod9k4o1vbp4ahwl7hcym9z2mg5qv5fgvrz9e772rj8yowg89awh2komz71uyxyytfqzhwl2r0yfph6voyffemo2n9lcqpfmabi3e1r0ewtvws4pogdyg8xrcbtry17w6pn0cgxdelvm9emf9p3k3h8l705g\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "68c6a45c-bdba-40f7-b543-a85f090e3665",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.016451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6dd9a09f-c3db-424d-985f-b1689dff20fd",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dolor voluptas molestias ad. Et saepe autem assumenda eius non. Quaerat quam qui temporibus ex omnis quia.\",\n  \"error\" : \"hg6nc8ystxhtk9i40rszarzurv2armu3e9njjamjk4r7iuejaruxs363sigmrx2hsafrhwg8kkxzkwwd5axqbmz5s83usczlz82qycaz2hvd6oo7sggjvj0rc58k0y3l2qfm20m0dcoy8uef8f1347c5426\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dd9a09f-c3db-424d-985f-b1689dff20fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.014843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "3e722adc-1c1c-4340-be6f-c0c221e7ee15",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e722adc-1c1c-4340-be6f-c0c221e7ee15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.014738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5695a9b7-f52f-46c6-9815-c4c65a47a28a",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"rxyqpbeez3spbfei3gh9aeq3vjeitbh3738xpg9uk0t8p5hibqtscm4y5amdxr5wlijqhm58sg886gypgbgdml3tcvmf2zl793w8nbvl0iio7xmr0cbs4upkk46305uyrhplno6wyyyxw25l\",\n  \"items\" : [ {\n    \"date\" : \"2022-05-26T15:06:33.013832Z\",\n    \"doctype\" : \"lyuvq9ec623lo6xefm603laqbgzca8j35sxg16e021gkz6obnvahtk17odyqx15gp2sbcl5w0li\",\n    \"issuerid\" : \"ukz2\",\n    \"parent\" : \"i34zs95bzrzsidbztd654ns925tq00phoeonr7ufvezae83ophpo5g7uom4gwn9r9o1nsg3xsi62s1tw0qp6a3w1tp4i1lxd110bzi9vit73u9\",\n    \"size\" : \"6a3vtej3oaxj7ei25s75pidozymik8ia0grim3bgvqzshlmcr2cc28trera2a0xwruiu49vms1qzdz6k0se2xzaw4m0m8p4iefhs2tmo511aq0fhy5uh7ixre0wjxjtzwnyblka9bt0vkohzi\",\n    \"mime\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"name\" : \"Lucien O'Keefe\",\n    \"description\" : \"Quia consequatur cumque maiores eligendi asperiores molestias. Quis explicabo voluptatem nostrum cumque voluptatem. Et in velit dolore quos est. Iste dolores nesciunt magnam alias quam est laborum.\",\n    \"type\" : \"s8pp0kg0apxqiszt2rtobm4z0yynu62twlcnarcp27bliafmhhl38vs01avwcs4yfxlh4u1y129tvb3skawt036rbum3q90yrf8r\",\n    \"uri\" : \"https://web.example.mocklab.io/283236\",\n    \"issuer\" : \"hmg9buhcpouzy8u00ym7a4yyd3llvsfjz27508tbc0dkxsintq0r3alt\"\n  }, {\n    \"date\" : \"2022-11-27T15:49:33.014175Z\",\n    \"doctype\" : \"86styj7n38p5w7d\",\n    \"issuerid\" : \"4hpj\",\n    \"parent\" : \"2z3cexm44u119hwosga4horl5p4tmpb4l4nswp5f300tenkppghjcy4w1gijqc5xbfxo6evsalzrx0zb20c6ln55skumkao1dxmtfkxp0txufazpc8rj0vfnwur385\",\n    \"size\" : \"kj3bj0pohtq2w2o3y5tybekd5r3wvyl7ohl23obgs5zd6tbktrriw7hh7ewaj18e2kjwys3wqcdv8tf3rtimtor4y2qlvo6qxi03z94yrnygx00sxbem7iata43i6vqdr9whajv8nwfp1k5b3mnfg0rti22s\",\n    \"mime\" : [ { } ],\n    \"name\" : \"Antione Reichert\",\n    \"description\" : \"Consequatur numquam sit quo provident. Dolores a numquam beatae maxime quia. Molestiae et enim autem cum dolores voluptatem. Minima qui excepturi dolores. Illo maxime eum culpa.\",\n    \"type\" : \"vk23qkzx1csc0yrjmhb4o7ce6b20hxtlhnnlv5bzwlxeomql5o6a5diuumtwyo3wb2s98xwvz3nxm98bi4jzzfgba08nmk66c9zgijni\",\n    \"uri\" : \"https://web.example.mocklab.io/197574\",\n    \"issuer\" : \"o0ozt56rqsprs1ypfnkzr5nuhgz2qi26h6ze9kywhv6ljobt061lefm59221nh5enbo4uo5y1uxfc1mizxm8q3dnf2fzh9azxz1l0ehqvc3sjstalams6nwd543m2owkf9hd2o0f2yrmr13xl3atpdriizsbnk21qaq7ysl1u8ufts32z81vazabbsyub8qzp9ohqxrx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5695a9b7-f52f-46c6-9815-c4c65a47a28a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.014659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f932a2c1-f362-4539-b2d6-a809db3d2398",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F756555",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Molestiae velit in accusamus nihil vitae nesciunt ipsam. Quisquam rem et a labore ipsum. Id sunt eveniet adipisci similique velit est. Rem itaque enim.\",\n  \"error\" : \"co6letcjofsily25u0d8nmmm6p5qm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f932a2c1-f362-4539-b2d6-a809db3d2398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.013749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a99868bf-738a-4d1c-a430-8b828b7a3670",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F115546",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Dolorem laborum sequi. Dolorem non voluptates voluptates corrupti blanditiis. Rerum quam nemo numquam qui iusto atque deleniti.\",\n  \"error\" : \"fydieygdaj7r53szv623xqyzyibnaays9g5mwh99oxfqtljyplduukma1gfkd1do568rx6xcya8zkc854fhxfno22jthiwjzrsmgxnin3vli7zh4vj3qmyg4ktencw4gwnk2vjy1zvqzuerwrfrvtfirffqk8adszvyiwub\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a99868bf-738a-4d1c-a430-8b828b7a3670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.013563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "8d285024-a37a-4d6a-b485-56f401297689",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F606627",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d285024-a37a-4d6a-b485-56f401297689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.013355Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f8322c8-3fad-4820-914a-db3c9b73b0de",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F383433",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f8322c8-3fad-4820-914a-db3c9b73b0de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.013229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7fbca1a9-ca3a-4d44-95c2-922705f84d2b",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F447705",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fbca1a9-ca3a-4d44-95c2-922705f84d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.013106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc6d33d5-fe9a-46c0-a3d6-b4ef158c5746",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F427353",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "cc6d33d5-fe9a-46c0-a3d6-b4ef158c5746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7f3f2ba8-f42f-453b-b5de-59a34318df9d",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f3f2ba8-f42f-453b-b5de-59a34318df9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012593Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4285eef3-b457-4d5a-a2fb-f432db5ea5f8",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4285eef3-b457-4d5a-a2fb-f432db5ea5f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.01254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1dd6865e-6e4a-412b-93f9-567819963afd",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"M\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"N\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dd6865e-6e4a-412b-93f9-567819963afd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "11ae10de-56f1-4c32-8741-cab0dccc86ee",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "11ae10de-56f1-4c32-8741-cab0dccc86ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "c02ce709-be26-4522-bf3c-97412572406c",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c02ce709-be26-4522-bf3c-97412572406c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    }
  }, {
    "id" : "a4555070-5586-4f65-86d2-46d9c2132ec7",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"M\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"jbn0ijal1gugtr5dm4mfg78ha5bjdhbv5wybbok9t6zz6hgokw\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"Y\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4555070-5586-4f65-86d2-46d9c2132ec7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92112ee1-429e-4d0b-b111-3a039d634f13",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "92112ee1-429e-4d0b-b111-3a039d634f13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "5b3a3b26-b61b-4031-a5b7-43e35547af74",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5b3a3b26-b61b-4031-a5b7-43e35547af74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    }
  }, {
    "id" : "68c40338-59e4-4258-9b23-40ec4aa77242",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Repellat quia aliquid facere. Voluptatem minus illum. Sit expedita fugiat quia libero. Odit amet et odit et sed veniam. Quaerat dolores et sint non at cum perspiciatis.\",\n  \"error\" : \"034reb5znh61auagpa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68c40338-59e4-4258-9b23-40ec4aa77242",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.012032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6e346bd8-cfc7-4d24-8940-b0ac68b7f606",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e346bd8-cfc7-4d24-8940-b0ac68b7f606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bc26d16b-fba1-4bdc-9207-b276428b8a81",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc26d16b-fba1-4bdc-9207-b276428b8a81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6da4df41-6609-4cf3-84ea-e772398a639a",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Enim nobis eum officiis optio. Et odit sit odio. Natus quam ratione quidem neque voluptas totam.\",\n  \"error\" : \"elj7o6cfrqzwpzi45gkaa4emrubiwq81yscfm3umxf18rw2ts8grhsthtkdqpc0d5i233jebbe5huhcp5msb6hnmptjusw5fhl045dko6qmcjlo2k6nax69ngl\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6da4df41-6609-4cf3-84ea-e772398a639a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d9d44f77-3f4a-4f04-9a1a-86746ff34f75",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/239076\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9d44f77-3f4a-4f04-9a1a-86746ff34f75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "ac7c9d61-f17b-4242-9d7c-76020152c188",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac7c9d61-f17b-4242-9d7c-76020152c188",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e08f3d89-8a8f-4fad-b851-0f930f06095f",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e08f3d89-8a8f-4fad-b851-0f930f06095f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a2d7bd2-567b-4f3d-9dd8-e1199f09493e",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a2d7bd2-567b-4f3d-9dd8-e1199f09493e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c0acb08a-33f3-4974-a9f0-e0fec46ff4c9",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Eldridge Beahan III\",\n  \"label\" : \"cumque\",\n  \"example\" : \"bxxgj7byokjkphw2wkgg10lnqa\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Hai Padberg\",\n  \"label\" : \"eum\",\n  \"example\" : \"xuzrcpsqx6nm26bw250ekhg8\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"King Jakubowski\",\n  \"label\" : \"porro\",\n  \"example\" : \"ely0cq23b69f5wlqpsb70z2tuictwza2r8lo9ujkbxtortm0j92l45gr14qwoc8o7\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Millard VonRueden\",\n  \"label\" : \"sapiente\",\n  \"example\" : \"zpnlbgnvtjbswa58yqff0hiob6dfg7a5w9vaf7uj1w61vfk7oklrua7t5jn2qcf3479rav4\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Trenton Dibbert Jr.\",\n  \"label\" : \"consequuntur\",\n  \"example\" : \"cqllaadoffogox1f0xx2w35ts4cnax3n0nal0gw2m8wietk451mx45ufjkaxgiqsef98lk0cyfulkk8yz\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Ella Dach\",\n  \"label\" : \"velit\",\n  \"example\" : \"7m6tf3cau5ycx2a62ey7l4499p3922xrlcci3d4kc06xie4d21xvuysbu8lcywm9\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0acb08a-33f3-4974-a9f0-e0fec46ff4c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.011429Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    }
  }, {
    "id" : "f564240f-26aa-4d17-b358-f0a91145abd8",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f564240f-26aa-4d17-b358-f0a91145abd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.010856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71144209-7074-483a-afca-4dce35d7ae34",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71144209-7074-483a-afca-4dce35d7ae34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.010799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f1b360b0-27d6-47f3-a771-e23bde959754",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1b360b0-27d6-47f3-a771-e23bde959754",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.010741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3a48686b-4dae-40dd-aa96-b50ff02d4b1e",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"y56v\",\n    \"name\" : \"Mariko Collier\",\n    \"description\" : \"Et iusto quidem. Laboriosam commodi vel deserunt voluptatem accusantium ab. Voluptatem neque cum sed. Eveniet aliquam aperiam autem aliquid magnam. Exercitationem amet voluptatem sequi architecto.\",\n    \"categories\" : \"7piy4eieao\",\n    \"orgid\" : \"5qfc\"\n  }, {\n    \"issuerid\" : \"3nt6\",\n    \"name\" : \"Carline Mitchell\",\n    \"description\" : \"Explicabo eius praesentium et consequatur. Porro veritatis dolor ullam laboriosam. Facere hic dolor.\",\n    \"categories\" : \"y56z78n4sum7564tijb56xmg1q90ucwkvm47dnfqtcl0xs7t9w7aylupk2mdgr9exybjt2gk0qdqoahqkdxnadi8tw7ikbpaduj42rnlylwzihifiz3qao8plzc8xba5r8zby2qafzcmjbkhc2\",\n    \"orgid\" : \"kj2a\"\n  }, {\n    \"issuerid\" : \"o005\",\n    \"name\" : \"Robby Ullrich Jr.\",\n    \"description\" : \"Fugiat doloremque harum ipsa ullam ut sint repellendus. Hic sed quos reiciendis aperiam dolore ratione accusantium. Excepturi voluptas perspiciatis consequuntur qui sed aspernatur. Dolor exercitatione\",\n    \"categories\" : \"mzgnvcwq6lay3z10ukdjcoyez9iy02fy6gu19oook3zf5fa6njr1acq\",\n    \"orgid\" : \"qq39\"\n  }, {\n    \"issuerid\" : \"avq8\",\n    \"name\" : \"Dr. Elaine Jacobson\",\n    \"description\" : \"Repellendus aperiam saepe eligendi sint. Vitae quidem libero perferendis. Quos ut nesciunt distinctio. Temporibus neque vel dolorem quis commodi eum.\",\n    \"categories\" : \"cwmy4qoqklkrordzs38s6fgslkoitbfvfo4zu88wct0ev95c730iw4owqa345fk9odycixtvr33d9lggqbvj7rcsvtmhrvaguovhwrxl0j4sbtubxmltiz012fqhm1s5n0cxtwepp9k5omeyhobsqaklyjuzqugq2pn\",\n    \"orgid\" : \"56fa\"\n  }, {\n    \"issuerid\" : \"79uz\",\n    \"name\" : \"Miss Mitchell Auer\",\n    \"description\" : \"Iure debitis aut molestiae quia laboriosam porro et. Eligendi reiciendis pariatur qui modi qui ipsum. Perferendis voluptatem sunt temporibus consectetur.\",\n    \"categories\" : \"20hb0spi09yt6vbq5x6nslwjt8u953vonnbfavetlootelh5f18lha9cwb4upa2g7gugvml93beouk62qktro8qblypgvz5veui41ul1gvrmrk40zaol9\",\n    \"orgid\" : \"11a7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a48686b-4dae-40dd-aa96-b50ff02d4b1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.010682Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f02eff58-aa22-48c0-a04a-cbe60ced7c39",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f02eff58-aa22-48c0-a04a-cbe60ced7c39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.009388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "efeb7e11-55c5-425a-bd53-59ab042b263d",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efeb7e11-55c5-425a-bd53-59ab042b263d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.009334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e9675da-5a8b-439f-bb6e-3125b480d1da",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e9675da-5a8b-439f-bb6e-3125b480d1da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.009279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6cf8f89c-f100-4cc4-9593-9b4072ad72d2",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"3rbla441nmhpaav72tt2rvbf85emp6qnyzp235us8c6gcu0qp40juxhu958gm6knqfd9yuyn2k690uk623qwtpw7qa353dsjnhbkx2hbuquo7w4unthgn3smbf\",\n    \"description\" : \"Sint rem rem sint aut. Odio quam neque eum ut maiores reiciendis voluptas. Quas enim alias hic qui repellendus. Velit sed et laboriosam corporis. Dolorum et aliquam ut nam veritatis.\"\n  }, {\n    \"doctype\" : \"pofs5wi08yhb6fpsr59jvt36725yj7zmpxmef6no5e2jek1cxvxersd7kfadcczf1rtcnib6v414x8mno7szw9jq5f3qqj1cxvcuy79cn5gjjqa7275fa3rgkcjfmqckarwsza\",\n    \"description\" : \"Maiores maxime vero velit quia deserunt. In tenetur consequuntur consequatur ut exercitationem qui dolores. Ut reprehenderit rem quis.\"\n  }, {\n    \"doctype\" : \"isl84xio2imh3eb72dyjmhgvdwrt1mo98r8beeh91d771owmuy5fnsnzdp\",\n    \"description\" : \"Ullam tempore aut. Et cumque cupiditate suscipit voluptate. Ut qui doloribus quas soluta. Distinctio dolore sunt minus et quia et. Beatae dolor expedita incidunt quidem impedit.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cf8f89c-f100-4cc4-9593-9b4072ad72d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.009217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dc545ee8-89f5-441f-b37e-6898fd37cd5d",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/ns85",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc545ee8-89f5-441f-b37e-6898fd37cd5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f7c55314-d173-4ce4-a7ce-20852978084e",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/9zqk",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7c55314-d173-4ce4-a7ce-20852978084e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.00884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e4b301b4-d418-4c57-b352-fbad5c8409b3",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/g6l5",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4b301b4-d418-4c57-b352-fbad5c8409b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7c925574-edb6-46b2-af1e-674ba100a85b",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/7gw6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c925574-edb6-46b2-af1e-674ba100a85b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008577Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "5071e2f1-b8f7-4f26-8b05-067c82dfaf63",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Possimus ea quia est. Consectetur illum et delectus officia porro nihil veritatis. Quam pariatur dolores maxime porro rem nihil vitae.\",\n  \"error\" : \"2velgiq1ho712p59rfiejd028ftwhv9khlqo4sdo8io0o64w5tsfmmphjzpsoinnvcsyzpw5o18nk8d6gxv6c17k5a73h371tkh3bm234y4y0tl7tdrv71uj9e6b1i1xus8jj27eppc1d4ym88\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5071e2f1-b8f7-4f26-8b05-067c82dfaf63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "2501d601-d4da-4b9a-b433-8f6f01544ac1",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2501d601-d4da-4b9a-b433-8f6f01544ac1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5681c92c-87a5-4e5a-827f-aaa6b1e62223",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5681c92c-87a5-4e5a-827f-aaa6b1e62223",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "e64fe942-f2ec-45fc-a780-5564623c5bab",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e64fe942-f2ec-45fc-a780-5564623c5bab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.008002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4d7b4f1f-6260-4266-b0ae-35a3f36a2f5e",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d7b4f1f-6260-4266-b0ae-35a3f36a2f5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.007948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2bc62ebf-da66-497a-be19-5800311caeac",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bc62ebf-da66-497a-be19-5800311caeac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.007893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5d0bac50-14f1-4f30-b72f-65eef075df14",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"nezocc2tfsxh90xe5sipjqo1qlu0kb2b5qd1m5ddpcx4z9321ne6shk1kl\",\n  \"items\" : [ {\n    \"date\" : \"2022-06-20T15:03:33.006329Z\",\n    \"parent\" : \"k1f805bl7yysx65oaoybmpfyjy3pzertxsjshhjtw4ahamw2sh86eccbpi5nfkc03o3j592h0pammnkxduj5q6us4upzw63i4jqozlhqyqyl16c7y3e5juq7bbfsub5kmsswbrjdw1atgnpji57mot45cmeayouqyntaa9xo4cjfmxao7yxqxnvb12oqnghgkody\",\n    \"size\" : \"9at6woil4o1wttxbi38tnr7ehs7qpiwrnen\",\n    \"mime\" : \"pmfjhh2i14ezdsb\",\n    \"name\" : \"Darrin Wilkinson\",\n    \"description\" : \"Dolorum ipsa quia dolorem voluptatum eligendi est alias. Consequatur tenetur reiciendis veniam nemo illum. Aut vel rem quae. Cumque et consequuntur non in.\",\n    \"id\" : 189079894,\n    \"type\" : \"ogooumtr3izibyfe5u1dclm1hj8obo0pjk47iz46ut460i9klg6oa569jld999b55x4111oswqiedtbrcpm87q82qewo2rjn7cv0o9b1ku517zbl3qq5aet1s5romu4vzgyzf28xuj0b24i8d25iuuak3jcqyqzxt15waenpnv0pio9zbx5ol2kk\",\n    \"uri\" : \"https://web.example.mocklab.io/392198\",\n    \"issuer\" : \"axs088yih328tl9hqzt8hbpdt2n2p17wr88pkc3lulbgh81vprz7hxwgm9994mrk72u4cvti2frznwulhoajsvust\"\n  }, {\n    \"date\" : \"2022-04-25T16:44:33.006583Z\",\n    \"parent\" : \"70jqi0j9vgcq0b1d1bslrpkfz27lcgrwd3dvino3usk8hhjj0a21y5ha3h0w521yawv3si6h07u2n9vu8qaxe8h8xgskg4vjyuux7exnb4qip2giqhcl8tvc2cklahqsmvxw21p9ew7p0focxnt9wkt\",\n    \"size\" : \"m82uxowovzjfbx9n3vxffu8ny19kb4fv6j5l7v5vkv4jebbmp6k6c7ab1we1bu2bio0r8aczp9zmeyk34hszn1bje7bzprleyu762xrbvizwrzilcs8982ihpm066ccw\",\n    \"mime\" : \"w3zpw5288xf5mugs8qb05vfvzlkzz9kbteva92rvrc1kudjlc5vu5gmhybz3jej95v03q8a4qtueaaf1c5rf7pqojinz\",\n    \"name\" : \"Moshe Dach\",\n    \"description\" : \"Et at aperiam reprehenderit asperiores et. Aut omnis ut. Enim deleniti nesciunt dolor ex ullam repudiandae placeat.\",\n    \"id\" : 189079894,\n    \"type\" : \"rn7oh3r8y3qwyy91c0z3b2nn1h8tjywniddakk571iehcip57aru2mt9gfmq7s5hvgl354kwy0jux6c1vk3r2w7z5xxd30ao2h2d\",\n    \"uri\" : \"https://web.example.mocklab.io/403609\",\n    \"issuer\" : \"rq8blvkrtv3v82fm9twk8c7k8fyvo4bsashd5pumpcj0rdirextut026qbrywk4aui3mnkfnvaapwn5rbm3d17d3tjt4kpee8rlgztq64stko0806cpxanixcp14xf3r3415l95sqvv734nzl9gku8wcb63bj6y6n5ny5a3gvnts90fuo2zp6\"\n  }, {\n    \"date\" : \"2022-10-13T16:12:33.00681Z\",\n    \"parent\" : \"dxn0xaqpe8hzefubk6w2hsn4chjac56r3iegn16bmc37ih374hy0kj5dz1eq1ush2bgqt9947bqxfawoud2qiuccsqqfrwa6d86lsr1ml01qhxeaefy4b8kloettn7tuj8fi3fcsxhdal8xp4qtu2brlsd6s8vshu3ft3\",\n    \"size\" : \"hrmkwbr2zpufkkcnsz7lyy05b5iqqgpoeqf6q6611vvtbk7iwa1jcqcfrjbok12lhu3p6vv6n3w1gvk7448wxxe0d69fx48rbc6ty2559ygvndny5ab0y50xgil9v7m18rb6ork0bzhy8q5cbcsfe8e89e6jgbgfjg07zm1por57j29gx9lg9c7g3ai9\",\n    \"mime\" : \"3hnnz1wta7l5hwjz7qsv62kweihlh0gd9ipgjqrzceqz5q6vpn9kcwuk5axj8tv8ci2wbm2sgmqasbefn4bspq\",\n    \"name\" : \"Ms. Lettie Lockman\",\n    \"description\" : \"Sed exercitationem et odio. Veritatis voluptas omnis. Aut necessitatibus enim enim numquam.\",\n    \"id\" : 189079894,\n    \"type\" : \"5galng0cx4xi6ct89ejc3uvefajck99lv9mex52th1bkrx0bgxj9ackt1fq9gyk45e0lrprse705ye841aoocgb858ikepxky44kph8c7k53lgbgkzykn1y7jxh1we4trn42ntf6sbu1mysa0uo9h7jxhqdxk2ei84qbhry\",\n    \"uri\" : \"https://web.example.mocklab.io/984452\",\n    \"issuer\" : \"s5fvj5imh7wcr3fyra0gy5ga1ta4jmneulbhbm7lrz37s7hgekh1o7urrv12iwou2udt1nm8advqd1rr68m7r8797cyntm30iub1kg33pzfi0gb6by664rwheo2mt8u927sppmqd\"\n  }, {\n    \"date\" : \"2022-05-14T18:01:33.007032Z\",\n    \"parent\" : \"04r8okmzh1ne15rmsmpcep1z34you3p2zweqvr1un95huvcmcv8aoe2pk\",\n    \"size\" : \"cvb2p1ie34of2a73aqywkalnnm2po29oakrvlv8r40n3urzge2fmiu0qajb2v3yy2bn5br4jb\",\n    \"mime\" : \"yczrc3vhzrr104j1ito8mzgftc1z4nqcwwhcs4xg4awk4apfaih59zzsq2a69c7xe5d63d6drx3tw3jwgwtd94s14iga9z372ti213rf4e01osm326whj22yu6y6wbyhfqs781sbgfs3q5muj\",\n    \"name\" : \"Williams Labadie\",\n    \"description\" : \"At a suscipit enim hic doloribus. Amet molestiae aut quia voluptatem voluptatum. Corporis in assumenda et laboriosam. Aut sit nam eum et placeat ducimus iure.\",\n    \"id\" : 189079894,\n    \"type\" : \"ebaur6xm8xdpq42tyziu4pq1ji0us26cf3jwghrmcmeuvxpn67ha5g9ezc2rfoo9z04jkv5d08fsczix2ap1k2jw4rgsrbg15m5ze838vjllohswjb3cjwawa1kxddoj185cj4xm11kb9kifvbixfzgt1uiexpf8nagyb8jfborz5u2q8lzwgkv0uo3jmqg7kmbti\",\n    \"uri\" : \"https://web.example.mocklab.io/509704\",\n    \"issuer\" : \"eno59ozijj7qy1771p53eeh06xefgpt2mc9oovojhpc9w8ssqm2xdwk04pzjgecsx1fhu4zb6kwb20jazo7n6u9fhg2od41rm24hag1hegmwwq2u9dflvdxcmedqdc7xqvi22nx3q1z9i05b0j\"\n  }, {\n    \"date\" : \"2023-01-27T14:17:33.007256Z\",\n    \"parent\" : \"j18go0n1wkzb1rk18jrhi8hlml5tcwmv9o120zck7a5rjc9qmkd9vj6ihhhostfe1n3mt3jsy089q231db0sds1atcc33hmezi1imaym0kkxi2geb3ynyfgyt\",\n    \"size\" : \"dqywbnpwakoeb0nm9ez3uinra0fks584ncuuktrkxhtyie74wxklat68ivrsfpmsdxhkzf3k9fp6foxwhqfkxz4svp1lvwqcqvgx3xgcxy6mvl74fdbs0zq9in2l0r66m0j9t0orl7vbi7fdyypxeyc4w7l4mtf76ag5xsmvdgdwfmq\",\n    \"mime\" : \"ri16vgn8a28i1qidiay0\",\n    \"name\" : \"Cynthia Ankunding\",\n    \"description\" : \"Ullam sit labore temporibus veritatis. Autem voluptatem et. Atque autem deleniti quo alias eligendi officia reiciendis. Et et rem sunt.\",\n    \"id\" : 189079894,\n    \"type\" : \"us9s\",\n    \"uri\" : \"https://web.example.mocklab.io/308266\",\n    \"issuer\" : \"gizq8btd7dzq09diaa3n44y6bzbtxavmhb2ae06az17zhello8au7ez3tsldz0pygfml007kkh1zju2y020w9k5gvz4yf7ayf0r8u3wn47aii5oqzg9\"\n  }, {\n    \"date\" : \"2022-05-17T14:58:33.007475Z\",\n    \"parent\" : \"b3ujs371q6fh1a1h2ch69cbsk0fybj24s5ibr9okm6etyj559yh35g0nbr9150xvak5hwjw8xt58eqszw0d0hqdl7vx2d6r1bugiv70gus0fi2lb3mya1fwpzxczyyvot6l\",\n    \"size\" : \"k0jswvvwyyaig7hv4gbo7qcnp7gkipehw95ojmcuhkal8coop40v8peqyduresq05613ae94i6yx9sp5tvw8ybzg06ctiqgptsjahf626vc6jaeskohjz7q0z38p0gini6z9ghoh85dzfhd5rg1za7smevc5mi3r4l\",\n    \"mime\" : \"x86m6ll5g3thf8vz1x1r22neb\",\n    \"name\" : \"Caridad Schoen\",\n    \"description\" : \"Error iusto asperiores voluptatibus fugit provident. Repellat non veritatis. Ab ut maxime quae nam voluptate ab ut. Consequatur pariatur inventore sed. Odit consequuntur corrupti rerum corrupti harum \",\n    \"id\" : 189079894,\n    \"type\" : \"r0plh4djea8qo4scq6ixvk2oqtpojqrcwcfb1mis2wzdyh2jlwoykz37xwksrldczmes8zzi2xc01p1hioxxrd3ur9qc5mrhiw9xn46elvxowbmuzh7har1tygs1ufw3jtvqlg8lx0j1vcpylrjb7dpo7yo5g1lqr1ayap4lgifq7olpw2\",\n    \"uri\" : \"https://web.example.mocklab.io/264510\",\n    \"issuer\" : \"jt16ytxi8f1yeoyt4bxsvr2vdf9elg0sk69586mw77lvw19ra\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d0bac50-14f1-4f30-b72f-65eef075df14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.007819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "8f79d937-b057-4284-b218-5fcc3ab213ae",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F323577",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Laborum ab aut nisi est rerum. Dignissimos soluta in rem. Officiis dolores error dolores itaque porro. Maiores ab vel aspernatur aut ipsam. Id saepe provident et voluptas blanditiis eligendi quasi.\",\n  \"error\" : \"hw7mxt7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f79d937-b057-4284-b218-5fcc3ab213ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.006251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "45ff5862-235e-494d-9420-bc4f3d7493be",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F753316",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Reprehenderit molestias similique consectetur iure vel odit est. Ratione repellat iure quis voluptatem. Quia adipisci minima.\",\n  \"error\" : \"t2flvtx0iy64f9v5isgafzbo9d53c2xxhdyjahmgk5h028wccvcog6vdxzullfi06xg2dprz0i4u75ubcq6rjlmb1912b4yovcuwu21o5ql0yjed7hldutkp4cob00lhttg6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45ff5862-235e-494d-9420-bc4f3d7493be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.006094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "7929e735-9239-4845-812f-3854ed1a4390",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F386295",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7929e735-9239-4845-812f-3854ed1a4390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "42daac33-98e3-480d-a790-c1cc4327a0d6",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F017908",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42daac33-98e3-480d-a790-c1cc4327a0d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "edd9a472-b893-459e-86df-ce578d7059f6",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F639142",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edd9a472-b893-459e-86df-ce578d7059f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005685Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "81e91064-ed2a-4556-a1d4-456b812cc8c8",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F847479",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "81e91064-ed2a-4556-a1d4-456b812cc8c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "56f57424-f580-4568-b408-0c3d5c76a0cb",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F698225",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "56f57424-f580-4568-b408-0c3d5c76a0cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.00546Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "ce94241a-a08d-4b53-88a1-fdb5aa0e9532",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F939094",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "ce94241a-a08d-4b53-88a1-fdb5aa0e9532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "89290c78-5ad1-454e-9033-84c6ecd4f000",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F017932",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "89290c78-5ad1-454e-9033-84c6ecd4f000",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "9b4edfe9-d011-4aef-98de-0026a4f1e1c4",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Fugit quisquam odit sed aut quaerat ab. Tenetur iusto enim omnis dolores. Et labore sunt velit.\",\n  \"error\" : \"87j8sjrh23bw4l5mxbtyu9cfi52v5hvs1aicwoucnfrpg15ecucy6wtrv1cpb37xujmy6qltl099m7qpf8jneqnjnsrgaaanqwcmdh8kretoab88kttr1rnfw3dw5lc8gljsdejzcfbm1qnfa99cwo98yqs64482qgzgrrho15f7armxsrlc64pyjlnsonvt6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b4edfe9-d011-4aef-98de-0026a4f1e1c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.005117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "355ab2c6-9bc4-4614-ad37-dc44a4427df0",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "355ab2c6-9bc4-4614-ad37-dc44a4427df0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.00502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6705e1f8-e204-4a63-954b-1c3a95da002f",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6705e1f8-e204-4a63-954b-1c3a95da002f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "24d8598d-929e-4fe5-af23-4c749b64d730",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"sxdqdhjzv87n1849z20dtroor8tt3zngqsbwlxwt0nzto5laceri9rslk72nroym0j4o67crkqa0k19\",\n    \"size\" : \"og86gd3ldn59orhtke3quc50v8bx0ssgx5n0qrc4w9d35\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24d8598d-929e-4fe5-af23-4c749b64d730",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d542493a-0718-4028-9ad4-2893bf10252b",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Quia et porro corporis. Veritatis nostrum hic alias dolore assumenda. Ex consequuntur est consequatur velit voluptates.\",\n  \"error\" : \"k2wekl7s7ed9frw28fvxfi2k87ky0efnnbbbp7smg7m35\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d542493a-0718-4028-9ad4-2893bf10252b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "54757222-d996-4adf-ac45-3b5b29bea9f1",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54757222-d996-4adf-ac45-3b5b29bea9f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "25fdf4a0-8af5-4d9f-953a-4c4b2465d4fa",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Aspernatur molestias et dignissimos enim aut magnam ea. Odit cum deserunt impedit in odit. Ut excepturi praesentium. Eum recusandae asperiores ad.\",\n  \"error\" : \"xa4g9tmryu2u93pquynspnappr6nxd359s7eenzviq1f4wop6nse68qw2ncqw4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25fdf4a0-8af5-4d9f-953a-4c4b2465d4fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6164703f-f9c8-4ad4-82ab-1817e8d4ede9",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6164703f-f9c8-4ad4-82ab-1817e8d4ede9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5105950b-332c-40ec-9847-9def2f66841a",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "v6e6kpdmkpbfijxug9121uryo4s7ntoq6wxia2gvjgbe2aopj6ezvletqj10anxnwkhyenrptzhedrxi8k2f6trfz8796jdtdsva97zs5mf13sidzze9hnts6355yah6ug33hs68om7kbu9a3bea7"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F924126"
        },
        "state" : {
          "equalTo" : "South+Carolina"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5105950b-332c-40ec-9847-9def2f66841a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    }
  }, {
    "id" : "55be839e-3f9c-40f1-a4be-c01f451f8b6e",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "950liaqmu94wek662ccawpxgsrsxffm4b207hp0dulmb0h0h9bf0i37exky65985rsbmnr"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F051385"
        },
        "state" : {
          "equalTo" : "Tennessee"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"9jn237936jbjv6wdgrxcyhu6afqaj5t6qq834mjgtoci2ep0s50ds56fcc1novovaru2gmvigvn8qjbbee1jwmiawrsa0ofjuikjxe\",\n    \"scope\" : \"4188mbphc4z8z0oswpjg7fxr2uikfr4ykyxd2tjkte10mu4fymrjjo12h0i992hpmr5uwrew6g78vuzb2cp\",\n    \"token_type\" : \"7v75xwzxmxs\",\n    \"expires_in\" : 4552626257870582846\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55be839e-3f9c-40f1-a4be-c01f451f8b6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.004246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    }
  }, {
    "id" : "d0f31e71-91d7-466e-9da0-feeaf556570f",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0f31e71-91d7-466e-9da0-feeaf556570f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.003924Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bb216863-541a-4012-b10f-c55031fdb017",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Aut dicta voluptatem consequatur. Et eos minima consequatur non. Aspernatur nihil sit eligendi. Ducimus voluptate aspernatur delectus omnis ipsa facere necessitatibus.\",\n  \"error\" : \"ykekb78osqnw4ytjt2pk9hgml0g50gdfws9pqubxuw1lzz2iwkjzdbaw9ddr4qtie1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb216863-541a-4012-b10f-c55031fdb017",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.00387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "55f4346b-23b6-402b-9b69-4bf820041e2a",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55f4346b-23b6-402b-9b69-4bf820041e2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.003768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "353075f0-60af-4353-bed0-8b16584368dc",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "353075f0-60af-4353-bed0-8b16584368dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.00371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94cca4fd-c52b-44e8-9977-3c3d0d5408d8",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Numquam rem nobis tenetur unde. Officiis et velit est mollitia. Exercitationem expedita veniam rerum ut odio sed. Sed cumque in et. Ut non beatae repellat ducimus non modi cupiditate.\",\n  \"error\" : \"ci1oanfxeykysbounp0stgdngcln9rv7ur8a2mm1k4au11mnshwqtm79bzo2u66lvv65r0plkrrtc6me3fmjszbhsi9a7mbitjciwvvuo6564uqqhm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94cca4fd-c52b-44e8-9977-3c3d0d5408d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.003634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d8d0809d-121f-4686-a673-d7f69738ae5d",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Occaecati enim temporibus. Harum eum aut expedita a itaque animi. Voluptas id hic est quo optio eum. Eos dicta id delectus. Eum quo minima ad sequi impedit aut.\",\n  \"error\" : \"2jl49qf18u8rqodlbqviy7qfwtesp2eyr9e7tx02sczeueamclsr2lgintvebp2puzfntwogsw8s7q95qvnopqjcghws42jhrh112bvreg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8d0809d-121f-4686-a673-d7f69738ae5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.003531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9909c9e-6806-4f02-a65f-0ad0340b341d",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Ea iusto id ipsa quaerat. Et totam iusto nemo fugiat sed at fuga. Officiis ut assumenda sit modi.\",\n  \"error\" : \"du3in8luh6680xnscvalnnqmhmwtg3okjgy4al73prgdptxn7r090td3n6nrjb4dwixjlc1cpn3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9909c9e-6806-4f02-a65f-0ad0340b341d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.003427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "44dec259-0506-4c0b-8040-c8ed5fd7c5d1",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Ut molestias eveniet quo. Sed aspernatur velit voluptatum quibusdam. Rerum omnis cumque quibusdam id dolores.\",\n  \"error\" : \"7qbm68l4j9n8z9qtzubjo9dhvkdaoesqffsumwz8y7a2hrma96tnox3v3abw4yaq8h8ibhn9dfk15pcpoyjljtpcp1rplqhm9s6b1dwcf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44dec259-0506-4c0b-8040-c8ed5fd7c5d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.003295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc7cba18-93ce-492d-b812-8d02136a56b6",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc7cba18-93ce-492d-b812-8d02136a56b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:33.00314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    }
  } ]
}