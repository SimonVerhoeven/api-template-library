{
  "mappings" : [ {
    "id" : "ffdb0fa5-3c00-4d06-91d5-a66dc960f62f",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Ut ea nihil nihil ullam est. Corrupti doloremque placeat. Minus voluptas placeat qui culpa asperiores. Aut amet nemo debitis aliquid alias possimus odit. Commodi numquam doloribus quidem dolore iure v\",\n  \"error\" : \"r5tr3t9zi815yij3k5t87qa62a27wiilae4l12m1un1bgt5dy64cyyui2b07dgplqxhni2gc4m8lasbxushinckca9qmt5txz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffdb0fa5-3c00-4d06-91d5-a66dc960f62f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.451089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "fb662862-cdbf-4437-b0f0-ea34f1264bf1",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Quia asperiores sit dignissimos dolor beatae qui. Saepe et reiciendis. Porro totam autem quis ut repellendus nesciunt.\",\n  \"error\" : \"6ta8vzn5r3pjm7x2jxvkg6olunklnf2gscfgblupwplhcf1widnl8swftqjxf72d5yrd44ginjjdz0ggk35ybwl5psghvn72rkzyezl5cdxakzorrbpuw7m22sldyh1nv2clc64dtpt2e3v4eszob88b4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb662862-cdbf-4437-b0f0-ea34f1264bf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "0516d5eb-7253-482c-ad55-7dc6d12e4041",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Est libero iusto rem nobis. Ut non quam enim. Et incidunt et iure reiciendis dicta temporibus consequuntur. Quia ut atque architecto neque incidunt. Accusantium eum deserunt hic aut nemo quas.\",\n  \"error\" : \"4p6w35qt5d8j1k20u121zjy3ugzk8mwj3p1cm6xi52a1tgskb4l4ybc860bhl1w9ektjdno6a66yc8qyusz4upj7iu8fxcaq23edrbtttko88dl376clf1s31j90i12du5jhhkjzyd0hssg146zri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0516d5eb-7253-482c-ad55-7dc6d12e4041",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7f6b4124-69a8-40f5-813c-8e8628e9ebb5",
    "name" : "Get Statistics",
    "request" : {
      "urlPath" : "/statistics/1/counts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count_as_on\" : \"31072019\",\n  \"yearwise_authentic_documents\" : {\n    \"details2\" : {\n      \"year\" : \"2019\",\n      \"count\" : \"3520475277\",\n      \"id\" : \"18567\"\n    },\n    \"year\" : \"2016\",\n    \"count\" : \"10134567\",\n    \"details\" : {\n      \"year\" : \"2017\",\n      \"count\" : \"1000548093\",\n      \"id\" : \"18350\"\n    },\n    \"details1\" : {\n      \"year\" : \"2018\",\n      \"count\" : \"2410543684\",\n      \"id\" : \"18354\"\n    },\n    \"id\" : \"18347\"\n  },\n  \"monthwise_registations\" : {\n    \"month\" : \"5\",\n    \"details2\" : {\n      \"month\" : \"5\",\n      \"year\" : \"2018\",\n      \"count\" : \"124794\",\n      \"id\" : \"18496\"\n    },\n    \"year\" : \"2018\",\n    \"count\" : \"124794\",\n    \"id\" : \"18496\"\n  },\n  \"requestors\" : \"45\",\n  \"authentic_documents\" : \"3520475277\",\n  \"issuers\" : \"134\",\n  \"users\" : \"25873490\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f6b4124-69a8-40f5-813c-8e8628e9ebb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.45069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Statistics id",
          "schema" : {
            "properties" : {
              "authentic_documents" : {
                "description" : "Count of authentic documents available through DigiLocker.",
                "example" : "3520475277",
                "type" : "string"
              },
              "count_as_on" : {
                "description" : "The date on which this statistics is generated.",
                "example" : "31072019",
                "type" : "string"
              },
              "issuers" : {
                "description" : "Count of issuer organizations registered on DigiLocker.",
                "example" : "134",
                "type" : "string"
              },
              "monthwise_registations" : {
                "description" : "List of last 12 months cumulative user registrations",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user registrations in the given month.",
                    "example" : "124794",
                    "type" : "integer"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user registrations in the given month.",
                        "example" : "124794",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18496",
                        "type" : "integer"
                      },
                      "month" : {
                        "description" : "Month of the year in numeric format with January as 1",
                        "example" : "5",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18496",
                    "type" : "integer"
                  },
                  "month" : {
                    "description" : "Month of the year in numeric format with January as 1",
                    "example" : "5",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format",
                    "example" : "2018",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "requestors" : {
                "description" : "Count of requester organizations registered on DigiLocker.",
                "example" : "45",
                "type" : "string"
              },
              "users" : {
                "description" : "Count of registered users on DigiLocker.",
                "example" : "25873490",
                "type" : "string"
              },
              "yearwise_authentic_documents" : {
                "description" : "List of cumulative year-wise counts of authentic documents in DigiLocker.",
                "properties" : {
                  "count" : {
                    "description" : "Count of cumulative user authentic documents in\n  the given year.",
                    "example" : "10134567",
                    "type" : "integer"
                  },
                  "details" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "1000548093",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18350",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2017",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details1" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.",
                        "example" : "2410543684",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18354",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2018",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "details2" : {
                    "properties" : {
                      "count" : {
                        "description" : "Count of cumulative user authentic documents in the given year.  ",
                        "example" : "3520475277",
                        "type" : "integer"
                      },
                      "id" : {
                        "description" : "Unique id of the list item.",
                        "example" : "18567",
                        "type" : "integer"
                      },
                      "year" : {
                        "description" : "Year in YYYY format.",
                        "example" : "2019",
                        "type" : "integer"
                      }
                    },
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "Unique id of the list item.",
                    "example" : "18347",
                    "type" : "integer"
                  },
                  "year" : {
                    "description" : "Year in YYYY format.",
                    "example" : "2016",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "required" : [ "users", "authentic_documents", "issuers", "requestors", "count_as_on", "monthwise_registations", "id", "month", "year", "count", "yearwise_authentic_documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2ac1af77-d572-41db-807c-27706f7591df",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ac1af77-d572-41db-807c-27706f7591df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9020c038-6e66-406a-9905-04a6ed79a2fe",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9020c038-6e66-406a-9905-04a6ed79a2fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1e5788ff-e27c-42de-b447-32686dd3f903",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Quia qui ipsam fugit aut pariatur odio. Labore ipsum voluptatem suscipit et. Sed aut similique hic eos numquam. Vel ea et deleniti minus sed commodi quisquam. Veniam corporis eaque magnam id numquam n\",\n  \"error\" : \"u4dk5btjwfe1fessusfbznad4fd2nrxh30gor7ukz3u0nxfs984ba9qi1fduzsgia8r1tstuig71tqpzp1anw1ef6msurpy7r8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e5788ff-e27c-42de-b447-32686dd3f903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response10"
            }, {
              "$ref" : "#/components/schemas/Response11"
            }, {
              "$ref" : "#/components/schemas/Response12"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1cfbe56b-e8fd-4117-b40f-d97976a1c4eb",
    "name" : "SIGN UP",
    "request" : {
      "urlPath" : "/signup/2/demoauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"mobile\" : \"******3712\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cfbe56b-e8fd-4117-b40f-d97976a1c4eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SIGN UP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "mobile" : {
                    "description" : "The masked mobile number of the user on which the OTP has been sent.           ",
                    "example" : "******3712",
                    "type" : "integer"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "mobile" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "27d92ae3-ffa8-4157-ad2d-90879e9cbdae",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27d92ae3-ffa8-4157-ad2d-90879e9cbdae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "36d4877d-d080-47ac-a27f-f5873902a44f",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36d4877d-d080-47ac-a27f-f5873902a44f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.450034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "d0ad1b62-0683-4098-8612-e74adc7ff5c3",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Aut quae vel. Tempora hic dignissimos unde. Non commodi sit aut eum.\",\n  \"error\" : \"6g7ukqnuic3oblpp4pec0mmlwpxnp76wgoraqarv5uah0jgou81lbgg9r5swvencz23amnrfx737zbgjb2i9k1kal5agglv2ainau1se3coe4dpd1kpigsfc7if3yzvu6n2yvuhfnf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0ad1b62-0683-4098-8612-e74adc7ff5c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.44999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response7"
            }, {
              "$ref" : "#/components/schemas/Response8"
            }, {
              "$ref" : "#/components/schemas/Response9"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "b680e395-2f02-4cf4-bc0d-3bfae7b17c82",
    "name" : "Verify OTP",
    "request" : {
      "urlPath" : "/signup/1/demoauthverify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n    \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n    \"scope\" : \"\",\n    \"token_type\" : \"Bearer\",\n    \"expires_in\" : 3600\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b680e395-2f02-4cf4-bc0d-3bfae7b17c82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.449894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify OTP id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "description" : "The access token that can be used to call the DigiLocker APIs.",
                    "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                    "type" : "string"
                  },
                  "expires_in" : {
                    "description" : "The duration in seconds for which the access token is valid.",
                    "example" : 3600,
                    "type" : "string"
                  },
                  "refresh_token" : {
                    "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                    "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                    "type" : "string"
                  },
                  "scope" : {
                    "description" : "Scope of the token",
                    "example" : "",
                    "type" : "string"
                  },
                  "token_type" : {
                    "description" : "The type of token which will always be Bearer.",
                    "example" : "Bearer",
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "4486c26a-7906-4fa9-a467-2ffefe0e82cb",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Voluptas consequuntur vero porro voluptas sunt. Dignissimos esse aut adipisci ducimus sit. Et vitae quia quae animi itaque aspernatur.\",\n  \"error\" : \"0dflrncd0kb58rqsczjmx3b0lgfatu79tzmj18u5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4486c26a-7906-4fa9-a467-2ffefe0e82cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.449801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "24568d5a-0e88-4d73-89a7-61db767ef56d",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Non quo ut in voluptatem dolor quisquam ullam. Facilis delectus quis iusto voluptatem ex qui. Vero vero necessitatibus sit nam commodi alias. Nam tempore sint. Voluptatem laboriosam earum doloremque f\",\n  \"error\" : \"o3fnmwcne91j7aid9gvzckcw9b086g2xqgl3cdms5zwkiv95cak7nytt2cykpygslv7gx6reukyt8jvso7ycarwxkqea6w4jetngr4cha8ll5gn0fhapezsk7hsh8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24568d5a-0e88-4d73-89a7-61db767ef56d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.449687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "280f4597-018a-4f11-baf8-5cf17b93e89d",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "280f4597-018a-4f11-baf8-5cf17b93e89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.44954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "aadhaar_not_linked", "aadhaar_not_available" ]
              },
              "error_description" : {
                "enum" : [ "Aadhaar is not linked to the account", "Aadhaar data is not available for this user. Please perform Aadhaar eKYC again." ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "0a5348cb-39f3-4ec4-bc2a-ab905df7d831",
    "name" : "Get e-Aadhaar Data in XML Format (application/json)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a5348cb-39f3-4ec4-bc2a-ab905df7d831",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.449488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "7a941962-e1d8-4b29-b938-a63563a1ef0b",
    "name" : "Get e-Aadhaar Data in XML Format (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/2/xml/eaadhaar",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"KycRes\" : {\n    \"ret\" : \"6ndjma1tjfjxc3jw3h95ymxyw32xa7zvbncyhb1fa06ewcj1bmv58259cpu932q616ljfyislv48vbtbqzdaeiz1f3ne1zon2u98ycno\",\n    \"Rar\" : \"coivylsjhgc4wx8bht4zlf79mg1bkgbkkpzmhmqu4x3pgi2xmswy8jqzlcxh9s11wb1z8erzd119nupann614fwg1wm69m6racdwq7luk7h2ki9uv682ycflwyzx7pqusauzk8beh50mhiyohl589d4y4\",\n    \"code\" : \"kv91sbc43xizh6xtq7wt2z\",\n    \"Signature\" : {\n      \"xmlns\" : \"xo6s5bf5b9qbfkrov87dvk1\",\n      \"SignatureValue\" : \"f70oi803ro\",\n      \"KeyInfo\" : {\n        \"X509Data\" : {\n          \"X509SubjectName\" : \"Noah Gorczany DVM\",\n          \"X509Certificate\" : \"4a2zj9qtf3cdyrx321gunttjpr4qmqf6n32vftivhema4o8ulez7dc96ofbhq\"\n        }\n      },\n      \"SignedInfo\" : {\n        \"Reference\" : {\n          \"Transforms\" : {\n            \"Transform\" : {\n              \"Algorithm\" : \"fpp8t1xmpq6yd519nkk0aewfcd01vu3plemcvpt0q982i44dhlkqh157ab9wtn76h1x93o44faxz7r5ocqiu0ta8hkmj5inkn4tpijguy9oc3bmiim1k787t5ybc6d1rz9i\"\n            }\n          },\n          \"DigestMethod\" : {\n            \"Algorithm\" : \"58t3g4ljs\"\n          },\n          \"DigestValue\" : \"a4i7evjtv95yyp04uxo7xhfbfuhaplxr39svzvxuiq06a45x89651y5h3tgesv93tyu7i6bes8bfhji5s38gcf4r3ujx3bopd6aa3jcwryd9b5ntknftb9vuvz5mcj0wu\",\n          \"URI\" : \"https://web.example.mocklab.io/232683\"\n        },\n        \"CanonicalizationMethod\" : {\n          \"Algorithm\" : \"cr5fb8ikarfyyfqgkejz8hssyhizt4idxcl2br4yc40iuq59rsbqs5ayblfrekcg3rpa9eipgx9d50gcu1sdp4pqczqnogp0z0wx12fsfh64cj4pcnh5qltq6y25czwvtcqeju4xlw32tvckmlc1v6bsle\"\n        },\n        \"SignatureMethod\" : {\n          \"Algorithm\" : \"zv48l4i34kbpejc4yorck2au0ppm740vr0i2ul1ryoyghhueeky1co4owrejuxsvygcsvxud5xns9b241mkd77hbm9wwwl14h43btgheg0mq2tsq1ei3waqb86mc2hab3xkmf9ly1sb1d253jwm4kei8o2zvr4\"\n        }\n      }\n    },\n    \"UidData\" : {\n      \"uid\" : \"w736\",\n      \"Poa\" : {\n        \"country\" : \"Cameroon\",\n        \"lm\" : \"2ikhg7du6ptlsvrcv6zc9injt8eh2z973dzltyfceth9p2ul8fhapv2jh575f3md9uh6y9twcnqmgbaqr5xj0q4c1jlslu6uj2snsp0enlckmdnq5bal3j4x15nir8t3e324wliv323bp85b6wqmgnr7rl8bxxovh5n\",\n        \"loc\" : \"vzprpt4orcl3yeevovy9zr6yz7klx6ujgj\",\n        \"pc\" : \"ywq0v5g8w3b5mj1uvw80wmit5f13zd85ptghoibuyq7u6lb5rfvp78hdq41g0qxuza2iuqwsc20ghw5lcjgjthpi28f7dlk217j6e8n2qvphj591ry2a38cx4ns84t7whwve0trgpty3n8g3\",\n        \"vtc\" : \"3o07rm25y5dimc47rjb7wh\",\n        \"dist\" : \"x567updvosysqu8ep0zfkfo3mssvt9dve6oaj59tf0ewogk4rkwmjopdgsq395jtl6uub90jc5qsacmg7hmm9fih9u1lms2s8xidf8seq5ai8bfh7naxzrqniar7axu1pj54m6qpjp2lrryk956egdjszvfghsqrafofg4etqgvlav8t6sshtjz4pyh4ie70k\",\n        \"state\" : \"North Dakota\",\n        \"co\" : \"cujj9n1d05fg18drdj1u4byf0becodw21j5rcdaeuz2z06z663gi8cg3xc1t0r8tsza5vihrzwufux6lsoff3bl\"\n      },\n      \"tkn\" : \"ipgyfcexsghcy274nq08ae0ahni8j54dsujfmri4hqjhfpurf0jexrvx33arqbco77b71n1spif3y6anz9ti6ng2i3o5to9acgdvh068sfn6i17d2hojteo66r627a\",\n      \"LData\" : {\n        \"country\" : \"India\",\n        \"lm\" : \"wjlct8pqll28f06d7pg5cj7c1r2xhibyzsgkj1yfkwkkbztg43oojl06bxy0fb2wrsg0lknjp67ycrht8l7ixhj900011vcn8hihg6hyojikvl2bnjfeev8htgqi63ygdphxgtjfwz7wc4psgxxtzvod\",\n        \"loc\" : \"2nrfujvr5g3clzwyw481xrjl897xoz90a31q2pfu22nlyr823w3vxf3llgtlds8hqcz5bkvl3k0k5xpzh18eg2swgah9qhzo5zn7cdrpxedqtzqagwtvxdnhzj4qmc4v9m7qyvq4hl2fm3kl1489\",\n        \"pc\" : \"2zuepepts7c7\",\n        \"vtc\" : \"8662ykuxcyyt2sqnkimu9ri98n9d4keh80o3wniomlt7diia2uce8k4feqhhzwj6tns7kstp39naqw9dzg3\",\n        \"name\" : \"Colby Kessler\",\n        \"dist\" : \"s2nmm3yzhl99h2mime1s1wawn1qiji46vsgb7xsm6bbf1ykv6pf5utrqr84wml3o99lwlutsupz28tihycg36f9upd61tlhod8btj\",\n        \"state\" : \"California\",\n        \"co\" : \"1\",\n        \"lang\" : \"qyita0xmbhafar95f0a67ej1\"\n      },\n      \"Poi\" : {\n        \"gender\" : \"Female\",\n        \"dob\" : \"1936-08-22\",\n        \"name\" : \"Mellissa Hermann\"\n      },\n      \"Pht\" : \"0pkay0mft7i5ttw3p6tejzqoqm22azie6l5amykejj0cw8jf252xae870xhrghew0yknccctxt5iio6om43o\",\n      \"Prn\" : {\n        \"text\" : \"9xqe5if9twgdxh2rasimx3owk3w2chp85epm6t5zxot7jsgcojeaehvpgfi9sjqo2gd8knur6o575qao52qydns5wowkefjpg962hz8du3aq8d2fh9e1pebys2a3v4qej0tj15l0vhzzc6u8wslrnl0x1khnqn15gcdcayuyz2hvs\",\n        \"type\" : \"eeyxre7kvfr2p93vn6ik1p5yoj\"\n      }\n    },\n    \"txn\" : \"ily222mthimg1xzvg4axajt8b5tkixzagaa127nmx55t8244p6szf5mpchamhq9ey3brkvaznulayvjzy885mwfckwe6ik7i1t0r\",\n    \"ttl\" : \"jtlukccgbdx4zta3b65dbecgkhpctaplzywns9sl0jp6g611ku47ki40cn82qrfjlysng9hd8dx6ioag9z\",\n    \"ts\" : \"p43lmplf74hpiedidhgmf7cvzyuif1tfmiqte4u18vq1iezfzxaswpfnni63nobw3tnywqtb7pj4gwy\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "7a941962-e1d8-4b29-b938-a63563a1ef0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.449396Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get e-Aadhaar Data in XML Format id",
          "schema" : {
            "properties" : {
              "KycRes" : {
                "properties" : {
                  "Rar" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "Signature" : {
                    "properties" : {
                      "KeyInfo" : {
                        "properties" : {
                          "X509Data" : {
                            "properties" : {
                              "X509Certificate" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "X509SubjectName" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "X509SubjectName", "X509Certificate" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "X509Data" ],
                        "type" : "object"
                      },
                      "SignatureValue" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "SignedInfo" : {
                        "properties" : {
                          "CanonicalizationMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          },
                          "Reference" : {
                            "properties" : {
                              "DigestMethod" : {
                                "properties" : {
                                  "Algorithm" : {
                                    "minLength" : 1,
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "Algorithm" ],
                                "type" : "object"
                              },
                              "DigestValue" : {
                                "minLength" : 1,
                                "type" : "string"
                              },
                              "Transforms" : {
                                "properties" : {
                                  "Transform" : {
                                    "properties" : {
                                      "Algorithm" : {
                                        "minLength" : 1,
                                        "type" : "string"
                                      }
                                    },
                                    "required" : [ "Algorithm" ],
                                    "type" : "object"
                                  }
                                },
                                "required" : [ "Transform" ],
                                "type" : "object"
                              },
                              "URI" : {
                                "type" : "string"
                              }
                            },
                            "required" : [ "Transforms", "DigestMethod", "DigestValue", "URI" ],
                            "type" : "object"
                          },
                          "SignatureMethod" : {
                            "properties" : {
                              "Algorithm" : {
                                "minLength" : 1,
                                "type" : "string"
                              }
                            },
                            "required" : [ "Algorithm" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "CanonicalizationMethod", "SignatureMethod", "Reference" ],
                        "type" : "object"
                      },
                      "xmlns" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "SignedInfo", "SignatureValue", "KeyInfo", "xmlns" ],
                    "type" : "object"
                  },
                  "UidData" : {
                    "properties" : {
                      "LData" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lang" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lang", "lm", "loc", "name", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Pht" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "Poa" : {
                        "properties" : {
                          "co" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "country" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "dist" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "lm" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "loc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "pc" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "state" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "co", "country", "dist", "lm", "loc", "pc", "state", "vtc" ],
                        "type" : "object"
                      },
                      "Poi" : {
                        "properties" : {
                          "dob" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "gender" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "name" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "dob", "gender", "name" ],
                        "type" : "object"
                      },
                      "Prn" : {
                        "properties" : {
                          "text" : {
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "type" : {
                            "minLength" : 1,
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "text" ],
                        "type" : "object"
                      },
                      "tkn" : {
                        "minLength" : 1,
                        "type" : "string"
                      },
                      "uid" : {
                        "minLength" : 1,
                        "type" : "string"
                      }
                    },
                    "required" : [ "Poi", "Poa", "LData", "Pht", "Prn", "tkn", "uid" ],
                    "type" : "object"
                  },
                  "code" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ret" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ts" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "ttl" : {
                    "minLength" : 1,
                    "type" : "string"
                  },
                  "txn" : {
                    "minLength" : 1,
                    "type" : "string"
                  }
                },
                "required" : [ "Rar", "UidData", "Signature", "code", "ret", "ts", "ttl", "txn" ],
                "type" : "object"
              }
            },
            "required" : [ "KycRes" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f2654b0c-f45d-4275-ac27-ecef399834d4",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Odit velit sunt. Ut explicabo soluta recusandae ex qui consequatur quo. Quos asperiores et. Veniam et odit doloremque sint sequi nisi. Architecto expedita magni quia culpa aut.\",\n  \"error\" : \"nwi45dwcbcb1xhy5aluhd4tuzei1ycmt5286zkk9ei1ngloo88h2z7tfrg7smo4ig4afy14jz19lte09l2n41c3nm1rh6luc034jfeu966xyhy9x1qj2u1tua26bahs652ft15s9bowbfmkuxdphmohs1nk7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2654b0c-f45d-4275-ac27-ecef399834d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.448015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "28b91485-f396-4952-8f5f-56ffea6514a5",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28b91485-f396-4952-8f5f-56ffea6514a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.447893Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "40fb21fd-d16d-4663-8770-712a4a85cddc",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/2/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resource\" : \"srkxoh5cs2cn4i2n3\",\n  \"items\" : [ {\n    \"date\" : \"2022-04-22T11:00:19.447418Z\",\n    \"doctype\" : \"0ral0nh7kskv64tpqotf338fyy9i64vt9n4jtlrf5kt035g22cgzkzvse1grdtx7twde1rduxyfqord9uvwjv41vm7dox9df6hp2fp3h4m5r9d7nagy9yvsip115vj1h6fp\",\n    \"issuerid\" : \"493w\",\n    \"parent\" : \"8wu78ibhg10xdk0xtknbpj3wd4vyztmni4ni1rjls2by3ytcqxilhdulyk0qookbar6c1u503kaezocurfisgwci09mrgedx96w8rug1qug5tflkojmm5445\",\n    \"size\" : \"tnrq8p0t8lvxvhbcafi5cse2zlrum0u5tjfmn971mea6iegezlf25q4hy2frf0e\",\n    \"mime\" : [ { }, { } ],\n    \"name\" : \"Suzy Sporer\",\n    \"description\" : \"Eum maxime praesentium voluptatem nihil incidunt et. Sint inventore eum voluptatem earum consequatur sed. Nulla animi tempora facilis aliquam dolores exercitationem velit.\",\n    \"type\" : \"foeqc9jbec99vdks5e6l05o05\",\n    \"uri\" : \"https://web.example.mocklab.io/772217\",\n    \"issuer\" : \"s1nq0z94chs7hv5iw7p0qsna07ilj4c3h6mxadg7rk56x1m8wdczqu8xw76h8m19qpasx4wmho10488su4v0y6bv2ye0u3p4qxkonacz0vrym0zelkp8ecc473nn5fkmu38geczl4bx6flvieqfa6r8omntxl9es19\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40fb21fd-d16d-4663-8770-712a4a85cddc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.447844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents id",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "array"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "type" : "string"
                    },
                    "size" : {
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "type", "size", "date", "parent", "uri", "doctype", "description", "issuerid", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              },
              "resource" : {
                "minLength" : 1,
                "type" : "string"
              }
            },
            "required" : [ "items", "resource" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "14f26a5c-e4dc-4601-8562-20128835f325",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F400835",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Omnis nam culpa quasi in. Dolores quo magnam et. Molestiae aperiam voluptatum similique autem qui ex. Enim harum non quas sint blanditiis.\",\n  \"error\" : \"0lpfp1yril6vh2n6cvymlc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14f26a5c-e4dc-4601-8562-20128835f325",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.447354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "22f100a1-524f-4149-bd4e-b9b8c85c3ccd",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F918467",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Aspernatur est reiciendis quia sed. Et et vero debitis enim eligendi officiis omnis. Nostrum et est est officiis inventore. Aliquid esse nemo perferendis iste. Ut sit magni enim in ut et aliquid.\",\n  \"error\" : \"jacchw0z8j6w2pm4qb3bzzpzzp979xaxs7lokj2drw6wkcy4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22f100a1-524f-4149-bd4e-b9b8c85c3ccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.447172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "955ef730-8996-4c6a-b8d2-05114d950e0f",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F893361",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "955ef730-8996-4c6a-b8d2-05114d950e0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "2702f3f1-f7da-44fd-a1e4-61324c6e52c2",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F049060",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2702f3f1-f7da-44fd-a1e4-61324c6e52c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "7a59555a-51ac-43a7-b445-bc50288e47e2",
    "name" : "Get Certificate Data in XML Format from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F978616",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a59555a-51ac-43a7-b445-bc50288e47e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446758Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "cacc459e-2791-44ca-b631-d95fa0b2851c",
    "name" : "Get Certificate Data in XML Format from URI (application/xml)",
    "request" : {
      "urlPath" : "/oauth2/1/xml/https%3A%2F%2Fweb.example.mocklab.io%2F302835",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Signature\" : {\n    \"SignatureValue\" : { },\n    \"KeyInfo\" : {\n      \"X509Data\" : { }\n    },\n    \"SignedInfo\" : { }\n  },\n  \"CertificateData\" : [ { } ]\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "cacc459e-2791-44ca-b631-d95fa0b2851c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Certificate Data in XML Format from URI id",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "type" : "array"
              },
              "Signature" : {
                "properties" : {
                  "KeyInfo" : {
                    "properties" : { },
                    "type" : "object"
                  }
                },
                "required" : [ "KeyInfo" ],
                "type" : "object"
              }
            },
            "required" : [ "CertificateData", "Signature" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "bf410a88-9152-4f79-b5a1-7ebc21a4a46a",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf410a88-9152-4f79-b5a1-7ebc21a4a46a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "3c85b8c7-b93b-40c8-9685-8fc34a92b924",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c85b8c7-b93b-40c8-9685-8fc34a92b924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "89887c8e-5f55-4926-ab89-89d8ab0fe923",
    "name" : "Get User Details",
    "request" : {
      "urlPath" : "/oauth2/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"gender\" : \"F\",\n    \"dob\" : \"31121970\",\n    \"name\" : \"Sunil Kumar\",\n    \"eaadhar\" : \"N\",\n    \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89887c8e-5f55-4926-ab89-89d8ab0fe923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Account Detail API id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "digilockerid" : {
                    "description" : "A unique 36 character DigiLocker Id of the user account.",
                    "example" : "123e4567-e89b-12d3-a456-426655440000",
                    "type" : "string"
                  },
                  "dob" : {
                    "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                    "example" : "31121970",
                    "format" : "dd-mm-yyy",
                    "type" : "string"
                  },
                  "eaadhar" : {
                    "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                    "enum" : [ "Y", "N" ],
                    "type" : "string"
                  },
                  "gender" : {
                    "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                    "enum" : [ "M", "F", "T" ],
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the user as registered with DigiLocker.",
                    "example" : "Sunil Kumar",
                    "type" : "string"
                  }
                },
                "required" : [ "digilockerid", "name", "dob", "gender", "eaadhaar" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "9e0855c0-d545-46e2-9c12-a1cf2a2ab02f",
    "name" : "Get Access Token - 401",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9e0855c0-d545-46e2-9c12-a1cf2a2ab02f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "c977b2cc-15e6-4b3a-808c-23396f4c8696",
    "name" : "Get Access Token - 400",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c977b2cc-15e6-4b3a-808c-23396f4c8696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "b235c00b-c8e2-4ea7-ac2f-513f8f0b8d9e",
    "name" : "Get Access Token (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/token",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"bc125c212a4b03a9a188a858be5a163f379e878a\",\n  \"refresh_token\" : \"a47ab18c593703e4f83a274694db7422a8cfcb8f\",\n  \"gender\" : \"T\",\n  \"dob\" : \"31121970\",\n  \"scope\" : \"jk2bxkt8qgmgvp5duduz6n12dpjffev1z5buac3ropo1vlejwedtd4uitwjamslu8wwucxx6chv8eqpts4p7n6mj15tht1aul91aqivaxouwbdiz3q0m33hp0j2z0yuvv0a22wq2ztmp9oj8drkb3mhv3tmw72aph92q7uxs3mb3\",\n  \"digilocker_id\" : \"123e4567-e89b-12d3-a456-426655440000\",\n  \"name\" : \"Sunil Kumar\",\n  \"reference_key\" : \"1c66bec26364cd6fefaabc6cae91840a\",\n  \"eaadhar\" : \"Y\",\n  \"token_type\" : \"Bearer\",\n  \"expires_in\" : 3600\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b235c00b-c8e2-4ea7-ac2f-513f8f0b8d9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.4462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getaccesstoken id",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "The access token that can be used to call the DigiLocker APIs.",
                "example" : "bc125c212a4b03a9a188a858be5a163f379e878a",
                "type" : "string"
              },
              "digilocker_id" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "dob" : {
                "description" : "This is date of birth of the user as registered with DigiLocker in DDMMYYYY format.",
                "example" : "31121970",
                "format" : "dd-mm-yyy",
                "type" : "integer"
              },
              "eaadhar" : {
                "description" : "This indicates whether eAadhaar data is available for this account. Possible values are Y and N.",
                "enum" : [ "Y", "N" ],
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the access token is valid",
                "example" : 3600,
                "format" : "int64",
                "type" : "integer"
              },
              "gender" : {
                "description" : "This is gender of the user as registered with DigiLocker. The possible values are M, F, T for male, female and transgender respectively.",
                "enum" : [ "M", "F", "T" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the user as registered with DigiLocker.",
                "example" : "Sunil Kumar",
                "type" : "string"
              },
              "reference_key" : {
                "description" : "A unique reference of the user account.",
                "example" : "1c66bec26364cd6fefaabc6cae91840a",
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "The refresh token used to refresh the above access token when it expires. Please refer to Refresh Access Token API for more details.",
                "example" : "a47ab18c593703e4f83a274694db7422a8cfcb8f",
                "type" : "string"
              },
              "scope" : {
                "description" : "Scope of the token.",
                "type" : "string"
              },
              "token_type" : {
                "description" : "The type of token which will always be Bearer.",
                "example" : "Bearer",
                "type" : "string"
              }
            },
            "required" : [ "access_token", "expires_in", "token_type", "scope", "refresh_token", "digilocker_id", "name", "dob", "gender", "eaadhar", "reference_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "1fa22040-118b-429a-8c94-8683be97d124",
    "name" : "Revoke Token. - 400",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1fa22040-118b-429a-8c94-8683be97d124",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "3996cb35-f561-43ce-92c0-fd93921bb655",
    "name" : "Revoke Token. - 200",
    "request" : {
      "urlPath" : "/oauth2/1/revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3996cb35-f561-43ce-92c0-fd93921bb655",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.446015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "get token revocation id"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "8ace9b82-8304-4d58-843d-6c7ff57b817f",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Reiciendis eveniet aliquam. Dolor similique nihil dolores repellat. Dignissimos corrupti incidunt recusandae tempora. Laboriosam cumque incidunt adipisci.\",\n  \"error\" : \"cmrshsmx5ycg799w95rtf89dsji1fjvm4p2op3kh0hqbmc0aci9pmwz1i6mtwz9psdbh0w85d89rxq6frk7bykmrvydf36zgqpc17tq6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ace9b82-8304-4d58-843d-6c7ff57b817f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response14"
            }, {
              "$ref" : "#/components/schemas/Response15"
            }, {
              "$ref" : "#/components/schemas/Response16"
            }, {
              "$ref" : "#/components/schemas/Response17"
            }, {
              "$ref" : "#/components/schemas/Response18"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "f1973c3d-01d0-4e65-aa95-fc7c33be1209",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1973c3d-01d0-4e65-aa95-fc7c33be1209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "record_not_found"
              },
              "error_description" : {
                "description" : "No record found in issuer database for given criteria. Please check the details and try again. If problem persists, see the FAQ section for possible causes."
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "70862c1e-7e3b-4d4e-9a52-4194d948674d",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70862c1e-7e3b-4d4e-9a52-4194d948674d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "5744b6a2-7967-498a-9989-a2d4ce6b48c3",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Sed quod sequi delectus sunt quia facere sit. Officiis nihil quam ratione beatae velit non. Perspiciatis odio et in earum accusamus quod laudantium.\",\n  \"error\" : \"gcsjjgkreo76c3d16x9xol22s44eaijiliph6o66jnqbbiuck4zvejjzo2und3zjmslj71d9z4p14u98cdipn81t2en7q747apkjtfabod0fgr09t0mhok75nly86v6ud7nj9u51hb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5744b6a2-7967-498a-9989-a2d4ce6b48c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response13"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "9849880c-fb62-47ac-9b90-9f511c51d20f",
    "name" : "Pull Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/pulldocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"uri\" : \"https://web.example.mocklab.io/820290\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9849880c-fb62-47ac-9b90-9f511c51d20f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pull Document id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "uri" : {
                    "type" : "string"
                  }
                },
                "required" : [ "uri" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "b5111b4c-15bf-43fa-83ea-7bdc8d5cd94e",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5111b4c-15bf-43fa-83ea-7bdc8d5cd94e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "a957b5fe-8d4d-4bb1-a489-1433fcf924ea",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a957b5fe-8d4d-4bb1-a489-1433fcf924ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445513Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "3b798baf-ef58-46b2-9dee-f21e34fb7988",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b798baf-ef58-46b2-9dee-f21e34fb7988",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  The doctype parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "b04d7e9d-c2df-413e-9724-7328fa085129",
    "name" : "Get Search Parameters for a Document",
    "request" : {
      "urlPath" : "/oauth2/1/pull/parameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valuelist\" : { },\n  \"paramname\" : \"Yukiko Raynor\",\n  \"label\" : \"voluptates\",\n  \"example\" : \"i3a42ferzp2juxvvm0vhoyxklbj86xu8gfhdo\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Marcy Dickens\",\n  \"label\" : \"reiciendis\",\n  \"example\" : \"pwb6zcndxk72gzhlgwabr5gbkc84bhe4ky3gkc595plj5s591l285all0vn2a1jhx\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Leda O'Keefe DVM\",\n  \"label\" : \"aut\",\n  \"example\" : \"xg4vcr47j2ogdqw5p03nss9z57406hdwq1drlgleo835axwi13g6xb97w49aib20g7\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Howard VonRueden\",\n  \"label\" : \"necessitatibus\",\n  \"example\" : \"8e3v\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Marlena Lowe\",\n  \"label\" : \"consectetur\",\n  \"example\" : \"hm7450gcbyzpqa2jw5yxoh3qii1b6out17bvltg5ndp441nqmhkex37920k4a1cm8vsybxx68fps0x9u8yidh7h6w8ro09mvfv4e2pq9dmsl0lso4d4bd8qr027ca\"\n}, {\n  \"valuelist\" : { },\n  \"paramname\" : \"Angelina Hoeger PhD\",\n  \"label\" : \"voluptatem\",\n  \"example\" : \"3fmgc892giv9hw98nml8s80mqd9c3fvqcltwsmeolhka\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b04d7e9d-c2df-413e-9724-7328fa085129",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.445403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Search Parameters for a Document id",
          "schema" : {
            "items" : {
              "properties" : {
                "example" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "label" : {
                  "minLength" : 1,
                  "type" : "string"
                },
                "paramname" : {
                  "minLength" : 1,
                  "type" : "string"
                }
              },
              "required" : [ "label", "paramname", "example" ],
              "type" : "object"
            },
            "minItems" : 1,
            "type" : "array",
            "uniqueItems" : true
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "a4b9d129-221b-4418-9aa5-90661f176bfa",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4b9d129-221b-4418-9aa5-90661f176bfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "0fa273a6-640f-4b8b-8f4f-0d598312e15b",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fa273a6-640f-4b8b-8f4f-0d598312e15b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "7220aa66-65f9-477a-85be-9c38eff9726a",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7220aa66-65f9-477a-85be-9c38eff9726a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "example" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "38159c43-cc40-49d3-9228-27a79cdfca82",
    "name" : "Get List of Issuers",
    "request" : {
      "urlPath" : "/oauth2/1/pull/issuers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"issuers\" : [ {\n    \"issuerid\" : \"2ru5\",\n    \"name\" : \"Ellsworth Ruecker PhD\",\n    \"description\" : \"Voluptatem rerum blanditiis aut vel vero. Accusamus alias sit corporis id sequi. Velit amet rem corrupti et at quos. Illum id minus dicta laboriosam. Velit repellat aut suscipit cupiditate rerum nihil\",\n    \"categories\" : \"6t6thz2tzczg25v23zz5wy5l\",\n    \"orgid\" : \"ciwi\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38159c43-cc40-49d3-9228-27a79cdfca82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Issuers id",
          "schema" : {
            "properties" : {
              "issuers" : {
                "items" : {
                  "properties" : {
                    "categories" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "issuerid" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "orgid" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "name", "description", "categories", "issuerid", "orgid" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "issuers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "206531b0-fc3c-498e-bb33-b9051e2c9901",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "206531b0-fc3c-498e-bb33-b9051e2c9901",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "bfb9917f-87c9-41b8-bc9f-c7c2d6868015",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfb9917f-87c9-41b8-bc9f-c7c2d6868015",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "b35f7c39-31ad-4d35-b0dc-994468ca5b93",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b35f7c39-31ad-4d35-b0dc-994468ca5b93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  The orgid parameter is missing or invalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "318eb905-4552-4d29-b2cc-31ef8a6701f5",
    "name" : "Get List of Documents Provided by an Issuer",
    "request" : {
      "urlPath" : "/oauth2/1/pull/doctype",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documents\" : [ {\n    \"doctype\" : \"y46btmuxa4f5kg4t011ako30\",\n    \"description\" : \"Et nihil in vel blanditiis. Atque minus aspernatur atque error aspernatur dicta incidunt. Amet et sunt. Nam dolores in libero sint ratione error vel. Magni tempora repellat similique molestiae.\"\n  }, {\n    \"doctype\" : \"sh3l688weyb54nw1ju16tuijcz89fg0v1fhkj4hp3akhx2je7pvvl6qzlzf6keb1ekgsbg5h9t1gzn9zdldb31vs4rfibkeyp7y57y44jkpc\",\n    \"description\" : \"Repudiandae sunt aut. Sed officiis ut itaque quasi reiciendis sit nihil. Vero molestias quibusdam est quo et fugiat. Dolor tenetur suscipit labore sequi earum accusantium velit.\"\n  }, {\n    \"doctype\" : \"h3a4b4r25bzsh38nwfi8qq93cyx6h8q\",\n    \"description\" : \"Aut expedita officia possimus et iste maiores. Et voluptatem rem. Necessitatibus voluptatem aspernatur impedit.\"\n  }, {\n    \"doctype\" : \"ck7kd9wox5j89c61slv0pxj1t0sflcjffa7tqpu0fyn5aiha2ibiqor5tkqyxq78wgsxkh2cugrnqubtxaotvmgifgikapwotvfhglov56ct0zsc9z7evr0hk387jadf1tu7ef4zkah3uujgqfn3nu5pax1l1r095zdd9sxerfmld31w0\",\n    \"description\" : \"Magnam rerum ipsum vel amet officia in. Est odit culpa quidem sint est. Voluptate soluta dolorem. Eos laboriosam dolores rem tenetur.\"\n  }, {\n    \"doctype\" : \"wdsnk1vj694pcqeav96xhfyybla1mp5nm168bazmh92tkdx0yy6h79e9im7fu3vbaetnymsej3z15cxg3bw5lgi7qm7umfqrqrgd4pagm6g1a3rlkt8m3kntfhqjoiskoo79v71as7rkk6q93rvzo5k2\",\n    \"description\" : \"Ea tempora quidem voluptatem deleniti quibusdam quas corporis. Fugiat voluptatem minus. Nihil quia sint vero excepturi expedita maxime recusandae. Dolor aut ipsa sunt voluptatem recusandae repellendus\"\n  }, {\n    \"doctype\" : \"h3ml1\",\n    \"description\" : \"Vitae dolorem fugiat voluptatem nostrum. Iusto enim ipsa. Temporibus doloremque libero harum ullam. Qui velit impedit quas vel vero.\"\n  }, {\n    \"doctype\" : \"v8d4apvlkt5avpgxk7qj5pekscs14l2g6ra71rlai0qnqlnvhq4g54h1uq2rg\",\n    \"description\" : \"Placeat labore rerum commodi voluptas. Dignissimos quia commodi voluptatem dolorum quo. Accusantium amet voluptatem.\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "318eb905-4552-4d29-b2cc-31ef8a6701f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.444116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Documents Provided by an Issuer id",
          "schema" : {
            "properties" : {
              "documents" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "doctype" : {
                      "minLength" : 1,
                      "type" : "string"
                    }
                  },
                  "required" : [ "doctype", "description" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "documents" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "2d9f264d-2040-4ba4-9ecc-0194f3ffd3d9",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/18x2",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d9f264d-2040-4ba4-9ecc-0194f3ffd3d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.443451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "bd7cf8a9-b151-4d34-86f0-bc4133afa774",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/769k",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd7cf8a9-b151-4d34-86f0-bc4133afa774",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.443341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "ab81a65d-3797-488a-888d-27b7e0ecb754",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/439a",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab81a65d-3797-488a-888d-27b7e0ecb754",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.44323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "c768fb2b-9624-47c7-9344-38d5c70fd1ec",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/uq20",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"parent\" : \"1234\",\n    \"size\" : \"366481\",\n    \"mime\" : \"\",\n    \"name\" : \"My Documents\",\n    \"description\" : \"\",\n    \"id\" : \"5678\",\n    \"type\" : \"dir\",\n    \"uri\" : \"\",\n    \"issuer\" : \"\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c768fb2b-9624-47c7-9344-38d5c70fd1ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.44311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date of file upload in case of self uploaded documents",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "The id if this item is a folder.",
                    "example" : "5678",
                    "type" : "integer"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer. This is blank in case of uploaded documents and folders.",
                    "example" : "",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The mime type of the file. This field will contain “application/PDF” for PDF files; “image/png” for PNG files and “image/jpg” or “image/jpeg” for JPG/JPEG files. This will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the file or folder.",
                    "example" : "My Documents",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "The id of the parent folder.",
                    "example" : "1234",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file or folder.",
                    "example" : "366481",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String dir for folder and string file for file.",
                    "example" : "dir",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API. URI will be blank in case of folder.",
                    "example" : "",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "id", "size", "date", "parent", "mime", "uri", "description", "issuer" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "28bd0471-7a8d-414a-a53a-b5e5e2dc36cf",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Magnam atque quidem molestiae debitis a. Et et inventore laborum et quidem. Ducimus error aut consequatur.\",\n  \"error\" : \"28lbj0389vvfrpmvw8xaal6rx4vp6zt8q2ebyinbk14wvilih2medjd3ddogbrjs0z7p22lhy2abmbjvdiq2ot7d6017o0xibzm0tb8fm4ngz5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28bd0471-7a8d-414a-a53a-b5e5e2dc36cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.442919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseSix"
            }, {
              "$ref" : "#/components/schemas/ResponseSeven"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "c893f49c-361a-4f40-b16e-95fcb5a5629a",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c893f49c-361a-4f40-b16e-95fcb5a5629a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.442814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "0f5c3381-eee9-420e-b284-b9a64d29c126",
    "name" : "Issued Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/issued",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"date\" : \"2015-05-12T15:50:38Z\",\n    \"doctype\" : \"HSCER\",\n    \"issuerid\" : \"in.gov.cbse\",\n    \"parent\" : \" \",\n    \"size\" : \" \",\n    \"mime\" : \"application/pdf\",\n    \"name\" : \"Class XII Marksheet\",\n    \"description\" : \"Class XII Marksheet\",\n    \"type\" : \"file\",\n    \"uri\" : \"in.gov.cbse-HSCER-201412345678\",\n    \"issuer\" : \"CBSE\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f5c3381-eee9-420e-b284-b9a64d29c126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.442761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of issued Documents Version1 id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "date" : {
                    "description" : "This contains the date on which the certificate was last modified in DigiLocker.",
                    "example" : "2015-05-12T15:50:38Z",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "This is the descriptive document type stored in DigiLocker such as ‘Income Certificate’ or ‘Driving License’.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "doctype" : {
                    "description" : "A 5 character unique document type provided by DigiLocker.",
                    "example" : "HSCER",
                    "type" : "string"
                  },
                  "issuer" : {
                    "description" : "The name of the issuer.",
                    "example" : "CBSE",
                    "type" : "string"
                  },
                  "issuerid" : {
                    "description" : "Unique DigiLocker issuer id as mentioned in the URI.",
                    "example" : "in.gov.cbse",
                    "type" : "string"
                  },
                  "mime" : {
                    "description" : "The list of mime types for the certificate data. This field will contain “application/PDF” or “application/xml”.",
                    "example" : "application/pdf",
                    "type" : "string"
                  },
                  "name" : {
                    "description" : "The name of the certificate.",
                    "example" : "Class XII Marksheet",
                    "type" : "string"
                  },
                  "parent" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "This will be blank.",
                    "example" : " ",
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "String file.",
                    "example" : "file",
                    "type" : "string"
                  },
                  "uri" : {
                    "description" : "This is the unique identifier of the document shared by the user in DigiLocker. You will use this identifier to get the actual file from DigiLocker using the API.",
                    "example" : "in.gov.cbse-HSCER-201412345678",
                    "type" : "string"
                  }
                },
                "required" : [ "type", "name", "size", "date", "parent", "mime", "uri", "doctype", "description", "issuer", "issuerid" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "5d002a15-dfb8-47c1-b44f-8d845e50f29c",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Internal server error\",\n  \"error\" : \"unexpected_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d002a15-dfb8-47c1-b44f-8d845e50f29c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.44262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "example" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "10f3f799-46ea-48e1-8419-d1cc4cf91a50",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"The folder does not exist\",\n  \"error\" : \"invalid_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10f3f799-46ea-48e1-8419-d1cc4cf91a50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.442578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The folder does not exist",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "84735c3c-871e-464b-ab58-46f671e8914b",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84735c3c-871e-464b-ab58-46f671e8914b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.442533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "e13b9cbb-031f-4307-864f-0db7d9844a79",
    "name" : "Get List of Self Uploaded Documents",
    "request" : {
      "urlPath" : "/oauth2/1/files/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directory\" : \"c0rcfte\",\n  \"items\" : [ {\n    \"date\" : \"2022-08-24T10:09:19.44076Z\",\n    \"parent\" : \"bza6j5lq0vs1kkslg9rec2t6vl\",\n    \"size\" : \"n0y6p0s64icqcwa8w\",\n    \"mime\" : \"j95802v9pomsnwcookro8ua57edoyna7xidltm02wyghux1zu08xzlvh13em13i8ke3s3uju5rdmauv4twlfgeopjqslj2hces81d9iw28lprgounau9w9v3bbj2twchmq7lg0ed951gqe7oatozz119kh0gag7ogvcjsnb9w70m3hf9t1ex02es6aqz\",\n    \"name\" : \"Terry Harris\",\n    \"description\" : \"Quidem cum sunt quos rerum itaque. Voluptate vel aut quis ut totam repudiandae. Voluptatibus adipisci voluptatem quae voluptatem ut.\",\n    \"id\" : 189079894,\n    \"type\" : \"pg18ru34ctl59ca65dtu2xo7tbzfot18ho8ehi9v0b3jdtlmvijwp158r438es1oyyctw3jie4z7jspv3a2sszt5p9essvn6vq34so1zpzq9yprfqbqjuwnjys43qmld5obj8x7n52nbcyei7rts3fbmjr5m04ma7327qbea3b9estjirn1bz85tj703bdr8idwa5pt\",\n    \"uri\" : \"https://web.example.mocklab.io/058736\",\n    \"issuer\" : \"jgwfpnx2xbq\"\n  }, {\n    \"date\" : \"2022-07-20T09:18:19.441029Z\",\n    \"parent\" : \"cszw0kfgt7vs1w3s4lxv9s6hpwmd6guklsozyq0rd0tcrejvc6ydjski84hbc74gcjb1lm40geip7afiqt7etp78r3x0o6omci0w3sish03aja3s41lg76rau57nsz9eh5o3e\",\n    \"size\" : \"5yay2olxlvm4ereueejx5kgweprgrdf7uhnewk4rwd3tb7nk44yqbp2tsbsnabpjar2af7uye4a0zwg8e4hm5cik8numzczsxgyegj5utf4gxqnmrw8\",\n    \"mime\" : \"8jfv8jgudjp85e0i1ney1uorcwz4hd4rugc02a\",\n    \"name\" : \"Maurice Leannon\",\n    \"description\" : \"Aut est repudiandae magnam. Rerum et quos debitis delectus. Iusto maiores harum aspernatur est.\",\n    \"id\" : 189079894,\n    \"type\" : \"s8rrpl2w0xb2k3maes5cykev3bevndnvuwgrnsibyqkaeeph4272d9sardsctyxdiebd7yw2t7klnxjajjodhbvnw23uqo42tdnpf5w\",\n    \"uri\" : \"https://web.example.mocklab.io/634609\",\n    \"issuer\" : \"otos5p\"\n  }, {\n    \"date\" : \"2022-07-11T11:46:19.441283Z\",\n    \"parent\" : \"9jv41fdxrwjmkf2abyqci7u40a0mozwwax9c9skwmialticcnli3zp15t86hfqppiu6wz7g0l6c2l394o4yqjufq3bi5fb2a5gz17c62odyh6v4m9ebnq8llvfjk0s07i3qjn3thmygmy\",\n    \"size\" : \"mbclyi6tx\",\n    \"mime\" : \"8ojq6cyfuinwds099l2xuetfa3ehpfeel7xjsmjtqg2dnzyotamyf83ns5cuvuoy961lmqmnp645iiqhe83fpzxh5dbv7qg1n9bu2lcjch1ls8ir3hfdsu72z4qdp7dccwa\",\n    \"name\" : \"Charles Cummerata\",\n    \"description\" : \"Eligendi commodi qui. Reiciendis fugit sunt ipsam accusantium aut in. Ipsam quae quis.\",\n    \"id\" : 189079894,\n    \"type\" : \"vrga0faf0pwcqdud\",\n    \"uri\" : \"https://web.example.mocklab.io/099207\",\n    \"issuer\" : \"22rivhghtotz4f1a32eb934b6jz8hsqsjxlka17h3i1bc68ixmet33ok4yfqvvdhstvhr2y7qi2ckj3opw770yyrq86gubyxhm1n2xnl2ohmbze8ktjeblohuj14nog5q8sh1xrkz9xqqepu9xyk20rx5avoptpen8jb6b2v6b6b97ox80iwiev540lr1r31\"\n  }, {\n    \"date\" : \"2023-01-25T08:52:19.441523Z\",\n    \"parent\" : \"ss4cpmtzeku56lq0ouw2ehx0x64rffopsju04f3w49ue73wtkc38aq5r2t68uck6fispqy5gh0bd10u7nqxyrhmyk8yavfqho6por5nw948daa6cfmnewxhbcbhvi083ovmbj7tvpeh43gm33cflvu7u\",\n    \"size\" : \"d2dooh4fwcj9xlkeg9kxdee1y6e5t8qd9f122i4wnsn2a7c0vty5925hmhyxej8r4pjphn05uacn0btebu4y4h2rhrv3vaoyew1vi2vzt1sii2mnkr1\",\n    \"mime\" : \"t1gs9navnqyu3xkka4ny3kd7ehu57yewgvyxscjd815kgarp7mtk19sbpfhmvvs94tgcxd8s3qe\",\n    \"name\" : \"Caterina Bahringer\",\n    \"description\" : \"Fugit qui ipsa illum. Saepe eos maiores qui maxime eveniet. Mollitia odit et soluta aliquid. Ea ab sit vero cumque sunt architecto. Reiciendis qui autem odit.\",\n    \"id\" : 189079894,\n    \"type\" : \"zdzjgoyy29xo49ha34ws59zn7xntf3t4c2jnkzphklj\",\n    \"uri\" : \"https://web.example.mocklab.io/185646\",\n    \"issuer\" : \"nxukwf5if6gr403cxpaktq6e7uil171f82kl69pdr5ab4wd6vxhnkffrepi6qjp1v2sd02aq6hre3ook5mgxa92aampor9hcdpzj7upa4gzo3h25ngjord1p75ggbm1xw4806a0p6\"\n  }, {\n    \"date\" : \"2022-04-07T08:55:19.441793Z\",\n    \"parent\" : \"4nt40w1ahkds7nmr0siujnzmp9geer9xv3bi1f9em09m3mekuqasxct8ss7sxt31bco0l3fjgaflnw7jbqukw1dpj2o56vbnaqaz8xpx0t66qgr7uyzmf9dw846e9m1yx502hdxj8n2fxab5jprjnlauliaah9sllwjld2g2ivo6z035i7qdowsfd9fl3pqrx9i4zp2\",\n    \"size\" : \"wzab0yc3oh1imlzxlm99eypzyusassh87ke33pyjw3gmzszjxwg8fmticc7zjamsh45dbj1y\",\n    \"mime\" : \"l5xsp21hc3aamziw8jzg2ckqey2ox916elj4jb3qlbs44plfrzt96wc1\",\n    \"name\" : \"Mr. Emery Schultz\",\n    \"description\" : \"Ipsum qui necessitatibus repellat sunt voluptatem. Omnis deserunt qui. Magni perferendis molestiae neque rerum. Aliquid dolor magni id facilis aut. Quisquam atque quia sunt neque a ut ea.\",\n    \"id\" : 189079894,\n    \"type\" : \"djevl1tkthj0jkzdnqdzx73dbcg4w9za1hclperf0c4i08c476etl8s03ep5ao3ie7m1y0npt6j7kvwweaiu1scyaiyid3vvwz0p6s0u4cftm4eltgdbxcbdbczvlj8\",\n    \"uri\" : \"https://web.example.mocklab.io/480388\",\n    \"issuer\" : \"awlhseudbwj6d0cbvgv1m8sbmfwdlql2zv09xckqdij76dnllqva0gfwminbp5c1ga670ny9qapfy0fz9r6u9chud4a21xq6n24vhz3jbo62c97g5jcjimnp6vdjedi1h\"\n  }, {\n    \"date\" : \"2022-04-25T08:02:19.442075Z\",\n    \"parent\" : \"2agg7491lss1x4ageqbbwkf8cklpoedm014l10svz3bawzuebv5l40gupwq9y77mdq9wgxc6d83aljfx6kyfq2crkg2e6qp9qsreaa6enw0duwix6peo2roymhus9uj8u8mxhz0e6fnmbiv37pwyz16jeu5nis0y16\",\n    \"size\" : \"mbompitl64jzra6qnpo0te708q112s1buxhf5as3hdqhxize9wr2e5tqlmntdk\",\n    \"mime\" : \"f305jqo59zjvlrbofdwg33jw16ctm31e4hfodnv6g8mr81fyhpuhhrv781s8shksgs5n4n1gqipxthb4kvaohto1v70nxy622ysgagq0s9a2rhz\",\n    \"name\" : \"Marcie Rolfson\",\n    \"description\" : \"Et voluptatem labore qui incidunt. Eos natus quo. Consectetur aut non praesentium voluptatibus voluptatibus consequatur ut.\",\n    \"id\" : 189079894,\n    \"type\" : \"417wiom8f3qxn7wk4bnd\",\n    \"uri\" : \"https://web.example.mocklab.io/010333\",\n    \"issuer\" : \"406t7f4pl8bqrsesidsvlk8pyhtdwxqrefv8j30i1pa805lk6cybd9e7pnrws8t4rvqhwswdxwcuc0hcq1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e13b9cbb-031f-4307-864f-0db7d9844a79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.442462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get List of Self Uploaded Documents",
          "schema" : {
            "properties" : {
              "directory" : {
                "minLength" : 1,
                "type" : "string"
              },
              "items" : {
                "items" : {
                  "properties" : {
                    "date" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "description" : {
                      "type" : "string"
                    },
                    "id" : {
                      "example" : 189079894,
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "issuer" : {
                      "type" : "string"
                    },
                    "mime" : {
                      "type" : "string"
                    },
                    "name" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "parent" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "size" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "type" : {
                      "minLength" : 1,
                      "type" : "string"
                    },
                    "uri" : {
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "type", "size", "date", "parent", "mime", "uri", "description", "issuer" ]
                },
                "minItems" : 1,
                "type" : "array",
                "uniqueItems" : true
              }
            },
            "required" : [ "directory", "items" ],
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "4016cdbb-74d7-49f0-97e5-fd693269062c",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F421312",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"error_description\" : \"Molestiae optio ut dolor inventore. Enim non enim quae ipsam eos. Commodi eaque cumque vel fugiat ipsam. Repellat illum natus ut nesciunt. Vero quia sunt reiciendis dicta.\",\n  \"error\" : \"71hjk3qyh2m4lsdb4vmtelkdcl1ky7vz3yh348bk066uqz2i94amk2yxtzpi1ebn7zy9mg0zpg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4016cdbb-74d7-49f0-97e5-fd693269062c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.440691Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response1"
            }, {
              "$ref" : "#/components/schemas/Response2"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "8e47603e-52f8-491d-891a-3e89a3c5e24e",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F961535",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Consequatur nobis maiores aliquam itaque non. Ullam fugit fugiat minima quia iusto. Est dolorem libero tempora vero ducimus magni.\",\n  \"error\" : \"nk912psq6lcd72cl3tqueafuop2ddqx8at9y9bis7zijlsh1w03oal1fvbujicl5pgw7k15wo21a1n5rmyh8tuxnw2bjlgjqcri7mqe1ekvxx5ewu87dx0la04fdguzsuzaydabw5f947prrzonnkj3iu20iy7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e47603e-52f8-491d-891a-3e89a3c5e24e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.440504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/Response3"
            }, {
              "$ref" : "#/components/schemas/Response4"
            }, {
              "$ref" : "#/components/schemas/Response5"
            }, {
              "$ref" : "#/components/schemas/Response6"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "9ee10a3c-9156-4754-999a-45e95aa96510",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F323982",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"No file found for given URI\",\n  \"error\" : \"invalid_uri\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ee10a3c-9156-4754-999a-45e95aa96510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.440328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_uri",
                "type" : "string"
              },
              "error_description" : {
                "example" : "No file found for given URI",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "e0bb5127-dbb4-4fe6-823f-f568c147b7e4",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F663134",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0bb5127-dbb4-4fe6-823f-f568c147b7e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.440226Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "3482f13e-cd13-4a57-9d77-c7ba9b220c22",
    "name" : "Get File from URI (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F889372",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"URI parameter missing\",\n  \"error\" : \"uri_missing\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3482f13e-cd13-4a57-9d77-c7ba9b220c22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.440119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "uri_missing",
                "type" : "string"
              },
              "error_description" : {
                "example" : "URI parameter missing",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "19791a37-b3b5-4090-9722-8f76a98705c8",
    "name" : "Get File from URI (image/png)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F378563",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/png"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"png binary content\"",
      "headers" : {
        "Content-Type" : "image/png"
      }
    },
    "uuid" : "19791a37-b3b5-4090-9722-8f76a98705c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.440015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "png binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "26a5b4ba-840a-4845-85e8-4a2a89e1843d",
    "name" : "Get File from URI (image/jpg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F546267",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpg"
      }
    },
    "uuid" : "26a5b4ba-840a-4845-85e8-4a2a89e1843d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "e7901cbe-76e9-46dc-841f-4559272cb8fc",
    "name" : "Get File from URI (image/jpeg)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F371221",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "image/jpeg"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"jpeg binary content\"",
      "headers" : {
        "Content-Type" : "image/jpeg"
      }
    },
    "uuid" : "e7901cbe-76e9-46dc-841f-4559272cb8fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "jpeg binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "a85f98a9-9c9c-4717-b75a-a11ade0d3770",
    "name" : "Get File from URI (application/pdf)",
    "request" : {
      "urlPath" : "/oauth2/1/file/https%3A%2F%2Fweb.example.mocklab.io%2F550794",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"pdf binary content\"",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "a85f98a9-9c9c-4717-b75a-a11ade0d3770",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get File from URI id",
          "schema" : {
            "example" : "pdf binary content",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "ce61dcb4-e6b1-4e33-b852-17736f105aee",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Nesciunt facere commodi deserunt labore voluptas itaque sed. Alias perspiciatis totam quasi placeat et ut. Adipisci saepe incidunt sint corporis sint repudiandae.\",\n  \"error\" : \"2xw76fbqy29dk13e0s69l58iytmgwqe94ldkt921oum3el9k0xefdns64fcnh2iwbgw33bzdcjyc7yg5z4m8izipjkfbby2b6ors9zhgmeyw012tw271paowwh0jgp3cepfu5fntxu16h27vru1ho01vetbcmkkyu132ww\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce61dcb4-e6b1-4e33-b852-17736f105aee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "f21ba1db-3f58-48df-aed1-cc612cd3681f",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The access token is invalid\",\n  \"error\" : \"invalid_token\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f21ba1db-3f58-48df-aed1-cc612cd3681f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_token",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The access token is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "7b51f775-c6f6-4a89-9788-cb3959751d16",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b51f775-c6f6-4a89-9788-cb3959751d16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "path_missing", "contenttype_missing", "hmac_missing", "filename_missing", "hmac_mismatch", "invalid_filename", "invalid_filesize", "invalid_filetype", "invalid_path", "file_data_missing", "mimetype_mismatch" ]
              },
              "error_description" : {
                "enum" : [ "Path parameter is missing", "Content-Type parameter is missing", "HMAC parameter is missing", "Filename is missing in path parameter", "HMAC does not match", "Restricted characters are not allowed in file name", "The file size exceeds maximum allowed file size of 10MB", "The file type is not allowed", "The destination folder does not exist", "Missing file content in the request", "The mimetype provided in Content-Type parameter does not match with the mimetype of the file" ]
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "f2dc55a7-d9d9-42c1-805c-f7776dbcc620",
    "name" : "Upload file to locker",
    "request" : {
      "urlPath" : "/oauth2/1/file/upload",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"Path\" : \"5zlzug7i3l5214kk97y1o2655w2jj2y9bdxqsb28q81uw3onc8ejyyb2c9ai1aqcogbs4kqeq5\",\n    \"size\" : \"qnqfs927rz9izpx4dggkju3twr06686tauvi3nqa41fkggkdsxhck8k9mg81kglg1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2dc55a7-d9d9-42c1-805c-f7776dbcc620",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Upload File to Locker id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "Path" : {
                    "description" : "The destination path of the file in DigiLocker including filename.",
                    "type" : "string"
                  },
                  "size" : {
                    "description" : "Size of file.",
                    "type" : "string"
                  }
                },
                "required" : [ "Path", "size" ],
                "type" : "object"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "ec86df02-fc8e-4f1b-b259-bb848d411bdf",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Voluptatem asperiores voluptatem. Qui laborum ipsa beatae animi quibusdam earum. Maxime neque eos ut. Quaerat similique dolores.\",\n  \"error\" : \"1ep3qgfguy9oc4jiqurhd2bcqh2wr96hoeuuz3v7kc5frfn3b8jbbe1ut7jcwz5g4u6gckjfeb6hf8sa7zt4gx0rkjpx4pqfchqbq3rmueo24pv9gfsycwtuhieuw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec86df02-fc8e-4f1b-b259-bb848d411bdf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseFive"
            }, {
              "$ref" : "#/components/schemas/ResponseSix"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "0a0f1cf7-9b29-45c3-8bdb-3c2983512beb",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"The client_id parameter is invalid\",\n  \"error\" : \"invalid_client_id\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a0f1cf7-9b29-45c3-8bdb-3c2983512beb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439229Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "error" : {
                "example" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "example" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "d4234217-4be8-4933-916b-c1ae193ca49e",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Repudiandae vel sunt deleniti cupiditate quam sequi maxime. Ut alias quas adipisci maiores vel officiis sunt. Asperiores et sunt impedit quo rerum porro perferendis.\",\n  \"error\" : \"u0y2fabiw2mh8fi3krfmusq5zr2qijk09j8w6vvq75mxzm13trt6z5vhoxpvj1wvgla7adbv7xevb349j4rub2ir4ifg8vcg7zud66izgg2gpf04onrq5rffnir1cyat7ovk3g2gag\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4234217-4be8-4933-916b-c1ae193ca49e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/ResponseOne"
            }, {
              "$ref" : "#/components/schemas/ResponseTwo"
            }, {
              "$ref" : "#/components/schemas/ResponseThree"
            }, {
              "$ref" : "#/components/schemas/ResponseFour"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "66391cef-c6a1-4c44-990e-e23c2b66e005",
    "name" : "Get Device Code",
    "request" : {
      "urlPath" : "/oauth2/1/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dl_masked_email\" : \"xxxxxx@gmail.com\",\n  \"device_code\" : \"74tq5miHKB\",\n  \"expires_in\" : 600,\n  \"dl_masked_mobile\" : \"XXXXXX1234\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66391cef-c6a1-4c44-990e-e23c2b66e005",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.439052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Device Code id",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "example" : "74tq5miHKB",
                "type" : "string"
              },
              "dl_masked_email" : {
                "description" : "The masked email on which the OTP is sent.",
                "example" : "xxxxxx@gmail.com",
                "type" : "string"
              },
              "dl_masked_mobile" : {
                "description" : "The masked mobile number on which the OTP is sent.",
                "example" : "XXXXXX1234",
                "type" : "integer"
              },
              "expires_in" : {
                "description" : "The duration in seconds for which the code is valid.",
                "example" : 600,
                "type" : "integer"
              }
            },
            "required" : [ "device_code", "dl_masked_mobile", "dl_masked_email", "expires_in" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "a2c47494-b6f3-453d-8fe8-129d270b6b0a",
    "name" : "Get Authorization Code - 400",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "097w259gkpz5n6lnw9ugj8vs82j0f72eg97b4nnwbklvvdf2d"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F176922"
        },
        "state" : {
          "equalTo" : "Hawaii"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a2c47494-b6f3-453d-8fe8-129d270b6b0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "55c395b4-f122-4be6-bff8-da4d841f0bba",
    "name" : "Get Authorization Code (application/json)",
    "request" : {
      "urlPath" : "/oauth2/1/authorize",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "response_type" : {
          "equalTo" : "ywvjrvgo4dt1mauj7qcysfkuafpevmdit4rkdpii6q1bn2qm3na5suw48tempql1zqf2spk48auubw7w9iiat054p7h2d7rpuh4cfz9skg520o7flh422iertpwwjgnkhtxysqw3ybek43wbw3pcs7x94j3ieedcgpyw02784xb"
        },
        "redirect_uri" : {
          "equalTo" : "https%3A%2F%2Fweb.example.mocklab.io%2F093801"
        },
        "state" : {
          "equalTo" : "Louisiana"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"details\" : {\n    \"access_token\" : \"6798srq3lhhqhhjlo5ftxsi\",\n    \"scope\" : \"yhh9kxjx3q5w0bzmbacl77geklu6k1i8kzx86k85xdw40o3j9qspvhtfp76bzon4a1ubtqvx7x1jzthf0vrops21qmxf5wge3jse73y7qvwmuuevxbih94ythj9jfapxlp8qeao0q5dfvm27jovscg9hyv5y390binsqi4fom00\",\n    \"token_type\" : \"fp7tlwefl7upw6evr57q6ijdsjbje1q8rxhait71kqmkrphjg1d6wib6w80rq\",\n    \"expires_in\" : 2108632421912705488\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55c395b4-f122-4be6-bff8-da4d841f0bba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Get Authorization Code id",
          "schema" : {
            "properties" : {
              "details" : {
                "properties" : {
                  "access_token" : {
                    "type" : "string"
                  },
                  "expires_in" : {
                    "type" : "integer"
                  },
                  "scope" : {
                    "type" : "string"
                  },
                  "token_type" : {
                    "type" : "string"
                  }
                },
                "required" : [ "access_token", "expires_in", "token_type", "scope" ],
                "type" : "object"
              }
            },
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "2ed0330b-eba2-45ef-be09-34c20d2909e5",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ed0330b-eba2-45ef-be09-34c20d2909e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.43855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error"
              },
              "error_description" : {
                "description" : "Internal server error"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "e64602da-19e5-4823-8933-22737d9664af",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Iste perspiciatis cupiditate ratione tenetur neque. Explicabo officia enim dolorem nisi. Quis voluptas quidem.\",\n  \"error\" : \"5cosjuqcuujc2x0xj4mzh8905kavrs97sqabadb6emrcul679k24cl6ez35mhz6uers7fm1yzu4i4s78gmzl8wrx4cgphf5u7utuaz68991bi3wp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e64602da-19e5-4823-8933-22737d9664af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "96447645-fa5f-4444-a34e-f3f207181911",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : { },\n  \"error\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96447645-fa5f-4444-a34e-f3f207181911",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  Either one of uid or mobile number is mandatory  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "d9960511-c12f-4164-b988-8dd96b83cd8c",
    "name" : "Verify Account",
    "request" : {
      "urlPath" : "/account/2/verify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"registered\" : \"true\",\n  \"digilockerid\" : \"123e4567-e89b-12d3-a456-426655440000\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9960511-c12f-4164-b988-8dd96b83cd8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Verify Account id",
          "schema" : {
            "properties" : {
              "digilockerid" : {
                "description" : "A unique 36 character DigiLocker Id of the user account.",
                "example" : "123e4567-e89b-12d3-a456-426655440000",
                "type" : "string"
              },
              "registered" : {
                "description" : "true indicates that the provided Aadhaar/mobile number is already registered and false indicates otherwise.",
                "example" : "true",
                "type" : "string"
              }
            },
            "required" : [ "registered", "digilockerid" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "4164e200-4525-46d7-8cbe-52a24c3524b4",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error_description\" : \"Omnis facilis qui inventore laboriosam nostrum et qui. Modi enim repudiandae eum itaque. Excepturi dicta natus iure ratione quo sunt. Autem veniam rerum.\",\n  \"error\" : \"5a7o0rnerqvkbtlbaahw1m2t74j9cugjvo3mq3afl4vpy9g5w5s19l3h2s\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4164e200-4525-46d7-8cbe-52a24c3524b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "unexpected_error",
                "type" : "string"
              },
              "error_description" : {
                "description" : "Internal server error",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "acef1b73-b4fa-4f2a-83f6-93f5835eee3a",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error_description\" : \"Neque quo in in omnis. Eius vel neque fugit ducimus culpa et. Aspernatur voluptas excepturi voluptatem labore deleniti qui. Nostrum excepturi esse cumque nostrum corrupti aperiam rerum. Ut fugit aut p\",\n  \"error\" : \"mnanulbg5040et2m0vxs4aqo4n5qzudnqnx43d09421121uf41z0wu8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acef1b73-b4fa-4f2a-83f6-93f5835eee3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.438143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_digilocker_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The digilockerid parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "5f23017c-2673-4acc-9270-b7dba3761801",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error_description\" : \"Velit labore voluptas est nesciunt aut sit. Rerum odit expedita quod quasi incidunt sapiente rerum. Libero suscipit illo quibusdam distinctio.\",\n  \"error\" : \"gk385t7ejvuvoy1wwu96a4bspkr2qzp87k0zawlaofidi233646f759ay6ucpmx1exyaxo2sb6ik7raujmttgonarsllo5sjldcpxkkhfszlp5nly8aicy25g6ypv0bbhul4poa1p55yishvwh9x2egq0upx6yt92pm8vhwbtprlceo9wndm4pbbcfwct7a0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f23017c-2673-4acc-9270-b7dba3761801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.437992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_client_id",
                "type" : "string"
              },
              "error_description" : {
                "description" : "The client_id parameter is invalid",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "a14aa76c-23a4-4998-bd49-4fea7bd367c3",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error_description\" : \"Voluptatem ab itaque quam dolor minima aut quasi. Nobis nam animi deleniti consectetur qui error eligendi. Quidem quia non excepturi.\",\n  \"error\" : \"8hyn0s0npjkurhc3njlgw9lhj84fapf92di9nwr09pogqoy3cr90sz1ys3ullrw5iux56itdcd1uuawrree1n66fpyjn76j62hxg165ld02n7n4ji9sf3wee3xacwxiykxgmvf7cx5sjtqgvcjxxd5zi9gk2g6rvoua6ayvlzs7bbdj3q17kx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a14aa76c-23a4-4998-bd49-4fea7bd367c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.437865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "invalid_parameter",
                "type" : "string"
              },
              "error_description" : {
                "description" : "One or more of the mandatory parameters is missing or invalid. The error description text will contain one or more of the following error texts:|-  URI parameter is missing or invalid  Doctype parameter is missing or invalid  Description parameter is missing or invalid  Docid parameter is missing or invalid  Issuedate parameter is missing orinvalid  Timestamp parameter is missing or invalid  HMAC parameter is missing or invalid   URI already exists in this account   URI already exists in another account",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "0181a8a0-dc2f-46d1-9c17-089f414a64b2",
    "name" : "Push URI to Account",
    "request" : {
      "urlPath" : "/account/1/pushuri",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0181a8a0-dc2f-46d1-9c17-089f414a64b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:19.437703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Push URI to Account id",
          "schema" : {
            "title" : "Sample"
          }
        }
      }
    },
    "insertionIndex" : 89
  } ]
}