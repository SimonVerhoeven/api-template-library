{
  "mappings" : [ {
    "id" : "548e191d-35d0-4a98-8b71-9627020dd937",
    "name" : "Creates a place action link associated with the specified location, and returns ...",
    "request" : {
      "urlPath" : "/v1/0vl866u4v0gslm3a9w65u1td34bnu1aaqpz0bz3h735t19r154boitpwwg6pnh9txocngrz9kl887/placeActionLinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placeActionType\" : \"APPOINTMENT\",\n  \"isEditable\" : false,\n  \"createTime\" : \"2022-08-13T16:48:06.057576Z\",\n  \"name\" : \"Forest Hermiston\",\n  \"updateTime\" : \"2022-11-27T15:31:06.057679Z\",\n  \"isPreferred\" : true,\n  \"uri\" : \"https://web.example.mocklab.io/816420\",\n  \"providerType\" : \"AGGREGATOR_3P\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "548e191d-35d0-4a98-8b71-9627020dd937",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.057877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessplaceactions.locations.placeActionLinks.create",
          "schema" : {
            "description" : "Represents a place action link and its attributes.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time when the place action link was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "isEditable" : {
                "description" : "Output only. Indicates whether this link can be edited by the client.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "isPreferred" : {
                "description" : "Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.",
                "type" : "string"
              },
              "placeActionType" : {
                "description" : "Required. The type of place action that can be performed using this link.",
                "enum" : [ "PLACE_ACTION_TYPE_UNSPECIFIED", "APPOINTMENT", "ONLINE_APPOINTMENT", "DINING_RESERVATION", "FOOD_ORDERING", "FOOD_DELIVERY", "FOOD_TAKEOUT", "SHOP_ONLINE" ],
                "type" : "string"
              },
              "providerType" : {
                "description" : "Output only. Specifies the provider type.",
                "enum" : [ "PROVIDER_TYPE_UNSPECIFIED", "MERCHANT", "AGGREGATOR_3P" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The time when the place action link was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "uri" : {
                "description" : "Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6c3b0511-ddaa-4be0-86f0-e43c43d71226",
    "name" : "Lists the place action links for the specified location.",
    "request" : {
      "urlPath" : "/v1/fytde92k6j7i7d6xzn3gipptrerxn6qw0skl5e0i5diixy0gcvtgagt4h6spwxaupywx3881td1n792xv6mib7znd2cwna8ab2kikgo8naqx078fv8iisdds1ifz0vr7gzcz3u28hax15se37909qnshfzupycp0/placeActionLinks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placeActionLinks\" : [ {\n    \"placeActionType\" : \"PLACE_ACTION_TYPE_UNSPECIFIED\",\n    \"isEditable\" : false,\n    \"createTime\" : \"2023-02-25T18:23:06.05659Z\",\n    \"name\" : \"Wesley Grimes\",\n    \"updateTime\" : \"2022-10-23T16:32:06.056661Z\",\n    \"isPreferred\" : false,\n    \"uri\" : \"https://web.example.mocklab.io/503472\",\n    \"providerType\" : \"MERCHANT\"\n  }, {\n    \"placeActionType\" : \"FOOD_DELIVERY\",\n    \"isEditable\" : false,\n    \"createTime\" : \"2022-08-18T18:00:06.056787Z\",\n    \"name\" : \"Stevie Spencer\",\n    \"updateTime\" : \"2022-09-27T16:16:06.056864Z\",\n    \"isPreferred\" : true,\n    \"uri\" : \"https://web.example.mocklab.io/372720\",\n    \"providerType\" : \"AGGREGATOR_3P\"\n  }, {\n    \"placeActionType\" : \"SHOP_ONLINE\",\n    \"isEditable\" : false,\n    \"createTime\" : \"2022-06-02T17:30:06.056989Z\",\n    \"name\" : \"Austin Mills\",\n    \"updateTime\" : \"2023-02-16T16:59:06.057063Z\",\n    \"isPreferred\" : true,\n    \"uri\" : \"https://web.example.mocklab.io/017627\",\n    \"providerType\" : \"PROVIDER_TYPE_UNSPECIFIED\"\n  }, {\n    \"placeActionType\" : \"ONLINE_APPOINTMENT\",\n    \"isEditable\" : false,\n    \"createTime\" : \"2022-11-23T18:12:06.057193Z\",\n    \"name\" : \"Ervin Dietrich\",\n    \"updateTime\" : \"2022-05-06T18:38:06.057273Z\",\n    \"isPreferred\" : false,\n    \"uri\" : \"https://web.example.mocklab.io/224559\",\n    \"providerType\" : \"PROVIDER_TYPE_UNSPECIFIED\"\n  } ],\n  \"nextPageToken\" : \"wke0xsqjuipdztxqa6cbg23c39qzb4yan4bv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c3b0511-ddaa-4be0-86f0-e43c43d71226",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.057494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessplaceactions.locations.placeActionLinks.list",
          "schema" : {
            "description" : "Response message for PlaceActions.ListPlaceActionLinks.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If there are more place action links than the requested page size, then this field is populated with a token to fetch the next page of results.",
                "type" : "string"
              },
              "placeActionLinks" : {
                "description" : "The returned list of place action links.",
                "items" : {
                  "$ref" : "#/components/schemas/PlaceActionLink"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "86bc568a-65e3-4f8d-972e-b19a07fe16b7",
    "name" : "Updates the specified place action link and returns it.",
    "request" : {
      "urlPath" : "/v1/Mrs.+Edwardo+Ruecker",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placeActionType\" : \"APPOINTMENT\",\n  \"isEditable\" : true,\n  \"createTime\" : \"2022-10-21T16:09:06.056223Z\",\n  \"name\" : \"Miss Diane Runte\",\n  \"updateTime\" : \"2022-10-01T17:39:06.056299Z\",\n  \"isPreferred\" : true,\n  \"uri\" : \"https://web.example.mocklab.io/869629\",\n  \"providerType\" : \"PROVIDER_TYPE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86bc568a-65e3-4f8d-972e-b19a07fe16b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.056515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessplaceactions.locations.placeActionLinks.patch",
          "schema" : {
            "description" : "Represents a place action link and its attributes.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time when the place action link was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "isEditable" : {
                "description" : "Output only. Indicates whether this link can be edited by the client.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "isPreferred" : {
                "description" : "Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.",
                "type" : "string"
              },
              "placeActionType" : {
                "description" : "Required. The type of place action that can be performed using this link.",
                "enum" : [ "PLACE_ACTION_TYPE_UNSPECIFIED", "APPOINTMENT", "ONLINE_APPOINTMENT", "DINING_RESERVATION", "FOOD_ORDERING", "FOOD_DELIVERY", "FOOD_TAKEOUT", "SHOP_ONLINE" ],
                "type" : "string"
              },
              "providerType" : {
                "description" : "Output only. Specifies the provider type.",
                "enum" : [ "PROVIDER_TYPE_UNSPECIFIED", "MERCHANT", "AGGREGATOR_3P" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The time when the place action link was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "uri" : {
                "description" : "Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6ac9cea3-a81b-43cc-8ca5-9f69c7879a35",
    "name" : "Gets the specified place action link.",
    "request" : {
      "urlPath" : "/v1/Numbers+Zemlak",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placeActionType\" : \"SHOP_ONLINE\",\n  \"isEditable\" : false,\n  \"createTime\" : \"2023-01-24T17:18:06.055758Z\",\n  \"name\" : \"Earleen Willms\",\n  \"updateTime\" : \"2022-06-28T17:31:06.055847Z\",\n  \"isPreferred\" : true,\n  \"uri\" : \"https://web.example.mocklab.io/961542\",\n  \"providerType\" : \"PROVIDER_TYPE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ac9cea3-a81b-43cc-8ca5-9f69c7879a35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.056159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessplaceactions.locations.placeActionLinks.get",
          "schema" : {
            "description" : "Represents a place action link and its attributes.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time when the place action link was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "isEditable" : {
                "description" : "Output only. Indicates whether this link can be edited by the client.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "isPreferred" : {
                "description" : "Optional. Whether this link is preferred by the merchant. Only one link can be marked as preferred per place action type at a location. If a future request marks a different link as preferred for the same place action type, then the current preferred link (if any exists) will lose its preference.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Optional. The resource name, in the format `locations/{location_id}/placeActionLinks/{place_action_link_id}`. The name field will only be considered in UpdatePlaceActionLink and DeletePlaceActionLink requests for updating and deleting links respectively. However, it will be ignored in CreatePlaceActionLink request, where `place_action_link_id` will be assigned by the server on successful creation of a new link and returned as part of the response.",
                "type" : "string"
              },
              "placeActionType" : {
                "description" : "Required. The type of place action that can be performed using this link.",
                "enum" : [ "PLACE_ACTION_TYPE_UNSPECIFIED", "APPOINTMENT", "ONLINE_APPOINTMENT", "DINING_RESERVATION", "FOOD_ORDERING", "FOOD_DELIVERY", "FOOD_TAKEOUT", "SHOP_ONLINE" ],
                "type" : "string"
              },
              "providerType" : {
                "description" : "Output only. Specifies the provider type.",
                "enum" : [ "PROVIDER_TYPE_UNSPECIFIED", "MERCHANT", "AGGREGATOR_3P" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The time when the place action link was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "uri" : {
                "description" : "Required. The link uri. The same uri can be reused for different action types across different locations. However, only one place action link is allowed for each unique combination of (uri, place action type, location).",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f28cf6c2-e8e4-49d1-a3ea-8df200b89a7e",
    "name" : "Deletes a place action link from the specified location.",
    "request" : {
      "urlPath" : "/v1/Vennie+Feest",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f28cf6c2-e8e4-49d1-a3ea-8df200b89a7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.055678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessplaceactions.locations.placeActionLinks.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73a79869-71d0-43ff-bc6f-2dc42172d31c",
    "name" : "Returns the list of available place action types for a location or country.",
    "request" : {
      "urlPath" : "/v1/placeActionTypeMetadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placeActionTypeMetadata\" : [ {\n    \"placeActionType\" : \"SHOP_ONLINE\",\n    \"displayName\" : \"Andre Grimes\"\n  }, {\n    \"placeActionType\" : \"ONLINE_APPOINTMENT\",\n    \"displayName\" : \"Phoebe Runte\"\n  }, {\n    \"placeActionType\" : \"ONLINE_APPOINTMENT\",\n    \"displayName\" : \"Michal Hackett\"\n  } ],\n  \"nextPageToken\" : \"f4glnq8rh4enm7jjn3nsrnpga9e1gsi1fo04wr7xdl01x727fiyd1abclu9u2ifgucvw39np9bxyjciiuix43nk8nhlat7735ang56iq9p88k\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73a79869-71d0-43ff-bc6f-2dc42172d31c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.055511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "mybusinessplaceactions.placeActionTypeMetadata.list",
          "schema" : {
            "description" : "Response message for PlaceActions.ListPlaceActionTypeMetadata.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If the number of action types exceeded the requested page size, this field will be populated with a token to fetch the next page on a subsequent call to `placeActionTypeMetadata.list`. If there are no more results, this field will not be present in the response.",
                "type" : "string"
              },
              "placeActionTypeMetadata" : {
                "description" : "A collection of metadata for the available place action types.",
                "items" : {
                  "$ref" : "#/components/schemas/PlaceActionTypeMetadata"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}