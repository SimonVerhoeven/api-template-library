{
  "mappings" : [ {
    "id" : "af397c91-ba28-3b09-be3d-270e1e4631e6",
    "name" : "Get a template of an Otoroshi service descriptor - 404",
    "request" : {
      "urlPath" : "/new/service",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "af397c91-ba28-3b09-be3d-270e1e4631e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateService"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a8251f24-a106-3cd5-9547-d2d1b5df6378",
    "name" : "Get a template of an Otoroshi service descriptor - 401",
    "request" : {
      "urlPath" : "/new/service",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a8251f24-a106-3cd5-9547-d2d1b5df6378",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateService"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5395ef62-5b83-35d6-8768-a20faee47696",
    "name" : "Get a template of an Otoroshi service descriptor - 400",
    "request" : {
      "urlPath" : "/new/service",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5395ef62-5b83-35d6-8768-a20faee47696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateService"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "8a38f912-ea55-3ac2-8101-2bbca5656b9e",
    "name" : "Get a template of an Otoroshi service descriptor (application/json)",
    "request" : {
      "urlPath" : "/new/service",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"source\" : {\n      \"name\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"strategy\" : {\n      \"verificationSettings\" : {\n        \"mappingSettings\" : {\n          \"values\" : {\n            \"key\" : \"value\"\n          },\n          \"map\" : {\n            \"key\" : \"value\"\n          },\n          \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n        },\n        \"fields\" : {\n          \"key\" : \"value\"\n        }\n      },\n      \"type\" : \"a string value\"\n    },\n    \"strict\" : true,\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a38f912-ea55-3ac2-8101-2bbca5656b9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateService",
          "schema" : {
            "description" : "An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism",
            "properties" : {
              "Canary" : {
                "$ref" : "#/components/schemas/Canary"
              },
              "additionalHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be added to each client request. Useful to add authentication",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "api" : {
                "$ref" : "#/components/schemas/ExposedApi"
              },
              "authConfigRef" : {
                "description" : "A reference to a global auth module config",
                "example" : "a string value",
                "type" : "string"
              },
              "buildMode" : {
                "description" : "Display a construction page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "clientConfig" : {
                "$ref" : "#/components/schemas/ClientConfig"
              },
              "clientValidatorRef" : {
                "description" : "A reference to validation authority",
                "example" : "a string value",
                "type" : "string"
              },
              "cors" : {
                "$ref" : "#/components/schemas/CorsSettings"
              },
              "domain" : {
                "description" : "The domain on which the service is available.",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
                "example" : true,
                "type" : "boolean"
              },
              "enforceSecureCommunication" : {
                "description" : "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
                "example" : true,
                "type" : "boolean"
              },
              "env" : {
                "description" : "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
                "example" : "a string value",
                "type" : "string"
              },
              "forceHttps" : {
                "description" : "Will force redirection to https:// if not present",
                "example" : true,
                "type" : "boolean"
              },
              "groups" : {
                "description" : "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "gzip" : {
                "$ref" : "#/components/schemas/Gzip"
              },
              "headersVerification" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be verified after routing.",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "healthCheck" : {
                "$ref" : "#/components/schemas/HealthCheck"
              },
              "id" : {
                "description" : "A unique random string to identify your service",
                "example" : "110e8400-e29b-11d4-a716-446655440000",
                "format" : "uuid",
                "type" : "string"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "jwtVerifier" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/LocalJwtVerifier"
                }, {
                  "$ref" : "#/components/schemas/RefJwtVerifier"
                } ]
              },
              "localHost" : {
                "description" : "The host used localy, mainly localhost:xxxx",
                "example" : "a string value",
                "type" : "string"
              },
              "localScheme" : {
                "description" : "The scheme used localy, mainly http",
                "example" : "a string value",
                "type" : "string"
              },
              "maintenanceMode" : {
                "description" : "Display a maintainance page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "matchingHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "matchingRoot" : {
                "description" : "The root path on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Just a bunch of random properties",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "The name of your service. Only for debug and human readability purposes",
                "example" : "a string value",
                "type" : "string"
              },
              "overrideHost" : {
                "description" : "Host header will be overriden with Host of the target",
                "example" : true,
                "type" : "boolean"
              },
              "privateApp" : {
                "description" : "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
                "example" : true,
                "type" : "boolean"
              },
              "privatePatterns" : {
                "description" : "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "publicPatterns" : {
                "description" : "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "redirectToLocal" : {
                "description" : "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
                "example" : true,
                "type" : "boolean"
              },
              "redirection" : {
                "$ref" : "#/components/schemas/RedirectionSettings"
              },
              "root" : {
                "description" : "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
                "example" : "a string value",
                "type" : "string"
              },
              "secComExcludedPatterns" : {
                "description" : "URI patterns excluded from secured communications",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "secComSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "sendOtoroshiHeadersBack" : {
                "description" : "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
                "example" : true,
                "type" : "boolean"
              },
              "statsdConfig" : {
                "$ref" : "#/components/schemas/StatsdConfig"
              },
              "subdomain" : {
                "description" : "The subdomain on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "targets" : {
                "description" : "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
                "items" : {
                  "$ref" : "#/components/schemas/Target"
                },
                "type" : "array"
              },
              "transformerRef" : {
                "description" : "A reference to a request transformer",
                "example" : "a string value",
                "type" : "string"
              },
              "userFacing" : {
                "description" : "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "xForwardedHeaders" : {
                "description" : "Send X-Forwarded-* headers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "id", "groups", "name", "env", "domain", "subdomain", "targets", "root", "enabled", "privateApp", "forceHttps", "maintenanceMode", "buildMode", "enforceSecureCommunication" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "9ef4770f-2747-3ce1-bdae-60076c37be5b",
    "name" : "Get a template of an Otoroshi service group - 404",
    "request" : {
      "urlPath" : "/new/group",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9ef4770f-2747-3ce1-bdae-60076c37be5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateServiceGroup"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "84ae0956-bb73-3cd2-895c-2af74bc4e8c3",
    "name" : "Get a template of an Otoroshi service group - 401",
    "request" : {
      "urlPath" : "/new/group",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "84ae0956-bb73-3cd2-895c-2af74bc4e8c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateServiceGroup"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "30e5ddc0-0e5c-31e2-aec6-4359227915ce",
    "name" : "Get a template of an Otoroshi service group - 400",
    "request" : {
      "urlPath" : "/new/group",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "30e5ddc0-0e5c-31e2-aec6-4359227915ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateServiceGroup"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "74c42c43-bfa1-3e80-a6ea-f0beef4de39d",
    "name" : "Get a template of an Otoroshi service group (application/json)",
    "request" : {
      "urlPath" : "/new/group",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74c42c43-bfa1-3e80-a6ea-f0beef4de39d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateServiceGroup",
          "schema" : {
            "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
            "properties" : {
              "description" : {
                "description" : "The descriptoin of the group",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the group",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "84ca6dd9-b358-3af0-9868-d64d8a5f8c58",
    "name" : "Get a template of an Otoroshi Api Key - 404",
    "request" : {
      "urlPath" : "/new/apikey",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "84ca6dd9-b358-3af0-9868-d64d8a5f8c58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateApiKey"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "19738a7e-b812-309a-94bb-d70901809976",
    "name" : "Get a template of an Otoroshi Api Key - 401",
    "request" : {
      "urlPath" : "/new/apikey",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "19738a7e-b812-309a-94bb-d70901809976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateApiKey"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "98f552bc-8ad4-3f59-88dc-faa0ea3d2092",
    "name" : "Get a template of an Otoroshi Api Key - 400",
    "request" : {
      "urlPath" : "/new/apikey",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "98f552bc-8ad4-3f59-88dc-faa0ea3d2092",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateApiKey"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "85d027a2-eaa2-3dd7-b1d1-e5853a7c4a58",
    "name" : "Get a template of an Otoroshi Api Key (application/json)",
    "request" : {
      "urlPath" : "/new/apikey",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85d027a2-eaa2-3dd7-b1d1-e5853a7c4a58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "initiateApiKey",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7db692e3-b5a1-3e25-b594-93f3f17a7a25",
    "name" : "Get all services for an environment - 404",
    "request" : {
      "urlPath" : "/lines/i3j9ha5e79bnk1hkpvgyi62qezsgt7m838m0ggxhwbc520uiq8faa0gm8pitxhxlkrrla3v84qn5g299635ti9mwm1ch9f1a4i8fuotu3wskxj2kuzebmve8mb9q72tttnyajndgk/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7db692e3-b5a1-3e25-b594-93f3f17a7a25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "servicesForALine"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "2f9d5fb3-b88d-3ea2-8224-9ced2c21978c",
    "name" : "Get all services for an environment - 401",
    "request" : {
      "urlPath" : "/lines/0r9cuj9c3pibckhwlp9vs47am0tjt3ilts1szyzi464hpoyv4jdynruoox7a8etli4hux6t5qbe50bn7cep4l2bkys2trai1bwfxzpyg9x0085lrb3n1xhaqz58khf2chz1maxj2djrd1i4h4u6i38fbz5053p8yypnhdk85m5ytc2k0ntn7drx5e7ja5oij3vvtxslc/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2f9d5fb3-b88d-3ea2-8224-9ced2c21978c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "servicesForALine"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "8c5571c4-faac-3b28-861a-ec0ea2b0a471",
    "name" : "Get all services for an environment - 400",
    "request" : {
      "urlPath" : "/lines/ytjh489q9rf4mk7o013iedusfk4dzy63bo93ocva79gi48etbiozktdrz9doatau47tnwrtpe7sqvbp474d7ky64mlbr28xlgqxktfilbdul3wh09bwumf1fdjkbk9nzp80fydvdk8nbdlux9s0i43yhqnj7vns0u9a041c1vz5n15vsgf6xbs8l2qxtdhflb/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8c5571c4-faac-3b28-861a-ec0ea2b0a471",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "servicesForALine"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "2c875b0f-d705-3fdd-b5da-a1b9bcf695b2",
    "name" : "Get all services for an environment (application/json)",
    "request" : {
      "urlPath" : "/lines/vys1eoj5ahzv8pks80naw2d2a9jrvs2ef8qi9ih9zs5oe7irub08hhdtblwm23ppbkzytvxbln5pwdcl6ar972ms3rf9a5/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"source\" : {\n      \"name\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"strategy\" : {\n      \"verificationSettings\" : {\n        \"mappingSettings\" : {\n          \"values\" : {\n            \"key\" : \"value\"\n          },\n          \"map\" : {\n            \"key\" : \"value\"\n          },\n          \"remove\" : [ \"a string value\", \"a string value\", \"a string value\" ]\n        },\n        \"fields\" : {\n          \"key\" : \"value\"\n        }\n      },\n      \"type\" : \"a string value\"\n    },\n    \"strict\" : true,\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c875b0f-d705-3fdd-b5da-a1b9bcf695b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "servicesForALine",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Service"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "187c47bf-1ee6-325d-ae90-77e81e703917",
    "name" : "Get all environments - 404",
    "request" : {
      "urlPath" : "/lines",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "187c47bf-1ee6-325d-ae90-77e81e703917",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allLines"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "6eb181e1-2c6e-39a8-870a-6b58f3d184d3",
    "name" : "Get all environments - 401",
    "request" : {
      "urlPath" : "/lines",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6eb181e1-2c6e-39a8-870a-6b58f3d184d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allLines"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "b6a7d693-8816-3c36-b793-847d26036550",
    "name" : "Get all environments - 400",
    "request" : {
      "urlPath" : "/lines",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b6a7d693-8816-3c36-b793-847d26036550",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allLines"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "0225d3b6-b0bf-30f5-aa13-fbd6fe8a8189",
    "name" : "Get all environments (application/json)",
    "request" : {
      "urlPath" : "/lines",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"prod\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0225d3b6-b0bf-30f5-aa13-fbd6fe8a8189",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allLines",
          "schema" : {
            "description" : "The name of the environment for service descriptors",
            "example" : "prod",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "e71e2591-dc8f-334f-91c0-67d32034b751",
    "name" : "Return current Otoroshi health - 404",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e71e2591-dc8f-334f-91c0-67d32034b751",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "health"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "99ca58bd-9dbd-321b-aa00-c0c7f53a889b",
    "name" : "Return current Otoroshi health - 400",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "99ca58bd-9dbd-321b-aa00-c0c7f53a889b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "health"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "03f62637-36af-3e8c-9e5b-83ccb83ac227",
    "name" : "Return current Otoroshi health (application/json)",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"otoroshi\" : \"unhealthy\",\n  \"datastore\" : \"unhealthy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03f62637-36af-3e8c-9e5b-83ccb83ac227",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "health",
          "schema" : {
            "description" : "The structure that represent current Otoroshi health",
            "properties" : {
              "datastore" : {
                "enum" : [ "healthy", "unhealthy", "unreachable" ],
                "type" : "string"
              },
              "otoroshi" : {
                "enum" : [ "healthy", "unhealthy", "down" ],
                "type" : "string"
              }
            },
            "required" : [ "label", "otoroshi", "datastore" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "6c827846-ffd9-3472-8913-ee2aa0bb2654",
    "name" : "Update one global JWT verifiers - 404",
    "request" : {
      "urlPath" : "/api/verifiers/5661",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "6c827846-ffd9-3472-8913-ee2aa0bb2654",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "0859b5a2-4a54-327b-a69c-858cbeed2000",
    "name" : "Update one global JWT verifiers - 401",
    "request" : {
      "urlPath" : "/api/verifiers/79g5",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0859b5a2-4a54-327b-a69c-858cbeed2000",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "9de80c44-db31-398c-ad90-37a6884f5c33",
    "name" : "Update one global JWT verifiers - 400",
    "request" : {
      "urlPath" : "/api/verifiers/3rmx",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9de80c44-db31-398c-ad90-37a6884f5c33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "7774f1e4-689a-3125-aa9e-49dbbdd48356",
    "name" : "Update one global JWT verifiers (application/json)",
    "request" : {
      "urlPath" : "/api/verifiers/gkou",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"remove\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7774f1e4-689a-3125-aa9e-49dbbdd48356",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalJwtVerifier",
          "schema" : {
            "description" : "A JWT verifier used by multiple service descriptor",
            "properties" : {
              "algoSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "desc" : {
                "description" : "Verifier description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Is it enabled",
                "example" : true,
                "type" : "boolean"
              },
              "id" : {
                "description" : "Verifier id",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "Verifier name",
                "example" : "a string value",
                "type" : "string"
              },
              "source" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/InQueryParam"
                }, {
                  "$ref" : "#/components/schemas/InHeader"
                }, {
                  "$ref" : "#/components/schemas/InCookie"
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/PassThrough"
                }, {
                  "$ref" : "#/components/schemas/Sign"
                }, {
                  "$ref" : "#/components/schemas/Transform"
                } ]
              },
              "strict" : {
                "description" : "Does it fail if JWT not found",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "type", "id", "name", "desc", "enabled", "strict", "source", "algoSettings", "strategy" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "a5ea81b5-287a-3465-95f4-3e1a9bf05580",
    "name" : "Update one global JWT verifiers - 404",
    "request" : {
      "urlPath" : "/api/verifiers/edt2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a5ea81b5-287a-3465-95f4-3e1a9bf05580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "a5783870-1d25-398b-a943-4e98d68d35e8",
    "name" : "Update one global JWT verifiers - 401",
    "request" : {
      "urlPath" : "/api/verifiers/w0i1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a5783870-1d25-398b-a943-4e98d68d35e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "969c047d-7929-38c1-a7fc-c4187f47955b",
    "name" : "Update one global JWT verifiers - 400",
    "request" : {
      "urlPath" : "/api/verifiers/63k3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "969c047d-7929-38c1-a7fc-c4187f47955b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "c586a0dc-bf2c-370f-b56c-e9969a4d6999",
    "name" : "Update one global JWT verifiers (application/json)",
    "request" : {
      "urlPath" : "/api/verifiers/q988",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"algoSettings\" : {\n      \"size\" : 123123,\n      \"secret\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c586a0dc-bf2c-370f-b56c-e9969a4d6999",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalJwtVerifier",
          "schema" : {
            "description" : "A JWT verifier used by multiple service descriptor",
            "properties" : {
              "algoSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "desc" : {
                "description" : "Verifier description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Is it enabled",
                "example" : true,
                "type" : "boolean"
              },
              "id" : {
                "description" : "Verifier id",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "Verifier name",
                "example" : "a string value",
                "type" : "string"
              },
              "source" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/InQueryParam"
                }, {
                  "$ref" : "#/components/schemas/InHeader"
                }, {
                  "$ref" : "#/components/schemas/InCookie"
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/PassThrough"
                }, {
                  "$ref" : "#/components/schemas/Sign"
                }, {
                  "$ref" : "#/components/schemas/Transform"
                } ]
              },
              "strict" : {
                "description" : "Does it fail if JWT not found",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "type", "id", "name", "desc", "enabled", "strict", "source", "algoSettings", "strategy" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "c580966b-0701-3c80-8219-4b68d412d97a",
    "name" : "Get one global JWT verifiers - 404",
    "request" : {
      "urlPath" : "/api/verifiers/2670",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c580966b-0701-3c80-8219-4b68d412d97a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalJwtVerifiersById"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "4c56dc4d-2fa2-3d46-8620-1812ba438b44",
    "name" : "Get one global JWT verifiers - 401",
    "request" : {
      "urlPath" : "/api/verifiers/dp0l",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4c56dc4d-2fa2-3d46-8620-1812ba438b44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalJwtVerifiersById"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "38bcfe8b-982b-3e59-883f-c9957e6dd305",
    "name" : "Get one global JWT verifiers - 400",
    "request" : {
      "urlPath" : "/api/verifiers/6f26",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "38bcfe8b-982b-3e59-883f-c9957e6dd305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalJwtVerifiersById"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "672d06b8-6518-35a0-b58c-91ec0522b678",
    "name" : "Get one global JWT verifiers (application/json)",
    "request" : {
      "urlPath" : "/api/verifiers/dghv",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"algoSettings\" : {\n    \"size\" : 123123,\n    \"secret\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"transformSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"location\" : {\n        \"name\" : \"a string value\",\n        \"type\" : \"a string value\"\n      }\n    },\n    \"algoSettings\" : {\n      \"size\" : 123123,\n      \"secret\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "672d06b8-6518-35a0-b58c-91ec0522b678",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalJwtVerifiersById",
          "schema" : {
            "description" : "A JWT verifier used by multiple service descriptor",
            "properties" : {
              "algoSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "desc" : {
                "description" : "Verifier description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Is it enabled",
                "example" : true,
                "type" : "boolean"
              },
              "id" : {
                "description" : "Verifier id",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "Verifier name",
                "example" : "a string value",
                "type" : "string"
              },
              "source" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/InQueryParam"
                }, {
                  "$ref" : "#/components/schemas/InHeader"
                }, {
                  "$ref" : "#/components/schemas/InCookie"
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/PassThrough"
                }, {
                  "$ref" : "#/components/schemas/Sign"
                }, {
                  "$ref" : "#/components/schemas/Transform"
                } ]
              },
              "strict" : {
                "description" : "Does it fail if JWT not found",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "type", "id", "name", "desc", "enabled", "strict", "source", "algoSettings", "strategy" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "34f1cf10-476d-3e62-b690-d11aa00bf8b8",
    "name" : "Delete one global JWT verifiers - 404",
    "request" : {
      "urlPath" : "/api/verifiers/01j0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "34f1cf10-476d-3e62-b690-d11aa00bf8b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "01070e1d-ba72-3093-9e9b-edf43a399704",
    "name" : "Delete one global JWT verifiers - 401",
    "request" : {
      "urlPath" : "/api/verifiers/y380",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "01070e1d-ba72-3093-9e9b-edf43a399704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "832a4697-daf6-304b-8b24-4715fbdc31b1",
    "name" : "Delete one global JWT verifiers - 400",
    "request" : {
      "urlPath" : "/api/verifiers/cnod",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "832a4697-daf6-304b-8b24-4715fbdc31b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "2f007530-e9e5-3cba-ae14-f4df972487eb",
    "name" : "Delete one global JWT verifiers (application/json)",
    "request" : {
      "urlPath" : "/api/verifiers/nqqj",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f007530-e9e5-3cba-ae14-f4df972487eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalJwtVerifier",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "cde0d756-cae7-3ee2-a795-198bed0235cb",
    "name" : "Create one global JWT verifiers - 404",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "cde0d756-cae7-3ee2-a795-198bed0235cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "f2e8095f-e2f5-3632-b921-e20093c0ee8e",
    "name" : "Create one global JWT verifiers - 401",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f2e8095f-e2f5-3632-b921-e20093c0ee8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "697985be-878f-3ed4-99b0-1a917004589f",
    "name" : "Create one global JWT verifiers - 400",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "697985be-878f-3ed4-99b0-1a917004589f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalJwtVerifier"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "75d5846f-c589-3553-a8e9-f5f29078555e",
    "name" : "Create one global JWT verifiers (application/json)",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"remove\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"algoSettings\" : {\n      \"size\" : 123123,\n      \"secret\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75d5846f-c589-3553-a8e9-f5f29078555e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalJwtVerifier",
          "schema" : {
            "description" : "A JWT verifier used by multiple service descriptor",
            "properties" : {
              "algoSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "desc" : {
                "description" : "Verifier description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Is it enabled",
                "example" : true,
                "type" : "boolean"
              },
              "id" : {
                "description" : "Verifier id",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "Verifier name",
                "example" : "a string value",
                "type" : "string"
              },
              "source" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/InQueryParam"
                }, {
                  "$ref" : "#/components/schemas/InHeader"
                }, {
                  "$ref" : "#/components/schemas/InCookie"
                } ]
              },
              "strategy" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/PassThrough"
                }, {
                  "$ref" : "#/components/schemas/Sign"
                }, {
                  "$ref" : "#/components/schemas/Transform"
                } ]
              },
              "strict" : {
                "description" : "Does it fail if JWT not found",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "type", "id", "name", "desc", "enabled", "strict", "source", "algoSettings", "strategy" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "5ea1c94e-c984-3262-a72f-1c8adf0d4214",
    "name" : "Get all global JWT verifiers - 404",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "5ea1c94e-c984-3262-a72f-1c8adf0d4214",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalJwtVerifiers"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "4637cf7e-a306-3163-989d-985c4c8017fb",
    "name" : "Get all global JWT verifiers - 401",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4637cf7e-a306-3163-989d-985c4c8017fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalJwtVerifiers"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "4fd397d7-9d4d-31f4-8ad4-d749273cb4b1",
    "name" : "Get all global JWT verifiers - 400",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4fd397d7-9d4d-31f4-8ad4-d749273cb4b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalJwtVerifiers"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "127a4cb5-7082-3e6c-af89-00092b6dbbcc",
    "name" : "Get all global JWT verifiers (application/json)",
    "request" : {
      "urlPath" : "/api/verifiers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"algoSettings\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}, {\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}, {\n  \"algoSettings\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"remove\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}, {\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"remove\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}, {\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"remove\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"transformSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"location\" : {\n        \"name\" : \"a string value\",\n        \"type\" : \"a string value\",\n        \"remove\" : \"a string value\"\n      }\n    },\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}, {\n  \"algoSettings\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"remove\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n}, {\n  \"algoSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"source\" : {\n    \"name\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"strategy\" : {\n    \"verificationSettings\" : {\n      \"mappingSettings\" : {\n        \"values\" : {\n          \"key\" : \"value\"\n        },\n        \"map\" : {\n          \"key\" : \"value\"\n        },\n        \"remove\" : [ \"a string value\", \"a string value\", \"a string value\" ]\n      },\n      \"fields\" : {\n        \"key\" : \"value\"\n      }\n    },\n    \"type\" : \"a string value\"\n  },\n  \"strict\" : true,\n  \"enabled\" : true,\n  \"desc\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "127a4cb5-7082-3e6c-af89-00092b6dbbcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalJwtVerifiers",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/GlobalJwtVerifier"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "05d9c936-7977-3961-aa83-b97509822bbf",
    "name" : "Get all current Snow Monkey ourages - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "05d9c936-7977-3961-aa83-b97509822bbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyOutages"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "ee5ea989-55cc-341d-ae08-085bf0744ca8",
    "name" : "Get all current Snow Monkey ourages - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ee5ea989-55cc-341d-ae08-085bf0744ca8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyOutages"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "c7fa43fe-67c0-3011-892d-6aeaa3b76218",
    "name" : "Get all current Snow Monkey ourages - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c7fa43fe-67c0-3011-892d-6aeaa3b76218",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyOutages"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "23944b01-edc1-3749-947e-7152c8da7058",
    "name" : "Get all current Snow Monkey ourages (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n}, {\n  \"duration\" : 123123,\n  \"descriptorId\" : \"a string value\",\n  \"until\" : \"17:32:28.000\",\n  \"descriptorName\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23944b01-edc1-3749-947e-7152c8da7058",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyOutages",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Outage"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "3e57f76d-2110-3d35-86f8-355b2d49ae3a",
    "name" : "Reset Snow Monkey Outages for the day - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3e57f76d-2110-3d35-86f8-355b2d49ae3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetSnowMonkey"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "c2afbfa6-cdc0-3f75-bc29-3e9ece7d1421",
    "name" : "Reset Snow Monkey Outages for the day - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c2afbfa6-cdc0-3f75-bc29-3e9ece7d1421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetSnowMonkey"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "3fef70de-7cd5-3e72-be69-494a544a2b77",
    "name" : "Reset Snow Monkey Outages for the day - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3fef70de-7cd5-3e72-be69-494a544a2b77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetSnowMonkey"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "98557f4d-c62d-3b5f-b532-d62afdc45113",
    "name" : "Reset Snow Monkey Outages for the day (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/outages",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98557f4d-c62d-3b5f-b532-d62afdc45113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetSnowMonkey",
          "schema" : {
            "properties" : {
              "done" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "done" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "170d4556-7067-3caa-80ae-421bef09bcfd",
    "name" : "Update current Snow Monkey config - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "170d4556-7067-3caa-80ae-421bef09bcfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateSnowMonkey"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "ebd713bc-a54f-35c2-8a4c-98bc73d27160",
    "name" : "Update current Snow Monkey config - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ebd713bc-a54f-35c2-8a4c-98bc73d27160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateSnowMonkey"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "6b34d93b-bf94-3117-a67c-04f30086be38",
    "name" : "Update current Snow Monkey config - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6b34d93b-bf94-3117-a67c-04f30086be38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateSnowMonkey"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "ed43db5c-3abc-3c55-8415-e0ee6e0f9bc2",
    "name" : "Update current Snow Monkey config (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dryRun\" : true,\n  \"targetGroups\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n  \"includeUserFacingDescriptors\" : true,\n  \"outageDurationTo\" : 123123,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"outageDurationFrom\" : 123123,\n  \"startTime\" : \"17:32:28.000\",\n  \"stopTime\" : \"17:32:28.000\",\n  \"timesPerDay\" : 123123,\n  \"outageStrategy\" : \"OneServicePerGroup\",\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed43db5c-3abc-3c55-8415-e0ee6e0f9bc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateSnowMonkey",
          "schema" : {
            "description" : "Configuration for the faults that can be injected in requests. The name Snow Monkey is an hommage to Netflix's Chaos Monkey 😉",
            "properties" : {
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "dryRun" : {
                "description" : "Whether or not outages will actualy impact requests",
                "example" : true,
                "type" : "boolean"
              },
              "enabled" : {
                "description" : "Whether or not this config is enabled",
                "example" : true,
                "type" : "boolean"
              },
              "includeUserFacingDescriptors" : {
                "description" : "Whether or not user facing apps. will be impacted by Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "outageDurationFrom" : {
                "description" : "Start of outage duration range",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "outageDurationTo" : {
                "description" : "End of outage duration range",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "outageStrategy" : {
                "$ref" : "#/components/schemas/OutageStrategy"
              },
              "startTime" : {
                "description" : "Start time of Snow Monkey each day",
                "example" : "17:32:28.000",
                "format" : "time",
                "type" : "string"
              },
              "stopTime" : {
                "description" : "Stop time of Snow Monkey each day",
                "example" : "17:32:28.000",
                "format" : "time",
                "type" : "string"
              },
              "targetGroups" : {
                "description" : "Groups impacted by Snow Monkey. If empty, all groups will be impacted",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timesPerDay" : {
                "description" : "Number of time per day each service will be outage",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              }
            },
            "required" : [ "enabled", "outageStrategy", "includeUserFacingDescriptors", "dryRun", "timesPerDay", "startTime", "stopTime", "outageDurationFrom", "outageDurationTo", "targetGroups", "chaosConfig" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "f872a955-dc2e-3366-a567-94c1937ed646",
    "name" : "Update current Snow Monkey config - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "f872a955-dc2e-3366-a567-94c1937ed646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchSnowMonkey"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "889a5926-f333-3743-a3cc-e5177ac85e5a",
    "name" : "Update current Snow Monkey config - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "889a5926-f333-3743-a3cc-e5177ac85e5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchSnowMonkey"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "19f10406-a3f7-37c6-b984-35c6ac3117ab",
    "name" : "Update current Snow Monkey config - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "19f10406-a3f7-37c6-b984-35c6ac3117ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchSnowMonkey"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "e68722f3-da2e-3bc8-b065-d5af3b7f34c6",
    "name" : "Update current Snow Monkey config (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dryRun\" : true,\n  \"targetGroups\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"includeUserFacingDescriptors\" : true,\n  \"outageDurationTo\" : 123123,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"outageDurationFrom\" : 123123,\n  \"startTime\" : \"17:32:28.000\",\n  \"stopTime\" : \"17:32:28.000\",\n  \"timesPerDay\" : 123123,\n  \"outageStrategy\" : \"OneServicePerGroup\",\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e68722f3-da2e-3bc8-b065-d5af3b7f34c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchSnowMonkey",
          "schema" : {
            "description" : "Configuration for the faults that can be injected in requests. The name Snow Monkey is an hommage to Netflix's Chaos Monkey 😉",
            "properties" : {
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "dryRun" : {
                "description" : "Whether or not outages will actualy impact requests",
                "example" : true,
                "type" : "boolean"
              },
              "enabled" : {
                "description" : "Whether or not this config is enabled",
                "example" : true,
                "type" : "boolean"
              },
              "includeUserFacingDescriptors" : {
                "description" : "Whether or not user facing apps. will be impacted by Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "outageDurationFrom" : {
                "description" : "Start of outage duration range",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "outageDurationTo" : {
                "description" : "End of outage duration range",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "outageStrategy" : {
                "$ref" : "#/components/schemas/OutageStrategy"
              },
              "startTime" : {
                "description" : "Start time of Snow Monkey each day",
                "example" : "17:32:28.000",
                "format" : "time",
                "type" : "string"
              },
              "stopTime" : {
                "description" : "Stop time of Snow Monkey each day",
                "example" : "17:32:28.000",
                "format" : "time",
                "type" : "string"
              },
              "targetGroups" : {
                "description" : "Groups impacted by Snow Monkey. If empty, all groups will be impacted",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timesPerDay" : {
                "description" : "Number of time per day each service will be outage",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              }
            },
            "required" : [ "enabled", "outageStrategy", "includeUserFacingDescriptors", "dryRun", "timesPerDay", "startTime", "stopTime", "outageDurationFrom", "outageDurationTo", "targetGroups", "chaosConfig" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "ee00d2a0-300e-3705-9cce-e30bebc3254e",
    "name" : "Get current Snow Monkey config - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ee00d2a0-300e-3705-9cce-e30bebc3254e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyConfig"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "25e227a0-4371-3c47-8b7e-abd2c145314c",
    "name" : "Get current Snow Monkey config - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "25e227a0-4371-3c47-8b7e-abd2c145314c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyConfig"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "661d319d-e67d-3ff7-bc03-00df2b9a582b",
    "name" : "Get current Snow Monkey config - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "661d319d-e67d-3ff7-bc03-00df2b9a582b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyConfig"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "62d5434c-0a0e-3ea1-98b4-7ac75f716f2f",
    "name" : "Get current Snow Monkey config (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/config",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dryRun\" : true,\n  \"targetGroups\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n  \"includeUserFacingDescriptors\" : true,\n  \"outageDurationTo\" : 123123,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"outageDurationFrom\" : 123123,\n  \"startTime\" : \"17:32:28.000\",\n  \"stopTime\" : \"17:32:28.000\",\n  \"timesPerDay\" : 123123,\n  \"outageStrategy\" : \"OneServicePerGroup\",\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62d5434c-0a0e-3ea1-98b4-7ac75f716f2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSnowMonkeyConfig",
          "schema" : {
            "description" : "Configuration for the faults that can be injected in requests. The name Snow Monkey is an hommage to Netflix's Chaos Monkey 😉",
            "properties" : {
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "dryRun" : {
                "description" : "Whether or not outages will actualy impact requests",
                "example" : true,
                "type" : "boolean"
              },
              "enabled" : {
                "description" : "Whether or not this config is enabled",
                "example" : true,
                "type" : "boolean"
              },
              "includeUserFacingDescriptors" : {
                "description" : "Whether or not user facing apps. will be impacted by Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "outageDurationFrom" : {
                "description" : "Start of outage duration range",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "outageDurationTo" : {
                "description" : "End of outage duration range",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "outageStrategy" : {
                "$ref" : "#/components/schemas/OutageStrategy"
              },
              "startTime" : {
                "description" : "Start time of Snow Monkey each day",
                "example" : "17:32:28.000",
                "format" : "time",
                "type" : "string"
              },
              "stopTime" : {
                "description" : "Stop time of Snow Monkey each day",
                "example" : "17:32:28.000",
                "format" : "time",
                "type" : "string"
              },
              "targetGroups" : {
                "description" : "Groups impacted by Snow Monkey. If empty, all groups will be impacted",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "timesPerDay" : {
                "description" : "Number of time per day each service will be outage",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              }
            },
            "required" : [ "enabled", "outageStrategy", "includeUserFacingDescriptors", "dryRun", "timesPerDay", "startTime", "stopTime", "outageDurationFrom", "outageDurationTo", "targetGroups", "chaosConfig" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "a6df71f9-7157-380e-b4e5-4fdd40768af7",
    "name" : "Stop the Snow Monkey - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/_stop",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a6df71f9-7157-380e-b4e5-4fdd40768af7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "stopSnowMonkey"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "7450415c-0882-3039-8d9a-e359a73d043a",
    "name" : "Stop the Snow Monkey - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/_stop",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7450415c-0882-3039-8d9a-e359a73d043a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "stopSnowMonkey"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "d3283d94-f351-3277-aff1-d81851e16168",
    "name" : "Stop the Snow Monkey - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/_stop",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d3283d94-f351-3277-aff1-d81851e16168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "stopSnowMonkey"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "294991dd-dcf5-35b5-a9a5-4b25f7489e6d",
    "name" : "Stop the Snow Monkey (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/_stop",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "294991dd-dcf5-35b5-a9a5-4b25f7489e6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "stopSnowMonkey",
          "schema" : {
            "properties" : {
              "done" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "done" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "c0d2c116-e4d8-311e-81b5-a453a5dc0d42",
    "name" : "Start the Snow Monkey - 404",
    "request" : {
      "urlPath" : "/api/snowmonkey/_start",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c0d2c116-e4d8-311e-81b5-a453a5dc0d42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "startSnowMonkey"
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "6234fb93-9d13-3d61-bb48-8913132c0018",
    "name" : "Start the Snow Monkey - 401",
    "request" : {
      "urlPath" : "/api/snowmonkey/_start",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6234fb93-9d13-3d61-bb48-8913132c0018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "startSnowMonkey"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "25a7ca8b-527e-39aa-a361-a6cda5a0a2cf",
    "name" : "Start the Snow Monkey - 400",
    "request" : {
      "urlPath" : "/api/snowmonkey/_start",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "25a7ca8b-527e-39aa-a361-a6cda5a0a2cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "startSnowMonkey"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "7cb48ff9-1ed2-3966-87a8-c84e0f18ab22",
    "name" : "Start the Snow Monkey (application/json)",
    "request" : {
      "urlPath" : "/api/snowmonkey/_start",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cb48ff9-1ed2-3966-87a8-c84e0f18ab22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "startSnowMonkey",
          "schema" : {
            "properties" : {
              "done" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "done" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "cbd433c4-7e7f-30c0-875f-bbd5cba98225",
    "name" : "Update an error template to a service descriptor - 404",
    "request" : {
      "urlPath" : "/api/services/8yr4/template",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "cbd433c4-7e7f-30c0-875f-bbd5cba98225",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTemplate"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "e2b32998-678e-35dd-9709-3a008821715a",
    "name" : "Update an error template to a service descriptor - 401",
    "request" : {
      "urlPath" : "/api/services/zfv2/template",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e2b32998-678e-35dd-9709-3a008821715a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTemplate"
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "c6896225-a497-3272-956e-4f165b538269",
    "name" : "Update an error template to a service descriptor - 400",
    "request" : {
      "urlPath" : "/api/services/2h73/template",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c6896225-a497-3272-956e-4f165b538269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTemplate"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "6d083176-4d66-3857-9811-184872ba9cfe",
    "name" : "Update an error template to a service descriptor (application/json)",
    "request" : {
      "urlPath" : "/api/services/6wzr/template",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"templateMaintenance\" : \"a string value\",\n  \"templateBuild\" : \"a string value\",\n  \"messages\" : {\n    \"key\" : \"value\"\n  },\n  \"template50x\" : \"a string value\",\n  \"template40x\" : \"a string value\",\n  \"serviceId\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d083176-4d66-3857-9811-184872ba9cfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTemplate",
          "schema" : {
            "description" : "Error templates for a service descriptor",
            "properties" : {
              "messages" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map for custom messages",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "serviceId" : {
                "description" : "The Id of the service for which the error template is enabled",
                "example" : "a string value",
                "type" : "string"
              },
              "template40x" : {
                "description" : "The html template for 40x errors",
                "example" : "a string value",
                "type" : "string"
              },
              "template50x" : {
                "description" : "The html template for 50x errors",
                "example" : "a string value",
                "type" : "string"
              },
              "templateBuild" : {
                "description" : "The html template for build page",
                "example" : "a string value",
                "type" : "string"
              },
              "templateMaintenance" : {
                "description" : "The html template for maintenance page",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "serviceId", "template40x", "template50x", "templateBuild", "templateMaintenance", "messages" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "b1d9d49d-ca6b-3891-bb14-fbff875b3fde",
    "name" : "Create a service descriptor error template - 404",
    "request" : {
      "urlPath" : "/api/services/s5yq/template",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b1d9d49d-ca6b-3891-bb14-fbff875b3fde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServiceTemplate"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "c1465a5f-c747-34e8-9584-1b01150d1da0",
    "name" : "Create a service descriptor error template - 401",
    "request" : {
      "urlPath" : "/api/services/abey/template",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c1465a5f-c747-34e8-9584-1b01150d1da0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServiceTemplate"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "95701a86-7856-3e94-9f55-fedb4f86dbca",
    "name" : "Create a service descriptor error template - 400",
    "request" : {
      "urlPath" : "/api/services/p00k/template",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "95701a86-7856-3e94-9f55-fedb4f86dbca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServiceTemplate"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "77412d97-51e7-3c10-b676-36e228cf6bb6",
    "name" : "Create a service descriptor error template (application/json)",
    "request" : {
      "urlPath" : "/api/services/1962/template",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"templateMaintenance\" : \"a string value\",\n  \"templateBuild\" : \"a string value\",\n  \"messages\" : {\n    \"key\" : \"value\"\n  },\n  \"template50x\" : \"a string value\",\n  \"template40x\" : \"a string value\",\n  \"serviceId\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77412d97-51e7-3c10-b676-36e228cf6bb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServiceTemplate",
          "schema" : {
            "description" : "Error templates for a service descriptor",
            "properties" : {
              "messages" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map for custom messages",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "serviceId" : {
                "description" : "The Id of the service for which the error template is enabled",
                "example" : "a string value",
                "type" : "string"
              },
              "template40x" : {
                "description" : "The html template for 40x errors",
                "example" : "a string value",
                "type" : "string"
              },
              "template50x" : {
                "description" : "The html template for 50x errors",
                "example" : "a string value",
                "type" : "string"
              },
              "templateBuild" : {
                "description" : "The html template for build page",
                "example" : "a string value",
                "type" : "string"
              },
              "templateMaintenance" : {
                "description" : "The html template for maintenance page",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "serviceId", "template40x", "template50x", "templateBuild", "templateMaintenance", "messages" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "dfd6c083-c4aa-307c-b223-5a8251bf753c",
    "name" : "Get a service descriptor error template - 404",
    "request" : {
      "urlPath" : "/api/services/7r79/template",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "dfd6c083-c4aa-307c-b223-5a8251bf753c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTemplate"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "e243a447-1c26-37de-8c13-43fa10d246b0",
    "name" : "Get a service descriptor error template - 401",
    "request" : {
      "urlPath" : "/api/services/fb0o/template",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "e243a447-1c26-37de-8c13-43fa10d246b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTemplate"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "e9cb4103-f09e-3599-9ea2-fd92c05ff2d3",
    "name" : "Get a service descriptor error template - 400",
    "request" : {
      "urlPath" : "/api/services/4y2a/template",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e9cb4103-f09e-3599-9ea2-fd92c05ff2d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTemplate"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "ddc7b341-c771-3b27-9e4c-3bb4f56d5f95",
    "name" : "Get a service descriptor error template (application/json)",
    "request" : {
      "urlPath" : "/api/services/5yv9/template",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"templateMaintenance\" : \"a string value\",\n  \"templateBuild\" : \"a string value\",\n  \"messages\" : {\n    \"key\" : \"value\"\n  },\n  \"template50x\" : \"a string value\",\n  \"template40x\" : \"a string value\",\n  \"serviceId\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddc7b341-c771-3b27-9e4c-3bb4f56d5f95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTemplate",
          "schema" : {
            "description" : "Error templates for a service descriptor",
            "properties" : {
              "messages" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Map for custom messages",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "serviceId" : {
                "description" : "The Id of the service for which the error template is enabled",
                "example" : "a string value",
                "type" : "string"
              },
              "template40x" : {
                "description" : "The html template for 40x errors",
                "example" : "a string value",
                "type" : "string"
              },
              "template50x" : {
                "description" : "The html template for 50x errors",
                "example" : "a string value",
                "type" : "string"
              },
              "templateBuild" : {
                "description" : "The html template for build page",
                "example" : "a string value",
                "type" : "string"
              },
              "templateMaintenance" : {
                "description" : "The html template for maintenance page",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "serviceId", "template40x", "template50x", "templateBuild", "templateMaintenance", "messages" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "a1fee29f-c6bc-38ca-a879-f70db7e8c7c5",
    "name" : "Delete a service descriptor error template - 404",
    "request" : {
      "urlPath" : "/api/services/9w5g/template",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a1fee29f-c6bc-38ca-a879-f70db7e8c7c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServiceTemplate"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "c96275fb-5214-3020-97e4-84b09f24d3dd",
    "name" : "Delete a service descriptor error template - 401",
    "request" : {
      "urlPath" : "/api/services/y64i/template",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c96275fb-5214-3020-97e4-84b09f24d3dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServiceTemplate"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "4efd9ee8-24fd-32b7-86f2-039c9f88de53",
    "name" : "Delete a service descriptor error template - 400",
    "request" : {
      "urlPath" : "/api/services/jj49/template",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4efd9ee8-24fd-32b7-86f2-039c9f88de53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServiceTemplate"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "cf2a6795-b537-35de-afb9-8e71f78ea7ee",
    "name" : "Delete a service descriptor error template (application/json)",
    "request" : {
      "urlPath" : "/api/services/jcdz/template",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf2a6795-b537-35de-afb9-8e71f78ea7ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServiceTemplate",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "7aaa23d5-d26d-3fa5-b25f-85af2955cb9e",
    "name" : "Add a target to a service descriptor - 404",
    "request" : {
      "urlPath" : "/api/services/092u/targets",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7aaa23d5-d26d-3fa5-b25f-85af2955cb9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceAddTarget"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "61a2c607-7004-3e95-be18-02dd563d6794",
    "name" : "Add a target to a service descriptor - 401",
    "request" : {
      "urlPath" : "/api/services/mdj1/targets",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "61a2c607-7004-3e95-be18-02dd563d6794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceAddTarget"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "adbad13e-1c26-34f3-a8c8-1ed166faed62",
    "name" : "Add a target to a service descriptor - 400",
    "request" : {
      "urlPath" : "/api/services/z59d/targets",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "adbad13e-1c26-34f3-a8c8-1ed166faed62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceAddTarget"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "48308207-f7fe-3dae-88e1-bb549925717e",
    "name" : "Add a target to a service descriptor (application/json)",
    "request" : {
      "urlPath" : "/api/services/l357/targets",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48308207-f7fe-3dae-88e1-bb549925717e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceAddTarget",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Target"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "d92843b9-0ce5-3ab3-aafb-f308b79c7274",
    "name" : "Update a service descriptor targets - 404",
    "request" : {
      "urlPath" : "/api/services/un7n/targets",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "d92843b9-0ce5-3ab3-aafb-f308b79c7274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTargets"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "ccc4f04a-7cf1-3696-a84d-9a054a55e2f7",
    "name" : "Update a service descriptor targets - 401",
    "request" : {
      "urlPath" : "/api/services/376s/targets",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ccc4f04a-7cf1-3696-a84d-9a054a55e2f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTargets"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "e48ea429-ceb8-3582-b33e-f370bfb64dc4",
    "name" : "Update a service descriptor targets - 400",
    "request" : {
      "urlPath" : "/api/services/p90m/targets",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e48ea429-ceb8-3582-b33e-f370bfb64dc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTargets"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "792f3958-c2d8-3b67-8e10-826e4205d40f",
    "name" : "Update a service descriptor targets (application/json)",
    "request" : {
      "urlPath" : "/api/services/h2i6/targets",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "792f3958-c2d8-3b67-8e10-826e4205d40f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateServiceTargets",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Target"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "eaadeefe-0a78-3318-8dc5-c44e4a19ed76",
    "name" : "Get a service descriptor targets - 404",
    "request" : {
      "urlPath" : "/api/services/qd95/targets",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "eaadeefe-0a78-3318-8dc5-c44e4a19ed76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTargets"
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "ddf6072d-11b9-32b2-82cc-dd3b9cc10a1b",
    "name" : "Get a service descriptor targets - 401",
    "request" : {
      "urlPath" : "/api/services/f0h2/targets",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ddf6072d-11b9-32b2-82cc-dd3b9cc10a1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTargets"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "259b333d-8164-38d6-ac2e-80728791d3e9",
    "name" : "Get a service descriptor targets - 400",
    "request" : {
      "urlPath" : "/api/services/0h65/targets",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "259b333d-8164-38d6-ac2e-80728791d3e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTargets"
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "f057a94e-6b7f-327c-b2e5-07ce2aa5d38f",
    "name" : "Get a service descriptor targets (application/json)",
    "request" : {
      "urlPath" : "/api/services/ml08/targets",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n}, {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f057a94e-6b7f-327c-b2e5-07ce2aa5d38f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceTargets",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Target"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "d3dc55dc-980a-39f4-899e-24ca1f41f2f6",
    "name" : "Delete a service descriptor target - 404",
    "request" : {
      "urlPath" : "/api/services/51vl/targets",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "d3dc55dc-980a-39f4-899e-24ca1f41f2f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceDeleteTarget"
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "d84f93e6-c6c1-3cc2-9411-1006b6bc694d",
    "name" : "Delete a service descriptor target - 401",
    "request" : {
      "urlPath" : "/api/services/f80s/targets",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d84f93e6-c6c1-3cc2-9411-1006b6bc694d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceDeleteTarget"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "39dbca55-e105-3a0e-9019-53929b83083f",
    "name" : "Delete a service descriptor target - 400",
    "request" : {
      "urlPath" : "/api/services/45p3/targets",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "39dbca55-e105-3a0e-9019-53929b83083f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceDeleteTarget"
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "438e874d-ed46-35a2-8292-9f9b944783f9",
    "name" : "Delete a service descriptor target (application/json)",
    "request" : {
      "urlPath" : "/api/services/5ml2/targets",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n}, {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n}, {\n  \"scheme\" : \"a string value\",\n  \"host\" : \"www.google.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "438e874d-ed46-35a2-8292-9f9b944783f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceDeleteTarget",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Target"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "7c63d74a-7385-3613-979d-2e9b3700a28a",
    "name" : "Get the quota state of an api key - 404",
    "request" : {
      "urlPath" : "/api/services/k8wz/apikeys/4wil/quotas",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7c63d74a-7385-3613-979d-2e9b3700a28a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyQuotas"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "b18e0404-f898-39ad-a812-37ac21d3a15d",
    "name" : "Get the quota state of an api key - 401",
    "request" : {
      "urlPath" : "/api/services/o818/apikeys/s974/quotas",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b18e0404-f898-39ad-a812-37ac21d3a15d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyQuotas"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "1a241b8f-79cd-3f01-a0b9-ecf451bcb160",
    "name" : "Get the quota state of an api key - 400",
    "request" : {
      "urlPath" : "/api/services/2s5g/apikeys/eswk/quotas",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1a241b8f-79cd-3f01-a0b9-ecf451bcb160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyQuotas"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "ae65e63f-c848-3293-9c02-24bb4a62108a",
    "name" : "Get the quota state of an api key (application/json)",
    "request" : {
      "urlPath" : "/api/services/bs9x/apikeys/aa89/quotas",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"remainingCallsPerDay\" : 123,\n  \"authorizedCallsPerMonth\" : 123,\n  \"currentCallsPerSec\" : 123,\n  \"authorizedCallsPerSec\" : 123,\n  \"remainingCallsPerMonth\" : 123,\n  \"remainingCallsPerSec\" : 123,\n  \"authorizedCallsPerDay\" : 123,\n  \"currentCallsPerDay\" : 123,\n  \"currentCallsPerMonth\" : 123\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae65e63f-c848-3293-9c02-24bb4a62108a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyQuotas",
          "schema" : {
            "description" : "Quotas state for an api key on a service group",
            "properties" : {
              "authorizedCallsPerDay" : {
                "description" : "The number of authorized calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerSec" : {
                "description" : "The number of authorized calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerDay" : {
                "description" : "The current number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerMonth" : {
                "description" : "The current number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerSec" : {
                "description" : "The current number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerDay" : {
                "description" : "The remaining number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerSec" : {
                "description" : "The remaining number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "authorizedCallsPerSec", "currentCallsPerSec", "remainingCallsPerSec", "authorizedCallsPerDay", "currentCallsPerDay", "remainingCallsPerDay", "authorizedCallsPerMonth", "currentCallsPerMonth", "remainingCallsPerMonth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "35ee408d-273a-3112-b3db-dfca59b2e374",
    "name" : "Reset the quota state of an api key - 404",
    "request" : {
      "urlPath" : "/api/services/ab4h/apikeys/0c7u/quotas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "35ee408d-273a-3112-b3db-dfca59b2e374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyQuotas"
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "21217725-a2c8-321c-b3f6-91ac1409a0fa",
    "name" : "Reset the quota state of an api key - 401",
    "request" : {
      "urlPath" : "/api/services/165z/apikeys/32c6/quotas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "21217725-a2c8-321c-b3f6-91ac1409a0fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyQuotas"
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "23ca72ba-5f88-3bc2-90c9-856a4db00080",
    "name" : "Reset the quota state of an api key - 400",
    "request" : {
      "urlPath" : "/api/services/u6xw/apikeys/6f6a/quotas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "23ca72ba-5f88-3bc2-90c9-856a4db00080",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyQuotas"
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "03a34cd7-1ef4-3eec-ac97-e74c0ca3130e",
    "name" : "Reset the quota state of an api key (application/json)",
    "request" : {
      "urlPath" : "/api/services/f584/apikeys/8m51/quotas",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"remainingCallsPerDay\" : 123,\n  \"authorizedCallsPerMonth\" : 123,\n  \"currentCallsPerSec\" : 123,\n  \"authorizedCallsPerSec\" : 123,\n  \"remainingCallsPerMonth\" : 123,\n  \"remainingCallsPerSec\" : 123,\n  \"authorizedCallsPerDay\" : 123,\n  \"currentCallsPerDay\" : 123,\n  \"currentCallsPerMonth\" : 123\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03a34cd7-1ef4-3eec-ac97-e74c0ca3130e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyQuotas",
          "schema" : {
            "description" : "Quotas state for an api key on a service group",
            "properties" : {
              "authorizedCallsPerDay" : {
                "description" : "The number of authorized calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerSec" : {
                "description" : "The number of authorized calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerDay" : {
                "description" : "The current number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerMonth" : {
                "description" : "The current number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerSec" : {
                "description" : "The current number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerDay" : {
                "description" : "The remaining number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerSec" : {
                "description" : "The remaining number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "authorizedCallsPerSec", "currentCallsPerSec", "remainingCallsPerSec", "authorizedCallsPerDay", "currentCallsPerDay", "remainingCallsPerDay", "authorizedCallsPerMonth", "currentCallsPerMonth", "remainingCallsPerMonth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "a09ed877-131a-3496-a74f-6c5e2d020d29",
    "name" : "Get the group of an api key - 404",
    "request" : {
      "urlPath" : "/api/services/77ge/apikeys/s6vi/group",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a09ed877-131a-3496-a74f-6c5e2d020d29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyGroup"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "52696e65-994b-39c9-a6c7-c9d36b99356f",
    "name" : "Get the group of an api key - 401",
    "request" : {
      "urlPath" : "/api/services/9g08/apikeys/gbw1/group",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "52696e65-994b-39c9-a6c7-c9d36b99356f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyGroup"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "298cb764-a948-312e-8c81-6aedc1422dba",
    "name" : "Get the group of an api key - 400",
    "request" : {
      "urlPath" : "/api/services/fhqj/apikeys/1njn/group",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "298cb764-a948-312e-8c81-6aedc1422dba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyGroup"
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "d30e3c90-67b0-325a-84e8-a4753c68513b",
    "name" : "Get the group of an api key (application/json)",
    "request" : {
      "urlPath" : "/api/services/r7so/apikeys/69z5/group",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d30e3c90-67b0-325a-84e8-a4753c68513b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyGroup",
          "schema" : {
            "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
            "properties" : {
              "description" : {
                "description" : "The descriptoin of the group",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the group",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "19596a89-7b97-35ef-b30a-84d92cd1e0fe",
    "name" : "Update an api key - 404",
    "request" : {
      "urlPath" : "/api/services/7a69/apikeys/41ru",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "19596a89-7b97-35ef-b30a-84d92cd1e0fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKey"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "d786f578-2196-3835-bb13-e3d0ca51cb31",
    "name" : "Update an api key - 401",
    "request" : {
      "urlPath" : "/api/services/6unr/apikeys/87l0",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d786f578-2196-3835-bb13-e3d0ca51cb31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKey"
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "5085597a-4126-3211-ab99-28c865e9f08f",
    "name" : "Update an api key - 400",
    "request" : {
      "urlPath" : "/api/services/mi62/apikeys/xw06",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5085597a-4126-3211-ab99-28c865e9f08f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKey"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "b57592d4-95c8-3128-856f-f6afaa4a2b8e",
    "name" : "Update an api key (application/json)",
    "request" : {
      "urlPath" : "/api/services/l4i1/apikeys/7pxu",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b57592d4-95c8-3128-856f-f6afaa4a2b8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKey",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "62f4b3b2-8ab8-390d-a6b0-c95df4fc8ccb",
    "name" : "Update an api key with a diff - 404",
    "request" : {
      "urlPath" : "/api/services/g7tp/apikeys/2n0t",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "62f4b3b2-8ab8-390d-a6b0-c95df4fc8ccb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKey"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "47e99e20-b5d6-37c6-bb0d-0071c7c8dde1",
    "name" : "Update an api key with a diff - 401",
    "request" : {
      "urlPath" : "/api/services/4912/apikeys/435c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "47e99e20-b5d6-37c6-bb0d-0071c7c8dde1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKey"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "668a0d21-2d84-307f-b787-aa7921e7e97c",
    "name" : "Update an api key with a diff - 400",
    "request" : {
      "urlPath" : "/api/services/8fwj/apikeys/xrxh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "668a0d21-2d84-307f-b787-aa7921e7e97c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKey"
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "064e3719-d2a9-3df7-aebd-59bb93c3a7bd",
    "name" : "Update an api key with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/services/o3rv/apikeys/ac3b",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "064e3719-d2a9-3df7-aebd-59bb93c3a7bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKey",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "87ef82a5-08ae-3a6b-be93-1c09a2a6caa1",
    "name" : "Get an api key - 404",
    "request" : {
      "urlPath" : "/api/services/m926/apikeys/ay45",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "87ef82a5-08ae-3a6b-be93-1c09a2a6caa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKey"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "d5c7d852-409e-360a-8f3a-eb3ac65b03a0",
    "name" : "Get an api key - 401",
    "request" : {
      "urlPath" : "/api/services/jelu/apikeys/725h",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d5c7d852-409e-360a-8f3a-eb3ac65b03a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKey"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "47418170-dc46-32b2-bf4c-a3d472ff1a45",
    "name" : "Get an api key - 400",
    "request" : {
      "urlPath" : "/api/services/9m63/apikeys/516r",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "47418170-dc46-32b2-bf4c-a3d472ff1a45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKey"
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "1f3f32d2-c923-3c44-b1f7-fcc016491f06",
    "name" : "Get an api key (application/json)",
    "request" : {
      "urlPath" : "/api/services/co1f/apikeys/n0rd",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f3f32d2-c923-3c44-b1f7-fcc016491f06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKey",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "bc338a5d-0250-309c-9686-9b239bb01053",
    "name" : "Delete an api key - 404",
    "request" : {
      "urlPath" : "/api/services/opiq/apikeys/7jy9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "bc338a5d-0250-309c-9686-9b239bb01053",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKey"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "a713fa5e-0627-31ea-b44c-484905137662",
    "name" : "Delete an api key - 401",
    "request" : {
      "urlPath" : "/api/services/a961/apikeys/4ea2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a713fa5e-0627-31ea-b44c-484905137662",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKey"
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "2ff6f85b-a942-348f-8923-4f8c9c6422de",
    "name" : "Delete an api key - 400",
    "request" : {
      "urlPath" : "/api/services/38mu/apikeys/53wg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2ff6f85b-a942-348f-8923-4f8c9c6422de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKey"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "cd302bf9-5004-3d97-81af-05cdebdcd6e7",
    "name" : "Delete an api key (application/json)",
    "request" : {
      "urlPath" : "/api/services/sm5y/apikeys/o4ld",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd302bf9-5004-3d97-81af-05cdebdcd6e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKey",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "12bab174-fd85-3a79-bca2-fe15f6f1998b",
    "name" : "Create a new api key for a service - 404",
    "request" : {
      "urlPath" : "/api/services/6k02/apikeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "12bab174-fd85-3a79-bca2-fe15f6f1998b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKey"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "62d5788d-9a61-3758-a7a2-8b35a0051424",
    "name" : "Create a new api key for a service - 401",
    "request" : {
      "urlPath" : "/api/services/pz75/apikeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "62d5788d-9a61-3758-a7a2-8b35a0051424",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKey"
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "95d9af41-503b-3991-8eca-67dd327f33e4",
    "name" : "Create a new api key for a service - 400",
    "request" : {
      "urlPath" : "/api/services/209m/apikeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "95d9af41-503b-3991-8eca-67dd327f33e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKey"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "aabb6736-dbd5-3107-89a8-ed4cb314ac36",
    "name" : "Create a new api key for a service (application/json)",
    "request" : {
      "urlPath" : "/api/services/zbd0/apikeys",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aabb6736-dbd5-3107-89a8-ed4cb314ac36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKey",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "886797a3-f6c4-3467-b1fc-9979c8bf5c42",
    "name" : "Get all api keys for the group of a service - 404",
    "request" : {
      "urlPath" : "/api/services/cc3m/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "886797a3-f6c4-3467-b1fc-9979c8bf5c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeys"
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "0e716db2-0860-3b07-8509-e1171d151cbb",
    "name" : "Get all api keys for the group of a service - 401",
    "request" : {
      "urlPath" : "/api/services/s8o0/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0e716db2-0860-3b07-8509-e1171d151cbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeys"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "ddfa6e66-dfb8-3e5c-92dd-041c72366b8d",
    "name" : "Get all api keys for the group of a service - 400",
    "request" : {
      "urlPath" : "/api/services/w9m2/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ddfa6e66-dfb8-3e5c-92dd-041c72366b8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeys"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "d931463f-cf71-3408-bd5a-638cae3ddad1",
    "name" : "Get all api keys for the group of a service (application/json)",
    "request" : {
      "urlPath" : "/api/services/j6k1/apikeys",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d931463f-cf71-3408-bd5a-638cae3ddad1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeys",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiKey"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "681960f9-d6aa-3a5e-a114-ad00e2b94221",
    "name" : "Update a service descriptor - 404",
    "request" : {
      "urlPath" : "/api/services/r28g",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "681960f9-d6aa-3a5e-a114-ad00e2b94221",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateService"
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "146b3f9a-414a-3fbf-8039-1d14ee38d303",
    "name" : "Update a service descriptor - 401",
    "request" : {
      "urlPath" : "/api/services/802u",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "146b3f9a-414a-3fbf-8039-1d14ee38d303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateService"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "c237837e-b7d5-3aca-a800-9e6ca0c175e9",
    "name" : "Update a service descriptor - 400",
    "request" : {
      "urlPath" : "/api/services/gdc8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c237837e-b7d5-3aca-a800-9e6ca0c175e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateService"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "1379f3b5-bc41-326f-8390-7fe0a175c4bb",
    "name" : "Update a service descriptor (application/json)",
    "request" : {
      "urlPath" : "/api/services/4hcc",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"id\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1379f3b5-bc41-326f-8390-7fe0a175c4bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateService",
          "schema" : {
            "description" : "An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism",
            "properties" : {
              "Canary" : {
                "$ref" : "#/components/schemas/Canary"
              },
              "additionalHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be added to each client request. Useful to add authentication",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "api" : {
                "$ref" : "#/components/schemas/ExposedApi"
              },
              "authConfigRef" : {
                "description" : "A reference to a global auth module config",
                "example" : "a string value",
                "type" : "string"
              },
              "buildMode" : {
                "description" : "Display a construction page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "clientConfig" : {
                "$ref" : "#/components/schemas/ClientConfig"
              },
              "clientValidatorRef" : {
                "description" : "A reference to validation authority",
                "example" : "a string value",
                "type" : "string"
              },
              "cors" : {
                "$ref" : "#/components/schemas/CorsSettings"
              },
              "domain" : {
                "description" : "The domain on which the service is available.",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
                "example" : true,
                "type" : "boolean"
              },
              "enforceSecureCommunication" : {
                "description" : "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
                "example" : true,
                "type" : "boolean"
              },
              "env" : {
                "description" : "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
                "example" : "a string value",
                "type" : "string"
              },
              "forceHttps" : {
                "description" : "Will force redirection to https:// if not present",
                "example" : true,
                "type" : "boolean"
              },
              "groups" : {
                "description" : "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "gzip" : {
                "$ref" : "#/components/schemas/Gzip"
              },
              "headersVerification" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be verified after routing.",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "healthCheck" : {
                "$ref" : "#/components/schemas/HealthCheck"
              },
              "id" : {
                "description" : "A unique random string to identify your service",
                "example" : "110e8400-e29b-11d4-a716-446655440000",
                "format" : "uuid",
                "type" : "string"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "jwtVerifier" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/LocalJwtVerifier"
                }, {
                  "$ref" : "#/components/schemas/RefJwtVerifier"
                } ]
              },
              "localHost" : {
                "description" : "The host used localy, mainly localhost:xxxx",
                "example" : "a string value",
                "type" : "string"
              },
              "localScheme" : {
                "description" : "The scheme used localy, mainly http",
                "example" : "a string value",
                "type" : "string"
              },
              "maintenanceMode" : {
                "description" : "Display a maintainance page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "matchingHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "matchingRoot" : {
                "description" : "The root path on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Just a bunch of random properties",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "The name of your service. Only for debug and human readability purposes",
                "example" : "a string value",
                "type" : "string"
              },
              "overrideHost" : {
                "description" : "Host header will be overriden with Host of the target",
                "example" : true,
                "type" : "boolean"
              },
              "privateApp" : {
                "description" : "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
                "example" : true,
                "type" : "boolean"
              },
              "privatePatterns" : {
                "description" : "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "publicPatterns" : {
                "description" : "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "redirectToLocal" : {
                "description" : "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
                "example" : true,
                "type" : "boolean"
              },
              "redirection" : {
                "$ref" : "#/components/schemas/RedirectionSettings"
              },
              "root" : {
                "description" : "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
                "example" : "a string value",
                "type" : "string"
              },
              "secComExcludedPatterns" : {
                "description" : "URI patterns excluded from secured communications",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "secComSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "sendOtoroshiHeadersBack" : {
                "description" : "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
                "example" : true,
                "type" : "boolean"
              },
              "statsdConfig" : {
                "$ref" : "#/components/schemas/StatsdConfig"
              },
              "subdomain" : {
                "description" : "The subdomain on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "targets" : {
                "description" : "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
                "items" : {
                  "$ref" : "#/components/schemas/Target"
                },
                "type" : "array"
              },
              "transformerRef" : {
                "description" : "A reference to a request transformer",
                "example" : "a string value",
                "type" : "string"
              },
              "userFacing" : {
                "description" : "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "xForwardedHeaders" : {
                "description" : "Send X-Forwarded-* headers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "id", "groups", "name", "env", "domain", "subdomain", "targets", "root", "enabled", "privateApp", "forceHttps", "maintenanceMode", "buildMode", "enforceSecureCommunication" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "0ad91956-b67f-3758-a0fa-44b1fe09f9bc",
    "name" : "Update a service descriptor with a diff - 404",
    "request" : {
      "urlPath" : "/api/services/58zz",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0ad91956-b67f-3758-a0fa-44b1fe09f9bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchService"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "50a22aeb-3b70-3114-b1c6-366b42c27044",
    "name" : "Update a service descriptor with a diff - 401",
    "request" : {
      "urlPath" : "/api/services/h797",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "50a22aeb-3b70-3114-b1c6-366b42c27044",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchService"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "03a42018-0769-32d9-b6be-e56d4125792a",
    "name" : "Update a service descriptor with a diff - 400",
    "request" : {
      "urlPath" : "/api/services/o0ii",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "03a42018-0769-32d9-b6be-e56d4125792a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchService"
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "3f12b89d-85e1-3711-937c-7aa2aef0e7a9",
    "name" : "Update a service descriptor with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/services/f04c",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"id\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f12b89d-85e1-3711-937c-7aa2aef0e7a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchService",
          "schema" : {
            "description" : "An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism",
            "properties" : {
              "Canary" : {
                "$ref" : "#/components/schemas/Canary"
              },
              "additionalHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be added to each client request. Useful to add authentication",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "api" : {
                "$ref" : "#/components/schemas/ExposedApi"
              },
              "authConfigRef" : {
                "description" : "A reference to a global auth module config",
                "example" : "a string value",
                "type" : "string"
              },
              "buildMode" : {
                "description" : "Display a construction page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "clientConfig" : {
                "$ref" : "#/components/schemas/ClientConfig"
              },
              "clientValidatorRef" : {
                "description" : "A reference to validation authority",
                "example" : "a string value",
                "type" : "string"
              },
              "cors" : {
                "$ref" : "#/components/schemas/CorsSettings"
              },
              "domain" : {
                "description" : "The domain on which the service is available.",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
                "example" : true,
                "type" : "boolean"
              },
              "enforceSecureCommunication" : {
                "description" : "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
                "example" : true,
                "type" : "boolean"
              },
              "env" : {
                "description" : "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
                "example" : "a string value",
                "type" : "string"
              },
              "forceHttps" : {
                "description" : "Will force redirection to https:// if not present",
                "example" : true,
                "type" : "boolean"
              },
              "groups" : {
                "description" : "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "gzip" : {
                "$ref" : "#/components/schemas/Gzip"
              },
              "headersVerification" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be verified after routing.",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "healthCheck" : {
                "$ref" : "#/components/schemas/HealthCheck"
              },
              "id" : {
                "description" : "A unique random string to identify your service",
                "example" : "110e8400-e29b-11d4-a716-446655440000",
                "format" : "uuid",
                "type" : "string"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "jwtVerifier" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/LocalJwtVerifier"
                }, {
                  "$ref" : "#/components/schemas/RefJwtVerifier"
                } ]
              },
              "localHost" : {
                "description" : "The host used localy, mainly localhost:xxxx",
                "example" : "a string value",
                "type" : "string"
              },
              "localScheme" : {
                "description" : "The scheme used localy, mainly http",
                "example" : "a string value",
                "type" : "string"
              },
              "maintenanceMode" : {
                "description" : "Display a maintainance page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "matchingHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "matchingRoot" : {
                "description" : "The root path on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Just a bunch of random properties",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "The name of your service. Only for debug and human readability purposes",
                "example" : "a string value",
                "type" : "string"
              },
              "overrideHost" : {
                "description" : "Host header will be overriden with Host of the target",
                "example" : true,
                "type" : "boolean"
              },
              "privateApp" : {
                "description" : "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
                "example" : true,
                "type" : "boolean"
              },
              "privatePatterns" : {
                "description" : "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "publicPatterns" : {
                "description" : "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "redirectToLocal" : {
                "description" : "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
                "example" : true,
                "type" : "boolean"
              },
              "redirection" : {
                "$ref" : "#/components/schemas/RedirectionSettings"
              },
              "root" : {
                "description" : "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
                "example" : "a string value",
                "type" : "string"
              },
              "secComExcludedPatterns" : {
                "description" : "URI patterns excluded from secured communications",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "secComSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "sendOtoroshiHeadersBack" : {
                "description" : "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
                "example" : true,
                "type" : "boolean"
              },
              "statsdConfig" : {
                "$ref" : "#/components/schemas/StatsdConfig"
              },
              "subdomain" : {
                "description" : "The subdomain on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "targets" : {
                "description" : "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
                "items" : {
                  "$ref" : "#/components/schemas/Target"
                },
                "type" : "array"
              },
              "transformerRef" : {
                "description" : "A reference to a request transformer",
                "example" : "a string value",
                "type" : "string"
              },
              "userFacing" : {
                "description" : "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "xForwardedHeaders" : {
                "description" : "Send X-Forwarded-* headers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "id", "groups", "name", "env", "domain", "subdomain", "targets", "root", "enabled", "privateApp", "forceHttps", "maintenanceMode", "buildMode", "enforceSecureCommunication" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "163682b3-66d5-383d-ab52-6e583c7f21eb",
    "name" : "Get a service descriptor - 404",
    "request" : {
      "urlPath" : "/api/services/4gk1",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "163682b3-66d5-383d-ab52-6e583c7f21eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "service"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "4d66e768-95e9-307c-b0af-9cec921d5bb6",
    "name" : "Get a service descriptor - 401",
    "request" : {
      "urlPath" : "/api/services/tww2",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4d66e768-95e9-307c-b0af-9cec921d5bb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "service"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "3e149f30-d802-3c65-ad10-8fd070edb23f",
    "name" : "Get a service descriptor - 400",
    "request" : {
      "urlPath" : "/api/services/1ew6",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "3e149f30-d802-3c65-ad10-8fd070edb23f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "service"
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "c33c3a5a-919c-3046-b7fc-40fde92f42be",
    "name" : "Get a service descriptor (application/json)",
    "request" : {
      "urlPath" : "/api/services/zns6",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"id\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c33c3a5a-919c-3046-b7fc-40fde92f42be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "service",
          "schema" : {
            "description" : "An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism",
            "properties" : {
              "Canary" : {
                "$ref" : "#/components/schemas/Canary"
              },
              "additionalHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be added to each client request. Useful to add authentication",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "api" : {
                "$ref" : "#/components/schemas/ExposedApi"
              },
              "authConfigRef" : {
                "description" : "A reference to a global auth module config",
                "example" : "a string value",
                "type" : "string"
              },
              "buildMode" : {
                "description" : "Display a construction page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "clientConfig" : {
                "$ref" : "#/components/schemas/ClientConfig"
              },
              "clientValidatorRef" : {
                "description" : "A reference to validation authority",
                "example" : "a string value",
                "type" : "string"
              },
              "cors" : {
                "$ref" : "#/components/schemas/CorsSettings"
              },
              "domain" : {
                "description" : "The domain on which the service is available.",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
                "example" : true,
                "type" : "boolean"
              },
              "enforceSecureCommunication" : {
                "description" : "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
                "example" : true,
                "type" : "boolean"
              },
              "env" : {
                "description" : "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
                "example" : "a string value",
                "type" : "string"
              },
              "forceHttps" : {
                "description" : "Will force redirection to https:// if not present",
                "example" : true,
                "type" : "boolean"
              },
              "groups" : {
                "description" : "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "gzip" : {
                "$ref" : "#/components/schemas/Gzip"
              },
              "headersVerification" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be verified after routing.",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "healthCheck" : {
                "$ref" : "#/components/schemas/HealthCheck"
              },
              "id" : {
                "description" : "A unique random string to identify your service",
                "example" : "110e8400-e29b-11d4-a716-446655440000",
                "format" : "uuid",
                "type" : "string"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "jwtVerifier" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/LocalJwtVerifier"
                }, {
                  "$ref" : "#/components/schemas/RefJwtVerifier"
                } ]
              },
              "localHost" : {
                "description" : "The host used localy, mainly localhost:xxxx",
                "example" : "a string value",
                "type" : "string"
              },
              "localScheme" : {
                "description" : "The scheme used localy, mainly http",
                "example" : "a string value",
                "type" : "string"
              },
              "maintenanceMode" : {
                "description" : "Display a maintainance page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "matchingHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "matchingRoot" : {
                "description" : "The root path on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Just a bunch of random properties",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "The name of your service. Only for debug and human readability purposes",
                "example" : "a string value",
                "type" : "string"
              },
              "overrideHost" : {
                "description" : "Host header will be overriden with Host of the target",
                "example" : true,
                "type" : "boolean"
              },
              "privateApp" : {
                "description" : "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
                "example" : true,
                "type" : "boolean"
              },
              "privatePatterns" : {
                "description" : "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "publicPatterns" : {
                "description" : "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "redirectToLocal" : {
                "description" : "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
                "example" : true,
                "type" : "boolean"
              },
              "redirection" : {
                "$ref" : "#/components/schemas/RedirectionSettings"
              },
              "root" : {
                "description" : "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
                "example" : "a string value",
                "type" : "string"
              },
              "secComExcludedPatterns" : {
                "description" : "URI patterns excluded from secured communications",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "secComSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "sendOtoroshiHeadersBack" : {
                "description" : "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
                "example" : true,
                "type" : "boolean"
              },
              "statsdConfig" : {
                "$ref" : "#/components/schemas/StatsdConfig"
              },
              "subdomain" : {
                "description" : "The subdomain on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "targets" : {
                "description" : "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
                "items" : {
                  "$ref" : "#/components/schemas/Target"
                },
                "type" : "array"
              },
              "transformerRef" : {
                "description" : "A reference to a request transformer",
                "example" : "a string value",
                "type" : "string"
              },
              "userFacing" : {
                "description" : "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "xForwardedHeaders" : {
                "description" : "Send X-Forwarded-* headers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "id", "groups", "name", "env", "domain", "subdomain", "targets", "root", "enabled", "privateApp", "forceHttps", "maintenanceMode", "buildMode", "enforceSecureCommunication" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "37b5f5f1-7df1-35bd-9a6e-e375f26a57fb",
    "name" : "Delete a service descriptor - 404",
    "request" : {
      "urlPath" : "/api/services/a365",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "37b5f5f1-7df1-35bd-9a6e-e375f26a57fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteService"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "7ec74f4a-4a83-3e00-84fe-d12501881fff",
    "name" : "Delete a service descriptor - 401",
    "request" : {
      "urlPath" : "/api/services/4a5n",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7ec74f4a-4a83-3e00-84fe-d12501881fff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteService"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "5d970fba-065a-3422-80a8-524a10099e32",
    "name" : "Delete a service descriptor - 400",
    "request" : {
      "urlPath" : "/api/services/iis2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5d970fba-065a-3422-80a8-524a10099e32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteService"
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "ce167198-b799-3697-b8ef-2f8f2953cf88",
    "name" : "Delete a service descriptor (application/json)",
    "request" : {
      "urlPath" : "/api/services/9757",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce167198-b799-3697-b8ef-2f8f2953cf88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteService",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "64137ee1-f3b4-3c67-bd9f-93c320e31234",
    "name" : "Create a new service descriptor - 404",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "64137ee1-f3b4-3c67-bd9f-93c320e31234",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createService"
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "85dcf110-24af-35e2-a48c-ab678fed343b",
    "name" : "Create a new service descriptor - 401",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "85dcf110-24af-35e2-a48c-ab678fed343b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createService"
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "87bd8401-439e-3645-b55c-b5dba5a8b989",
    "name" : "Create a new service descriptor - 400",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "87bd8401-439e-3645-b55c-b5dba5a8b989",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createService"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "808a5899-b4ab-39f0-8de6-26535715ac44",
    "name" : "Create a new service descriptor (application/json)",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"size\" : 123123,\n    \"secret\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"id\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "808a5899-b4ab-39f0-8de6-26535715ac44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createService",
          "schema" : {
            "description" : "An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism",
            "properties" : {
              "Canary" : {
                "$ref" : "#/components/schemas/Canary"
              },
              "additionalHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be added to each client request. Useful to add authentication",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "api" : {
                "$ref" : "#/components/schemas/ExposedApi"
              },
              "authConfigRef" : {
                "description" : "A reference to a global auth module config",
                "example" : "a string value",
                "type" : "string"
              },
              "buildMode" : {
                "description" : "Display a construction page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "chaosConfig" : {
                "$ref" : "#/components/schemas/ChaosConfig"
              },
              "clientConfig" : {
                "$ref" : "#/components/schemas/ClientConfig"
              },
              "clientValidatorRef" : {
                "description" : "A reference to validation authority",
                "example" : "a string value",
                "type" : "string"
              },
              "cors" : {
                "$ref" : "#/components/schemas/CorsSettings"
              },
              "domain" : {
                "description" : "The domain on which the service is available.",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
                "example" : true,
                "type" : "boolean"
              },
              "enforceSecureCommunication" : {
                "description" : "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
                "example" : true,
                "type" : "boolean"
              },
              "env" : {
                "description" : "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
                "example" : "a string value",
                "type" : "string"
              },
              "forceHttps" : {
                "description" : "Will force redirection to https:// if not present",
                "example" : true,
                "type" : "boolean"
              },
              "groups" : {
                "description" : "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "gzip" : {
                "$ref" : "#/components/schemas/Gzip"
              },
              "headersVerification" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that will be verified after routing.",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "healthCheck" : {
                "$ref" : "#/components/schemas/HealthCheck"
              },
              "id" : {
                "description" : "A unique random string to identify your service",
                "example" : "110e8400-e29b-11d4-a716-446655440000",
                "format" : "uuid",
                "type" : "string"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "jwtVerifier" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/LocalJwtVerifier"
                }, {
                  "$ref" : "#/components/schemas/RefJwtVerifier"
                } ]
              },
              "localHost" : {
                "description" : "The host used localy, mainly localhost:xxxx",
                "example" : "a string value",
                "type" : "string"
              },
              "localScheme" : {
                "description" : "The scheme used localy, mainly http",
                "example" : "a string value",
                "type" : "string"
              },
              "maintenanceMode" : {
                "description" : "Display a maintainance page when a user try to use the service",
                "example" : true,
                "type" : "boolean"
              },
              "matchingHeaders" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "matchingRoot" : {
                "description" : "The root path on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Just a bunch of random properties",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "The name of your service. Only for debug and human readability purposes",
                "example" : "a string value",
                "type" : "string"
              },
              "overrideHost" : {
                "description" : "Host header will be overriden with Host of the target",
                "example" : true,
                "type" : "boolean"
              },
              "privateApp" : {
                "description" : "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
                "example" : true,
                "type" : "boolean"
              },
              "privatePatterns" : {
                "description" : "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "publicPatterns" : {
                "description" : "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "redirectToLocal" : {
                "description" : "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
                "example" : true,
                "type" : "boolean"
              },
              "redirection" : {
                "$ref" : "#/components/schemas/RedirectionSettings"
              },
              "root" : {
                "description" : "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
                "example" : "a string value",
                "type" : "string"
              },
              "secComExcludedPatterns" : {
                "description" : "URI patterns excluded from secured communications",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "secComSettings" : {
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/HSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/RSAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/ESAlgoSettings"
                }, {
                  "$ref" : "#/components/schemas/JWKSAlgoSettings"
                } ]
              },
              "sendOtoroshiHeadersBack" : {
                "description" : "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
                "example" : true,
                "type" : "boolean"
              },
              "statsdConfig" : {
                "$ref" : "#/components/schemas/StatsdConfig"
              },
              "subdomain" : {
                "description" : "The subdomain on which the service is available",
                "example" : "a string value",
                "type" : "string"
              },
              "targets" : {
                "description" : "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
                "items" : {
                  "$ref" : "#/components/schemas/Target"
                },
                "type" : "array"
              },
              "transformerRef" : {
                "description" : "A reference to a request transformer",
                "example" : "a string value",
                "type" : "string"
              },
              "userFacing" : {
                "description" : "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
                "example" : true,
                "type" : "boolean"
              },
              "xForwardedHeaders" : {
                "description" : "Send X-Forwarded-* headers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "id", "groups", "name", "env", "domain", "subdomain", "targets", "root", "enabled", "privateApp", "forceHttps", "maintenanceMode", "buildMode", "enforceSecureCommunication" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "e76d0a49-6d7d-362c-ae33-ba46e55a3725",
    "name" : "Get all services - 404",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e76d0a49-6d7d-362c-ae33-ba46e55a3725",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServices"
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "9068e5c1-61d3-3af1-bca4-87907c6fa010",
    "name" : "Get all services - 401",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9068e5c1-61d3-3af1-bca4-87907c6fa010",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServices"
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "ec1c6b0e-8256-3cc5-9190-7e9f99a1ce1f",
    "name" : "Get all services - 400",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ec1c6b0e-8256-3cc5-9190-7e9f99a1ce1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServices"
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "33caa019-df2a-3e5c-9c03-c221c73ecffb",
    "name" : "Get all services (application/json)",
    "request" : {
      "urlPath" : "/api/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"algoSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"source\" : {\n      \"name\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"strategy\" : {\n      \"verificationSettings\" : {\n        \"mappingSettings\" : {\n          \"values\" : {\n            \"key\" : \"value\"\n          },\n          \"map\" : {\n            \"key\" : \"value\"\n          },\n          \"remove\" : [ \"a string value\", \"a string value\", \"a string value\" ]\n        },\n        \"fields\" : {\n          \"key\" : \"value\"\n        }\n      },\n      \"type\" : \"a string value\"\n    },\n    \"strict\" : true,\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"algoSettings\" : {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"kty\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"ttl\" : 123,\n      \"timeout\" : 123,\n      \"url\" : \"a string value\"\n    },\n    \"source\" : {\n      \"name\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"strategy\" : {\n      \"verificationSettings\" : {\n        \"mappingSettings\" : {\n          \"values\" : {\n            \"key\" : \"value\"\n          },\n          \"map\" : {\n            \"key\" : \"value\"\n          },\n          \"remove\" : [ \"a string value\", \"a string value\" ]\n        },\n        \"fields\" : {\n          \"key\" : \"value\"\n        }\n      },\n      \"type\" : \"a string value\"\n    },\n    \"strict\" : true,\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"id\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"cors\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"maxAge\" : 123123,\n    \"allowCredentials\" : true,\n    \"enabled\" : true,\n    \"allowOrigin\" : \"a string value\"\n  },\n  \"forceHttps\" : true,\n  \"matchingRoot\" : \"a string value\",\n  \"buildMode\" : true,\n  \"chaosConfig\" : {\n    \"badResponsesFaultConfig\" : {\n      \"responses\" : [ {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      }, {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"body\" : \"a string value\",\n        \"status\" : 123123\n      } ],\n      \"ratio\" : 42.2\n    },\n    \"largeResponseFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"latencyInjectionFaultConfig\" : {\n      \"from\" : 123123,\n      \"to\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"largeRequestFaultConfig\" : {\n      \"additionalRequestSize\" : 123123,\n      \"ratio\" : 42.2\n    },\n    \"enabled\" : true\n  },\n  \"secComSettings\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"targets\" : [ {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  }, {\n    \"scheme\" : \"a string value\",\n    \"host\" : \"www.google.com\"\n  } ],\n  \"enabled\" : true,\n  \"localHost\" : \"a string value\",\n  \"root\" : \"a string value\",\n  \"additionalHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"api\" : {\n    \"exposeApi\" : true,\n    \"openApiDescriptorUrl\" : \"http://www.google.com\"\n  },\n  \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"sendOtoroshiHeadersBack\" : true,\n  \"redirection\" : {\n    \"code\" : 123123,\n    \"to\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"headersVerification\" : {\n    \"key\" : \"value\"\n  },\n  \"redirectToLocal\" : true,\n  \"userFacing\" : true,\n  \"authConfigRef\" : \"a string value\",\n  \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"xForwardedHeaders\" : true,\n  \"transformerRef\" : \"a string value\",\n  \"Canary\" : {\n    \"root\" : \"a string value\",\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"traffic\" : 123123\n  },\n  \"groups\" : [ \"a string value\" ],\n  \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"gzip\" : {\n    \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"chunkedThreshold\" : 123,\n    \"compressionLevel\" : 123123,\n    \"enabled\" : true,\n    \"bufferSize\" : 123\n  },\n  \"clientConfig\" : {\n    \"retries\" : 123123,\n    \"sampleInterval\" : 123123,\n    \"useCircuitBreaker\" : true,\n    \"backoffFactor\" : 123123,\n    \"maxErrors\" : 123123,\n    \"retryInitialDelay\" : 123123,\n    \"callTimeout\" : 123123,\n    \"globalTimeout\" : 123123\n  },\n  \"env\" : \"a string value\",\n  \"enforceSecureCommunication\" : true,\n  \"jwtVerifier\" : {\n    \"algoSettings\" : {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"kty\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"ttl\" : 123,\n      \"timeout\" : 123,\n      \"url\" : \"a string value\"\n    },\n    \"source\" : {\n      \"name\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"remove\" : \"a string value\"\n    },\n    \"strategy\" : {\n      \"transformSettings\" : {\n        \"mappingSettings\" : {\n          \"values\" : {\n            \"key\" : \"value\"\n          },\n          \"map\" : {\n            \"key\" : \"value\"\n          },\n          \"remove\" : [ \"a string value\" ]\n        },\n        \"location\" : {\n          \"name\" : \"a string value\",\n          \"type\" : \"a string value\"\n        }\n      },\n      \"algoSettings\" : {\n        \"size\" : 123123,\n        \"secret\" : \"a string value\",\n        \"type\" : \"a string value\"\n      },\n      \"verificationSettings\" : {\n        \"mappingSettings\" : {\n          \"values\" : {\n            \"key\" : \"value\"\n          },\n          \"map\" : {\n            \"key\" : \"value\"\n          },\n          \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n        },\n        \"fields\" : {\n          \"key\" : \"value\"\n        }\n      },\n      \"type\" : \"a string value\"\n    },\n    \"strict\" : true,\n    \"type\" : \"a string value\",\n    \"enabled\" : true\n  },\n  \"clientValidatorRef\" : \"a string value\",\n  \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"localScheme\" : \"a string value\",\n  \"privateApp\" : true,\n  \"domain\" : \"a string value\",\n  \"healthCheck\" : {\n    \"enabled\" : true,\n    \"url\" : \"http://www.google.com\"\n  },\n  \"name\" : \"a string value\",\n  \"statsdConfig\" : {\n    \"port\" : 123123,\n    \"datadog\" : true,\n    \"host\" : \"a string value\"\n  },\n  \"matchingHeaders\" : {\n    \"key\" : \"value\"\n  },\n  \"subdomain\" : \"a string value\",\n  \"overrideHost\" : true,\n  \"maintenanceMode\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33caa019-df2a-3e5c-9c03-c221c73ecffb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServices",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Service"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "7018a8b5-2ecd-3dc1-815a-dfa97787a398",
    "name" : "Update a script - 404",
    "request" : {
      "urlPath" : "/api/scripts/oi4m",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7018a8b5-2ecd-3dc1-815a-dfa97787a398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateScript"
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "340c32ef-2b6e-386f-a8a7-2448203d1d94",
    "name" : "Update a script - 401",
    "request" : {
      "urlPath" : "/api/scripts/7033",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "340c32ef-2b6e-386f-a8a7-2448203d1d94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateScript"
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "f0edbb0f-ee19-36cf-808b-95acabf92b12",
    "name" : "Update a script - 400",
    "request" : {
      "urlPath" : "/api/scripts/p5u4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f0edbb0f-ee19-36cf-808b-95acabf92b12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateScript"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "6fa2bb5e-b6cb-32be-948c-1d6b79da9d5d",
    "name" : "Update a script (application/json)",
    "request" : {
      "urlPath" : "/api/scripts/583j",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : {\n    \"key\" : \"value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"desc\" : {\n    \"key\" : \"value\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fa2bb5e-b6cb-32be-948c-1d6b79da9d5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateScript",
          "schema" : {
            "description" : "A script to transformer otoroshi requests ",
            "properties" : {
              "code" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The code of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "desc" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The description of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "id" : {
                "description" : "The id of the script",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the script",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "desc", "code" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "ed755089-0adf-3df0-bd1a-68330cd3b2f0",
    "name" : "Update a script with a diff - 404",
    "request" : {
      "urlPath" : "/api/scripts/6w0y",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ed755089-0adf-3df0-bd1a-68330cd3b2f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchScript"
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "14141ae2-1f52-3d2f-ac5e-fb7f82ffa8db",
    "name" : "Update a script with a diff - 401",
    "request" : {
      "urlPath" : "/api/scripts/4out",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "14141ae2-1f52-3d2f-ac5e-fb7f82ffa8db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchScript"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "10421eee-e1c9-377b-a97a-2e13d71ab518",
    "name" : "Update a script with a diff - 400",
    "request" : {
      "urlPath" : "/api/scripts/4168",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "10421eee-e1c9-377b-a97a-2e13d71ab518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchScript"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "beb68b39-52da-3eba-b293-234bb7f68107",
    "name" : "Update a script with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/scripts/qs5i",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : {\n    \"key\" : \"value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"desc\" : {\n    \"key\" : \"value\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "beb68b39-52da-3eba-b293-234bb7f68107",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchScript",
          "schema" : {
            "description" : "A script to transformer otoroshi requests ",
            "properties" : {
              "code" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The code of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "desc" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The description of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "id" : {
                "description" : "The id of the script",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the script",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "desc", "code" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "b5d4116d-edc7-3b8a-9e88-5a04c62147c2",
    "name" : "Get a script - 404",
    "request" : {
      "urlPath" : "/api/scripts/n56i",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b5d4116d-edc7-3b8a-9e88-5a04c62147c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findScriptById"
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "7089febf-3bfd-3951-a697-526c3eb19e76",
    "name" : "Get a script - 401",
    "request" : {
      "urlPath" : "/api/scripts/he4r",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7089febf-3bfd-3951-a697-526c3eb19e76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findScriptById"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "af0a7842-6dab-3b31-a548-86e1b0d0ea50",
    "name" : "Get a script - 400",
    "request" : {
      "urlPath" : "/api/scripts/asi8",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "af0a7842-6dab-3b31-a548-86e1b0d0ea50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findScriptById"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "2ec8a96d-e293-3c51-b04e-27eb3f7e8ef2",
    "name" : "Get a script (application/json)",
    "request" : {
      "urlPath" : "/api/scripts/d16g",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : {\n    \"key\" : \"value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"desc\" : {\n    \"key\" : \"value\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ec8a96d-e293-3c51-b04e-27eb3f7e8ef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findScriptById",
          "schema" : {
            "description" : "A script to transformer otoroshi requests ",
            "properties" : {
              "code" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The code of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "desc" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The description of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "id" : {
                "description" : "The id of the script",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the script",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "desc", "code" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "0f684220-c342-397e-bb90-dbe29136cb83",
    "name" : "Delete a script - 404",
    "request" : {
      "urlPath" : "/api/scripts/r5ew",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0f684220-c342-397e-bb90-dbe29136cb83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteScript"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "f3446bad-22e5-3ae7-9715-64944c844556",
    "name" : "Delete a script - 401",
    "request" : {
      "urlPath" : "/api/scripts/818r",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f3446bad-22e5-3ae7-9715-64944c844556",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteScript"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "01c37753-cc8f-3dd8-9ac4-0403e8b313bd",
    "name" : "Delete a script - 400",
    "request" : {
      "urlPath" : "/api/scripts/j486",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "01c37753-cc8f-3dd8-9ac4-0403e8b313bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteScript"
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "b6824d9c-56b8-397d-b4bd-faf736d3f9a8",
    "name" : "Delete a script (application/json)",
    "request" : {
      "urlPath" : "/api/scripts/9etq",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6824d9c-56b8-397d-b4bd-faf736d3f9a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteScript",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "87f4abcd-1e10-3f22-a57a-dc63f597d933",
    "name" : "Compile a script - 404",
    "request" : {
      "urlPath" : "/api/scripts/_compile",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "87f4abcd-1e10-3f22-a57a-dc63f597d933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "compileScript"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "dad630b9-c32e-3bab-aa51-7db90f2bfba5",
    "name" : "Compile a script - 401",
    "request" : {
      "urlPath" : "/api/scripts/_compile",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dad630b9-c32e-3bab-aa51-7db90f2bfba5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "compileScript"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "f89e6063-1406-345e-8513-e33a9239fdab",
    "name" : "Compile a script - 400",
    "request" : {
      "urlPath" : "/api/scripts/_compile",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f89e6063-1406-345e-8513-e33a9239fdab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "compileScript"
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "74024d55-0c27-34c2-b1c5-5b1602492f11",
    "name" : "Compile a script (application/json)",
    "request" : {
      "urlPath" : "/api/scripts/_compile",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"error\" : {\n    \"file\" : {\n      \"key\" : \"value\"\n    },\n    \"line\" : \"a string value\",\n    \"column\" : \"a string value\",\n    \"message\" : {\n      \"key\" : \"value\"\n    },\n    \"rawMessage\" : {\n      \"key\" : \"value\"\n    }\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74024d55-0c27-34c2-b1c5-5b1602492f11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "compileScript",
          "schema" : {
            "description" : "The result of the compilation of a Script",
            "properties" : {
              "done" : {
                "description" : "Is the task done or not",
                "example" : true,
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/ScriptCompilationError"
              }
            },
            "required" : [ "done" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "dc3e2da8-9bfd-3fce-8cad-957ec457f81c",
    "name" : "Create a new script - 404",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "dc3e2da8-9bfd-3fce-8cad-957ec457f81c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createScript"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "c985223c-207a-3225-8bce-8cb2fb778012",
    "name" : "Create a new script - 401",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c985223c-207a-3225-8bce-8cb2fb778012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createScript"
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "c4825346-cc53-34bd-9cf4-809df00fe676",
    "name" : "Create a new script - 400",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c4825346-cc53-34bd-9cf4-809df00fe676",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createScript"
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "67512c0a-e6cc-347f-9c75-d607cde46cb5",
    "name" : "Create a new script (application/json)",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : {\n    \"key\" : \"value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"desc\" : {\n    \"key\" : \"value\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67512c0a-e6cc-347f-9c75-d607cde46cb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createScript",
          "schema" : {
            "description" : "A script to transformer otoroshi requests ",
            "properties" : {
              "code" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The code of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "desc" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The description of the script",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "id" : {
                "description" : "The id of the script",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the script",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "desc", "code" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "ed677bf9-0d25-3956-8b37-74177f99d803",
    "name" : "Get all scripts - 404",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ed677bf9-0d25-3956-8b37-74177f99d803",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllScripts"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "1848b4a8-70c8-348e-9de0-96fc4ce0e25b",
    "name" : "Get all scripts - 401",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1848b4a8-70c8-348e-9de0-96fc4ce0e25b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllScripts"
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "6ad7f873-ff10-3ef3-8cd9-f56635010f4f",
    "name" : "Get all scripts - 400",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6ad7f873-ff10-3ef3-8cd9-f56635010f4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllScripts"
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "5a041ce3-1bae-3d3d-aa46-bb3f303989c7",
    "name" : "Get all scripts (application/json)",
    "request" : {
      "urlPath" : "/api/scripts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"code\" : {\n    \"key\" : \"value\"\n  },\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"desc\" : {\n    \"key\" : \"value\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a041ce3-1bae-3d3d-aa46-bb3f303989c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllScripts",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Script"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "69483c18-6278-398b-bfb6-cfde9a1fbd82",
    "name" : "Import the full state of Otoroshi - 404",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "69483c18-6278-398b-bfb6-cfde9a1fbd82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImport"
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "53217060-d1bf-3eaa-8503-c02289dc45b0",
    "name" : "Import the full state of Otoroshi - 401",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "53217060-d1bf-3eaa-8503-c02289dc45b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImport"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "b4b8f63d-b79c-3066-ad3a-e6cef863d252",
    "name" : "Import the full state of Otoroshi - 400",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b4b8f63d-b79c-3066-ad3a-e6cef863d252",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImport"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "83b5065f-e40e-370e-a31b-9986304721c2",
    "name" : "Import the full state of Otoroshi (application/json)",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83b5065f-e40e-370e-a31b-9986304721c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImport",
          "schema" : {
            "properties" : {
              "done" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "done" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "ef3d52c5-74c4-30ab-a408-984829b0c5d5",
    "name" : "Export the full state of Otoroshi - 404",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ef3d52c5-74c4-30ab-a408-984829b0c5d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullExport"
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "1c6c0bf3-ba50-39b5-8378-3c84b0add9a9",
    "name" : "Export the full state of Otoroshi - 401",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1c6c0bf3-ba50-39b5-8378-3c84b0add9a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullExport"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "48585cbe-a4ca-3539-aa6b-179244d2d2d2",
    "name" : "Export the full state of Otoroshi - 400",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "48585cbe-a4ca-3539-aa6b-179244d2d2d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullExport"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "96f54216-3484-30e1-8d67-5a81684b82b1",
    "name" : "Export the full state of Otoroshi (application/json)",
    "request" : {
      "urlPath" : "/api/otoroshi.json",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2017-07-21T17:32:28Z\",\n  \"errorTemplates\" : [ {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  }, {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  }, {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  }, {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  }, {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  }, {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  }, {\n    \"templateMaintenance\" : \"a string value\",\n    \"templateBuild\" : \"a string value\",\n    \"messages\" : {\n      \"key\" : \"value\"\n    },\n    \"template50x\" : \"a string value\",\n    \"template40x\" : \"a string value\",\n    \"serviceId\" : \"a string value\"\n  } ],\n  \"serviceDescriptors\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"cors\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n      \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"maxAge\" : 123123,\n      \"allowCredentials\" : true,\n      \"enabled\" : true,\n      \"allowOrigin\" : \"a string value\"\n    },\n    \"forceHttps\" : true,\n    \"matchingRoot\" : \"a string value\",\n    \"buildMode\" : true,\n    \"chaosConfig\" : {\n      \"badResponsesFaultConfig\" : {\n        \"responses\" : [ {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        } ],\n        \"ratio\" : 42.2\n      },\n      \"largeResponseFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"latencyInjectionFaultConfig\" : {\n        \"from\" : 123123,\n        \"to\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"largeRequestFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"enabled\" : true\n    },\n    \"secComSettings\" : {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"kty\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"ttl\" : 123,\n      \"timeout\" : 123,\n      \"url\" : \"a string value\"\n    },\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"localHost\" : \"a string value\",\n    \"root\" : \"a string value\",\n    \"additionalHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"api\" : {\n      \"exposeApi\" : true,\n      \"openApiDescriptorUrl\" : \"http://www.google.com\"\n    },\n    \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n    \"ipFiltering\" : {\n      \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n      \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n    },\n    \"sendOtoroshiHeadersBack\" : true,\n    \"redirection\" : {\n      \"code\" : 123123,\n      \"to\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"headersVerification\" : {\n      \"key\" : \"value\"\n    },\n    \"redirectToLocal\" : true,\n    \"userFacing\" : true,\n    \"authConfigRef\" : \"a string value\",\n    \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"xForwardedHeaders\" : true,\n    \"transformerRef\" : \"a string value\",\n    \"Canary\" : {\n      \"root\" : \"a string value\",\n      \"targets\" : [ {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      } ],\n      \"enabled\" : true,\n      \"traffic\" : 123123\n    },\n    \"groups\" : [ \"a string value\" ],\n    \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n    \"gzip\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n      \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"whiteList\" : [ \"a string value\", \"a string value\" ],\n      \"chunkedThreshold\" : 123,\n      \"compressionLevel\" : 123123,\n      \"enabled\" : true,\n      \"bufferSize\" : 123\n    },\n    \"clientConfig\" : {\n      \"retries\" : 123123,\n      \"sampleInterval\" : 123123,\n      \"useCircuitBreaker\" : true,\n      \"backoffFactor\" : 123123,\n      \"maxErrors\" : 123123,\n      \"retryInitialDelay\" : 123123,\n      \"callTimeout\" : 123123,\n      \"globalTimeout\" : 123123\n    },\n    \"env\" : \"a string value\",\n    \"enforceSecureCommunication\" : true,\n    \"jwtVerifier\" : {\n      \"algoSettings\" : {\n        \"size\" : 123123,\n        \"secret\" : \"a string value\",\n        \"type\" : \"a string value\"\n      },\n      \"source\" : {\n        \"name\" : \"a string value\",\n        \"type\" : \"a string value\",\n        \"remove\" : \"a string value\"\n      },\n      \"strategy\" : {\n        \"algoSettings\" : {\n          \"size\" : 123123,\n          \"secret\" : \"a string value\",\n          \"type\" : \"a string value\"\n        },\n        \"verificationSettings\" : {\n          \"mappingSettings\" : {\n            \"values\" : {\n              \"key\" : \"value\"\n            },\n            \"map\" : {\n              \"key\" : \"value\"\n            },\n            \"remove\" : [ \"a string value\", \"a string value\", \"a string value\" ]\n          },\n          \"fields\" : {\n            \"key\" : \"value\"\n          }\n        },\n        \"type\" : \"a string value\"\n      },\n      \"strict\" : true,\n      \"type\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"clientValidatorRef\" : \"a string value\",\n    \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"localScheme\" : \"a string value\",\n    \"privateApp\" : true,\n    \"domain\" : \"a string value\",\n    \"healthCheck\" : {\n      \"enabled\" : true,\n      \"url\" : \"http://www.google.com\"\n    },\n    \"name\" : \"a string value\",\n    \"statsdConfig\" : {\n      \"port\" : 123123,\n      \"datadog\" : true,\n      \"host\" : \"a string value\"\n    },\n    \"matchingHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"subdomain\" : \"a string value\",\n    \"overrideHost\" : true,\n    \"maintenanceMode\" : true\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"cors\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"maxAge\" : 123123,\n      \"allowCredentials\" : true,\n      \"enabled\" : true,\n      \"allowOrigin\" : \"a string value\"\n    },\n    \"forceHttps\" : true,\n    \"matchingRoot\" : \"a string value\",\n    \"buildMode\" : true,\n    \"chaosConfig\" : {\n      \"badResponsesFaultConfig\" : {\n        \"responses\" : [ {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        } ],\n        \"ratio\" : 42.2\n      },\n      \"largeResponseFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"latencyInjectionFaultConfig\" : {\n        \"from\" : 123123,\n        \"to\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"largeRequestFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"enabled\" : true\n    },\n    \"secComSettings\" : {\n      \"size\" : 123123,\n      \"secret\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"localHost\" : \"a string value\",\n    \"root\" : \"a string value\",\n    \"additionalHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"api\" : {\n      \"exposeApi\" : true,\n      \"openApiDescriptorUrl\" : \"http://www.google.com\"\n    },\n    \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n    \"ipFiltering\" : {\n      \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\" ],\n      \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n    },\n    \"sendOtoroshiHeadersBack\" : true,\n    \"redirection\" : {\n      \"code\" : 123123,\n      \"to\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"headersVerification\" : {\n      \"key\" : \"value\"\n    },\n    \"redirectToLocal\" : true,\n    \"userFacing\" : true,\n    \"authConfigRef\" : \"a string value\",\n    \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"xForwardedHeaders\" : true,\n    \"transformerRef\" : \"a string value\",\n    \"Canary\" : {\n      \"root\" : \"a string value\",\n      \"targets\" : [ {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      } ],\n      \"enabled\" : true,\n      \"traffic\" : 123123\n    },\n    \"groups\" : [ \"a string value\" ],\n    \"privatePatterns\" : [ \"a string value\", \"a string value\" ],\n    \"gzip\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\" ],\n      \"blackList\" : [ \"a string value\" ],\n      \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"chunkedThreshold\" : 123,\n      \"compressionLevel\" : 123123,\n      \"enabled\" : true,\n      \"bufferSize\" : 123\n    },\n    \"clientConfig\" : {\n      \"retries\" : 123123,\n      \"sampleInterval\" : 123123,\n      \"useCircuitBreaker\" : true,\n      \"backoffFactor\" : 123123,\n      \"maxErrors\" : 123123,\n      \"retryInitialDelay\" : 123123,\n      \"callTimeout\" : 123123,\n      \"globalTimeout\" : 123123\n    },\n    \"env\" : \"a string value\",\n    \"enforceSecureCommunication\" : true,\n    \"jwtVerifier\" : {\n      \"algoSettings\" : {\n        \"headers\" : {\n          \"key\" : \"value\"\n        },\n        \"kty\" : \"a string value\",\n        \"type\" : \"a string value\",\n        \"ttl\" : 123,\n        \"timeout\" : 123,\n        \"url\" : \"a string value\"\n      },\n      \"source\" : {\n        \"name\" : \"a string value\",\n        \"type\" : \"a string value\",\n        \"remove\" : \"a string value\"\n      },\n      \"strategy\" : {\n        \"algoSettings\" : {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"kty\" : \"a string value\",\n          \"type\" : \"a string value\",\n          \"ttl\" : 123,\n          \"timeout\" : 123,\n          \"url\" : \"a string value\"\n        },\n        \"verificationSettings\" : {\n          \"mappingSettings\" : {\n            \"values\" : {\n              \"key\" : \"value\"\n            },\n            \"map\" : {\n              \"key\" : \"value\"\n            },\n            \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n          },\n          \"fields\" : {\n            \"key\" : \"value\"\n          }\n        },\n        \"type\" : \"a string value\"\n      },\n      \"strict\" : true,\n      \"type\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"clientValidatorRef\" : \"a string value\",\n    \"publicPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"localScheme\" : \"a string value\",\n    \"privateApp\" : true,\n    \"domain\" : \"a string value\",\n    \"healthCheck\" : {\n      \"enabled\" : true,\n      \"url\" : \"http://www.google.com\"\n    },\n    \"name\" : \"a string value\",\n    \"statsdConfig\" : {\n      \"port\" : 123123,\n      \"datadog\" : true,\n      \"host\" : \"a string value\"\n    },\n    \"matchingHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"subdomain\" : \"a string value\",\n    \"overrideHost\" : true,\n    \"maintenanceMode\" : true\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"cors\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"exposeHeaders\" : [ \"a string value\" ],\n      \"maxAge\" : 123123,\n      \"allowCredentials\" : true,\n      \"enabled\" : true,\n      \"allowOrigin\" : \"a string value\"\n    },\n    \"forceHttps\" : true,\n    \"matchingRoot\" : \"a string value\",\n    \"buildMode\" : true,\n    \"chaosConfig\" : {\n      \"badResponsesFaultConfig\" : {\n        \"responses\" : [ {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        } ],\n        \"ratio\" : 42.2\n      },\n      \"largeResponseFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"latencyInjectionFaultConfig\" : {\n        \"from\" : 123123,\n        \"to\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"largeRequestFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"enabled\" : true\n    },\n    \"secComSettings\" : {\n      \"size\" : 123123,\n      \"secret\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"localHost\" : \"a string value\",\n    \"root\" : \"a string value\",\n    \"additionalHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"api\" : {\n      \"exposeApi\" : true,\n      \"openApiDescriptorUrl\" : \"http://www.google.com\"\n    },\n    \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n    \"ipFiltering\" : {\n      \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\" ],\n      \"whitelist\" : [ \"192.192.192.192\" ]\n    },\n    \"sendOtoroshiHeadersBack\" : true,\n    \"redirection\" : {\n      \"code\" : 123123,\n      \"to\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"headersVerification\" : {\n      \"key\" : \"value\"\n    },\n    \"redirectToLocal\" : true,\n    \"userFacing\" : true,\n    \"authConfigRef\" : \"a string value\",\n    \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"xForwardedHeaders\" : true,\n    \"transformerRef\" : \"a string value\",\n    \"Canary\" : {\n      \"root\" : \"a string value\",\n      \"targets\" : [ {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      } ],\n      \"enabled\" : true,\n      \"traffic\" : 123123\n    },\n    \"groups\" : [ \"a string value\" ],\n    \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"gzip\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\" ],\n      \"blackList\" : [ \"a string value\", \"a string value\" ],\n      \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"chunkedThreshold\" : 123,\n      \"compressionLevel\" : 123123,\n      \"enabled\" : true,\n      \"bufferSize\" : 123\n    },\n    \"clientConfig\" : {\n      \"retries\" : 123123,\n      \"sampleInterval\" : 123123,\n      \"useCircuitBreaker\" : true,\n      \"backoffFactor\" : 123123,\n      \"maxErrors\" : 123123,\n      \"retryInitialDelay\" : 123123,\n      \"callTimeout\" : 123123,\n      \"globalTimeout\" : 123123\n    },\n    \"env\" : \"a string value\",\n    \"enforceSecureCommunication\" : true,\n    \"jwtVerifier\" : {\n      \"algoSettings\" : {\n        \"privateKey\" : \"a string value\",\n        \"size\" : 123123,\n        \"publicKey\" : \"a string value\",\n        \"type\" : \"a string value\"\n      },\n      \"source\" : {\n        \"name\" : \"a string value\",\n        \"type\" : \"a string value\"\n      },\n      \"strategy\" : {\n        \"transformSettings\" : {\n          \"mappingSettings\" : {\n            \"values\" : {\n              \"key\" : \"value\"\n            },\n            \"map\" : {\n              \"key\" : \"value\"\n            },\n            \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n          },\n          \"location\" : {\n            \"name\" : \"a string value\",\n            \"type\" : \"a string value\"\n          }\n        },\n        \"algoSettings\" : {\n          \"privateKey\" : \"a string value\",\n          \"size\" : 123123,\n          \"publicKey\" : \"a string value\",\n          \"type\" : \"a string value\"\n        },\n        \"verificationSettings\" : {\n          \"mappingSettings\" : {\n            \"values\" : {\n              \"key\" : \"value\"\n            },\n            \"map\" : {\n              \"key\" : \"value\"\n            },\n            \"remove\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ]\n          },\n          \"fields\" : {\n            \"key\" : \"value\"\n          }\n        },\n        \"type\" : \"a string value\"\n      },\n      \"strict\" : true,\n      \"type\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"clientValidatorRef\" : \"a string value\",\n    \"publicPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"localScheme\" : \"a string value\",\n    \"privateApp\" : true,\n    \"domain\" : \"a string value\",\n    \"healthCheck\" : {\n      \"enabled\" : true,\n      \"url\" : \"http://www.google.com\"\n    },\n    \"name\" : \"a string value\",\n    \"statsdConfig\" : {\n      \"port\" : 123123,\n      \"datadog\" : true,\n      \"host\" : \"a string value\"\n    },\n    \"matchingHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"subdomain\" : \"a string value\",\n    \"overrideHost\" : true,\n    \"maintenanceMode\" : true\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"cors\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowMethods\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"allowHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"exposeHeaders\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"maxAge\" : 123123,\n      \"allowCredentials\" : true,\n      \"enabled\" : true,\n      \"allowOrigin\" : \"a string value\"\n    },\n    \"forceHttps\" : true,\n    \"matchingRoot\" : \"a string value\",\n    \"buildMode\" : true,\n    \"chaosConfig\" : {\n      \"badResponsesFaultConfig\" : {\n        \"responses\" : [ {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        }, {\n          \"headers\" : {\n            \"key\" : \"value\"\n          },\n          \"body\" : \"a string value\",\n          \"status\" : 123123\n        } ],\n        \"ratio\" : 42.2\n      },\n      \"largeResponseFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"latencyInjectionFaultConfig\" : {\n        \"from\" : 123123,\n        \"to\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"largeRequestFaultConfig\" : {\n        \"additionalRequestSize\" : 123123,\n        \"ratio\" : 42.2\n      },\n      \"enabled\" : true\n    },\n    \"secComSettings\" : {\n      \"privateKey\" : \"a string value\",\n      \"size\" : 123123,\n      \"publicKey\" : \"a string value\",\n      \"type\" : \"a string value\"\n    },\n    \"targets\" : [ {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    }, {\n      \"scheme\" : \"a string value\",\n      \"host\" : \"www.google.com\"\n    } ],\n    \"enabled\" : true,\n    \"localHost\" : \"a string value\",\n    \"root\" : \"a string value\",\n    \"additionalHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"api\" : {\n      \"exposeApi\" : true,\n      \"openApiDescriptorUrl\" : \"http://www.google.com\"\n    },\n    \"id\" : \"110e8400-e29b-11d4-a716-446655440000\",\n    \"ipFiltering\" : {\n      \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n      \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n    },\n    \"sendOtoroshiHeadersBack\" : true,\n    \"redirection\" : {\n      \"code\" : 123123,\n      \"to\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"headersVerification\" : {\n      \"key\" : \"value\"\n    },\n    \"redirectToLocal\" : true,\n    \"userFacing\" : true,\n    \"authConfigRef\" : \"a string value\",\n    \"secComExcludedPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"xForwardedHeaders\" : true,\n    \"transformerRef\" : \"a string value\",\n    \"Canary\" : {\n      \"root\" : \"a string value\",\n      \"targets\" : [ {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      }, {\n        \"scheme\" : \"a string value\",\n        \"host\" : \"www.google.com\"\n      } ],\n      \"enabled\" : true,\n      \"traffic\" : 123123\n    },\n    \"groups\" : [ \"a string value\" ],\n    \"privatePatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"gzip\" : {\n      \"excludedPatterns\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"blackList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"whiteList\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n      \"chunkedThreshold\" : 123,\n      \"compressionLevel\" : 123123,\n      \"enabled\" : true,\n      \"bufferSize\" : 123\n    },\n    \"clientConfig\" : {\n      \"retries\" : 123123,\n      \"sampleInterval\" : 123123,\n      \"useCircuitBreaker\" : true,\n      \"backoffFactor\" : 123123,\n      \"maxErrors\" : 123123,\n      \"retryInitialDelay\" : 123123,\n      \"callTimeout\" : 123123,\n      \"globalTimeout\" : 123123\n    },\n    \"env\" : \"a string value\",\n    \"enforceSecureCommunication\" : true,\n    \"jwtVerifier\" : {\n      \"id\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"enabled\" : true\n    },\n    \"clientValidatorRef\" : \"a string value\",\n    \"publicPatterns\" : [ \"a string value\", \"a string value\" ],\n    \"localScheme\" : \"a string value\",\n    \"privateApp\" : true,\n    \"domain\" : \"a string value\",\n    \"healthCheck\" : {\n      \"enabled\" : true,\n      \"url\" : \"http://www.google.com\"\n    },\n    \"name\" : \"a string value\",\n    \"statsdConfig\" : {\n      \"port\" : 123123,\n      \"datadog\" : true,\n      \"host\" : \"a string value\"\n    },\n    \"matchingHeaders\" : {\n      \"key\" : \"value\"\n    },\n    \"subdomain\" : \"a string value\",\n    \"overrideHost\" : true,\n    \"maintenanceMode\" : true\n  } ],\n  \"appConfig\" : {\n    \"key\" : \"value\"\n  },\n  \"simpleAdmins\" : [ {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  } ],\n  \"stats\" : {\n    \"dataOut\" : 123,\n    \"calls\" : 123,\n    \"dataIn\" : 123\n  },\n  \"apiKeys\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"clientId\" : \"a string value\",\n    \"monthlyQuota\" : 123,\n    \"throttlingQuota\" : 123,\n    \"clientName\" : \"a string value\",\n    \"authorizedEntities\" : [ \"a string value\" ],\n    \"clientSecret\" : \"a string value\",\n    \"dailyQuota\" : 123,\n    \"enabled\" : true\n  } ],\n  \"serviceGroups\" : [ {\n    \"name\" : \"a string value\",\n    \"description\" : \"a string value\",\n    \"id\" : \"a string value\"\n  }, {\n    \"name\" : \"a string value\",\n    \"description\" : \"a string value\",\n    \"id\" : \"a string value\"\n  }, {\n    \"name\" : \"a string value\",\n    \"description\" : \"a string value\",\n    \"id\" : \"a string value\"\n  }, {\n    \"name\" : \"a string value\",\n    \"description\" : \"a string value\",\n    \"id\" : \"a string value\"\n  }, {\n    \"name\" : \"a string value\",\n    \"description\" : \"a string value\",\n    \"id\" : \"a string value\"\n  }, {\n    \"name\" : \"a string value\",\n    \"description\" : \"a string value\",\n    \"id\" : \"a string value\"\n  } ],\n  \"label\" : \"a string value\",\n  \"config\" : {\n    \"maxLogsSize\" : 123123,\n    \"apiReadOnly\" : true,\n    \"analyticsWebhooks\" : [ {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    } ],\n    \"elasticReadsConfig\" : {\n      \"clusterUri\" : \"a string value\",\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"password\" : \"a string value\",\n      \"index\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"user\" : \"a string value\"\n    },\n    \"limitConcurrentRequests\" : true,\n    \"maxConcurrentRequests\" : 123,\n    \"endlessIpAddresses\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"maxHttp10ResponseSize\" : 123,\n    \"streamEntityOnly\" : true,\n    \"backofficeAuth0Config\" : {\n      \"clientId\" : \"a string value\",\n      \"domain\" : \"a string value\",\n      \"callbackUrl\" : \"a string value\",\n      \"clientSecret\" : \"a string value\"\n    },\n    \"alertsEmails\" : [ \"admin@otoroshi.io\", \"admin@otoroshi.io\" ],\n    \"autoLinkToDefaultGroup\" : true,\n    \"alertsWebhooks\" : [ {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    }, {\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"url\" : \"http://www.google.com\"\n    } ],\n    \"middleFingers\" : true,\n    \"privateAppsAuth0Config\" : {\n      \"clientId\" : \"a string value\",\n      \"domain\" : \"a string value\",\n      \"callbackUrl\" : \"a string value\",\n      \"clientSecret\" : \"a string value\"\n    },\n    \"throttlingQuota\" : 123,\n    \"cleverSettings\" : {\n      \"consumerSecret\" : \"a string value\",\n      \"orgaId\" : \"a string value\",\n      \"secret\" : \"a string value\",\n      \"consumerKey\" : \"a string value\",\n      \"token\" : \"a string value\"\n    },\n    \"u2fLoginOnly\" : true,\n    \"ipFiltering\" : {\n      \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n      \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n    },\n    \"mailerSettings\" : {\n      \"eu\" : true,\n      \"apiKey\" : \"a string value\",\n      \"domain\" : \"a string value\",\n      \"apiKeyPrivate\" : \"a string value\",\n      \"header\" : {\n        \"key\" : \"value\"\n      },\n      \"apiKeyPublic\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"url\" : \"a string value\"\n    },\n    \"perIpThrottlingQuota\" : 123,\n    \"elasticWritesConfigs\" : [ {\n      \"clusterUri\" : \"a string value\",\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"password\" : \"a string value\",\n      \"index\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"user\" : \"a string value\"\n    }, {\n      \"clusterUri\" : \"a string value\",\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"password\" : \"a string value\",\n      \"index\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"user\" : \"a string value\"\n    }, {\n      \"clusterUri\" : \"a string value\",\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"password\" : \"a string value\",\n      \"index\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"user\" : \"a string value\"\n    }, {\n      \"clusterUri\" : \"a string value\",\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"password\" : \"a string value\",\n      \"index\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"user\" : \"a string value\"\n    }, {\n      \"clusterUri\" : \"a string value\",\n      \"headers\" : {\n        \"key\" : \"value\"\n      },\n      \"password\" : \"a string value\",\n      \"index\" : \"a string value\",\n      \"type\" : \"a string value\",\n      \"user\" : \"a string value\"\n    } ],\n    \"lines\" : [ \"a string value\", \"a string value\" ],\n    \"useCircuitBreakers\" : true\n  },\n  \"dateRaw\" : 123,\n  \"admins\" : [ {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"registration\" : {\n      \"key\" : \"value\"\n    },\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"registration\" : {\n      \"key\" : \"value\"\n    },\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  }, {\n    \"createdAt\" : 123,\n    \"password\" : \"a string value\",\n    \"registration\" : {\n      \"key\" : \"value\"\n    },\n    \"label\" : \"a string value\",\n    \"username\" : \"a string value\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96f54216-3484-30e1-8d67-5a81684b82b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullExport",
          "schema" : {
            "description" : "The structure that can be imported to or exported from Otoroshi. It represent the memory state of Otoroshi",
            "properties" : {
              "admins" : {
                "description" : "Current U2F admin at the time of export",
                "items" : {
                  "description" : "Administrator using FIDO U2F device to access Otoroshi",
                  "properties" : {
                    "createdAt" : {
                      "description" : "The creation date of the user",
                      "example" : 123,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "label" : {
                      "description" : "The label for the user",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "password" : {
                      "description" : "The hashed password of the user",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "registration" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "The U2F registration slug",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "username" : {
                      "description" : "The email address of the user",
                      "example" : "a string value",
                      "type" : "string"
                    }
                  },
                  "required" : [ "username", "label", "password", "createdAt", "registration" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "apiKeys" : {
                "description" : "Current apik keys at the time of export",
                "items" : {
                  "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
                  "properties" : {
                    "authorizedEntities" : {
                      "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                      "example" : [ "a string value" ],
                      "items" : {
                        "example" : "a string value",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "clientId" : {
                      "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "clientName" : {
                      "description" : "The name of the api key, for humans ;-)",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "clientSecret" : {
                      "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "dailyQuota" : {
                      "description" : "Authorized number of calls per day",
                      "example" : 123,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "enabled" : {
                      "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "metadata" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Bunch of metadata for the key",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "monthlyQuota" : {
                      "description" : "Authorized number of calls per month",
                      "example" : 123,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "throttlingQuota" : {
                      "description" : "Authorized number of calls per second, measured on 10 seconds",
                      "example" : 123,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "appConfig" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Current env variables at the time of export",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "config" : {
                "$ref" : "#/components/schemas/GlobalConfig"
              },
              "date" : {
                "example" : "2017-07-21T17:32:28Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateRaw" : {
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "errorTemplates" : {
                "description" : "Current error templates at the time of export",
                "items" : {
                  "description" : "Error templates for a service descriptor",
                  "properties" : {
                    "messages" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Map for custom messages",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "serviceId" : {
                      "description" : "The Id of the service for which the error template is enabled",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "template40x" : {
                      "description" : "The html template for 40x errors",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "template50x" : {
                      "description" : "The html template for 50x errors",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "templateBuild" : {
                      "description" : "The html template for build page",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "templateMaintenance" : {
                      "description" : "The html template for maintenance page",
                      "example" : "a string value",
                      "type" : "string"
                    }
                  },
                  "required" : [ "serviceId", "template40x", "template50x", "templateBuild", "templateMaintenance", "messages" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "label" : {
                "example" : "a string value",
                "type" : "string"
              },
              "serviceDescriptors" : {
                "description" : "Current service descriptors at the time of export",
                "items" : {
                  "description" : "An otoroshi service descriptor. Represent a forward HTTP call on a domain to another location with some optional api management mecanism",
                  "properties" : {
                    "Canary" : {
                      "$ref" : "#/components/schemas/Canary"
                    },
                    "additionalHeaders" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Specify headers that will be added to each client request. Useful to add authentication",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "api" : {
                      "$ref" : "#/components/schemas/ExposedApi"
                    },
                    "authConfigRef" : {
                      "description" : "A reference to a global auth module config",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "buildMode" : {
                      "description" : "Display a construction page when a user try to use the service",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "chaosConfig" : {
                      "$ref" : "#/components/schemas/ChaosConfig"
                    },
                    "clientConfig" : {
                      "$ref" : "#/components/schemas/ClientConfig"
                    },
                    "clientValidatorRef" : {
                      "description" : "A reference to validation authority",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "cors" : {
                      "$ref" : "#/components/schemas/CorsSettings"
                    },
                    "domain" : {
                      "description" : "The domain on which the service is available.",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "enabled" : {
                      "description" : "Activate or deactivate your service. Once disabled, users will get an error page saying the service does not exist",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "enforceSecureCommunication" : {
                      "description" : "When enabled, Otoroshi will try to exchange headers with downstream service to ensure no one else can use the service from outside",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "env" : {
                      "description" : "The line on which the service is available. Based on that value, the name of the line will be appended to the subdomain. For line prod, nothing will be appended. For example, if the subdomain is 'foo' and line is 'preprod', then the exposed service will be available at 'foo.preprod.mydomain'",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "forceHttps" : {
                      "description" : "Will force redirection to https:// if not present",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "groups" : {
                      "description" : "Each service descriptor is attached to groups. A group can have one or more services. Each API key is linked to a group and allow access to every service in the group",
                      "example" : [ "a string value" ],
                      "items" : {
                        "example" : "a string value",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "gzip" : {
                      "$ref" : "#/components/schemas/Gzip"
                    },
                    "headersVerification" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Specify headers that will be verified after routing.",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "healthCheck" : {
                      "$ref" : "#/components/schemas/HealthCheck"
                    },
                    "id" : {
                      "description" : "A unique random string to identify your service",
                      "example" : "110e8400-e29b-11d4-a716-446655440000",
                      "format" : "uuid",
                      "type" : "string"
                    },
                    "ipFiltering" : {
                      "$ref" : "#/components/schemas/IpFiltering"
                    },
                    "jwtVerifier" : {
                      "oneOf" : [ {
                        "$ref" : "#/components/schemas/LocalJwtVerifier"
                      }, {
                        "$ref" : "#/components/schemas/RefJwtVerifier"
                      } ]
                    },
                    "localHost" : {
                      "description" : "The host used localy, mainly localhost:xxxx",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "localScheme" : {
                      "description" : "The scheme used localy, mainly http",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "maintenanceMode" : {
                      "description" : "Display a maintainance page when a user try to use the service",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "matchingHeaders" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Specify headers that MUST be present on client request to route it. Useful to implement versioning",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "matchingRoot" : {
                      "description" : "The root path on which the service is available",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "metadata" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "Just a bunch of random properties",
                      "example" : {
                        "key" : "value"
                      },
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "The name of your service. Only for debug and human readability purposes",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "overrideHost" : {
                      "description" : "Host header will be overriden with Host of the target",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "privateApp" : {
                      "description" : "When enabled, user will be allowed to use the service (UI) only if they are registered users of the private apps domain",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "privatePatterns" : {
                      "description" : "If you define a public pattern that is a little bit too much, you can make some of public URL private again",
                      "items" : {
                        "example" : "a string value",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "publicPatterns" : {
                      "description" : "By default, every services are private only and you'll need an API key to access it. However, if you want to expose a public UI, you can define one or more public patterns (regex) to allow access to anybody. For example if you want to allow anybody on any URL, just use '/.*'",
                      "items" : {
                        "example" : "a string value",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "redirectToLocal" : {
                      "description" : "If you work locally with Otoroshi, you may want to use that feature to redirect one particuliar service to a local host. For example, you can relocate https://foo.preprod.bar.com to http://localhost:8080 to make some tests",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "redirection" : {
                      "$ref" : "#/components/schemas/RedirectionSettings"
                    },
                    "root" : {
                      "description" : "Otoroshi will append this root to any target choosen. If the specified root is '/api/foo', then a request to https://yyyyyyy/bar will actually hit https://xxxxxxxxx/api/foo/bar",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "secComExcludedPatterns" : {
                      "description" : "URI patterns excluded from secured communications",
                      "items" : {
                        "example" : "a string value",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "secComSettings" : {
                      "oneOf" : [ {
                        "$ref" : "#/components/schemas/HSAlgoSettings"
                      }, {
                        "$ref" : "#/components/schemas/RSAlgoSettings"
                      }, {
                        "$ref" : "#/components/schemas/ESAlgoSettings"
                      }, {
                        "$ref" : "#/components/schemas/JWKSAlgoSettings"
                      } ]
                    },
                    "sendOtoroshiHeadersBack" : {
                      "description" : "When enabled, Otoroshi will send headers to consumer like request id, client latency, overhead, etc ...",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "statsdConfig" : {
                      "$ref" : "#/components/schemas/StatsdConfig"
                    },
                    "subdomain" : {
                      "description" : "The subdomain on which the service is available",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "targets" : {
                      "description" : "The list of target that Otoroshi will proxy and expose through the subdomain defined before. Otoroshi will do round-robin load balancing between all those targets with circuit breaker mecanism to avoid cascading failures",
                      "items" : {
                        "$ref" : "#/components/schemas/Target"
                      },
                      "type" : "array"
                    },
                    "transformerRef" : {
                      "description" : "A reference to a request transformer",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "userFacing" : {
                      "description" : "The fact that this service will be seen by users and cannot be impacted by the Snow Monkey",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "xForwardedHeaders" : {
                      "description" : "Send X-Forwarded-* headers",
                      "example" : true,
                      "type" : "boolean"
                    }
                  },
                  "required" : [ "id", "groups", "name", "env", "domain", "subdomain", "targets", "root", "enabled", "privateApp", "forceHttps", "maintenanceMode", "buildMode", "enforceSecureCommunication" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "serviceGroups" : {
                "description" : "Current service groups at the time of export",
                "items" : {
                  "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
                  "properties" : {
                    "description" : {
                      "description" : "The descriptoin of the group",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "The name of the group",
                      "example" : "a string value",
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "simpleAdmins" : {
                "description" : "Current simple admins at the time of export",
                "items" : {
                  "description" : "Administrator using just login/password tuple to access Otoroshi",
                  "properties" : {
                    "createdAt" : {
                      "description" : "The creation date of the user",
                      "example" : 123,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "label" : {
                      "description" : "The label for the user",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "password" : {
                      "description" : "The hashed password of the user",
                      "example" : "a string value",
                      "type" : "string"
                    },
                    "username" : {
                      "description" : "The email address of the user",
                      "example" : "a string value",
                      "type" : "string"
                    }
                  },
                  "required" : [ "username", "label", "password", "createdAt" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "stats" : {
                "$ref" : "#/components/schemas/ImportExportStats"
              }
            },
            "required" : [ "label", "dateRaw", "date", "stats", "config", "admins", "simpleAdmins", "serviceGroups", "apiKeys", "serviceDescriptors", "errorTemplates" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "8605f2a9-d51c-3d5e-a511-3c24b5819193",
    "name" : "Get live feed of otoroshi stats - 404",
    "request" : {
      "urlPath" : "/api/live/fu81",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8605f2a9-d51c-3d5e-a511-3c24b5819193",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceLiveStats"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "0c5f6964-c111-359f-8ede-0c61e0a38672",
    "name" : "Get live feed of otoroshi stats - 401",
    "request" : {
      "urlPath" : "/api/live/03z6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0c5f6964-c111-359f-8ede-0c61e0a38672",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceLiveStats"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "8f1b95b2-8390-3ef2-8305-26489956244a",
    "name" : "Get live feed of otoroshi stats - 400",
    "request" : {
      "urlPath" : "/api/live/5b82",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8f1b95b2-8390-3ef2-8305-26489956244a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceLiveStats"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "57dec1cd-4d45-39d8-927d-fb743b4f96fe",
    "name" : "Get live feed of otoroshi stats (text/event-stream)",
    "request" : {
      "urlPath" : "/api/live/z0su",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/event-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"concurrentHandledRequests\" : 123,\n  \"duration\" : 42.2,\n  \"dataOut\" : 123,\n  \"calls\" : 123,\n  \"rate\" : 42.2,\n  \"dataInRate\" : 42.2,\n  \"overhead\" : 42.2,\n  \"dataIn\" : 123,\n  \"dataOutRate\" : 42.2\n}",
      "headers" : {
        "Content-Type" : "text/event-stream"
      }
    },
    "uuid" : "57dec1cd-4d45-39d8-927d-fb743b4f96fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceLiveStats",
          "schema" : {
            "description" : "Live stats for a service or globally",
            "properties" : {
              "calls" : {
                "description" : "Number of calls on the specified service or globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "concurrentHandledRequests" : {
                "description" : "The number of concurrent request currently",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataIn" : {
                "description" : "The amount of data sent to the specified service or Otoroshi globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataInRate" : {
                "description" : "The rate of data sent to the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "dataOut" : {
                "description" : "The amount of data sent from the specified service or Otoroshi globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataOutRate" : {
                "description" : "The rate of data sent from the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "duration" : {
                "description" : "The average duration for a call",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "overhead" : {
                "description" : "The average overhead time induced by Otoroshi for each call",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "rate" : {
                "description" : "The rate of data sent from and to the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              }
            },
            "required" : [ "calls", "dataIn", "dataOut", "rate", "duration", "overhead", "dataInRate", "dataOutRate", "concurrentHandledRequests" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "2d0b9fea-7a8a-30f2-9a53-1e4c1e49142f",
    "name" : "Get live feed of otoroshi stats (application/json)",
    "request" : {
      "urlPath" : "/api/live/466p",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"concurrentHandledRequests\" : 123,\n  \"duration\" : 42.2,\n  \"dataOut\" : 123,\n  \"calls\" : 123,\n  \"rate\" : 42.2,\n  \"dataInRate\" : 42.2,\n  \"overhead\" : 42.2,\n  \"dataIn\" : 123,\n  \"dataOutRate\" : 42.2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d0b9fea-7a8a-30f2-9a53-1e4c1e49142f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceLiveStats",
          "schema" : {
            "description" : "Live stats for a service or globally",
            "properties" : {
              "calls" : {
                "description" : "Number of calls on the specified service or globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "concurrentHandledRequests" : {
                "description" : "The number of concurrent request currently",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataIn" : {
                "description" : "The amount of data sent to the specified service or Otoroshi globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataInRate" : {
                "description" : "The rate of data sent to the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "dataOut" : {
                "description" : "The amount of data sent from the specified service or Otoroshi globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataOutRate" : {
                "description" : "The rate of data sent from the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "duration" : {
                "description" : "The average duration for a call",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "overhead" : {
                "description" : "The average overhead time induced by Otoroshi for each call",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "rate" : {
                "description" : "The rate of data sent from and to the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              }
            },
            "required" : [ "calls", "dataIn", "dataOut", "rate", "duration", "overhead", "dataInRate", "dataOutRate", "concurrentHandledRequests" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "641e7e36-8c34-36ef-adbd-40a099fad0cc",
    "name" : "Get global otoroshi stats - 404",
    "request" : {
      "urlPath" : "/api/live",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "641e7e36-8c34-36ef-adbd-40a099fad0cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalLiveStats"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "3a2e7cce-5e57-33c2-8590-c17044db0388",
    "name" : "Get global otoroshi stats - 401",
    "request" : {
      "urlPath" : "/api/live",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3a2e7cce-5e57-33c2-8590-c17044db0388",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalLiveStats"
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "802569f1-0931-3675-a346-7f75e5e09a09",
    "name" : "Get global otoroshi stats - 400",
    "request" : {
      "urlPath" : "/api/live",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "802569f1-0931-3675-a346-7f75e5e09a09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalLiveStats"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "7c7dff1c-a07d-30fa-a348-a1e73e27b11b",
    "name" : "Get global otoroshi stats (application/json)",
    "request" : {
      "urlPath" : "/api/live",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"concurrentHandledRequests\" : 123,\n  \"duration\" : 42.2,\n  \"dataOut\" : 123,\n  \"calls\" : 123,\n  \"rate\" : 42.2,\n  \"dataInRate\" : 42.2,\n  \"overhead\" : 42.2,\n  \"dataIn\" : 123,\n  \"dataOutRate\" : 42.2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c7dff1c-a07d-30fa-a348-a1e73e27b11b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalLiveStats",
          "schema" : {
            "description" : "Live stats for a service or globally",
            "properties" : {
              "calls" : {
                "description" : "Number of calls on the specified service or globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "concurrentHandledRequests" : {
                "description" : "The number of concurrent request currently",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataIn" : {
                "description" : "The amount of data sent to the specified service or Otoroshi globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataInRate" : {
                "description" : "The rate of data sent to the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "dataOut" : {
                "description" : "The amount of data sent from the specified service or Otoroshi globally",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "dataOutRate" : {
                "description" : "The rate of data sent from the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "duration" : {
                "description" : "The average duration for a call",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "overhead" : {
                "description" : "The average overhead time induced by Otoroshi for each call",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              },
              "rate" : {
                "description" : "The rate of data sent from and to the specified service or Otoroshi globally",
                "example" : 42.2,
                "format" : "double",
                "type" : "number"
              }
            },
            "required" : [ "calls", "dataIn", "dataOut", "rate", "duration", "overhead", "dataInRate", "dataOutRate", "concurrentHandledRequests" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "319631d2-0b9c-3e73-8008-082244f39c38",
    "name" : "Import the full state of Otoroshi as a file - 404",
    "request" : {
      "urlPath" : "/api/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "319631d2-0b9c-3e73-8008-082244f39c38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImportFromFile"
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "3b5d54c9-f766-310d-9c4b-a7ac60b4fae6",
    "name" : "Import the full state of Otoroshi as a file - 401",
    "request" : {
      "urlPath" : "/api/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3b5d54c9-f766-310d-9c4b-a7ac60b4fae6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImportFromFile"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "daba1b52-bd45-3b54-9910-01e70a9c8583",
    "name" : "Import the full state of Otoroshi as a file - 400",
    "request" : {
      "urlPath" : "/api/import",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "daba1b52-bd45-3b54-9910-01e70a9c8583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImportFromFile"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "52663c55-04b3-3722-95b4-743deb18ef51",
    "name" : "Import the full state of Otoroshi as a file (application/json)",
    "request" : {
      "urlPath" : "/api/import",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52663c55-04b3-3722-95b4-743deb18ef51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fullImportFromFile",
          "schema" : {
            "properties" : {
              "done" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "done" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "a5ed2450-1ab8-3103-849a-5dd4d645a462",
    "name" : "Get all services descriptor for a group - 404",
    "request" : {
      "urlPath" : "/api/groups/6d4j/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a5ed2450-1ab8-3103-849a-5dd4d645a462",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroupServices"
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "afd8bdc9-eeea-3fff-b9a6-5a00116abeee",
    "name" : "Get all services descriptor for a group - 401",
    "request" : {
      "urlPath" : "/api/groups/j807/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "afd8bdc9-eeea-3fff-b9a6-5a00116abeee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroupServices"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "aea44ebf-5f0e-3ca1-bfb5-fe50b529d9f7",
    "name" : "Get all services descriptor for a group - 400",
    "request" : {
      "urlPath" : "/api/groups/6111/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "aea44ebf-5f0e-3ca1-bfb5-fe50b529d9f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroupServices"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "127b7a61-082f-392c-a423-0ed57bab4453",
    "name" : "Get all services descriptor for a group (application/json)",
    "request" : {
      "urlPath" : "/api/groups/7056/services",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "127b7a61-082f-392c-a423-0ed57bab4453",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroupServices",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiKey"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "59077eec-5054-3880-a33e-791660aaa183",
    "name" : "Update a service group - 404",
    "request" : {
      "urlPath" : "/api/groups/14gt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "59077eec-5054-3880-a33e-791660aaa183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGroup"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "47d98064-04a6-3bb7-a134-5c0334f4e209",
    "name" : "Update a service group - 401",
    "request" : {
      "urlPath" : "/api/groups/3i05",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "47d98064-04a6-3bb7-a134-5c0334f4e209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGroup"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "496bc522-11d5-3eb1-8f76-121d1b217994",
    "name" : "Update a service group - 400",
    "request" : {
      "urlPath" : "/api/groups/x9u2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "496bc522-11d5-3eb1-8f76-121d1b217994",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGroup"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "941539bf-d0f2-3cc1-8f7e-7b45b2c65f6b",
    "name" : "Update a service group (application/json)",
    "request" : {
      "urlPath" : "/api/groups/90my",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "941539bf-d0f2-3cc1-8f7e-7b45b2c65f6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGroup",
          "schema" : {
            "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
            "properties" : {
              "description" : {
                "description" : "The descriptoin of the group",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the group",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "49f4482e-548f-3378-a1d2-7d4bca8d5e31",
    "name" : "Update a service group with a diff - 404",
    "request" : {
      "urlPath" : "/api/groups/3jga",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "49f4482e-548f-3378-a1d2-7d4bca8d5e31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGroup"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "6998ef19-8a6b-3f02-a5fe-b8b5cb81fa1b",
    "name" : "Update a service group with a diff - 401",
    "request" : {
      "urlPath" : "/api/groups/mqb0",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6998ef19-8a6b-3f02-a5fe-b8b5cb81fa1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGroup"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "696f71b6-5580-392a-b7bb-4b3367ce7065",
    "name" : "Update a service group with a diff - 400",
    "request" : {
      "urlPath" : "/api/groups/986i",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "696f71b6-5580-392a-b7bb-4b3367ce7065",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGroup"
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "de059dae-7c8c-3061-ace6-3094c115a25b",
    "name" : "Update a service group with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/groups/6krh",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de059dae-7c8c-3061-ace6-3094c115a25b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGroup",
          "schema" : {
            "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
            "properties" : {
              "description" : {
                "description" : "The descriptoin of the group",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the group",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "8ff376ab-ab39-340b-83c9-275e554f04d9",
    "name" : "Get a service group - 404",
    "request" : {
      "urlPath" : "/api/groups/ddcb",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8ff376ab-ab39-340b-83c9-275e554f04d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroup"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "66ae3fa0-6349-3559-b7af-4a885c2e267f",
    "name" : "Get a service group - 401",
    "request" : {
      "urlPath" : "/api/groups/1z5z",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "66ae3fa0-6349-3559-b7af-4a885c2e267f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroup"
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "f6b7a03f-18c2-37f2-9b37-64682d12afa3",
    "name" : "Get a service group - 400",
    "request" : {
      "urlPath" : "/api/groups/j6k9",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f6b7a03f-18c2-37f2-9b37-64682d12afa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroup"
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "906f10e9-763f-3365-a4ae-6b5aa53a6101",
    "name" : "Get a service group (application/json)",
    "request" : {
      "urlPath" : "/api/groups/7da5",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "906f10e9-763f-3365-a4ae-6b5aa53a6101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "serviceGroup",
          "schema" : {
            "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
            "properties" : {
              "description" : {
                "description" : "The descriptoin of the group",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the group",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "8a114bc6-dfa2-3f2c-af01-58c01e420bea",
    "name" : "Delete a service group - 404",
    "request" : {
      "urlPath" : "/api/groups/q8uz",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8a114bc6-dfa2-3f2c-af01-58c01e420bea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGroup"
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "5a79390b-d8d7-3341-b1e7-3d2ac284ad4d",
    "name" : "Delete a service group - 401",
    "request" : {
      "urlPath" : "/api/groups/538o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5a79390b-d8d7-3341-b1e7-3d2ac284ad4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGroup"
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "ba8214c2-300a-349f-a91c-bd9fa27d8051",
    "name" : "Delete a service group - 400",
    "request" : {
      "urlPath" : "/api/groups/sjzb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ba8214c2-300a-349f-a91c-bd9fa27d8051",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGroup"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "55fb1f91-4c78-3d35-993e-e6c14233f98f",
    "name" : "Delete a service group (application/json)",
    "request" : {
      "urlPath" : "/api/groups/7sz9",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55fb1f91-4c78-3d35-993e-e6c14233f98f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGroup",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "5d39e373-c7bf-33de-9875-bbca0697b257",
    "name" : "Get the quota state of an api key - 404",
    "request" : {
      "urlPath" : "/api/groups/3mjd/apikeys/xy3c/quotas",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "5d39e373-c7bf-33de-9875-bbca0697b257",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroupQuotas"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "dc1e8e6e-c9c5-3a88-b45f-fa874df611e3",
    "name" : "Get the quota state of an api key - 401",
    "request" : {
      "urlPath" : "/api/groups/l951/apikeys/0p91/quotas",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "dc1e8e6e-c9c5-3a88-b45f-fa874df611e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroupQuotas"
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "e72791a2-9c65-3964-9953-d296dc3776ca",
    "name" : "Get the quota state of an api key - 400",
    "request" : {
      "urlPath" : "/api/groups/d2a6/apikeys/3084/quotas",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e72791a2-9c65-3964-9953-d296dc3776ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroupQuotas"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "a8763ee3-35da-3e80-a8e4-6753c536a8a3",
    "name" : "Get the quota state of an api key (application/json)",
    "request" : {
      "urlPath" : "/api/groups/g8z1/apikeys/676m/quotas",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"remainingCallsPerDay\" : 123,\n  \"authorizedCallsPerMonth\" : 123,\n  \"currentCallsPerSec\" : 123,\n  \"authorizedCallsPerSec\" : 123,\n  \"remainingCallsPerMonth\" : 123,\n  \"remainingCallsPerSec\" : 123,\n  \"authorizedCallsPerDay\" : 123,\n  \"currentCallsPerDay\" : 123,\n  \"currentCallsPerMonth\" : 123\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8763ee3-35da-3e80-a8e4-6753c536a8a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroupQuotas",
          "schema" : {
            "description" : "Quotas state for an api key on a service group",
            "properties" : {
              "authorizedCallsPerDay" : {
                "description" : "The number of authorized calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerSec" : {
                "description" : "The number of authorized calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerDay" : {
                "description" : "The current number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerMonth" : {
                "description" : "The current number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerSec" : {
                "description" : "The current number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerDay" : {
                "description" : "The remaining number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerSec" : {
                "description" : "The remaining number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "authorizedCallsPerSec", "currentCallsPerSec", "remainingCallsPerSec", "authorizedCallsPerDay", "currentCallsPerDay", "remainingCallsPerDay", "authorizedCallsPerMonth", "currentCallsPerMonth", "remainingCallsPerMonth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "86d06084-05c7-318e-b873-962c5f194ab3",
    "name" : "Reset the quota state of an api key - 404",
    "request" : {
      "urlPath" : "/api/groups/f5k8/apikeys/ddd7/quotas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "86d06084-05c7-318e-b873-962c5f194ab3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyFromGroupQuotas"
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "2efc543c-2238-3743-9a3f-b97348ca117f",
    "name" : "Reset the quota state of an api key - 401",
    "request" : {
      "urlPath" : "/api/groups/78wo/apikeys/peqo/quotas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2efc543c-2238-3743-9a3f-b97348ca117f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyFromGroupQuotas"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "b1e78708-7157-3e7c-abdc-d8fb7dcf198d",
    "name" : "Reset the quota state of an api key - 400",
    "request" : {
      "urlPath" : "/api/groups/4oqc/apikeys/32ic/quotas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b1e78708-7157-3e7c-abdc-d8fb7dcf198d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyFromGroupQuotas"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "88bc3856-7ef4-3bc3-9d1a-640950be32ce",
    "name" : "Reset the quota state of an api key (application/json)",
    "request" : {
      "urlPath" : "/api/groups/2oqp/apikeys/nr0h/quotas",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"remainingCallsPerDay\" : 123,\n  \"authorizedCallsPerMonth\" : 123,\n  \"currentCallsPerSec\" : 123,\n  \"authorizedCallsPerSec\" : 123,\n  \"remainingCallsPerMonth\" : 123,\n  \"remainingCallsPerSec\" : 123,\n  \"authorizedCallsPerDay\" : 123,\n  \"currentCallsPerDay\" : 123,\n  \"currentCallsPerMonth\" : 123\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88bc3856-7ef4-3bc3-9d1a-640950be32ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetApiKeyFromGroupQuotas",
          "schema" : {
            "description" : "Quotas state for an api key on a service group",
            "properties" : {
              "authorizedCallsPerDay" : {
                "description" : "The number of authorized calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "authorizedCallsPerSec" : {
                "description" : "The number of authorized calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerDay" : {
                "description" : "The current number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerMonth" : {
                "description" : "The current number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "currentCallsPerSec" : {
                "description" : "The current number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerDay" : {
                "description" : "The remaining number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerMonth" : {
                "description" : "The number of authorized calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "remainingCallsPerSec" : {
                "description" : "The remaining number of calls per second",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "authorizedCallsPerSec", "currentCallsPerSec", "remainingCallsPerSec", "authorizedCallsPerDay", "currentCallsPerDay", "remainingCallsPerDay", "authorizedCallsPerMonth", "currentCallsPerMonth", "remainingCallsPerMonth" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "4d940c41-4079-3179-a0f6-eb60ec916c3a",
    "name" : "Update an api key - 404",
    "request" : {
      "urlPath" : "/api/groups/5ry2/apikeys/6hf7",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "4d940c41-4079-3179-a0f6-eb60ec916c3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "6dd70341-b8f2-3d55-8338-ae7ff87be417",
    "name" : "Update an api key - 401",
    "request" : {
      "urlPath" : "/api/groups/0ac7/apikeys/l767",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6dd70341-b8f2-3d55-8338-ae7ff87be417",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "37d37ff6-e20a-3a2d-8779-d3b130faf4b0",
    "name" : "Update an api key - 400",
    "request" : {
      "urlPath" : "/api/groups/8c8p/apikeys/1n71",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "37d37ff6-e20a-3a2d-8779-d3b130faf4b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "ec3ca897-8d0a-3475-aeed-a91a25f01226",
    "name" : "Update an api key (application/json)",
    "request" : {
      "urlPath" : "/api/groups/e02g/apikeys/c999",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec3ca897-8d0a-3475-aeed-a91a25f01226",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateApiKeyFromGroup",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "c5573234-9740-3287-a8c6-a3e2ff4db653",
    "name" : "Update an api key with a diff - 404",
    "request" : {
      "urlPath" : "/api/groups/pup3/apikeys/uoq6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c5573234-9740-3287-a8c6-a3e2ff4db653",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "445d28f1-ea43-399c-a723-9fc4c5d18913",
    "name" : "Update an api key with a diff - 401",
    "request" : {
      "urlPath" : "/api/groups/b13c/apikeys/4p68",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "445d28f1-ea43-399c-a723-9fc4c5d18913",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "79fa861f-5c57-3edb-a521-75f53c361807",
    "name" : "Update an api key with a diff - 400",
    "request" : {
      "urlPath" : "/api/groups/4od8/apikeys/999l",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "79fa861f-5c57-3edb-a521-75f53c361807",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "31b72f50-c72e-3e3a-900c-b12a8a1538eb",
    "name" : "Update an api key with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/groups/849k/apikeys/zq0y",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31b72f50-c72e-3e3a-900c-b12a8a1538eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchApiKeyFromGroup",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "d7feab01-f411-3c83-81ec-444a755dd9e7",
    "name" : "Get an api key - 404",
    "request" : {
      "urlPath" : "/api/groups/pez0/apikeys/b92n",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "d7feab01-f411-3c83-81ec-444a755dd9e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "592fedca-4673-3691-a159-f3bad784e632",
    "name" : "Get an api key - 401",
    "request" : {
      "urlPath" : "/api/groups/58qi/apikeys/d0e3",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "592fedca-4673-3691-a159-f3bad784e632",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "03719134-6801-3668-be95-7492565142ab",
    "name" : "Get an api key - 400",
    "request" : {
      "urlPath" : "/api/groups/7734/apikeys/1t67",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "03719134-6801-3668-be95-7492565142ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "a3ce347b-e5ac-3b95-a614-900e82a505c2",
    "name" : "Get an api key (application/json)",
    "request" : {
      "urlPath" : "/api/groups/010m/apikeys/65w9",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3ce347b-e5ac-3b95-a614-900e82a505c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeyFromGroup",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "fc65364f-1a41-38ca-aa09-00525d9942e1",
    "name" : "Delete an api key - 404",
    "request" : {
      "urlPath" : "/api/groups/3lq0/apikeys/99u5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "fc65364f-1a41-38ca-aa09-00525d9942e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "a7e43ce8-615a-3496-823b-c4170eb16591",
    "name" : "Delete an api key - 401",
    "request" : {
      "urlPath" : "/api/groups/9x1n/apikeys/47d1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a7e43ce8-615a-3496-823b-c4170eb16591",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "ff6db7ff-ec6c-352b-b8d6-ce8b1d63e852",
    "name" : "Delete an api key - 400",
    "request" : {
      "urlPath" : "/api/groups/7g3m/apikeys/fi6h",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ff6db7ff-ec6c-352b-b8d6-ce8b1d63e852",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "9d9a1c07-92a6-3729-8348-119cd19ad1f2",
    "name" : "Delete an api key (application/json)",
    "request" : {
      "urlPath" : "/api/groups/d593/apikeys/pm61",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d9a1c07-92a6-3729-8348-119cd19ad1f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteApiKeyFromGroup",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "4f6212da-cb43-3b19-b1eb-8428e59b92a7",
    "name" : "Create a new api key for a group - 404",
    "request" : {
      "urlPath" : "/api/groups/ud83/apikeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "4f6212da-cb43-3b19-b1eb-8428e59b92a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "307cc856-56b6-3db3-8d0b-ab7bccef8edf",
    "name" : "Create a new api key for a group - 401",
    "request" : {
      "urlPath" : "/api/groups/28p2/apikeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "307cc856-56b6-3db3-8d0b-ab7bccef8edf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "45240fda-977f-3bcc-b045-523975d14a89",
    "name" : "Create a new api key for a group - 400",
    "request" : {
      "urlPath" : "/api/groups/9q25/apikeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "45240fda-977f-3bcc-b045-523975d14a89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKeyFromGroup"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "a1c7f7c7-86e2-39c5-a8ae-e74325af6797",
    "name" : "Create a new api key for a group (application/json)",
    "request" : {
      "urlPath" : "/api/groups/rf9b/apikeys",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1c7f7c7-86e2-39c5-a8ae-e74325af6797",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiKeyFromGroup",
          "schema" : {
            "description" : "An Otoroshi Api Key. An Api Key is defined for a group of services to allow usage of the same Api Key for multiple services.",
            "properties" : {
              "authorizedEntities" : {
                "description" : "The group/service ids (prefixed by group_ or service_ on which the key is authorized",
                "example" : [ "a string value" ],
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "clientId" : {
                "description" : "The unique id of the Api Key. Usually 16 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "clientName" : {
                "description" : "The name of the api key, for humans ;-)",
                "example" : "a string value",
                "type" : "string"
              },
              "clientSecret" : {
                "description" : "The secret of the Api Key. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "dailyQuota" : {
                "description" : "Authorized number of calls per day",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "enabled" : {
                "description" : "Whether or not the key is enabled. If disabled, resources won't be available to calls using this key",
                "example" : true,
                "type" : "boolean"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Bunch of metadata for the key",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "monthlyQuota" : {
                "description" : "Authorized number of calls per month",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "required" : [ "clientId", "clientSecret", "clientName", "authorizedEntities", "enabled" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "b4c5f7c2-cd02-3df8-a1c7-6be925b8078b",
    "name" : "Get all api keys for the group of a service - 404",
    "request" : {
      "urlPath" : "/api/groups/2hzk/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "b4c5f7c2-cd02-3df8-a1c7-6be925b8078b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeysFromGroup"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "06ccbc28-4829-3a9a-a1ec-a630fd69fa59",
    "name" : "Get all api keys for the group of a service - 401",
    "request" : {
      "urlPath" : "/api/groups/jmo8/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "06ccbc28-4829-3a9a-a1ec-a630fd69fa59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeysFromGroup"
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "ebbe910c-9e1d-3b02-ad77-2f624e3f23ae",
    "name" : "Get all api keys for the group of a service - 400",
    "request" : {
      "urlPath" : "/api/groups/75op/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ebbe910c-9e1d-3b02-ad77-2f624e3f23ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeysFromGroup"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "a2710d59-64e3-3827-b3f2-ace32970dee3",
    "name" : "Get all api keys for the group of a service (application/json)",
    "request" : {
      "urlPath" : "/api/groups/8519/apikeys",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2710d59-64e3-3827-b3f2-ace32970dee3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apiKeysFromGroup",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiKey"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "6dbfa1ff-fe65-3fd2-8cae-b1d7d405145b",
    "name" : "Create a new service group - 404",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "6dbfa1ff-fe65-3fd2-8cae-b1d7d405145b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGroup"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "d6707173-16ac-3a43-91a8-7a8807f0f788",
    "name" : "Create a new service group - 401",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d6707173-16ac-3a43-91a8-7a8807f0f788",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGroup"
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "aa0586d6-e599-3650-ad88-c57708db80be",
    "name" : "Create a new service group - 400",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "aa0586d6-e599-3650-ad88-c57708db80be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGroup"
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "9e1b5adf-f45f-36eb-9e2c-ad9d323623f8",
    "name" : "Create a new service group (application/json)",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e1b5adf-f45f-36eb-9e2c-ad9d323623f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGroup",
          "schema" : {
            "description" : "An Otoroshi service group is just a group of service descriptor. It is useful to be able to define Api Keys for the whole group",
            "properties" : {
              "description" : {
                "description" : "The descriptoin of the group",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The unique id of the group. Usually 64 random alpha numerical characters, but can be anything",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the group",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "3afe9246-c51f-3970-9a33-046eeec08ab6",
    "name" : "Get all service groups - 404",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3afe9246-c51f-3970-9a33-046eeec08ab6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServiceGroups"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "eace4641-a510-33b7-9750-81ecddd24dde",
    "name" : "Get all service groups - 401",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "eace4641-a510-33b7-9750-81ecddd24dde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServiceGroups"
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "39191df6-9da1-3756-aed4-da63d0bcb111",
    "name" : "Get all service groups - 400",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "39191df6-9da1-3756-aed4-da63d0bcb111",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServiceGroups"
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "154f2dcd-5488-3cfe-aa0a-aadc9b1f73a4",
    "name" : "Get all service groups (application/json)",
    "request" : {
      "urlPath" : "/api/groups",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"a string value\",\n  \"description\" : \"a string value\",\n  \"id\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "154f2dcd-5488-3cfe-aa0a-aadc9b1f73a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allServiceGroups",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Group"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "19eb30b0-995c-34a0-83f0-90fda9aece70",
    "name" : "Update the global configuration - 404",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "19eb30b0-995c-34a0-83f0-90fda9aece70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putGlobalConfig"
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "1049748f-598f-350f-a7d5-a0423ecacbcb",
    "name" : "Update the global configuration - 401",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1049748f-598f-350f-a7d5-a0423ecacbcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putGlobalConfig"
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "f2fe0753-ac6a-3a0d-9d7c-679c74086560",
    "name" : "Update the global configuration - 400",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f2fe0753-ac6a-3a0d-9d7c-679c74086560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putGlobalConfig"
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "416b09d5-03d5-3b13-8cbf-1f564ed609e6",
    "name" : "Update the global configuration (application/json)",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"maxLogsSize\" : 123123,\n  \"apiReadOnly\" : true,\n  \"analyticsWebhooks\" : [ {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  } ],\n  \"elasticReadsConfig\" : {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  },\n  \"limitConcurrentRequests\" : true,\n  \"maxConcurrentRequests\" : 123,\n  \"endlessIpAddresses\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n  \"maxHttp10ResponseSize\" : 123,\n  \"streamEntityOnly\" : true,\n  \"backofficeAuth0Config\" : {\n    \"clientId\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"callbackUrl\" : \"a string value\",\n    \"clientSecret\" : \"a string value\"\n  },\n  \"alertsEmails\" : [ \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\" ],\n  \"autoLinkToDefaultGroup\" : true,\n  \"alertsWebhooks\" : [ {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  } ],\n  \"middleFingers\" : true,\n  \"privateAppsAuth0Config\" : {\n    \"clientId\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"callbackUrl\" : \"a string value\",\n    \"clientSecret\" : \"a string value\"\n  },\n  \"throttlingQuota\" : 123,\n  \"cleverSettings\" : {\n    \"consumerSecret\" : \"a string value\",\n    \"orgaId\" : \"a string value\",\n    \"secret\" : \"a string value\",\n    \"consumerKey\" : \"a string value\",\n    \"token\" : \"a string value\"\n  },\n  \"u2fLoginOnly\" : true,\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"mailerSettings\" : {\n    \"eu\" : true,\n    \"apiKey\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"apiKeyPrivate\" : \"a string value\",\n    \"header\" : {\n      \"key\" : \"value\"\n    },\n    \"apiKeyPublic\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"url\" : \"a string value\"\n  },\n  \"perIpThrottlingQuota\" : 123,\n  \"elasticWritesConfigs\" : [ {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  } ],\n  \"lines\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"useCircuitBreakers\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "416b09d5-03d5-3b13-8cbf-1f564ed609e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putGlobalConfig",
          "schema" : {
            "description" : "The global config object of Otoroshi, used to customize settings of the current Otoroshi instance",
            "properties" : {
              "alertsEmails" : {
                "description" : "Email addresses that will receive all Otoroshi alert events",
                "items" : {
                  "example" : "admin@otoroshi.io",
                  "format" : "email",
                  "type" : "string"
                },
                "type" : "array"
              },
              "alertsWebhooks" : {
                "description" : "Webhook that will receive all Otoroshi alert events",
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "analyticsWebhooks" : {
                "description" : "Webhook that will receive all internal Otoroshi events",
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "apiReadOnly" : {
                "description" : "If enabled, Admin API won't be able to write/update/delete entities",
                "example" : true,
                "type" : "boolean"
              },
              "autoLinkToDefaultGroup" : {
                "description" : "If not defined, every new service descriptor will be added to the default group",
                "example" : true,
                "type" : "boolean"
              },
              "backofficeAuth0Config" : {
                "$ref" : "#/components/schemas/Auth0Config"
              },
              "cleverSettings" : {
                "$ref" : "#/components/schemas/CleverSettings"
              },
              "elasticReadsConfig" : {
                "$ref" : "#/components/schemas/ElasticConfig"
              },
              "elasticWritesConfigs" : {
                "description" : "Configs. for Elastic writes",
                "items" : {
                  "$ref" : "#/components/schemas/ElasticConfig"
                },
                "type" : "array"
              },
              "endlessIpAddresses" : {
                "description" : "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
                "items" : {
                  "example" : "192.192.192.192",
                  "format" : "ipv4",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "limitConcurrentRequests" : {
                "description" : "If enabled, Otoroshi will reject new request if too much at the same time",
                "example" : true,
                "type" : "boolean"
              },
              "lines" : {
                "description" : "Possibles lines for Otoroshi",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "mailerSettings" : {
                "$ref" : "#/components/schemas/MailerSettings"
              },
              "maxConcurrentRequests" : {
                "description" : "The number of authorized request processed at the same time",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "maxHttp10ResponseSize" : {
                "description" : "The max size in bytes of an HTTP 1.0 response",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "maxLogsSize" : {
                "description" : "Number of events kept locally",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "middleFingers" : {
                "description" : "Use middle finger emoji as a response character for endless HTTP responses",
                "example" : true,
                "type" : "boolean"
              },
              "perIpThrottlingQuota" : {
                "description" : "Authorized number of calls per second globally per IP address, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "privateAppsAuth0Config" : {
                "$ref" : "#/components/schemas/Auth0Config"
              },
              "streamEntityOnly" : {
                "description" : "HTTP will be streamed only. Doesn't work with old browsers",
                "example" : true,
                "type" : "boolean"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second globally, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "u2fLoginOnly" : {
                "description" : "If enabled, login to backoffice through Auth0 will be disabled",
                "example" : true,
                "type" : "boolean"
              },
              "useCircuitBreakers" : {
                "description" : "If enabled, services will be authorized to use circuit breakers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "streamEntityOnly", "autoLinkToDefaultGroup", "limitConcurrentRequests", "maxConcurrentRequests", "useCircuitBreakers", "apiReadOnly", "u2fLoginOnly", "ipFiltering", "throttlingQuota", "perIpThrottlingQuota", "analyticsWebhooks", "alertsWebhooks", "alertsEmails", "endlessIpAddresses" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "798d16a9-fbe3-3e4d-91b0-9c0f54fdbf7c",
    "name" : "Update the global configuration with a diff - 404",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "798d16a9-fbe3-3e4d-91b0-9c0f54fdbf7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalConfig"
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "8afde569-cafd-384b-93ff-e9729bea3c68",
    "name" : "Update the global configuration with a diff - 401",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8afde569-cafd-384b-93ff-e9729bea3c68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalConfig"
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "1541ab8d-6dd6-3223-ad6d-6226af441e0a",
    "name" : "Update the global configuration with a diff - 400",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1541ab8d-6dd6-3223-ad6d-6226af441e0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalConfig"
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "0584112e-b2a9-31ff-a469-72a776bbbd2e",
    "name" : "Update the global configuration with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"maxLogsSize\" : 123123,\n  \"apiReadOnly\" : true,\n  \"analyticsWebhooks\" : [ {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  } ],\n  \"elasticReadsConfig\" : {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  },\n  \"limitConcurrentRequests\" : true,\n  \"maxConcurrentRequests\" : 123,\n  \"endlessIpAddresses\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n  \"maxHttp10ResponseSize\" : 123,\n  \"streamEntityOnly\" : true,\n  \"backofficeAuth0Config\" : {\n    \"clientId\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"callbackUrl\" : \"a string value\",\n    \"clientSecret\" : \"a string value\"\n  },\n  \"alertsEmails\" : [ \"admin@otoroshi.io\" ],\n  \"autoLinkToDefaultGroup\" : true,\n  \"alertsWebhooks\" : [ {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  } ],\n  \"middleFingers\" : true,\n  \"privateAppsAuth0Config\" : {\n    \"clientId\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"callbackUrl\" : \"a string value\",\n    \"clientSecret\" : \"a string value\"\n  },\n  \"throttlingQuota\" : 123,\n  \"cleverSettings\" : {\n    \"consumerSecret\" : \"a string value\",\n    \"orgaId\" : \"a string value\",\n    \"secret\" : \"a string value\",\n    \"consumerKey\" : \"a string value\",\n    \"token\" : \"a string value\"\n  },\n  \"u2fLoginOnly\" : true,\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"mailerSettings\" : {\n    \"eu\" : true,\n    \"apiKey\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"apiKeyPrivate\" : \"a string value\",\n    \"header\" : {\n      \"key\" : \"value\"\n    },\n    \"apiKeyPublic\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"url\" : \"a string value\"\n  },\n  \"perIpThrottlingQuota\" : 123,\n  \"elasticWritesConfigs\" : [ {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  } ],\n  \"lines\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"useCircuitBreakers\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0584112e-b2a9-31ff-a469-72a776bbbd2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalConfig",
          "schema" : {
            "description" : "The global config object of Otoroshi, used to customize settings of the current Otoroshi instance",
            "properties" : {
              "alertsEmails" : {
                "description" : "Email addresses that will receive all Otoroshi alert events",
                "items" : {
                  "example" : "admin@otoroshi.io",
                  "format" : "email",
                  "type" : "string"
                },
                "type" : "array"
              },
              "alertsWebhooks" : {
                "description" : "Webhook that will receive all Otoroshi alert events",
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "analyticsWebhooks" : {
                "description" : "Webhook that will receive all internal Otoroshi events",
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "apiReadOnly" : {
                "description" : "If enabled, Admin API won't be able to write/update/delete entities",
                "example" : true,
                "type" : "boolean"
              },
              "autoLinkToDefaultGroup" : {
                "description" : "If not defined, every new service descriptor will be added to the default group",
                "example" : true,
                "type" : "boolean"
              },
              "backofficeAuth0Config" : {
                "$ref" : "#/components/schemas/Auth0Config"
              },
              "cleverSettings" : {
                "$ref" : "#/components/schemas/CleverSettings"
              },
              "elasticReadsConfig" : {
                "$ref" : "#/components/schemas/ElasticConfig"
              },
              "elasticWritesConfigs" : {
                "description" : "Configs. for Elastic writes",
                "items" : {
                  "$ref" : "#/components/schemas/ElasticConfig"
                },
                "type" : "array"
              },
              "endlessIpAddresses" : {
                "description" : "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
                "items" : {
                  "example" : "192.192.192.192",
                  "format" : "ipv4",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "limitConcurrentRequests" : {
                "description" : "If enabled, Otoroshi will reject new request if too much at the same time",
                "example" : true,
                "type" : "boolean"
              },
              "lines" : {
                "description" : "Possibles lines for Otoroshi",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "mailerSettings" : {
                "$ref" : "#/components/schemas/MailerSettings"
              },
              "maxConcurrentRequests" : {
                "description" : "The number of authorized request processed at the same time",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "maxHttp10ResponseSize" : {
                "description" : "The max size in bytes of an HTTP 1.0 response",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "maxLogsSize" : {
                "description" : "Number of events kept locally",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "middleFingers" : {
                "description" : "Use middle finger emoji as a response character for endless HTTP responses",
                "example" : true,
                "type" : "boolean"
              },
              "perIpThrottlingQuota" : {
                "description" : "Authorized number of calls per second globally per IP address, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "privateAppsAuth0Config" : {
                "$ref" : "#/components/schemas/Auth0Config"
              },
              "streamEntityOnly" : {
                "description" : "HTTP will be streamed only. Doesn't work with old browsers",
                "example" : true,
                "type" : "boolean"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second globally, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "u2fLoginOnly" : {
                "description" : "If enabled, login to backoffice through Auth0 will be disabled",
                "example" : true,
                "type" : "boolean"
              },
              "useCircuitBreakers" : {
                "description" : "If enabled, services will be authorized to use circuit breakers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "streamEntityOnly", "autoLinkToDefaultGroup", "limitConcurrentRequests", "maxConcurrentRequests", "useCircuitBreakers", "apiReadOnly", "u2fLoginOnly", "ipFiltering", "throttlingQuota", "perIpThrottlingQuota", "analyticsWebhooks", "alertsWebhooks", "alertsEmails", "endlessIpAddresses" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "1a1e11a5-24af-39f6-ac5c-5a54927f16e5",
    "name" : "Get the full configuration of Otoroshi - 404",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "1a1e11a5-24af-39f6-ac5c-5a54927f16e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalConfig"
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "602bf213-5e16-34da-8289-2240a4d7e45c",
    "name" : "Get the full configuration of Otoroshi - 401",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "602bf213-5e16-34da-8289-2240a4d7e45c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalConfig"
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "b176653a-e0c5-3bb7-af93-53dcc1cf7855",
    "name" : "Get the full configuration of Otoroshi - 400",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b176653a-e0c5-3bb7-af93-53dcc1cf7855",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalConfig"
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "8322ed17-0783-3eb6-b48c-3b469a3b736f",
    "name" : "Get the full configuration of Otoroshi (application/json)",
    "request" : {
      "urlPath" : "/api/globalconfig",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"maxLogsSize\" : 123123,\n  \"apiReadOnly\" : true,\n  \"analyticsWebhooks\" : [ {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  } ],\n  \"elasticReadsConfig\" : {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  },\n  \"limitConcurrentRequests\" : true,\n  \"maxConcurrentRequests\" : 123,\n  \"endlessIpAddresses\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ],\n  \"maxHttp10ResponseSize\" : 123,\n  \"streamEntityOnly\" : true,\n  \"backofficeAuth0Config\" : {\n    \"clientId\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"callbackUrl\" : \"a string value\",\n    \"clientSecret\" : \"a string value\"\n  },\n  \"alertsEmails\" : [ \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\" ],\n  \"autoLinkToDefaultGroup\" : true,\n  \"alertsWebhooks\" : [ {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  }, {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"url\" : \"http://www.google.com\"\n  } ],\n  \"middleFingers\" : true,\n  \"privateAppsAuth0Config\" : {\n    \"clientId\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"callbackUrl\" : \"a string value\",\n    \"clientSecret\" : \"a string value\"\n  },\n  \"throttlingQuota\" : 123,\n  \"cleverSettings\" : {\n    \"consumerSecret\" : \"a string value\",\n    \"orgaId\" : \"a string value\",\n    \"secret\" : \"a string value\",\n    \"consumerKey\" : \"a string value\",\n    \"token\" : \"a string value\"\n  },\n  \"u2fLoginOnly\" : true,\n  \"ipFiltering\" : {\n    \"blacklist\" : [ \"192.192.192.192\", \"192.192.192.192\" ],\n    \"whitelist\" : [ \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\", \"192.192.192.192\" ]\n  },\n  \"mailerSettings\" : {\n    \"eu\" : true,\n    \"apiKey\" : \"a string value\",\n    \"domain\" : \"a string value\",\n    \"apiKeyPrivate\" : \"a string value\",\n    \"header\" : {\n      \"key\" : \"value\"\n    },\n    \"apiKeyPublic\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"url\" : \"a string value\"\n  },\n  \"perIpThrottlingQuota\" : 123,\n  \"elasticWritesConfigs\" : [ {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  }, {\n    \"clusterUri\" : \"a string value\",\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"index\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"user\" : \"a string value\"\n  } ],\n  \"lines\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n  \"useCircuitBreakers\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8322ed17-0783-3eb6-b48c-3b469a3b736f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "globalConfig",
          "schema" : {
            "description" : "The global config object of Otoroshi, used to customize settings of the current Otoroshi instance",
            "properties" : {
              "alertsEmails" : {
                "description" : "Email addresses that will receive all Otoroshi alert events",
                "items" : {
                  "example" : "admin@otoroshi.io",
                  "format" : "email",
                  "type" : "string"
                },
                "type" : "array"
              },
              "alertsWebhooks" : {
                "description" : "Webhook that will receive all Otoroshi alert events",
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "analyticsWebhooks" : {
                "description" : "Webhook that will receive all internal Otoroshi events",
                "items" : {
                  "$ref" : "#/components/schemas/Webhook"
                },
                "type" : "array"
              },
              "apiReadOnly" : {
                "description" : "If enabled, Admin API won't be able to write/update/delete entities",
                "example" : true,
                "type" : "boolean"
              },
              "autoLinkToDefaultGroup" : {
                "description" : "If not defined, every new service descriptor will be added to the default group",
                "example" : true,
                "type" : "boolean"
              },
              "backofficeAuth0Config" : {
                "$ref" : "#/components/schemas/Auth0Config"
              },
              "cleverSettings" : {
                "$ref" : "#/components/schemas/CleverSettings"
              },
              "elasticReadsConfig" : {
                "$ref" : "#/components/schemas/ElasticConfig"
              },
              "elasticWritesConfigs" : {
                "description" : "Configs. for Elastic writes",
                "items" : {
                  "$ref" : "#/components/schemas/ElasticConfig"
                },
                "type" : "array"
              },
              "endlessIpAddresses" : {
                "description" : "IP addresses for which any request to Otoroshi will respond with 128 Gb of zeros",
                "items" : {
                  "example" : "192.192.192.192",
                  "format" : "ipv4",
                  "type" : "string"
                },
                "type" : "array"
              },
              "ipFiltering" : {
                "$ref" : "#/components/schemas/IpFiltering"
              },
              "limitConcurrentRequests" : {
                "description" : "If enabled, Otoroshi will reject new request if too much at the same time",
                "example" : true,
                "type" : "boolean"
              },
              "lines" : {
                "description" : "Possibles lines for Otoroshi",
                "items" : {
                  "example" : "a string value",
                  "type" : "string"
                },
                "type" : "array"
              },
              "mailerSettings" : {
                "$ref" : "#/components/schemas/MailerSettings"
              },
              "maxConcurrentRequests" : {
                "description" : "The number of authorized request processed at the same time",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "maxHttp10ResponseSize" : {
                "description" : "The max size in bytes of an HTTP 1.0 response",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "maxLogsSize" : {
                "description" : "Number of events kept locally",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "middleFingers" : {
                "description" : "Use middle finger emoji as a response character for endless HTTP responses",
                "example" : true,
                "type" : "boolean"
              },
              "perIpThrottlingQuota" : {
                "description" : "Authorized number of calls per second globally per IP address, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "privateAppsAuth0Config" : {
                "$ref" : "#/components/schemas/Auth0Config"
              },
              "streamEntityOnly" : {
                "description" : "HTTP will be streamed only. Doesn't work with old browsers",
                "example" : true,
                "type" : "boolean"
              },
              "throttlingQuota" : {
                "description" : "Authorized number of calls per second globally, measured on 10 seconds",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "u2fLoginOnly" : {
                "description" : "If enabled, login to backoffice through Auth0 will be disabled",
                "example" : true,
                "type" : "boolean"
              },
              "useCircuitBreakers" : {
                "description" : "If enabled, services will be authorized to use circuit breakers",
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "streamEntityOnly", "autoLinkToDefaultGroup", "limitConcurrentRequests", "maxConcurrentRequests", "useCircuitBreakers", "apiReadOnly", "u2fLoginOnly", "ipFiltering", "throttlingQuota", "perIpThrottlingQuota", "analyticsWebhooks", "alertsWebhooks", "alertsEmails", "endlessIpAddresses" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "8719452b-f510-38b4-893f-bc8c1cde7467",
    "name" : "Update a data exporter config - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/7c93",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8719452b-f510-38b4-893f-bc8c1cde7467",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "14a38831-7d48-3fdb-885a-295792bf5d06",
    "name" : "Update a data exporter config - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/jme6",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "14a38831-7d48-3fdb-885a-295792bf5d06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "7e0c8ead-d586-39a7-ac20-a8e3aab3d602",
    "name" : "Update a data exporter config - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/068d",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7e0c8ead-d586-39a7-ac20-a8e3aab3d602",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "3dd7972c-a4bc-3c73-8b83-6c9df8749aa5",
    "name" : "Update a data exporter config (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/4c59",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"elastic\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : {\n    \"apiKeyPublic\" : \"a string value\",\n    \"to\" : [ \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\", \"admin@otoroshi.io\" ],\n    \"type\" : \"sendgrid\"\n  },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dd7972c-a4bc-3c73-8b83-6c9df8749aa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateDataExporterConfig",
          "schema" : {
            "description" : "Settings to export Otorshi events",
            "properties" : {
              "bufferSize" : {
                "description" : "buffer size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "config" : {
                "description" : "Data Exporter config",
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/ElasticConfig"
                }, {
                  "$ref" : "#/components/schemas/KafkaConfig"
                }, {
                  "$ref" : "#/components/schemas/PulsarDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/FileDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerGenericExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerConsoleExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailgunExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailjetExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerSendgridExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/ConsoleDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/CustomDataExporterConfig"
                } ]
              },
              "desc" : {
                "description" : "Description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Boolean",
                "example" : "a string value",
                "type" : "string"
              },
              "filtering" : {
                "$ref" : "#/components/schemas/Filtering"
              },
              "groupDuration" : {
                "description" : "duration",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "groupSize" : {
                "description" : "Group size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "id" : {
                "description" : "Id",
                "example" : "a string value",
                "type" : "string"
              },
              "jsonWorkers" : {
                "description" : "nb workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "location" : {
                "$ref" : "#/components/schemas/Location"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Metadata",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Name",
                "example" : "a string value",
                "type" : "string"
              },
              "projection" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "projection",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "sendWorkers" : {
                "description" : "send workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "typ" : {
                "description" : "Type of data exporter",
                "enum" : [ "kafka", "pulsar", "file", "mailer", "elastic", "console", "custom" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "067bf838-7b50-3227-9d8a-9d73e391d575",
    "name" : "Update a data exporter config with a diff - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/2tu2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "067bf838-7b50-3227-9d8a-9d73e391d575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "57918912-5196-3b35-ac1e-1f5b89a9ceeb",
    "name" : "Update a data exporter config with a diff - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/89v1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "57918912-5196-3b35-ac1e-1f5b89a9ceeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "d55db7e4-0408-3ea1-8393-8e8067483810",
    "name" : "Update a data exporter config with a diff - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/2951",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d55db7e4-0408-3ea1-8393-8e8067483810",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "1bc61b13-6475-3ac5-bb87-2f9fa3910b5a",
    "name" : "Update a data exporter config with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/svf8",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"kafka\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : {\n    \"apiKeyPublic\" : \"a string value\",\n    \"to\" : [ \"admin@otoroshi.io\" ],\n    \"type\" : \"sendgrid\"\n  },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bc61b13-6475-3ac5-bb87-2f9fa3910b5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchDataExporterConfig",
          "schema" : {
            "description" : "Settings to export Otorshi events",
            "properties" : {
              "bufferSize" : {
                "description" : "buffer size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "config" : {
                "description" : "Data Exporter config",
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/ElasticConfig"
                }, {
                  "$ref" : "#/components/schemas/KafkaConfig"
                }, {
                  "$ref" : "#/components/schemas/PulsarDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/FileDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerGenericExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerConsoleExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailgunExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailjetExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerSendgridExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/ConsoleDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/CustomDataExporterConfig"
                } ]
              },
              "desc" : {
                "description" : "Description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Boolean",
                "example" : "a string value",
                "type" : "string"
              },
              "filtering" : {
                "$ref" : "#/components/schemas/Filtering"
              },
              "groupDuration" : {
                "description" : "duration",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "groupSize" : {
                "description" : "Group size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "id" : {
                "description" : "Id",
                "example" : "a string value",
                "type" : "string"
              },
              "jsonWorkers" : {
                "description" : "nb workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "location" : {
                "$ref" : "#/components/schemas/Location"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Metadata",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Name",
                "example" : "a string value",
                "type" : "string"
              },
              "projection" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "projection",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "sendWorkers" : {
                "description" : "send workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "typ" : {
                "description" : "Type of data exporter",
                "enum" : [ "kafka", "pulsar", "file", "mailer", "elastic", "console", "custom" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "0f8ec145-c671-3ccd-afd9-ee214aea705a",
    "name" : "Get a data exporter config - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/ho09",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0f8ec145-c671-3ccd-afd9-ee214aea705a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findDataExporterConfigById"
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "9034a71c-3770-3471-aff4-640ddff24387",
    "name" : "Get a data exporter config - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/u85z",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9034a71c-3770-3471-aff4-640ddff24387",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findDataExporterConfigById"
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "7a77a71e-4d7c-3095-9a8c-eaa190d148d5",
    "name" : "Get a data exporter config - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/4a44",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7a77a71e-4d7c-3095-9a8c-eaa190d148d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findDataExporterConfigById"
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "3b25bf56-b0a2-3216-87a2-2f1ce19107af",
    "name" : "Get a data exporter config (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/87w4",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"kafka\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"to\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"type\" : \"generic\",\n    \"url\" : \"a string value\"\n  },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b25bf56-b0a2-3216-87a2-2f1ce19107af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findDataExporterConfigById",
          "schema" : {
            "description" : "Settings to export Otorshi events",
            "properties" : {
              "bufferSize" : {
                "description" : "buffer size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "config" : {
                "description" : "Data Exporter config",
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/ElasticConfig"
                }, {
                  "$ref" : "#/components/schemas/KafkaConfig"
                }, {
                  "$ref" : "#/components/schemas/PulsarDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/FileDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerGenericExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerConsoleExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailgunExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailjetExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerSendgridExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/ConsoleDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/CustomDataExporterConfig"
                } ]
              },
              "desc" : {
                "description" : "Description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Boolean",
                "example" : "a string value",
                "type" : "string"
              },
              "filtering" : {
                "$ref" : "#/components/schemas/Filtering"
              },
              "groupDuration" : {
                "description" : "duration",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "groupSize" : {
                "description" : "Group size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "id" : {
                "description" : "Id",
                "example" : "a string value",
                "type" : "string"
              },
              "jsonWorkers" : {
                "description" : "nb workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "location" : {
                "$ref" : "#/components/schemas/Location"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Metadata",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Name",
                "example" : "a string value",
                "type" : "string"
              },
              "projection" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "projection",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "sendWorkers" : {
                "description" : "send workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "typ" : {
                "description" : "Type of data exporter",
                "enum" : [ "kafka", "pulsar", "file", "mailer", "elastic", "console", "custom" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "d401ba2e-9c93-341a-976b-5dfc3f2c7035",
    "name" : "Delete a data exporter config - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/xl5b",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "d401ba2e-9c93-341a-976b-5dfc3f2c7035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "18af66f0-53c7-39d7-b995-cf3ef318f31c",
    "name" : "Delete a data exporter config - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/aks1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "18af66f0-53c7-39d7-b995-cf3ef318f31c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "4f9e9836-b3f0-36a9-88b2-48f13fd2a0b7",
    "name" : "Delete a data exporter config - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/27n2",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4f9e9836-b3f0-36a9-88b2-48f13fd2a0b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "a6744da1-bee9-33b0-b25f-392eae99df29",
    "name" : "Delete a data exporter config (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/x1v5",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6744da1-bee9-33b0-b25f-392eae99df29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDataExporterConfig",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "7e8dd9cd-fb90-3c9e-a62e-41592772adc2",
    "name" : "Get all data exporter configs - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_template",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "7e8dd9cd-fb90-3c9e-a62e-41592772adc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DataExporterTemplate"
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "70ba39ed-fb2e-3b2e-8dff-26b6c66de615",
    "name" : "Get all data exporter configs - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_template",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "70ba39ed-fb2e-3b2e-8dff-26b6c66de615",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DataExporterTemplate"
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "8a836f0b-6399-3506-bc08-2e37e25d3d1c",
    "name" : "Get all data exporter configs - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_template",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8a836f0b-6399-3506-bc08-2e37e25d3d1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DataExporterTemplate"
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "fbb6e2b2-de0a-3da5-ad74-b41dfaf0c6f3",
    "name" : "Get all data exporter configs (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_template",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"elastic\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : {\n    \"type\" : \"generic\"\n  },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbb6e2b2-de0a-3da5-ad74-b41dfaf0c6f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DataExporterTemplate",
          "schema" : {
            "description" : "Settings to export Otorshi events",
            "properties" : {
              "bufferSize" : {
                "description" : "buffer size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "config" : {
                "description" : "Data Exporter config",
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/ElasticConfig"
                }, {
                  "$ref" : "#/components/schemas/KafkaConfig"
                }, {
                  "$ref" : "#/components/schemas/PulsarDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/FileDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerGenericExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerConsoleExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailgunExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailjetExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerSendgridExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/ConsoleDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/CustomDataExporterConfig"
                } ]
              },
              "desc" : {
                "description" : "Description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Boolean",
                "example" : "a string value",
                "type" : "string"
              },
              "filtering" : {
                "$ref" : "#/components/schemas/Filtering"
              },
              "groupDuration" : {
                "description" : "duration",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "groupSize" : {
                "description" : "Group size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "id" : {
                "description" : "Id",
                "example" : "a string value",
                "type" : "string"
              },
              "jsonWorkers" : {
                "description" : "nb workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "location" : {
                "$ref" : "#/components/schemas/Location"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Metadata",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Name",
                "example" : "a string value",
                "type" : "string"
              },
              "projection" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "projection",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "sendWorkers" : {
                "description" : "send workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "typ" : {
                "description" : "Type of data exporter",
                "enum" : [ "kafka", "pulsar", "file", "mailer", "elastic", "console", "custom" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "199228e4-e5b5-3c41-a28f-edca88bd0825",
    "name" : "Update a data exporter configs - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "199228e4-e5b5-3c41-a28f-edca88bd0825",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateBulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "0e3e5258-e1db-3ded-af0f-b5979d91972a",
    "name" : "Update a data exporter configs - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0e3e5258-e1db-3ded-af0f-b5979d91972a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateBulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "39d181f5-0a7c-30da-ada2-f6d6801f5de5",
    "name" : "Update a data exporter configs - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "39d181f5-0a7c-30da-ada2-f6d6801f5de5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateBulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "78386ead-f41e-3de4-be07-844679b95763",
    "name" : "Update a data exporter configs (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78386ead-f41e-3de4-be07-844679b95763",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateBulkDataExporterConfig",
          "schema" : {
            "items" : {
              "description" : "The bulk response",
              "properties" : {
                "id" : {
                  "description" : "Data exporter id",
                  "example" : true,
                  "type" : "boolean"
                },
                "status" : {
                  "description" : "Status",
                  "enum" : [ "200" ],
                  "type" : "string"
                },
                "updated" : {
                  "description" : "Whether the action was carried out correctly or not",
                  "example" : true,
                  "type" : "boolean"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "46d677c7-c029-387b-b54c-9e95cca3629b",
    "name" : "Create a new data exporter configs - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "46d677c7-c029-387b-b54c-9e95cca3629b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createBulkDataExporterConfigs"
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "6b97ec6d-c218-3602-8b98-949035364b00",
    "name" : "Create a new data exporter configs - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6b97ec6d-c218-3602-8b98-949035364b00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createBulkDataExporterConfigs"
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "674c2032-a249-3b10-9de8-91d141fbbd17",
    "name" : "Create a new data exporter configs - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "674c2032-a249-3b10-9de8-91d141fbbd17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createBulkDataExporterConfigs"
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "f655217a-c50d-3ba9-9785-7ee41f0645a0",
    "name" : "Create a new data exporter configs (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"created\" : true,\n  \"id\" : true,\n  \"status\" : \"201\"\n}, {\n  \"created\" : true,\n  \"id\" : true,\n  \"status\" : \"201\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f655217a-c50d-3ba9-9785-7ee41f0645a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createBulkDataExporterConfigs",
          "schema" : {
            "items" : {
              "description" : "The bulk response",
              "properties" : {
                "created" : {
                  "description" : "Whether the action was carried out correctly or not",
                  "example" : true,
                  "type" : "boolean"
                },
                "id" : {
                  "description" : "Data exporter id",
                  "example" : true,
                  "type" : "boolean"
                },
                "status" : {
                  "description" : "Status",
                  "enum" : [ "201" ],
                  "type" : "string"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "5d94a48a-f114-3a90-a4a5-e3234a9abbbe",
    "name" : "Update a data exporter configs with a diff - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "5d94a48a-f114-3a90-a4a5-e3234a9abbbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchBulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "42531ebe-dcef-3869-a1f9-2ad82c2ab6e8",
    "name" : "Update a data exporter configs with a diff - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "42531ebe-dcef-3869-a1f9-2ad82c2ab6e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchBulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 317
  }, {
    "id" : "2f680250-4ec5-3c68-a98f-c8b0fe807a1a",
    "name" : "Update a data exporter configs with a diff - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2f680250-4ec5-3c68-a98f-c8b0fe807a1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchBulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 318
  }, {
    "id" : "d101d3e9-9ecf-38db-9f86-9f20d5ae83dd",
    "name" : "Update a data exporter configs with a diff (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n}, {\n  \"id\" : true,\n  \"updated\" : true,\n  \"status\" : \"200\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d101d3e9-9ecf-38db-9f86-9f20d5ae83dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchBulkDataExporterConfig",
          "schema" : {
            "items" : {
              "description" : "The bulk response",
              "properties" : {
                "id" : {
                  "description" : "Data exporter id",
                  "example" : true,
                  "type" : "boolean"
                },
                "status" : {
                  "description" : "Status",
                  "enum" : [ "200" ],
                  "type" : "string"
                },
                "updated" : {
                  "description" : "Whether the action was carried out correctly or not",
                  "example" : true,
                  "type" : "boolean"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 319
  }, {
    "id" : "5ef1d525-68c3-3e83-8e2c-f53124def1b4",
    "name" : "Delete a data exporter config - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "5ef1d525-68c3-3e83-8e2c-f53124def1b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deletebulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 320
  }, {
    "id" : "7729135a-6868-3d87-8937-4df11a25fddc",
    "name" : "Delete a data exporter config - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7729135a-6868-3d87-8937-4df11a25fddc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deletebulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 321
  }, {
    "id" : "74707e8a-ea8c-3ffd-841e-dc80639da4c3",
    "name" : "Delete a data exporter config - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "74707e8a-ea8c-3ffd-841e-dc80639da4c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deletebulkDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 322
  }, {
    "id" : "ce20aa34-8f21-3236-b643-72da1254e60f",
    "name" : "Delete a data exporter config (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs/_bulk",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"deleted\" : true,\n  \"id\" : true,\n  \"status\" : \"200\"\n}, {\n  \"deleted\" : true,\n  \"id\" : true,\n  \"status\" : \"200\"\n}, {\n  \"deleted\" : true,\n  \"id\" : true,\n  \"status\" : \"200\"\n}, {\n  \"deleted\" : true,\n  \"id\" : true,\n  \"status\" : \"200\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce20aa34-8f21-3236-b643-72da1254e60f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deletebulkDataExporterConfig",
          "schema" : {
            "items" : {
              "description" : "The bulk response",
              "properties" : {
                "deleted" : {
                  "description" : "Whether the action was carried out correctly or not",
                  "example" : true,
                  "type" : "boolean"
                },
                "id" : {
                  "description" : "Data exporter id",
                  "example" : true,
                  "type" : "boolean"
                },
                "status" : {
                  "description" : "Status",
                  "enum" : [ "200" ],
                  "type" : "string"
                }
              },
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 323
  }, {
    "id" : "ebcc48ed-cb74-3c1d-a2ae-95fdb2c552ce",
    "name" : "Create a new data exporter config - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ebcc48ed-cb74-3c1d-a2ae-95fdb2c552ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 324
  }, {
    "id" : "68732133-c7de-3c15-8358-1f93f1d6304f",
    "name" : "Create a new data exporter config - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "68732133-c7de-3c15-8358-1f93f1d6304f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 325
  }, {
    "id" : "60ba7077-a538-36f5-84dc-f33eb78b4eb5",
    "name" : "Create a new data exporter config - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "60ba7077-a538-36f5-84dc-f33eb78b4eb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDataExporterConfig"
        }
      }
    },
    "insertionIndex" : 326
  }, {
    "id" : "0b4149a6-c7cd-373e-926a-e46b96384e04",
    "name" : "Create a new data exporter config (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"custom\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : { },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b4149a6-c7cd-373e-926a-e46b96384e04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDataExporterConfig",
          "schema" : {
            "description" : "Settings to export Otorshi events",
            "properties" : {
              "bufferSize" : {
                "description" : "buffer size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "config" : {
                "description" : "Data Exporter config",
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/ElasticConfig"
                }, {
                  "$ref" : "#/components/schemas/KafkaConfig"
                }, {
                  "$ref" : "#/components/schemas/PulsarDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/FileDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerGenericExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerConsoleExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailgunExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerMailjetExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/MailerSendgridExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/ConsoleDataExporterConfig"
                }, {
                  "$ref" : "#/components/schemas/CustomDataExporterConfig"
                } ]
              },
              "desc" : {
                "description" : "Description",
                "example" : "a string value",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Boolean",
                "example" : "a string value",
                "type" : "string"
              },
              "filtering" : {
                "$ref" : "#/components/schemas/Filtering"
              },
              "groupDuration" : {
                "description" : "duration",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "groupSize" : {
                "description" : "Group size",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "id" : {
                "description" : "Id",
                "example" : "a string value",
                "type" : "string"
              },
              "jsonWorkers" : {
                "description" : "nb workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "location" : {
                "$ref" : "#/components/schemas/Location"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Metadata",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Name",
                "example" : "a string value",
                "type" : "string"
              },
              "projection" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "projection",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "sendWorkers" : {
                "description" : "send workers",
                "example" : 123123,
                "format" : "int32",
                "type" : "integer"
              },
              "typ" : {
                "description" : "Type of data exporter",
                "enum" : [ "kafka", "pulsar", "file", "mailer", "elastic", "console", "custom" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 327
  }, {
    "id" : "3e80d503-7edb-3291-9526-d5af6fc4bca4",
    "name" : "Get all data exporter configs - 404",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3e80d503-7edb-3291-9526-d5af6fc4bca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllDataExporters"
        }
      }
    },
    "insertionIndex" : 328
  }, {
    "id" : "73863f09-d0e3-336d-96a8-5a4218605d25",
    "name" : "Get all data exporter configs - 401",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "73863f09-d0e3-336d-96a8-5a4218605d25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllDataExporters"
        }
      }
    },
    "insertionIndex" : 329
  }, {
    "id" : "74c895da-73b3-3934-9943-58418881fa91",
    "name" : "Get all data exporter configs - 400",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "74c895da-73b3-3934-9943-58418881fa91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllDataExporters"
        }
      }
    },
    "insertionIndex" : 330
  }, {
    "id" : "2a4a15d0-0432-3cfa-9619-209b8eff18b8",
    "name" : "Get all data exporter configs (application/json)",
    "request" : {
      "urlPath" : "/api/data-exporter-configs",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"kafka\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : {\n    \"ref\" : \"a string value\",\n    \"config\" : {\n      \"key\" : \"value\"\n    }\n  },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"typ\" : \"console\",\n  \"enabled\" : \"a string value\",\n  \"groupDuration\" : 123,\n  \"jsonWorkers\" : 123123,\n  \"name\" : \"a string value\",\n  \"groupSize\" : 123123,\n  \"location\" : {\n    \"teams\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"tenant\" : \"a string value\"\n  },\n  \"id\" : \"a string value\",\n  \"projection\" : {\n    \"key\" : \"value\"\n  },\n  \"config\" : {\n    \"namespace\" : \"a string value\",\n    \"topic\" : \"a string value\",\n    \"uri\" : [ \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\", \"a string value\" ],\n    \"tenant\" : \"a string value\"\n  },\n  \"filtering\" : {\n    \"include\" : [ {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    }, {\n      \"key\" : \"value\"\n    } ],\n    \"exclude\" : [ {\n      \"key\" : \"value\"\n    } ]\n  },\n  \"sendWorkers\" : 123123,\n  \"bufferSize\" : 123123,\n  \"desc\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a4a15d0-0432-3cfa-9619-209b8eff18b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllDataExporters",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/DataExporterConfig"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 331
  }, {
    "id" : "9d81cf8a-94ea-3fe1-826a-29ee52145c83",
    "name" : "Update one validation authorities by id - 404",
    "request" : {
      "urlPath" : "/api/client-validators/551h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9d81cf8a-94ea-3fe1-826a-29ee52145c83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateClientValidator"
        }
      }
    },
    "insertionIndex" : 332
  }, {
    "id" : "c85b60e5-6cff-3396-b474-615c845a0654",
    "name" : "Update one validation authorities by id - 401",
    "request" : {
      "urlPath" : "/api/client-validators/6o2j",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c85b60e5-6cff-3396-b474-615c845a0654",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateClientValidator"
        }
      }
    },
    "insertionIndex" : 333
  }, {
    "id" : "d9b734ef-a536-30bf-a039-c4bdce62ce56",
    "name" : "Update one validation authorities by id - 400",
    "request" : {
      "urlPath" : "/api/client-validators/n381",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d9b734ef-a536-30bf-a039-c4bdce62ce56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateClientValidator"
        }
      }
    },
    "insertionIndex" : 334
  }, {
    "id" : "23a370f9-a9e3-3774-9c27-086b17ad2016",
    "name" : "Update one validation authorities by id (application/json)",
    "request" : {
      "urlPath" : "/api/client-validators/7po7",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headers\" : {\n    \"key\" : \"value\"\n  },\n  \"method\" : \"a string value\",\n  \"badTtl\" : 123,\n  \"description\" : \"a string value\",\n  \"timeout\" : 123,\n  \"url\" : \"a string value\",\n  \"alwaysValid\" : true,\n  \"path\" : \"a string value\",\n  \"noCache\" : true,\n  \"host\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"goodTtl\" : 123,\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23a370f9-a9e3-3774-9c27-086b17ad2016",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateClientValidator",
          "schema" : {
            "description" : "Settings to access a validation authority server",
            "properties" : {
              "alwaysValid" : {
                "description" : "Bypass http calls, every certificates are valids",
                "example" : true,
                "type" : "boolean"
              },
              "badTtl" : {
                "description" : "The TTL for invalid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "description" : {
                "description" : "The description of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "goodTtl" : {
                "description" : "The TTL for valid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "HTTP call headers",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "host" : {
                "description" : "The host of the server",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The id of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "method" : {
                "description" : "The HTTP method",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "noCache" : {
                "description" : "Avoid caching responses",
                "example" : true,
                "type" : "boolean"
              },
              "path" : {
                "description" : "The URL path",
                "example" : "a string value",
                "type" : "string"
              },
              "timeout" : {
                "description" : "The call timeout",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of the server",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "description", "url", "host", "goodTtl", "badTtl", "method", "path", "timeout", "noCache", "alwaysValid", "headers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 335
  }, {
    "id" : "82c8854c-0726-3a52-8e45-c92820620c8b",
    "name" : "Update one validation authorities by id - 404",
    "request" : {
      "urlPath" : "/api/client-validators/n9v1",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "82c8854c-0726-3a52-8e45-c92820620c8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchClientValidator"
        }
      }
    },
    "insertionIndex" : 336
  }, {
    "id" : "7fbd702d-d7e8-33d2-9550-46abe18e63d3",
    "name" : "Update one validation authorities by id - 401",
    "request" : {
      "urlPath" : "/api/client-validators/2296",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7fbd702d-d7e8-33d2-9550-46abe18e63d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchClientValidator"
        }
      }
    },
    "insertionIndex" : 337
  }, {
    "id" : "c7731244-7c23-3812-8847-c1059692242e",
    "name" : "Update one validation authorities by id - 400",
    "request" : {
      "urlPath" : "/api/client-validators/zo92",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c7731244-7c23-3812-8847-c1059692242e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchClientValidator"
        }
      }
    },
    "insertionIndex" : 338
  }, {
    "id" : "75d47b17-e739-31e6-a5d1-671ff46e359f",
    "name" : "Update one validation authorities by id (application/json)",
    "request" : {
      "urlPath" : "/api/client-validators/4x80",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headers\" : {\n    \"key\" : \"value\"\n  },\n  \"method\" : \"a string value\",\n  \"badTtl\" : 123,\n  \"description\" : \"a string value\",\n  \"timeout\" : 123,\n  \"url\" : \"a string value\",\n  \"alwaysValid\" : true,\n  \"path\" : \"a string value\",\n  \"noCache\" : true,\n  \"host\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"goodTtl\" : 123,\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75d47b17-e739-31e6-a5d1-671ff46e359f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchClientValidator",
          "schema" : {
            "description" : "Settings to access a validation authority server",
            "properties" : {
              "alwaysValid" : {
                "description" : "Bypass http calls, every certificates are valids",
                "example" : true,
                "type" : "boolean"
              },
              "badTtl" : {
                "description" : "The TTL for invalid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "description" : {
                "description" : "The description of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "goodTtl" : {
                "description" : "The TTL for valid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "HTTP call headers",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "host" : {
                "description" : "The host of the server",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The id of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "method" : {
                "description" : "The HTTP method",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "noCache" : {
                "description" : "Avoid caching responses",
                "example" : true,
                "type" : "boolean"
              },
              "path" : {
                "description" : "The URL path",
                "example" : "a string value",
                "type" : "string"
              },
              "timeout" : {
                "description" : "The call timeout",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of the server",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "description", "url", "host", "goodTtl", "badTtl", "method", "path", "timeout", "noCache", "alwaysValid", "headers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 339
  }, {
    "id" : "25029d3f-c7ec-3ba8-9642-a31fa567944c",
    "name" : "Get one validation authorities by id - 404",
    "request" : {
      "urlPath" : "/api/client-validators/shw6",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "25029d3f-c7ec-3ba8-9642-a31fa567944c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findClientValidatorById"
        }
      }
    },
    "insertionIndex" : 340
  }, {
    "id" : "d2b7a8a4-bf9c-34c5-97b4-469163b9d584",
    "name" : "Get one validation authorities by id - 401",
    "request" : {
      "urlPath" : "/api/client-validators/dui6",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d2b7a8a4-bf9c-34c5-97b4-469163b9d584",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findClientValidatorById"
        }
      }
    },
    "insertionIndex" : 341
  }, {
    "id" : "f2f49c85-3624-332e-89a5-bdb8ec378a83",
    "name" : "Get one validation authorities by id - 400",
    "request" : {
      "urlPath" : "/api/client-validators/132r",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f2f49c85-3624-332e-89a5-bdb8ec378a83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findClientValidatorById"
        }
      }
    },
    "insertionIndex" : 342
  }, {
    "id" : "1b2fb284-b8c9-310e-b905-d540640b6268",
    "name" : "Get one validation authorities by id (application/json)",
    "request" : {
      "urlPath" : "/api/client-validators/c35s",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headers\" : {\n    \"key\" : \"value\"\n  },\n  \"method\" : \"a string value\",\n  \"badTtl\" : 123,\n  \"description\" : \"a string value\",\n  \"timeout\" : 123,\n  \"url\" : \"a string value\",\n  \"alwaysValid\" : true,\n  \"path\" : \"a string value\",\n  \"noCache\" : true,\n  \"host\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"goodTtl\" : 123,\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b2fb284-b8c9-310e-b905-d540640b6268",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findClientValidatorById",
          "schema" : {
            "description" : "Settings to access a validation authority server",
            "properties" : {
              "alwaysValid" : {
                "description" : "Bypass http calls, every certificates are valids",
                "example" : true,
                "type" : "boolean"
              },
              "badTtl" : {
                "description" : "The TTL for invalid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "description" : {
                "description" : "The description of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "goodTtl" : {
                "description" : "The TTL for valid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "HTTP call headers",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "host" : {
                "description" : "The host of the server",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The id of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "method" : {
                "description" : "The HTTP method",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "noCache" : {
                "description" : "Avoid caching responses",
                "example" : true,
                "type" : "boolean"
              },
              "path" : {
                "description" : "The URL path",
                "example" : "a string value",
                "type" : "string"
              },
              "timeout" : {
                "description" : "The call timeout",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of the server",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "description", "url", "host", "goodTtl", "badTtl", "method", "path", "timeout", "noCache", "alwaysValid", "headers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 343
  }, {
    "id" : "ccdb919b-cc60-39a9-954e-6fa124b72e2f",
    "name" : "Delete one validation authorities by id - 404",
    "request" : {
      "urlPath" : "/api/client-validators/tsjq",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ccdb919b-cc60-39a9-954e-6fa124b72e2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteClientValidator"
        }
      }
    },
    "insertionIndex" : 344
  }, {
    "id" : "fa267132-7eed-3b79-ae1a-598a7820c04a",
    "name" : "Delete one validation authorities by id - 401",
    "request" : {
      "urlPath" : "/api/client-validators/gq94",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "fa267132-7eed-3b79-ae1a-598a7820c04a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteClientValidator"
        }
      }
    },
    "insertionIndex" : 345
  }, {
    "id" : "be15ad71-d6f0-3547-ae97-d06257ce5a69",
    "name" : "Delete one validation authorities by id - 400",
    "request" : {
      "urlPath" : "/api/client-validators/7t76",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "be15ad71-d6f0-3547-ae97-d06257ce5a69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteClientValidator"
        }
      }
    },
    "insertionIndex" : 346
  }, {
    "id" : "83406787-b487-311a-8315-ea890ed93f7e",
    "name" : "Delete one validation authorities by id (application/json)",
    "request" : {
      "urlPath" : "/api/client-validators/bn56",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83406787-b487-311a-8315-ea890ed93f7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteClientValidator",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 347
  }, {
    "id" : "79255a05-7a7e-3ef8-967b-4e9a8a02355a",
    "name" : "Create one validation authorities - 404",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "79255a05-7a7e-3ef8-967b-4e9a8a02355a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createClientValidator"
        }
      }
    },
    "insertionIndex" : 348
  }, {
    "id" : "c03a16c4-c8b5-38ed-9768-bcb7b0174136",
    "name" : "Create one validation authorities - 401",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c03a16c4-c8b5-38ed-9768-bcb7b0174136",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createClientValidator"
        }
      }
    },
    "insertionIndex" : 349
  }, {
    "id" : "1c37aeb4-3e0c-3e52-b671-45690746a2f3",
    "name" : "Create one validation authorities - 400",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1c37aeb4-3e0c-3e52-b671-45690746a2f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createClientValidator"
        }
      }
    },
    "insertionIndex" : 350
  }, {
    "id" : "d4b13cba-2bb4-304e-a61e-029917374f6b",
    "name" : "Create one validation authorities (application/json)",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headers\" : {\n    \"key\" : \"value\"\n  },\n  \"method\" : \"a string value\",\n  \"badTtl\" : 123,\n  \"description\" : \"a string value\",\n  \"timeout\" : 123,\n  \"url\" : \"a string value\",\n  \"alwaysValid\" : true,\n  \"path\" : \"a string value\",\n  \"noCache\" : true,\n  \"host\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"goodTtl\" : 123,\n  \"id\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4b13cba-2bb4-304e-a61e-029917374f6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createClientValidator",
          "schema" : {
            "description" : "Settings to access a validation authority server",
            "properties" : {
              "alwaysValid" : {
                "description" : "Bypass http calls, every certificates are valids",
                "example" : true,
                "type" : "boolean"
              },
              "badTtl" : {
                "description" : "The TTL for invalid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "description" : {
                "description" : "The description of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "goodTtl" : {
                "description" : "The TTL for valid access response caching",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "headers" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "HTTP call headers",
                "example" : {
                  "key" : "value"
                },
                "type" : "object"
              },
              "host" : {
                "description" : "The host of the server",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "The id of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "method" : {
                "description" : "The HTTP method",
                "example" : "a string value",
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the settings",
                "example" : "a string value",
                "type" : "string"
              },
              "noCache" : {
                "description" : "Avoid caching responses",
                "example" : true,
                "type" : "boolean"
              },
              "path" : {
                "description" : "The URL path",
                "example" : "a string value",
                "type" : "string"
              },
              "timeout" : {
                "description" : "The call timeout",
                "example" : 123,
                "format" : "int64",
                "type" : "integer"
              },
              "url" : {
                "description" : "The URL of the server",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "name", "description", "url", "host", "goodTtl", "badTtl", "method", "path", "timeout", "noCache", "alwaysValid", "headers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 351
  }, {
    "id" : "a61f15f2-b0fe-3abd-ade7-a5f065c515fc",
    "name" : "Get all validation authoritiess - 404",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "a61f15f2-b0fe-3abd-ade7-a5f065c515fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllClientValidators"
        }
      }
    },
    "insertionIndex" : 352
  }, {
    "id" : "7a772a88-61bd-3d81-a9df-c5b0fd79bd4a",
    "name" : "Get all validation authoritiess - 401",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7a772a88-61bd-3d81-a9df-c5b0fd79bd4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllClientValidators"
        }
      }
    },
    "insertionIndex" : 353
  }, {
    "id" : "44ac9a58-4ab8-3060-813d-0baaee164d28",
    "name" : "Get all validation authoritiess - 400",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "44ac9a58-4ab8-3060-813d-0baaee164d28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllClientValidators"
        }
      }
    },
    "insertionIndex" : 354
  }, {
    "id" : "a6721fc9-7e4f-39c2-b81e-3e2b37161273",
    "name" : "Get all validation authoritiess (application/json)",
    "request" : {
      "urlPath" : "/api/client-validators",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"headers\" : {\n    \"key\" : \"value\"\n  },\n  \"method\" : \"a string value\",\n  \"badTtl\" : 123,\n  \"description\" : \"a string value\",\n  \"timeout\" : 123,\n  \"url\" : \"a string value\",\n  \"alwaysValid\" : true,\n  \"path\" : \"a string value\",\n  \"noCache\" : true,\n  \"host\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"goodTtl\" : 123,\n  \"id\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6721fc9-7e4f-39c2-b81e-3e2b37161273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllClientValidators",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ValidationAuthority"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 355
  }, {
    "id" : "ee3ac716-189e-3ad5-a697-0581d9b63bcb",
    "name" : "Update one certificate by id - 404",
    "request" : {
      "urlPath" : "/api/certificates/o4z8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "ee3ac716-189e-3ad5-a697-0581d9b63bcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putCert"
        }
      }
    },
    "insertionIndex" : 356
  }, {
    "id" : "566c7d71-11b9-354c-bc1b-590fe6a295b6",
    "name" : "Update one certificate by id - 401",
    "request" : {
      "urlPath" : "/api/certificates/s238",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "566c7d71-11b9-354c-bc1b-590fe6a295b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putCert"
        }
      }
    },
    "insertionIndex" : 357
  }, {
    "id" : "16a72446-5fc6-3867-a063-8ca60e9c9f92",
    "name" : "Update one certificate by id - 400",
    "request" : {
      "urlPath" : "/api/certificates/6lo8",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "16a72446-5fc6-3867-a063-8ca60e9c9f92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putCert"
        }
      }
    },
    "insertionIndex" : 358
  }, {
    "id" : "2fa73f68-5a36-3b96-9b46-0660baa817d9",
    "name" : "Update one certificate by id (application/json)",
    "request" : {
      "urlPath" : "/api/certificates/o83y",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fa73f68-5a36-3b96-9b46-0660baa817d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "putCert",
          "schema" : {
            "description" : "A SSL/TLS X509 certificate",
            "properties" : {
              "autoRenew" : {
                "description" : "Allow Otoroshi to renew the certificate (if self signed)",
                "example" : "a string value",
                "type" : "string"
              },
              "ca" : {
                "description" : "Certificate is a CA (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "caRef" : {
                "description" : "Reference for a CA certificate in otoroshi",
                "example" : "a string value",
                "type" : "string"
              },
              "chain" : {
                "description" : "Certificate chain of trust in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "domain" : {
                "description" : "Domain of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "from" : {
                "description" : "Start date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "Id of the certificate",
                "example" : "a string value",
                "type" : "string"
              },
              "privateKey" : {
                "description" : "PKCS8 private key in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "selfSigned" : {
                "description" : "Certificate is self signed  read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "subject" : {
                "description" : "Subject of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "to" : {
                "description" : "End date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "valid" : {
                "description" : "Certificate is valid (read only)",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "chain", "privateKey", "caRef", "domain", "selfSigned", "ca", "valid", "autoRenew", "subject", "from", "to" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 359
  }, {
    "id" : "31d0408b-0e2a-31cf-83ac-e4177701d880",
    "name" : "Update one certificate by id - 404",
    "request" : {
      "urlPath" : "/api/certificates/78x3",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "31d0408b-0e2a-31cf-83ac-e4177701d880",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchCert"
        }
      }
    },
    "insertionIndex" : 360
  }, {
    "id" : "5eb4fee3-078f-31ac-9d16-d53222375c42",
    "name" : "Update one certificate by id - 401",
    "request" : {
      "urlPath" : "/api/certificates/xcu9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5eb4fee3-078f-31ac-9d16-d53222375c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchCert"
        }
      }
    },
    "insertionIndex" : 361
  }, {
    "id" : "6b80f980-3739-355a-9d0e-af532f1b2c69",
    "name" : "Update one certificate by id - 400",
    "request" : {
      "urlPath" : "/api/certificates/62a2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6b80f980-3739-355a-9d0e-af532f1b2c69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchCert"
        }
      }
    },
    "insertionIndex" : 362
  }, {
    "id" : "35ffa7cc-c488-3e00-8b2c-1a6e64a52eb8",
    "name" : "Update one certificate by id (application/json)",
    "request" : {
      "urlPath" : "/api/certificates/62bx",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35ffa7cc-c488-3e00-8b2c-1a6e64a52eb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchCert",
          "schema" : {
            "description" : "A SSL/TLS X509 certificate",
            "properties" : {
              "autoRenew" : {
                "description" : "Allow Otoroshi to renew the certificate (if self signed)",
                "example" : "a string value",
                "type" : "string"
              },
              "ca" : {
                "description" : "Certificate is a CA (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "caRef" : {
                "description" : "Reference for a CA certificate in otoroshi",
                "example" : "a string value",
                "type" : "string"
              },
              "chain" : {
                "description" : "Certificate chain of trust in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "domain" : {
                "description" : "Domain of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "from" : {
                "description" : "Start date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "Id of the certificate",
                "example" : "a string value",
                "type" : "string"
              },
              "privateKey" : {
                "description" : "PKCS8 private key in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "selfSigned" : {
                "description" : "Certificate is self signed  read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "subject" : {
                "description" : "Subject of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "to" : {
                "description" : "End date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "valid" : {
                "description" : "Certificate is valid (read only)",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "chain", "privateKey", "caRef", "domain", "selfSigned", "ca", "valid", "autoRenew", "subject", "from", "to" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 363
  }, {
    "id" : "c46a270b-64ad-304d-8e01-9f78b7f34895",
    "name" : "Get one certificate by id - 404",
    "request" : {
      "urlPath" : "/api/certificates/ngf9",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c46a270b-64ad-304d-8e01-9f78b7f34895",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oneCert"
        }
      }
    },
    "insertionIndex" : 364
  }, {
    "id" : "a3df7b59-6881-3d2b-ac38-65fd65234927",
    "name" : "Get one certificate by id - 401",
    "request" : {
      "urlPath" : "/api/certificates/zd65",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a3df7b59-6881-3d2b-ac38-65fd65234927",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oneCert"
        }
      }
    },
    "insertionIndex" : 365
  }, {
    "id" : "b050876a-7632-3929-a20a-02c68574488c",
    "name" : "Get one certificate by id - 400",
    "request" : {
      "urlPath" : "/api/certificates/0465",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b050876a-7632-3929-a20a-02c68574488c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oneCert"
        }
      }
    },
    "insertionIndex" : 366
  }, {
    "id" : "b288ae80-a454-3f87-82dd-f4a11782964a",
    "name" : "Get one certificate by id (application/json)",
    "request" : {
      "urlPath" : "/api/certificates/c9m7",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b288ae80-a454-3f87-82dd-f4a11782964a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "oneCert",
          "schema" : {
            "description" : "A SSL/TLS X509 certificate",
            "properties" : {
              "autoRenew" : {
                "description" : "Allow Otoroshi to renew the certificate (if self signed)",
                "example" : "a string value",
                "type" : "string"
              },
              "ca" : {
                "description" : "Certificate is a CA (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "caRef" : {
                "description" : "Reference for a CA certificate in otoroshi",
                "example" : "a string value",
                "type" : "string"
              },
              "chain" : {
                "description" : "Certificate chain of trust in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "domain" : {
                "description" : "Domain of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "from" : {
                "description" : "Start date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "Id of the certificate",
                "example" : "a string value",
                "type" : "string"
              },
              "privateKey" : {
                "description" : "PKCS8 private key in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "selfSigned" : {
                "description" : "Certificate is self signed  read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "subject" : {
                "description" : "Subject of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "to" : {
                "description" : "End date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "valid" : {
                "description" : "Certificate is valid (read only)",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "chain", "privateKey", "caRef", "domain", "selfSigned", "ca", "valid", "autoRenew", "subject", "from", "to" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 367
  }, {
    "id" : "8dbefe26-9b98-372f-9dce-ec91242fd74f",
    "name" : "Delete one certificate by id - 404",
    "request" : {
      "urlPath" : "/api/certificates/fi1c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8dbefe26-9b98-372f-9dce-ec91242fd74f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteCert"
        }
      }
    },
    "insertionIndex" : 368
  }, {
    "id" : "d458427d-b55c-3b51-a2de-77e3914146e9",
    "name" : "Delete one certificate by id - 401",
    "request" : {
      "urlPath" : "/api/certificates/10l9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d458427d-b55c-3b51-a2de-77e3914146e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteCert"
        }
      }
    },
    "insertionIndex" : 369
  }, {
    "id" : "50b5396d-c8b3-3d58-8687-c62c6efbb89d",
    "name" : "Delete one certificate by id - 400",
    "request" : {
      "urlPath" : "/api/certificates/jkxg",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "50b5396d-c8b3-3d58-8687-c62c6efbb89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteCert"
        }
      }
    },
    "insertionIndex" : 370
  }, {
    "id" : "967ebe85-975b-3f11-8213-ad291da0f11d",
    "name" : "Delete one certificate by id (application/json)",
    "request" : {
      "urlPath" : "/api/certificates/qv52",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "967ebe85-975b-3f11-8213-ad291da0f11d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteCert",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 371
  }, {
    "id" : "44d8cdc5-d703-3e5d-bb16-d634307daf71",
    "name" : "Create one certificate - 404",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "44d8cdc5-d703-3e5d-bb16-d634307daf71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createCert"
        }
      }
    },
    "insertionIndex" : 372
  }, {
    "id" : "b1d2b7e8-b887-396e-b256-fa8a5424b694",
    "name" : "Create one certificate - 401",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b1d2b7e8-b887-396e-b256-fa8a5424b694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createCert"
        }
      }
    },
    "insertionIndex" : 373
  }, {
    "id" : "de87e3c2-1a90-39cb-8410-6a5668992ff0",
    "name" : "Create one certificate - 400",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "de87e3c2-1a90-39cb-8410-6a5668992ff0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createCert"
        }
      }
    },
    "insertionIndex" : 374
  }, {
    "id" : "10bb614e-55a1-3792-92b7-7689e8b760d6",
    "name" : "Create one certificate (application/json)",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10bb614e-55a1-3792-92b7-7689e8b760d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createCert",
          "schema" : {
            "description" : "A SSL/TLS X509 certificate",
            "properties" : {
              "autoRenew" : {
                "description" : "Allow Otoroshi to renew the certificate (if self signed)",
                "example" : "a string value",
                "type" : "string"
              },
              "ca" : {
                "description" : "Certificate is a CA (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "caRef" : {
                "description" : "Reference for a CA certificate in otoroshi",
                "example" : "a string value",
                "type" : "string"
              },
              "chain" : {
                "description" : "Certificate chain of trust in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "domain" : {
                "description" : "Domain of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "from" : {
                "description" : "Start date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "id" : {
                "description" : "Id of the certificate",
                "example" : "a string value",
                "type" : "string"
              },
              "privateKey" : {
                "description" : "PKCS8 private key in PEM format",
                "example" : "a string value",
                "type" : "string"
              },
              "selfSigned" : {
                "description" : "Certificate is self signed  read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "subject" : {
                "description" : "Subject of the certificate (read only)",
                "example" : "a string value",
                "type" : "string"
              },
              "to" : {
                "description" : "End date of validity",
                "example" : "a string value",
                "type" : "string"
              },
              "valid" : {
                "description" : "Certificate is valid (read only)",
                "example" : "a string value",
                "type" : "string"
              }
            },
            "required" : [ "id", "chain", "privateKey", "caRef", "domain", "selfSigned", "ca", "valid", "autoRenew", "subject", "from", "to" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 375
  }, {
    "id" : "e02ff15b-2483-321e-b06f-987a3c26df5e",
    "name" : "Get all certificates - 404",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "e02ff15b-2483-321e-b06f-987a3c26df5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allCerts"
        }
      }
    },
    "insertionIndex" : 376
  }, {
    "id" : "ca786fcc-dad3-310f-bfef-1fbcc19646aa",
    "name" : "Get all certificates - 401",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ca786fcc-dad3-310f-bfef-1fbcc19646aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allCerts"
        }
      }
    },
    "insertionIndex" : 377
  }, {
    "id" : "eb30a15a-9339-3e1f-ad9b-2e6ac6587e52",
    "name" : "Get all certificates - 400",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "eb30a15a-9339-3e1f-ad9b-2e6ac6587e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allCerts"
        }
      }
    },
    "insertionIndex" : 378
  }, {
    "id" : "5c0af173-c331-39d8-89f8-98b8c298e547",
    "name" : "Get all certificates (application/json)",
    "request" : {
      "urlPath" : "/api/certificates",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n}, {\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n}, {\n  \"valid\" : \"a string value\",\n  \"privateKey\" : \"a string value\",\n  \"chain\" : \"a string value\",\n  \"caRef\" : \"a string value\",\n  \"subject\" : \"a string value\",\n  \"domain\" : \"a string value\",\n  \"autoRenew\" : \"a string value\",\n  \"from\" : \"a string value\",\n  \"selfSigned\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"to\" : \"a string value\",\n  \"ca\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c0af173-c331-39d8-89f8-98b8c298e547",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allCerts",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Certificate"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 379
  }, {
    "id" : "9289c47c-2ab4-3bf5-972b-4b4f9cb10f23",
    "name" : "Update one global auth. module config - 404",
    "request" : {
      "urlPath" : "/api/auths/071c",
      "method" : "PUT"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "9289c47c-2ab4-3bf5-972b-4b4f9cb10f23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 380
  }, {
    "id" : "757d220e-d72a-3dc8-8dc8-5d2d8b2c6197",
    "name" : "Update one global auth. module config - 401",
    "request" : {
      "urlPath" : "/api/auths/r8s2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "757d220e-d72a-3dc8-8dc8-5d2d8b2c6197",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 381
  }, {
    "id" : "17a5f75b-1eb7-382d-a3f4-fff3f6702f65",
    "name" : "Update one global auth. module config - 400",
    "request" : {
      "urlPath" : "/api/auths/6odg",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "17a5f75b-1eb7-382d-a3f4-fff3f6702f65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 382
  }, {
    "id" : "6b69a077-1cc4-38bb-b0f3-58607b6e7c3c",
    "name" : "Update one global auth. module config (application/json)",
    "request" : {
      "urlPath" : "/api/auths/20e1",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessionMaxAge\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"users\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  } ],\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b69a077-1cc4-38bb-b0f3-58607b6e7c3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateGlobalAuthModule",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/LdapAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/InMemoryAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/GenericOauth2ModuleConfig"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 383
  }, {
    "id" : "0508d242-421a-3cb0-876c-9b883271f378",
    "name" : "Update one global auth. module config - 404",
    "request" : {
      "urlPath" : "/api/auths/9578",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0508d242-421a-3cb0-876c-9b883271f378",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 384
  }, {
    "id" : "141d3da2-8359-36c7-8e9a-99f39c21d635",
    "name" : "Update one global auth. module config - 401",
    "request" : {
      "urlPath" : "/api/auths/1gkn",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "141d3da2-8359-36c7-8e9a-99f39c21d635",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 385
  }, {
    "id" : "c8079746-7da4-32eb-a864-654d2bc74850",
    "name" : "Update one global auth. module config - 400",
    "request" : {
      "urlPath" : "/api/auths/r673",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "c8079746-7da4-32eb-a864-654d2bc74850",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 386
  }, {
    "id" : "97e42d67-59ad-3713-a4f5-f600c500c805",
    "name" : "Update one global auth. module config (application/json)",
    "request" : {
      "urlPath" : "/api/auths/27qi",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"groupFilter\" : \"a string value\",\n  \"searchBase\" : \"a string value\",\n  \"nameField\" : \"a string value\",\n  \"userBase\" : \"a string value\",\n  \"emailField\" : \"a string value\",\n  \"otoroshiDataField\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"adminUsername\" : \"a string value\",\n  \"sessionMaxAge\" : 123123,\n  \"serverUrl\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"adminPassword\" : \"a string value\",\n  \"desc\" : \"a string value\",\n  \"searchFilter\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97e42d67-59ad-3713-a4f5-f600c500c805",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "patchGlobalAuthModule",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/LdapAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/InMemoryAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/GenericOauth2ModuleConfig"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 387
  }, {
    "id" : "8a5e4573-660b-3eb6-9872-03cf87765972",
    "name" : "Get one global auth. module configs - 404",
    "request" : {
      "urlPath" : "/api/auths/r66i",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8a5e4573-660b-3eb6-9872-03cf87765972",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalAuthModuleById"
        }
      }
    },
    "insertionIndex" : 388
  }, {
    "id" : "3c409397-779b-3a5e-9cf1-e582511ef305",
    "name" : "Get one global auth. module configs - 401",
    "request" : {
      "urlPath" : "/api/auths/6c7y",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3c409397-779b-3a5e-9cf1-e582511ef305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalAuthModuleById"
        }
      }
    },
    "insertionIndex" : 389
  }, {
    "id" : "de9eb8ae-5db2-36f8-9bfc-4884c8ecf842",
    "name" : "Get one global auth. module configs - 400",
    "request" : {
      "urlPath" : "/api/auths/38rt",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "de9eb8ae-5db2-36f8-9bfc-4884c8ecf842",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalAuthModuleById"
        }
      }
    },
    "insertionIndex" : 390
  }, {
    "id" : "440de75a-8d1a-30c7-bc21-e19bf71b53df",
    "name" : "Get one global auth. module configs (application/json)",
    "request" : {
      "urlPath" : "/api/auths/67lv",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sessionMaxAge\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"users\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  } ],\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "440de75a-8d1a-30c7-bc21-e19bf71b53df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findGlobalAuthModuleById",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/LdapAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/InMemoryAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/GenericOauth2ModuleConfig"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 391
  }, {
    "id" : "865e791a-17ba-38f4-96b3-2fd324a77cb4",
    "name" : "Delete one global auth. module config - 404",
    "request" : {
      "urlPath" : "/api/auths/97i7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "865e791a-17ba-38f4-96b3-2fd324a77cb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 392
  }, {
    "id" : "4bab3d1a-9b9f-3635-80d3-1e3f7ccb0b98",
    "name" : "Delete one global auth. module config - 401",
    "request" : {
      "urlPath" : "/api/auths/jwqs",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4bab3d1a-9b9f-3635-80d3-1e3f7ccb0b98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 393
  }, {
    "id" : "f9faa4a0-1b7f-374b-b0e9-a7cea2c99c0a",
    "name" : "Delete one global auth. module config - 400",
    "request" : {
      "urlPath" : "/api/auths/cgrp",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f9faa4a0-1b7f-374b-b0e9-a7cea2c99c0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 394
  }, {
    "id" : "ab9f58db-a27c-3039-a1e7-60cd77f7d6c5",
    "name" : "Delete one global auth. module config (application/json)",
    "request" : {
      "urlPath" : "/api/auths/r7n2",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deleted\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab9f58db-a27c-3039-a1e7-60cd77f7d6c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteGlobalAuthModule",
          "schema" : {
            "properties" : {
              "deleted" : {
                "example" : true,
                "type" : "boolean"
              }
            },
            "required" : [ "deleted" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 395
  }, {
    "id" : "659adabf-a561-3060-a8b4-311f43a805c7",
    "name" : "Create one global auth. module config - 404",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "POST"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "659adabf-a561-3060-a8b4-311f43a805c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 396
  }, {
    "id" : "0ce03907-83be-30f9-a717-c0e4c93c25b3",
    "name" : "Create one global auth. module config - 401",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0ce03907-83be-30f9-a717-c0e4c93c25b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 397
  }, {
    "id" : "9b8a5178-75d3-316c-9f77-662d359b6a15",
    "name" : "Create one global auth. module config - 400",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9b8a5178-75d3-316c-9f77-662d359b6a15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalAuthModule"
        }
      }
    },
    "insertionIndex" : 398
  }, {
    "id" : "9ccb386e-faa4-3dbc-a8f6-9dd49cde10bf",
    "name" : "Create one global auth. module config (application/json)",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userInfoUrl\" : \"a string value\",\n  \"authorizeUrl\" : \"a string value\",\n  \"clientId\" : \"a string value\",\n  \"tokenUrl\" : \"a string value\",\n  \"useJson\" : true,\n  \"nameField\" : \"a string value\",\n  \"emailField\" : \"a string value\",\n  \"otoroshiDataField\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"jwtVerifier\" : {\n    \"size\" : 123123,\n    \"secret\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"sessionMaxAge\" : 123123,\n  \"loginUrl\" : \"a string value\",\n  \"logoutUrl\" : \"a string value\",\n  \"oidConfig\" : \"a string value\",\n  \"readProfileFromToken\" : true,\n  \"scope\" : \"a string value\",\n  \"useCookies\" : true,\n  \"claims\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"callbackUrl\" : \"a string value\",\n  \"clientSecret\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"accessTokenField\" : \"a string value\",\n  \"desc\" : \"a string value\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ccb386e-faa4-3dbc-a8f6-9dd49cde10bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createGlobalAuthModule",
          "schema" : {
            "oneOf" : [ {
              "$ref" : "#/components/schemas/LdapAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/InMemoryAuthModuleConfig"
            }, {
              "$ref" : "#/components/schemas/GenericOauth2ModuleConfig"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 399
  }, {
    "id" : "c03deceb-c069-31b4-a45b-549898cc6d21",
    "name" : "Get all global auth. module configs - 404",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "c03deceb-c069-31b4-a45b-549898cc6d21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalAuthModules"
        }
      }
    },
    "insertionIndex" : 400
  }, {
    "id" : "a2ff1737-f1a1-31c3-88c8-c0cec5113bf8",
    "name" : "Get all global auth. module configs - 401",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "a2ff1737-f1a1-31c3-88c8-c0cec5113bf8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalAuthModules"
        }
      }
    },
    "insertionIndex" : 401
  }, {
    "id" : "a3d125d0-980d-3921-a449-8c7bbfae1d51",
    "name" : "Get all global auth. module configs - 400",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a3d125d0-980d-3921-a449-8c7bbfae1d51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalAuthModules"
        }
      }
    },
    "insertionIndex" : 402
  }, {
    "id" : "09f624a0-5868-3d3c-bec7-0da4ea4e7714",
    "name" : "Get all global auth. module configs (application/json)",
    "request" : {
      "urlPath" : "/api/auths",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"userInfoUrl\" : \"a string value\",\n  \"authorizeUrl\" : \"a string value\",\n  \"clientId\" : \"a string value\",\n  \"tokenUrl\" : \"a string value\",\n  \"useJson\" : true,\n  \"nameField\" : \"a string value\",\n  \"emailField\" : \"a string value\",\n  \"otoroshiDataField\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"jwtVerifier\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"sessionMaxAge\" : 123123,\n  \"loginUrl\" : \"a string value\",\n  \"logoutUrl\" : \"a string value\",\n  \"oidConfig\" : \"a string value\",\n  \"readProfileFromToken\" : true,\n  \"scope\" : \"a string value\",\n  \"useCookies\" : true,\n  \"claims\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"callbackUrl\" : \"a string value\",\n  \"clientSecret\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"accessTokenField\" : \"a string value\",\n  \"desc\" : \"a string value\"\n}, {\n  \"sessionMaxAge\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"users\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  } ],\n  \"desc\" : \"a string value\"\n}, {\n  \"userInfoUrl\" : \"a string value\",\n  \"authorizeUrl\" : \"a string value\",\n  \"clientId\" : \"a string value\",\n  \"tokenUrl\" : \"a string value\",\n  \"useJson\" : true,\n  \"nameField\" : \"a string value\",\n  \"emailField\" : \"a string value\",\n  \"otoroshiDataField\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"jwtVerifier\" : {\n    \"privateKey\" : \"a string value\",\n    \"size\" : 123123,\n    \"publicKey\" : \"a string value\",\n    \"type\" : \"a string value\"\n  },\n  \"sessionMaxAge\" : 123123,\n  \"loginUrl\" : \"a string value\",\n  \"logoutUrl\" : \"a string value\",\n  \"oidConfig\" : \"a string value\",\n  \"readProfileFromToken\" : true,\n  \"scope\" : \"a string value\",\n  \"useCookies\" : true,\n  \"claims\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"callbackUrl\" : \"a string value\",\n  \"clientSecret\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"accessTokenField\" : \"a string value\",\n  \"desc\" : \"a string value\"\n}, {\n  \"sessionMaxAge\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"users\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  } ],\n  \"desc\" : \"a string value\"\n}, {\n  \"userInfoUrl\" : \"a string value\",\n  \"authorizeUrl\" : \"a string value\",\n  \"clientId\" : \"a string value\",\n  \"tokenUrl\" : \"a string value\",\n  \"useJson\" : true,\n  \"nameField\" : \"a string value\",\n  \"emailField\" : \"a string value\",\n  \"otoroshiDataField\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"jwtVerifier\" : {\n    \"headers\" : {\n      \"key\" : \"value\"\n    },\n    \"kty\" : \"a string value\",\n    \"type\" : \"a string value\",\n    \"ttl\" : 123,\n    \"timeout\" : 123,\n    \"url\" : \"a string value\"\n  },\n  \"sessionMaxAge\" : 123123,\n  \"loginUrl\" : \"a string value\",\n  \"logoutUrl\" : \"a string value\",\n  \"oidConfig\" : \"a string value\",\n  \"readProfileFromToken\" : true,\n  \"scope\" : \"a string value\",\n  \"useCookies\" : true,\n  \"claims\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"callbackUrl\" : \"a string value\",\n  \"clientSecret\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"accessTokenField\" : \"a string value\",\n  \"desc\" : \"a string value\"\n}, {\n  \"sessionMaxAge\" : \"a string value\",\n  \"name\" : \"a string value\",\n  \"id\" : \"a string value\",\n  \"type\" : \"a string value\",\n  \"users\" : [ {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  }, {\n    \"metadata\" : {\n      \"key\" : \"value\"\n    },\n    \"password\" : \"a string value\",\n    \"name\" : \"a string value\",\n    \"email\" : \"a string value\"\n  } ],\n  \"desc\" : \"a string value\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09f624a0-5868-3d3c-bec7-0da4ea4e7714",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "findAllGlobalAuthModules",
          "schema" : {
            "items" : {
              "oneOf" : [ {
                "$ref" : "#/components/schemas/LdapAuthModuleConfig"
              }, {
                "$ref" : "#/components/schemas/InMemoryAuthModuleConfig"
              }, {
                "$ref" : "#/components/schemas/GenericOauth2ModuleConfig"
              } ]
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 403
  }, {
    "id" : "3f0c7245-eaf9-3247-a9c1-16e4d5762e4b",
    "name" : "Get all api keys - 404",
    "request" : {
      "urlPath" : "/api/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "3f0c7245-eaf9-3247-a9c1-16e4d5762e4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allApiKeys"
        }
      }
    },
    "insertionIndex" : 404
  }, {
    "id" : "3f8cd57b-257f-3f2c-b9c2-5279ea184b2b",
    "name" : "Get all api keys - 401",
    "request" : {
      "urlPath" : "/api/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3f8cd57b-257f-3f2c-b9c2-5279ea184b2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allApiKeys"
        }
      }
    },
    "insertionIndex" : 405
  }, {
    "id" : "5a18d4a2-563f-3dbd-8f7f-c6aeb615a5e3",
    "name" : "Get all api keys - 400",
    "request" : {
      "urlPath" : "/api/apikeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5a18d4a2-563f-3dbd-8f7f-c6aeb615a5e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allApiKeys"
        }
      }
    },
    "insertionIndex" : 406
  }, {
    "id" : "5d7e903d-035b-3474-870a-07062212f660",
    "name" : "Get all api keys (application/json)",
    "request" : {
      "urlPath" : "/api/apikeys",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n}, {\n  \"metadata\" : {\n    \"key\" : \"value\"\n  },\n  \"clientId\" : \"a string value\",\n  \"monthlyQuota\" : 123,\n  \"throttlingQuota\" : 123,\n  \"clientName\" : \"a string value\",\n  \"authorizedEntities\" : [ \"a string value\" ],\n  \"clientSecret\" : \"a string value\",\n  \"dailyQuota\" : 123,\n  \"enabled\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d7e903d-035b-3474-870a-07062212f660",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "allApiKeys",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ApiKey"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 407
  } ]
}