{
  "mappings" : [ {
    "id" : "bb886945-bbc2-3b1f-8ab2-47c69ee4f839",
    "name" : "Upload a stream of data without completing the upload. - 202",
    "request" : {
      "urlPath" : "/d0c040b6-13d2-313e-90e2-d74f886771df",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "bb886945-bbc2-3b1f-8ab2-47c69ee4f839",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Upload"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4fe50c41-c925-3d64-a62d-d4c1aa74199e",
    "name" : "Cancel outstanding upload processes, releasing associated resources. If this is ... - 204",
    "request" : {
      "urlPath" : "/1e647626-ceea-3618-a34b-33f8d2574336",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4fe50c41-c925-3d64-a62d-d4c1aa74199e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_CancelUpload"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "24f3c5be-ff07-3819-8143-dc15bb580702",
    "name" : "Complete the upload, providing all the data in the body, if necessary. A request... - 201",
    "request" : {
      "urlPath" : "/1198d8e0-fb95-35a9-9031-212e0d9a8a19",
      "method" : "PUT",
      "queryParameters" : {
        "digest" : {
          "equalTo" : "ooi9jw3g8gmug65oz8lpbhjwb88fjyw45vu8i8xybx0ec3yc25s55p955h52uqncsi4m5iom140xcr7e2rjdxxn0d1migo3kuxouam3enz37krwdv4h1ieyamgcb70tsi8inzdjf"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "24f3c5be-ff07-3819-8143-dc15bb580702",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_EndUpload"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "9bafa930-59f9-3efc-ab45-78deec0547c1",
    "name" : "Retrieve status of upload identified by uuid. The primary purpose of this endpoi... - 204",
    "request" : {
      "urlPath" : "/6334cf86-436d-3933-88ca-26bdd89a7f8f",
      "method" : "GET"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9bafa930-59f9-3efc-ab45-78deec0547c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_GetStatus"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "1055f993-ec63-310f-acb6-47f9ffc2e938",
    "name" : "Delete the manifest identified by `name` and `reference`. Note that a manifest c... - 202",
    "request" : {
      "urlPath" : "/v2/Ahmad+Lang/manifests/zzvo3msplha8psqwy3mmdyo1d7duw7sen8eqeb9u6f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "1055f993-ec63-310f-acb6-47f9ffc2e938",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Manifests_Delete"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c1c75312-c949-3157-b1c2-0a76c20fc8b5",
    "name" : "Put the manifest identified by `name` and `reference` where `reference` can be a...",
    "request" : {
      "urlPath" : "/v2/Russ+Mills+IV/manifests/t208lwmie6cb6dgznkm1ith9am8kenex715lfx3byrgazdt0lc92s3haf02h3f351wnq7ls1siq5fe7khvv36p9avswbit0p1kx94v7khulox2nmhkqh01j2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 201,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1c75312-c949-3157-b1c2-0a76c20fc8b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Manifests_Create",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "bb64654e-0a2b-3d47-89f7-f5281039cd54",
    "name" : "Get the manifest identified by `name` and `reference` where `reference` can be a...",
    "request" : {
      "urlPath" : "/v2/Ms.+Lorri+Russel/manifests/82b5553w23f9rdlhm4l7407io4blaheji9unkefnscla34yf5ws4z4gc1mml8dxytj8l9ejxh3b4v7c00ppg2kzimyrfe7e3x9czbo9dgp4jaoap28d91xe84oike",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"schemaVersion\" : 7673910649389900028,\n  \"layers\" : [ {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  }, {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  }, {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  }, {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  }, {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  }, {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  }, {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  } ],\n  \"manifests\" : [ {\n    \"size\" : 4166652244397467726,\n    \"digest\" : \"40g7v5nvbtbkcnoivcfuxk9wnbkonnsq97vk36jib81502gd8ej2o54y9cu48qe99km3q0vgvshx2j1olab279ilcl5tk6vlwhjdibm9f3v5muj3bm9llckk9m3khp2ju01crgi\",\n    \"mediaType\" : \"p0dnt485ztinvk5hwmn8fbnr8t6q0mmbyvl33pnjp610bmu4swkl7c4tark3aqxg6c1ct7riziill0xl\",\n    \"platform\" : {\n      \"features\" : [ \"uehxm9\", \"ow0k2f4mv20337p419q89zztl7oqfrfnt05x84ktniarckyodh4tx1vr6uf1as2lyewo78a75hn6ru3l4k9m0os3eunx6tt6w0t83szuhyfsohznyvvmm1exmtgheffl3g8p1j282higo1ipfdkecswpml6emhx8qppss7kbijty999g2e\", \"4pgy1h0kmj3l9dg7gevvxuj1sc3ieu53qqtwa3cb1ak49lzedn9wvmohv5n971r6vox0yhol5nvdssk1nionuyzevmd4\", \"ckvbv3i82xke6jcxw958ci45gc22nm5p5u08hdf35f9fyg8h1ousrgmtx9fdnj3lmil1adcdfxvmox9ah4qgum4exggd1gqrea80pirjzngbujxrxksrxftuiqhs4dk8jl74d0nxi8y2r8rske694gqnshqgw7j3h\", \"9ohduq88\" ],\n      \"os\" : \"xmtajl2em22xvyqxj6h0sqrd2b36yxvduimwjfv65l1jszmocam1et4gu0g0ll3uso87coy6yl8pbgl4k93ijqhyhy6u58uufy5f3lfepcywg5ntn4kv7s391jsohupxbansytzi65ajc8pvx953vnams5srt2vjc6\",\n      \"os.features\" : [ \"hj3kqo0brmrwzmxe5ppzit0mm24t3x5ieq126bakv515k72sa5ndlw8vobty8fa1rk45wn4b78ezv1gk3e1unlpowlvrr6eg6dp0oiqmsjmn60bv6c3lqfoj33io7xxiad\", \"l6gea2xx2l6imhfn0t32wbsof820viigv8nqnqdiv86o4q26vqcdfu85jwcq54a9edno5sinwus0p542rn9yegrvspv4fiycfwhatbovio86yvsiiygjlxtbat9fr8qvxaa600z7fbimafakgh53f6284vf6rvb0ow5bom3b7p2wourlehuqmer3qqp51eczak9d\", \"o8lp3i2optn9a61e5duhndv2eyf3pvu85rogaj6s75nzlsgi3463fpullgvrx21q82xtkqckh215rdfwd06xxp1w69t0sqkxq5ckeftqmby6e59z0mlmz58txwzas41q7b5yyo8rbm665takb6o83yo0hrtt6jn8ymopxqdirutpsgyzzk3q\", \"5k88gwdolgsa974qf0kkahurc242js9d3t0r9l7pujbbnwwzqiyarm3fx6wf89i7zoc1um5yom4tv5x197yxafed0jzy8bef2xhn9etn8fqvhexh1dtq9qhikmhl57wf793kkktfc0aqhjxhdk6t2x6c5ikp5lop\", \"3fh7px8klq09lsloekkoee5ebqacqd5i2c\", \"2aegiklivqqchw4i60q15xp1qhih9fak9rw5p5vi3ghf1js9ei4qhouu8yzos0op1k33rfgj0oijtc1ujk4lxi3vmztrl2066iy0bq7cry90svxwfgzamwa3a45wrk\", \"04xv9so3q4ayh15fjgv37owwl6ni52mm1nkwlo\", \"caw1f6ey6jik0hfjfk1i8rkq37emk3n270g50qkh42odx8xt9wxa74qzadud6j92xod83x5wekgzpm0p0d75leedmwviwdhupma\" ],\n      \"variant\" : \"j3fnobp8esldkrajffxmqkweim9tlzq461r6hxr7mw6nb0ztzc6ftef4iiz9gonfpn3m00j6bqees7klic\",\n      \"architecture\" : \"54gxbghmxj40f8kf0u0hul0if79tyvcqxhnu1y898v82wbdqcbdq0me7qh2e8b40uqm5bzikd8sy215ty1zgwvpms96vg0e6y2cxvhsre9oxemn1ncawrwnjeg4hsi8ez5tvee6b0v97\",\n      \"os.version\" : \"zhs4fx6bbzvyi6evu7co39fil0zkpx12ppkmq1a\"\n    }\n  }, {\n    \"size\" : 5580901182722771458,\n    \"digest\" : \"u9a7zgpfj7ionqfv3jgr3kbyao2iqw74ugpf4tvjb0b0yltpcdlhha04q4n5stj99z98o2wwwped1xg1aly13mvtwft63aulwc7\",\n    \"mediaType\" : \"gernhkiblhpwjdsq5y103vycxfow3a2owlfckz5ruonmvuma5o45xvxc857a4oi50b2luw2j92pdjf64f7wr0go6499jsx716ko3f18w6wbcntxcd79452zerqxa6w5x0stw498d5iplsf61tf87v1d1emrdjtzsr2aho96r1wszh83v\",\n    \"platform\" : {\n      \"features\" : [ \"mupyunat4l36t9fv1ogagg946eha02lc3qz23c7wlgm2mn7d4yyacmt4uppsknx6y8he3heelpknrh2r0w7zs7oh3hdhajlo37dedy\", \"py0ume65xt372mjcvvhdkf9vlkkijlf1zyqv41jt4dz2va8o8jv0ow26doyssgbtbznmbp98pfstw851oq69i5z6ldj0f3snk18shf25lzdbr689bgaeat9vlymydgn3rtlhjv1efqn9qurlquwvb2utmfcd65bx3m2gpt2yzeiumhld8bwlrakcj\", \"jkuod3c193vq10ny3c8gazlq7yg58458a5sjcuejwq815t6pvu\", \"sbp8pg0mu3r7gqwyk5lx9kj90uov8tpigno4igqfxngp7vg1pez1997hbfnpss3cbv2h1jta1rb1x5kv0xbp9rn10mux9xlr6t8w294k9u25i6fwdbtpouspcz79zw6zh1ziafkgu\" ],\n      \"os\" : \"zqdtq1mi6k7sluswgj210byz1wgr4xglvj2eusunmiu31mprlbuj\",\n      \"os.features\" : [ \"2ocqwj66yumvoo82rbnj6s6o5jlw3s2xsydn5p0j73xga7yyjwqlwdeoy1nw2hjrpan35nzcw8acbkqf6cor0k9b5xsd7mjkykpwh9blirk3my8qdooldmb4350v4zbdd7ov1747k1ktdyjqmbbi4ack3\", \"vv4sb6mady7j9wva\" ],\n      \"variant\" : \"kklqcwjlrh6dh55zqr12mgfyplxwkq1iotyfz7h49wrifielgb1i29u8wcwt\",\n      \"architecture\" : \"brztueob0lxo6j05ul5joxmcsx4gdmlnl1eifxlij8y84svigemjt173j8aycr0gb86di08n\",\n      \"os.version\" : \"m6p9yj62go7ukykrn528y0mxharsq07025ytvfzee3nbhtcbhj77eoiy61es4nw27cvfcwvtl4xcy10gqnyajuj4f74mhk8mkaa\"\n    }\n  } ],\n  \"name\" : \"Mr. Lakeshia Wolff\",\n  \"annotations\" : {\n    \"org.opencontainers.image.title\" : \"Incidunt ipsum et explicabo perferendis omnis voluptates ut.\",\n    \"org.opencontainers.image.authors\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/melvindidit/128.jpg\",\n    \"org.opencontainers.image.ref.name\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/algunsanabria/128.jpg\",\n    \"org.opencontainers.image.vendor\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/kirangopal/128.jpg\",\n    \"org.opencontainers.image.source\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/fabbianz/128.jpg\",\n    \"org.opencontainers.image.url\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jarjan/128.jpg\",\n    \"org.opencontainers.image.licenses\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/iamjdeleon/128.jpg\",\n    \"org.opencontainers.image.revision\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/dshster/128.jpg\",\n    \"org.opencontainers.image.version\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/madshensel/128.jpg\",\n    \"org.opencontainers.image.created\" : \"2022-10-24T12:00:20.139Z\",\n    \"org.opencontainers.image.description\" : \"Numquam repudiandae quia iure. Quibusdam error ea tempore recusandae. Error sequi earum at. Sed ut veritatis a et sapiente modi.\",\n    \"org.opencontainers.image.documentation\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/christianoliff/128.jpg\"\n  },\n  \"mediaType\" : \"z0km2vnbyt1wyyfdx73fet35668d2zyqguqugdcdcwgngl1j97soo9rfb42f1j0bzzuqk\",\n  \"fsLayers\" : [ {\n    \"blobSum\" : \"sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30\"\n  }, {\n    \"blobSum\" : \"sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30\"\n  }, {\n    \"blobSum\" : \"sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30\"\n  }, {\n    \"blobSum\" : \"sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30\"\n  }, {\n    \"blobSum\" : \"sha256:1f7d468f830cb0ed4beb8edc9438f18096e8c682e56a35242f60e6c61b718b30\"\n  } ],\n  \"history\" : [ {\n    \"v1Compatibility\" : \"v1 compatibility info\"\n  }, {\n    \"v1Compatibility\" : \"v1 compatibility info\"\n  }, {\n    \"v1Compatibility\" : \"v1 compatibility info\"\n  } ],\n  \"tag\" : \"dolores\",\n  \"config\" : {\n    \"digest\" : \"sha256:5d20c808ce198565ff70b3ed23a991dd49afac45dece63474b27ce6ed036adc6\",\n    \"mediaType\" : \"application/vnd.docker.image.rootfs.diff.tar.gzip\",\n    \"size\" : 2107098\n  },\n  \"signatures\" : [ {\n    \"header\" : {\n      \"alg\" : \"ES256\",\n      \"jwk\" : {\n        \"crv\" : \"P-256\",\n        \"kid\" : \"WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\",\n        \"kty\" : \"EC\",\n        \"x\" : \"OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\",\n        \"y\" : \"EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\"\n      }\n    },\n    \"protected\" : \"eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\",\n    \"signature\" : \"p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\"\n  }, {\n    \"header\" : {\n      \"alg\" : \"ES256\",\n      \"jwk\" : {\n        \"crv\" : \"P-256\",\n        \"kid\" : \"WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\",\n        \"kty\" : \"EC\",\n        \"x\" : \"OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\",\n        \"y\" : \"EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\"\n      }\n    },\n    \"protected\" : \"eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\",\n    \"signature\" : \"p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\"\n  }, {\n    \"header\" : {\n      \"alg\" : \"ES256\",\n      \"jwk\" : {\n        \"crv\" : \"P-256\",\n        \"kid\" : \"WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\",\n        \"kty\" : \"EC\",\n        \"x\" : \"OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\",\n        \"y\" : \"EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\"\n      }\n    },\n    \"protected\" : \"eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\",\n    \"signature\" : \"p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\"\n  }, {\n    \"header\" : {\n      \"alg\" : \"ES256\",\n      \"jwk\" : {\n        \"crv\" : \"P-256\",\n        \"kid\" : \"WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\",\n        \"kty\" : \"EC\",\n        \"x\" : \"OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\",\n        \"y\" : \"EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\"\n      }\n    },\n    \"protected\" : \"eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\",\n    \"signature\" : \"p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\"\n  }, {\n    \"header\" : {\n      \"alg\" : \"ES256\",\n      \"jwk\" : {\n        \"crv\" : \"P-256\",\n        \"kid\" : \"WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\",\n        \"kty\" : \"EC\",\n        \"x\" : \"OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\",\n        \"y\" : \"EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\"\n      }\n    },\n    \"protected\" : \"eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\",\n    \"signature\" : \"p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\"\n  }, {\n    \"header\" : {\n      \"alg\" : \"ES256\",\n      \"jwk\" : {\n        \"crv\" : \"P-256\",\n        \"kid\" : \"WGXM:EYWQ:DA53:LQUP:BCWG:5RDG:S3ZM:ETH7:VMQS:WWKZ:EWDG:V74Q\",\n        \"kty\" : \"EC\",\n        \"x\" : \"OxZ9k5BVjPZ7jb3BmBD4X0d8MVPJqfF4NeSe8reoqnY\",\n        \"y\" : \"EaCqTe4-vYwhk7qU6Bs2-AeLGOVtCe_-IY2MdE0Vfyc\"\n      }\n    },\n    \"protected\" : \"eyJmb3JtYXRMZW5ndGgiOjI5ODYsImZvcm1hdFRhaWwiOiJDbjAiLCJ0aW1lIjoiMjAxOC0wOS0yMFQyMzo0MTo1MloifQ\",\n    \"signature\" : \"p73LfotMGD8nNXz2g9YX2XtSllb4GI5-b3vjqP5N0nkv8QXg-r5z_omGiVbOZE2BYG1X_4TIN23l1KSEqsXxOg\"\n  } ],\n  \"architecture\" : \"lhlbn6kps5kwhc9sxm56ycdso093n1zhbz4tsqbvg2qibs3wi8p8404vtqrh8fcscuigvjohjldi30\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb64654e-0a2b-3d47-89f7-f5281039cd54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Manifests_Get",
          "schema" : {
            "properties" : {
              "annotations" : {
                "$ref" : "#/components/schemas/Annotations"
              },
              "architecture" : {
                "type" : "string",
                "description" : "(V1) CPU architecture"
              },
              "config" : {
                "$ref" : "#/components/schemas/Descriptor"
              },
              "fsLayers" : {
                "type" : "array",
                "description" : "(V1) List of layer information",
                "items" : {
                  "$ref" : "#/components/schemas/FsLayer"
                }
              },
              "history" : {
                "type" : "array",
                "description" : "(V1) Image history",
                "items" : {
                  "$ref" : "#/components/schemas/History"
                }
              },
              "layers" : {
                "type" : "array",
                "description" : "(V2, OCI) List of V2 image layer information",
                "items" : {
                  "$ref" : "#/components/schemas/Descriptor"
                }
              },
              "manifests" : {
                "type" : "array",
                "description" : "(ManifestList, OCIIndex) List of V2 image layer information",
                "items" : {
                  "$ref" : "#/components/schemas/ManifestListAttributes"
                }
              },
              "mediaType" : {
                "type" : "string",
                "description" : "Media type for this Manifest"
              },
              "name" : {
                "type" : "string",
                "description" : "(V1) Image name"
              },
              "signatures" : {
                "type" : "array",
                "description" : "(V1) Image signature",
                "items" : {
                  "$ref" : "#/components/schemas/ImageSignature"
                }
              },
              "tag" : {
                "type" : "string",
                "description" : "(V1) Image tag"
              }
            },
            "description" : "Returns the requested manifest file",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Manifest"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "346109c7-872d-3c9d-b0cf-842987c44d27",
    "name" : "Same as GET, except only the headers are returned. - 307",
    "request" : {
      "urlPath" : "/v2/Tommy+Wisozk/blobs/k4bgwr6o82pv6o9svhx1",
      "method" : "HEAD"
    },
    "response" : {
      "status" : 307
    },
    "uuid" : "346109c7-872d-3c9d-b0cf-842987c44d27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Check"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "3f45ba48-9394-3f00-b7b2-d1ec2d521b39",
    "name" : "Same as GET, except only the headers are returned. - 200",
    "request" : {
      "urlPath" : "/v2/Margarete+Abshire/blobs/qqvtmkzx3n7auqcr8lkzecuxku934nsztxhlndt9y45ds03b3eudo1fulgxcummw9f5uz0nfz09umxbe92piwnru3nuunz61ab7kcitjv3kdyq4ruue2lx4i1bggixp8cp1o4enwo9dma7e4e7jm9oj6r0aqc9mbr55p3xoco6ximrtb5frd6k8itiswkm74rnj",
      "method" : "HEAD"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3f45ba48-9394-3f00-b7b2-d1ec2d521b39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Check"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "43cbb0cd-0eca-3881-b4e1-fdc91a353ecd",
    "name" : "Removes an already uploaded blob.",
    "request" : {
      "urlPath" : "/v2/Jayna+Jacobi/blobs/8gmnr3oibblud9mbeyk2g6qsojd2ukohhpot1e6gbsp9yoby5bzv2rtojttvkz0cr5di4nc0trbkv1pb8fmmog6h2ljj705tr00815w6a9epmlrgxsq71tbidzndcto7o89dgiojdlwu85hdjn6xr3iz9ww6g4y7qr",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "\"4pjza5h73d\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "43cbb0cd-0eca-3881-b4e1-fdc91a353ecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Delete",
          "schema" : {
            "type" : "string",
            "description" : "blob binary data",
            "format" : "binary"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "fab2687e-5ab1-3bf2-a386-88b8845bf21f",
    "name" : "Retrieve the blob from the registry identified by digest. - 307",
    "request" : {
      "urlPath" : "/v2/Miss+Florene+Russel/blobs/wuu7gnxx3b3tbe9vbnzumbdrzdhy3bnth5visa0m8tuwzgruvd448jnscklnr5ojday87cloltgfbwconytcr1wph",
      "method" : "GET"
    },
    "response" : {
      "status" : 307
    },
    "uuid" : "fab2687e-5ab1-3bf2-a386-88b8845bf21f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Get"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e516b832-f066-336f-87fc-b33923495796",
    "name" : "Retrieve the blob from the registry identified by digest. (application/octet-stream)",
    "request" : {
      "urlPath" : "/v2/Hannelore+Welch/blobs/lmmh5qmecob9wzsfvsjn2qfajv9mo7tqgo23f1cmhz5bg5qidn5gyj0x392x7u69ngsd1dc475mk39gf6e3r5fdbgl4qitw1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/octet-stream"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"x73c101tin9vhok86tjm8yo04yklkt59spyrln7meqr9trfj98enebsuboot\"",
      "headers" : {
        "Content-Type" : "application/octet-stream"
      }
    },
    "uuid" : "e516b832-f066-336f-87fc-b33923495796",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Get",
          "schema" : {
            "type" : "string",
            "description" : "blob binary data",
            "format" : "binary"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e86588a9-934c-3b3d-9565-399e696c1f76",
    "name" : "Mount a blob identified by the `mount` parameter from another repository. - 201",
    "request" : {
      "urlPath" : "/v2/Roland+White/blobs/uploads/",
      "method" : "POST",
      "queryParameters" : {
        "from" : {
          "equalTo" : "04ptfpr6uvi4tvimxj7i0zdig03kqf3xflj5rsbtm6b3g103xibjm4zdvlthq1p693figswlaboomn5ahg50z8cjsbheirso1fbnimm3hr0uiv3o26o845dxuavz6zs2k0ea2qapsx5eji1jkkrqnatev1zkzroge2rdi1zxupd879whj00jizw"
        },
        "mount" : {
          "equalTo" : "ws5qcda08z0yiuowo"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "e86588a9-934c-3b3d-9565-399e696c1f76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Blob_Mount"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "62b03b2b-6998-3a69-9fd2-e44a7225cd3b",
    "name" : "Tells whether this Docker Registry instance supports Docker Registry HTTP API v2 - 200",
    "request" : {
      "urlPath" : "/v2/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "62b03b2b-6998-3a69-9fd2-e44a7225cd3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "V2Support_Check"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "67064d16-6931-3f8b-9e58-3538352d2d0d",
    "name" : "Exchange ACR Refresh token for an ACR Access Token",
    "request" : {
      "urlPath" : "/oauth2/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"nwwhyblq5phvqa45vylpeg65zazowiufb25bs250iiv9ty53h171ifw0cg9nji4f4npdqwarsm6ww3piaduqrqmbt8xertzmejtzwxpucmwnnkw3q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67064d16-6931-3f8b-9e58-3538352d2d0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AccessTokens_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "access_token" : {
                "type" : "string",
                "description" : "The access token for performing authenticated requests"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "45ccc949-cfb7-3fca-afc1-a725e3645e7e",
    "name" : "Exchange Username, Password and Scope an ACR Access Token",
    "request" : {
      "urlPath" : "/oauth2/token",
      "method" : "GET",
      "queryParameters" : {
        "service" : {
          "equalTo" : "mi2f6afo2ctsiofd9z8eq16qowgxs9gj6s5kv7etdky0wd0y2tguzdojbhack8u0s4c14bsi8"
        },
        "scope" : {
          "equalTo" : "oillk25xs7sxwz3vouwsh27zyfwe3pa5rh0fjcr7dn9vjchgxa7zzcn8mha17kle63zntsa4y02o1ly9jzg15ojmdgw0s5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"access_token\" : \"w3n535slpss6obgt2l45knfznjdn9cn6ns5oa83y96xi0ywefnuiis3dd3a4din7qz39gnfvdu389d20kkqn9j9ddgn9ckgbjcj7yi8wpdf1e5ab35psjsu0ju7npkhnpae0k6jxij4t57go8puxu7mlblbe9g12hi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45ccc949-cfb7-3fca-afc1-a725e3645e7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AccessTokens_GetFromLogin",
          "schema" : {
            "type" : "object",
            "properties" : {
              "access_token" : {
                "type" : "string",
                "description" : "The access token for performing authenticated requests"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "fcbce3a6-4653-3df3-b178-3f0c7e23a28e",
    "name" : "Exchange AAD tokens for an ACR refresh Token",
    "request" : {
      "urlPath" : "/oauth2/exchange",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"refresh_token\" : \"7d08prud33et39h5tv0x7d3p4jc16e8fwz1obsmdhkwqo6papwzhxmk6m3tjftebtqf86e5wjzh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcbce3a6-4653-3df3-b178-3f0c7e23a28e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RefreshTokens_GetFromExchange",
          "schema" : {
            "type" : "object",
            "properties" : {
              "refresh_token" : {
                "type" : "string",
                "description" : "The refresh token to be used for generating access tokens"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "695453fb-cfe0-3b2b-ae76-5d23b811f2a7",
    "name" : "Update tag attributes - 200",
    "request" : {
      "urlPath" : "/acr/v1/Teodora+Larkin/_tags/ytp6r87phm4n8614bu9ow3lczbpzfa6xmjpnsztuco93vz1cykv0yg9lr9zf66zqpxqc12x5mzsgoe839sz8rmbmw2vft9azpz6jr919z6cki2b47h1jv7x76lvjnrqe35fv91qrn7tx13ysqgq",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "695453fb-cfe0-3b2b-ae76-5d23b811f2a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Tag_UpdateAttributes"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e3729d65-c82c-3fc1-9ed8-74bd080a70c4",
    "name" : "Delete tag - 202",
    "request" : {
      "urlPath" : "/acr/v1/Miss+Gus+Krajcik/_tags/8rjles0e7k20569v9d06mo2kockgu49d8wdxt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "e3729d65-c82c-3fc1-9ed8-74bd080a70c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Tag_Delete"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "5a0a9c94-fe07-3c34-813a-5bfa3cf8d9c1",
    "name" : "Get tag attributes by tag",
    "request" : {
      "urlPath" : "/acr/v1/Mikki+Stamm/_tags/nfd0c4y5aru5hz1lgphl393wcs5go3d1h4hy9pcbyqejagobr8e8gy6imw",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"imageName\" : \"imageName\",\n  \"registry\" : \"registry\",\n  \"tag\" : {\n    \"changeableAttributes\" : {\n      \"deleteEnabled\" : true,\n      \"listEnabled\" : true,\n      \"readEnabled\" : true,\n      \"writeEnabled\" : true\n    },\n    \"createdTime\" : \"createdTime\",\n    \"digest\" : \"digest\",\n    \"lastUpdateTime\" : \"lastUpdateTime\",\n    \"name\" : \"name\",\n    \"signed\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a0a9c94-fe07-3c34-813a-5bfa3cf8d9c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Tag_GetAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "imageName" : {
                "type" : "string",
                "description" : "Image name"
              },
              "registry" : {
                "type" : "string",
                "description" : "Registry name"
              },
              "tag" : {
                "$ref" : "#/components/schemas/TagAttributesBase"
              }
            },
            "description" : "Tag attributes",
            "example" : {
              "imageName" : "imageName",
              "registry" : "registry",
              "tag" : {
                "changeableAttributes" : {
                  "deleteEnabled" : true,
                  "listEnabled" : true,
                  "readEnabled" : true,
                  "writeEnabled" : true
                },
                "createdTime" : "createdTime",
                "digest" : "digest",
                "lastUpdateTime" : "lastUpdateTime",
                "name" : "name",
                "signed" : true
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "a92b04e2-23df-375f-ac59-4a0e68296a87",
    "name" : "List tags of a repository",
    "request" : {
      "urlPath" : "/acr/v1/Gabriel+Mertz+I/_tags",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"imageName\" : \"imageName\",\n  \"registry\" : \"registry\",\n  \"tags\" : [ {\n    \"changeableAttributes\" : {\n      \"deleteEnabled\" : true,\n      \"listEnabled\" : true,\n      \"readEnabled\" : true,\n      \"writeEnabled\" : true\n    },\n    \"createdTime\" : \"createdTime\",\n    \"digest\" : \"digest\",\n    \"lastUpdateTime\" : \"lastUpdateTime\",\n    \"name\" : \"name\",\n    \"signed\" : true\n  }, {\n    \"changeableAttributes\" : {\n      \"deleteEnabled\" : true,\n      \"listEnabled\" : true,\n      \"readEnabled\" : true,\n      \"writeEnabled\" : true\n    },\n    \"createdTime\" : \"createdTime\",\n    \"digest\" : \"digest\",\n    \"lastUpdateTime\" : \"lastUpdateTime\",\n    \"name\" : \"name\",\n    \"signed\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a92b04e2-23df-375f-ac59-4a0e68296a87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Tag_GetList",
          "schema" : {
            "type" : "object",
            "properties" : {
              "imageName" : {
                "type" : "string",
                "description" : "Image name"
              },
              "registry" : {
                "type" : "string",
                "description" : "Registry name"
              },
              "tags" : {
                "type" : "array",
                "description" : "List of tag attribute details",
                "items" : {
                  "$ref" : "#/components/schemas/TagAttributesBase"
                }
              }
            },
            "description" : "List of tag details",
            "example" : {
              "imageName" : "imageName",
              "registry" : "registry",
              "tags" : [ {
                "changeableAttributes" : {
                  "deleteEnabled" : true,
                  "listEnabled" : true,
                  "readEnabled" : true,
                  "writeEnabled" : true
                },
                "createdTime" : "createdTime",
                "digest" : "digest",
                "lastUpdateTime" : "lastUpdateTime",
                "name" : "name",
                "signed" : true
              }, {
                "changeableAttributes" : {
                  "deleteEnabled" : true,
                  "listEnabled" : true,
                  "readEnabled" : true,
                  "writeEnabled" : true
                },
                "createdTime" : "createdTime",
                "digest" : "digest",
                "lastUpdateTime" : "lastUpdateTime",
                "name" : "name",
                "signed" : true
              } ]
            }
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "2951d57b-e837-31d3-9d86-29830454d8ec",
    "name" : "Update attributes of a manifest - 200",
    "request" : {
      "urlPath" : "/acr/v1/Tyisha+Frami/_manifests/xtph8ypvvevvxegyrijghoyy06gpk2j7hl67d13lhtk0qb776awjk2f3hk4zxvg72px0cc1xag83p647efmqjak3jhdye7e5esv6za9bifvytwznz959rc79ukoqrqrgzmf8fwttiui9n84n",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2951d57b-e837-31d3-9d86-29830454d8ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Manifests_UpdateAttributes"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "5f71936c-8e4b-307a-a21a-be2550031fa0",
    "name" : "Get manifest attributes",
    "request" : {
      "urlPath" : "/acr/v1/Lauren+Stamm/_manifests/azjy9i3r7btk7u3qnr2x37g6v39ptb3i5h3aipw0beb3u684sqlc",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"imageName\" : \"nanoserver\",\n  \"manifest\" : {\n    \"architecture\" : \"amd64\",\n    \"changeableAttributes\" : {\n      \"deleteEnabled\" : true,\n      \"listEnabled\" : true,\n      \"readEnabled\" : true,\n      \"writeEnabled\" : true\n    },\n    \"configMediaType\" : \"application/vnd.docker.container.image.v1+json\",\n    \"createdTime\" : \"2018-09-06T06:17:20.9983915Z\",\n    \"digest\" : \"sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086\",\n    \"imageSize\" : 2401606,\n    \"lastUpdateTime\" : \"2018-09-06T06:17:20.9983915Z\",\n    \"mediaType\" : \"application/vnd.docker.distribution.manifest.v2+json\",\n    \"os\" : \"windows\",\n    \"tags\" : [ \"4.7.2-20180905-nanoserver-1803\" ]\n  },\n  \"registry\" : \"acrapi.azurecr-test.io\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f71936c-8e4b-307a-a21a-be2550031fa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Manifests_GetAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "imageName" : {
                "type" : "string",
                "description" : "Image name"
              },
              "manifest" : {
                "$ref" : "#/components/schemas/ManifestAttributesBase"
              },
              "registry" : {
                "type" : "string",
                "description" : "Registry name"
              }
            },
            "description" : "Manifest attributes details",
            "example" : {
              "imageName" : "nanoserver",
              "manifest" : {
                "architecture" : "amd64",
                "changeableAttributes" : {
                  "deleteEnabled" : true,
                  "listEnabled" : true,
                  "readEnabled" : true,
                  "writeEnabled" : true
                },
                "configMediaType" : "application/vnd.docker.container.image.v1+json",
                "createdTime" : "2018-09-06T06:17:20.9983915Z",
                "digest" : "sha256:110d2b6c84592561338aa040b1b14b7ab81c2f9edbd564c2285dd7d70d777086",
                "imageSize" : 2401606,
                "lastUpdateTime" : "2018-09-06T06:17:20.9983915Z",
                "mediaType" : "application/vnd.docker.distribution.manifest.v2+json",
                "os" : "windows",
                "tags" : [ "4.7.2-20180905-nanoserver-1803" ]
              },
              "registry" : "acrapi.azurecr-test.io"
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "21da0bc0-f486-3264-9c1c-9df4ccb233ff",
    "name" : "List manifests of a repository",
    "request" : {
      "urlPath" : "/acr/v1/Mikaela+Gleason/_manifests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"imageName\" : \"imageName\",\n  \"manifests\" : [ {\n    \"architecture\" : \"architecture\",\n    \"changeableAttributes\" : {\n      \"deleteEnabled\" : true,\n      \"listEnabled\" : true,\n      \"quarantineDetails\" : \"quarantineDetails\",\n      \"quarantineState\" : \"quarantineState\",\n      \"readEnabled\" : true,\n      \"writeEnabled\" : true\n    },\n    \"configMediaType\" : \"configMediaType\",\n    \"createdTime\" : \"createdTime\",\n    \"digest\" : \"digest\",\n    \"imageSize\" : 2401606,\n    \"lastUpdateTime\" : \"lastUpdateTime\",\n    \"mediaType\" : \"mediaType\",\n    \"os\" : \"os\",\n    \"tags\" : [ \"tags\", \"tags\" ]\n  }, {\n    \"architecture\" : \"architecture\",\n    \"changeableAttributes\" : {\n      \"deleteEnabled\" : true,\n      \"listEnabled\" : true,\n      \"quarantineDetails\" : \"quarantineDetails\",\n      \"quarantineState\" : \"quarantineState\",\n      \"readEnabled\" : true,\n      \"writeEnabled\" : true\n    },\n    \"configMediaType\" : \"configMediaType\",\n    \"createdTime\" : \"createdTime\",\n    \"digest\" : \"digest\",\n    \"imageSize\" : 2401606,\n    \"lastUpdateTime\" : \"lastUpdateTime\",\n    \"mediaType\" : \"mediaType\",\n    \"os\" : \"os\",\n    \"tags\" : [ \"tags\", \"tags\" ]\n  } ],\n  \"registry\" : \"registry\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21da0bc0-f486-3264-9c1c-9df4ccb233ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Manifests_GetList",
          "schema" : {
            "type" : "object",
            "properties" : {
              "imageName" : {
                "type" : "string",
                "description" : "Image name"
              },
              "manifests" : {
                "type" : "array",
                "description" : "List of manifests",
                "items" : {
                  "$ref" : "#/components/schemas/ManifestAttributesBase"
                }
              },
              "registry" : {
                "type" : "string",
                "description" : "Registry name"
              }
            },
            "description" : "Manifest attributes",
            "example" : {
              "imageName" : "imageName",
              "manifests" : [ {
                "architecture" : "architecture",
                "changeableAttributes" : {
                  "deleteEnabled" : true,
                  "listEnabled" : true,
                  "quarantineDetails" : "quarantineDetails",
                  "quarantineState" : "quarantineState",
                  "readEnabled" : true,
                  "writeEnabled" : true
                },
                "configMediaType" : "configMediaType",
                "createdTime" : "createdTime",
                "digest" : "digest",
                "imageSize" : 2401606,
                "lastUpdateTime" : "lastUpdateTime",
                "mediaType" : "mediaType",
                "os" : "os",
                "tags" : [ "tags", "tags" ]
              }, {
                "architecture" : "architecture",
                "changeableAttributes" : {
                  "deleteEnabled" : true,
                  "listEnabled" : true,
                  "quarantineDetails" : "quarantineDetails",
                  "quarantineState" : "quarantineState",
                  "readEnabled" : true,
                  "writeEnabled" : true
                },
                "configMediaType" : "configMediaType",
                "createdTime" : "createdTime",
                "digest" : "digest",
                "imageSize" : 2401606,
                "lastUpdateTime" : "lastUpdateTime",
                "mediaType" : "mediaType",
                "os" : "os",
                "tags" : [ "tags", "tags" ]
              } ],
              "registry" : "registry"
            }
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "e1c56e80-088f-3dc1-aef7-49e0ba8e61a4",
    "name" : "Update the attribute identified by `name` where `reference` is the name of the r... - 200",
    "request" : {
      "urlPath" : "/acr/v1/Alden+Abernathy",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e1c56e80-088f-3dc1-aef7-49e0ba8e61a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Repository_UpdateAttributes"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "6e87ff8a-d224-38f1-904e-bd4ff71069a4",
    "name" : "Delete the repository identified by `name`",
    "request" : {
      "urlPath" : "/acr/v1/Emmitt+Kozey",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"manifestsDeleted\" : [ \"zhmue0xdgasd0g380fct89e6w3glcsslesghhk03891nesazmse7w0bufkffl7ci0kaj39pqyy7mnb5wvourkd5gxiho33ff79oqfc95ttr6gosqhzod5rgi2bvhri30anvxhh72qlcwo7j2ah8m3k8myk8t1j992e6cjj\", \"v8ckqzk0gpoc8cu41hm9lasd557zobc5olfng9j245xpn09s7yp6kj5c23pclhfw3y7flh7dgysg2\", \"w8ms87cyt9q4xo5cyaf697kmddnmkmqjb2rsskj6tqlfqqtj\", \"s8lj3anp6yslb17ihe277ynj9x2pfarwdli0\", \"r4l8fs6t5l0ah39o02eegsn4ic0jz0mhps3x82esd3v7pcf5n2rtyskxz28zb84p319skq4tf36zvkla6i7h18dg81rcbozrbgfe0r927te3pe278owmzcy7hocw5qb09w8q8fvxuy2z0fy\", \"4150xzswtzus19n5ew00puv9mlrj0z2dlpffu0kzixhvgnxfrihv1vmb4fu8iycp5axi69fpi48ua00ppzxgqc3egd3odfy76sffhsbyq9404288gq11rzinxa3tiven2i0cafurlvlgug23itk4yrj1vf9dm4t9gxxqy26\", \"kr0a21v5fvzg2g1v3iq255n98w9pwewasoo\" ],\n  \"tagsDeleted\" : [ \"q5bf070g2i7x3wiyz4xz3dk87cui66o2bu7y100r2b8i5xghat7n3a36sr65h3l9owobezhlmu0dhysjaokpe4k\", \"204rnv5btpupmp4wh7g8zrk5k5jc1khgrbnq53sd6mx0i9vk9wa93k0hqmg85ubi67jd4xzj7nlcwth4tpbfqdmz3o50m97rn2zoc719bvc0whguh3frkvdm0jq\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e87ff8a-d224-38f1-904e-bd4ff71069a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Repository_Delete",
          "schema" : {
            "type" : "object",
            "properties" : {
              "manifestsDeleted" : {
                "type" : "array",
                "description" : "SHA of the deleted image",
                "items" : {
                  "type" : "string"
                }
              },
              "tagsDeleted" : {
                "type" : "array",
                "description" : "Tag of the deleted image",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "Deleted repository"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "efae4cb0-c704-3bfd-b74c-c452e11d9a41",
    "name" : "Get repository attributes",
    "request" : {
      "urlPath" : "/acr/v1/Kimberley+Braun",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"changeableAttributes\" : {\n    \"deleteEnabled\" : true,\n    \"listEnabled\" : true,\n    \"readEnabled\" : true,\n    \"writeEnabled\" : true\n  },\n  \"createdTime\" : \"2018-09-07T16:30:46.6583219Z\",\n  \"imageName\" : \"imageName\",\n  \"lastUpdateTime\" : \"2018-09-07T16:30:46.6583219Z\",\n  \"manifestCount\" : 2,\n  \"registry\" : \"registryname.azurecr.io\",\n  \"tagCount\" : 6\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efae4cb0-c704-3bfd-b74c-c452e11d9a41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Repository_GetAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "changeableAttributes" : {
                "$ref" : "#/components/schemas/ChangeableAttributes"
              },
              "createdTime" : {
                "type" : "string",
                "description" : "Image created time"
              },
              "imageName" : {
                "type" : "string",
                "description" : "Image name"
              },
              "lastUpdateTime" : {
                "type" : "string",
                "description" : "Image last update time"
              },
              "manifestCount" : {
                "type" : "integer",
                "description" : "Number of the manifests"
              },
              "registry" : {
                "type" : "string",
                "description" : "Registry name"
              },
              "tagCount" : {
                "type" : "integer",
                "description" : "Number of the tags"
              }
            },
            "description" : "Repository attributes",
            "example" : {
              "changeableAttributes" : {
                "deleteEnabled" : true,
                "listEnabled" : true,
                "readEnabled" : true,
                "writeEnabled" : true
              },
              "createdTime" : "2018-09-07T16:30:46.6583219Z",
              "imageName" : "imageName",
              "lastUpdateTime" : "2018-09-07T16:30:46.6583219Z",
              "manifestCount" : 2,
              "registry" : "registryname.azurecr.io",
              "tagCount" : 6
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "a5e14bf6-cd6f-3be0-a209-6c2a109ad8ea",
    "name" : "List repositories",
    "request" : {
      "urlPath" : "/acr/v1/_catalog",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repositories\" : [ \"production/alpine\", \"testing/alpine\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5e14bf6-cd6f-3be0-a209-6c2a109ad8ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Repository_GetList",
          "schema" : {
            "type" : "object",
            "properties" : {
              "repositories" : {
                "type" : "array",
                "description" : "Repository names",
                "items" : {
                  "type" : "string"
                }
              }
            },
            "description" : "List of repositories",
            "example" : {
              "repositories" : [ "production/alpine", "testing/alpine" ]
            }
          }
        }
      }
    },
    "insertionIndex" : 27
  } ]
}