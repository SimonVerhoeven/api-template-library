{
  "mappings" : [ {
    "id" : "d25c2ba8-aced-401e-95b9-7b531c75c22b",
    "name" : "Update a payment link.",
    "request" : {
      "urlPath" : "/v1/payment-links/1UXSPMAU8A8555LY9AQ5N7BG2D4XT8C1",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"redirectUrl\" : \"https://web.example.mocklab.io/586909\",\n  \"backgroundImage\" : \"linear-gradient(to bottom right, #ffffff, #3295d6)\",\n  \"link\" : \"4motuoesuj214vbrhg11gsaj1oz54jns1hship\",\n  \"description\" : \"This payment is awesome!!\",\n  \"language\" : \"en_US\",\n  \"billing\" : {\n    \"zip\" : \"24118\",\n    \"country\" : \"DE\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"addressAddition\" : \"7th floor\",\n    \"city\" : \"Kiel\",\n    \"street\" : \"Fraunhoferstr. 2-4\",\n    \"company\" : \"PAYONE GmbH\",\n    \"state\" : \"GW\"\n  },\n  \"mode\" : \"live\",\n  \"reference\" : \"payment_1\",\n  \"invoiceInformation\" : {\n    \"invoiceText\" : \"obz9s5kcd00kl7kkw2w007jey6st0o1martne78ysxvjj1xeoza3cets909pi7q3cajrmcqojuroki9vosxy9qg2ywh5ugyit392897z32zss880n2i8ew4wamkyr76y1qj9doi9oixrju3kj0lyzy3zxdq01xgv68kb3urpupcthoprprusc6sl\",\n    \"invoiceId\" : \"6h5z\"\n  },\n  \"shipping\" : {\n    \"zip\" : \"24118\",\n    \"country\" : \"DE\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"addressAddition\" : \"7th floor\",\n    \"city\" : \"Kiel\",\n    \"street\" : \"Fraunhoferstr. 2-4\",\n    \"company\" : \"PAYONE GmbH\",\n    \"state\" : \"EO\"\n  },\n  \"merchantId\" : \"12345\",\n  \"paymentMethods\" : [ \"visa\", \"mastercard\" ],\n  \"portalId\" : \"1234567\",\n  \"shoppingCart\" : [ {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  } ],\n  \"logo\" : \"https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg\",\n  \"modified\" : 1062080505291618620,\n  \"currency\" : \"EUR\",\n  \"id\" : \"HUENJ5FY124QHUENJ5FY124QHUENJ5FY\",\n  \"email\" : \"qhgx6pd8chuuq72zwnskf04c19cbi1lc68gqrpkcrwqh35dgo4w5905gebnvonoie7lsoactnkd7rctf9xnw32wvuizui8izuk0u02sz40ip5gpwcsam2htqs0z92\",\n  \"amount\" : 799,\n  \"created\" : 4160613326516357406,\n  \"active\" : true,\n  \"successUrl\" : \"https://web.example.mocklab.io/726403\",\n  \"intent\" : \"preauthorization\",\n  \"userId\" : \"356845874\",\n  \"accountId\" : \"12345\",\n  \"errorUrl\" : \"https://web.example.mocklab.io/788017\",\n  \"notifyUrl\" : \"https://web.example.mocklab.io/553922\",\n  \"paymentMethod\" : \"visa\",\n  \"expiration\" : \"2020-02-20\",\n  \"paymentProcess\" : \"347867997\",\n  \"hash\" : \"a42847abb8bfca62876ca64c0fa981f8\",\n  \"status\" : \"ready\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d25c2ba8-aced-401e-95b9-7b531c75c22b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.83295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updatePaymentLink",
          "schema" : {
            "properties" : {
              "accountId" : {
                "description" : "identifier for the subaccount",
                "example" : "12345",
                "type" : "string"
              },
              "active" : {
                "default" : true,
                "description" : "link activation status",
                "example" : true,
                "type" : "boolean"
              },
              "amount" : {
                "description" : "total amount of all shopping cart items in lowest denomination",
                "example" : 799,
                "format" : "int64",
                "maximum" : 1999999999,
                "minimum" : 1,
                "type" : "integer"
              },
              "backgroundImage" : {
                "description" : "backgroundImage css property",
                "example" : "linear-gradient(to bottom right, #ffffff, #3295d6)",
                "format" : "css",
                "type" : "string"
              },
              "billing" : {
                "$ref" : "#/components/schemas/AddressDataDto"
              },
              "created" : {
                "description" : "created time in ISO 8601 format",
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "currency code",
                "enum" : [ "ALL", "DZD", "ARS", "AUD", "BSD", "BHD", "BDT", "AMD", "BBD", "BMD", "BTN", "BOB", "BWP", "BZD", "SBD", "BND", "MMK", "BIF", "KHR", "CAD", "CVE", "KYD", "LKR", "CLP", "CNY", "COP", "KMF", "CRC", "HRK", "CUP", "CZK", "DKK", "DOP", "SVC", "ETB", "ERN", "FKP", "FJD", "DJF", "GMD", "GIP", "GTQ", "GNF", "GYD", "HTG", "HNL", "HKD", "HUF", "ISK", "INR", "IDR", "IRR", "IQD", "ILS", "JMD", "JPY", "KZT", "JOD", "KES", "KPW", "KRW", "KWD", "KGS", "LAK", "LBP", "LSL", "LRD", "LYD", "MOP", "MWK", "MYR", "MVR", "MUR", "MXN", "MNT", "MDL", "MAD", "OMR", "NAD", "NPR", "ANG", "AWG", "VUV", "NZD", "NIO", "NGN", "NOK", "PKR", "PAB", "PGK", "PYG", "PEN", "PHP", "QAR", "RUB", "RWF", "SHP", "SAR", "SCR", "SLL", "SGD", "VND", "SOS", "ZAR", "SSP", "SZL", "SEK", "CHF", "SYP", "THB", "TOP", "TTD", "AED", "TND", "UGX", "MKD", "EGP", "GBP", "TZS", "USD", "UYU", "UZS", "WST", "YER", "TWD", "UYW", "VES", "MRU", "STN", "CUC", "ZWL", "BYN", "TMT", "GHS", "SDG", "UYI", "RSD", "MZN", "AZN", "RON", "CHE", "CHW", "TRY", "XAF", "XCD", "XOF", "XPF", "XBA", "XBB", "XBC", "XBD", "XAU", "XDR", "XAG", "XPT", "XTS", "XPD", "XUA", "ZMW", "SRD", "MGA", "COU", "AFN", "TJS", "AOA", "BGN", "CDF", "BAM", "EUR", "MXV", "UAH", "GEL", "BOV", "PLN", "BRL", "CLF", "XSU", "USN" ],
                "example" : "EUR",
                "maxLength" : 3,
                "minLength" : 3,
                "type" : "string"
              },
              "description" : {
                "description" : "free format description of the payment",
                "example" : "This payment is awesome!!",
                "maxLength" : 255,
                "type" : "string"
              },
              "email" : {
                "description" : "customer email for invoices or payment notification",
                "maxLength" : 254,
                "minLength" : 4,
                "type" : "string"
              },
              "errorUrl" : {
                "description" : "final redirect after a failed payment",
                "type" : "string"
              },
              "expiration" : {
                "description" : "link expiration date, the link will only be executable until end of that day",
                "example" : "2020-02-20",
                "format" : "date",
                "type" : "string"
              },
              "hash" : {
                "description" : "hash for the client API",
                "example" : "a42847abb8bfca62876ca64c0fa981f8",
                "type" : "string"
              },
              "id" : {
                "description" : "link id",
                "example" : "HUENJ5FY124QHUENJ5FY124QHUENJ5FY",
                "maxLength" : 32,
                "minLength" : 32,
                "type" : "string"
              },
              "intent" : {
                "default" : "authorization",
                "description" : "designates the type of transaction that will be created",
                "enum" : [ "authorization", "preauthorization" ],
                "type" : "string"
              },
              "invoiceInformation" : {
                "$ref" : "#/components/schemas/InvoiceInformationDto"
              },
              "language" : {
                "description" : "link ISO language code",
                "enum" : [ "de_DE", "en_US" ],
                "example" : "en_US",
                "type" : "string"
              },
              "link" : {
                "description" : "customer payment link",
                "type" : "string"
              },
              "logo" : {
                "description" : "logo url",
                "example" : "https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg",
                "format" : "url",
                "type" : "string"
              },
              "merchantId" : {
                "description" : "identifier for the merchant",
                "example" : "12345",
                "type" : "string"
              },
              "mode" : {
                "description" : "execution mode",
                "enum" : [ "live", "test" ],
                "example" : "live",
                "type" : "string"
              },
              "modified" : {
                "description" : "last modified time in ISO 8601 format",
                "format" : "int64",
                "type" : "integer"
              },
              "notifyUrl" : {
                "description" : "notify url. If unset no notification will be send",
                "type" : "string"
              },
              "paymentMethod" : {
                "description" : "available payment methods",
                "enum" : [ "visa", "mastercard", "amex", "paypal", "sofort", "paydirekt", "postfinance-e", "postfinance-card", "bancontact", "przelewy24", "alipay", "ideal", "eps", "giropay", "sepa" ],
                "example" : "visa",
                "type" : "string"
              },
              "paymentMethods" : {
                "description" : "list of available payment methods",
                "example" : [ "visa", "mastercard" ],
                "items" : {
                  "description" : "available payment methods",
                  "enum" : [ "visa", "mastercard", "amex", "paypal", "sofort", "paydirekt", "postfinance-e", "postfinance-card", "bancontact", "przelewy24", "alipay", "ideal", "eps", "giropay", "sepa" ],
                  "example" : "visa",
                  "type" : "string"
                },
                "type" : "array"
              },
              "paymentProcess" : {
                "description" : "identifier of the created payment process.",
                "example" : "347867997",
                "type" : "string"
              },
              "portalId" : {
                "description" : "identifier for the portal",
                "example" : "1234567",
                "type" : "string"
              },
              "redirectUrl" : {
                "description" : "redirect url. empty if the payment process does not require a redirect.",
                "type" : "string"
              },
              "reference" : {
                "description" : "payment reference number, has to be unique per merchant and mode",
                "example" : "payment_1",
                "maxLength" : 20,
                "minLength" : 1,
                "type" : "string"
              },
              "shipping" : {
                "$ref" : "#/components/schemas/AddressDataDto"
              },
              "shoppingCart" : {
                "items" : {
                  "$ref" : "#/components/schemas/CartItemDto"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "link status",
                "enum" : [ "ready", "created", "executed", "expired", "deactivated" ],
                "example" : "ready",
                "type" : "string"
              },
              "successUrl" : {
                "description" : "final redirect after a successful payment",
                "type" : "string"
              },
              "userId" : {
                "description" : "identifier of the created user.",
                "example" : "356845874",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "35f9a4e7-02d1-4392-aa3f-0bfb316ea133",
    "name" : "Get payment link by id.",
    "request" : {
      "urlPath" : "/v1/payment-links/E8HN9ARFT1HHY947QH6QY5EJ3X8KSR73",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"redirectUrl\" : \"https://web.example.mocklab.io/377321\",\n  \"backgroundImage\" : \"linear-gradient(to bottom right, #ffffff, #3295d6)\",\n  \"link\" : \"uyvuttkts64k\",\n  \"description\" : \"This payment is awesome!!\",\n  \"language\" : \"en_US\",\n  \"billing\" : {\n    \"zip\" : \"24118\",\n    \"country\" : \"DE\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"addressAddition\" : \"7th floor\",\n    \"city\" : \"Kiel\",\n    \"street\" : \"Fraunhoferstr. 2-4\",\n    \"company\" : \"PAYONE GmbH\",\n    \"state\" : \"IW\"\n  },\n  \"mode\" : \"live\",\n  \"reference\" : \"payment_1\",\n  \"invoiceInformation\" : {\n    \"invoiceText\" : \"bxmzd8747c12g6t2hnr6lxdn0cb6eod6ldy7cf7asu1atq1p0dwbzqbxu91mf9s5n92mq44icbuaueufkgwefjr3e42wd31470uh4y5vt1ornfpgi7q2v4ahgpe8ih3gmt7jd67bdfr0o4uor8mf6cs30gdrpp8ljqz868lc95j9ir8biyweh0opl6jcrpkv4zz9l\",\n    \"invoiceId\" : \"a092\"\n  },\n  \"shipping\" : {\n    \"zip\" : \"24118\",\n    \"country\" : \"DE\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"addressAddition\" : \"7th floor\",\n    \"city\" : \"Kiel\",\n    \"street\" : \"Fraunhoferstr. 2-4\",\n    \"company\" : \"PAYONE GmbH\",\n    \"state\" : \"EB\"\n  },\n  \"merchantId\" : \"12345\",\n  \"paymentMethods\" : [ \"visa\", \"mastercard\" ],\n  \"portalId\" : \"1234567\",\n  \"shoppingCart\" : [ {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  } ],\n  \"logo\" : \"https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg\",\n  \"modified\" : 457490941131236974,\n  \"currency\" : \"EUR\",\n  \"id\" : \"HUENJ5FY124QHUENJ5FY124QHUENJ5FY\",\n  \"email\" : \"652sl53xe0y8lcvbqfx37rvf1fttl3yolbiuddnasj9essvb7y463lbbo9b912s0ulzzdmk2pwa1nao0gcsfkm11sy6kl85n0jqsu4lfh2n9sumjo43ttbe2x2dewj\",\n  \"amount\" : 799,\n  \"created\" : 3944364346096709304,\n  \"active\" : true,\n  \"successUrl\" : \"https://web.example.mocklab.io/234791\",\n  \"intent\" : \"authorization\",\n  \"userId\" : \"356845874\",\n  \"accountId\" : \"12345\",\n  \"errorUrl\" : \"https://web.example.mocklab.io/958960\",\n  \"notifyUrl\" : \"https://web.example.mocklab.io/367799\",\n  \"paymentMethod\" : \"visa\",\n  \"expiration\" : \"2020-02-20\",\n  \"paymentProcess\" : \"347867997\",\n  \"hash\" : \"a42847abb8bfca62876ca64c0fa981f8\",\n  \"status\" : \"ready\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35f9a4e7-02d1-4392-aa3f-0bfb316ea133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.832082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentLink",
          "schema" : {
            "properties" : {
              "accountId" : {
                "description" : "identifier for the subaccount",
                "example" : "12345",
                "type" : "string"
              },
              "active" : {
                "default" : true,
                "description" : "link activation status",
                "example" : true,
                "type" : "boolean"
              },
              "amount" : {
                "description" : "total amount of all shopping cart items in lowest denomination",
                "example" : 799,
                "format" : "int64",
                "maximum" : 1999999999,
                "minimum" : 1,
                "type" : "integer"
              },
              "backgroundImage" : {
                "description" : "backgroundImage css property",
                "example" : "linear-gradient(to bottom right, #ffffff, #3295d6)",
                "format" : "css",
                "type" : "string"
              },
              "billing" : {
                "$ref" : "#/components/schemas/AddressDataDto"
              },
              "created" : {
                "description" : "created time in ISO 8601 format",
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "currency code",
                "enum" : [ "ALL", "DZD", "ARS", "AUD", "BSD", "BHD", "BDT", "AMD", "BBD", "BMD", "BTN", "BOB", "BWP", "BZD", "SBD", "BND", "MMK", "BIF", "KHR", "CAD", "CVE", "KYD", "LKR", "CLP", "CNY", "COP", "KMF", "CRC", "HRK", "CUP", "CZK", "DKK", "DOP", "SVC", "ETB", "ERN", "FKP", "FJD", "DJF", "GMD", "GIP", "GTQ", "GNF", "GYD", "HTG", "HNL", "HKD", "HUF", "ISK", "INR", "IDR", "IRR", "IQD", "ILS", "JMD", "JPY", "KZT", "JOD", "KES", "KPW", "KRW", "KWD", "KGS", "LAK", "LBP", "LSL", "LRD", "LYD", "MOP", "MWK", "MYR", "MVR", "MUR", "MXN", "MNT", "MDL", "MAD", "OMR", "NAD", "NPR", "ANG", "AWG", "VUV", "NZD", "NIO", "NGN", "NOK", "PKR", "PAB", "PGK", "PYG", "PEN", "PHP", "QAR", "RUB", "RWF", "SHP", "SAR", "SCR", "SLL", "SGD", "VND", "SOS", "ZAR", "SSP", "SZL", "SEK", "CHF", "SYP", "THB", "TOP", "TTD", "AED", "TND", "UGX", "MKD", "EGP", "GBP", "TZS", "USD", "UYU", "UZS", "WST", "YER", "TWD", "UYW", "VES", "MRU", "STN", "CUC", "ZWL", "BYN", "TMT", "GHS", "SDG", "UYI", "RSD", "MZN", "AZN", "RON", "CHE", "CHW", "TRY", "XAF", "XCD", "XOF", "XPF", "XBA", "XBB", "XBC", "XBD", "XAU", "XDR", "XAG", "XPT", "XTS", "XPD", "XUA", "ZMW", "SRD", "MGA", "COU", "AFN", "TJS", "AOA", "BGN", "CDF", "BAM", "EUR", "MXV", "UAH", "GEL", "BOV", "PLN", "BRL", "CLF", "XSU", "USN" ],
                "example" : "EUR",
                "maxLength" : 3,
                "minLength" : 3,
                "type" : "string"
              },
              "description" : {
                "description" : "free format description of the payment",
                "example" : "This payment is awesome!!",
                "maxLength" : 255,
                "type" : "string"
              },
              "email" : {
                "description" : "customer email for invoices or payment notification",
                "maxLength" : 254,
                "minLength" : 4,
                "type" : "string"
              },
              "errorUrl" : {
                "description" : "final redirect after a failed payment",
                "type" : "string"
              },
              "expiration" : {
                "description" : "link expiration date, the link will only be executable until end of that day",
                "example" : "2020-02-20",
                "format" : "date",
                "type" : "string"
              },
              "hash" : {
                "description" : "hash for the client API",
                "example" : "a42847abb8bfca62876ca64c0fa981f8",
                "type" : "string"
              },
              "id" : {
                "description" : "link id",
                "example" : "HUENJ5FY124QHUENJ5FY124QHUENJ5FY",
                "maxLength" : 32,
                "minLength" : 32,
                "type" : "string"
              },
              "intent" : {
                "default" : "authorization",
                "description" : "designates the type of transaction that will be created",
                "enum" : [ "authorization", "preauthorization" ],
                "type" : "string"
              },
              "invoiceInformation" : {
                "$ref" : "#/components/schemas/InvoiceInformationDto"
              },
              "language" : {
                "description" : "link ISO language code",
                "enum" : [ "de_DE", "en_US" ],
                "example" : "en_US",
                "type" : "string"
              },
              "link" : {
                "description" : "customer payment link",
                "type" : "string"
              },
              "logo" : {
                "description" : "logo url",
                "example" : "https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg",
                "format" : "url",
                "type" : "string"
              },
              "merchantId" : {
                "description" : "identifier for the merchant",
                "example" : "12345",
                "type" : "string"
              },
              "mode" : {
                "description" : "execution mode",
                "enum" : [ "live", "test" ],
                "example" : "live",
                "type" : "string"
              },
              "modified" : {
                "description" : "last modified time in ISO 8601 format",
                "format" : "int64",
                "type" : "integer"
              },
              "notifyUrl" : {
                "description" : "notify url. If unset no notification will be send",
                "type" : "string"
              },
              "paymentMethod" : {
                "description" : "available payment methods",
                "enum" : [ "visa", "mastercard", "amex", "paypal", "sofort", "paydirekt", "postfinance-e", "postfinance-card", "bancontact", "przelewy24", "alipay", "ideal", "eps", "giropay", "sepa" ],
                "example" : "visa",
                "type" : "string"
              },
              "paymentMethods" : {
                "description" : "list of available payment methods",
                "example" : [ "visa", "mastercard" ],
                "items" : {
                  "description" : "available payment methods",
                  "enum" : [ "visa", "mastercard", "amex", "paypal", "sofort", "paydirekt", "postfinance-e", "postfinance-card", "bancontact", "przelewy24", "alipay", "ideal", "eps", "giropay", "sepa" ],
                  "example" : "visa",
                  "type" : "string"
                },
                "type" : "array"
              },
              "paymentProcess" : {
                "description" : "identifier of the created payment process.",
                "example" : "347867997",
                "type" : "string"
              },
              "portalId" : {
                "description" : "identifier for the portal",
                "example" : "1234567",
                "type" : "string"
              },
              "redirectUrl" : {
                "description" : "redirect url. empty if the payment process does not require a redirect.",
                "type" : "string"
              },
              "reference" : {
                "description" : "payment reference number, has to be unique per merchant and mode",
                "example" : "payment_1",
                "maxLength" : 20,
                "minLength" : 1,
                "type" : "string"
              },
              "shipping" : {
                "$ref" : "#/components/schemas/AddressDataDto"
              },
              "shoppingCart" : {
                "items" : {
                  "$ref" : "#/components/schemas/CartItemDto"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "link status",
                "enum" : [ "ready", "created", "executed", "expired", "deactivated" ],
                "example" : "ready",
                "type" : "string"
              },
              "successUrl" : {
                "description" : "final redirect after a successful payment",
                "type" : "string"
              },
              "userId" : {
                "description" : "identifier of the created user.",
                "example" : "356845874",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6a9fb987-a3b7-44cb-9fb2-93a98eb56cb0",
    "name" : "Create a payment link.",
    "request" : {
      "urlPath" : "/v1/payment-links",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"redirectUrl\" : \"https://web.example.mocklab.io/317816\",\n  \"backgroundImage\" : \"linear-gradient(to bottom right, #ffffff, #3295d6)\",\n  \"link\" : \"mrgn3qg64pki4x8ppjsx0rhd4axfqcbab11q0vcqylfve0s84zklowugqi6m7ygghfgc4er483wyvln38lv1t6n12xwjqdr3zpp0cvf6yxfot3qto0mio8oharz0wlf43rbiabu930u6rfh4oi5arnu0lwq7b7g21t46fmrtkgrrcrq1axsvze4x90ezwirjif\",\n  \"description\" : \"This payment is awesome!!\",\n  \"language\" : \"en_US\",\n  \"billing\" : {\n    \"zip\" : \"24118\",\n    \"country\" : \"DE\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"addressAddition\" : \"7th floor\",\n    \"city\" : \"Kiel\",\n    \"street\" : \"Fraunhoferstr. 2-4\",\n    \"company\" : \"PAYONE GmbH\",\n    \"state\" : \"DK\"\n  },\n  \"mode\" : \"live\",\n  \"reference\" : \"payment_1\",\n  \"invoiceInformation\" : {\n    \"invoiceText\" : \"sso71ov58ojzdbl7s2a766gfb78cicep3rvc5iqmzwnwazqzyff7uengqm5efvobi7qjb32cghvspvsxj7pv6a416x6ph51eyvtl672grf9ovvhxvpmwdzt0dce2owe8f3dmqewstzdjg7zrbt6lwdcrdm2x7q6vuo1pwsemk0dy7rf39gjr20m9tvg9f17ylqp775dltjrtkm1dylvugzbal86srmbhpv2gt\",\n    \"invoiceId\" : \"4a95\"\n  },\n  \"shipping\" : {\n    \"zip\" : \"24118\",\n    \"country\" : \"DE\",\n    \"firstName\" : \"John\",\n    \"lastName\" : \"Doe\",\n    \"addressAddition\" : \"7th floor\",\n    \"city\" : \"Kiel\",\n    \"street\" : \"Fraunhoferstr. 2-4\",\n    \"company\" : \"PAYONE GmbH\",\n    \"state\" : \"YT\"\n  },\n  \"merchantId\" : \"12345\",\n  \"paymentMethods\" : [ \"visa\", \"mastercard\" ],\n  \"portalId\" : \"1234567\",\n  \"shoppingCart\" : [ {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  }, {\n    \"number\" : \"73883HFJ\",\n    \"quantity\" : 1,\n    \"price\" : 1999,\n    \"vatRate\" : 20,\n    \"description\" : \"Potatoes\",\n    \"deliveryDateStart\" : \"2021-01-01\",\n    \"type\" : \"goods\",\n    \"deliveryDateEnd\" : \"2021-01-01\"\n  } ],\n  \"logo\" : \"https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg\",\n  \"modified\" : 3113437712617240580,\n  \"currency\" : \"EUR\",\n  \"id\" : \"HUENJ5FY124QHUENJ5FY124QHUENJ5FY\",\n  \"email\" : \"dqdporyhjn9r4hvjk5hjo96kh4e5qzdxjm91zla8opwosvh2g8iwv\",\n  \"amount\" : 799,\n  \"created\" : 2768234019561889010,\n  \"active\" : true,\n  \"successUrl\" : \"https://web.example.mocklab.io/015573\",\n  \"intent\" : \"preauthorization\",\n  \"userId\" : \"356845874\",\n  \"accountId\" : \"12345\",\n  \"errorUrl\" : \"https://web.example.mocklab.io/020092\",\n  \"notifyUrl\" : \"https://web.example.mocklab.io/280604\",\n  \"paymentMethod\" : \"visa\",\n  \"expiration\" : \"2020-02-20\",\n  \"paymentProcess\" : \"347867997\",\n  \"hash\" : \"a42847abb8bfca62876ca64c0fa981f8\",\n  \"status\" : \"ready\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a9fb987-a3b7-44cb-9fb2-93a98eb56cb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.831217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createPaymentLink",
          "schema" : {
            "properties" : {
              "accountId" : {
                "description" : "identifier for the subaccount",
                "example" : "12345",
                "type" : "string"
              },
              "active" : {
                "default" : true,
                "description" : "link activation status",
                "example" : true,
                "type" : "boolean"
              },
              "amount" : {
                "description" : "total amount of all shopping cart items in lowest denomination",
                "example" : 799,
                "format" : "int64",
                "maximum" : 1999999999,
                "minimum" : 1,
                "type" : "integer"
              },
              "backgroundImage" : {
                "description" : "backgroundImage css property",
                "example" : "linear-gradient(to bottom right, #ffffff, #3295d6)",
                "format" : "css",
                "type" : "string"
              },
              "billing" : {
                "$ref" : "#/components/schemas/AddressDataDto"
              },
              "created" : {
                "description" : "created time in ISO 8601 format",
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "currency code",
                "enum" : [ "ALL", "DZD", "ARS", "AUD", "BSD", "BHD", "BDT", "AMD", "BBD", "BMD", "BTN", "BOB", "BWP", "BZD", "SBD", "BND", "MMK", "BIF", "KHR", "CAD", "CVE", "KYD", "LKR", "CLP", "CNY", "COP", "KMF", "CRC", "HRK", "CUP", "CZK", "DKK", "DOP", "SVC", "ETB", "ERN", "FKP", "FJD", "DJF", "GMD", "GIP", "GTQ", "GNF", "GYD", "HTG", "HNL", "HKD", "HUF", "ISK", "INR", "IDR", "IRR", "IQD", "ILS", "JMD", "JPY", "KZT", "JOD", "KES", "KPW", "KRW", "KWD", "KGS", "LAK", "LBP", "LSL", "LRD", "LYD", "MOP", "MWK", "MYR", "MVR", "MUR", "MXN", "MNT", "MDL", "MAD", "OMR", "NAD", "NPR", "ANG", "AWG", "VUV", "NZD", "NIO", "NGN", "NOK", "PKR", "PAB", "PGK", "PYG", "PEN", "PHP", "QAR", "RUB", "RWF", "SHP", "SAR", "SCR", "SLL", "SGD", "VND", "SOS", "ZAR", "SSP", "SZL", "SEK", "CHF", "SYP", "THB", "TOP", "TTD", "AED", "TND", "UGX", "MKD", "EGP", "GBP", "TZS", "USD", "UYU", "UZS", "WST", "YER", "TWD", "UYW", "VES", "MRU", "STN", "CUC", "ZWL", "BYN", "TMT", "GHS", "SDG", "UYI", "RSD", "MZN", "AZN", "RON", "CHE", "CHW", "TRY", "XAF", "XCD", "XOF", "XPF", "XBA", "XBB", "XBC", "XBD", "XAU", "XDR", "XAG", "XPT", "XTS", "XPD", "XUA", "ZMW", "SRD", "MGA", "COU", "AFN", "TJS", "AOA", "BGN", "CDF", "BAM", "EUR", "MXV", "UAH", "GEL", "BOV", "PLN", "BRL", "CLF", "XSU", "USN" ],
                "example" : "EUR",
                "maxLength" : 3,
                "minLength" : 3,
                "type" : "string"
              },
              "description" : {
                "description" : "free format description of the payment",
                "example" : "This payment is awesome!!",
                "maxLength" : 255,
                "type" : "string"
              },
              "email" : {
                "description" : "customer email for invoices or payment notification",
                "maxLength" : 254,
                "minLength" : 4,
                "type" : "string"
              },
              "errorUrl" : {
                "description" : "final redirect after a failed payment",
                "type" : "string"
              },
              "expiration" : {
                "description" : "link expiration date, the link will only be executable until end of that day",
                "example" : "2020-02-20",
                "format" : "date",
                "type" : "string"
              },
              "hash" : {
                "description" : "hash for the client API",
                "example" : "a42847abb8bfca62876ca64c0fa981f8",
                "type" : "string"
              },
              "id" : {
                "description" : "link id",
                "example" : "HUENJ5FY124QHUENJ5FY124QHUENJ5FY",
                "maxLength" : 32,
                "minLength" : 32,
                "type" : "string"
              },
              "intent" : {
                "default" : "authorization",
                "description" : "designates the type of transaction that will be created",
                "enum" : [ "authorization", "preauthorization" ],
                "type" : "string"
              },
              "invoiceInformation" : {
                "$ref" : "#/components/schemas/InvoiceInformationDto"
              },
              "language" : {
                "description" : "link ISO language code",
                "enum" : [ "de_DE", "en_US" ],
                "example" : "en_US",
                "type" : "string"
              },
              "link" : {
                "description" : "customer payment link",
                "type" : "string"
              },
              "logo" : {
                "description" : "logo url",
                "example" : "https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg",
                "format" : "url",
                "type" : "string"
              },
              "merchantId" : {
                "description" : "identifier for the merchant",
                "example" : "12345",
                "type" : "string"
              },
              "mode" : {
                "description" : "execution mode",
                "enum" : [ "live", "test" ],
                "example" : "live",
                "type" : "string"
              },
              "modified" : {
                "description" : "last modified time in ISO 8601 format",
                "format" : "int64",
                "type" : "integer"
              },
              "notifyUrl" : {
                "description" : "notify url. If unset no notification will be send",
                "type" : "string"
              },
              "paymentMethod" : {
                "description" : "available payment methods",
                "enum" : [ "visa", "mastercard", "amex", "paypal", "sofort", "paydirekt", "postfinance-e", "postfinance-card", "bancontact", "przelewy24", "alipay", "ideal", "eps", "giropay", "sepa" ],
                "example" : "visa",
                "type" : "string"
              },
              "paymentMethods" : {
                "description" : "list of available payment methods",
                "example" : [ "visa", "mastercard" ],
                "items" : {
                  "description" : "available payment methods",
                  "enum" : [ "visa", "mastercard", "amex", "paypal", "sofort", "paydirekt", "postfinance-e", "postfinance-card", "bancontact", "przelewy24", "alipay", "ideal", "eps", "giropay", "sepa" ],
                  "example" : "visa",
                  "type" : "string"
                },
                "type" : "array"
              },
              "paymentProcess" : {
                "description" : "identifier of the created payment process.",
                "example" : "347867997",
                "type" : "string"
              },
              "portalId" : {
                "description" : "identifier for the portal",
                "example" : "1234567",
                "type" : "string"
              },
              "redirectUrl" : {
                "description" : "redirect url. empty if the payment process does not require a redirect.",
                "type" : "string"
              },
              "reference" : {
                "description" : "payment reference number, has to be unique per merchant and mode",
                "example" : "payment_1",
                "maxLength" : 20,
                "minLength" : 1,
                "type" : "string"
              },
              "shipping" : {
                "$ref" : "#/components/schemas/AddressDataDto"
              },
              "shoppingCart" : {
                "items" : {
                  "$ref" : "#/components/schemas/CartItemDto"
                },
                "type" : "array"
              },
              "status" : {
                "description" : "link status",
                "enum" : [ "ready", "created", "executed", "expired", "deactivated" ],
                "example" : "ready",
                "type" : "string"
              },
              "successUrl" : {
                "description" : "final redirect after a successful payment",
                "type" : "string"
              },
              "userId" : {
                "description" : "identifier of the created user.",
                "example" : "356845874",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03bf41d3-b818-401c-87ed-72c8e5a425d9",
    "name" : "List all payment links.",
    "request" : {
      "urlPath" : "/v1/payment-links",
      "method" : "GET",
      "queryParameters" : {
        "mode" : {
          "equalTo" : "live"
        },
        "accountId" : {
          "equalTo" : "114418753696494018117367352135737722576460857197474850218838626"
        },
        "merchantId" : {
          "equalTo" : "8598383097951915651270889418417810452543944136401997823677744291644"
        },
        "portalId" : {
          "equalTo" : "62232"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"number\" : 1956305164,\n  \"last\" : true,\n  \"numberOfElements\" : 1916510815,\n  \"size\" : 231796239,\n  \"totalPages\" : 1920310456,\n  \"pageable\" : {\n    \"paged\" : true,\n    \"pageNumber\" : 1200233358,\n    \"offset\" : 4945065580906714532,\n    \"pageSize\" : 10839782,\n    \"unpaged\" : true,\n    \"sort\" : {\n      \"unsorted\" : true,\n      \"sorted\" : false,\n      \"empty\" : true\n    }\n  },\n  \"sort\" : {\n    \"unsorted\" : false,\n    \"sorted\" : true,\n    \"empty\" : true\n  },\n  \"content\" : [ {\n    \"redirectUrl\" : \"https://web.example.mocklab.io/037388\",\n    \"backgroundImage\" : \"linear-gradient(to bottom right, #ffffff, #3295d6)\",\n    \"link\" : \"jcqde1lwjn1nbp\",\n    \"description\" : \"This payment is awesome!!\",\n    \"language\" : \"en_US\",\n    \"billing\" : {\n      \"zip\" : \"24118\",\n      \"country\" : \"DE\",\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Doe\",\n      \"addressAddition\" : \"7th floor\",\n      \"city\" : \"Kiel\",\n      \"street\" : \"Fraunhoferstr. 2-4\",\n      \"company\" : \"PAYONE GmbH\",\n      \"state\" : \"RT\"\n    },\n    \"mode\" : \"live\",\n    \"reference\" : \"payment_1\",\n    \"invoiceInformation\" : {\n      \"invoiceText\" : \"dp2neo03cnkn1cwocjf29ds32onfdys7jj7tg8ds9a29g88a0jl7j0yztfi48van6tq6ofukcecx9zh7z4rdivtvthz3g1e3vy03mvp6tm5phqdgmfymcihslt9l\",\n      \"invoiceId\" : \"9463\"\n    },\n    \"shipping\" : {\n      \"zip\" : \"24118\",\n      \"country\" : \"DE\",\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Doe\",\n      \"addressAddition\" : \"7th floor\",\n      \"city\" : \"Kiel\",\n      \"street\" : \"Fraunhoferstr. 2-4\",\n      \"company\" : \"PAYONE GmbH\",\n      \"state\" : \"WG\"\n    },\n    \"merchantId\" : \"12345\",\n    \"paymentMethods\" : [ \"visa\", \"mastercard\" ],\n    \"portalId\" : \"1234567\",\n    \"shoppingCart\" : [ {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    } ],\n    \"logo\" : \"https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg\",\n    \"modified\" : 7185726611455691163,\n    \"currency\" : \"EUR\",\n    \"id\" : \"HUENJ5FY124QHUENJ5FY124QHUENJ5FY\",\n    \"email\" : \"utrp987yyi65yo5y7hfjr0tyn5c93d3s39gfc2ksouvyo22xdghjnk11uganrhfxy0b3qac7y43rrgi9npqg0daqvu5rd9tuvkkhzwfnvzeytl6g98jgyq7axq5bl8newr61b9zwre4d45pg0\",\n    \"amount\" : 799,\n    \"created\" : 4528451801938963160,\n    \"active\" : true,\n    \"successUrl\" : \"https://web.example.mocklab.io/584714\",\n    \"intent\" : \"preauthorization\",\n    \"userId\" : \"356845874\",\n    \"accountId\" : \"12345\",\n    \"errorUrl\" : \"https://web.example.mocklab.io/120546\",\n    \"notifyUrl\" : \"https://web.example.mocklab.io/243840\",\n    \"paymentMethod\" : \"visa\",\n    \"expiration\" : \"2020-02-20\",\n    \"paymentProcess\" : \"347867997\",\n    \"hash\" : \"a42847abb8bfca62876ca64c0fa981f8\",\n    \"status\" : \"ready\"\n  }, {\n    \"redirectUrl\" : \"https://web.example.mocklab.io/502890\",\n    \"backgroundImage\" : \"linear-gradient(to bottom right, #ffffff, #3295d6)\",\n    \"link\" : \"isy39fqj8rhhmzudbe0112y3a9ni6bia8j3q3ju2ybimtpaic5303wxo\",\n    \"description\" : \"This payment is awesome!!\",\n    \"language\" : \"en_US\",\n    \"billing\" : {\n      \"zip\" : \"24118\",\n      \"country\" : \"DE\",\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Doe\",\n      \"addressAddition\" : \"7th floor\",\n      \"city\" : \"Kiel\",\n      \"street\" : \"Fraunhoferstr. 2-4\",\n      \"company\" : \"PAYONE GmbH\",\n      \"state\" : \"TX\"\n    },\n    \"mode\" : \"live\",\n    \"reference\" : \"payment_1\",\n    \"invoiceInformation\" : {\n      \"invoiceText\" : \"e1ly7xggdyug2ifg8cgjnh24ec0ulecs5av4ty5hs9jvj1t9g1khvcsi2rs3se7g7y3gu8t62ivsl36h9ddanpf2wot8ymw6cl9nrugdhzbmzd3q0femiqfv4is4ihe24hykkmeo30m63icq30j0llcpiyk9pwnhvdx1keaa6wk36993r2cpjop02zhgmbdt6yyvz4tj0j56iy24wsep6p748u08evh0bq9ie\",\n      \"invoiceId\" : \"7049\"\n    },\n    \"shipping\" : {\n      \"zip\" : \"24118\",\n      \"country\" : \"DE\",\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Doe\",\n      \"addressAddition\" : \"7th floor\",\n      \"city\" : \"Kiel\",\n      \"street\" : \"Fraunhoferstr. 2-4\",\n      \"company\" : \"PAYONE GmbH\",\n      \"state\" : \"DX\"\n    },\n    \"merchantId\" : \"12345\",\n    \"paymentMethods\" : [ \"visa\", \"mastercard\" ],\n    \"portalId\" : \"1234567\",\n    \"shoppingCart\" : [ {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    } ],\n    \"logo\" : \"https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg\",\n    \"modified\" : 4170639187941221532,\n    \"currency\" : \"EUR\",\n    \"id\" : \"HUENJ5FY124QHUENJ5FY124QHUENJ5FY\",\n    \"email\" : \"wy65rlhpem7yyhvikz4gk0e3byw1xdp5co8hvds27adq1bd4iso4nubm86zd5eell9j67sgsmy5voss8z5nrchqdqrqe8xzjrs7gzx4c3xssfq70nqyub9b7sp2mdmbl\",\n    \"amount\" : 799,\n    \"created\" : 9167569860313429470,\n    \"active\" : true,\n    \"successUrl\" : \"https://web.example.mocklab.io/679727\",\n    \"intent\" : \"authorization\",\n    \"userId\" : \"356845874\",\n    \"accountId\" : \"12345\",\n    \"errorUrl\" : \"https://web.example.mocklab.io/878732\",\n    \"notifyUrl\" : \"https://web.example.mocklab.io/109228\",\n    \"paymentMethod\" : \"visa\",\n    \"expiration\" : \"2020-02-20\",\n    \"paymentProcess\" : \"347867997\",\n    \"hash\" : \"a42847abb8bfca62876ca64c0fa981f8\",\n    \"status\" : \"ready\"\n  }, {\n    \"redirectUrl\" : \"https://web.example.mocklab.io/763471\",\n    \"backgroundImage\" : \"linear-gradient(to bottom right, #ffffff, #3295d6)\",\n    \"link\" : \"8odnui844jn7g6rnvk06t1c0gz6pg3gcua45uxab85phnux8r7gno\",\n    \"description\" : \"This payment is awesome!!\",\n    \"language\" : \"en_US\",\n    \"billing\" : {\n      \"zip\" : \"24118\",\n      \"country\" : \"DE\",\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Doe\",\n      \"addressAddition\" : \"7th floor\",\n      \"city\" : \"Kiel\",\n      \"street\" : \"Fraunhoferstr. 2-4\",\n      \"company\" : \"PAYONE GmbH\",\n      \"state\" : \"XV\"\n    },\n    \"mode\" : \"live\",\n    \"reference\" : \"payment_1\",\n    \"invoiceInformation\" : {\n      \"invoiceText\" : \"mjgines8xsnaam44btxw3ayc1se0cnm4mw3w1wz9jzdquvizbewivphjbtley8ahbx8n5ec96cvcrdscydkvnytpxj51dzqmw83sivs2r870zfddzgv0esydfxjgbet5j88m88umv9m65ymvrrf5wg7bkj1bi2dzy6fuf03ewdg7e9avq8aoaicqxt0bd\",\n      \"invoiceId\" : \"kuss\"\n    },\n    \"shipping\" : {\n      \"zip\" : \"24118\",\n      \"country\" : \"DE\",\n      \"firstName\" : \"John\",\n      \"lastName\" : \"Doe\",\n      \"addressAddition\" : \"7th floor\",\n      \"city\" : \"Kiel\",\n      \"street\" : \"Fraunhoferstr. 2-4\",\n      \"company\" : \"PAYONE GmbH\",\n      \"state\" : \"UJ\"\n    },\n    \"merchantId\" : \"12345\",\n    \"paymentMethods\" : [ \"visa\", \"mastercard\" ],\n    \"portalId\" : \"1234567\",\n    \"shoppingCart\" : [ {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    }, {\n      \"number\" : \"73883HFJ\",\n      \"quantity\" : 1,\n      \"price\" : 1999,\n      \"vatRate\" : 20,\n      \"description\" : \"Potatoes\",\n      \"deliveryDateStart\" : \"2021-01-01\",\n      \"type\" : \"goods\",\n      \"deliveryDateEnd\" : \"2021-01-01\"\n    } ],\n    \"logo\" : \"https://www.payone.com/wp-content/uploads/2018/12/Payone-Logo-2020.jpg\",\n    \"modified\" : 6389127933153167458,\n    \"currency\" : \"EUR\",\n    \"id\" : \"HUENJ5FY124QHUENJ5FY124QHUENJ5FY\",\n    \"email\" : \"pzd2bw3k78jiki5pt3lnxz9ayxiqsfd0s4o32y78fshancw1wbmaxqsxutp79jtv5195n7fpchq61737ddng0aae1whk8mh9egbbuokr9yy1hzgvkrrsw9veykutsjg8jvr675d6af8w5nipnvr7vxlhdfztw0p6jxgqi6um0ttazldxowbwa79fi0hwdv7xyuj22ezkuyt5dv5nvr70lj\",\n    \"amount\" : 799,\n    \"created\" : 5067484160462372202,\n    \"active\" : true,\n    \"successUrl\" : \"https://web.example.mocklab.io/822833\",\n    \"intent\" : \"preauthorization\",\n    \"userId\" : \"356845874\",\n    \"accountId\" : \"12345\",\n    \"errorUrl\" : \"https://web.example.mocklab.io/844734\",\n    \"notifyUrl\" : \"https://web.example.mocklab.io/046117\",\n    \"paymentMethod\" : \"visa\",\n    \"expiration\" : \"2020-02-20\",\n    \"paymentProcess\" : \"347867997\",\n    \"hash\" : \"a42847abb8bfca62876ca64c0fa981f8\",\n    \"status\" : \"ready\"\n  } ],\n  \"first\" : true,\n  \"empty\" : false,\n  \"totalElements\" : 51152674912703643\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03bf41d3-b818-401c-87ed-72c8e5a425d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:12.830238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentLinks",
          "schema" : {
            "properties" : {
              "content" : {
                "items" : {
                  "$ref" : "#/components/schemas/LinkResponse"
                },
                "type" : "array"
              },
              "empty" : {
                "type" : "boolean"
              },
              "first" : {
                "type" : "boolean"
              },
              "last" : {
                "type" : "boolean"
              },
              "number" : {
                "format" : "int32",
                "type" : "integer"
              },
              "numberOfElements" : {
                "format" : "int32",
                "type" : "integer"
              },
              "pageable" : {
                "$ref" : "#/components/schemas/Pageable"
              },
              "size" : {
                "format" : "int32",
                "type" : "integer"
              },
              "sort" : {
                "$ref" : "#/components/schemas/Sort"
              },
              "totalElements" : {
                "format" : "int64",
                "type" : "integer"
              },
              "totalPages" : {
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}