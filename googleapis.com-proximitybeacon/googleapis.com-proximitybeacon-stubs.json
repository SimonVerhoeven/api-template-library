{
  "mappings" : [ {
    "id" : "e46bb230-67bf-3b92-9f21-c8ea41ad650b",
    "name" : "Updates the information about the specified namespace. Only the namespace visibi...",
    "request" : {
      "urlPath" : "/v1beta1/Deangelo+Hermann",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"servingVisibility\" : \"PUBLIC\",\n  \"namespaceName\" : \"Juanita Hahn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e46bb230-67bf-3b92-9f21-c8ea41ad650b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.namespaces.update",
          "schema" : {
            "description" : "An attachment namespace defines read and write access for all the attachments created under it. Each namespace is globally unique, and owned by one project which is the only project that can create attachments under it.",
            "properties" : {
              "namespaceName" : {
                "description" : "Resource name of this namespace. Namespaces names have the format: namespaces/namespace.",
                "type" : "string"
              },
              "servingVisibility" : {
                "description" : "Specifies what clients may receive attachments under this namespace via `beaconinfo.getforobserved`.",
                "enum" : [ "VISIBILITY_UNSPECIFIED", "UNLISTED", "PUBLIC" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4311c8aa-29fc-3d02-800e-f41996b811ed",
    "name" : "Decommissions the specified beacon in the service. This beacon will no longer be...",
    "request" : {
      "urlPath" : "/v1beta1/Mirna+Schaden+DVM:decommission",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4311c8aa-29fc-3d02-800e-f41996b811ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.decommission",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1c0187b4-c38c-3e35-ac9c-af57a43838ea",
    "name" : "Deactivates a beacon. Once deactivated, the API will not return information nor ...",
    "request" : {
      "urlPath" : "/v1beta1/Jody+Dietrich+V:deactivate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c0187b4-c38c-3e35-ac9c-af57a43838ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.deactivate",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f73108cc-2f9a-3a2b-92ee-1bce0b80c021",
    "name" : "Activates a beacon. A beacon that is active will return information and attachme...",
    "request" : {
      "urlPath" : "/v1beta1/Federico+Blick:activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f73108cc-2f9a-3a2b-92ee-1bce0b80c021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.activate",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "352e099d-9b46-3e70-bef5-4ee46152ca44",
    "name" : "List the diagnostics for a single beacon. You can also list diagnostics for all ...",
    "request" : {
      "urlPath" : "/v1beta1/Hong+Pacocha+V/diagnostics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"diagnostics\" : [ {\n    \"alerts\" : [ \"LOW_BATTERY\", \"LOW_BATTERY\", \"LOW_BATTERY\", \"LOW_BATTERY\", \"LOW_ACTIVITY\", \"WRONG_LOCATION\" ],\n    \"beaconName\" : \"Clair Sipes\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 800225580,\n      \"year\" : 1060578065,\n      \"day\" : 1655784368\n    }\n  }, {\n    \"alerts\" : [ \"WRONG_LOCATION\", \"ALERT_UNSPECIFIED\", \"LOW_BATTERY\" ],\n    \"beaconName\" : \"Shani Rutherford III\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1274567129,\n      \"year\" : 551262599,\n      \"day\" : 698859768\n    }\n  }, {\n    \"alerts\" : [ \"LOW_ACTIVITY\", \"ALERT_UNSPECIFIED\", \"LOW_BATTERY\", \"WRONG_LOCATION\", \"LOW_ACTIVITY\", \"WRONG_LOCATION\", \"ALERT_UNSPECIFIED\" ],\n    \"beaconName\" : \"Anibal Konopelski\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 919430999,\n      \"year\" : 573653002,\n      \"day\" : 1900938915\n    }\n  }, {\n    \"alerts\" : [ \"LOW_ACTIVITY\" ],\n    \"beaconName\" : \"Lanny Hintz\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1615970619,\n      \"year\" : 616315757,\n      \"day\" : 1737498169\n    }\n  }, {\n    \"alerts\" : [ \"WRONG_LOCATION\", \"LOW_ACTIVITY\", \"LOW_BATTERY\", \"LOW_ACTIVITY\", \"LOW_BATTERY\", \"WRONG_LOCATION\", \"ALERT_UNSPECIFIED\" ],\n    \"beaconName\" : \"Paul McKenzie\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 1385617306,\n      \"year\" : 1011505385,\n      \"day\" : 1108303134\n    }\n  }, {\n    \"alerts\" : [ \"LOW_ACTIVITY\", \"LOW_BATTERY\", \"LOW_BATTERY\", \"LOW_ACTIVITY\", \"LOW_ACTIVITY\", \"LOW_BATTERY\", \"ALERT_UNSPECIFIED\", \"WRONG_LOCATION\" ],\n    \"beaconName\" : \"Catheryn D'Amore\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 379846726,\n      \"year\" : 1397336975,\n      \"day\" : 1333627020\n    }\n  }, {\n    \"alerts\" : [ \"ALERT_UNSPECIFIED\", \"LOW_BATTERY\", \"LOW_ACTIVITY\", \"WRONG_LOCATION\", \"WRONG_LOCATION\", \"LOW_ACTIVITY\" ],\n    \"beaconName\" : \"Alpha Strosin\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 505284081,\n      \"year\" : 1414733753,\n      \"day\" : 1586125014\n    }\n  }, {\n    \"alerts\" : [ \"LOW_ACTIVITY\", \"WRONG_LOCATION\", \"WRONG_LOCATION\", \"ALERT_UNSPECIFIED\" ],\n    \"beaconName\" : \"Siobhan Koepp\",\n    \"estimatedLowBatteryDate\" : {\n      \"month\" : 41242246,\n      \"year\" : 423304638,\n      \"day\" : 866424732\n    }\n  } ],\n  \"nextPageToken\" : \"09wch8kpgxk5mvqf4uc0e34hdv2nek1m5vxvwhykeq62lblln\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "352e099d-9b46-3e70-bef5-4ee46152ca44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.diagnostics.list",
          "schema" : {
            "description" : "Response that contains the requested diagnostics.",
            "properties" : {
              "diagnostics" : {
                "description" : "The diagnostics matching the given request.",
                "items" : {
                  "$ref" : "#/components/schemas/Diagnostics"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token that can be used for pagination. Returned only if the request matches more beacons than can be returned in this response.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9c7a0f4e-39f8-3420-8c09-cb71021ff460",
    "name" : "Deletes multiple attachments on a given beacon. This operation is permanent and ...",
    "request" : {
      "urlPath" : "/v1beta1/Ramon+Brakus/attachments:batchDelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"numDeleted\" : 533383775\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c7a0f4e-39f8-3420-8c09-cb71021ff460",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.batchDelete",
          "schema" : {
            "description" : "Response for a request to delete attachments.",
            "properties" : {
              "numDeleted" : {
                "description" : "The number of attachments that were deleted.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "2636f3a0-dba2-30c2-8130-10b83c079c3c",
    "name" : "Associates the given data with the specified beacon. Attachment data must contai...",
    "request" : {
      "urlPath" : "/v1beta1/Cordia+Zemlak/attachments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"creationTimeMs\" : \"2022-05-30T14:01:20.863855Z\",\n  \"data\" : \"ywt5mew4pmmhka\",\n  \"maxDistanceMeters\" : 1.3060903193561774E308,\n  \"namespacedType\" : \"0qzo9agyirnhfzdk8mxps50e7qh9c2zcf1kzfqv5of65fkfcjtl98fsm33xvmybaepwwzg07jyt93sepz46ppmi3y5nudrjipm2169c8j0y1fo3yqe673d2is0touieps62h7fql45jdiqaoykfy\",\n  \"attachmentName\" : \"Douglas Johnston\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2636f3a0-dba2-30c2-8130-10b83c079c3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.create",
          "schema" : {
            "description" : "Project-specific data associated with a beacon.",
            "properties" : {
              "attachmentName" : {
                "description" : "Resource name of this attachment. Attachment names have the format: beacons/ beacon_id/attachments/attachment_id. Leave this empty on creation.",
                "type" : "string"
              },
              "creationTimeMs" : {
                "description" : "The UTC time when this attachment was created, in milliseconds since the UNIX epoch.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "data" : {
                "description" : "An opaque data container for client-provided data. Must be [base64](http://tools.ietf.org/html/rfc4648#section-4) encoded in HTTP requests, and will be so encoded (with padding) in responses. Required.",
                "format" : "byte",
                "type" : "string"
              },
              "maxDistanceMeters" : {
                "description" : "The distance away from the beacon at which this attachment should be delivered to a mobile app. Setting this to a value greater than zero indicates that the app should behave as if the beacon is \"seen\" when the mobile device is less than this distance away from the beacon. Different attachments on the same beacon can have different max distances. Note that even though this value is expressed with fractional meter precision, real-world behavior is likley to be much less precise than one meter, due to the nature of current Bluetooth radio technology. Optional. When not set or zero, the attachment should be delivered at the beacon's outer limit of detection. Negative values are invalid and return an error.",
                "format" : "double",
                "type" : "number"
              },
              "namespacedType" : {
                "description" : "Specifies what kind of attachment this is. Tells a client how to interpret the `data` field. Format is namespace/type. Namespace provides type separation between clients. Type describes the type of `data`, for use by the client when parsing the `data` field. Required.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2539f715-42fd-300d-989b-eb1ca71ab1fa",
    "name" : "Returns the attachments for the specified beacon that match the specified namesp...",
    "request" : {
      "urlPath" : "/v1beta1/Domitila+Wiza/attachments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attachments\" : [ {\n    \"creationTimeMs\" : \"2022-03-26T16:06:20.863651Z\",\n    \"data\" : \"txcz0a1g1bvtze77or48v3xqw59xpy56u1dx9arhxqdtala7e0dcmi9zrvxmog03uexpvcabghf6arnms2mzk95vjjm8vags49spvhzyjp\",\n    \"maxDistanceMeters\" : 1.395255545351981E308,\n    \"namespacedType\" : \"sgayva8a0rn4l6m6j2ewaf2mysfsyvdr76x82qfrj7pqdk3wchjd2vl0jv7oovygqmw217j3n2cl0r9aj3ppyd6fbmtzva6bmonk5\",\n    \"attachmentName\" : \"Dedra Jast III\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2539f715-42fd-300d-989b-eb1ca71ab1fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.list",
          "schema" : {
            "description" : "Response to `ListBeaconAttachments` that contains the requested attachments.",
            "properties" : {
              "attachments" : {
                "description" : "The attachments that corresponded to the request params.",
                "items" : {
                  "$ref" : "#/components/schemas/BeaconAttachment"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7fd048df-f7e2-3345-a7fe-7ada32ab804e",
    "name" : "Updates the information about the specified beacon. **Any field that you do not ...",
    "request" : {
      "urlPath" : "/v1beta1/Houston+Hilpert",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ephemeralIdRegistration\" : {\n    \"serviceEcdhPublicKey\" : \"qk0ghnfgkyix3bshgc8xqsckkgq8ym6h7i1aad84ek2dshbqwts6cug7ew6mto2fv76v25l7cuvuej868grg35ba12t376hqxgknh7nw2dhr8frmd7gn8r5heubiqpkz6op3s2t6j7klair0jgv8qwh05sgjworo\",\n    \"initialClockValue\" : \"bcntdc57nau672klhjih68gdjmh26y60hhtru0qjyme2rtp8o8apz8rp7nmh3248c7w5zlr7r0802mb1qt8zcnu79r6j\",\n    \"initialEid\" : \"r29z\",\n    \"rotationPeriodExponent\" : 5268297033981929536,\n    \"beaconEcdhPublicKey\" : \"4zgkh2pt5y6kywbgtr25i66szygy4gx7\",\n    \"beaconIdentityKey\" : \"zpdvc7soc55ipdgof5goxtv3azwqlni1yarzpnsjlx0qnt59inua3f3q23bn00cpt7ifp15dni1sp7o5b3fmwuzbqu2jfq64ssy4ae85ldw35ymepa3566e5wk6y5qcc2dfao1kdo4tzu0q7lbua3i4s16ph2f3epe\"\n  },\n  \"advertisedId\" : {\n    \"id\" : \"02t1\",\n    \"type\" : \"EDDYSTONE\"\n  },\n  \"expectedStability\" : \"STABILITY_UNSPECIFIED\",\n  \"indoorLevel\" : {\n    \"name\" : \"Raynor\"\n  },\n  \"placeId\" : \"5u2d\",\n  \"description\" : \"Et laborum explicabo sint eaque distinctio. Ut quia aut magni. Aut non sunt pariatur.\",\n  \"provisioningKey\" : \"0p5pnmturw24dvsssbjxl2shgjpn29l1wywawv\",\n  \"beaconName\" : \"Myron Goyette\",\n  \"latLng\" : {\n    \"latitude\" : 5.091588934665944E307,\n    \"longitude\" : 5.039036041465902E307\n  },\n  \"properties\" : { },\n  \"status\" : \"DECOMMISSIONED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fd048df-f7e2-3345-a7fe-7ada32ab804e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.update",
          "schema" : {
            "description" : "Details of a beacon device.",
            "properties" : {
              "advertisedId" : {
                "$ref" : "#/components/schemas/AdvertisedId"
              },
              "beaconName" : {
                "description" : "Resource name of this beacon. A beacon name has the format \"beacons/N!beaconId\" where the beaconId is the base16 ID broadcast by the beacon and N is a code for the beacon's type. Possible values are `3` for Eddystone, `1` for iBeacon, or `5` for AltBeacon. This field must be left empty when registering. After reading a beacon, clients can use the name for future operations.",
                "type" : "string"
              },
              "description" : {
                "description" : "Free text used to identify and describe the beacon. Maximum length 140 characters. Optional.",
                "type" : "string"
              },
              "ephemeralIdRegistration" : {
                "$ref" : "#/components/schemas/EphemeralIdRegistration"
              },
              "expectedStability" : {
                "description" : "Expected location stability. This is set when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "enum" : [ "STABILITY_UNSPECIFIED", "STABLE", "PORTABLE", "MOBILE", "ROVING" ],
                "type" : "string"
              },
              "indoorLevel" : {
                "$ref" : "#/components/schemas/IndoorLevel"
              },
              "latLng" : {
                "$ref" : "#/components/schemas/LatLng"
              },
              "placeId" : {
                "description" : "The [Google Places API](/places/place-id) Place ID of the place where the beacon is deployed. This is given when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "type" : "string"
              },
              "properties" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Properties of the beacon device, for example battery type or firmware version. Optional.",
                "type" : "object"
              },
              "provisioningKey" : {
                "description" : "Some beacons may require a user to provide an authorization key before changing any of its configuration (e.g. broadcast frames, transmit power). This field provides a place to store and control access to that key. This field is populated in responses to `GET /v1beta1/beacons/3!beaconId` from users with write access to the given beacon. That is to say: If the user is authorized to write the beacon's confidential data in the service, the service considers them authorized to configure the beacon. Note that this key grants nothing on the service, only on the beacon itself.",
                "format" : "byte",
                "type" : "string"
              },
              "status" : {
                "description" : "Current status of the beacon. Required.",
                "enum" : [ "STATUS_UNSPECIFIED", "ACTIVE", "DECOMMISSIONED", "INACTIVE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "2c890ff3-fe40-3fe3-b888-bb69b406588f",
    "name" : "Returns detailed information about the specified beacon. Authenticate using an [...",
    "request" : {
      "urlPath" : "/v1beta1/Rey+Gleason",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ephemeralIdRegistration\" : {\n    \"serviceEcdhPublicKey\" : \"vpzii4v8jox1nh8rfudr26i54ovcurgt9o44r4lnu7c8zfolpznf4bxv11uoiyjrwrxa3gqduukvaq8z6donzv6x9gtvjl9vjmveiory7erxyh5q1lgo7kwta28nvvt\",\n    \"initialClockValue\" : \"1bjhawfj33u4l6qe8eiwbykjn5\",\n    \"initialEid\" : \"v37a\",\n    \"rotationPeriodExponent\" : 527944478102499388,\n    \"beaconEcdhPublicKey\" : \"izdbwf576wb9qcprusx139exoqep08lt46yzk41dqs4m4i727h0tcx\",\n    \"beaconIdentityKey\" : \"crep087wsddnz6aek28otcxcf302bfq2bsv0ybsz03iemxw63wp5s31gqf4bx4uvzgplbfw169pae0zk6e2ew3ngkfok2ql09uybw7doymady7z6sw26bjbcj14yuif2sx3itddyly2vedz61am678hjmwgwpsrmgr6qxt2p10xugjp5h05c0pp3d\"\n  },\n  \"advertisedId\" : {\n    \"id\" : \"p2oe\",\n    \"type\" : \"TYPE_UNSPECIFIED\"\n  },\n  \"expectedStability\" : \"STABILITY_UNSPECIFIED\",\n  \"indoorLevel\" : {\n    \"name\" : \"Zieme\"\n  },\n  \"placeId\" : \"7onb\",\n  \"description\" : \"Dicta sint temporibus voluptas repudiandae quis qui. Magni qui sunt. Perferendis atque eos.\",\n  \"provisioningKey\" : \"ohfyb504zl3pqkcuwwpteaqk9qzjasvnnpppusab5onri3opexy2ina30fcxdgnzvkmqvbw8m4xcceunb7480gs7x2q3nvcpe6i1btc8nvk5fludw262w8qzzftes0gpk4fn\",\n  \"beaconName\" : \"Lavone Hills MD\",\n  \"latLng\" : {\n    \"latitude\" : 1.9684304863461098E307,\n    \"longitude\" : 7.26776115959207E307\n  },\n  \"properties\" : { },\n  \"status\" : \"INACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c890ff3-fe40-3fe3-b888-bb69b406588f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.get",
          "schema" : {
            "description" : "Details of a beacon device.",
            "properties" : {
              "advertisedId" : {
                "$ref" : "#/components/schemas/AdvertisedId"
              },
              "beaconName" : {
                "description" : "Resource name of this beacon. A beacon name has the format \"beacons/N!beaconId\" where the beaconId is the base16 ID broadcast by the beacon and N is a code for the beacon's type. Possible values are `3` for Eddystone, `1` for iBeacon, or `5` for AltBeacon. This field must be left empty when registering. After reading a beacon, clients can use the name for future operations.",
                "type" : "string"
              },
              "description" : {
                "description" : "Free text used to identify and describe the beacon. Maximum length 140 characters. Optional.",
                "type" : "string"
              },
              "ephemeralIdRegistration" : {
                "$ref" : "#/components/schemas/EphemeralIdRegistration"
              },
              "expectedStability" : {
                "description" : "Expected location stability. This is set when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "enum" : [ "STABILITY_UNSPECIFIED", "STABLE", "PORTABLE", "MOBILE", "ROVING" ],
                "type" : "string"
              },
              "indoorLevel" : {
                "$ref" : "#/components/schemas/IndoorLevel"
              },
              "latLng" : {
                "$ref" : "#/components/schemas/LatLng"
              },
              "placeId" : {
                "description" : "The [Google Places API](/places/place-id) Place ID of the place where the beacon is deployed. This is given when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "type" : "string"
              },
              "properties" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Properties of the beacon device, for example battery type or firmware version. Optional.",
                "type" : "object"
              },
              "provisioningKey" : {
                "description" : "Some beacons may require a user to provide an authorization key before changing any of its configuration (e.g. broadcast frames, transmit power). This field provides a place to store and control access to that key. This field is populated in responses to `GET /v1beta1/beacons/3!beaconId` from users with write access to the given beacon. That is to say: If the user is authorized to write the beacon's confidential data in the service, the service considers them authorized to configure the beacon. Note that this key grants nothing on the service, only on the beacon itself.",
                "format" : "byte",
                "type" : "string"
              },
              "status" : {
                "description" : "Current status of the beacon. Required.",
                "enum" : [ "STATUS_UNSPECIFIED", "ACTIVE", "DECOMMISSIONED", "INACTIVE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "2bcc4a3b-3bd6-3392-a67a-22748b308af1",
    "name" : "Deletes the specified beacon including all diagnostics data for the beacon as we...",
    "request" : {
      "urlPath" : "/v1beta1/Ms.+Zora+Barton",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bcc4a3b-3bd6-3392-a67a-22748b308af1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "778dd1e9-e047-3c00-bf14-3ed5b14175d8",
    "name" : "Deletes the specified attachment for the given beacon. Each attachment has a uni...",
    "request" : {
      "urlPath" : "/v1beta1/Gerald+Langworth",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "778dd1e9-e047-3c00-bf14-3ed5b14175d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.attachments.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d4baa371-4934-3abf-a253-80d1a4c17f13",
    "name" : "Lists all attachment namespaces owned by your Google Developers Console project....",
    "request" : {
      "urlPath" : "/v1beta1/namespaces",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"namespaces\" : [ {\n    \"servingVisibility\" : \"PUBLIC\",\n    \"namespaceName\" : \"Ed Parisian\"\n  }, {\n    \"servingVisibility\" : \"VISIBILITY_UNSPECIFIED\",\n    \"namespaceName\" : \"Mrs. Christena Bergnaum\"\n  }, {\n    \"servingVisibility\" : \"UNLISTED\",\n    \"namespaceName\" : \"Jacinto Koelpin\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4baa371-4934-3abf-a253-80d1a4c17f13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.namespaces.list",
          "schema" : {
            "description" : "Response to ListNamespacesRequest that contains all the project's namespaces.",
            "properties" : {
              "namespaces" : {
                "description" : "The attachments that corresponded to the request params.",
                "items" : {
                  "$ref" : "#/components/schemas/Namespace"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "4e5a03f9-4ce5-3907-9223-1b508ab68741",
    "name" : "Gets the Proximity Beacon API's current public key and associated parameters use...",
    "request" : {
      "urlPath" : "/v1beta1/eidparams",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"serviceEcdhPublicKey\" : \"1ymbfgf1msh99kv1lpxwlbmsikzrugzov1fgaflwt5u736foo7qsiyeq6nv07b2cc26wx4wvm\",\n  \"minRotationPeriodExponent\" : 10597994058788719,\n  \"maxRotationPeriodExponent\" : 5950695893131282641\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e5a03f9-4ce5-3907-9223-1b508ab68741",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.getEidparams",
          "schema" : {
            "description" : "Information a client needs to provision and register beacons that broadcast Eddystone-EID format beacon IDs, using Elliptic curve Diffie-Hellman key exchange. See [the Eddystone specification](https://github.com/google/eddystone/tree/master/eddystone-eid) at GitHub.",
            "properties" : {
              "maxRotationPeriodExponent" : {
                "description" : "Indicates the maximum rotation period supported by the service. See EddystoneEidRegistration.rotation_period_exponent",
                "format" : "uint32",
                "type" : "integer"
              },
              "minRotationPeriodExponent" : {
                "description" : "Indicates the minimum rotation period supported by the service. See EddystoneEidRegistration.rotation_period_exponent",
                "format" : "uint32",
                "type" : "integer"
              },
              "serviceEcdhPublicKey" : {
                "description" : "The beacon service's public key for use by a beacon to derive its Identity Key using Elliptic Curve Diffie-Hellman key exchange.",
                "format" : "byte",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "29dc7025-f14b-310a-b081-5ab732d983c9",
    "name" : "Registers a previously unregistered beacon given its `advertisedId`. These IDs a...",
    "request" : {
      "urlPath" : "/v1beta1/beacons:register",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ephemeralIdRegistration\" : {\n    \"serviceEcdhPublicKey\" : \"6m931csa9188h\",\n    \"initialClockValue\" : \"tc5n8g6s5jvze2b6l7s32c2vbvbk080qy3nzrgwfplyxcje8id0ckn73jzcguyn00xouan9i6b11zj6vl50xx25x6169fdci1bdyevddoecf4mifeei518mu06nr4lk6vlpgbpioni3leo3gsx9pnbsxp5i9dag1stks4hqvbpbdadt7hht9ch\",\n    \"initialEid\" : \"n0to\",\n    \"rotationPeriodExponent\" : 1229232814437914214,\n    \"beaconEcdhPublicKey\" : \"17b8y7yi9triegn8u2ykskydj1jgk3ikv1sykfm3xkslravrrw2tm50zg6gqamf1oihvjmbe0rno9opqw9ny7cldn5f2lf4bmeby3\",\n    \"beaconIdentityKey\" : \"40iulnsg90xa41lor72sg7q5709ou5hr5gip8d7pahnfs40lbxckjdephj1vvjsjnicb36ax10gfkqp99oez36d5uzw9ri2jfyultedqamf1ow5njr3dwkppwdggdrfwk5f\"\n  },\n  \"advertisedId\" : {\n    \"id\" : \"q7l4\",\n    \"type\" : \"EDDYSTONE_EID\"\n  },\n  \"expectedStability\" : \"MOBILE\",\n  \"indoorLevel\" : {\n    \"name\" : \"Kuhn\"\n  },\n  \"placeId\" : \"78qh\",\n  \"description\" : \"Ipsam dolorem voluptatem sit aliquid. Maxime officiis id saepe repellat. Amet expedita enim dolor quia. Provident mollitia doloribus odio quas enim. Est sit est incidunt molestiae est aut et.\",\n  \"provisioningKey\" : \"767ij8zg0jqypjeatv3hpxfhutnr7rlrufp53\",\n  \"beaconName\" : \"Mauricio Kris\",\n  \"latLng\" : {\n    \"latitude\" : 1.4943010057593261E308,\n    \"longitude\" : 1.2754451069239754E308\n  },\n  \"properties\" : { },\n  \"status\" : \"DECOMMISSIONED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29dc7025-f14b-310a-b081-5ab732d983c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.register",
          "schema" : {
            "description" : "Details of a beacon device.",
            "properties" : {
              "advertisedId" : {
                "$ref" : "#/components/schemas/AdvertisedId"
              },
              "beaconName" : {
                "description" : "Resource name of this beacon. A beacon name has the format \"beacons/N!beaconId\" where the beaconId is the base16 ID broadcast by the beacon and N is a code for the beacon's type. Possible values are `3` for Eddystone, `1` for iBeacon, or `5` for AltBeacon. This field must be left empty when registering. After reading a beacon, clients can use the name for future operations.",
                "type" : "string"
              },
              "description" : {
                "description" : "Free text used to identify and describe the beacon. Maximum length 140 characters. Optional.",
                "type" : "string"
              },
              "ephemeralIdRegistration" : {
                "$ref" : "#/components/schemas/EphemeralIdRegistration"
              },
              "expectedStability" : {
                "description" : "Expected location stability. This is set when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "enum" : [ "STABILITY_UNSPECIFIED", "STABLE", "PORTABLE", "MOBILE", "ROVING" ],
                "type" : "string"
              },
              "indoorLevel" : {
                "$ref" : "#/components/schemas/IndoorLevel"
              },
              "latLng" : {
                "$ref" : "#/components/schemas/LatLng"
              },
              "placeId" : {
                "description" : "The [Google Places API](/places/place-id) Place ID of the place where the beacon is deployed. This is given when the beacon is registered or updated, not automatically detected in any way. Optional.",
                "type" : "string"
              },
              "properties" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Properties of the beacon device, for example battery type or firmware version. Optional.",
                "type" : "object"
              },
              "provisioningKey" : {
                "description" : "Some beacons may require a user to provide an authorization key before changing any of its configuration (e.g. broadcast frames, transmit power). This field provides a place to store and control access to that key. This field is populated in responses to `GET /v1beta1/beacons/3!beaconId` from users with write access to the given beacon. That is to say: If the user is authorized to write the beacon's confidential data in the service, the service considers them authorized to configure the beacon. Note that this key grants nothing on the service, only on the beacon itself.",
                "format" : "byte",
                "type" : "string"
              },
              "status" : {
                "description" : "Current status of the beacon. Required.",
                "enum" : [ "STATUS_UNSPECIFIED", "ACTIVE", "DECOMMISSIONED", "INACTIVE" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "9fa0a1ab-2730-39be-9b81-934c0d003a4e",
    "name" : "Searches the beacon registry for beacons that match the given search criteria. O...",
    "request" : {
      "urlPath" : "/v1beta1/beacons",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"p4jsuvgf7h4qo4upb8ax94uefn4kr7uig5wupjwoogot8at0deeq4wjbsd4d3zq8v88jcrgrypwpts8\",\n  \"totalCount\" : \"1z05ql6v4amkaoq8tahjk49pffw9t075e6k6\",\n  \"beacons\" : [ {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"ttblitrtaon253zw01l9cl2rv3zj9o9o8k5ldmw173qpi16b33qqfl5y2aozduhvff7gt4m19bi3i40szn105dkg7ormx86u9hkaqy2ceta20xdtfidsz7fz6hpee9oviscw2x88wr62t8d7xm3wtzqkfehtgyua634lroxvmmrp10bytoavifom3treya\",\n      \"initialClockValue\" : \"4hnof8r8776x69chv9tjaeb38932o1x6pms6ojni2xvmsx7d7ldhn\",\n      \"initialEid\" : \"6v2l\",\n      \"rotationPeriodExponent\" : 4973970258380989616,\n      \"beaconEcdhPublicKey\" : \"r7i4ps86yqu9gcdvrpowauuly6ku8i2g669l6aljgakrx0rb0v3ydtdn1ycamk4y7wdicihzgq7ikc1oylt9y0\",\n      \"beaconIdentityKey\" : \"sxxylw1oqmzpted9g3pr0i1zwkh0z1k\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"emht\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"expectedStability\" : \"PORTABLE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Gerhold\"\n    },\n    \"placeId\" : \"81c1\",\n    \"description\" : \"Ipsum et quis explicabo impedit esse quia. Porro rerum quis magni. Libero totam est ipsam et dolorem veniam cumque.\",\n    \"provisioningKey\" : \"i8y8ub0awo31weu0ayz8eo9lwsvckyutremi8shjhdyy93ef3y1k2flyxr33etf5yig1bao53ws0lahcqvp2ua8ecvxasaw498m5smpd0mrtytyb1b208gy6l05l23lky37lp1j1p25jaut15ezwuzsln8i7hinldsm\",\n    \"beaconName\" : \"Arielle Armstrong\",\n    \"latLng\" : {\n      \"latitude\" : 1.4191916788512458E308,\n      \"longitude\" : 1.7979215331770366E306\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"zumzdqfxzileh1rbdvpgkssd00thxu6ivawcw4xc4r6pd65kum4pb5pq6bbm54wvku5q81fwecm7ymvlo3k9gmplekrx93wmppy60vw3meb3ppngs96ugz2edwe0of71ifxz1jinm1oemn70edptnvd1s2vg3g5\",\n      \"initialClockValue\" : \"xloeavit51gv399p34d6z6c9b99g883lcr73zxthsxtbyefuhyjfteqg41qwt6ts5vx2fos51d73xu1xm5ahvxfyqhhk7w1f4\",\n      \"initialEid\" : \"uj90\",\n      \"rotationPeriodExponent\" : 3220272946894903216,\n      \"beaconEcdhPublicKey\" : \"sqjmaw4pm7vjvg7yfdnx4cjhjx6ua1oct8835f418bd2suqz4fw8iutk06jw5e00nnbt7c94wpucdykjfwvnxqisw9l2huwox211nwrgmo7svg3l5nmh01i370u18i0qrqyaeiy78s46grlzhch3tix6ebwohi5lq1ydhxz4cp4npgxkojac6z8xlw3w\",\n      \"beaconIdentityKey\" : \"ug9eglgvbcibwuk327iycsy42dd9x65lquijvf07xhthm95wzay7q1zjhmseaz7ow32hpg5j2n1qctv1vwz3kqhwl61vyavlgei45riizvdstgj3442i05t27r5o776dz1dwwav024aovofi9374sd36ias0\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"558v\",\n      \"type\" : \"IBEACON\"\n    },\n    \"expectedStability\" : \"ROVING\",\n    \"indoorLevel\" : {\n      \"name\" : \"Davis\"\n    },\n    \"placeId\" : \"5npz\",\n    \"description\" : \"Porro laborum ipsum. In sed voluptas nostrum ut vel suscipit. Aut et facilis totam repellendus at tempore. Provident quo voluptas quidem et error. Et ea dolorum.\",\n    \"provisioningKey\" : \"xtbcjjancn8r4nv779a0lqac3byl5jlcorjhd6vqrokwmta2lgkkvelsyy0k9y9x5sh1jk5ngponlwj52zjs7cj43mnxhlg4ojini2k0xuf3jfeo8o712f7u9df4pqg4lyx36zn3djelia3\",\n    \"beaconName\" : \"Eliseo Kiehn\",\n    \"latLng\" : {\n      \"latitude\" : 1.1431609569714747E308,\n      \"longitude\" : 1.15091493803397E308\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"c7p22np4ga16gl39zyhbp26k6lf4jinfi6nf7pg31gpxdxue1y\",\n      \"initialClockValue\" : \"qoq1kjcav388njo2g589pqdxonolv32n516lsqg7b80axemm5zp1zb6nsd4ra4a00hy6t1p3wtgxhiquag339ym3m32v14g422xxx91fgo1wok1ix2ztboi0273epwam7fbs2uz7pne\",\n      \"initialEid\" : \"bpon\",\n      \"rotationPeriodExponent\" : 2964237375374046191,\n      \"beaconEcdhPublicKey\" : \"p9bpf618mwhqmpuoaxs3wf5unvf7q\",\n      \"beaconIdentityKey\" : \"21xz5ewczh4e1l6tmh4ijdbsi3v\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"a8vp\",\n      \"type\" : \"TYPE_UNSPECIFIED\"\n    },\n    \"expectedStability\" : \"STABLE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Shields\"\n    },\n    \"placeId\" : \"060v\",\n    \"description\" : \"Et quo quo fugiat temporibus rerum. In distinctio officia quos voluptas assumenda qui reiciendis. Ducimus quisquam suscipit. Blanditiis dignissimos quas eveniet eveniet debitis. Vel ex a magni commodi\",\n    \"provisioningKey\" : \"yenwgxip83s3feoifosbszuzkkdtdsatmxle2w0saea70g2jpc7979kmpf1bpcolnjj0gc7c6ttwroyjiw0sha95tyk8owmf1nofnju4r6liwdejps3y2q72pm2lozjf\",\n    \"beaconName\" : \"Fawn Lakin\",\n    \"latLng\" : {\n      \"latitude\" : 1.068457647839153E307,\n      \"longitude\" : 8.609106596491875E307\n    },\n    \"properties\" : { },\n    \"status\" : \"DECOMMISSIONED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"wdb7da6diz08x8wklktcw7f9aj266tjckipif4hqc4f2rhiljue9mysmydmnj45ed6tbehpdi4hn7j55olrven48blzlzmb2g94m5m2qbkyvppeh2pg9ldzjdfqtvihzuzdjp7gzndf34425geyzr4xyony1vonap81\",\n      \"initialClockValue\" : \"k19ylayicpw8ivj3qw15dp0sv6p4\",\n      \"initialEid\" : \"vp4m\",\n      \"rotationPeriodExponent\" : 5677068600404774641,\n      \"beaconEcdhPublicKey\" : \"3fo9gn5qokdnffgbujkmb1satc2uks9wl8pmu6pg4zncixoiv1nv1h0e\",\n      \"beaconIdentityKey\" : \"7sztxxgp607mi9jo5x315gc1528wf0oc6r9f2up908qutm9u038bt291m1gl07w3xxvhmyft44gwarcy9dj6vdx7aiqlg0pp2d4na9nmacrv6578mobk2marnt6zugaj4cspdkg7a3mvjv8nekg46sqeby55r50k6mbnf2w10it8ta\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"7458\",\n      \"type\" : \"EDDYSTONE\"\n    },\n    \"expectedStability\" : \"ROVING\",\n    \"indoorLevel\" : {\n      \"name\" : \"Bogan\"\n    },\n    \"placeId\" : \"yk1l\",\n    \"description\" : \"Eum earum sed. Quia quas dolores. Maiores officiis vel mollitia incidunt.\",\n    \"provisioningKey\" : \"7o3lhdiehdhjzabvw8irubmp9rf2s96uovhvlvfip8e5f3l2fu21kzt3303f5i1y8011si06e3rdv9b2aozl7a0inylnlny7cogk0iv97m6fs50qiuk0zgsyq5wfjzpi6m1kebt7sramtbyi49mqd1xn2ekytkag8uo9x\",\n    \"beaconName\" : \"Andera Krajcik\",\n    \"latLng\" : {\n      \"latitude\" : 1.7912254752432923E308,\n      \"longitude\" : 3.3198747959134104E307\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"6l6kpr9xqnhfjgxjcjq18nlllfz26dlo8n9q3ps7iysg6a2n45p6yr1iht5csp8bduwg9lfy68n0x1cmfq85t9a8r3usdodzq2dlqh8b0jql5cmfjus5ewx18dk2e8lven9gwt9lp4sm77wfkhh6lpxigrk2x3782gkraz9t8767triavrj8mj2yu4h\",\n      \"initialClockValue\" : \"fz54zfmu2yjk6f10fdr06nn8j3895jorlgmc3lfh9htio38f02xmob2agm11d305b9aphkgulpfa2iqyspwrzxn\",\n      \"initialEid\" : \"319c\",\n      \"rotationPeriodExponent\" : 2858172100795553481,\n      \"beaconEcdhPublicKey\" : \"as54om4ry1kwklfeqdpbfea4hweoa8vsyx81ly6vacq016zxiemrj61t8gntzn1ieo9qqhruhksrog8m8yt9hzi16dyocs5o6eyu2kfl6a6vvm9jz9gwdhn5myrezgjstydp3vjnaffrj0q2fi0sgc2toz69xa430vzbwku6wtc7p7nnlbh54dyo\",\n      \"beaconIdentityKey\" : \"tyy011rhfdnzj\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"42j3\",\n      \"type\" : \"IBEACON\"\n    },\n    \"expectedStability\" : \"STABILITY_UNSPECIFIED\",\n    \"indoorLevel\" : {\n      \"name\" : \"Sipes\"\n    },\n    \"placeId\" : \"96zh\",\n    \"description\" : \"Ut recusandae deleniti eum consequuntur magni impedit quidem. Sunt officiis non ullam error harum. Dicta iure laboriosam ducimus repellat aut ut.\",\n    \"provisioningKey\" : \"dcn661sdnaghdlgp4qa65djlm7xbb7au80zmy58e3s7yeo48llvilmiipfuhnlq5g87s7s6ukjszfevqczfd440rubw7r1h3jooakpdeiszuucwgxb27smyx916w5\",\n    \"beaconName\" : \"Miss Alina Deckow\",\n    \"latLng\" : {\n      \"latitude\" : 1.160756510569195E308,\n      \"longitude\" : 2.1187740434916796E307\n    },\n    \"properties\" : { },\n    \"status\" : \"STATUS_UNSPECIFIED\"\n  }, {\n    \"ephemeralIdRegistration\" : {\n      \"serviceEcdhPublicKey\" : \"mf6m01pnj46vz6jrdkdj0kkq2btn499sqjklpv9p0fmmls4f0x7bel4cgq5acojrxijobgjxye7yct72xw9irn80oztkfxhv96o3krypxr2o42e5c1hvrp48j0pyi3gikp6f2lavhlofyrew8otb0zjxw0pngfkj79cnc6xols3nkjqvvm\",\n      \"initialClockValue\" : \"ttsqar34c0pb6mggcd4s0cgp7pxtjzzwkfjyjjyqfrjzbaset2rhdv033a858tw1kw4twv32ev7z58zmpzy7oa4h79nagka683ib65qj6ua3lkqpm1k22gfb5xfh9rizghxkp00q094rrevu2k2a75jfrnbydae1dpand\",\n      \"initialEid\" : \"dnn4\",\n      \"rotationPeriodExponent\" : 1772649870200745813,\n      \"beaconEcdhPublicKey\" : \"0rwtdonzzgia33swmg50kiyzfvcgg08bhua7n38pya29fhw8vr05r1yxc22a00y7n312cw81gcnrd2xebrlt05ormfooso29qaajhgxubs4r3naoa66kai8hsofz6run6vkmyvhx8rq9a40sci26vfar2mn9jbo6r2oxbv5qchfdq4wrt6ycwt904pmgqkde54\",\n      \"beaconIdentityKey\" : \"9j35o3tfdsux727u7vcal5i\"\n    },\n    \"advertisedId\" : {\n      \"id\" : \"oi89\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"expectedStability\" : \"MOBILE\",\n    \"indoorLevel\" : {\n      \"name\" : \"Doyle\"\n    },\n    \"placeId\" : \"l4r8\",\n    \"description\" : \"Porro eveniet est tenetur magni. Provident nobis ut. Sed qui ullam possimus repellendus.\",\n    \"provisioningKey\" : \"79j3heervfauvnxuzqwvo9ymozhizfer151ar3j334p0twqwo3xsvck9ialxpy7ob8thbovfgueuwhjt81c1utjicfke532o2blyv6na7os72g58j5mjf\",\n    \"beaconName\" : \"Janiece Schmeler V\",\n    \"latLng\" : {\n      \"latitude\" : 7.381007247822167E307,\n      \"longitude\" : 1.0571766628754875E308\n    },\n    \"properties\" : { },\n    \"status\" : \"INACTIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fa0a1ab-2730-39be-9b81-934c0d003a4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beacons.list",
          "schema" : {
            "description" : "Response that contains list beacon results and pagination help.",
            "properties" : {
              "beacons" : {
                "description" : "The beacons that matched the search criteria.",
                "items" : {
                  "$ref" : "#/components/schemas/Beacon"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "An opaque pagination token that the client may provide in their next request to retrieve the next page of results.",
                "type" : "string"
              },
              "totalCount" : {
                "description" : "Estimate of the total number of beacons matched by the query. Higher values may be less accurate.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "025f21ee-93b2-3e9b-9e97-67444e9d85a9",
    "name" : "Given one or more beacon observations, returns any beacon information and attach...",
    "request" : {
      "urlPath" : "/v1beta1/beaconinfo:getforobserved",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"beacons\" : [ {\n    \"advertisedId\" : {\n      \"id\" : \"82kw\",\n      \"type\" : \"ALTBEACON\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"4yd3tucg5pb\",\n      \"maxDistanceMeters\" : 1.5476297550017466E308,\n      \"namespacedType\" : \"vtlfsz8u80zt7yyt5f1tm95hxpose624qin08t6g96sucmbt\"\n    }, {\n      \"data\" : \"azaa89p8rvify7l4zmudnzr3h173blaly2zjxzto7bpgi0bhzavs4o46r\",\n      \"maxDistanceMeters\" : 3.3570668416769E307,\n      \"namespacedType\" : \"3drj\"\n    }, {\n      \"data\" : \"vvyqc8xxwongjx12qwww0xyj36fibq7if73dewyi94\",\n      \"maxDistanceMeters\" : 1.0682814981329984E308,\n      \"namespacedType\" : \"douls1lh44oz81t67rlk5d159dzqy8ud6711g18sapctjaxf0qnki\"\n    }, {\n      \"data\" : \"zsfla5yp7n8xt85jz820lhaxaqps4zjdqy\",\n      \"maxDistanceMeters\" : 1.2565559391536733E308,\n      \"namespacedType\" : \"s2f73ti0lpp4qqzf2tuv1q7rsl56n54ma7amr78wyuvzrtjpd1cdokg2u0h78vb\"\n    }, {\n      \"data\" : \"da6e0791ygo0fez0dgpf3hj23verr39b39p17xen9wrbvhpr37gdjo0lowg42fxjv6hyt5jjynggbns0tjf20j679ypq4lkv3hrlv871117fo9jg9q1rni25j1jw9kpfpq34sx0paqph9n8yhuemga0rhtqqgha1wh79edk657tkk0xws1bhb3fhyb1s\",\n      \"maxDistanceMeters\" : 5.304681389216922E307,\n      \"namespacedType\" : \"vfvzrd91j1li5iyhshsmueb35wwee5j6ocj3pcj30yeo2a2gjjngx5ahwldtyo56pkvtikxiafcwdl0n4q8yqsw16shohwmar4ik9zj4tdnb9zug3v6gurqzj9rzjpalg38\"\n    }, {\n      \"data\" : \"2148jlmphwpmwhsttw1s56ecc1s9uir089uc656oa7zsx0z8pmg6rv53qmpwisz3rmah6lxoqez67xr1xb6y4fiolei68p7xsc0tp6ds5ojsfs82wiljgeq49theurnrb2w\",\n      \"maxDistanceMeters\" : 8.291874934222018E307,\n      \"namespacedType\" : \"s3gmlr63n5vtg6j0kze5y2rsjg58ap6tfvol28b7lufme4izijlve3x8xks30x4umwbrrcc5fpm3p7qteuhj1ctpok9rlbj18yt58o4te2pxkpvh8o24dvix7bjzc058yhdipwruhik3xhb8boj5woowgf3c3zd3fhci2at\"\n    } ],\n    \"beaconName\" : \"Han Durgan Jr.\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"de9j\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"93gh7xwgclw45i6klzvbf06nrvv1cyyytu2xgeh2im077bhi22x0111p7mdsqii\",\n      \"maxDistanceMeters\" : 1.3791689500400792E308,\n      \"namespacedType\" : \"of4v9wxru5zs1gkv2i9vrdssqcy6oo9wkspa3yq3a2aidyhnkk113lm3n2ivwam8em1w9axalhdvm0aodgbg8hoapjxtvp82ke9k33n0ya13s93cm4a2bxygf2vhg4o65ut3kqadumezbwycqifedgkip4wut48k\"\n    }, {\n      \"data\" : \"vro88rmnxxiuzg8ic6eq1mixcn6mohf25d4okziarc2hp2zflz78p5xtgk63l71lzujhxibglur2ip2ssoyeqhitq0pxjvgpk1vk98vwhf96zfj0he83mymaj4igvth6dn7db56u4sr1eew4nwqcvtwjr334wtb5hn2fnleb197b9g1jv87h7kpo5a6lmrblqmdkqo\",\n      \"maxDistanceMeters\" : 2.415470242007412E307,\n      \"namespacedType\" : \"faqyx4s5wno1m3gwmhb2r8q006waavsxv6a22v7298mnaoj8qqcicsfmizibb6ahlwjvt0zzw2ikh71lecy5aj3jwr1g9qpb0allrukvm87igkdi2q0jotqsj8r5linc0rc82law3tv7dowosyl4uuts6ywmh3awam3djumzeikyi6o7\"\n    }, {\n      \"data\" : \"jwdetnusx241ybxj7cpfczxtj072uas8dg5yes0emo6wq2ju6qy6rt4tnb8wgjh5dx4t5ucgqnjvpektdho2m3na9avla3bwt12jt0qyrquff4sievvbhj11dk5kw0mi4170bfi\",\n      \"maxDistanceMeters\" : 1.3059109079960836E307,\n      \"namespacedType\" : \"0tfo153bex4f67c0g2b92v20pkkd0uh47wemjw60x5lmpf2r3qm2hckeinz8ayhh2v6zoooxqkzi4bwsj2c1o07bvuqymqayxcndo6xy7cv0isuaalgz19mrm1gcw3pzpmj4eplhm74z85rvb7nvuo7ht8phjcy4popirucgu423u0593z0hz79n3\"\n    } ],\n    \"beaconName\" : \"Dreama Abernathy\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"9r5y\",\n      \"type\" : \"IBEACON\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"xn54ldcolo10eyszi81z3lrcjb5beb2pexyf7p\",\n      \"maxDistanceMeters\" : 1.6299791653741049E308,\n      \"namespacedType\" : \"4nys709rnzezduylxgq43bjv8mvub1q11xoux3fv3pp9gyl9eon41gbms9ujzgwvfthc5f27x3p35baapoyq2zir05s7r4c3tm6i13ihfzezclwt7oi561jv7yk32mlw45ndaz91se7rl97hgop8mxm1yssqmogrrzkshk91u0m59y8wj898\"\n    }, {\n      \"data\" : \"0as7nw942pl80lpac4zbnx8wvgn46jzfl8f4rvuai0e6cz2wnwbjbpvdazlvjy1rkadkl7jfsjysykzza5vx3a3y9sk50u617rxw8l255ohrggc44n88nj7whlhyuzkcdws0lq57klg7gvh5xkihu0huwbredyx8nxdzs5z75jf4reaquu\",\n      \"maxDistanceMeters\" : 1.5530970313695125E308,\n      \"namespacedType\" : \"z2h0p1gcgviqc8hk3qx8xh3v8qc48myksz6a946abqpvl8qxlz67eff6axxjllfaspw2upwfizbkp702jf6alok5jwr6xdbaqgnlhohyk2avo026z29sp8jh5vd3rld0wkjpejuvbuot9f9eovbj78jllissshyb5stj04zzxcc3ct5utb925z5a2pmau9\"\n    }, {\n      \"data\" : \"18uok5h9oqu6y0ar\",\n      \"maxDistanceMeters\" : 1.6038354575649804E308,\n      \"namespacedType\" : \"m2v3pceh8rkw264kxjtivacjolqnwomv4gfvpk38ur3f4hbvje2hvp1twnl6ky\"\n    }, {\n      \"data\" : \"vi168tpnf7c\",\n      \"maxDistanceMeters\" : 1.7469442867009699E307,\n      \"namespacedType\" : \"5lu2b0kfkq18g8t0dj3iyxiudtdy2tf2ganukjri1ooon2yx8giecc66p81194sygwt69fakwgmo2a18qr93iee4ltyceudoyulp\"\n    }, {\n      \"data\" : \"w6ehl9penlpqot8iksb7imlplshpfv2ztw25gzf02qbl7k4vyw7nts9884rvml\",\n      \"maxDistanceMeters\" : 1.2702594813985301E308,\n      \"namespacedType\" : \"5a4ztevzd009ahkxi3lp0m2abw6cnbon3r55p43tfbyvm0hkmxn966gympfgjyqwivlod5shfuknb4x8dcyf1hl5scvjxfk8p20fop6wx1qbw0r924ek1oefv4p262zkajeqj5zxto1hi84sboneztrz9u97dwvzvv0htg9m7zbzzgz929uyenjucu3ojknai\"\n    } ],\n    \"beaconName\" : \"Ivette Conn\"\n  }, {\n    \"advertisedId\" : {\n      \"id\" : \"1y41\",\n      \"type\" : \"EDDYSTONE_EID\"\n    },\n    \"attachments\" : [ {\n      \"data\" : \"8j621vmdvfet2z1ztwd7qgr3fwx02t9r8nwtikkco0sov7v2jgwce183gs9zgckkk\",\n      \"maxDistanceMeters\" : 3.613895095185201E307,\n      \"namespacedType\" : \"0kkzz9ata2h851phk4om1chxwtyozuz401s7sg55ufgzp6so70lwz55a916e2m1k30r1saujakhlsfalvss2tstnerw96tsxyu7ppeuwv4yqjwbat4h57slwwr2t4yt74fuid64n5kp205gr9ykb69qaag2dqs3yj69arhp0rrws0f46rs8cg\"\n    }, {\n      \"data\" : \"qwgpwcaaw5ygvkc8e3to1vznzuli7yyviyvmp6mbor1152cg9hbbic416ld9ib15ttt75rbjek7yrzqpxnxbq92srpy9btnt8bpjfmpfwk0j4fa68pb0nrw9vxx8x0q47m7yg8\",\n      \"maxDistanceMeters\" : 2.900392026607808E307,\n      \"namespacedType\" : \"wa4lpvpjbqfgvxin0rkkl133agp6rwhx0pdb0abese2wmolcv8bcbl4xdawejc2q05bf8e9kx8ebo2yqc8mtf3nzi4zags3cy2alag20islet536lzb24lwv87mzpsa8zsf22f7fnhevw7hqb1cufiy6946hfpfi72skb0r5kdhzt4k6a5fny72nr\"\n    }, {\n      \"data\" : \"x62efzzp1xtcloisivr5jppghvc1chrdjheg3ej8zu4k9kydjtjc9m2az63g2zmy3oqs8w3hghps7kpobqdvup33kezedm5gojrb3xp32e4w4r\",\n      \"maxDistanceMeters\" : 2.83428285751214E307,\n      \"namespacedType\" : \"yiska5lbgg0d5noitm121od1if\"\n    }, {\n      \"data\" : \"299v2ipi22r264mno3rybe2ggxvtfo3ove6lnfji2bfv22z4gda103k7byc2z40j8n63k0hh5smxu9l6a4\",\n      \"maxDistanceMeters\" : 1.3377963928184055E308,\n      \"namespacedType\" : \"uir2ogsvdvw16zhh4cnx7cdwmgd2yj49yp5928ejwx8z1xwvpe9cdumfqoqp2fmt93d3q1y7f7n3gmm3a2g7h02yki0t1zup6db4ypwsarpjjzz4sweppnrfsza\"\n    }, {\n      \"data\" : \"ke8w\",\n      \"maxDistanceMeters\" : 9.872448505521738E307,\n      \"namespacedType\" : \"h2z67wl7yij368t6mtvukyg8fyitr2jdsmakqedvl8jpuk6y7ujehjuv751l25pvr9s7poikaybwh4yozf0crqnj6nv4v7gdseixsdhxigfoes93apnoiqlaqun2vnjmeeyg1l57j14dih24vc2e7z5cmixfq53v5tiyqdrymy4v0256ws7y62q\"\n    }, {\n      \"data\" : \"eqysslho86vtwzxcysaerej8ofemloko8xmnxpnrkr1lfslpzkguyd4gnt58p5qehxkpggexya1mqxvmez73hc5qgrx0zq1jn0w69t1b899a79mf3dqhpfsitf6eaaezkk3bs\",\n      \"maxDistanceMeters\" : 1.5145694890378501E308,\n      \"namespacedType\" : \"wohquufco2myljn0nq4qxhfow1ot8dzhbf5ix4taawgcp864ju0k1yfm3qf8t71csjvom5dl8k910p82zrprd0nusufcsnk6sja961vg5pp5chpmweh73i0a3kr1xth4jy0zav7hqm7sgte7dbka1tt4vahk1sy2w23o0ba921g7gsuznlkhxgyw92j4ik9rf\"\n    }, {\n      \"data\" : \"ym5r8hs4os6fjxcxmaxfs52niqspmndxu9di3ikmq3noeafkp7tlxgrhb7cy680w9bbpgthgpbmf51gsx02muarih7g4oljcrpf5ilp0lrso6o17ijhybl9dy45dagdrhiw5zhehcvhiyw0gtr9w8id0psb59mqau2be9cr7kch\",\n      \"maxDistanceMeters\" : 1.4376981506603141E308,\n      \"namespacedType\" : \"4tmjxxwaku9cgo1rpb9wejx6vv4fiwunsu8k8lgzdazgaccyk3uib4f9xit5xi5kztqpdg316lz1zdgqcae5sixu9vomja2wluddrueaykcj5prjkuxvwshxj0oxlv5nwuwst6cwyd7l8x7psqe2awqid3rrwvq938xjxud1xajjid3s1neecw4tqrmv6wuan81axohf\"\n    } ],\n    \"beaconName\" : \"Ms. Vernon Collins\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "025f21ee-93b2-3e9b-9e97-67444e9d85a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "proximitybeacon.beaconinfo.getforobserved",
          "schema" : {
            "description" : "Information about the requested beacons, optionally including attachment data.",
            "properties" : {
              "beacons" : {
                "description" : "Public information about beacons. May be empty if the request matched no beacons.",
                "items" : {
                  "$ref" : "#/components/schemas/BeaconInfo"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  } ]
}