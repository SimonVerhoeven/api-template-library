{
  "mappings" : [ {
    "id" : "ff674ac5-9ec4-357e-a11e-4aadc653305a",
    "name" : "List ImageVersions for provided location.",
    "request" : {
      "urlPath" : "/v1beta1/kvxdrjcafecgcde9pt3en5z28wflf3ea7gfsz6om2pzhtvt3jcdx4jugdhx5zbyr2qybqnvafik7uavvgq6qxsu017rplsgsu1u2z9dnktzyy9mxrf5l3w7f58zxop0oht9mctqpbybqe59dgbymagslomsz12iolepu6epsmpco9lbrf3/imageVersions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"wx8ninndiewvw8jlr4d6zlnkma876hdqa53rzz94ed5as0u7r7lxrgsh8hne7xa1cxgakf\",\n  \"imageVersions\" : [ {\n    \"isDefault\" : false,\n    \"upgradeDisabled\" : false,\n    \"releaseDate\" : {\n      \"month\" : 1718861139,\n      \"year\" : 1827047303,\n      \"day\" : 2107293943\n    },\n    \"imageVersionId\" : \"0m8z\",\n    \"creationDisabled\" : false,\n    \"supportedPythonVersions\" : [ \"df2grkgcv1rhfyemry77nnjdrfq9air5mg22rczaeao6iu3cgauuwiwmw8hzwalbz99vtfrgax260zb6xc3\", \"vj790jb9rrprqwz8mf7qn8121x02cn3ulh8k4sbqm860wla7706modrzo6fe0ngv62u\", \"6d71xthzk5fhzh0bwlq6wj075kjkill4wqsuh6tkv9lqoeavh7rdmzt2bkampozz9uf7ey8tfxttb6a2crrmus65tf8uc3mcifugj8bln3voa2tpwtmlxpyi9xr2id6efs2i\", \"76yrm6ztp3kwa0zoehafl9n6seqjonp1qdpgponlza3x7oss8g6cou20ia72xkalx47uotnhpp7t6u7o5c045vzwe823b1vj1a99c4nmhkrvz7y2wtm4x9vm65s8bj29oc6mg8362gvv5v28pcu3v53a9x45oy46bdyhlbyzc4zb9er0s1o7b6akv3yr\", \"tae8qjjwxed4gmbx24rq52hn4btvpxb3wr5jjm4mm4l0gsvkyllaohtqde1j8mzts8jaqbtzi6swnp364k417xryvo19vgs4i5wtqew7vx75t13nak06u592p14eofcoty7wccjhzg67dc7rr508hxlb8wbyprtqhepncnol58\", \"smq37n5613vsc4j0bf0q8e5bb8xu7frs9u59sd058ls1fdifyy0m0sxvma39r99f3i14v4mychnfqk9lz50opui5ctgol75bgrx72xrn4nffo2gsuap42bcy0ww5o60f62hqbcftaz5sqbb0b2xjrkn2dmoa2tk6cxmpyki82y\", \"axqnflomtyan3g0x781zm6fl21vzke55wtmv82u4d0ub1oytzh169j9av6b89pcreoa55\" ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff674ac5-9ec4-357e-a11e-4aadc653305a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.imageVersions.list",
          "schema" : {
            "description" : "The ImageVersions in a project and location.",
            "properties" : {
              "imageVersions" : {
                "description" : "The list of supported ImageVersions in a location.",
                "items" : {
                  "$ref" : "#/components/schemas/ImageVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The page token used to query for the next page if one exists.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f0909c68-f0af-3603-9b17-fd15d5dbe532",
    "name" : "Create a new environment.",
    "request" : {
      "urlPath" : "/v1beta1/p01i0tn/environments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Carson Anderson\",\n  \"error\" : {\n    \"code\" : 2094101537,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Eaque quia nisi. Quaerat ut eos consectetur sint qui non qui. Maxime sint ratione velit iure itaque qui. Reprehenderit nihil corporis incidunt. Accusamus veritatis consequuntur numquam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0909c68-f0af-3603-9b17-fd15d5dbe532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5b0d174a-a9b3-31db-8b47-1b84a9bfb125",
    "name" : "List environments.",
    "request" : {
      "urlPath" : "/v1beta1/tazc49k58ympyown0k1hsmnrjlm225z8kj06goy2xi2m492txpvlr5k3cd7g4wog2u4lycv9z/environments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"environments\" : [ {\n    \"createTime\" : \"2022-11-05T15:18:51.211313Z\",\n    \"name\" : \"Kristie Hyatt\",\n    \"updateTime\" : \"2022-10-02T16:41:51.211389Z\",\n    \"state\" : \"DELETING\",\n    \"config\" : {\n      \"encryptionConfig\" : {\n        \"kmsKeyName\" : \"Victor Schinner\"\n      },\n      \"softwareConfig\" : {\n        \"imageVersion\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/desastrozo/128.jpg\",\n        \"pypiPackages\" : { },\n        \"pythonVersion\" : \"bl36qlt4p11l4oslzzrg1lzhypdgyw4rne0zon330rvlef7k7eqruhm01kb58vxb348l6i\",\n        \"envVariables\" : { },\n        \"airflowConfigOverrides\" : { },\n        \"cloudDataLineageIntegration\" : {\n          \"enabled\" : false\n        },\n        \"schedulerCount\" : 1065389535\n      },\n      \"webServerConfig\" : {\n        \"machineType\" : \"wjo8ekaayyz0unempso9pklvlt4mobrktjojozy518o77i1kf8czwae9dnbpu1mtzhxpx1pk7kqneovuir6qhkvhhmo53bdouvle7cxd7igtichsnh99keplm9g3erd537txktgedr2km\"\n      },\n      \"databaseConfig\" : {\n        \"machineType\" : \"6cldcpb4lmjhsooze2lkihrft4d5ptrvb55ie75t4v9kfiglkvs5cgp5p2tnubv4nhoweqchmbm1ym7bssw10zs4jh05hyq4votjfyvc1qysi0e90hw7yhfko1jmvsmi5xwmj\"\n      },\n      \"masterAuthorizedNetworksConfig\" : {\n        \"cidrBlocks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"enabled\" : false\n      },\n      \"gkeCluster\" : \"3r7z7jyqrxf67rmr3ye208slau2lpys7j3bg5hoir5zdfxkry08l2xh6cm9d1e92l4xmnnty4myjcjy83tvf3sf\",\n      \"nodeConfig\" : {\n        \"enableIpMasqAgent\" : false,\n        \"subnetwork\" : \"gywwzyo6j8ro2g2gges18b1pc2uoqcf6jxd6r8bwfhbbwtxcsqzu1a9nm3ifqx40i30rjc1y5irw3ih1m887944m\",\n        \"location\" : \"sypa85w82tg7kmwac4ns4zbg06siicf1omv3ig9h3bgpmnvuar0zzyjf8dkxwzqwlcj2art3i3np21aizw83cuz4nbggflibvjxvui7obl50lgp0qd9d1csfm6tsfx8oun5gc80u9d6taf76tp5zlky8cpbwygztpwnsjabjtobh53d\",\n        \"serviceAccount\" : \"1h3x9dk00mg10w3wae1xcprhb1biuamkbs5zkm8mu1i6x7n0n045ct54iodqn86x06qva6gfovtijiz8eicms6nbl4d3etrcpyg55piu7qshf537q13q0kmn1p4ttgiw2099jjenbz4zycylg88a820a50vfd869ad\",\n        \"oauthScopes\" : [ \"f5o67xn516lj61nuulv0mf67o2wntxhbje9627gih380y66ku23mgjz2qur0pn8paspjgyj0qudrnduzku90c5gk2qyfs7rbgv3jn8q7m0vx9gg8ca7nexfosvo6m7i0t99xt7vdz5rfc9hm4i6p50u619emmi54iof8v6gpcxofr3b5qp4za0fn3jwfi08r6kmyg5\" ],\n        \"ipAllocationPolicy\" : {\n          \"clusterIpv4CidrBlock\" : \"547uqv0sch4bz8nrsbugo4a5j7cbiehw9zjdgn4olflo7t4rrmlmw3375ynbixwgbfqe7kerlo3l1g8rpktk6skvfep9iax2vggyp3a4f3m18mjffpz6makoaau9tz7hgrfl0cd5v52lfbhfweve\",\n          \"useIpAliases\" : false,\n          \"servicesIpv4CidrBlock\" : \"k1leyfz264i3b77xk532umj1yn2w168hfr9xajc2gmi3obf6wvqt7zua90uarcfaxw5egsqpq4z105pjz30svqhltv5923hhj8mnoreglh1dfd9pyk1qj5mxq4wbm2wuseoeisau\",\n          \"clusterSecondaryRangeName\" : \"Deangelo Grady\",\n          \"servicesSecondaryRangeName\" : \"Ms. Eun Ullrich\"\n        },\n        \"machineType\" : \"wqs8uvlbewq8qtzenzvk10umsrcfg5jan4pno56e4a4vgh48t8ec41hli2hupbiv6pah1jkpz6k9nefwx1jclx7mrqphc8a77ek53d7p2upfvwcph52w3nph92h1d51qwyaioog5xk4v48bfgcooozd3qb06eo1\",\n        \"maxPodsPerNode\" : 260150082,\n        \"diskSizeGb\" : 1271311485,\n        \"network\" : \"3bze6k1p07a1y53r1ts85f3dhdutzgzlgt7b53t6fqufx3u5c2wzr2y6wbkngq48naw6jm9\",\n        \"tags\" : [ \"o94amg5jh\", \"38gzac8bk1\" ]\n      },\n      \"webServerNetworkAccessControl\" : {\n        \"allowedIpRanges\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"maintenanceWindow\" : {\n        \"recurrence\" : \"d3t1fybpo76eihki02j00fyvb3hgmw42ymp1lhj20emvdn0oqstqfhg56\",\n        \"startTime\" : \"2022-08-04T14:42:51.212018Z\",\n        \"endTime\" : \"2023-02-05T15:07:51.212052Z\"\n      },\n      \"airflowUri\" : \"https://web.example.mocklab.io/628551\",\n      \"dagGcsPrefix\" : \"daqr5hanwigg47ygyufttnfr42ec34w34mx6s0frkvpd1dixcefrbg2fqw6olos7o6zzpj029eopa8cwd3kkhf8uotv0\",\n      \"privateEnvironmentConfig\" : {\n        \"enablePrivatelyUsedPublicIps\" : false,\n        \"cloudComposerConnectionSubnetwork\" : \"pnb8vk9uelygwz19pvo4wk2ftypx0n7jo3jn6tsn5sxlrw9wdj0wasv2afcfmdpir0vtb4gp91ab5hbgh1x0jg3024vx9eo1jkrllu50r7v0yajbvptpv1ihnc5qkked0lfw577p3ualgj1g08z7g7o\",\n        \"enablePrivateEnvironment\" : false,\n        \"cloudComposerNetworkIpv4ReservedRange\" : \"npfkis46gwaxsrnsm3zhnr6k0wkdngfqapjxyoe6j5fctspun68cy240u1b4clpqmn0cz2lxph1pefp1c9dnk8pp4ligif8csd9zvd1phtmbisr04hg8u59rv71nkdvecd7khy3zzh41x0gsoyf9waxw2a\",\n        \"cloudComposerNetworkIpv4CidrBlock\" : \"zyggnjgx3io0\",\n        \"webServerIpv4ReservedRange\" : \"af4m4itwzokx7qkxy7biisjparucbjmtzfg920wjppftmmdu0hmf8y55x0j7ml3ago2162qq0ssuyjj0q2\",\n        \"networkingConfig\" : {\n          \"connectionType\" : \"VPC_PEERING\"\n        },\n        \"cloudSqlIpv4CidrBlock\" : \"13q7trmrn4quu7ye86iu8uufrilkw37pljae05p9yqg1zmranytaij467lwunh2305dzhdzb6z9p4g16kyoe3rp3vttlfwhrok5zcn70yu51o98b7u3ziokmyd6qssr\",\n        \"privateClusterConfig\" : {\n          \"enablePrivateEndpoint\" : false,\n          \"masterIpv4ReservedRange\" : \"vrlufsl0bz98raaz2ay11s6anr5mdc0vygowg8mbxrqnq55tuzq1c76222762l1rvt6g5zywm83597u02phqcyawv7mk5e0r6ul6hg3xrvurtx76aa5qlmm11nauidorkriekbbik60woqrcrk0ff\",\n          \"masterIpv4CidrBlock\" : \"txbl96k4ukpbv2e6f9thqx3zo17ln3ecsgu5bxbgmech1pmrjj5acvv\"\n        },\n        \"webServerIpv4CidrBlock\" : \"7c2uj7rzlmj2iiq\"\n      },\n      \"workloadsConfig\" : {\n        \"scheduler\" : {\n          \"count\" : 1310552555,\n          \"cpu\" : 1.4276032408278506E38,\n          \"memoryGb\" : 1.1025924592246303E37,\n          \"storageGb\" : 3.1721844188260614E38\n        },\n        \"triggerer\" : {\n          \"count\" : 690129364,\n          \"cpu\" : 8.272614608904671E37,\n          \"memoryGb\" : 3.442613566582766E37\n        },\n        \"webServer\" : {\n          \"cpu\" : 1.7724603325320294E38,\n          \"memoryGb\" : 3.2854802094138414E38,\n          \"storageGb\" : 3.1216182186183957E38\n        },\n        \"worker\" : {\n          \"cpu\" : 1.7967337800565777E38,\n          \"minCount\" : 776742218,\n          \"memoryGb\" : 1.1416863054271853E38,\n          \"maxCount\" : 735029062,\n          \"storageGb\" : 1.1995105940427822E38\n        }\n      },\n      \"nodeCount\" : 496488709,\n      \"environmentSize\" : \"ENVIRONMENT_SIZE_LARGE\",\n      \"recoveryConfig\" : {\n        \"scheduledSnapshotsConfig\" : {\n          \"timeZone\" : \"2023-01-07T16:10:51.212574Z\",\n          \"snapshotLocation\" : \"d1h6nykzqf8rwom7dwj8r29meanubmv3s0znq24wzxg7zc\",\n          \"enabled\" : false,\n          \"snapshotCreationSchedule\" : \"4tqgs6ct739pbpmv2bvsp6krm1xct7nwvwpaie6ggj5i9trswr0zo03l9rs6joc7td8vr9viq4eecdtgho4vk\"\n        }\n      }\n    },\n    \"uuid\" : \"25c4ce06-1500-3ca9-bf0a-11d5870dae38\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-15T15:30:51.212704Z\",\n    \"name\" : \"Gail Medhurst\",\n    \"updateTime\" : \"2022-11-08T15:30:51.212772Z\",\n    \"state\" : \"ERROR\",\n    \"config\" : {\n      \"encryptionConfig\" : {\n        \"kmsKeyName\" : \"January Thiel\"\n      },\n      \"softwareConfig\" : {\n        \"imageVersion\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/plasticine/128.jpg\",\n        \"pypiPackages\" : { },\n        \"pythonVersion\" : \"xferpa2nd4qd3s9ckxh065w2bgky2dehmviebizle6fu7pik2wtazi9gfde7xj2uhausgqh89bbo0i6327pahp20mvi75o6zos5rxwt7qkwfyr0yuwvghlevq\",\n        \"envVariables\" : { },\n        \"airflowConfigOverrides\" : { },\n        \"cloudDataLineageIntegration\" : {\n          \"enabled\" : false\n        },\n        \"schedulerCount\" : 193016304\n      },\n      \"webServerConfig\" : {\n        \"machineType\" : \"r0p0mpw2p7eokrzwh9keqznof4vjh6au3t5y4watp31x1grd39y0ceu2jfu3ugqzrwkwn178uqgaid5gi4nbnu4mqfpyr8bvbxdt9xya8stnt5tmjbo2q3ozrbeiu53t2fkwyvl7fhmw94u562avhzbig9k1jr2m\"\n      },\n      \"databaseConfig\" : {\n        \"machineType\" : \"6qy9qzhqtrkhca9a10im0u74y2y\"\n      },\n      \"masterAuthorizedNetworksConfig\" : {\n        \"cidrBlocks\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"enabled\" : true\n      },\n      \"gkeCluster\" : \"4cpq96x5je2bqu1jqcppbl5lrzw62p5b0hxd1tltivxwa07901yifmb7qixrfrdlauht3gqlcetf9z3g3shhsjnq1lx92noyqocloa6812qwthfvax1siyxmu7ruupqphfqzny3niozjo88ihqvpoidofqwgxhjqqa0\",\n      \"nodeConfig\" : {\n        \"enableIpMasqAgent\" : true,\n        \"subnetwork\" : \"jh8qckr8eujk6rp0l0b3i1wyadrr69tieql9du4aw7q50knlp\",\n        \"location\" : \"273h0fgwonl8r1b87empi1eggm1a198p86ttjye2ds1a553v1pa6sa3josixowum63tchi84bnz4enxfdszcufvkannyw80yw9bf957xi6t522cwa\",\n        \"serviceAccount\" : \"1tjf3prjor7oezg7iml3oyevqqx5yqjf12t7tpoj8033blgzdgzpo1qtm0682t7q2nboo85q5zqzijtn3w3urxyf5pjugqz06jjxbuw56r2kakare3bx7l5q2hogaxgb1lznbi5mdhtjz90r7nha22geyo\",\n        \"oauthScopes\" : [ \"nctd0j28wc2q312p4k4kpzw8ht0ltf4rfgnouiqm27njnrm569z5gmnfw3trkhd0supjjc8kqzlcjmcm3mwjs1l57uoxuui9en25bqo71ez2r1h0z0anyery2yud6pg6knmgjr1it2lqgxcwhvt1ho8541xtoei3oil3e\", \"fumpj44n68ajhskp6xx8heromtm826wlqv4uzwhsbvmtpf8otacgfv7ymuom9ryxmlo1bbtq6p0mwyh\", \"lbw55jlkv4fxk3b3np17f5sj2polu9b2pygn6ns5cbr1nmc4eh49i58y\", \"r1li2yl228s55pkxye39f6o6pywpeydb5l9n06il6o96lv1zxdvf75oxd975eoz226lpfh9d3yuijt6o1uft3sncbcb9yri251nkgatanbgfyu8g5o8pxrd9r8q1i\", \"ov5ka4wnmlm1ahka21svnybu\", \"zmh5rdutvw37yu4yuvzvps5rohcq7co9vnct4ckve4394tmroqz7apgf01a5jvixox8a2xx3vcrhiocjp9sjl0h8kycwh6jmeehlnpuprbhwtes2ekfqt6wscgbjisyw2d4xjgwpd1htd0oox4qcf24k4r9b1fweex0z0d9u1ins5dp0wz02jtvctyx\" ],\n        \"ipAllocationPolicy\" : {\n          \"clusterIpv4CidrBlock\" : \"djqobrygh0yom79euxptu244ociuqz3ga5hegvdaoa3ra8zugg2yrxm5fv3kho0guh\",\n          \"useIpAliases\" : false,\n          \"servicesIpv4CidrBlock\" : \"a8stvz5n7gml11298jn7rt4ul16njy23h6idyunm0hotwic3mlmsa5uobnw4dkm5el7q2sf79kqj9qg85qn7ot1df4zo7fnabx3oi49m153391bzwvs89269xfl81v9cy3ijdir9h5lo6zw5ofhlpiblsisgr4beoz4ak6veoc3nyoo5kjcs4qvophlvta\",\n          \"clusterSecondaryRangeName\" : \"Jeff Davis\",\n          \"servicesSecondaryRangeName\" : \"Hollie Armstrong\"\n        },\n        \"machineType\" : \"6lq8ott9zkrjjhc84s1b7u6gd4iiuqmjufdg00a0o\",\n        \"maxPodsPerNode\" : 38781136,\n        \"diskSizeGb\" : 145154295,\n        \"network\" : \"05rrbfs7glmxpi0tn6inekqiqgphfi01zn8z1d5uir8dfuh7dz005xdpgzdvo9ohufpga30t93snuwk6dv9oqdnmxeia3un5n9ego5fd0r2gielzavdkdiwhob9q0yb44d4l9fbpv5dcvxwu4juot\",\n        \"tags\" : [ \"wzqvg193by3ykpfwfxj1txac12qn1qdkdq1h1rt42tcxmg94t4wel0rou79szcy9pdxyhnmve5z9t21z9spl37x5ijd40gicdwvcqf42ru82hwbnqvk37oqi0zhoxlcpdbhnrtxgc8glzqse9warq4mdqld3xxagsr\", \"stay5i9llikxygu3gbjjs1y61muw3mfxd40yyi7pg0qwu05wlkhnegcoerinv54s30b6anlp11916i5ys4xt5lup35d64cr3odib1yevjv1rerpnx7wth6ywzqot7g4au2mcfmyxq87ntf0ltsiv9r3e6bmjccjw4t2dj4ggyji4gt7g29d0a3oro4nru\", \"rnldn62we5whizg061iyf4zndazoygig3kc0uyf7v82f2o86nyt12u9vaiv754a35z0di73kga2scok\", \"wnmry9z1736wpxlxicrm01xhh4qw65x5yuuqz1sylyqa2wfyvsl09ybfo4rtdzoza5rjl91hmcpv1x4qo1fllp098aus17fn56frswff2f4wyxbj1fufn5wcuee8ghuhmuior6uoxmek96j7evlmkf0foh75365o9ha879mbwkvfpwyjwndg0768ghqzdlg6m0mjre\", \"3vbqfz8rtjrtviz3ya60g0pm6fcbdq02p015s2dc0oylw0sbe01mff6wkg1e0athvwropdycictk24degi3es\", \"mzzqlflknpzr47vnoup9oys0j4rvmf7pc4ys51bbi1qjoai0yd0lbvfldete5qxozmhg5a4jsu6avz1vkiht1reuo\", \"d0krtt457e9ks6pply95blgtbsiunwwyzqrfw35hhl30dnzs80rkcjbvvniqkqnrklp6outa9p10raosfcpu3h7b45i4hfh4is9iknvujz9xbjxq1770pxqdqjnx4lrruszt48toxy47v60sb5lx10cyo9xpmesuv\" ]\n      },\n      \"webServerNetworkAccessControl\" : {\n        \"allowedIpRanges\" : [ { }, { }, { } ]\n      },\n      \"maintenanceWindow\" : {\n        \"recurrence\" : \"hj0mtp9fvxzb42iuqne54wta2z7ky24hkkxb8zlz5u35apssi23te6e8mlcngq0hwnpy5i84ve3ig54t8q6pky0pes8cfnkw3x7cxp6qz9zvhf4brqxu65wqzgdefvdivpd0fxotmrrb5qd4q2abhn1\",\n        \"startTime\" : \"2022-11-17T14:54:51.213347Z\",\n        \"endTime\" : \"2023-02-14T15:10:51.213382Z\"\n      },\n      \"airflowUri\" : \"https://web.example.mocklab.io/937322\",\n      \"dagGcsPrefix\" : \"t8q7xs597m1f37hqyt1uq1h8uh35o6xtw9c5g6jx2psx7jgfsqebi6h7pfhhm24nbglm7auzu4u4gm3jt42sat213sjw8r7tzirtcvknv7mjvyh9wrmjk8mrslekyg40aueo9dbkmds98gaxa6yy1\",\n      \"privateEnvironmentConfig\" : {\n        \"enablePrivatelyUsedPublicIps\" : false,\n        \"cloudComposerConnectionSubnetwork\" : \"d7aty2z7o4fnswjupw3tbywb73uwd85cjyu1v\",\n        \"enablePrivateEnvironment\" : false,\n        \"cloudComposerNetworkIpv4ReservedRange\" : \"yoardi86e8b3ir34zp1jxj67p0sskjlt9vny8vgokmuqsderj6b2uaai2numj031bb4gswpdi8p4ddpy4xzteb7v61zmeoa48mnmmyhio7hzsqyimi0muivlci3hus2yoae\",\n        \"cloudComposerNetworkIpv4CidrBlock\" : \"3lalgqridhhha1jpc01l4jufbyleqwhpf69r88pr74nc78b3bsaut1hpz9u4u2r7aewnr9pmdjle465zc18eqvjntlajvejniknwjhv0oa8zjpnn6upasqulu3tj6k184luo6\",\n        \"webServerIpv4ReservedRange\" : \"a01kykuu84dk2ok3h3vtedlhsl3mej1yebaby49nkadpsbf868r3thwa4f9152gq0v8lqe81ld7qh6n3dcwe0u6qskvhhnn663ia5jpshh234txtoi8dv86x8k8a1t66ac5xozu42vy764l8huux1bhr8dkqxt0uv9cn2ag1afn6mzjeu9im7nnpcsnv6w\",\n        \"networkingConfig\" : {\n          \"connectionType\" : \"PRIVATE_SERVICE_CONNECT\"\n        },\n        \"cloudSqlIpv4CidrBlock\" : \"2nh7n9lf2kk33jjdcbemgvyer08bo4xmzhbfqki3att312sx335kc5ui8rttsmjqlcauedssla5w4oxae67r11hp5tqm7od65kwhzm1tfal2kzo9w7p3loj97i4elpupakzwfs8ijj7pmk8xe7zi7uzoqkfkjran5p57s76wth04szambe1mngheicv5\",\n        \"privateClusterConfig\" : {\n          \"enablePrivateEndpoint\" : true,\n          \"masterIpv4ReservedRange\" : \"58axp36etk6r5ju7ldduich2lbp2fn7sw7be1ip6eijmp7vnpjl5yxwk20fzh56ey5fob14bkpra78u0nmsnmcx9d4q0h11pkioq7ogsebhscxh8me8bzcgxzzh451yv2zq9kvzno\",\n          \"masterIpv4CidrBlock\" : \"8yg8z1lnr46b29lvh09j9478mgssaorwn5z4yza1x6p9yp9zisvpg000e5cr6b3wueuhi1svkb79u1f8o356990icifr0q0c8piwprjamixxbjvnj24s0lj6\"\n        },\n        \"webServerIpv4CidrBlock\" : \"gv1ee46qn9qteyehdb78ui6kkf9k18wzdoff9yt57eu42oe86ipuwyne5w54tqejjet4twgnhlq5nk7n65oiuwe0xbbrd44tmi359bg4007f31e1on1xz0go0bsh9hp99ske7mozx1pio79n9h4hf73oc\"\n      },\n      \"workloadsConfig\" : {\n        \"scheduler\" : {\n          \"count\" : 1973688779,\n          \"cpu\" : 2.9830621136094705E38,\n          \"memoryGb\" : 2.859890735728071E38,\n          \"storageGb\" : 2.5626909991064407E37\n        },\n        \"triggerer\" : {\n          \"count\" : 1137372061,\n          \"cpu\" : 7.395310617258908E37,\n          \"memoryGb\" : 1.5554567391472998E38\n        },\n        \"webServer\" : {\n          \"cpu\" : 2.4484831401369286E38,\n          \"memoryGb\" : 4.633283433005978E37,\n          \"storageGb\" : 2.8803053414878022E38\n        },\n        \"worker\" : {\n          \"cpu\" : 3.3228150174159574E38,\n          \"minCount\" : 1592426937,\n          \"memoryGb\" : 1.4296329362280907E38,\n          \"maxCount\" : 1619494727,\n          \"storageGb\" : 4.728279345580998E37\n        }\n      },\n      \"nodeCount\" : 1635049082,\n      \"environmentSize\" : \"ENVIRONMENT_SIZE_UNSPECIFIED\",\n      \"recoveryConfig\" : {\n        \"scheduledSnapshotsConfig\" : {\n          \"timeZone\" : \"2022-09-30T15:34:51.213812Z\",\n          \"snapshotLocation\" : \"7e4qd9lv58rj8e3suka670zetkqrf04sjs3pm4y88pr47x9awosm9vnluh1tb9tao2l00nvqhg5n0xuc5m2e1jkm830i39weaqwdg2xjnxb50i3f8okh9yiwgt5lbvklsndkwc6goljhl7wbj66wo1gl1f6jf1u70618neu9aez\",\n          \"enabled\" : true,\n          \"snapshotCreationSchedule\" : \"huuydkpe6bfg8jcwwzxa2jadyzd0cj67d6w3ju1b56i2hi2z7smozkl0mnegy9bzw9wbw2d087lp6hy2016fh1c8eobem57u35aqzxrs9c3nqncx\"\n        }\n      }\n    },\n    \"uuid\" : \"a15c6772-404c-3732-8eb2-187045f8ac1c\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"ipd4yuvevqltgibs7yl77u9ceyphvs27b8sxzw53xeewww2f3uyzbmabspw2tir6090cizms\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b0d174a-a9b3-31db-8b47-1b84a9bfb125",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.list",
          "schema" : {
            "description" : "The environments in a project and location.",
            "properties" : {
              "environments" : {
                "description" : "The list of environments returned by a ListEnvironmentsRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/Environment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The page token used to query for the next page if one exists.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7c66b8b6-59bd-37c1-9ec1-adb776aa8437",
    "name" : "Restart Airflow web server.",
    "request" : {
      "urlPath" : "/v1beta1/Stefania+O%27Connell:restartWebServer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Everett Wunsch DDS\",\n  \"error\" : {\n    \"code\" : 2051389536,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Sequi officiis vel pariatur ut. Ut temporibus numquam porro rerum deleniti libero sed. Aut hic aliquam ut culpa commodi expedita praesentium.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c66b8b6-59bd-37c1-9ec1-adb776aa8437",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.restartWebServer",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d3120b33-05ae-3a19-b4fb-0c39dbf30b82",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Brittaney+Keebler/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bunny Zieme\",\n    \"error\" : {\n      \"code\" : 1422990455,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Ipsum eum doloribus. Voluptate earum maxime qui. Illo eaque reprehenderit rerum harum. Vel sunt porro voluptate magnam. Dolores commodi itaque voluptatem excepturi eius.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Hermelinda Willms\",\n    \"error\" : {\n      \"code\" : 290143431,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ad repudiandae asperiores expedita. Numquam aperiam deserunt. Aut enim architecto magni molestias.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Royce Hyatt\",\n    \"error\" : {\n      \"code\" : 1037345760,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Non et voluptatem quis nulla. Perferendis est ducimus qui blanditiis ratione iste. Perspiciatis exercitationem officiis voluptatem recusandae. Odio enim rerum facilis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Belle Rau\",\n    \"error\" : {\n      \"code\" : 1402551762,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Eius debitis reprehenderit laudantium molestiae non qui quod. Praesentium ipsam laborum saepe et. Accusamus quo corrupti veritatis inventore fugiat.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"pxozs49vw2pp97c2nzgaihi6ge6dmyq75ywac4r52g3m58t3qon8t82tyz58i0tzs42w381hc0yb6puiyc2kq5frqv9p9167a2jijyiev6wwojcw4amstrl5p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3120b33-05ae-3a19-b4fb-0c39dbf30b82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "062aec8a-f5dd-37c2-98af-a1580ca34fce",
    "name" : "Update an environment.",
    "request" : {
      "urlPath" : "/v1beta1/Edgardo+Collier+PhD",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Brandy Gusikowski\",\n  \"error\" : {\n    \"code\" : 1388615490,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Vel quis et commodi. Aut velit est. Facilis et vel possimus et enim. Et accusamus pariatur fuga unde modi.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "062aec8a-f5dd-37c2-98af-a1580ca34fce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "bc8d2eae-d9f2-3f70-aecb-a62c5834f480",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Kelly+Bailey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Adalberto Roob Sr.\",\n  \"error\" : {\n    \"code\" : 379293440,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Eveniet reiciendis odio voluptatum facere iure. Libero omnis est. Tenetur reprehenderit necessitatibus itaque sit voluptatibus voluptas accusamus. Aut voluptatem consequatur beatae. Ipsam autem volupt\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc8d2eae-d9f2-3f70-aecb-a62c5834f480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8aab73d5-2e9e-38eb-9f56-6b10a2fdc302",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Elias+Langworth+III",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8aab73d5-2e9e-38eb-9f56-6b10a2fdc302",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "ab194a16-30b3-3592-bf52-729e46791918",
    "name" : "Creates a snapshots of a Cloud Composer environment. As a result of this operati...",
    "request" : {
      "urlPath" : "/v1beta1/xusbcljfotar7k4dyxd49s5menjwgrzbs6i47xs34a8bxl0yd5fclu8yjueuo1qyt2ajx7fvf41f8dvf9m6o5lwd5:saveSnapshot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Alishia Farrell\",\n  \"error\" : {\n    \"code\" : 137923532,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolor necessitatibus facere mollitia voluptatem occaecati. Sit qui magnam qui dolorem. Minima eum eaque aliquam saepe impedit.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab194a16-30b3-3592-bf52-729e46791918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.saveSnapshot",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "c303e361-8272-339c-adef-519bfc27815d",
    "name" : "Loads a snapshot of a Cloud Composer environment. As a result of this operation,...",
    "request" : {
      "urlPath" : "/v1beta1/j1kp9g9hdjp1cdg3wx3ow3o4d9e8ida6fmmx0i608mts7hlmpo7kyj1wbx6rx2ajmf7s9sw2np1skuc2nknog5aacps82bq7cbkz0ettipe81g6j3yhit17mi74o3orihs014pf7aivc4:loadSnapshot",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Petra Weimann\",\n  \"error\" : {\n    \"code\" : 433442198,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Voluptatem recusandae a. Quam natus occaecati libero et cum. Quos minus minus reiciendis fugiat error. Saepe aut necessitatibus et placeat.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c303e361-8272-339c-adef-519bfc27815d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.loadSnapshot",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "f73c7872-31ff-3ead-84aa-6fb677b5c13b",
    "name" : "Check if an upgrade operation on the environment will succeed. In case of proble...",
    "request" : {
      "urlPath" : "/v1beta1/3ukxkb77t4giweaox3f8apoysgoar78e4ersr3jdpq7cc8yffcb0m64zae8klcvtgikj61mi6:checkUpgrade",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lloyd Ratke\",\n  \"error\" : {\n    \"code\" : 2106351088,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Magnam suscipit sapiente atque. Eos architecto reprehenderit aperiam id. Ut id exercitationem. Doloremque ut laudantium natus. Inventore molestiae minima nisi.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f73c7872-31ff-3ead-84aa-6fb677b5c13b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "composer.projects.locations.environments.checkUpgrade",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  } ]
}