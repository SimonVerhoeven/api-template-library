{
  "mappings" : [ {
    "id" : "df88e04b-d8a0-427e-b256-7f6078253381",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df88e04b-d8a0-427e-b256-7f6078253381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "de1f9bda-a2c2-4a8e-9e69-de5b75a5d7ab",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de1f9bda-a2c2-4a8e-9e69-de5b75a5d7ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "72aac5d9-001d-4086-92f5-01189aa29743",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72aac5d9-001d-4086-92f5-01189aa29743",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154302Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "c8cee64e-30aa-4d8f-b107-5f47b10d24e5",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8cee64e-30aa-4d8f-b107-5f47b10d24e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "9ce19ea9-8351-402a-923c-dcc8b80f0bfd",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ce19ea9-8351-402a-923c-dcc8b80f0bfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154176Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "961d039e-527b-46fa-925d-94de8b1bb2f2",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "961d039e-527b-46fa-925d-94de8b1bb2f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "00e4fa82-b0c5-467f-b2b4-cc5fc3fd59f8",
    "name" : "Income Certificate (application/json)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"invalid_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00e4fa82-b0c5-467f-b2b4-cc5fc3fd59f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.154049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "cd8a0869-ec74-4df7-bf63-eed5ed8071f9",
    "name" : "Income Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/incer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "cd8a0869-ec74-4df7-bf63-eed5ed8071f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "incer"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "1c131df4-511c-4fba-878e-bde32e96093d",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c131df4-511c-4fba-878e-bde32e96093d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "c6b30104-fcc5-4cfb-a8a9-df64fddfd749",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6b30104-fcc5-4cfb-a8a9-df64fddfd749",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "8f86454b-681f-4f99-87fa-f28158d5556d",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f86454b-681f-4f99-87fa-f28158d5556d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "a63be3be-22ef-496d-adb5-3d58cd4000cc",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a63be3be-22ef-496d-adb5-3d58cd4000cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153757Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "30a53ea7-259a-4648-800f-f981551e7c4c",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30a53ea7-259a-4648-800f-f981551e7c4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "67c3606a-a9db-493c-92c8-753a0f94f91b",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67c3606a-a9db-493c-92c8-753a0f94f91b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.15362Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "7d78e488-4381-4d8e-aef0-748be3bb3575",
    "name" : "Death Certificate (application/json)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d78e488-4381-4d8e-aef0-748be3bb3575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "1060afac-9acd-4349-8b96-4af61a130829",
    "name" : "Death Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dtcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "1060afac-9acd-4349-8b96-4af61a130829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dtcer"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "dcf7c40c-69bb-4ddc-bf97-5c48c28db3a1",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcf7c40c-69bb-4ddc-bf97-5c48c28db3a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "fc58433d-3e98-41a6-abcf-8fd88997bceb",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc58433d-3e98-41a6-abcf-8fd88997bceb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "6a85a141-7bbb-4f88-860f-465eca2be20f",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a85a141-7bbb-4f88-860f-465eca2be20f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.15332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "dbdcd50d-6f3c-46ac-8c5b-d7fb4ae24fd4",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbdcd50d-6f3c-46ac-8c5b-d7fb4ae24fd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "240affde-c4d6-489d-b2a2-0ee30aedc2cb",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "240affde-c4d6-489d-b2a2-0ee30aedc2cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "8dca7a19-171d-40f5-82ee-3c9a74c06b37",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dca7a19-171d-40f5-82ee-3c9a74c06b37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153109Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "6f2c9ae8-b813-4b94-922b-5187f6e47833",
    "name" : "Disabled Person Identity Card/ Certificate (application/json)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The txnId parameter must be in UUID format\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f2c9ae8-b813-4b94-922b-5187f6e47833",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.153023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "9122b801-d067-445f-843d-265033251652",
    "name" : "Disabled Person Identity Card/ Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dpicr/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "9122b801-d067-445f-843d-265033251652",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dpicr"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "d2418233-47b8-4e3c-b9c1-37fe1694be05",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2418233-47b8-4e3c-b9c1-37fe1694be05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "b6c2c400-2669-4594-b537-8c2807264429",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6c2c400-2669-4594-b537-8c2807264429",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152844Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "9d4173c5-a46b-4271-8ed4-f1b495812b7b",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d4173c5-a46b-4271-8ed4-f1b495812b7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.15276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "2477f383-dd42-4917-8425-b57216e9ab0e",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2477f383-dd42-4917-8425-b57216e9ab0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "a6c69500-af70-4df0-9151-90a922cfac76",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6c69500-af70-4df0-9151-90a922cfac76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "1bc21602-9e0d-4d09-8968-5f82bf35d1a1",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bc21602-9e0d-4d09-8968-5f82bf35d1a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "2a55e9c2-2b27-44fa-a862-dfdee178fd09",
    "name" : "Domicile Certificate (application/json)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a55e9c2-2b27-44fa-a862-dfdee178fd09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "af612390-f562-4b37-980d-5d3bb38b487a",
    "name" : "Domicile Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/dmcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "af612390-f562-4b37-980d-5d3bb38b487a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "dmcer"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "fa7c10da-e1a8-406d-a7bb-4aa4040acc67",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa7c10da-e1a8-406d-a7bb-4aa4040acc67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "5e51c96b-4dfc-498c-ae51-38f54b9789f6",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e51c96b-4dfc-498c-ae51-38f54b9789f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "69f39f9d-b3ad-487f-aebe-619b8ea06d92",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69f39f9d-b3ad-487f-aebe-619b8ea06d92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "90866db8-fe90-4045-ae2e-3ae2e8cdc7bc",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90866db8-fe90-4045-ae2e-3ae2e8cdc7bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "9d8d1494-2e69-4e4a-9f4f-8eb44a996c34",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d8d1494-2e69-4e4a-9f4f-8eb44a996c34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.152002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "5da38568-9072-44f6-bd7e-faf0b8546079",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5da38568-9072-44f6-bd7e-faf0b8546079",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "7e89ea1b-004a-4f0e-ad1f-4e719ead64db",
    "name" : "Caste Certificate (application/json)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e89ea1b-004a-4f0e-ad1f-4e719ead64db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151866Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "35f73b1c-d80c-42ae-80fa-7534fcbbc015",
    "name" : "Caste Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/ctcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "35f73b1c-d80c-42ae-80fa-7534fcbbc015",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ctcer"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "ec2d3e81-c9be-4316-8125-32411283b59b",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec2d3e81-c9be-4316-8125-32411283b59b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151737Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "ffd1b734-92fb-475d-a612-19160094855a",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffd1b734-92fb-475d-a612-19160094855a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "05f7ae25-da0c-49c0-ac20-2e6f3f706758",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05f7ae25-da0c-49c0-ac20-2e6f3f706758",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "95128d8e-b277-42a9-9924-c89d6b492f79",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95128d8e-b277-42a9-9924-c89d6b492f79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "8495609e-db79-4657-99cd-0b76dc553260",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8495609e-db79-4657-99cd-0b76dc553260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.15143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "10530641-9f3a-40de-b032-8858c97ffc08",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10530641-9f3a-40de-b032-8858c97ffc08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "9c34d994-f2f8-45d7-a83b-3e08e09ad92f",
    "name" : "Birth Certificate (application/json)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c34d994-f2f8-45d7-a83b-3e08e09ad92f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "5ef294b1-76e5-4d49-86b8-b1bc3b5a23f5",
    "name" : "Birth Certificate (application/xml)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"number\" : 1100044,\n  \"CertificateData\" : {\n    \"School\" : {\n      \"code\" : 20020,\n      \"name\" : \"DELHI PUBLIC SCHOOL GURGAON\"\n    },\n    \"Performance\" : {\n      \"marksMax\" : \"\",\n      \"result\" : \"PASS\",\n      \"updateDate\" : \"\",\n      \"grade\" : \"\",\n      \"percentage\" : \"\",\n      \"resultDate\" : \"02-05-2019\",\n      \"cgpa\" : \"\",\n      \"marksTotal\" : \"\",\n      \"cgpaMax\" : \"\",\n      \"Subjects\" : [ {\n        \"marksMax\" : \"\",\n        \"marksPractical\" : 17,\n        \"code\" : 30,\n        \"gpMax\" : \"\",\n        \"marksMaxTheory\" : \"\",\n        \"grade\" : \"A2\",\n        \"name\" : \"ECONOMICS\",\n        \"gp\" : \"\",\n        \"marksTotal\" : 87,\n        \"marksTheory\" : 70,\n        \"marksMaxPractical\" : \"\"\n      }, {\n        \"marksMax\" : \"\",\n        \"marksPractical\" : 17,\n        \"code\" : 30,\n        \"gpMax\" : \"\",\n        \"marksMaxTheory\" : \"\",\n        \"grade\" : \"A2\",\n        \"name\" : \"ECONOMICS\",\n        \"gp\" : \"\",\n        \"marksTotal\" : 87,\n        \"marksTheory\" : 70,\n        \"marksMaxPractical\" : \"\"\n      }, {\n        \"marksMax\" : \"\",\n        \"marksPractical\" : 17,\n        \"code\" : 30,\n        \"gpMax\" : \"\",\n        \"marksMaxTheory\" : \"\",\n        \"grade\" : \"A2\",\n        \"name\" : \"ECONOMICS\",\n        \"gp\" : \"\",\n        \"marksTotal\" : 87,\n        \"marksTheory\" : 70,\n        \"marksMaxPractical\" : \"\"\n      }, {\n        \"marksMax\" : \"\",\n        \"marksPractical\" : 17,\n        \"code\" : 30,\n        \"gpMax\" : \"\",\n        \"marksMaxTheory\" : \"\",\n        \"grade\" : \"A2\",\n        \"name\" : \"ECONOMICS\",\n        \"gp\" : \"\",\n        \"marksTotal\" : 87,\n        \"marksTheory\" : 70,\n        \"marksMaxPractical\" : \"\"\n      } ]\n    },\n    \"Examination\" : {\n      \"month\" : \"MARCH\",\n      \"year\" : 2019,\n      \"name\" : \"SENION SCHOOL CERTIFICATE EXAMINATION\"\n    }\n  },\n  \"name\" : \"Secondary School Certificate\",\n  \"IssuedTo\" : {\n    \"Person\" : {\n      \"swd\" : \"PRAMOD KUMAR\",\n      \"swdIndicator\" : \"S\",\n      \"Address\" : {\n        \"country\" : \"IN\",\n        \"pin\" : \"\",\n        \"vtc\" : \"\",\n        \"district\" : \"\",\n        \"locality\" : \"\",\n        \"state\" : \"\",\n        \"landmark\" : \"l7vux4mtjb2gzo3sfiiehrpqtusr\",\n        \"type\" : \"permanent\",\n        \"house\" : \"\",\n        \"line2\" : \"\",\n        \"line1\" : \"\"\n      },\n      \"gender\" : \"\",\n      \"disabilityStatus\" : \"\",\n      \"motherName\" : \"SUNITA DEVI\",\n      \"Photo\" : {\n        \"format\" : \"rmh743awfr\"\n      },\n      \"title\" : \"\",\n      \"religion\" : \"\",\n      \"uid\" : \"\",\n      \"phone\" : \"\",\n      \"dob\" : \"01-10-1988\",\n      \"name\" : \"ANAND KUMAR\",\n      \"category\" : \"SC\",\n      \"email\" : \"\",\n      \"maritalStatus\" : \"\"\n    }\n  },\n  \"validFromDate\" : \" \",\n  \"language\" : 99,\n  \"issuedAt\" : \"\",\n  \"issueDate\" : \" \",\n  \"type\" : \"SSCER\",\n  \"IssuedBy\" : {\n    \"Organization\" : {\n      \"uid\" : \"\",\n      \"code\" : \"\",\n      \"Address\" : {\n        \"country\" : \"IN\",\n        \"pin\" : \"\",\n        \"vtc\" : \"\",\n        \"district\" : \"\",\n        \"locality\" : \"\",\n        \"state\" : \"\",\n        \"landmark\" : \"\",\n        \"type\" : \"\",\n        \"house\" : \"\",\n        \"line2\" : \"\",\n        \"line1\" : \"\"\n      },\n      \"name\" : \"Central Board of Secondary Education\",\n      \"tin\" : \"\",\n      \"type\" : \"CG\"\n    }\n  },\n  \"status\" : \"A\"\n}",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "5ef294b1-76e5-4d49-86b8-b1bc3b5a23f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.151078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer",
          "schema" : {
            "properties" : {
              "CertificateData" : {
                "properties" : {
                  "Examination" : {
                    "properties" : {
                      "month" : {
                        "example" : "MARCH",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "name" : {
                        "example" : "SENION SCHOOL CERTIFICATE EXAMINATION",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "year" : {
                        "example" : 2019,
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      }
                    },
                    "required" : [ "name", "month", "year" ],
                    "type" : "object"
                  },
                  "Performance" : {
                    "properties" : {
                      "Subjects" : {
                        "items" : {
                          "properties" : {
                            "code" : {
                              "example" : 30,
                              "minLength" : 1,
                              "type" : "string",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "gp" : {
                              "example" : "",
                              "type" : "string",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "gpMax" : {
                              "example" : "",
                              "type" : "string",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "grade" : {
                              "example" : "A2",
                              "minLength" : 1,
                              "type" : "string",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "marksMax" : {
                              "example" : "",
                              "type" : "integer",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "marksMaxPractical" : {
                              "example" : "",
                              "type" : "integer",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "marksMaxTheory" : {
                              "example" : "",
                              "type" : "integer",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "marksPractical" : {
                              "example" : 17,
                              "type" : "integer",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "marksTheory" : {
                              "example" : 70,
                              "minLength" : 1,
                              "type" : "integer",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "marksTotal" : {
                              "example" : 87,
                              "minLength" : 1,
                              "type" : "integer",
                              "xml" : {
                                "attribute" : true
                              }
                            },
                            "name" : {
                              "example" : "ECONOMICS",
                              "minLength" : 1,
                              "type" : "string",
                              "xml" : {
                                "attribute" : true
                              }
                            }
                          },
                          "required" : [ "name", "code", "marksTheory", "marksMaxTheory", "marksPractical", "marksMaxPractical", "marksTotal", "marksMax", "gp", "gpMax", "grade" ],
                          "type" : "object",
                          "xml" : {
                            "name" : "Subject"
                          }
                        },
                        "type" : "array",
                        "xml" : {
                          "name" : "Subjects",
                          "wrapped" : true
                        }
                      },
                      "cgpa" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "cgpaMax" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "grade" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "marksMax" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "marksTotal" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "percentage" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "result" : {
                        "example" : "PASS",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "resultDate" : {
                        "example" : "02-05-2019",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "updateDate" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      }
                    },
                    "required" : [ "result", "marksTotal", "marksMax", "percentage", "cgpa", "cgpaMax", "grade", "resultDate", "updateDate", "Subjects" ],
                    "type" : "object"
                  },
                  "School" : {
                    "properties" : {
                      "code" : {
                        "example" : 20020,
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "name" : {
                        "example" : "DELHI PUBLIC SCHOOL GURGAON",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      }
                    },
                    "required" : [ "name", "code" ],
                    "type" : "object"
                  }
                },
                "required" : [ "School", "Examination", "Performance" ],
                "type" : "object"
              },
              "IssuedBy" : {
                "properties" : {
                  "Organization" : {
                    "properties" : {
                      "Address" : {
                        "properties" : {
                          "country" : {
                            "example" : "IN",
                            "minLength" : 1,
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "district" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "house" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "landmark" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "line1" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "line2" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "locality" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "pin" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "state" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "type" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "vtc" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          }
                        },
                        "required" : [ "type", "line1", "line2", "house", "landmark", "locality", "vtc", "district", "pin", "state", "country" ],
                        "type" : "object"
                      },
                      "code" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "name" : {
                        "example" : "Central Board of Secondary Education",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "tin" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "type" : {
                        "example" : "CG",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "uid" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      }
                    },
                    "required" : [ "name", "code", "tin", "uid", "type", "Address" ],
                    "type" : "object"
                  }
                },
                "required" : [ "Organization" ],
                "type" : "object"
              },
              "IssuedTo" : {
                "properties" : {
                  "Person" : {
                    "properties" : {
                      "Address" : {
                        "properties" : {
                          "country" : {
                            "example" : "IN",
                            "minLength" : 1,
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "district" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "house" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "landmark" : {
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "line1" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "line2" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "locality" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "pin" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "state" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          },
                          "type" : {
                            "example" : "permanent",
                            "minLength" : 1,
                            "type" : "string"
                          },
                          "vtc" : {
                            "example" : "",
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          }
                        },
                        "required" : [ "type", "line1", "line2", "house", "landmark", "locality", "vtc", "district", "pin", "state", "country" ],
                        "type" : "object"
                      },
                      "Photo" : {
                        "properties" : {
                          "format" : {
                            "type" : "string",
                            "xml" : {
                              "attribute" : true
                            }
                          }
                        },
                        "required" : [ "format" ],
                        "type" : "object"
                      },
                      "category" : {
                        "example" : "SC",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "disabilityStatus" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "dob" : {
                        "example" : "01-10-1988",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "email" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "gender" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "maritalStatus" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "motherName" : {
                        "example" : "SUNITA DEVI",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "name" : {
                        "example" : "ANAND KUMAR",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "phone" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "religion" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "swd" : {
                        "example" : "PRAMOD KUMAR",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "swdIndicator" : {
                        "example" : "S",
                        "minLength" : 1,
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "title" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      },
                      "uid" : {
                        "example" : "",
                        "type" : "string",
                        "xml" : {
                          "attribute" : true
                        }
                      }
                    },
                    "required" : [ "uid", "title", "name", "dob", "swd", "swdIndicator", "motherName", "gender", "maritalStatus", "disabilityStatus", "category", "religion", "phone", "email", "Address", "Photo" ],
                    "type" : "object"
                  }
                },
                "required" : [ "Person" ],
                "type" : "object"
              },
              "issueDate" : {
                "example" : " ",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "issuedAt" : {
                "example" : "",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "language" : {
                "example" : 99,
                "minLength" : 1,
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "name" : {
                "example" : "Secondary School Certificate",
                "minLength" : 1,
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "number" : {
                "example" : 1100044,
                "minLength" : 1,
                "type" : "integer",
                "xml" : {
                  "attribute" : true
                }
              },
              "status" : {
                "example" : "A",
                "minLength" : 1,
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "type" : {
                "example" : "SSCER",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              },
              "validFromDate" : {
                "example" : " ",
                "type" : "string",
                "xml" : {
                  "attribute" : true
                }
              }
            },
            "required" : [ "language", "name", "type", "number", "issuedAt", "issueDate", "validFromDate", "status", "IssuedBy", "IssuedTo", "CertificateData" ],
            "type" : "object",
            "xml" : {
              "name" : "Certificate"
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "6508d539-10c1-4d0a-8465-7338e133b16d",
    "name" : "Birth Certificate (application/pdf)",
    "request" : {
      "urlPath" : "/btcer/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "6508d539-10c1-4d0a-8465-7338e133b16d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:25.149535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "btcer"
        }
      }
    },
    "insertionIndex" : 48
  } ]
}