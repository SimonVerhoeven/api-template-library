{
  "mappings" : [ {
    "id" : "e4107b50-3e8f-4110-919f-ccf927a7e73e",
    "name" : "List price tables",
    "request" : {
      "urlPath" : "/pricing/tables",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"1\", \"2\", \"3\", \"b2c\", \"b2b\", \"gold\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4107b50-3e8f-4110-919f-ccf927a7e73e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.240025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Listpricetables",
          "schema" : {
            "description" : "Array of price tables.",
            "items" : {
              "description" : "Price table name.",
              "type" : "string"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "96fc9768-e54a-4043-b5b1-ec9f46917b8c",
    "name" : "Create or Update Fixed Prices on a price table or trade policy - 200",
    "request" : {
      "urlPath" : "/pricing/prices/5704924692834744674/fixed/434x",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "96fc9768-e54a-4043-b5b1-ec9f46917b8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createorupdatefixedpricesonpricetableortradepolicy"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "0beaa1e0-6de4-41b9-91cd-af3b26ec96f0",
    "name" : "Get Fixed Prices on a price table or trade policy",
    "request" : {
      "urlPath" : "/pricing/prices/4991819655305662767/fixed/7hh1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"dateRange\" : {\n    \"from\" : \"2021-12-30T22:00:00-03:00\",\n    \"to\" : \"2021-12-30T22:00:00-04:00\"\n  },\n  \"listPrice\" : 22.9,\n  \"minQuantity\" : 1,\n  \"tradePolicyId\" : \"6\",\n  \"value\" : 20.9\n}, {\n  \"minQuantity\" : 1,\n  \"tradePolicyId\" : \"1\",\n  \"value\" : 18.9\n} ]",
      "headers" : {
        "Content-Type" : "application/json; charset=utf-8"
      }
    },
    "uuid" : "0beaa1e0-6de4-41b9-91cd-af3b26ec96f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFixedPricesonapricetable",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/FixedPrice"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "445446b7-3a9b-4705-a2c1-b5811923d739",
    "name" : "Delete Fixed Prices on a price table or trade policy - 200",
    "request" : {
      "urlPath" : "/pricing/prices/7858520439899538231/fixed/7fn1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "445446b7-3a9b-4705-a2c1-b5811923d739",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Deletefixedpricesonapricetableortradepolicy"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "805a6e97-8cfb-490d-bac6-b880e98761c9",
    "name" : "Get Fixed Prices",
    "request" : {
      "urlPath" : "/pricing/prices/6294836175265381603/fixed",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"dateRange\" : {\n    \"from\" : \"2021-12-30T22:00:00-03:00\",\n    \"to\" : \"2021-12-30T22:00:00-03:00\"\n  },\n  \"listPrice\" : 22.9,\n  \"minQuantity\" : 1,\n  \"tradePolicyId\" : \"6\",\n  \"value\" : 20.9\n}, {\n  \"dateRange\" : {\n    \"from\" : \"2021-12-30T22:00:00-03:00\",\n    \"to\" : \"2021-12-30T22:00:00-03:00\"\n  },\n  \"minQuantity\" : 1,\n  \"tradePolicyId\" : \"1\",\n  \"value\" : 18.9\n} ]",
      "headers" : {
        "Content-Type" : "application/json; charset=utf-8"
      }
    },
    "uuid" : "805a6e97-8cfb-490d-bac6-b880e98761c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239648Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetFixedPrices",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/FixedPrice"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "05574d90-90d6-40a9-ad9e-cd6842a1f83d",
    "name" : "Get Computed Price by price table or trade policy",
    "request" : {
      "urlPath" : "/pricing/prices/2424316409306468118/computed/79ml",
      "method" : "GET",
      "queryParameters" : {
        "categoryIds" : {
          "equalTo" : "5479251633845920736"
        },
        "quantity" : {
          "equalTo" : "8184525588843376200"
        },
        "brandId" : {
          "equalTo" : "3100723602811957545"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"costPrice\" : 76.92,\n  \"listPrice\" : 30,\n  \"priceValidUntil\" : \"2018-12-20T18:12:14Z\",\n  \"sellingPrice\" : 18.9,\n  \"tradePolicyId\" : \"1\"\n}",
      "headers" : {
        "Content-Type" : "application/json; charset=utf-8"
      }
    },
    "uuid" : "05574d90-90d6-40a9-ad9e-cd6842a1f83d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetComputedPricebypricetable",
          "schema" : {
            "example" : {
              "costPrice" : 76.92,
              "listPrice" : 30,
              "priceValidUntil" : "2018-12-20T18:12:14Z",
              "sellingPrice" : 18.9,
              "tradePolicyId" : "1"
            },
            "properties" : {
              "costPrice" : {
                "description" : "Cost price.",
                "type" : "number"
              },
              "listPrice" : {
                "description" : "Trade Policy List Price, also known as \"from\" price.",
                "format" : "int32",
                "type" : "integer"
              },
              "priceValidUntil" : {
                "description" : "Date until when the computed price will be valid, due to price scheduling. If no price scheduling applies, this will be set a year from the current time.",
                "type" : "string"
              },
              "sellingPrice" : {
                "description" : "Computed Price before applying coupons, promotions and taxes. This price may change before reaching the shelf.",
                "type" : "number"
              },
              "tradePolicyId" : {
                "description" : "Trade Policy ID.",
                "type" : "string"
              }
            },
            "required" : [ "tradePolicyId", "listPrice", "sellingPrice", "priceValidUntil" ],
            "title" : "Get Computed Price response",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7843cc79-8448-4c7f-81bd-1d295e1b0cfa",
    "name" : "Create or Update Base Price or Fixed Prices - 200",
    "request" : {
      "urlPath" : "/pricing/prices/7538848823374273598",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7843cc79-8448-4c7f-81bd-1d295e1b0cfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateUpdatePriceOrFixedPrice"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8ffe26c1-844e-447c-9666-233f6065d8a6",
    "name" : "Get Price",
    "request" : {
      "urlPath" : "/pricing/prices/6428694282638181724",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"basePrice\" : 117,\n  \"costPrice\" : 90,\n  \"fixedPrices\" : [ {\n    \"dateRange\" : {\n      \"from\" : \"2021-12-31T01:00:00Z\",\n      \"to\" : \"2022-12-31T01:00:00Z\"\n    },\n    \"listPrice\" : 50.5,\n    \"minQuantity\" : 2,\n    \"tradePolicyId\" : \"1\",\n    \"value\" : 50.5\n  }, {\n    \"listPrice\" : 50,\n    \"minQuantity\" : 2,\n    \"tradePolicyId\" : \"2\",\n    \"value\" : 30\n  } ],\n  \"itemId\" : \"1\",\n  \"listPrice\" : 50,\n  \"markup\" : 30\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ffe26c1-844e-447c-9666-233f6065d8a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetPrice",
          "schema" : {
            "example" : {
              "basePrice" : 250,
              "costPrice" : 10,
              "fixedPrices" : [ {
                "minQuantity" : 1,
                "tradePolicyId" : "1",
                "value" : 666.66
              }, {
                "minQuantity" : 1,
                "tradePolicyId" : "9",
                "value" : 4500
              }, {
                "dateRange" : {
                  "from" : "2017-12-07T14:30:00Z",
                  "to" : "2017-12-30T14:30:00Z"
                },
                "minQuantity" : 1,
                "tradePolicyId" : "9",
                "value" : 600
              }, {
                "dateRange" : {
                  "from" : "2017-12-20T14:30:00Z",
                  "to" : "2017-12-22T14:30:00Z"
                },
                "minQuantity" : 1,
                "tradePolicyId" : "9",
                "value" : 5555.55
              }, {
                "dateRange" : {
                  "from" : "2017-12-06T15:00:00Z",
                  "to" : "2017-12-14T15:00:00Z"
                },
                "minQuantity" : 1,
                "tradePolicyId" : "9",
                "value" : 555.55
              }, {
                "minQuantity" : 1,
                "tradePolicyId" : "10",
                "value" : 5555.55
              }, {
                "minQuantity" : 1,
                "tradePolicyId" : "18",
                "value" : 555.55
              } ],
              "itemId" : "1234512354",
              "listPrice" : 300,
              "markup" : 2400
            },
            "properties" : {
              "basePrice" : {
                "description" : "SKU's reference price.",
                "format" : "int32",
                "type" : "integer"
              },
              "costPrice" : {
                "description" : "SKU's cost price.",
                "format" : "int32",
                "type" : "integer"
              },
              "fixedPrices" : {
                "description" : "The fixed price is a price that overlaps all other existing price configurations of a price table.",
                "items" : {
                  "$ref" : "#/components/schemas/FixedPrice"
                },
                "type" : "array"
              },
              "itemId" : {
                "description" : "SKU ID.",
                "type" : "string"
              },
              "listPrice" : {
                "description" : "Suggested retail price for the SKU.",
                "format" : "int32",
                "type" : "integer"
              },
              "markup" : {
                "description" : "Desired profit margin with the SKU's sale.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "required" : [ "itemId", "listPrice", "costPrice", "markup", "basePrice", "fixedPrices" ],
            "title" : "Get Price response",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "e2383996-b38a-4874-b953-0bfb9b0cc8d2",
    "name" : "Delete Price - 200",
    "request" : {
      "urlPath" : "/pricing/prices/3970561835418892570",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e2383996-b38a-4874-b953-0bfb9b0cc8d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeletePrice"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "9e8e5018-96b8-45bf-95c4-515ed2ed1ae0",
    "name" : "Update rules for a price table - 201",
    "request" : {
      "urlPath" : "/pricing/pipeline/catalog/c5id",
      "method" : "PUT"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "9e8e5018-96b8-45bf-95c4-515ed2ed1ae0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3bdf6ead-9f10-42e0-9b1d-e80e20a5b2d2",
    "name" : "Get rules for a price table - 429",
    "request" : {
      "urlPath" : "/pricing/pipeline/catalog/5oa0",
      "method" : "GET"
    },
    "response" : {
      "status" : 429
    },
    "uuid" : "3bdf6ead-9f10-42e0-9b1d-e80e20a5b2d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getrulesforapricetable"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "c38918d8-7deb-4eab-bcd4-aa114a828d03",
    "name" : "Get rules for a price table - 403",
    "request" : {
      "urlPath" : "/pricing/pipeline/catalog/b4dg",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "c38918d8-7deb-4eab-bcd4-aa114a828d03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.239014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getrulesforapricetable"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "8ea6ddd2-d0cb-434e-997f-05b2ec1b0323",
    "name" : "Get rules for a price table - 401",
    "request" : {
      "urlPath" : "/pricing/pipeline/catalog/fnld",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "8ea6ddd2-d0cb-434e-997f-05b2ec1b0323",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.238933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getrulesforapricetable"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "9934eb22-770d-49d4-ae29-d5bfa4141e24",
    "name" : "Get rules for a price table (application/json)",
    "request" : {
      "urlPath" : "/pricing/pipeline/catalog/g415",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"rules\" : [ {\n    \"context\" : {\n      \"brands\" : {\n        \"2000009\" : \"Whiskas\"\n      },\n      \"categories\" : { }\n    },\n    \"id\" : 0,\n    \"percentualModifier\" : 15\n  } ],\n  \"tradePolicyId\" : \"b2c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9934eb22-770d-49d4-ae29-d5bfa4141e24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.238836Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getrulesforapricetable",
          "schema" : {
            "properties" : {
              "percentualModifier" : {
                "description" : "Percentual modifier.",
                "type" : "integer"
              },
              "rules" : {
                "description" : "Array of rules for the price table.",
                "items" : {
                  "description" : "Object containing a price table rule.",
                  "properties" : {
                    "context" : {
                      "description" : "Rule Context is a group of filters to be checked at an item level when applying the rule. If all those filters check out, the rule will be applied for that item, unless there is a fixed price for that item.",
                      "properties" : {
                        "brands" : {
                          "additionalProperties" : {
                            "additionalProperties" : {
                              "description" : "Brand Name.",
                              "type" : "string"
                            },
                            "description" : "Brand ID.",
                            "type" : "string"
                          },
                          "description" : "Brands that an item should have to be eligible for the rule. Format: key: `brandId`, value: `brandName`.",
                          "type" : "object"
                        },
                        "categories" : {
                          "additionalProperties" : {
                            "additionalProperties" : {
                              "description" : "Category Name.",
                              "type" : "string"
                            },
                            "description" : "Category ID.",
                            "type" : "string"
                          },
                          "description" : "Categories that an item should have to be eligible for the rule. Format: key: `categoryId`, value: `categoryName`.",
                          "type" : "object"
                        },
                        "dateRange" : {
                          "description" : "The rule will be active during this time range.",
                          "nullable" : true,
                          "properties" : {
                            "from" : {
                              "description" : "Date when rule will be activated. Date format: `RFC3339`.",
                              "type" : "string"
                            },
                            "to" : {
                              "description" : "Date when the rule will be deactivated. Date format: `RFC3339`.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "internalCategories" : {
                          "description" : "Internal Categories.",
                          "nullable" : true,
                          "type" : "object"
                        },
                        "markupRange" : {
                          "description" : "For an item to be eligible to the rule, it's markup should be in this Markup Range.",
                          "nullable" : true,
                          "properties" : {
                            "from" : {
                              "description" : "Item markup should be greater than or equal to this value.",
                              "type" : "integer"
                            },
                            "to" : {
                              "description" : "Item markup should be less than or equal to this value.",
                              "type" : "integer"
                            }
                          },
                          "type" : "object"
                        },
                        "stockStatuses" : {
                          "description" : "Stock statuses.",
                          "nullable" : true,
                          "type" : "object"
                        }
                      },
                      "type" : "object"
                    },
                    "id" : {
                      "description" : "Rule ID.",
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "tradePolicyId" : {
                "description" : "Trade Policy ID (Price Table ID).",
                "type" : "string"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "a6941548-ce58-47b1-8d85-7a12ed32bd61",
    "name" : "Get all price tables and their rules",
    "request" : {
      "urlPath" : "/pricing/pipeline/catalog",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"rules\" : [ {\n    \"context\" : {\n      \"brands\" : { },\n      \"categories\" : { }\n    },\n    \"id\" : 0,\n    \"percentualModifier\" : 20\n  } ],\n  \"tradePolicyId\" : \"2\"\n}, {\n  \"rules\" : [ {\n    \"context\" : {\n      \"brands\" : {\n        \"2000009\" : \"Whiskas\"\n      },\n      \"categories\" : { }\n    },\n    \"id\" : 0,\n    \"percentualModifier\" : 15\n  } ],\n  \"tradePolicyId\" : \"b2c\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6941548-ce58-47b1-8d85-7a12ed32bd61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.238542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getallpricetablesandrules",
          "schema" : {
            "items" : {
              "properties" : {
                "percentualModifier" : {
                  "description" : "Percentual modifier.",
                  "type" : "integer"
                },
                "rules" : {
                  "description" : "Array of rules for the price table.",
                  "items" : {
                    "description" : "Object containing a price table rule.",
                    "properties" : {
                      "context" : {
                        "description" : "Rule Context is a group of filters to be checked at an item level when applying the rule. If all those filters check out, the rule will be applied for that item, unless there is a fixed price for that item.",
                        "properties" : {
                          "brands" : {
                            "additionalProperties" : {
                              "additionalProperties" : {
                                "description" : "Brand Name.",
                                "type" : "string"
                              },
                              "description" : "Brand ID.",
                              "type" : "string"
                            },
                            "description" : "Brands that an item should have to be eligible for the rule. Format: key: `brandId`, value: `brandName`.",
                            "type" : "object"
                          },
                          "categories" : {
                            "additionalProperties" : {
                              "additionalProperties" : {
                                "description" : "Category Name.",
                                "type" : "string"
                              },
                              "description" : "Category ID.",
                              "type" : "string"
                            },
                            "description" : "Categories that an item should have to be eligible for the rule. Format: key: `categoryId`, value: `categoryName`.",
                            "type" : "object"
                          },
                          "dateRange" : {
                            "description" : "The rule will be active during this time range.",
                            "nullable" : true,
                            "properties" : {
                              "from" : {
                                "description" : "Date when rule will be activated. Date format: `RFC3339`.",
                                "type" : "string"
                              },
                              "to" : {
                                "description" : "Date when the rule will be deactivated. Date format: `RFC3339`.",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "internalCategories" : {
                            "description" : "Internal Categories.",
                            "nullable" : true,
                            "type" : "object"
                          },
                          "markupRange" : {
                            "description" : "For an item to be eligible to the rule, it's markup should be in this Markup Range.",
                            "nullable" : true,
                            "properties" : {
                              "from" : {
                                "description" : "Item markup should be greater than or equal to this value.",
                                "type" : "integer"
                              },
                              "to" : {
                                "description" : "Item markup should be less than or equal to this value.",
                                "type" : "integer"
                              }
                            },
                            "type" : "object"
                          },
                          "stockStatuses" : {
                            "description" : "Stock statuses.",
                            "nullable" : true,
                            "type" : "object"
                          }
                        },
                        "type" : "object"
                      },
                      "id" : {
                        "description" : "Rule ID.",
                        "type" : "number"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "tradePolicyId" : {
                  "description" : "Trade Policy ID (Price Table ID).",
                  "type" : "string"
                }
              },
              "type" : "object"
            },
            "title" : "",
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "01e1cff2-bad0-4e42-b19d-695462442fb0",
    "name" : "Get Pricing v2 Status",
    "request" : {
      "urlPath" : "/pricing/migration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hasMigrated\" : true,\n  \"isActive\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json; charset=utf-8"
      }
    },
    "uuid" : "01e1cff2-bad0-4e42-b19d-695462442fb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.238279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetPricingv2Status",
          "schema" : {
            "properties" : {
              "hasMigrated" : {
                "description" : "Defines if the account has migrated to Pricing V2.",
                "example" : true,
                "type" : "boolean"
              },
              "isActive" : {
                "description" : "Defines if the account is active.",
                "example" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "fc98e137-d1fb-4e8d-9efc-b0a80ad1e7fb",
    "name" : "Get Pricing Configuration",
    "request" : {
      "urlPath" : "/pricing/config",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"blockAccount\" : false,\n  \"defaultMarkup\" : 100,\n  \"hasMigrated\" : true,\n  \"hasOptionalBasePrice\" : false,\n  \"hasPriceInheritance\" : false,\n  \"migrationStatus\" : \"Completed\",\n  \"minimumMarkups\" : {\n    \"1\" : 100,\n    \"2\" : 90\n  },\n  \"priceInheritance\" : \"never\",\n  \"priceTableSelectionStrategy\" : \"first\",\n  \"priceVariation\" : { },\n  \"sellersToOverride\" : [ ],\n  \"tradePolicyConfigs\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "application/json; charset=utf-8"
      }
    },
    "uuid" : "fc98e137-d1fb-4e8d-9efc-b0a80ad1e7fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:27.238204Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetPricingConfig",
          "schema" : {
            "example" : {
              "blockAccount" : false,
              "defaultMarkup" : 100,
              "hasMigrated" : true,
              "hasOptionalBasePrice" : false,
              "hasPriceInheritance" : false,
              "migrationStatus" : "Completed",
              "minimumMarkups" : {
                "1" : 100,
                "2" : 90
              },
              "priceInheritance" : "never",
              "priceTableSelectionStrategy" : "first",
              "priceVariation" : { },
              "sellersToOverride" : [ ],
              "tradePolicyConfigs" : [ ]
            },
            "properties" : {
              "blockAccount" : {
                "description" : "Defines if access to the Pricing APIs is blocked for external requests.",
                "example" : false,
                "type" : "boolean"
              },
              "blockedRoutes" : {
                "description" : "Array with all blocked routes.",
                "items" : {
                  "description" : "Blocked route.",
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "defaultMarkup" : {
                "description" : "Account default markup.",
                "example" : 2,
                "format" : "int32",
                "type" : "integer"
              },
              "hasMigrated" : {
                "description" : "Defines if the account has migrated to Pricing V2.",
                "example" : true,
                "type" : "boolean"
              },
              "hasOptionalBasePrice" : {
                "description" : "Defines if optional base price is allowed.",
                "example" : false,
                "type" : "boolean"
              },
              "hasPriceInheritance" : {
                "deprecated" : true,
                "description" : "Deprecated. Use the `priceInheritance` field instead.",
                "type" : "boolean"
              },
              "migrationStatus" : {
                "description" : "Pricing V2 migration status.",
                "example" : "Completed",
                "type" : "string"
              },
              "minimumMarkups" : {
                "additionalProperties" : {
                  "format" : "int32",
                  "type" : "integer"
                },
                "description" : "Account minimum markup.",
                "type" : "object"
              },
              "priceInheritance" : {
                "description" : "Condition of price inheritance from its parent account. This field can have three possible values: `never` if the store should never inherit prices, `nonexistent` if the store should only inherit prices in case of nonexistent prices for a given product, or `always` if the store should always inherit prices, regardless of its own prices.",
                "example" : "nonexistent",
                "type" : "string"
              },
              "priceTableLimit" : {
                "description" : "Price Table Limit.",
                "example" : 100,
                "nullable" : true,
                "type" : "integer"
              },
              "priceTableSelectionStrategy" : {
                "default" : "first",
                "description" : "The strategy used to get prices when there is more than one option. Possible values: `first`, `highest`, `lowest`. Default: `first`.",
                "example" : "highest",
                "type" : "string"
              },
              "priceVariation" : {
                "description" : "Price Variation object.",
                "properties" : {
                  "lowerLimit" : {
                    "description" : "Lower variation limit.",
                    "example" : 1,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "upperLimit" : {
                    "description" : "Upper variation limit.",
                    "example" : 10,
                    "nullable" : true,
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "sellersToOverride" : {
                "description" : "Overrides prices from sellers.",
                "type" : "array"
              },
              "tradePolicyConfigs" : {
                "description" : "Trade Policy Configurations array.",
                "items" : {
                  "properties" : {
                    "minimumMarkup" : {
                      "description" : "Trade Policy Minimum Markup.",
                      "example" : 80,
                      "type" : "integer"
                    },
                    "rulesShouldAffectListPrice" : {
                      "description" : "Defines if the Price Rule should affect the list price too.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "tradePolicyId" : {
                      "description" : "Trade Policy ID.",
                      "example" : "b2c",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "hasMigrated", "defaultMarkup", "minimumMarkups" ],
            "title" : "Pricing Configuration response",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  } ]
}