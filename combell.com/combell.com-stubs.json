{
  "mappings" : [ {
    "id" : "0f508bbf-670f-3bb7-b4a2-dde98bd4959e",
    "name" : "Windows hosting detail",
    "request" : {
      "urlPath" : "/windowshostings/Ayana+Schuppe",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Shaneka+Morissette+II"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actual_size\" : 848617665,\n  \"application_pool\" : {\n    \"installed_net_core_runtimes\" : [ \"45sf0ejftnvc1bgmic9vdd4yovbcdn6qqu5jsy50g07u53pwrdyeulmt2unx7ajpifa6j3oz32wexaokc7d7cdv5i3qw4qgl6zz96mog1slxmwpcn6508w3ogbf\", \"ddfjrx4j2eh0gvajltrj39dhi4khmpjoejb8f1d6fta3s1a7n16vd1w9oigl9mxmn1ikpbr6sg7h6q74javumi92ifzxkr9g8acgfz0uyn1hudorxgo5uanm6idnte94pnyjdxwn2yno7gja64\", \"0bihrfhx7lplwcce4dggzoqax1o9fljpz2i6eof457gioay1umlrrkvo8dshloqc5ef0yxguujmesb8bd6ze74easi8m7ftgdzah7cda\", \"p5deiz7e9w8ycq4vquouoq16qk932njxxz1kxqvokm7agvburl3lxf4uwr2o46vj1spkq1ugoj6a4k20m8kffdwnyrembj5f8foa6zwr4gb\", \"7p1t3jl3fib86ti1hl52nm7b0\" ],\n    \"pipeline_mode\" : \"5z6duqwfdlyg42hxd73to9vo93ac4x4x637s9e757l3r0uvz687yughc2o0k1s5c7dbzz9u8zgzrnt8upszktgel1ybjkc67p809jyx9b9bam7q564kzw0mcb88o82i4yioipt67sutdskllcrwz3bcx1btjxc2ojpuma77frtrwyp\",\n    \"runtime\" : \"2022-10-31T16:20:20.622702Z\"\n  },\n  \"mssql_database_names\" : [ \"0nuihsxayr3wjy3nk2psg15il8b05pa0gdb1\", \"cu0yyzpb0bmsl1c72f7zcmufd7wjbz7t9zgvcptgu0voiqgwr563avv8vnstg59\", \"vd1i1l4o5l3be31k2g9xxgz4c8uf2qz3iucusbcp\", \"tdalnw87j1hf7kpimy2ojqulj180yvc2cit4do2qgc0gq6ordws9cud3yqh8nhzix2skyhf8ocgfaxunhcx6fcdgvupbzzmr4yfmppyqr0idfulaghcpt0ldloxr3308dum4fmgy8uk4icef80lgdfqyjqv7ajfew1yca4105ks5uvo\", \"qqfr1opzbc1cbetu24ditxcj6hz6c9sz3a7tgq167xe1smftg7ybfnlf6nxsjszerweehws1hdotvkld5loohrreor6jc6slk80xhjr\", \"lrne82zdo9z02psa\" ],\n  \"domain_name\" : \"Macie Grant\",\n  \"ip\" : \"yhbtxyqf9rcfvps34lrg6tch0jemzzrgq82yv\",\n  \"servicepack_id\" : 1291040801,\n  \"ftp_username\" : \"elyse.murazik\",\n  \"sites\" : [ {\n    \"path\" : \"pfdu7r36e2b0xodeyc3vq4hd1jshfck3wr31x0gxgk0314l2vldkwfmo8i4r9ijngff8s5ahhvt0ubfu8qf6sodmgiuvjx1hecxiq4wa980dxr6wg06amxjqdx4qkwaceuhd1j2u3y3ndhf0ghsvicbsunjsjz3prkybfgdz05gpu6x84t6v4vm8fx0o6a7e\",\n    \"bindings\" : [ {\n      \"cert_thumbprint\" : \"lmauh5z8e8utjbbn84irs1f2z71bsl2i48f56\",\n      \"protocol\" : \"fgpgomvu80dyp6gum1d82n206of3ygej145f8v3t06hncsfg594pphm5f54tl1tsmxafb\",\n      \"port\" : 1196496143,\n      \"ssl_enabled\" : false,\n      \"ip_address\" : \"o2t31fnx879fx490owskgg3bf0hw2i4en17y1l98jdqpqjje0aiyyu72muphqmmsyzjs8k8nr6tq9u2w7chx7wdywsi4vgckhpp9miwq8e4bo0j7jx4l5bbfxiod\",\n      \"host_name\" : \"Dione Schulist\"\n    }, {\n      \"cert_thumbprint\" : \"d3s2nb3cygoxr929wgymhxz5bjsvsopbpijtqmi5o2ild02xsd6l3cm2bzd7no40idswb68fi5ei\",\n      \"protocol\" : \"bwwo7qn5vb6nl4mwhmp61fan36\",\n      \"port\" : 1363543918,\n      \"ssl_enabled\" : true,\n      \"ip_address\" : \"m1pwr0dci7xiysryh721edthcd3uocwdfxbqsgvcdvn24r1ezda1ts1av8aojqgmeaze2jyihl5jtdu1dyfhf7d64n0hy8f8l5ymlv35gaj6ztqigrhroych6avb9wr\",\n      \"host_name\" : \"Herta Swaniawski\"\n    }, {\n      \"cert_thumbprint\" : \"dgsu7at6nbcmsjl0h484t0b2e0mu7ozkx8\",\n      \"protocol\" : \"kan5sjm1eikb0c3m5ksxqbb96k063hysheh3hck9nr0d89s2vh19nsqyqbu25ay69ev2a6spb15p17or9hxohjdrb1zarn0leidyn7jvmznnw6gnnzi2bwh7ppzrcq781ubn19t3ovyzornaxeqn606rkkan49s3nmt54clc87mtelrnargr\",\n      \"port\" : 2058874313,\n      \"ssl_enabled\" : true,\n      \"ip_address\" : \"rzvt06hp649o3h2sasx8usssixsxqq9hrfnjxzi4m94vvp8qbb3y8jm8r3u682gq79xe5dzymmzz1jpwi2y38lhxibyr1q1y9i2255yn9tkleq7u16xyaaxznsif86boieomhpjolsdwgw8x5ig05qxbeec7mqc8m8d30m4v0f1pvjhjmew55dn7w60avyyy6\",\n      \"host_name\" : \"Robt Stiedemann\"\n    }, {\n      \"cert_thumbprint\" : \"wa07ytwrznknkt830gk9fis4xntjfowi5qz7e5r3hphiu33h89kq9sapxzstgl737fgstvhvn9053gxloiigzqdl3bvfimxrtlcuze\",\n      \"protocol\" : \"qe07ihixa47e398bsuumu3irjjgeu504q4yra7olt0y5ubnm0vzyl357pekxyhd\",\n      \"port\" : 1452980618,\n      \"ssl_enabled\" : false,\n      \"ip_address\" : \"cnhvq8q2hdhlxtpcydd9yaio\",\n      \"host_name\" : \"Chuck Miller\"\n    }, {\n      \"cert_thumbprint\" : \"50g3565er3hjrkoz5ffyp0fcj0edbcyplzewj98anidz47kzq3uwihgtge\",\n      \"protocol\" : \"l0bpgtu6n8so3qombanekh8mpnvudbpuzntjbu9v7nwrnbo0nu29anulqjds6481pni8j7n5n0hmvh1406mx57xbyuopec6oijq4rbw5ozp94fezmtabe5p5tau8yqr4zx44zvdamcwcfivp6iste0v7q5xx46th4j5iv2013fs4ihg\",\n      \"port\" : 1336745620,\n      \"ssl_enabled\" : true,\n      \"ip_address\" : \"16ngjzgirx8k1ga8s86zjp0un5561vvvosxav9435j9e2n7fvu1rlqr27c5vqwderb9ex0a6cvhvmsrlw3os09gx75fs6mz1vat8iwg35cpjqbs2r61n4qcpeanu7fplvd7ne9zyga946n4u1\",\n      \"host_name\" : \"Ms. Cruz Anderson\"\n    }, {\n      \"cert_thumbprint\" : \"g2prvq7s60t1wscgnycbswqlsfoxvc4mhsmt\",\n      \"protocol\" : \"qksa6wdz88ywkh7ynx41ufuj1\",\n      \"port\" : 1379451329,\n      \"ssl_enabled\" : false,\n      \"ip_address\" : \"25d56xb3bmigf1ssn28eyqdhsgfxxsnl6itpf6dhakf9onwpprrwqj88cnsg4zivj4nmzgx1381cw4fzlbf9v\",\n      \"host_name\" : \"Mr. Jason D'Amore\"\n    } ],\n    \"name\" : \"Kendra Terry\"\n  } ],\n  \"ip_type\" : \"shared\",\n  \"max_size\" : 1463375170\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f508bbf-670f-3bb7-b4a2-dde98bd4959e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetWindowsHosting",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "actual_size" : {
                "description" : "Used webspace size in MB",
                "format" : "int32",
                "type" : "integer"
              },
              "application_pool" : {
                "$ref" : "#/components/schemas/ApplicationPool"
              },
              "domain_name" : {
                "description" : "Domain name for the Windows hosting account.",
                "type" : "string"
              },
              "ftp_username" : {
                "description" : "Ftp username",
                "type" : "string"
              },
              "ip" : {
                "description" : "Windows hosting IP address",
                "type" : "string"
              },
              "ip_type" : {
                "$ref" : "#/components/schemas/WindowsIpType"
              },
              "max_size" : {
                "description" : "Maximum webspace size in MB",
                "format" : "int32",
                "type" : "integer"
              },
              "mssql_database_names" : {
                "description" : "A list of mssql databases linked to the hosting account.<br />",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "servicepack_id" : {
                "description" : "Id of Windows hosting service package.",
                "format" : "int32",
                "type" : "integer"
              },
              "sites" : {
                "description" : "A list of websites on the hosting account.",
                "items" : {
                  "$ref" : "#/components/schemas/WindowsSite"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "dbfbb143-0a39-319d-9032-80fb5504f52a",
    "name" : "Overview of windows hostings",
    "request" : {
      "urlPath" : "/windowshostings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"domain_name\" : \"Judy Boehm MD\",\n  \"servicepack_id\" : 81322715\n}, {\n  \"domain_name\" : \"Stephen Howell\",\n  \"servicepack_id\" : 1631086302\n}, {\n  \"domain_name\" : \"Jamison Torphy\",\n  \"servicepack_id\" : 1358206659\n}, {\n  \"domain_name\" : \"Marline Dibbert\",\n  \"servicepack_id\" : 1466624609\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbfbb143-0a39-319d-9032-80fb5504f52a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetWindowsHostings",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/WindowsHosting"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "faeb4b1a-8c91-3c30-89ae-031f7f95ea53",
    "name" : "Download a SSL certificate - 400",
    "request" : {
      "urlPath" : "/sslcertificates/c6tzpwpaeqq0tg3d0s2aqajnhi9/download",
      "method" : "GET",
      "queryParameters" : {
        "password" : {
          "equalTo" : "m0rq4uf3277nz39mmpgy53bwmqf7dli84o39cuudqocvwzhzi2kxg0ic9kt"
        },
        "sha1_fingerprint" : {
          "equalTo" : "b71lbyzu6wjxozprdc2q8lcdyajkkjf2hexqk7ptn36yafqi3a03z69fdhq16jsjhpij5k0mmw3cp9clxraxvazqx4313g9vy1a9ez4u8jwzlhgjz71ialwkyzcvbo1u9lo2cn4vwfravyl9shj83rkljijpjcs4yekyx04w0cpm2m"
        },
        "file_format" : {
          "equalTo" : "pfx"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "faeb4b1a-8c91-3c30-89ae-031f7f95ea53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DownloadCertificate"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "97434934-2537-3019-9111-1a9ffbe619c4",
    "name" : "Download a SSL certificate (application/json)",
    "request" : {
      "urlPath" : "/sslcertificates/zgssauwwkjes89pulk3fi9nfqw9y8whyclxg5xnaw96ved4vd7nfop6hph8gwhnmuss03zn4arrf4sehtgwc7mlgn00um4dapun4dhxnuxsnro3sopag4s7ru52fithisvlkyd5ugq9/download",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "password" : {
          "equalTo" : "vr95oysrb4distfl3t0orq8s9dxk4ekzj4gioiir8193cs4d71u0ejibldfdmq7o9ntzr6tv8le25qaza21m6mj"
        },
        "sha1_fingerprint" : {
          "equalTo" : "u065akz5"
        },
        "file_format" : {
          "equalTo" : "pfx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "\"zf8be4v6mqxxmduw\"",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97434934-2537-3019-9111-1a9ffbe619c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DownloadCertificate",
          "schema" : {
            "format" : "binary",
            "type" : "string"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "b0d7a01d-1267-3a1b-bb15-6e581889917a",
    "name" : "Detail of a SSL certificate",
    "request" : {
      "urlPath" : "/sslcertificates/gntu12d06cpqxx8mbuh55iod05ljj7i6b0a6ro56m7zvmix1mwmkrdr1x471eau71zh6mxqlpn96c38ax9o2hcydrg6aaei1aznvm74prrfndfiplt33lz5jzgbgpuj7ul0xgokfm8x5stynde",
      "method" : "GET",
      "queryParameters" : {
        "sha1_fingerprint" : {
          "equalTo" : "a3h1ss3mrlr5apajf6uo74i92izti7ywsie567btga96mnfo8tvkdbeezp61r78i9hkl6zc6ukx4irpoqlr9d2drp2z6j4htg320i9hgme9ya"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subject_alt_names\" : [ {\n    \"type\" : \"ip\",\n    \"value\" : \"i85nsie4vfkhpb68gjdidojtp9cvjw583jn4ppt62oo48wg9pyjwd4zj0ip0kqxgdfeb0neo2g3akuhj9c0pkl3abib\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"yrnl5l3dnxxjmystdetj7i3h64xqzhvi6vddsiuj540ow7u11yjxvoxnf4ntd3v66192vqkqaei7r3tnwy1\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"bgtgjhma8a1zqjjmxl1231dl0u3muxx1ff5bxahlcu1xzjifgbena9plytjr2wwnr11b5m3mptm1qepsl6io46mgn6mwjpva6q8lzlw52g0cdubjoxbob0r8ykw20pxfh1spnkmytyz\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"yk5okxw1dzj2sybl44ds4k7owz55i2kuy31hjd64cvfb8q6yv2gw9ac2o475ltne8ycdjfpmi2j0kgajl8koslelwxvnogf9v7bb27z35qs0ml\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"ket313ere89899ggm8vwil8x4gwnkova2hw7w9tzwdqbh7x1h7j31uus97mtuptzenf77ajv56ii68ivcg6g6kxqvz4q48uulzbmkedzd6fayhr6nowvfadm70i9n41lyxwx9p5n5tqio2sqvhlv6qjg46nztb97lp5ro2t3tzb3gjm6fm0gkqlbmm0wjj08j33\"\n  } ],\n  \"expires_after\" : \"2024-01-26T10:01:38.621Z\",\n  \"sha1_fingerprint\" : \"1l5jh6ih45h18vf\",\n  \"common_name\" : \"Mrs. Arthur Prosacco\",\n  \"type\" : \"standard\",\n  \"validation_level\" : \"extended_validated\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0d7a01d-1267-3a1b-bb15-6e581889917a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSslCertificate",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "common_name" : {
                "description" : "The common name (e.g. domain.com) of the certificate.",
                "type" : "string"
              },
              "expires_after" : {
                "description" : "The exact time the certificate will expire.",
                "format" : "date-time",
                "type" : "string"
              },
              "sha1_fingerprint" : {
                "description" : "The SHA-1 fingerprint of the certificate.<br />\r\nThe fingerprint is a cryptographic hash which is a short unique identification of the certificate.",
                "type" : "string"
              },
              "subject_alt_names" : {
                "description" : "The list of all supported dns names in the certificate.",
                "items" : {
                  "$ref" : "#/components/schemas/SslSubjectAltName"
                },
                "type" : "array"
              },
              "type" : {
                "$ref" : "#/components/schemas/SslCertificateType"
              },
              "validation_level" : {
                "$ref" : "#/components/schemas/SslCertificateValidationLevel"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9b75c69d-2e9a-3feb-a85b-ba097cfabd3e",
    "name" : "Overview of SSL certificates",
    "request" : {
      "urlPath" : "/sslcertificates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"expires_after\" : \"2022-11-04T13:03:11.621Z\",\n  \"sha1_fingerprint\" : \"lhrnvzqmf7bzaos15i9v3vsy4lh34mp5r2a81a2pzeuuqk12g542ldpjqvfcqbt9bj1y4195tfirb2i6ntsgdi2gmrrunzf15os9z8i\",\n  \"common_name\" : \"Dr. Asha Schmeler\",\n  \"type\" : \"multi_domain\",\n  \"validation_level\" : \"domain_validated\"\n}, {\n  \"expires_after\" : \"2023-09-10T02:31:41.621Z\",\n  \"sha1_fingerprint\" : \"svjaufrnforegog0tos4s9jnz6bbo73vidy7moiigxw20pr4domxu3q6k15kwwpw9k8xx6qkq7lp08p7sy9i0vousf15pej6kqt10d7bletyx9hpx6gi76qq097j\",\n  \"common_name\" : \"Ms. Hoyt Kautzer\",\n  \"type\" : \"standard\",\n  \"validation_level\" : \"extended_validated\"\n}, {\n  \"expires_after\" : \"2023-07-15T11:03:38.621Z\",\n  \"sha1_fingerprint\" : \"cp9czhnv3nfcgpc8zh9rj1u1psf5sd91ddup9jwmh3p1qpy1z2qawxeblecv0j9u4h5fi59yi43t8228qqjfffa9xfbsihdn8e14ctvhe3zjglz7hdp90l\",\n  \"common_name\" : \"Mariann Block\",\n  \"type\" : \"standard\",\n  \"validation_level\" : \"extended_validated\"\n}, {\n  \"expires_after\" : \"2023-03-09T03:13:51.621Z\",\n  \"sha1_fingerprint\" : \"60sf4xe8npepvuejo31zcyzzrjyzosv8qmiv7rob4nnyguhbcrb3dblty8zyxuutbtkgox3x52lx26hwsam28apwi5e28aod74eawdlr62vab3qo1f3nbpvp0e8ttwlkmcbof1nshgxh1nsd2ad8ay7fyf45bkt0ygnkx8y58s0ya0jrv\",\n  \"common_name\" : \"Kimbra Altenwerth\",\n  \"type\" : \"multi_domain\",\n  \"validation_level\" : \"domain_validated\"\n}, {\n  \"expires_after\" : \"2022-03-29T00:39:06.621Z\",\n  \"sha1_fingerprint\" : \"3cfyu9amp7nlh8dljnqhzh7ihy6czowgzhhf7tl5fkt9ul3hi9726s4g11vst9mgulktadxomlmybknq2gp9tpv\",\n  \"common_name\" : \"Miss Timothy Haag\",\n  \"type\" : \"standard\",\n  \"validation_level\" : \"extended_validated\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b75c69d-2e9a-3feb-a85b-ba097cfabd3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSslCertificates",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/SslCertificate"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "acd04d1f-5775-3f39-9b8f-b4a707b81a50",
    "name" : "Verify the SSL certificate request domain validations - 410",
    "request" : {
      "urlPath" : "/sslcertificaterequests/348311976",
      "method" : "PUT"
    },
    "response" : {
      "status" : 410
    },
    "uuid" : "acd04d1f-5775-3f39-9b8f-b4a707b81a50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySslCertificateRequestDomainValidations"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "68dddf83-ab67-3cd7-8189-aa3baf156b04",
    "name" : "Verify the SSL certificate request domain validations - 303",
    "request" : {
      "urlPath" : "/sslcertificaterequests/738968916",
      "method" : "PUT"
    },
    "response" : {
      "status" : 303
    },
    "uuid" : "68dddf83-ab67-3cd7-8189-aa3baf156b04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySslCertificateRequestDomainValidations"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7155e7be-2459-36a9-b3d7-0746e6c12479",
    "name" : "Verify the SSL certificate request domain validations - 202",
    "request" : {
      "urlPath" : "/sslcertificaterequests/982521173",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "7155e7be-2459-36a9-b3d7-0746e6c12479",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifySslCertificateRequestDomainValidations"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5e892b6d-95ef-32d6-bbdc-bcdd35e1d056",
    "name" : "Detail of a SSL certificate request - 410",
    "request" : {
      "urlPath" : "/sslcertificaterequests/201915284",
      "method" : "GET"
    },
    "response" : {
      "status" : 410
    },
    "uuid" : "5e892b6d-95ef-32d6-bbdc-bcdd35e1d056",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSslCertificateRequest"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b036dc89-377b-3153-b783-586f729b9494",
    "name" : "Detail of a SSL certificate request - 303",
    "request" : {
      "urlPath" : "/sslcertificaterequests/970416590",
      "method" : "GET"
    },
    "response" : {
      "status" : 303
    },
    "uuid" : "b036dc89-377b-3153-b783-586f729b9494",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSslCertificateRequest"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "f0a5471e-15a8-334b-ad1e-cb4f79df15e2",
    "name" : "Detail of a SSL certificate request (application/json)",
    "request" : {
      "urlPath" : "/sslcertificaterequests/935495887",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"order_code\" : \"byyebsu1ysc7kza8skc8occgary563nvrykm18ckx30ndq7g6055yu53kt29k74u58ox58u8r0k6g783wwbm12w5n7nl72j99woige3d0ho5nuhfe9xg5hwyyrzzrtojqyzatscfb90\",\n  \"subject_alt_names\" : [ {\n    \"type\" : \"dns\",\n    \"value\" : \"frruz7baebmuqodvtkvl58l5j17l1lmqcc2hxop6invte0tyxahgl1gjpuzc42o9nn1qx83e4b1w047zsyisx2uvzr38fubtrto6y7akolzix8rua8llkgzjifm6jf9hgg\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"fx6l47oe1bfj4atepce4mrzkvw7lksefct4z8i7u1qxve7d2ys1ur9e89n06jchyzslvfojqbs3yz1cukgx5v0tg9rnglg0f8fclgmok5v4lsrs62htwtpteyxvg7quuvse5tnupy6kmg6\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"hgw5wdr3f7f4cg0sv2zugmhfoglwuw5uq9pnmgc5ttnku\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"0deud5f4so9zv008bzv23gzplaf4k0xm7ky8inwqflhcdy3cm4uhiiys0qgrlmoeooyih89qv1s5gksqv1fv6rod56jx79w88igtyzhz2iwt6t0fgdx8k0yurjcf\"\n  }, {\n    \"type\" : \"ip\",\n    \"value\" : \"8fdz9zisq96xj2fgp9rbu203fgs6rv2mkslmh1zwnp1tmyqilcfwfpv2ognau0b6drhezv4kqsaasnm80o0qizzj9qahy7grys1l991ia1nxja4e1j07t3u7yojoeis6ofdw18ay025g82jb1asiau7pd0jt6pf3fwkstccabt010gf43973f7ijx4y\"\n  } ],\n  \"vendor\" : \"sectigo\",\n  \"id\" : 2021839617,\n  \"validations\" : [ {\n    \"auto_validated\" : true,\n    \"file_validation_content\" : [ \"qy6rr8zr8pqpv1h6pekma2assrodr0lu6aujjjxet2eezdu2q1clg0eb3hh2o1pklxrqrl6aug41b5i3ry4hmfjhn7u90cjue1avhd8byaycn0iud1f01atqtn4c986710f67kd52u6hv2x7btvoqdud8jvp\", \"zyp1ttthdciqdlr513shsq01fqj40asfiwjbmldcts2atsvnvioh7wuusoiufijah2yf01j93j5mwda\", \"ut4dvsrk686h2c1543s459xv24ohrr7i5y307su2oidymdueikmugcsewdewjae6cgeuaf0yf3onvfvxm02udkh4c6ul2zraynv4\", \"5h47083n7p43t4jh45elqcq425ja27j0k0dmpz2323pffgvi71q7pdbq46ngyrnhzeg1ufusikmnu7r1fx5yu5k4m1wj5hvr3m5qt953vlgz7rhiyqsuy4dxohixlyh13pgik31btyijaqr64wjvlba9on8oczorzijdvjkd\", \"2rm3l9vcc1wgoxm4g3vjhzhh5\", \"lhtf3nuh65tre61w636bkq74jk0ymvetzcc78xzab7qsx2fg92txeuylqcq03xrrrr\" ],\n    \"cname_validation_name\" : \"Roosevelt Abernathy\",\n    \"email_addresses\" : [ \"los81xx2h8zxbi0lemtjtiysgb6xazlhmun9dxjt5uk5oobm38qnie9siqc1761l88op92t83i1eq9dpwob0ax7j1wcsfpx0p33pxszs8348por1xqdgcv34dyc2ztfyve4h1ruff6meisj21beljcm3pfpm10y7ey\", \"rvx4qj3jldhqqfla943gon6iecqoc5xjr7ucus46pdjxu9ya81dca0hxsq635kez3el48xhqdy7dytf4xfm6066fvuchzxxsuxm1jyz3p366cxy3\", \"zm4de0fh2djbwpgk40r64udaihvzn42a7seipa9pf05gafe76bss9pp5r9guirx1rw7u9blr9b9pcxgpuuv976qw7bn9alilz89fkczssmm04zd77ur70r3zafi1so06b56itj0vofz6stxkheygaa4fzojazd04q1rbcejwwl577n55efrtwhq3fbf4rtpk80sp6r\", \"olfy8tq3op3fg4qanct0v19ajrdo2lvykdry5d2suxra8fq59piwacxsbqjd1yzpl0aj3ta0yww2zr481x9242zu7qwt8mbe6g94mmb6vuurc52z9ehnhmn9q3r44ihg8qcxiv4vx7gdr0ui6bbmxh6t5tejb1rcba3mz026ivsosdncas7qomrp8grcq0pluh14tq3k\", \"u0ql8q6le\", \"jbbe5df1pktiy9xp0h0hldqk8wnkccwu5xbpmwn2mkz3tg2jwcqnaayn7ksxdwcv95307ew04u55iui7im0x1ylmvpkpq1k04ndlqyz\", \"tscko43enwj8bloji7sq3knrevcwwu9rnr3k3a2zw2xm7fxgkf\", \"3pdbu7ylr2okqyx29h20bqtfbbxveb8jhb4vkp0upzbstethan94lnmv33dcfnw9j9vy8bl3zxl464fw52k3znr11zzkpbay3nd0hp3n\" ],\n    \"cname_validation_content\" : \"Harum rerum illum aut dolorem molestiae officia velit. Rerum voluptas dolores autem consequatur earum error ut. Repudiandae qui et.\",\n    \"type\" : \"dns\",\n    \"file_validation_url_https\" : \"ofehyy7yw8fcwdwafekt7ga9j0isr8t4ig4ipry8t7x3806s81iaxkrjuw7w4ybzjez3moqzuhmo2jidqycp2v6sf2wzl3paoaosx9mzjk5iwrjkur1ikun8mjri43iegqu7uli35v\",\n    \"file_validation_url_http\" : \"xpxpcg79dx31aq24sgu745xwvnqrr2brutd4feqwbn9pjkxgj3v4csmxff17encmg5x5tyik8\",\n    \"dns_name\" : \"Orval Carroll\"\n  }, {\n    \"auto_validated\" : true,\n    \"file_validation_content\" : [ \"zo1asv2spswyegq5y6tuazlofesln33z7i7n434q\", \"dcb7yao2uxy3tvxa8edv6ibgo28vjuz7blzwribvw6jkfpgns1bqxso5wqi7lrz5471pkfzh5mfwj62is4nvj6gljuez0hj60vrszrtoln0p2pyv8a4ks80crbs33osgb48bnlr5pgg82owqesdfgif3s806mrt6svn7gs4f9jx5tih48ds4f4x18eq5p\" ],\n    \"cname_validation_name\" : \"Keith Klocko IV\",\n    \"email_addresses\" : [ \"egy3had2mvuljcn3x2r3b4bogj3l1wbzod8e1i7j0nx148hs7eariw\", \"yzwfws2lakvlib0p248hpnn41ypg6yb4sm976gzt2wzi6n5zes7lkbmeyn9fledwj0ma3o2udb0k\", \"6kuzngph7fm6d5a5w2iok2h4b48xt62nl037oqltn0x3at8fdvmr288u592aeo85xkmhqwoqdnkit6qfs45xm3cmbr5og93naiv5ea52kgdsjwszvkx2akkox4ine40f89ednf1mqvh4nqdt5j0b5i80je3i1uej\" ],\n    \"cname_validation_content\" : \"Consequatur et et. Iure cupiditate est amet minus doloribus corrupti. Ut ut voluptate voluptatem sunt libero deserunt ut. Impedit aut illum.\",\n    \"type\" : \"file\",\n    \"file_validation_url_https\" : \"86x8v8flr52kl5ofscul8phajc929zaziedx63hlghrywtft\",\n    \"file_validation_url_http\" : \"c0c7kmsokxbrnuux19kdm07zs5ipnrg2hy4ri9cju2dr2pd75l0gfwdblud7w2i3ltpnaw2hawanjlzxtso14nb0angfn4hqmika1b25qlkpc2ghh7n85j10t9fjbd4eykc12trj5x97lozpp5tkcxnl9fvgh513frdwm0i8ivk6tepodzqu6ddeq\",\n    \"dns_name\" : \"April Herzog\"\n  } ],\n  \"certificate_type\" : \"multi_domain\",\n  \"common_name\" : \"Anitra Roob\",\n  \"validation_level\" : \"organization_validated\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0a5471e-15a8-334b-ad1e-cb4f79df15e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSslCertificateRequest",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "certificate_type" : {
                "$ref" : "#/components/schemas/SslCertificateType"
              },
              "common_name" : {
                "description" : "The common name of the certificate request.",
                "type" : "string"
              },
              "id" : {
                "description" : "The id of the certificate request.",
                "format" : "int32",
                "type" : "integer"
              },
              "order_code" : {
                "description" : "The order code of the certificate request.",
                "type" : "string"
              },
              "subject_alt_names" : {
                "description" : "The list of all supported domains in the certificate.",
                "items" : {
                  "$ref" : "#/components/schemas/SslSubjectAltName"
                },
                "type" : "array"
              },
              "validation_level" : {
                "$ref" : "#/components/schemas/SslCertificateValidationLevel"
              },
              "validations" : {
                "description" : "The list of dns names to be validated with the information related to domain verification.",
                "items" : {
                  "$ref" : "#/components/schemas/SslCertificateRequestValidation"
                },
                "type" : "array"
              },
              "vendor" : {
                "$ref" : "#/components/schemas/SslCertificateVendor"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "8f08af16-d9fe-365f-a361-95a24791e206",
    "name" : "Add a SSL certificate request - 201",
    "request" : {
      "urlPath" : "/sslcertificaterequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "8f08af16-d9fe-365f-a361-95a24791e206",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddSslCertificateRequest"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "379fc796-61c4-3099-bb23-4efb87168260",
    "name" : "Overview of SSL certificate requests",
    "request" : {
      "urlPath" : "/sslcertificaterequests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"order_code\" : \"0sq8ew5i0yvlcxnjk9yjzp7ltp8\",\n  \"vendor\" : \"sectigo\",\n  \"id\" : 1982704533,\n  \"certificate_type\" : \"multi_domain\",\n  \"common_name\" : \"Samuel Konopelski\",\n  \"validation_level\" : \"extended_validated\"\n}, {\n  \"order_code\" : \"4gq505rens7i42ovigq9vtkkdo9nib23f5i664xr7oda61mh2v5jmzu2xikkk6f61v40jnbq9lqhkpuf8p9ru0zg\",\n  \"vendor\" : \"sectigo\",\n  \"id\" : 300653770,\n  \"certificate_type\" : \"standard\",\n  \"common_name\" : \"Cyril Armstrong\",\n  \"validation_level\" : \"domain_validated\"\n}, {\n  \"order_code\" : \"nztpoi2sns9u4l3pdq3d8qs4iiq009g00t3o4vmrvwe75g84eflm2npd0xp3lh0xhh28drhz7qopjudovgilviz8fhsli4zx70ezv9v2v08bv9a189d1r\",\n  \"vendor\" : \"sectigo\",\n  \"id\" : 2086932631,\n  \"certificate_type\" : \"standard\",\n  \"common_name\" : \"Jacinto Williamson\",\n  \"validation_level\" : \"organization_validated\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "379fc796-61c4-3099-bb23-4efb87168260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSslCertificateRequests",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/SslCertificateRequest"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "57100767-23a7-3db0-b4f1-4aabeb85ac63",
    "name" : "Overview of SSH keys",
    "request" : {
      "urlPath" : "/ssh",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"public_key\" : \"2vst6xi22fomgvsv1359fpazwi22e1knfgg75d2dj37pyr4hqqadp0wkesydsze0637fj229nni2s8gw7ynm37jch3h6ndnyy48dj7m2hme4tg59odiny4wuwz5xv3tf535654hwikt4xd3cpp25pv6s0o4dpknh9xhad7o6el0497dlhdzf8di8hala\",\n  \"fingerprint\" : \"6o8f2yymmqpl4zl0hmnnq2q1jaeijnmsp4bxwiltyo4sbcz2d5tf4egmczj6zm9opw8sgnpyddt0t\",\n  \"linux_hostings\" : [ \"l6nqce5s4d2nfnzw9dtr1ve5994\", \"5jtj0fek7ggd2h2u9w7jnjnd0fz0ihz0\", \"7ix13tomk4lxa0it18j5fvau2ok1kk81xxiv0fyf3n6k99mttgw7h6kjhijsi5nqg7i6ovxqi0vtz3porn50g3yp36zg7m\", \"4j17867wzbva6zgh56ydfaf5rz9bp5clbswddsdc64ti9ssnzfewocx8e1d4zbzhcd\" ]\n}, {\n  \"public_key\" : \"dku3u1qxade2u0a7hybs482m39lnfumnoewocwtcrgey6u653intvxobvj8g5ulqnbr8edzkof9q4bhxoarq5yn0zvso4ulkaro0xzzybeeukzjrrij4um1sedjtehm3ye7y9q1xfo5miss8wg53mpnwk9chgl87t3n2y\",\n  \"fingerprint\" : \"cpjkagw7ut7rssw4qzmpo99qoqno61ws\",\n  \"linux_hostings\" : [ \"dqiqrgge86ticetkwl0vbi2nf951349xiqkobc2xki6urujnnv4r4tfoppeimqyg07ngx4y4iv79zfhv914bbm424qvs9udy76tg7r1uujvyuoavqx86udxa2q2ugi1ybq\", \"jr8xvbn8xts5i1l0p9aiacdf114zg94x7rck2xq860g1yjkg29d3lxkhzceflihmp\", \"qcu4rxoa01ym63h7\", \"buce6iwzks13p5dj7xl88igs2lzlb1bjhx7wkop7b\", \"juwz9eyfoiey2fxn941fbqasbwt9klirxgfxfqjpc21ednibn8yiag466pgmju7n0i2ush0vue260f0nz5a9yfkxoig2jm7ls4jxkx856vtqjkegzz9qvoiqu4ff6ml9gg5cgpvpkhmmy3t1lf67l0svolj3v0p4c5f9mx29rrteeuw\", \"qjll0gbszx8sh8pbdh414v3ipp2y1ub4mtsi9udljy4lxm4pk7t100vou5pghl05l0dnmcb84q8y9bc95gferro1sxq9j27yg4dqzpcg6b0zrdzsz8qg78u521pwxqhfjxgg09tmc2fwa0zy7n2gy9mq5h6se4oydvmaxhhqrnyutm8uhdjxes72oow0xle\" ]\n}, {\n  \"public_key\" : \"6d8fhcaacaxlxd43ahnwphjbxi6axtw2ll069fdmfqul4jo8793oxyi08qdjjmz4gm9rfojpjfo5ejg9gse017g99md26jtomjk2qtci66h7m6l27xdkgn7r0xcdl02muhj0uku2dz0h5vq6adu7ei0a9h8yci1pdggv4lbchm59qek9e0\",\n  \"fingerprint\" : \"0e2o9lxujat7py11zslgpekrgj27y4bqxa9rrdyy9fc5ypywwj46qkg9wcd0xd5w21y05apfdqvhca27vlkb19zi0oe9xiz8shm7x\",\n  \"linux_hostings\" : [ \"xdsopb04m4isga35lwdag7wndzxj3l1o6ln2mz3r226qdrb2e5ha2mw7wmemfuu44xfkny3tq64a42tudhf8vqe0mw3gm9365dtfcg5q2wlrwqizt2kk6a91fp3tkul2qpvau4pp4mjpetuf06d3ofzsedghq4vkvl7a0z6cy5fx1sss8\", \"s3gm6btcs0ob54x143gtj8xne5vppxrzk70f\", \"7nhgqen69z90be485t1uhk0qubbfdgvnc9txlf0jnoew8btpefchz92rs301yuqntkk1bhj1qvkxis29cr7yfgcck6u1bbuja7u7yditp4ty1538krgs9n0\", \"5q22x0apyrfwssfb0clazqlb1goo846020smurpxve1subpa54immgzr3oju\", \"icap6npey0j9gn1rg0r0e4qs1ruqvv0cxmnl42jhepy8b57mlulyqfafyk9rvt94lhoh8eheskqs6ppftf9qfq2ximf7lohg1hpqb05zc5rlo83u68odtw3ulbd318jny3fvovcl4o24edd3a7iirm2qrliaismaqp9gos2fe2r\" ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57100767-23a7-3db0-b4f1-4aabeb85ac63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllSshKeys",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/SshKeyDetail"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "e9ba4737-66f8-317a-a08a-5604089da24a",
    "name" : "Overview of service packs",
    "request" : {
      "urlPath" : "/servicepacks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Ramon Beer\",\n  \"id\" : 863899079\n}, {\n  \"name\" : \"Veola Kutch DDS\",\n  \"id\" : 955505029\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9ba4737-66f8-317a-a08a-5604089da24a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Servicepacks",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Servicepack"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "69651dde-f468-3b08-bf01-ed7d09c4b31f",
    "name" : "Detail of a provisioning job",
    "request" : {
      "urlPath" : "/provisioningjobs/rg8s",
      "method" : "GET",
      "queryParameters" : {
        "job_id" : {
          "equalTo" : "411ec41d-a353-42c0-967e-9cf7d61f72d3"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"resource_links\" : [ \"7lwn7koy1z7z9t5g2lssjp3j9rxt4ww21tyxe68423b0be9zi7paa7uqaouv1ayboevwzs5dgz34l6v29jugnz1pehlplk54n7q2ncbfbx7arbofeylu478k65e8ixcvvdp06k2kkkin52a89noja51jlw88avobra\", \"9li6hft\", \"sowwhg0o41v3jm3bkj7jexi\", \"nxqlp6cua91l16s333g1ec2829v5qfzhkh9anz7xdqgsp09uzvq3lpsa6u4p9xhroq7m6540gx88g729gu162whi5ikp1bt8rv05cvu67oh8uo5taaqzsiq4pyi6d0xctb98\" ],\n  \"id\" : \"7121\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69651dde-f468-3b08-bf01-ed7d09c4b31f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "id" : {
                "description" : "The id of the job.",
                "type" : "string"
              },
              "resource_links" : {
                "description" : "Links to the created resource(s).",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "ad80daed-02b0-380d-a45e-01c536d3d147",
    "name" : "Detail of a provisioning job",
    "request" : {
      "urlPath" : "/provisioningjobs/643d",
      "method" : "GET",
      "queryParameters" : {
        "job_id" : {
          "equalTo" : "2b62eb60-f2a7-4fa9-9be1-104538b6ae29"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"completion\" : {\n    \"estimate\" : \"2022-11-12T05:36:24.618Z\"\n  },\n  \"id\" : \"dq3g\",\n  \"status\" : \"finished\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad80daed-02b0-380d-a45e-01c536d3d147",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "completion" : {
                "$ref" : "#/components/schemas/CompletionEstimation"
              },
              "id" : {
                "description" : "The id of the job.",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/ProvisioningJobStatus"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "3970fe85-71ed-3fbd-b1c8-944999420535",
    "name" : "Enable/disable mysql user - 204",
    "request" : {
      "urlPath" : "/mysqldatabases/Wesley+Little/users/carina.glover/status",
      "method" : "PUT",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Haley+Konopelski"
        },
        "user_name" : {
          "equalTo" : "suzanne.lemke"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3970fe85-71ed-3fbd-b1c8-944999420535",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeDatabaseUserStatus"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "9b0a90e6-bee4-3770-8570-75e543ddfff2",
    "name" : "Change password for mysql user - 204",
    "request" : {
      "urlPath" : "/mysqldatabases/Jaime+Oberbrunner/users/sergio.donnelly/password",
      "method" : "PUT",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Miss+Carola+Towne"
        },
        "user_name" : {
          "equalTo" : "adina.bosco"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9b0a90e6-bee4-3770-8570-75e543ddfff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeDatabaseUserPassword"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "4b6afbbb-88db-31cc-96ba-53191b1eaa68",
    "name" : "Delete a mysql user - 400",
    "request" : {
      "urlPath" : "/mysqldatabases/Mr.+Inell+Effertz/users/samual.schaden",
      "method" : "DELETE",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Pennie+Larkin"
        },
        "user_name" : {
          "equalTo" : "candy.volkman"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4b6afbbb-88db-31cc-96ba-53191b1eaa68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDatabaseUser"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b3aaffa7-cc37-3409-bce0-d10cf1425480",
    "name" : "Delete a mysql user - 204",
    "request" : {
      "urlPath" : "/mysqldatabases/Laquanda+Beier+MD/users/serafina.funk",
      "method" : "DELETE",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Felice+Dare+I"
        },
        "user_name" : {
          "equalTo" : "gilbert.collier"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b3aaffa7-cc37-3409-bce0-d10cf1425480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDatabaseUser"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d2edc612-c24d-3789-994e-5b204b5f6c05",
    "name" : "Create a new mysql user (application/json)",
    "request" : {
      "urlPath" : "/mysqldatabases/Mrs.+Dell+Willms/users",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Mr.+Emma+Kovacek"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"5st9lpog4naeqj4jrhx6r3v48\",\n    \"error_code\" : \"ovqjjlzltpvdt7kdmoube2vwmlsw8gqfokglurh06cyk26pcpwdit6qjb21r36p97dtg0sedzcyw3pnmcnmhmqqssntyrvvenm6sw1ffb2mu89qewpgzr3xnnnbk5ysp2hzdj4dgmtny0kex7tcodeyrs3w3pfgyor\"\n  }, {\n    \"error_text\" : \"itf9l9b8z94krrhd5zg6bufjy7t8sony0ewbrtpyumqbdgyl2hjpvaodevxu355q6rfylzzv9dnehu6mxve16urytigeirxomtqruugvliqb4fo\",\n    \"error_code\" : \"fedtoeasrn2h5puqcqrnlpuh5k32p7jhj81r7wttfo9e4tg61mvx5re1575ec8xo0cntac46032zbwrm9acfqip74o0tkbjqs1kt6i4m3ybsx3kmi6lnjp3iam8dxnwqscix9bw52jkp3hrr2ymbp9vjr4d80899s2nrum5sqsj286nt7tf1r8ut7zz0omquv8m\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2edc612-c24d-3789-994e-5b204b5f6c05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateMySqlUser",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "16e49cc6-e368-32c2-b96c-ea199cdb9689",
    "name" : "Create a new mysql user - 202",
    "request" : {
      "urlPath" : "/mysqldatabases/Dr.+Blake+Hansen/users",
      "method" : "POST",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Irvin+Boehm"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "16e49cc6-e368-32c2-b96c-ea199cdb9689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateMySqlUser"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "17688a88-85de-3369-859b-21522d1c880f",
    "name" : "Overview of mysql users",
    "request" : {
      "urlPath" : "/mysqldatabases/Pasquale+Rutherford/users",
      "method" : "GET",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Carmine+Kessler"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"rights\" : \"read_and_write\",\n  \"name\" : \"Larae Kovacek\",\n  \"enabled\" : true\n}, {\n  \"rights\" : \"read_only\",\n  \"name\" : \"Rosette Rice\",\n  \"enabled\" : true\n}, {\n  \"rights\" : \"read_and_write\",\n  \"name\" : \"Thomas Hoeger\",\n  \"enabled\" : true\n}, {\n  \"rights\" : \"read_and_write\",\n  \"name\" : \"Rosa Morar\",\n  \"enabled\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17688a88-85de-3369-859b-21522d1c880f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDatabaseUsers",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/MySqlUser"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "376656e9-b896-3498-b96a-4d5933dddfe9",
    "name" : "Get a specific database",
    "request" : {
      "urlPath" : "/mysqldatabases/Ms.+Jeramy+Lueilwitz",
      "method" : "GET",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Scottie+Veum"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actual_size\" : 1695045460,\n  \"hostname\" : \"Mrs. Edwardo Beahan\",\n  \"account_id\" : 819921380,\n  \"user_count\" : 1434898,\n  \"name\" : \"Aubrey Mertz\",\n  \"max_size\" : 546447421\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "376656e9-b896-3498-b96a-4d5933dddfe9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetMySqlDatabase",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "account_id" : {
                "description" : "The account id for the database.",
                "format" : "int32",
                "type" : "integer"
              },
              "actual_size" : {
                "description" : "The actual size in MB for the database.",
                "format" : "int32",
                "type" : "integer"
              },
              "hostname" : {
                "description" : "Hostname",
                "type" : "string"
              },
              "max_size" : {
                "description" : "The maximim size in MB for the database.",
                "format" : "int32",
                "type" : "integer"
              },
              "name" : {
                "description" : "Database name",
                "type" : "string"
              },
              "user_count" : {
                "description" : "The number of users.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "04160322-3cd7-3612-8e14-88f41cce24ba",
    "name" : "Delete a mysql database - 400",
    "request" : {
      "urlPath" : "/mysqldatabases/Delcie+Rau+II",
      "method" : "DELETE",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Daine+Rempel+Jr."
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "04160322-3cd7-3612-8e14-88f41cce24ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDatabase"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "396d9854-b7b5-36df-8d99-2a7734aa7aa0",
    "name" : "Delete a mysql database - 204",
    "request" : {
      "urlPath" : "/mysqldatabases/Maud+Tromp+MD",
      "method" : "DELETE",
      "queryParameters" : {
        "database_name" : {
          "equalTo" : "Ms.+Madalene+Langworth"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "396d9854-b7b5-36df-8d99-2a7734aa7aa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDatabase"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "9a16d4f4-3e7a-3a08-af40-83410a509f2b",
    "name" : "Create a new mysql database (application/json)",
    "request" : {
      "urlPath" : "/mysqldatabases",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"j53iblkbzygpn5kltgpxd0x7i46dbbo6o0jl4vmiw0lettpzohahfgmjpq4rnbc5msuf427y2fdw4i6nt9wmfugnv\",\n    \"error_code\" : \"7wynz894r\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a16d4f4-3e7a-3a08-af40-83410a509f2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateMySqlDatabase",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "a4a260b8-9fde-3cc3-907f-75fd26439b0b",
    "name" : "Create a new mysql database - 202",
    "request" : {
      "urlPath" : "/mysqldatabases",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "a4a260b8-9fde-3cc3-907f-75fd26439b0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateMySqlDatabase"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "6f2e43e9-6d8a-3bd4-83a5-0f939ac8fd32",
    "name" : "Overview of mysql databases",
    "request" : {
      "urlPath" : "/mysqldatabases",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"actual_size\" : 381508889,\n  \"hostname\" : \"Marcelino Price\",\n  \"account_id\" : 790313612,\n  \"user_count\" : 140702077,\n  \"name\" : \"Josefine Lebsack V\",\n  \"max_size\" : 2056033404\n}, {\n  \"actual_size\" : 568533451,\n  \"hostname\" : \"Florentino Marquardt\",\n  \"account_id\" : 843065029,\n  \"user_count\" : 1903745745,\n  \"name\" : \"Sam Howe\",\n  \"max_size\" : 161671642\n}, {\n  \"actual_size\" : 210458174,\n  \"hostname\" : \"Miss Franchesca Gleichner\",\n  \"account_id\" : 284126016,\n  \"user_count\" : 1790200055,\n  \"name\" : \"Ms. Newton Gorczany\",\n  \"max_size\" : 1793224075\n}, {\n  \"actual_size\" : 1079516183,\n  \"hostname\" : \"Dr. Geoffrey Dickinson\",\n  \"account_id\" : 1961976072,\n  \"user_count\" : 594365630,\n  \"name\" : \"Mr. Sherman Wolff\",\n  \"max_size\" : 151729633\n}, {\n  \"actual_size\" : 187975263,\n  \"hostname\" : \"Orlando Wehner\",\n  \"account_id\" : 926871339,\n  \"user_count\" : 675194218,\n  \"name\" : \"Ms. Hiedi Witting\",\n  \"max_size\" : 1085297422\n}, {\n  \"actual_size\" : 372035718,\n  \"hostname\" : \"Brook Upton\",\n  \"account_id\" : 1950098744,\n  \"user_count\" : 2069620744,\n  \"name\" : \"Rufus Shields\",\n  \"max_size\" : 644030930\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f2e43e9-6d8a-3bd4-83a5-0f939ac8fd32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetMySqlDatabases",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/MySqlDatabase"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "66d33cd8-aea6-3a75-8cca-1926aa650713",
    "name" : "Configure an extra smtp domain (application/json)",
    "request" : {
      "urlPath" : "/mailzones/Shona+Abshire/smtpdomains/Maria+Flatley",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Basil+Hartmann"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"64gyu2obgog2klbahdlowi004mhtd6ctzkl286zu7\",\n    \"error_code\" : \"sjxu3w4svnfklymqhufnb5kc7vgrw2epdxjbyve7m2x7i6acxc7wufc6cmoks2vveznjaqpmixgy6jpvv01v054ifc3adp9causesajwm2b9oirriuxnf088gtrgigkkd8r0n7iua4idxeoj6mt9oy8jwxij4f8qviumlob42v291w49nbr4unf\"\n  }, {\n    \"error_text\" : \"lfgr0y2a0uqxdyse26h5zem89vqi9cpvdwf\",\n    \"error_code\" : \"iphmemx1djjkwrnchzqh6u7vkgrb0gzeh0b9fak3nrig58do36213hb30df4qcj0g4e2w88tqmcspxk1j9aqkncczzcslunovlw3nkxnistgxklmi3y3yyxflqrx6oejitwbwn3wrdysjjobypz2zug7qmmdksl09fa23cdhps\"\n  }, {\n    \"error_text\" : \"fxpushs7vic1ml2ejea6sonihgxukfm4xe6j4d0h94w4eougo19bkmk7c9tav6qs5pttwysapsplvjvxjtcottrg6q29re5e1y90s3k8j3ysx25o61e3nwtld\",\n    \"error_code\" : \"58sghrvcp90ut4q13wkjvwyz3galfee1w8jmocoe7g5mlxjcoyfpchjmphtaesetxl6djzjqycbt8gn2kayedhc8r1xon962ptny9li4vh470d93r8mjggov4o0jinngj2zg1t70t0k4f3tnvdzszau15jn6r7k44kh0xihqd4o6bw0\"\n  }, {\n    \"error_text\" : \"h082pt5yitdpjw3j00\",\n    \"error_code\" : \"438e0rmc0nz7arne91z26uore9qj9odpyksw2pw7z6rp\"\n  }, {\n    \"error_text\" : \"1lnvv640if34pzfpwaixi3ao5tnhvhcgpf4mpmxddpjrs50gytcevipmxrhftwaxdbs890y48ksfjlhtgpk4dwlb47el6nl4n3tu1cjlv777jkxife674ydwwuus5r6j\",\n    \"error_code\" : \"hwqdyds5nuk8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66d33cd8-aea6-3a75-8cca-1926aa650713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureSmtpDomain",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "ba926655-19a9-3752-a662-844cc10d902c",
    "name" : "Configure an extra smtp domain - 202",
    "request" : {
      "urlPath" : "/mailzones/Tuan+Satterfield/smtpdomains/Pat+Hartmann",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Chantal+Hermiston"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "ba926655-19a9-3752-a662-844cc10d902c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureSmtpDomain"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "0ee7a710-a4fb-3490-9a26-ee73fc3c3785",
    "name" : "Delete an extra smtp domain - 400",
    "request" : {
      "urlPath" : "/mailzones/Pablo+Bartell+III/smtpdomains/Leandra+Skiles",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Mohamed+Schinner"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0ee7a710-a4fb-3490-9a26-ee73fc3c3785",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSmtpDomain"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "f295c79d-15b9-3d55-b0f7-7bb132fe936e",
    "name" : "Delete an extra smtp domain - 204",
    "request" : {
      "urlPath" : "/mailzones/Ward+Heathcote/smtpdomains/Stanford+Corwin",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Monroe+Ondricka"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f295c79d-15b9-3d55-b0f7-7bb132fe936e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSmtpDomain"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "3b1b8803-1de2-347c-88c1-9fba5d2b0c87",
    "name" : "Create an extra smtp domain (application/json)",
    "request" : {
      "urlPath" : "/mailzones/Clement+Jacobi/smtpdomains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Jesusita+Zulauf"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"c0hhwu0bhjfcoz1i36y0yatrzkelxk5bo8fha02khraz69vzr156xqmvx7d9rnymibbubbb5dxuhrqwpw5jcpf324g9u0w8kua4yr2qm57ebk7oxto5amnxkt8yh3azbd9ggaqrpxa8jt8j7vhypjd30gg3sc2\",\n    \"error_code\" : \"zl11047jfpqhp2fjomwr0lr9ekwwa6rps38d7etaxiubgr41jwk39z9gnshp36c1hefa7h3fd2izdjva4ibdu8gw389pt55gjbpjhhtbzdrocfnubk\"\n  }, {\n    \"error_text\" : \"whsn49paf3igzksvcfcryuo8srqpnrgxvroaw4639kucr7r80cb0fyg3h4e0ap\",\n    \"error_code\" : \"k5akfxg6dk89ydlq47tckiov6xr4tdg1c041f0t3lanmiyvoh14tlzipaw8b7x5pm0rnpz1zkns7sytnbrtit6qozvij6lxas0ko8s9tktnjsso8xsuwsdnnmqzodqslpiqysiti4younww11n\"\n  }, {\n    \"error_text\" : \"g5j1uqe48u6xfhb7wj6yimfldzap3nr1omme\",\n    \"error_code\" : \"dgfio85n8qmsrpyspe\"\n  }, {\n    \"error_text\" : \"vyni3zivzkwjr5s03v8lt1igkx2pf0fnqup8eiei9i4l0bjkh807c9hmarix27d6n0y1kl\",\n    \"error_code\" : \"wioebavpkwmhxc5jvhbg9j140lycnbhrr4zi8igdej9rqqscp37qbsglyj2vixukt01oc5hc1co8vp0q4dxn6mljas1ub9q4i4na7jnrm2v6p4x5fdwnato\"\n  }, {\n    \"error_text\" : \"hd6281i7gt47qj0u3gdx7n94w5w0vo07fco1m6nzgtd41n8c74z2ab0m1q97nkuniud9niecb4m6i0ssalvpn4076w7p8e8va394odjevrn0qtad83kq4q2yf90mxjfyzyk3j8xcxaohrev8hxbdfm9rgbm6fqzt19ubfutaxdhy87ik5\",\n    \"error_code\" : \"k1arktenomv5pg0kvq1z1zy1pvcqc8nka0f4pjdb460wx7q00h11z44lybz3ayu8z3b3k5msk7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b1b8803-1de2-347c-88c1-9fba5d2b0c87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSmtpDomain",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "4f32fbc8-c255-3953-b3e5-f2b9a63db9bb",
    "name" : "Create an extra smtp domain - 201",
    "request" : {
      "urlPath" : "/mailzones/Mrs.+Graciela+Nikolaus/smtpdomains",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Cassaundra+Brekke"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "4f32fbc8-c255-3953-b3e5-f2b9a63db9bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSmtpDomain"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "d15b9860-da23-372a-b2be-fcded399d6ed",
    "name" : "Delete a catch-all on the mail zone - 204",
    "request" : {
      "urlPath" : "/mailzones/Cordell+Romaguera+III/catchall/5avh6gvpw7d53n8nkfwddxcjniav98rtageqw8z14ye9afpfw4jjfzep3ib3pcnuvw27zhw7p4b2z986o9vk4rm8y3fq0w54pvc07hdgcxydi884lp5ec25ctsts87f8w3rl4nuro854e05udulzwbu80nae3ikaj",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Christena+Romaguera"
        },
        "email_address" : {
          "equalTo" : "181y5i370s835mqlxeabhhzitum19tqvtxj9pbkfu8m4k9ghp91j3pp9edoc1s3en8cu24nf4zwdqa5k66tbwolpde24tu4fovomv0e5lqpx1zrcn4dobfkyptz1c"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d15b9860-da23-372a-b2be-fcded399d6ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCatchAll"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "936d4c4e-81ea-3e11-b470-3a0db2757c94",
    "name" : "Create a catch-all on the mail zone - 201",
    "request" : {
      "urlPath" : "/mailzones/Dr.+Jeramy+Bailey/catchall",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Travis+Gutmann"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "936d4c4e-81ea-3e11-b470-3a0db2757c94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCatchAll"
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "90bdc699-2323-3566-8a2e-02d78517b650",
    "name" : "Configure anti-spam for mail zone - 204",
    "request" : {
      "urlPath" : "/mailzones/Dillon+Lebsack/antispam",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Earlene+Bradtke"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "90bdc699-2323-3566-8a2e-02d78517b650",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureAntiSpam"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "635350f4-1153-3262-928b-3d7b4519e3a3",
    "name" : "Configure a alias (application/json)",
    "request" : {
      "urlPath" : "/mailzones/Jolynn+Grant/aliases/63dqt9dxhspqqypi7fvcnbq3jzzs0ouhsh",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Dr.+Lester+Ziemann"
        },
        "email_address" : {
          "equalTo" : "ild7nsq5c7f"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"ad7dxzvhya0tgh9mlezjmeokiovglsa802jxnbl8g4gwzv0h7orlxfpnizilo63bmql35ubg093pyb4q8dvvpwgivbhr9e33ez0xy3dyeebt60hy07ar4eyk8hw5d8uorm1djym2n5uarf3xb5\",\n    \"error_code\" : \"nnuxqoyxs32qe2xepslya\"\n  }, {\n    \"error_text\" : \"obsgx2ynevgdjpv89vquodf7ptqlqxylbultowzrtxy31wkd46yy47e\",\n    \"error_code\" : \"0sj5axegff4h5wh3e37e8746l9a7tivy8cxdng94je9crxcq89ztmpx2djrth0e4gyi0rgtk5c2yn58lg8n5px1n4e9wbv1m4yia5jab3d6gnw2h9yq24cvqu6ou3v7900vvus7aq9t3r25qkc6or8k6bf4\"\n  }, {\n    \"error_text\" : \"93m27fv1ai18vdj87wnly9yvzy2s28p6dr2qpn0ahgbztirscfrwwjjevjwg0uldo0nxks1vgdhh4h8gnbev8v37649p1u1g3yl1q4c9bgemz4gm3uo1pxirzm97wm1ed73nvt0by2su8xtmckwcc131utxt79pwn5qz1qlaea7w5rdz\",\n    \"error_code\" : \"fdg486651k8budo89vm3fevbo\"\n  }, {\n    \"error_text\" : \"8qhpj3neww50wuesdyw704cmrdkl3v7rm16zuuvmmnad26zgv511a4wd9vfaww9ipt5ufhpxth3lbvju0v2ffa1xbtb65q4r9ihvdbdcn13fq57c0\",\n    \"error_code\" : \"jby3dlyoqk0js3nql0cvkl1vodn4v0kt\"\n  }, {\n    \"error_text\" : \"it3wj6w9f9cybwf45yh7u56cn7d9wdlpxtpq5mjphaam106x2rzcooz7cod27ypnxgg0kkmcy4k2qrhdvmdcaj9ap8ymakrv7gbiphndo6y3l9gdvnwa0ezmve5a2bcnujn8d8gk9hnxz6b0qpspdhjqtbpvzwuqni3uxsci1904s7mv11gaacra\",\n    \"error_code\" : \"dqtf4ym1zlsh2m1cvtqf3qpb9zi5qq4dhdehvogs7vog05ep7jw440k96jsd36nrbruy8eqsyl9mp1chv47pak9d4w4y96l1qq04v9up0ylcpyyusybys0vw2yx5tm\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "635350f4-1153-3262-928b-3d7b4519e3a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureAlias",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "c8ba9ac1-27e8-30ae-856c-4df3fa06e8b0",
    "name" : "Configure a alias - 202",
    "request" : {
      "urlPath" : "/mailzones/Joey+Rutherford/aliases/n0ey3wo5ak00ykm2mgzjq",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Pierre+Feest"
        },
        "email_address" : {
          "equalTo" : "t8oe68pn7yvl4yai62ep4qmqyfm6wx4rlb3f24lluwrm98f3x7e7pes7la817dvn4vtya4jgul89nf9m1v9857mwi2699xymedtnatyuh8vcxwm6"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "c8ba9ac1-27e8-30ae-856c-4df3fa06e8b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureAlias"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "6f3993f0-c48d-38b8-833f-2119a3f5eba8",
    "name" : "Delete a alias - 400",
    "request" : {
      "urlPath" : "/mailzones/Mr.+Dewey+Hartmann/aliases/2ca8cyb78e47a9asgounf2c5hcwwfsn1xz2tne6",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Tisha+Schamberger"
        },
        "email_address" : {
          "equalTo" : "ox3p"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6f3993f0-c48d-38b8-833f-2119a3f5eba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteAlias"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "2326358f-a1f3-3fcf-a741-481b733f25c3",
    "name" : "Delete a alias - 204",
    "request" : {
      "urlPath" : "/mailzones/Elsie+Quigley/aliases/ad5xlysxx2uhmi0tk494dzjnnjw4ko8j236smdv80ps281qy1lraoo51d7ked8vhvo3dg96ym4zd2jfjersnyc310mvo3cq698tb0j7k7fv3qzyh7543xcgubiv6npid5mcqm69pmlqa61bbo57i0v4croa47qmojkb6z25yz4u8siqe7ewxzi0djcwupgup",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Albert+Heidenreich"
        },
        "email_address" : {
          "equalTo" : "cb39melsmscyf8dimxtytwrgjx0"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2326358f-a1f3-3fcf-a741-481b733f25c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteAlias"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "15eed84d-482d-3a8c-a3ab-bf1a8786f61e",
    "name" : "Create a new alias (application/json)",
    "request" : {
      "urlPath" : "/mailzones/Jacqueline+Kessler/aliases",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Son+Emard"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"eeomovf3t0n\",\n    \"error_code\" : \"mta3s4t7ud77pjced2htpb43ex9lrcm5jc9qoat3nn55o6pjzh7hfo7ppegz5g5fw0g11zuwxopsul8q93fa0asqzil2kfhgmo7mvz4eth6lr49g9z245hoiyaubfvguqdu1nuzhbgcf6u77\"\n  }, {\n    \"error_text\" : \"k1uo94oggoxvjjq5bv0201hmpwk8mugt1vn1f104496upfkuiqvt5vz73r67ewmrvcmkxatf\",\n    \"error_code\" : \"6f1y9tthdytapyom911z4nbtncwclr4ciet7ddhs6datik5qodppk5z7t5xtrsok0enbu75qvdrls5vv\"\n  }, {\n    \"error_text\" : \"r9m3mw7x5shvullfxwwkdx34r05i5cq5qszqcblibbzzm2zkhxkuqerq8td1t8trzkfzw8ox4spd\",\n    \"error_code\" : \"kj2vnd43lhzpeec64498u7wio2y4wla30k\"\n  }, {\n    \"error_text\" : \"8peddtwijb901uz0xnre1mcpsuhdkxx755c1umr41gtgy5ko0hz42uqokz8y6hezre02gi9qhzczxkx1xaj9yks9glozcscaas6pgadsy1qg6k23e6su2bf1w\",\n    \"error_code\" : \"d0691gar3a9p5bghqmcous5agevmdo7uprcfp7inscxrkj8tkazs3cj0c6sw9nl67kmik9izkv1ombwan8tv5dq79albfleh80w\"\n  }, {\n    \"error_text\" : \"f3tlmlnaku0byqz5cuwabxschhml7q09tr1gj2s745z9nn7rx4n5tv5\",\n    \"error_code\" : \"vpzwqkgvpw2abgjzyevodc5hsx9u7gyavyg14pm9cvy454x2mw27serjodby2wpjoziwd0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15eed84d-482d-3a8c-a3ab-bf1a8786f61e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateAlias",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "fa7aa953-2b70-326f-9f3d-4942c2d9c43e",
    "name" : "Create a new alias - 201",
    "request" : {
      "urlPath" : "/mailzones/Ardelle+Dietrich+DDS/aliases",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Latarsha+Schiller+Jr."
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "fa7aa953-2b70-326f-9f3d-4942c2d9c43e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateAlias"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "dc2209dc-4338-39b7-998d-86d1eed72801",
    "name" : "Get the mail zone.",
    "request" : {
      "urlPath" : "/mailzones/Earle+Spencer",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Dawne+Rodriguez+MD"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"aliases\" : [ {\n    \"email_address\" : \"bjrd9pvvgur6rll6w1req9uq2skxyl6ezsu\",\n    \"destinations\" : [ \"tsbta3h2bnivm\", \"meskr8pi8c161iutctt1yl7kgyhasoog0qma26hofbj28eu1prf6pedt6x2u3sppaz0lbl65ywuesous1h3w44pfohjhaha0o36whsjpkcx53k4w334g25sxybmndkalv407jwtnmbq8jlnjgh332o1of509orpbn8pi3cusrxfgqbgdnncwa2d0781lba8fvpnacl4\", \"wqjl7dbotqkchl9nbzhzzk7z4mv0z2a1jc2m\", \"7eyuzhle9j6p5whmkfgy\", \"2i2x10tq6qn16x1fowsvjvisebmmmsgvo1gu2l9icva909xpw\" ]\n  }, {\n    \"email_address\" : \"kbkq85ben9zuswgy2n83dtb0of345qizwdgfban57og5jzj3xgk0r0290cz2lmtkkjupqdmhxcazwm3gfb2pfzn40r8losqwss815px9jgc7aj3gecp93ilifd4oaa3vc1pzt4jlv9jr6f\",\n    \"destinations\" : [ \"u7m5yoyfq8wqdbz5yj39la0yw8\", \"afdn1r4hjwbegvupp39w5jdyg5ccakg7lrov3qmmamd95jjcclr6dpu339vlgzxuu8506k21lqmu0dauo3pjcjizveobyaz667t623bcw9no23vh1wgiu593502jb79yw3k0fh9lem81d773eo8xbrjmhq7wyh0je9us10h3sip7vfqjc0d2v\", \"9e5tdiid8wvo9cjkl3iwu6fntgqpt5r9qnoxnzeu887jd39skefgi0agdceplqnm57z2twdkr4tovjz74omsgx6l32e9t3wo\", \"dgqcfl72avqn9kx0phnowc635x23g0z8rolb1klw8jce6ak5k3hay191wz78buv0xqbztsedmjdrjx3hl6r8ux5xda6tkb5\", \"xlskzhssjjqbyp68\", \"mdalh1a06lcdk61gontgdxoxu7uqo8y3o2oqn07lxwfckzsu6m8nqw2866e7rrnlvotd9rpnb9qn3polfmnr4cne7jl9gta2r1gv0j9is15qmtsukx0ci8sj5wy9qgo0eojjij92gpgk\" ]\n  } ],\n  \"name\" : \"Nikia Bins\",\n  \"anti_spam\" : {\n    \"allowed_types\" : [ \"basic\" ],\n    \"type\" : \"none\"\n  },\n  \"available_accounts\" : [ {\n    \"account_id\" : 222302079,\n    \"size\" : 1863044888\n  }, {\n    \"account_id\" : 1929347897,\n    \"size\" : 89389469\n  }, {\n    \"account_id\" : 771234931,\n    \"size\" : 1022629134\n  }, {\n    \"account_id\" : 136075449,\n    \"size\" : 517991152\n  }, {\n    \"account_id\" : 1635478845,\n    \"size\" : 2058029130\n  }, {\n    \"account_id\" : 1779163269,\n    \"size\" : 775396808\n  }, {\n    \"account_id\" : 215949209,\n    \"size\" : 909147131\n  }, {\n    \"account_id\" : 1522936570,\n    \"size\" : 1052785415\n  } ],\n  \"catch_all\" : {\n    \"email_addresses\" : [ \"p9qrn98ckomvjgqutb8nniyqi5b6a57jsx35a84yxvbid7cg6d4iemqannwb7yczzwhei69dnqmq6mwb81fbszk4j46zsdknxyyckbh5la0chn5lbqlrn6o2pgho7bf7b7k3k9qhgmwfoojxwpwttbmbl9sbrd5zo4re6ibrvawsm6uimxau\", \"znu5enhx15qvwcek51l4h4gxw3o1gh7ydi3n51wjntchi6i8k4\", \"9ijv9dabv78vf3p6letd5gvpag099c7ww9capjnxxzokgheq6sp81wdgl3o7ohwk03bz207syurndurp6io3q653orht1g3zdz3dm\", \"sq8xazeovxcb1vpi0fsec2ktgs99eenojcsdyj17hvifxzfxwiccoynbig174yvic9tyrcq8nei1igorve6lmk3osnl2t2qkfm1s406ec\", \"w4l7lk6duqn\", \"6876ss21ypcll6a5j58q29rhami\", \"kvc1hpq26scg1vp8tjzts8u7xj9gwysel5yxc5nufommzmcyu7o3ftotbk2dqodhe4rdw6zcbbowjpkfhujftd8dgtul5ylmk15apqotr1rkt6hcvi01i0eh9k517z58j4iq7r\" ]\n  },\n  \"smtp_domains\" : [ {\n    \"hostname\" : \"Nada Okuneva IV\",\n    \"enabled\" : false\n  }, {\n    \"hostname\" : \"Phillip Deckow MD\",\n    \"enabled\" : false\n  }, {\n    \"hostname\" : \"Wm Wisoky\",\n    \"enabled\" : true\n  } ],\n  \"enabled\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc2209dc-4338-39b7-998d-86d1eed72801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetMailZone",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "aliases" : {
                "description" : "List of aliases on the mail zone<br />\r\nAn alias is an e-mail address (alias) that automatically forwards received e-mails to another e-mail address (destination).",
                "items" : {
                  "$ref" : "#/components/schemas/Alias"
                },
                "type" : "array"
              },
              "anti_spam" : {
                "$ref" : "#/components/schemas/AntiSpam"
              },
              "available_accounts" : {
                "description" : "List of mail zone accounts with their mailbox size.",
                "items" : {
                  "$ref" : "#/components/schemas/MailZoneAccount"
                },
                "type" : "array"
              },
              "catch_all" : {
                "$ref" : "#/components/schemas/CatchAll"
              },
              "enabled" : {
                "description" : "Indicates whether the mail zone is enabled.",
                "type" : "boolean"
              },
              "name" : {
                "type" : "string"
              },
              "smtp_domains" : {
                "description" : "List of extra smtp domains on the mail zone<br />\r\nSMTP domain names allow you to link multiple domain names to a single e-mail address.<br />\r\nE-mails sent to an SMTP domain will be caught by the respective e-mail address on the main domain name.",
                "items" : {
                  "$ref" : "#/components/schemas/SmtpDomain"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "b5073d0f-e7a1-34d6-9eac-ff6ebceeb0e1",
    "name" : "Change password for mailbox - 204",
    "request" : {
      "urlPath" : "/mailboxes/Tanja+Block/password",
      "method" : "PUT",
      "queryParameters" : {
        "mailbox_name" : {
          "equalTo" : "Edwardo+Rau"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b5073d0f-e7a1-34d6-9eac-ff6ebceeb0e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeMailboxPassword"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "605a2826-74e9-3b9e-b883-04e5b9d15b4e",
    "name" : "Configure auto-reply for mailbox - 204",
    "request" : {
      "urlPath" : "/mailboxes/Coralie+Streich/autoreply",
      "method" : "PUT",
      "queryParameters" : {
        "mailbox_name" : {
          "equalTo" : "Jody+Kuphal+III"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "605a2826-74e9-3b9e-b883-04e5b9d15b4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureMailboxAutoReply"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "8f1216d4-402d-36ee-92b7-d71a64909e3a",
    "name" : "Configure auto-forward for mailbox - 204",
    "request" : {
      "urlPath" : "/mailboxes/Clemente+Lindgren/autoforward",
      "method" : "PUT",
      "queryParameters" : {
        "mailbox_name" : {
          "equalTo" : "Danilo+Zieme"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8f1216d4-402d-36ee-92b7-d71a64909e3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureMailboxAutoForward"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "b061f9ce-8aee-385f-be48-c564d3afe981",
    "name" : "Get a specific mailbox",
    "request" : {
      "urlPath" : "/mailboxes/Tuyet+Breitenberg",
      "method" : "GET",
      "queryParameters" : {
        "mailbox_name" : {
          "equalTo" : "Svetlana+Kozey"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actual_size\" : 557690615,\n  \"auto_reply\" : {\n    \"subject\" : \"4rsytrcfiwkkx99tmyrlttdhhq1dp43ofl16i9j2ysw2625l8poflau0tlfaufm9q13n2rshafwxg9h4g8ugezp3qxig6irc7kokq702mhrymi8k4733xmzsu2it4it5sxzqd7nb63m098rrmfd9eg7qvt82ld6t74hpgwhfm0co9p2ngj7dkyo5auuikwoii\",\n    \"message\" : \"Numquam est distinctio in perferendis. Voluptates voluptates tenetur necessitatibus et culpa odio ex. Sint vero voluptas quasi molestiae sit. Omnis aut non eveniet reiciendis. Dolor ut rerum fugit ut.\",\n    \"enabled\" : true\n  },\n  \"name\" : \"Spring Botsford\",\n  \"login\" : \"oqte5svp2u9hcm09i7rc2oxyrhnsmqo3z5iycqs12u96j8lag195u0pb8dfupujtpbn0j0gbp7id4c2th1ys1xq6igyw8m37ohgy7vz6ypk6axirreg6bq8iwaw9mqhypvxhfm0ancv\",\n  \"auto_forward\" : {\n    \"email_addresses\" : [ \"f58ufk3kzcv5pz65ir150hvt45amm2m0dfif73cllu1pzpfcoot8xct\", \"bhymbwuf972bsbh3ide3b49sxg9e1hd6k163n3dfld7ga595hcqnc0suwoe5ky9pb8ffmclk07h70xupt4gt2jlz5qqfabw5t7n\", \"utex3obpwyctd39lsivuddvhu4b0kn4i5bqungf0flmwo48fna2c6nrct3qb8lb\", \"md7132sq6rksl5hx8n3jj1i3z11fm2vgyazvm5806gr6w83ao8k7omk8lavwv0dc3gqaropduami7e7eenejm1dhxufppqjc0t3f81gcku0tj951ako6\", \"14zb727jbfmarr849kberc6dtjliusvae2hzgtj58gxome8wrwr0o2135mkimg0kqh7bl5xd4b1tpb7pc0ku3h42xiqbisz8u5wpffao6sqydjdmder0vjbryeb\", \"2byis31velg2osl0u3dztmatg7gxdfswqzn875537odbj9ldkyg8o5wc3vnlrcyjybte7qq7o7gyv2wabc25lp6x8aj4idi72jw1mtl5bvoq8yp0wcrv41r6plqmz5di284tuwu2ydb3zeolkincmug4kzlco6mm2tk4agwuu8omb5amo2yblwxv6b01oxjl9tq4v8\", \"a9hm6sbomqrn0620eg30vvg3w345vlkgu40qt8pz5ickpwqs3rw81firyujzn5wzeci22x4t7hqhdvzsgydehymbsmxk7xgc3i1yrvbt2rtzusirqcx6lntp9zad7zuv1u33a82gi4xvm6mac\" ],\n    \"copy_to_myself\" : false,\n    \"enabled\" : true\n  },\n  \"max_size\" : 1887762074\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b061f9ce-8aee-385f-be48-c564d3afe981",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetMailbox",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "actual_size" : {
                "description" : "Used size in MB",
                "format" : "int32",
                "type" : "integer"
              },
              "auto_forward" : {
                "$ref" : "#/components/schemas/AutoForward"
              },
              "auto_reply" : {
                "$ref" : "#/components/schemas/AutoReply"
              },
              "login" : {
                "description" : "Login to connect with the mailbox",
                "type" : "string"
              },
              "max_size" : {
                "description" : "Maximum size in MB",
                "format" : "int32",
                "type" : "integer"
              },
              "name" : {
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "6343f214-abfd-3b17-9eaa-aea9945ea277",
    "name" : "Delete a mailbox - 400",
    "request" : {
      "urlPath" : "/mailboxes/Rosendo+Ortiz+DDS",
      "method" : "DELETE",
      "queryParameters" : {
        "mailbox_name" : {
          "equalTo" : "Olene+Hoppe+II"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6343f214-abfd-3b17-9eaa-aea9945ea277",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteMailbox"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "500b7c3b-7979-31e6-ba5b-a8e6992a034c",
    "name" : "Delete a mailbox - 204",
    "request" : {
      "urlPath" : "/mailboxes/Frank+Upton",
      "method" : "DELETE",
      "queryParameters" : {
        "mailbox_name" : {
          "equalTo" : "Noma+Torp+MD"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "500b7c3b-7979-31e6-ba5b-a8e6992a034c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteMailbox"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "a5c1a14a-96f4-3ab1-9b43-2e50f29b3446",
    "name" : "Create a new mailbox. - 201",
    "request" : {
      "urlPath" : "/mailboxes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "a5c1a14a-96f4-3ab1-9b43-2e50f29b3446",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateMailbox"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "384a7332-7250-3af8-8d94-6c78f6e67d37",
    "name" : "Gets your mailboxes.",
    "request" : {
      "urlPath" : "/mailboxes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"actual_size\" : 1737090239,\n  \"name\" : \"Antone Kassulke\",\n  \"max_size\" : 2085588032\n}, {\n  \"actual_size\" : 1491428969,\n  \"name\" : \"Byron Bartell II\",\n  \"max_size\" : 1191065739\n}, {\n  \"actual_size\" : 271460100,\n  \"name\" : \"Debbra Homenick\",\n  \"max_size\" : 461480098\n}, {\n  \"actual_size\" : 1838251256,\n  \"name\" : \"Wilbur Lueilwitz\",\n  \"max_size\" : 285710817\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "384a7332-7250-3af8-8d94-6c78f6e67d37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetMailboxes",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Mailbox"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "ed1996c8-03b7-3efd-88d7-5933feba4f76",
    "name" : "Delete a subsite - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Martine+Grady+II/subsites/Geraldo+Thiel",
      "method" : "DELETE",
      "queryParameters" : {
        "site_name" : {
          "equalTo" : "Joesph+Wolf"
        },
        "domain_name" : {
          "equalTo" : "Clair+Lakin"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ed1996c8-03b7-3efd-88d7-5933feba4f76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSubsite"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "1806309a-4779-320e-aa5d-915e25e28508",
    "name" : "Delete a subsite - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Michal+Zieme/subsites/Kareem+Ziemann",
      "method" : "DELETE",
      "queryParameters" : {
        "site_name" : {
          "equalTo" : "Mrs.+Winnifred+Cummerata"
        },
        "domain_name" : {
          "equalTo" : "Lincoln+Kshlerin"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1806309a-4779-320e-aa5d-915e25e28508",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSubsite"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "9c336988-9661-35ec-8122-163961a2f472",
    "name" : "Create a subsite - 201",
    "request" : {
      "urlPath" : "/linuxhostings/Ms.+Kurt+Kutch/subsites",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Wilber+Cronin"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "9c336988-9661-35ec-8122-163961a2f472",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSubsite"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "dfa5e4b7-c2b3-3e41-99ec-432dbda3aab8",
    "name" : "Configure let's encrypt - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Tristan+Purdy/sslsettings/Kyla+Lowe/letsencrypt",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Mr.+Luke+Bartell"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "dfa5e4b7-c2b3-3e41-99ec-432dbda3aab8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeLetsEncrypt"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "464e5fb8-ec90-3d80-b40e-0c7e55721208",
    "name" : "Configure auto redirect - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Dierdre+Swaniawski/sslsettings/Dr.+Margery+Dietrich/autoredirect",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Jessie+Veum"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "464e5fb8-ec90-3d80-b40e-0c7e55721208",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeAutoRedirect"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "58fb545b-816d-343d-b07c-894edbba134e",
    "name" : "Delete a SSH key - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Miss+Stevie+Bins/ssh/keys/3r9g3qld933d3vud89sg6vqsq5ddl9p75mg5gfg3zhr8b10585zbqphv12htejsf70c4pgxxwu9ep4gyp90606j",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Dena+Beer"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "58fb545b-816d-343d-b07c-894edbba134e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSshKey"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "8e28e0d7-1dff-346a-8a26-e347087247b7",
    "name" : "Delete a SSH key - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Adelina+Hermann/ssh/keys/qv7f69no5rfb4pc2z1uozngwawmy6pz28d6wtmzdgiucuytnes01c9bc517w9",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Stuart+Padberg"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8e28e0d7-1dff-346a-8a26-e347087247b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSshKey"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "458b52c9-da02-3fbf-83b1-575c2d27df29",
    "name" : "Add a SSH key - 201",
    "request" : {
      "urlPath" : "/linuxhostings/Erin+Lang/ssh/keys",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Stacy+Rowe"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "458b52c9-da02-3fbf-83b1-575c2d27df29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddSshKey"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "4c19b6d9-beae-3137-b04b-16de7c040d68",
    "name" : "Overview of SSH keys",
    "request" : {
      "urlPath" : "/linuxhostings/Roger+Schaden/ssh/keys",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Kristeen+Frami"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"public_key\" : \"l5etos0soi78cd2enx7bzmc9zvlqw9br7bwv1lskj0kvlpp3jb50si36ru1hjpfxelqn6abr14bpbqcvqpq5alb8vrotk42pmeiumv6pcv4s9s884ih7thtbaeoj0ub0eir89w\",\n  \"fingerprint\" : \"b1ujgy02k9l6cc2p2cd04v100fwj5erx55gheagkwyra4ljpjzdezv3ifik9vlfjaz7pjjorwvas1bvuyxfpk6cu1xopw7fkrnyz902y4mj6byp8\"\n}, {\n  \"public_key\" : \"ybhfdsvfhtwboluo1ysxhhk83a1dotyat89xcpq83m4sts6aju073s9qj0x4k4cnfiq0lqis429md0o39kfm5hek5ntxmuv52u8q9n0p7sio9lpcze5wfnua726hdjz90zvjfckt2loalvxnhg772n6onpvvmvw5rmwp4w6j7ssmceo6blbvyxq\",\n  \"fingerprint\" : \"06czileihpx45jr8she6vls7t19dp7rvz55ni2nc1f248g8wy7b4lzj76mxe01fp8mzifddns89ggsxew4v3r1v11l1qnlie46ihiz51rpa17t2kjit7z8855d0t2bjb3fx4p0c4tt1e4lv7m96\"\n}, {\n  \"public_key\" : \"83ld1ut7ed53sar5etrhqz10ow2fp8ct3m2ri5xnbkdlgdzpkfg7gozycax99iykzvniixvj1yzkczrk58jbm5jv6of62wu32dxkwngtp2mk7jgkw0semp3a7j0jwnf5xw33djtb17bq6tcyxjkua98osldyo2fkto2b\",\n  \"fingerprint\" : \"2fkmblnw8qs080mmx434mt9y50c9o6ror\"\n}, {\n  \"public_key\" : \"pgn6olj20ni5ja8k43brmz39fewrusv45s2zqmn39nnjbck9isdu2uc1gj7tmte962syc94jcxty1tjnczpu\",\n  \"fingerprint\" : \"9trh8bmrookosdxjy3hhqd68wi02645dsbio1hynn22uigakm9gfwi3n4g3vsas90p5e55k\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c19b6d9-beae-3137-b04b-16de7c040d68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSshKeys",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/SshKey"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "9f144ffb-4234-385f-bc02-162f15adb9f1",
    "name" : "Configure SSH - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Darcie+Ruecker/ssh/configuration",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Luisa+Spencer"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9f144ffb-4234-385f-bc02-162f15adb9f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureSsh"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "b474a94e-8480-3f5d-b09e-4dfbd01f9851",
    "name" : "Configure SSH - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Maria+Rice/ssh/configuration",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Hershel+Brakus"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b474a94e-8480-3f5d-b09e-4dfbd01f9851",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureSsh"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "866b2a77-1b8f-34df-a005-382fa18569d6",
    "name" : "Configure HTTP/2 - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Tomas+Collier/sites/Misty+Towne/http2/configuration",
      "method" : "PUT",
      "queryParameters" : {
        "site_name" : {
          "equalTo" : "Ms.+Edwin+Kilback"
        },
        "domain_name" : {
          "equalTo" : "Ilene+Hessel"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "866b2a77-1b8f-34df-a005-382fa18569d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureHttp2"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "5a80f5e3-3860-3425-8be1-2131d8250ba9",
    "name" : "Configure HTTP/2 - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Heidi+Erdman+I/sites/Ms.+Joel+Marks/http2/configuration",
      "method" : "PUT",
      "queryParameters" : {
        "site_name" : {
          "equalTo" : "Judy+Rohan"
        },
        "domain_name" : {
          "equalTo" : "Mr.+Carlton+Kozey"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5a80f5e3-3860-3425-8be1-2131d8250ba9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureHttp2"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "71c9975a-8d5a-3ddd-b75f-c4729b5c8ea0",
    "name" : "Create a host header - 201",
    "request" : {
      "urlPath" : "/linuxhostings/Madeleine+Watsica/sites/Roselia+Lueilwitz/hostheaders",
      "method" : "POST",
      "queryParameters" : {
        "site_name" : {
          "equalTo" : "Leanna+King"
        },
        "domain_name" : {
          "equalTo" : "Elnora+Kassulke"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "71c9975a-8d5a-3ddd-b75f-c4729b5c8ea0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateHostHeader"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "230f07db-7231-36ba-a1c3-c50196750903",
    "name" : "Enable/disable GZIP compression - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Marianna+Heathcote+PhD/settings/gzipcompression",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Joseph+Wisozk"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "230f07db-7231-36ba-a1c3-c50196750903",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeGzipCompression"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "ddf79732-8adc-3a28-beca-5ccc2e60d4eb",
    "name" : "Configure a scheduled task - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Isidro+Tillman/scheduledtasks/6dzf",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Osvaldo+Fahey"
        },
        "scheduled_task_id" : {
          "equalTo" : "x89t"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ddf79732-8adc-3a28-beca-5ccc2e60d4eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureScheduledTask"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "85315456-c252-3ddb-b08f-b79b19c81767",
    "name" : "Configure a scheduled task - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Breanne+Swift/scheduledtasks/66qg",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Lowell+Schiller"
        },
        "scheduled_task_id" : {
          "equalTo" : "61u2"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "85315456-c252-3ddb-b08f-b79b19c81767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureScheduledTask"
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "7a8e609d-4925-3f4b-bde0-07dbdc0ba1d1",
    "name" : "Get scheduled task detail",
    "request" : {
      "urlPath" : "/linuxhostings/Harry+Crooks/scheduledtasks/8856",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Jill+Schmidt+V"
        },
        "scheduled_task_id" : {
          "equalTo" : "j6m5"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cron_expression\" : \"be0jef7x6kwwctm2m0qi4ysmkws6u4s54k7317vgxkg11gddtio799pru6x3e1twi7qil635exeqlu1yvztl6lar30l9ev5jqb1bg41ihwdurlb04mgjbed794g4bfybq6hbnwf42k6qgfnxw39irv7l68it9tqinuti5o1o1pnxjaopnvd\",\n  \"id\" : \"98gh\",\n  \"script_location\" : \"06hkm60vg5kmlr2dd9m79socmqxb29slm6ycttf340j7b6h3vtoxq374pafjkphcl756zvrsyxo7av980ssns4t8ke1otqtrxu5pef7k3ezdphujccx54848vk3ksg7cv76istade116l6nyfg4xhilgqy9luh9d5zh\",\n  \"enabled\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a8e609d-4925-3f4b-bde0-07dbdc0ba1d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetScheduledTask",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "cron_expression" : {
                "description" : "Cron expression of scheduled task.<br />\r\n5-digit expressions (*/5 * * * *) are required in the following sequence:<br /><ul><li>Minute (0 - 59, also */5, */10, */15 and */30 as every 5 minutes, every 10 minutes, every quarter or every half-hour are allowed)</li><li>Hour (0 - 23, also * as every hour is allowed)</li><li>Day of the month (1 - 31, also * as every day is allowed)</li><li>Month (1 - 12 as January to December, also * as every month is allowed)</li><li>Day of the week (1 - 7 as Monday to Sunday, also * as every day is allowed)</li></ul>",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Enabled.",
                "type" : "boolean"
              },
              "id" : {
                "description" : "The id of the scheduled task.<br />\r\nThis value is ignored for creation of new scheduled tasks.",
                "type" : "string"
              },
              "script_location" : {
                "description" : "Absolute path from this linux hosting to execute.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "469722e5-2e3b-3318-b2d7-714057012af9",
    "name" : "Delete a scheduled task - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Warren+Simonis+IV/scheduledtasks/98g9",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Marc+Marquardt"
        },
        "scheduled_task_id" : {
          "equalTo" : "071n"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "469722e5-2e3b-3318-b2d7-714057012af9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteScheduledTask"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "0f91eff4-74f5-365b-8c6e-9778079f7f25",
    "name" : "Delete a scheduled task - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Nathan+Mills/scheduledtasks/9sj9",
      "method" : "DELETE",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Dominick+Hermiston"
        },
        "scheduled_task_id" : {
          "equalTo" : "bprw"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "0f91eff4-74f5-365b-8c6e-9778079f7f25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteScheduledTask"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "a097e468-f173-3a37-8794-a87acfaf8c62",
    "name" : "Add a scheduled task - 201",
    "request" : {
      "urlPath" : "/linuxhostings/Concepcion+Dach/scheduledtasks",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Ramon+Kulas"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "a097e468-f173-3a37-8794-a87acfaf8c62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddScheduledTasks"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "2593649c-db9d-37d6-be03-172bfe1c28b4",
    "name" : "Overview of scheduled tasks",
    "request" : {
      "urlPath" : "/linuxhostings/Sherri+Crona/scheduledtasks",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Carrol+Schiller"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"cron_expression\" : \"8k9ry1bwltq0jhz6eldc1q8vvulctcnp7gxubhkcpdckjekdt6yrap4v63y4fpmcgyeh0v8094jgh3ilpazrtwy5cm0yazvmviffaxcdw7r5wjnp9r6s3lxkyh4ec3urptt1u1n\",\n  \"id\" : \"f22r\",\n  \"script_location\" : \"k210yyxaf28freuigqjcnffp1x\",\n  \"enabled\" : true\n}, {\n  \"cron_expression\" : \"75r94l24ck3p3rodoca7uhltedah25cn990gn2098w02qp1qszprugrg2wv4kp\",\n  \"id\" : \"bjj4\",\n  \"script_location\" : \"4uelo6r2wwcxlxel93gm5yttglse0cscn825zzzfajbr8po4yw909kyoy6lels3worla4bfps36g7gy915bhtfx41fs1r1eiwazc5mvl98eauhydz4b6jz7udbaofhz6mqxbk9rltozjk9n26e4h9h\",\n  \"enabled\" : true\n}, {\n  \"cron_expression\" : \"f1tn0aali2pr5r5eqs83wwcxgbl3q9xdj93hf2h0wel\",\n  \"id\" : \"8jz9\",\n  \"script_location\" : \"knihzt75rut9y4i50p4f5e7iv2nu\",\n  \"enabled\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2593649c-db9d-37d6-be03-172bfe1c28b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetScheduledTasks",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ScheduledTask"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "98a90fe0-a686-3570-b955-0e27972adc80",
    "name" : "Change the Linux hosting PHP version. - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Thao+Bayer/phpsettings/version",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Arlene+Barrows"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "98a90fe0-a686-3570-b955-0e27972adc80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangePhpVersion"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "016e3e3e-7269-39c9-8478-e58d70d4d2e8",
    "name" : "Configure PHP memory limit - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Bryant+Champlin/phpsettings/memorylimit",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Jamila+Dare+DVM"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "016e3e3e-7269-39c9-8478-e58d70d4d2e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangePhpMemoryLimit"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "2566e8b8-3928-3388-ac94-edeaf1815642",
    "name" : "Get the available PHP versions.",
    "request" : {
      "urlPath" : "/linuxhostings/Shenna+Ankunding+DVM/phpsettings/availableversions",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Aliza+Klein"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"version\" : \"4da0uuo55kxtnglhspzv130z222mjhxhiutbl6t5c7snrmv97bbkuslw3yc1jfpjqqq28legpcmqgnydgp2v4pjtxmyql0s93vxzfmzkhpiku7ev6vh67rcmfc0ejlu8ef15xqk6vwwscnf4uhvhdyuq9vj3z57kx8yd6oteqr1mu7tg1v8ywhuek2v8duf9q0p5k\"\n}, {\n  \"version\" : \"01q3mcsciml6i8g3y9h17g4wv60drdi9so39k0i3wgjf7d88qwjusuysivbebmu\"\n}, {\n  \"version\" : \"s6yq3wu0j38nb7x5pwf9vj6zukh4e9r5aic6y5nsj6qc6bdwdhs93ioj7ctw50yn\"\n}, {\n  \"version\" : \"x9mjcq13lj1zfedmpyjefz\"\n}, {\n  \"version\" : \"6y4o61zvmeii4v2hlvidh6zninbkhu8qydv1qd0secprsqusf\"\n}, {\n  \"version\" : \"3ee0ab3mmv16gjggcrqavmqsymcsk2suvy7cxnsknk9m3p9lyeapccwjsgkexxvjfhb4p781fsdb7py\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2566e8b8-3928-3388-ac94-edeaf1815642",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAvailablePhpVersions",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/PhpVersion"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "78541a80-c258-34b6-a1fc-e9e13127b61b",
    "name" : "Configure PHP APCu setting - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Evita+Wiegand/phpsettings/apcu",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "King+Emmerich"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "78541a80-c258-34b6-a1fc-e9e13127b61b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeApcu"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "7e1a9615-7f18-36e7-a669-2f7c2976e917",
    "name" : "Configure FTP - 400",
    "request" : {
      "urlPath" : "/linuxhostings/Paulita+Daniel/ftp/configuration",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Elfriede+Lind"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "7e1a9615-7f18-36e7-a669-2f7c2976e917",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureFtp"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "8b6272dc-64ac-36fd-a16c-6e8a17ea155a",
    "name" : "Configure FTP - 204",
    "request" : {
      "urlPath" : "/linuxhostings/Marcus+Walsh+IV/ftp/configuration",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Franklin+Mante"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8b6272dc-64ac-36fd-a16c-6e8a17ea155a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureFtp"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "53d7532c-a214-3f1b-a718-c1cad4bd7498",
    "name" : "Linux hosting detail",
    "request" : {
      "urlPath" : "/linuxhostings/Ms.+Antonia+Kuhn",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Russel+Robel"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actual_size\" : 1791667685,\n  \"ssh_username\" : \"john.schneider\",\n  \"ip\" : \"m12biliyezhkmuvdfhlyis7gtd8vpp37no41lzuz2o7mobbdevqvxt9tuandblpr2vxe3bqw8e18n3lp9h8wbdvrqopco2xtx01ltl70437582\",\n  \"servicepack_id\" : 31592208,\n  \"php_version\" : \"y3ye2m\",\n  \"ssh_host\" : \"9ksjng3uy958b89mqlatoyy9qitx6k9gieykq3hfbdjv69jfuwp8cmr6lahjue223f5m8xm2\",\n  \"ftp_username\" : \"otis.durgan\",\n  \"sites\" : [ {\n    \"path\" : \"mfoil5ue5lk3hqqjb8bitojwv10q75pfbix41xidkhagbmi3wsmxfulbxbfgo3078wrqle\",\n    \"host_headers\" : [ {\n      \"name\" : \"Wilburn Macejkovic\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Eloy Oberbrunner\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"Travis Hudson\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Donald Shields\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"Seymour Willms\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"Tonita Wunsch\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Chun Hegmann\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"Charleen Stehr\",\n      \"enabled\" : true\n    } ],\n    \"http2_enabled\" : false,\n    \"ssl_enabled\" : true,\n    \"name\" : \"Kevin Lueilwitz\",\n    \"https_redirect_enabled\" : true\n  }, {\n    \"path\" : \"0uwbuoql42iqj97d0pq8qqvrf6802v48bn9m6mk2pb9kgo36qgeouasjh4bqcutmi12x75bygjc7i7bb0ale1wm4j7xfxva7a5r0tja9taxfb41wjddn7lja8z1o29mhbw8vkfl6fo6o\",\n    \"host_headers\" : [ {\n      \"name\" : \"Numbers Mraz\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Miss Nickole Schowalter\",\n      \"enabled\" : false\n    } ],\n    \"http2_enabled\" : true,\n    \"ssl_enabled\" : false,\n    \"name\" : \"Lona Mosciski Sr.\",\n    \"https_redirect_enabled\" : false\n  }, {\n    \"path\" : \"zdsfymoknhz1rfrdeghpb4qz6pg8uo7b3h23quh8wv011503xi2qq6qnik5oly6n7qz2me7kqk6fyplqjk9pl6nv6bkc40fxn9secvqmt0\",\n    \"host_headers\" : [ {\n      \"name\" : \"Chase Schulist\",\n      \"enabled\" : false\n    } ],\n    \"http2_enabled\" : true,\n    \"ssl_enabled\" : false,\n    \"name\" : \"Coleman Stanton\",\n    \"https_redirect_enabled\" : false\n  }, {\n    \"path\" : \"6plbwniqv7ibyzzxr60e3islqeiig7a8ralw0idt1s8nplag0b0u7g00s84p3qyvfz9n0knpn2moxjuy2yozwka7wfjt04ehw2vi0qofe2sl2dmj9x69okcl6h8b5pzhrqko8jlftcxavpqy2n7s6vsbf070pf\",\n    \"host_headers\" : [ {\n      \"name\" : \"Andrea Davis\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"Douglass O'Keefe\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Joanna Gerlach\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Miss Vicente Lebsack\",\n      \"enabled\" : true\n    } ],\n    \"http2_enabled\" : true,\n    \"ssl_enabled\" : true,\n    \"name\" : \"Russ Schulist\",\n    \"https_redirect_enabled\" : false\n  }, {\n    \"path\" : \"qgfgxj3903rlnsmq7e6exrgme0ytch9ix0bcutsknp66a3yxtc\",\n    \"host_headers\" : [ {\n      \"name\" : \"Concepcion Reynolds\",\n      \"enabled\" : true\n    }, {\n      \"name\" : \"Odell Orn DDS\",\n      \"enabled\" : false\n    }, {\n      \"name\" : \"Alyse Blanda\",\n      \"enabled\" : false\n    } ],\n    \"http2_enabled\" : true,\n    \"ssl_enabled\" : false,\n    \"name\" : \"Miles Metz\",\n    \"https_redirect_enabled\" : true\n  } ],\n  \"ip_type\" : \"dedicated\",\n  \"max_webspace_size\" : 1223031054,\n  \"max_size\" : 1325525338,\n  \"webspace_usage\" : 1235432058,\n  \"domain_name\" : \"Mauro Hills\",\n  \"ftp_enabled\" : false,\n  \"mysql_database_names\" : [ \"zx7437tsh54jw7cdqzbx9sz964ndoie5j3zjngt4x6v3s65b8wzdgduhr48z7mbjdwsu06vg8fwun8ousnsv8487mjw2a1ycjy307of0g5wj0efx1\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53d7532c-a214-3f1b-a718-c1cad4bd7498",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLinuxHosting",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "actual_size" : {
                "description" : "Used webspace size in MB",
                "format" : "int32",
                "type" : "integer"
              },
              "domain_name" : {
                "description" : "Domain name for the Linux hosting account.",
                "type" : "string"
              },
              "ftp_enabled" : {
                "description" : "Indicates whether ftp is enabled for the hosting account.",
                "type" : "boolean"
              },
              "ftp_username" : {
                "description" : "Ftp username",
                "type" : "string"
              },
              "ip" : {
                "description" : "Linux hosting IP address",
                "type" : "string"
              },
              "ip_type" : {
                "$ref" : "#/components/schemas/LinuxIpType"
              },
              "max_size" : {
                "description" : "Maximum webspace size in MB",
                "format" : "int32",
                "type" : "integer"
              },
              "max_webspace_size" : {
                "deprecated" : true,
                "description" : "Maximum webspace size in MB<br />\r\nUse max_size instead.",
                "format" : "int32",
                "type" : "integer"
              },
              "mysql_database_names" : {
                "description" : "A list of mysql databases linked to the hosting account.<br />\r\nDetails of the database can be read using the mysql database detail.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "php_version" : {
                "description" : "The active php version for the hosting account.",
                "type" : "string"
              },
              "servicepack_id" : {
                "description" : "Id of Linux hosting service package.",
                "format" : "int32",
                "type" : "integer"
              },
              "sites" : {
                "description" : "A list of websites on the hosting account.",
                "items" : {
                  "$ref" : "#/components/schemas/LinuxSite"
                },
                "type" : "array"
              },
              "ssh_host" : {
                "description" : "Ssh host of the linux hosting account",
                "type" : "string"
              },
              "ssh_username" : {
                "description" : "Ssh username",
                "type" : "string"
              },
              "webspace_usage" : {
                "deprecated" : true,
                "description" : "Used webspace size in MB<br />\r\nUse actual_size instead.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "979d555e-1936-34cf-aa43-3a7905bf5ff5",
    "name" : "Overview of linux hostings",
    "request" : {
      "urlPath" : "/linuxhostings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"domain_name\" : \"Tatyana Gislason\",\n  \"servicepack_id\" : 1936260563\n}, {\n  \"domain_name\" : \"Courtney Fay\",\n  \"servicepack_id\" : 1140722826\n}, {\n  \"domain_name\" : \"Kent Moore IV\",\n  \"servicepack_id\" : 1820135117\n}, {\n  \"domain_name\" : \"Shanita Volkman\",\n  \"servicepack_id\" : 1650512017\n}, {\n  \"domain_name\" : \"Glen Dickens III\",\n  \"servicepack_id\" : 197373788\n}, {\n  \"domain_name\" : \"Cira Dooley\",\n  \"servicepack_id\" : 1223506428\n}, {\n  \"domain_name\" : \"Mrs. Pete O'Conner\",\n  \"servicepack_id\" : 777423836\n}, {\n  \"domain_name\" : \"Elroy Wunsch\",\n  \"servicepack_id\" : 1543199991\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "979d555e-1936-34cf-aa43-3a7905bf5ff5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLinuxHostings",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/LinuxHosting"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "d2b3fdf2-865c-3211-a5d3-0751f595118e",
    "name" : "Edit domain name renew state - 204",
    "request" : {
      "urlPath" : "/domains/Izetta+Stamm+Sr./renew",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Rolando+Haley"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d2b3fdf2-865c-3211-a5d3-0751f595118e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConfigureDomain"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "42764052-c812-3db0-9dda-c7321b00c6b4",
    "name" : "Edit domain name servers - 204",
    "request" : {
      "urlPath" : "/domains/Gaston+Hickle/nameservers",
      "method" : "PUT",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Stewart+Reichert"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "42764052-c812-3db0-9dda-c7321b00c6b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EditNameServers"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "8d8e056b-bebe-380c-bd5b-18fd1d6702bd",
    "name" : "Details of a domain",
    "request" : {
      "urlPath" : "/domains/Madonna+Fay",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Rosario+Fahey"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"domain_name\" : \"Larry Schinner\",\n  \"will_renew\" : true,\n  \"name_servers\" : [ {\n    \"ip\" : \"9ukobp2foamqqdwe47lha7g3p6q845tvaxt7m9r7ck6dju2sod3yhsc5rguya0h0475jlet1evhj38f9vpt30d67lxbolfsqey75yjlc1kkj79e41zdrcs8x7adzbevl8lg9u5hahd7pzvrftfxryr\",\n    \"name\" : \"Sunni Thompson\"\n  }, {\n    \"ip\" : \"ueb887hxt9zp716e6ryls9toxp2rt8j8oh8pbxn2sp7zsl50n9ftl12mo2n4585x0japkzqu7cfb12jt3mcfwuewsghj7r8rhdhts9cj9xc\",\n    \"name\" : \"Lizabeth Goldner\"\n  }, {\n    \"ip\" : \"g2tngxi3q52l0rb38wsu65t2pjxiymjndl9b3rjx5udsqmch84uet020ucu25gl8vohbk1xgz0punoyu8nia9h2uexavxwehpf9xbl04bgarvmrs7gs2bykeik9qxafahbilf1jy8p4xl8511skzy0e9ykfa2xrky0bg4nkowrsypf9gyy7pb3ycj2dp3b01ckoi3\",\n    \"name\" : \"Julia Lowe\"\n  }, {\n    \"ip\" : \"6hzmy4vhs4qw10r16k6c70s3eowxlqnaiq89ntujqwynglpc6e6jd6iyh4lbd54xnmsa3cf4fp8h142v1l06f27\",\n    \"name\" : \"Mikel Torp\"\n  }, {\n    \"ip\" : \"ouhg380s6gr8ixo1grg5jfydd6mitu0xumaq11m48vx4f8pr1yhplaeg4inyqmn00dk10bcjo9bs2l7k19kryzormfnhjh9df19r4l242fee3kadc4soevsocx67dgucy4my5s\",\n    \"name\" : \"Lonny Runte\"\n  } ],\n  \"registrant\" : {\n    \"country_code\" : \"ttttl\",\n    \"language_code\" : \"0ed1fb9do6zcjqkzky98qxy53m27y381q4thf1cn7o3m3gj45ckxms43lkugeaf9ysrcs32u1ifg55f3x7rmaa388zb7cog9ovod\",\n    \"address\" : \"fkgesaemu7sqfmehwgphsd351su0jz05j0r4be1lg8rvilozskz0qqt937xudqt7txp5lt4j0abmsr627ua1gb19akljv1kyzpijgthri49qchcb5lhwetduhona39hzn11k1g65jqsybpaob6hdnyf34ergr\",\n    \"enterprise_number\" : \"j8tgx81471v26u4ismg2nju33po6h59lwrzg9c9qvwxpe1wjjqnx2nquoqwmge6qqcwk2pa3bigg4u2c5dv7rih\",\n    \"city\" : \"Morissetteberg\",\n    \"phone\" : \"1-909-104-6890\",\n    \"company_name\" : \"Ms. Josefa Bernier\",\n    \"last_name\" : \"Leffler\",\n    \"fax\" : \"yivqjs7ty1ozsgyu71f85mojad8aa5x6lx4xi0353guk3uor82wk8gkrza1lsa18x8ib9acpyobe0uz255xp59zspa3rsjx2o4zgl4amvxzkpo4bleml0msd722rwbnmfo120r8280qrgdystabqh1o7rp2absmutplgg8q0jt470\",\n    \"postal_code\" : \"21102\",\n    \"first_name\" : \"Gianna\",\n    \"email\" : \"lsidnagnuhv1jtsogj4n5j16rw5v3fvlt4ki8hp9x169lm0btkondvkodbn363hh8fdi\"\n  },\n  \"expiration_date\" : \"2023-06-04T05:36:30.603Z\",\n  \"can_toggle_renew\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d8e056b-bebe-380c-bd5b-18fd1d6702bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDomain",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "can_toggle_renew" : {
                "description" : "Indication if the domain renew state can be changed.",
                "type" : "boolean"
              },
              "domain_name" : {
                "description" : "The domain name",
                "type" : "string"
              },
              "expiration_date" : {
                "description" : "Expiration date of the domain",
                "format" : "date-time",
                "type" : "string"
              },
              "name_servers" : {
                "description" : "Nameservers of the domain",
                "items" : {
                  "$ref" : "#/components/schemas/NameServer"
                },
                "type" : "array"
              },
              "registrant" : {
                "$ref" : "#/components/schemas/Registrant"
              },
              "will_renew" : {
                "description" : "Indication of renewal.<br />\r\nNo value indicates that the renewal state could not be determined at the moment.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "72158809-9b07-357d-b8cb-aa3348683b14",
    "name" : "Transfer a domain - 202",
    "request" : {
      "urlPath" : "/domains/transfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "72158809-9b07-357d-b8cb-aa3348683b14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Transfer"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "72a3826e-2675-3bce-bf4e-3b7b954025e4",
    "name" : "Register a domain - 202",
    "request" : {
      "urlPath" : "/domains/registrations",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "72a3826e-2675-3bce-bf4e-3b7b954025e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Register"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "10882cd9-34ca-3e8d-a9dc-4b26e617d334",
    "name" : "Overviews of domains",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"domain_name\" : \"Cory Nikolaus\",\n  \"will_renew\" : true,\n  \"expiration_date\" : \"2023-06-13T16:03:42.602Z\"\n}, {\n  \"domain_name\" : \"Keneth O'Reilly\",\n  \"will_renew\" : true,\n  \"expiration_date\" : \"2022-11-30T20:58:08.602Z\"\n}, {\n  \"domain_name\" : \"Miss Victor Brekke\",\n  \"will_renew\" : true,\n  \"expiration_date\" : \"2022-12-30T00:26:59.602Z\"\n}, {\n  \"domain_name\" : \"Mrs. Lonny Schneider\",\n  \"will_renew\" : false,\n  \"expiration_date\" : \"2023-09-11T05:27:06.602Z\"\n}, {\n  \"domain_name\" : \"Oralee Hettinger\",\n  \"will_renew\" : true,\n  \"expiration_date\" : \"2023-07-29T14:08:14.602Z\"\n}, {\n  \"domain_name\" : \"Petrina Quigley\",\n  \"will_renew\" : false,\n  \"expiration_date\" : \"2023-05-23T21:47:16.602Z\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10882cd9-34ca-3e8d-a9dc-4b26e617d334",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDomains",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Domain"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "594a1786-bd73-3f12-8b41-b3469f2a974f",
    "name" : "Edit a record - 200",
    "request" : {
      "urlPath" : "/dns/Esteban+Stanton+III/records/6586",
      "method" : "PUT",
      "queryParameters" : {
        "record_id" : {
          "equalTo" : "3769"
        },
        "domain_name" : {
          "equalTo" : "Barney+Glover"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "594a1786-bd73-3f12-8b41-b3469f2a974f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "66e260cf-66d0-363b-8bc6-20245de85a2d",
    "name" : "Get specific record",
    "request" : {
      "urlPath" : "/dns/Paige+Shields/records/6rn9",
      "method" : "GET",
      "queryParameters" : {
        "record_id" : {
          "equalTo" : "523h"
        },
        "domain_name" : {
          "equalTo" : "Nieves+Schumm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"protocol\" : \"lvb3ezqu7f9j2b0g9xgf1kq3ucbqcfqwmxdm8aoptlkuzl6c9zkdi25fsxy6hv6q3dqovbmezpvpcjpaj8apyd6qoped9wkeb9xaxt65qf9l7hwzzpgyopr9294aowtyz2zn3ta55e8srkfjogfboz6471k1uysua0w2du9jxnyo4zn2i67a1bj\",\n  \"port\" : 83821816,\n  \"service\" : \"b59ev64zu0sywb5nsltywqlh84z35q0y7gq0hsqupw7q5dr78pfj7ln9i0xdnc21v6flh2pvxewq14yimv0\",\n  \"weight\" : 458682920,\n  \"record_name\" : \"Ezra Dare\",\n  \"id\" : \"d6lf\",\n  \"priority\" : 854797360,\n  \"type\" : \"qlo33mtvog4n1by8jvf8rfnlqkcw2vgu0g006c3e1u4bbujyam2s9b9m5s1wgii8ip4u0emmi6miy2xtrtgb90y6tl9qpk363n5rek6v7la3q46it\",\n  \"ttl\" : 1883201250,\n  \"content\" : \"Architecto similique tenetur doloribus animi possimus et. Quidem velit fugiat sequi sed minus. Et non occaecati iste cumque architecto nisi. Et dolorem facilis. Consequuntur iusto enim ullam similique\",\n  \"target\" : \"96h7fzrd6mgd9trjw93oegt57d51t7bydcpzmyjmp5m934tgwc6p4jqxtmd396haq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66e260cf-66d0-363b-8bc6-20245de85a2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "content" : {
                "description" : "Variable data depending on the record type.\r\n<ul><li>A: the IPv4 address.</li><li>CNAME: canonical name of an alias.</li><li>MX: fully qualified domain name of a mail host.</li><li>SRV: does not apply. Data for the SRV records can be found in specific properties.</li><li>TXT: free form text data.</li><li>CAA: format should match specific values for flag, tag and ca: \"{flag} {tag} {ca}\".\r\n        <ul><li>The flag. The values 128 (critical) or 0 (non-critical) are expected, with 0 as the default.</li><li>The tag. A tag specifies which actions an authorized CA can take in terms of issuing SSL/TLS certificates.<br /><ul><li>The value \"issue\": explicitly authorizes a single certificate authority to issue a certificate (any type) for the hostname.</li><li>The value \"issuewild\": explicitly authorizes a single certificate authority to issue a wildcard certificate (and only wildcard) for the hostname.</li><li>The value \"iodef\": specifies a URL to which a certificate authority may report policy violations.</li></ul></li><li>The ca. This is the domain of the CA (Certification Authority) that has the authority to issue certificates for the domain in question. If the value is a semicolon (;), it means that no CA has the authority to issue a certificate for that domain.</li></ul></li><li>ALIAS: canonical name of an alias.</li><li>TLSA: format should match specific values for usage, selector, matching type and data: \"{usage} {selector} {matching_type} {data}\"\r\n        <ul><li>The usage. The first field after the TLSA text in the DNS RR, specifies how to verify the certificate.<br /><ul><li>A value of 0 is for what is commonly called CA constraint (and PKIX-TA). The certificate provided when establishing TLS must be issued by the listed root-CA or one of its intermediate CAs, with a valid certification path to a root-CA already trusted by the application doing the verification.</li><li>A value of 1 is for what is commonly called Service certificate constraint (and PKIX-EE). The certificate used must match the TLSA record exactly, and it must also pass PKIX certification path validation to a trusted root-CA.</li><li>A value of 2 is for what is commonly called Trust Anchor Assertion (and DANE-TA). The certificate used has a valid certification path pointing back to the certificate mention in this record, but there is no need for it to pass the PKIX certification path validation to a trusted root-CA.</li><li>A value of 3 is for what is commonly called Domain issued certificate (and DANE-EE). The services uses a self-signed certificate. It is not signed by anyone else, and is exactly this record.</li></ul></li><li>The selector. When connecting to the service and a certificate is received, the selector field specifies which parts of it should be checked.<br /><ul><li>A value of 0 means to select the entire certificate for matching.</li><li>A value of 1 means to select just the public key for certificate matching. Matching the public key is often sufficient, as this is likely to be unique.</li></ul></li><li>The matching type.<br /><ul><li>A type of 0 means the entire information selected is present in the certificate association data.</li><li>A type of 1 means to do a SHA-256 hash of the selected data.</li><li>A type of 2 means to do a SHA-512 hash of the selected data.</li></ul></li><li>The actual data to be matched given the settings of the other fields. This is a long text string of hexadecimal data.</li></ul></li></ul>",
                "type" : "string"
              },
              "id" : {
                "description" : "The id of the record\r\nThis value is ignored for creation of new records.",
                "type" : "string"
              },
              "port" : {
                "description" : "The port for SRV records.<br />\r\nThe value MUST be a positive integer.<br />\r\nEditing the value is not possible. You should add a new SRV record and delete the existing record.",
                "format" : "int32",
                "type" : "integer"
              },
              "priority" : {
                "default" : 10,
                "description" : "The priority for MX or SRV records.<br />\r\nA lower value means more preferred.<br />\r\nThe value MUST be a positive integer less or equal to 9999.",
                "format" : "int32",
                "type" : "integer"
              },
              "protocol" : {
                "default" : "TCP",
                "description" : "Used for the creation of SRV records. Possible options: TCP, UDP, ...<br />\r\nEditing the value is not possible. You should add a new SRV record and delete the existing record.",
                "type" : "string"
              },
              "record_name" : {
                "description" : "The name of the record.<br />\r\nThis is the host name, alias defined by the record.<br />\r\nAn empty record or '@' is equal to the domain name.<br />\r\nApplies to A, MX, CNAME, TXT, CAA, ALIAS and TLSA records.<br />\r\nWhen type is TLSA the recommended value format is port number, protocol and host: _25._tcp.<br />\r\nDoes not apply for SRV records.",
                "type" : "string"
              },
              "service" : {
                "description" : "The symbolic name of the desired service for SRV records.<br />\r\nEditing the value is not possible. You should add a new SRV record and can delete the existing record.",
                "type" : "string"
              },
              "target" : {
                "description" : "The canonical hostname of the machine providing the service for SRV records.<br />\r\nEditing the value is not possible. You should add a new SRV record and delete the existing record.",
                "type" : "string"
              },
              "ttl" : {
                "default" : 3600,
                "description" : "Time to live of the record in seconds.<br />\r\nIt defines the time frame that clients can cache the information.<br />\r\nThe value MUST be between 60 and 86400. The default value is 3600 (= 1 hour).",
                "format" : "int32",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the record (A, MX, CNAME, SRV, TXT, CAA, ALIAS and TLSA).",
                "type" : "string"
              },
              "weight" : {
                "default" : 0,
                "description" : "The weight for SRV records with the same priority.<br />\r\nA higher value means more preferred.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "e0e331a2-75a7-39cf-ae49-d12c89bbe169",
    "name" : "Delete a record - 204",
    "request" : {
      "urlPath" : "/dns/Toccara+Gibson+III/records/3kkd",
      "method" : "DELETE",
      "queryParameters" : {
        "record_id" : {
          "equalTo" : "94i2"
        },
        "domain_name" : {
          "equalTo" : "Lourdes+Carroll+MD"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e0e331a2-75a7-39cf-ae49-d12c89bbe169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "0df7951a-98ba-3e09-8838-69cabc70d535",
    "name" : "Create a record - 201",
    "request" : {
      "urlPath" : "/dns/Russell+Crona/records",
      "method" : "POST",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Alfredo+Flatley"
        }
      }
    },
    "response" : {
      "status" : 201
    },
    "uuid" : "0df7951a-98ba-3e09-8838-69cabc70d535",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "3ac524a4-0582-37bc-a0e4-fe4c9c0863c7",
    "name" : "Get records",
    "request" : {
      "urlPath" : "/dns/Blake+Kunde+DVM/records",
      "method" : "GET",
      "queryParameters" : {
        "domain_name" : {
          "equalTo" : "Dr.+Pedro+Gerhold"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"protocol\" : \"91hpp94g05i5v3pr8ms3iyyxwafun4c3hvn3bvkn7ruqbbflr4ghtxd8czmze37hclqikpmvl97tglppyqyub75z5nh0l54gcmpeu040631uqcicpb\",\n  \"port\" : 1101162946,\n  \"service\" : \"kqgrgj24he83ui32kolihsayscao3h02x72bmgd94lcijwlj5n01tydgfl9vl9gdwpy2519p7tfq78d14gw553bgoxa8sxejjyjg6aftjqk6y1t4s75383etz8acw5cox06e14ahvw8qz\",\n  \"weight\" : 1761146189,\n  \"record_name\" : \"Mr. Debora Kilback\",\n  \"id\" : \"9v96\",\n  \"priority\" : 1359346898,\n  \"type\" : \"xv8o68lthz\",\n  \"ttl\" : 2126190434,\n  \"content\" : \"Rem quo consequuntur incidunt voluptatem enim alias. Et quis consequatur reiciendis aut animi omnis. Dolorem ea doloribus. Dolor reiciendis architecto. Unde quibusdam corporis id.\",\n  \"target\" : \"dn588d6pznev2rec7zbraahkczmlf6acxzuaem47r034lx4j7jtveciqnhuwepvnyhuxsh1vmpjvx344ysma36otigusc2i70xuytrypq0lwl4o850r5mplrl47kwowob7c02bft5m6ojg1jilf7m4rd0i8gnc9hcrvzjm0mufkudxz4767soj8zcshdx2dcxp\"\n}, {\n  \"protocol\" : \"abenklg1dzdyjowvqttnv7eggg5vjax1utasa40ylskgmlxe7aq31c1x9q9rwglbdy0v6x634u52566bphuvlawszclgekjovocta0fqn0tz0eture73ykrib8uu3961vhqcludl94ckjp86ehzn4eizokzemoa6lfxiv6eczs9bj0m49p\",\n  \"port\" : 1136376374,\n  \"service\" : \"m0p655c2hxxsio2mptbflwmjurzv1k7paa3r59xczbedclnby0xqcypeml64buq9ka07sf7lwqwuuyp6f36tlojp71gae55haaxzn6x86cno4wpg18lqjmvoqb1o0h7iuxeydn40zz76bi3d8i\",\n  \"weight\" : 138966116,\n  \"record_name\" : \"Barton Kuhn DDS\",\n  \"id\" : \"332m\",\n  \"priority\" : 779716040,\n  \"type\" : \"xecc1nk9830zadu7n40og79xowkx5c720im2nwcr0rrpkpgqziieo4o5u563g0wbqnmvh3grdtb83q6hhjmu2js6etp7r6gcww177u2laty7j3sawy9g14225yhedr6eljvip9oowzua7say8d6e75txeewr662x2uk97jxpaq5u5ix9aa4db\",\n  \"ttl\" : 1075063722,\n  \"content\" : \"Quis autem modi. Incidunt accusamus velit et sint dolorum ratione. Minus dolore impedit eos dolor nihil.\",\n  \"target\" : \"0m983970t4wlueuc32fqo55jcr5vqwcbw7yffzlv56lo3gy3387hb6jmhdigus9zekzv5cjek238fq4lgdlrm4eh7jqd0xoxm2rcad1omversk2wkxh0mk43md0lo9ruspfqqsvtgyxnoni81kdg3sr93uta97\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ac524a4-0582-37bc-a0e4-fe4c9c0863c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/DnsRecord"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "0abb9bcc-1631-3b02-a457-7ad987171411",
    "name" : "Get a specific account",
    "request" : {
      "urlPath" : "/accounts/264r",
      "method" : "GET",
      "queryParameters" : {
        "account_id" : {
          "equalTo" : "1337633215"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"identifier\" : \"kgaxjpl0cmicqkht9mlj4ppkl5uvmr9oor7gjrbkurrg102hpoj8vo9np6bbuy3cp6q4eymihphr43ms3lqwbf1iw66mk55k6qp98tjzp4itq7rzwl5wr5rxfxnvs4f9satcsacp3pn9gqfkvbdnltskd4dgiymw2mdtsbrpyzj0fe5pp\",\n  \"addons\" : [ {\n    \"name\" : \"Hans Hilll\",\n    \"id\" : 2067961474\n  }, {\n    \"name\" : \"Gabriel Pacocha\",\n    \"id\" : 395405324\n  } ],\n  \"servicepack\" : {\n    \"name\" : \"Cherie Crist\",\n    \"id\" : 736215190\n  },\n  \"id\" : 1718510379\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0abb9bcc-1631-3b02-a457-7ad987171411",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAccount",
          "schema" : {
            "additionalProperties" : false,
            "description" : "A detailed representation of an account.",
            "properties" : {
              "addons" : {
                "description" : "A list of addons applied to the account.",
                "items" : {
                  "$ref" : "#/components/schemas/Addon"
                },
                "type" : "array"
              },
              "id" : {
                "description" : "The id of the account",
                "format" : "int32",
                "type" : "integer"
              },
              "identifier" : {
                "description" : "Identifier for the account",
                "type" : "string"
              },
              "servicepack" : {
                "$ref" : "#/components/schemas/Servicepack"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "76c02c29-8ea5-3598-a99e-44a59d89417d",
    "name" : "Create a new account (application/json)",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"validation_errors\" : [ {\n    \"error_text\" : \"l59l6vnenrvg31zui8pk8yk604xghs4as5qr5mhm8072l5k5s6no2l2tlwduj71y2wl2s62aeflpv06rrrd3qb4a8lbjvik\",\n    \"error_code\" : \"ug7hjbrdns63i1lbx8nz8om7o07fv6517pn2ldfjre8yw441byjqk1bpa15js72tfqrdw43d4kebn63svbkyyjmwr904oedlgme60h6ciics5jndlgmhk1jib7q9jejrkq850\"\n  }, {\n    \"error_text\" : \"so9mn3g0g4dkxckxo9sbv7301r3w56m71dmzqeus27h3zj4iecc24wkcihkewwvdh09glriooxkovsbq1zkbg\",\n    \"error_code\" : \"zyhl482j4wke77frkow80j878ksd5zd953qivwyjp6v8lbwu25n092g8847i4u5n3cl297koq23nx43jpsb1hy68rxooumrxoriy7xagswmz2u939z8730xr11m9fljjl6z0\"\n  }, {\n    \"error_text\" : \"26e0m3an8654n7nms8izh173m5uuv2447t97ri05goq57saxrhs29v1ozkjhb1btvhrbvhjr\",\n    \"error_code\" : \"vodtqzehisdg35smpi0q\"\n  }, {\n    \"error_text\" : \"1hemoas98hfaqofjar9tzxez5zemjwatxn5p6d8y0ij81v5s8eej9xkta2votw9s34qvqry6zby72uu97agy37p8w71o23ohv4i0itsxth90olcnav7lnel4rapcjkrfm7kujauqmm7p9d4n51ykuvjkz66i4g6f7x9jhbyi2f84j12cws5ffph\",\n    \"error_code\" : \"l6yjpvmy7510ha5th1cxwbp3z4swjprh3ycmh297yrw9x3zui4rzo0mvzuysw1axd3k3phhyayq9gnwr9z20kf6q032trla77os2cq2w36o840mirzvhe6dmj0fyc5t5p\"\n  }, {\n    \"error_text\" : \"gsswyybv27lbxnf8x5kjd3whlwryf9qvucc7ocnzf9tx5nuooj4rlerb5rgvuos3sly939h1e99emfhehke0nqa1bqfmvepgtffa69vkkww8hn8zkg8qjg\",\n    \"error_code\" : \"xowo53008x9zu25ld8zm1s913n1ujqb0x66ak3a9o4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76c02c29-8ea5-3598-a99e-44a59d89417d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateAccount",
          "schema" : {
            "additionalProperties" : false,
            "properties" : {
              "validation_errors" : {
                "description" : "A list of validation errors that occurred when processing the request.",
                "items" : {
                  "$ref" : "#/components/schemas/ValidationErrorMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "cfcb4dbd-e8e1-3f9c-8a6e-d4d817226e51",
    "name" : "Create a new account - 202",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "cfcb4dbd-e8e1-3f9c-8a6e-d4d817226e51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateAccount"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "f2bece24-8e55-3b09-b92e-6bf9de51b924",
    "name" : "Overview of accounts",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"identifier\" : \"t6zvpn73nq3agyrp8jwp7p9mhflpjr65k7wyw5jslspnn24hyixu8jyl40y3zcfrl2hpk5ylq529xh5fgq34outxkn3trump\",\n  \"servicepack_id\" : 293936767,\n  \"id\" : 1370164116\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2bece24-8e55-3b09-b92e-6bf9de51b924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAccounts",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/Account"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 99
  } ]
}