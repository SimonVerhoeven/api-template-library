{
  "mappings" : [ {
    "id" : "188e76ba-1f4e-489b-a4cf-994418a62d70",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/6bd8/sessions/m39e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2022-03-08T17:34:52.047655Z\",\n  \"endTimeMillis\" : \"2022-07-24T16:29:52.047681Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/347484\",\n    \"name\" : \"Gudrun Schmeler\",\n    \"packageName\" : \"Miss Tonie Corkery\",\n    \"version\" : \"mqfqr6wgchmv69cuopl8a514xvb55eei2hj6osohgonz4575sunrkvqdyieukh13v8vhflurv8dm5wz6f18e579xbpx1k\"\n  },\n  \"startTimeMillis\" : \"2022-05-09T16:40:52.047862Z\",\n  \"name\" : \"Sheba Smitham\",\n  \"description\" : \"Ut nihil at. Recusandae ea rerum dolorum molestias. Officiis aut amet. Eveniet cum doloribus deserunt odio iure numquam voluptatibus.\",\n  \"modifiedTimeMillis\" : \"2022-12-02T15:30:52.047952Z\",\n  \"id\" : \"33fv\",\n  \"activityType\" : 950520420\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "188e76ba-1f4e-489b-a4cf-994418a62d70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.048276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "814606b1-e5aa-4a2d-b760-3e7ae3c13f1c",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/a4n8/sessions/kqgm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "814606b1-e5aa-4a2d-b760-3e7ae3c13f1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.047623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    }
  }, {
    "id" : "22acf6d4-4222-42cc-87d9-3fe577ed3a8c",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/w720/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"l3jz\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2022-06-13T16:58:52.042787Z\",\n    \"endTimeMillis\" : \"2022-11-11T17:48:52.042814Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/072569\",\n      \"name\" : \"Clayton Smitham DDS\",\n      \"packageName\" : \"Latrina Abernathy\",\n      \"version\" : \"6lbjcp8agpkmi5w3ge0n6bth3kmbzb8vov1ike8oj4s1lyr53hlsdz6tl50kssirph7mwrnggz9e2stqy75o473dfgu19o6h47tfh9ldoos44o3tdu\"\n    },\n    \"startTimeMillis\" : \"2022-11-30T16:55:52.043006Z\",\n    \"name\" : \"Hung Jacobs\",\n    \"description\" : \"Odit quia iure vitae velit. Nemo ab qui occaecati. Quisquam veniam molestiae hic. Voluptatem tenetur illum. Ut magnam at illo illo consequatur et.\",\n    \"modifiedTimeMillis\" : \"2022-03-30T18:10:52.043104Z\",\n    \"id\" : \"g795\",\n    \"activityType\" : 829410472\n  }, {\n    \"activeTimeMillis\" : \"2022-07-01T14:36:52.043207Z\",\n    \"endTimeMillis\" : \"2022-06-11T17:29:52.043234Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/104541\",\n      \"name\" : \"Vernetta Wilkinson\",\n      \"packageName\" : \"Daphine Hamill Jr.\",\n      \"version\" : \"yyjnndep68vtysat456qyjc7wot5k1bbtyk79fckw987pf0hsh9nlb3x9nztmq5figzm52h2oakif26ymn3l9tsk149ajll9nr2std6n9g2wiz92vv5vmq6p008mdc821dug4cawg3he14koj01vok1mga6z9hl93q302j60he\"\n    },\n    \"startTimeMillis\" : \"2022-07-28T15:43:52.043426Z\",\n    \"name\" : \"Mrs. Constance Hackett\",\n    \"description\" : \"Tempora libero et consectetur dolor consequatur. Et odit commodi non et voluptates hic. Temporibus aspernatur consequatur tenetur est. Molestiae omnis voluptatem molestias et voluptatem animi quo.\",\n    \"modifiedTimeMillis\" : \"2022-09-28T15:19:52.043531Z\",\n    \"id\" : \"d1d3\",\n    \"activityType\" : 1303155828\n  }, {\n    \"activeTimeMillis\" : \"2022-03-26T18:02:52.043634Z\",\n    \"endTimeMillis\" : \"2022-07-17T14:47:52.043661Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/779677\",\n      \"name\" : \"Emil Gleichner\",\n      \"packageName\" : \"Beatriz White\",\n      \"version\" : \"xmpiavg1pogr5wvgjy04bze9l6u3fr6986paa2r8595mjy66hjljos87mi6\"\n    },\n    \"startTimeMillis\" : \"2022-03-29T15:36:52.043849Z\",\n    \"name\" : \"Fred Gleichner DVM\",\n    \"description\" : \"Aut velit eum quam. Quia corrupti quia similique nemo provident illum. Ex quis doloremque ut enim ea quis. In nihil voluptas voluptas.\",\n    \"modifiedTimeMillis\" : \"2022-07-30T14:21:52.043946Z\",\n    \"id\" : \"t0f8\",\n    \"activityType\" : 545246577\n  }, {\n    \"activeTimeMillis\" : \"2022-07-03T17:25:52.044045Z\",\n    \"endTimeMillis\" : \"2022-06-08T17:48:52.044074Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/280265\",\n      \"name\" : \"Lillia Vandervort\",\n      \"packageName\" : \"Lean Windler II\",\n      \"version\" : \"pmaoglhg79ikzawcpjf4fpbbxrshiqee7l9kala1zfsug9mw8qihfosz8c9sclz2j8pfh4g579ibvw2sedtiuts0tsk91mjzx643k7bgtf7cc30gpapfncjqm14vapgbx3qmwin1fq70yjc074ptj3x0pdmqrrp8by6\"\n    },\n    \"startTimeMillis\" : \"2022-07-18T17:21:52.044257Z\",\n    \"name\" : \"Dr. Elmer Turner\",\n    \"description\" : \"Voluptatem id magnam et neque non saepe. Ea et minus. Sunt sunt ut eligendi et.\",\n    \"modifiedTimeMillis\" : \"2022-07-03T16:43:52.044352Z\",\n    \"id\" : \"3uei\",\n    \"activityType\" : 756874719\n  }, {\n    \"activeTimeMillis\" : \"2022-09-28T17:40:52.044452Z\",\n    \"endTimeMillis\" : \"2022-09-20T16:15:52.044479Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/228651\",\n      \"name\" : \"Shalanda Little\",\n      \"packageName\" : \"Mr. Lannie O'Reilly\",\n      \"version\" : \"42czr\"\n    },\n    \"startTimeMillis\" : \"2022-06-16T17:15:52.044664Z\",\n    \"name\" : \"Stacia Paucek\",\n    \"description\" : \"Quidem iusto qui. Temporibus rerum asperiores similique sed illum. Est accusantium ut accusamus est nemo.\",\n    \"modifiedTimeMillis\" : \"2023-01-13T15:31:52.044756Z\",\n    \"id\" : \"f5h7\",\n    \"activityType\" : 1323360616\n  }, {\n    \"activeTimeMillis\" : \"2022-12-22T16:16:52.044855Z\",\n    \"endTimeMillis\" : \"2022-04-20T17:08:52.044884Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/032155\",\n      \"name\" : \"Dr. Belkis Brekke\",\n      \"packageName\" : \"Newton Raynor\",\n      \"version\" : \"o0j2ql7abpk6ikmq5vxg396gm2rujehby7npld2xlbflsrtgu\"\n    },\n    \"startTimeMillis\" : \"2022-03-28T16:11:52.045065Z\",\n    \"name\" : \"Ward Cassin\",\n    \"description\" : \"Tenetur facere quasi molestias quam enim. Repellendus repellat in. Ut neque accusamus aut praesentium sit eum ut.\",\n    \"modifiedTimeMillis\" : \"2022-10-15T17:06:52.045155Z\",\n    \"id\" : \"v3z3\",\n    \"activityType\" : 1569810104\n  } ],\n  \"hasMoreData\" : true,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2022-05-21T16:40:52.045275Z\",\n    \"endTimeMillis\" : \"2022-08-29T17:29:52.045302Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/242534\",\n      \"name\" : \"Ray Ferry\",\n      \"packageName\" : \"Raphael Littel\",\n      \"version\" : \"zppu5i1by0om2ptbwgalsplgqa7lja1js96o4lb9n4ifpawrx6td2oiqwufv3mp6m10cga9kvxt0nyla8tn2s9v3iyn7gctht6me1zo85o5kbv8unwqrqvurc19l14oksvgfgucl487ge759ltw1jxce6k3kfe7vhcev8phfqi\"\n    },\n    \"startTimeMillis\" : \"2022-06-06T16:01:52.045493Z\",\n    \"name\" : \"Leonardo Wuckert\",\n    \"description\" : \"Nulla aut quae ut illo numquam repudiandae est. Debitis quisquam quos. Iusto minima iste pariatur animi. Qui ut fugit neque suscipit nostrum. Tempora eius amet distinctio libero at.\",\n    \"modifiedTimeMillis\" : \"2022-09-18T16:15:52.045593Z\",\n    \"id\" : \"a022\",\n    \"activityType\" : 690406143\n  }, {\n    \"activeTimeMillis\" : \"2022-12-04T14:54:52.045694Z\",\n    \"endTimeMillis\" : \"2022-09-20T16:34:52.045719Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/827382\",\n      \"name\" : \"Miss Rickey Yundt\",\n      \"packageName\" : \"Beryl Parker\",\n      \"version\" : \"iqe0qhfwlqhdjfzg5rynm4lh0ieop969y10evaawx23uohhuo0ztsnviua\"\n    },\n    \"startTimeMillis\" : \"2022-03-24T14:52:52.045903Z\",\n    \"name\" : \"Miss Buck Rohan\",\n    \"description\" : \"Sapiente facere harum sit sit. Impedit iusto error libero sequi ipsum aliquid. Molestias blanditiis quae et quisquam aspernatur quia.\",\n    \"modifiedTimeMillis\" : \"2022-05-30T14:31:52.045998Z\",\n    \"id\" : \"32h7\",\n    \"activityType\" : 1614678437\n  }, {\n    \"activeTimeMillis\" : \"2023-02-24T17:25:52.046098Z\",\n    \"endTimeMillis\" : \"2022-07-29T17:35:52.046125Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/257630\",\n      \"name\" : \"Letitia Frami\",\n      \"packageName\" : \"Guillermina Feil\",\n      \"version\" : \"7zv47ljausdc8yo2kk1o90se0xu7h\"\n    },\n    \"startTimeMillis\" : \"2022-08-27T14:37:52.046307Z\",\n    \"name\" : \"Cassaundra Ortiz\",\n    \"description\" : \"Nemo voluptates aut ut impedit quaerat nisi suscipit. Tenetur et sapiente maxime a et dolorem. Sequi consectetur odio quos ut asperiores et. Temporibus odit aspernatur. Aut tenetur sunt sit.\",\n    \"modifiedTimeMillis\" : \"2022-08-30T14:33:52.046402Z\",\n    \"id\" : \"wis4\",\n    \"activityType\" : 1452049056\n  }, {\n    \"activeTimeMillis\" : \"2022-04-19T15:22:52.046504Z\",\n    \"endTimeMillis\" : \"2022-06-21T18:02:52.046531Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/988389\",\n      \"name\" : \"Malik Cummings\",\n      \"packageName\" : \"Aleta Wintheiser\",\n      \"version\" : \"t9bj9udt5hza9y9tub520jbzs3prmwttj99dpim681r0zk0hogtbdpowmwbzpi13paxq0ysokr\"\n    },\n    \"startTimeMillis\" : \"2022-06-19T14:18:52.046714Z\",\n    \"name\" : \"Joni Koch II\",\n    \"description\" : \"Repellat sit non rerum ut deserunt. Qui voluptatem quae voluptatem voluptas. Qui saepe numquam placeat. Voluptatem impedit deserunt id minima.\",\n    \"modifiedTimeMillis\" : \"2022-11-03T14:18:52.04681Z\",\n    \"id\" : \"de1r\",\n    \"activityType\" : 254470774\n  }, {\n    \"activeTimeMillis\" : \"2022-05-27T16:42:52.046911Z\",\n    \"endTimeMillis\" : \"2022-11-22T17:50:52.046937Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/317145\",\n      \"name\" : \"Elisha Abbott\",\n      \"packageName\" : \"Mrs. Macy Grimes\",\n      \"version\" : \"pl13by2n2kf4r5ju9c3bq6l6tpkm3sl1494jspv6wbbjg0lqey48s5blu6dzg022cl0htly2zqm1p4qp5micg70pr2kjqbbcwagpoiax746e670j3ckwbvks\"\n    },\n    \"startTimeMillis\" : \"2022-03-31T15:29:52.047116Z\",\n    \"name\" : \"Cortez Wisozk DVM\",\n    \"description\" : \"Occaecati accusantium facere aut. Sunt repudiandae et praesentium odio. Error autem quo.\",\n    \"modifiedTimeMillis\" : \"2022-09-08T15:11:52.047209Z\",\n    \"id\" : \"8s2h\",\n    \"activityType\" : 587080473\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22acf6d4-4222-42cc-87d9-3fe577ed3a8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.047471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1b79ff93-2e88-4885-a6ed-ce9a10a7b6a8",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/c7e8/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2023-01-30T15:13:52.040436Z\",\n    \"activity\" : 1486636086,\n    \"startTimeMillis\" : \"2022-12-25T15:35:52.040475Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-06-08T14:57:52.040513Z\",\n      \"endTimeMillis\" : \"2022-09-16T14:37:52.040545Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/036812\",\n        \"name\" : \"Germaine Harris\",\n        \"packageName\" : \"Shirlene Abbott\",\n        \"version\" : \"qu5iqmwvv38vqzpafp2kyehezglxrl7xjs6go35s6ijcfji2jsdwdt8hty74eez6gdkdml4n2c\"\n      },\n      \"startTimeMillis\" : \"2023-01-24T16:13:52.040753Z\",\n      \"name\" : \"Bryan Bosco\",\n      \"description\" : \"Molestiae beatae dolores. Enim minima accusantium suscipit odio aliquam praesentium sit. Ipsum libero ipsum atque eos dolores. Neque eum laboriosam est voluptas odio. Quam quod totam libero autem et n\",\n      \"modifiedTimeMillis\" : \"2022-04-17T16:42:52.040876Z\",\n      \"id\" : \"5545\",\n      \"activityType\" : 476929366\n    },\n    \"type\" : \"activitySegment\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"47h7\",\n      \"maxEndTimeNs\" : \"2022-08-25T15:00:52.041079Z\",\n      \"minStartTimeNs\" : \"2023-01-06T15:20:52.041108Z\",\n      \"nextPageToken\" : \"xmy19fo3ebwkprxwu9mx9xed47z17vgl81mlhsv4lyejqysgkbkeah79bbr06otzfia65tj5s8h542suc44e9c3gkrurnoahl1nqse3qnsq2ioagxlnlrg56v4d7grr2u95n8n50v7wal2rd4ixt9jr9s648qusfa7vqjgwzvgopta26zjghygr\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"a57m\",\n      \"maxEndTimeNs\" : \"2022-03-11T14:54:52.041248Z\",\n      \"minStartTimeNs\" : \"2022-11-26T18:00:52.041277Z\",\n      \"nextPageToken\" : \"9o8ri3pl2fvr35n2lguszvi72iqqamfvdovhs11yq1tmokqa06tvt3y0bqz7sv90w1s37p\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4po7\",\n      \"maxEndTimeNs\" : \"2022-05-25T16:28:52.041406Z\",\n      \"minStartTimeNs\" : \"2022-04-27T17:09:52.041435Z\",\n      \"nextPageToken\" : \"yioesdwfhnfu4fdskp719p6sxxwnaraz46lbtss31ackk8\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"i6q3\",\n      \"maxEndTimeNs\" : \"2022-12-31T14:14:52.041552Z\",\n      \"minStartTimeNs\" : \"2022-05-11T15:39:52.04158Z\",\n      \"nextPageToken\" : \"copu91wt5avu7610mbetgw9z5wtxf4v08ta6xms9up1em938ptdjpwo1a5vv6v2n2kfvfzae18c3udbm64hjeqmqkz38jkt9wjff532s6qr16oylvvet6tsp9ni1zrpngkusmubucdasekouevwxyyp36tyclodg4clofxmt17hcv040wojz\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"gqp4\",\n      \"maxEndTimeNs\" : \"2022-12-08T14:25:52.041711Z\",\n      \"minStartTimeNs\" : \"2022-12-10T14:34:52.041741Z\",\n      \"nextPageToken\" : \"uplbonb5xx2gwfc3iupdx463r52nj8qde7ahfjhgfyogfewkkb0st6yjxxxncv8qwl838uz3ttdyep5debtj6wzlshmfu0dhgzkahl2p2m8i1livddvozrnwxgu3b3he6nhngy\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"6ync\",\n      \"maxEndTimeNs\" : \"2022-12-23T17:57:52.041863Z\",\n      \"minStartTimeNs\" : \"2022-12-04T17:15:52.041891Z\",\n      \"nextPageToken\" : \"dq3goqyn2vp3099jzirsh690ivnfbagb8j4667q2shj5nuammybsrhyms6t9eznvsikxppqo7mu8kd3hvq1bx2ed6yqeuktlwbpciujpd2qkwpvz7i8ndtotzfuvm0a5ljgbvpvcfgixle3\",\n      \"point\" : [ { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-10-05T17:05:52.041951Z\",\n    \"activity\" : 1717438756,\n    \"startTimeMillis\" : \"2022-04-27T18:08:52.041982Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-07-07T15:25:52.042014Z\",\n      \"endTimeMillis\" : \"2022-04-27T18:02:52.042043Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/188682\",\n        \"name\" : \"Marcel Douglas\",\n        \"packageName\" : \"Shondra Miller\",\n        \"version\" : \"vz8f0l2pfzj59nbdenduhmioiasa7pso7j422urea0qryq6oulowa5oko7dgt11301nhkv7338u13061skv5pmefllsomvb\"\n      },\n      \"startTimeMillis\" : \"2022-12-03T16:50:52.042242Z\",\n      \"name\" : \"Andrew Emard\",\n      \"description\" : \"Fugiat sed ex et reprehenderit porro veritatis. Et qui dolorem vitae ipsa et. Facere ut totam et.\",\n      \"modifiedTimeMillis\" : \"2023-02-18T17:39:52.042347Z\",\n      \"id\" : \"51o2\",\n      \"activityType\" : 58812086\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"1d65\",\n      \"maxEndTimeNs\" : \"2022-07-21T16:09:52.042533Z\",\n      \"minStartTimeNs\" : \"2022-12-12T14:36:52.042562Z\",\n      \"nextPageToken\" : \"4xcc4gfm0ax2a9jb7s6erk6ahqhdrsl0yvy367o0txpdv5gqarddr0nuhjt35vdhw9kxyift3ymcvvbxida1vgdrkwvc4uy4kbxnferbwz\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b79ff93-2e88-4885-a6ed-ce9a10a7b6a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.042726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "76a24523-0076-48bd-9708-7fafa5b271bc",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/49t1/dataSources/ptq8/datasets/m6y6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"0tq2\",\n  \"maxEndTimeNs\" : \"2022-04-03T16:50:52.037884Z\",\n  \"minStartTimeNs\" : \"2022-06-16T14:34:52.037912Z\",\n  \"nextPageToken\" : \"shsh6m2cvjfvbrjupsg1eub09qrvgfvf5esmcggpmeep302cm0iednuo4al8ym5\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"hke3\",\n    \"endTimeNanos\" : \"2022-07-08T16:00:52.038022Z\",\n    \"dataTypeName\" : \"Deon Quitzon\",\n    \"startTimeNanos\" : \"2022-05-08T18:08:52.038088Z\",\n    \"modifiedTimeMillis\" : \"2022-11-01T15:35:52.038116Z\",\n    \"rawTimestampNanos\" : \"2023-01-28T15:26:52.038142Z\",\n    \"computationTimeMillis\" : \"2023-02-07T16:09:52.03817Z\",\n    \"value\" : [ {\n      \"intVal\" : 928751567,\n      \"fpVal\" : 9.044259276471472E307,\n      \"stringVal\" : \"26oyi4ca2g5fkoek4dnyrdg5mfanp7z3kytupbdutoqjhphfa3y02h4ly3lcy76o77qkutnnyi1q0lqjn3ezey8l5zsig9x1b47hh6tldh0geq4u7ilb9sqbln2m2e\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1017363951,\n      \"fpVal\" : 1.6159456720758324E308,\n      \"stringVal\" : \"toopfjrwvbx3t25ec4hii4fbbvla6flhwyjqidhlpwmp9weqvgaotfbhoyqxs2fb1gzhxhx5qermq9n6uro559cgm511xpj2ncaunivf2vda3ozqkxhbbmw001338mco6psiy5b10zkfyiqe22rqvk94bpjervm43wv0g2di8or6ug8ujnu55hymqpbn5t1\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1216141609,\n      \"fpVal\" : 1.688410337941023E308,\n      \"stringVal\" : \"unpylgr34yu97umjbiyqea1nu7rh0qadhkiqlunqg5j82w48jxf80enu1gpus7hzim3m6vzmfen4858bbb99tz0o621zo60h3lvgkxu7v1cnvqnskd8w18wxwwjc45wbqqhe0demt4wbd9gsuufzpt8mc3box28179z1s8vuooh15og28jfwgis6ib4ptz0ck93h2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 589232806,\n      \"fpVal\" : 1.6797417456102178E306,\n      \"stringVal\" : \"5kx7awvsqovg5tsutji1\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1981167711,\n      \"fpVal\" : 6.806520330097949E307,\n      \"stringVal\" : \"uzul3ss4ocl9wqwm1zds6zys2dyxrinpxb9jycf4n11v1wjv9imkl3ll92s0bqsp8262jfbozr9y4jof3m7a8eq2mdesrp11do1p9ivqigij23202swf0v29ye53k2t9j2xsyxqgfj35jblbi35y793g4eg9ar0pfzmo0wj8zxm50hlhgj5oixzh80o3hurd3n\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2018431046,\n      \"fpVal\" : 9.964421166695091E307,\n      \"stringVal\" : \"0nabbch16nop5bdrsccakwa5gohf94fx3zwqny36jsxb43cmc6jrrumzgguvipzl45uszya2u0ju\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"e94h\",\n    \"endTimeNanos\" : \"2022-10-24T15:59:52.038478Z\",\n    \"dataTypeName\" : \"Adella Macejkovic\",\n    \"startTimeNanos\" : \"2022-04-16T16:30:52.038546Z\",\n    \"modifiedTimeMillis\" : \"2022-03-13T16:32:52.038572Z\",\n    \"rawTimestampNanos\" : \"2022-12-03T17:51:52.038599Z\",\n    \"computationTimeMillis\" : \"2022-07-01T15:37:52.038627Z\",\n    \"value\" : [ {\n      \"intVal\" : 1416280105,\n      \"fpVal\" : 3.6175159713150385E307,\n      \"stringVal\" : \"okc8tj368norlpm0qnoyysob5qi1mi32er\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 628805581,\n      \"fpVal\" : 1.2707861439710478E308,\n      \"stringVal\" : \"k1zdcmyeik9iqa8dh0df5js3icf\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 733597063,\n      \"fpVal\" : 1.5889925235522177E308,\n      \"stringVal\" : \"7e25g6kh41usgfltlgxehvw164idbrw577s42d8dyct5vjc7smfke9pi59fv5pcq6eamj3bv11r6uje9lmuotsvypzv8n9mdti375paupo8sbgdtja1oblbmc8gnjrr3vmu8rikz81adothfn89eq\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"895t\",\n    \"endTimeNanos\" : \"2022-05-29T16:11:52.038831Z\",\n    \"dataTypeName\" : \"Marget Koch\",\n    \"startTimeNanos\" : \"2022-10-18T18:04:52.0389Z\",\n    \"modifiedTimeMillis\" : \"2022-08-28T15:21:52.03893Z\",\n    \"rawTimestampNanos\" : \"2022-06-01T14:19:52.038957Z\",\n    \"computationTimeMillis\" : \"2022-09-18T16:43:52.038985Z\",\n    \"value\" : [ {\n      \"intVal\" : 822441476,\n      \"fpVal\" : 2.84935958724582E307,\n      \"stringVal\" : \"6yxe3nnnv362g94aln3r8q9vdrrqzdl9ye5m4rfucrdv9k7j3m42detszfea206za021tgrev7rgycf73mza6sino1s5btqggfxac\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1576196575,\n      \"fpVal\" : 1.7539466577979558E308,\n      \"stringVal\" : \"y3werpgvrzzdvo9w3igla3dnvdkxqslisun7518nm5k4qc3uawyayxa941rb80kjh4pp\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1322376597,\n      \"fpVal\" : 1.475130307611016E308,\n      \"stringVal\" : \"ciu7eppen2teea1qumkrabgu31z3z88eys7oy4fuwrt6ktt465hx6kdurt6ryqkma8k3ckkf3gxrewaficqnjjwso2kkv1rdr73xcot8en0muabkigwxwlc2593v0yw0ugayrl97jug5ildq9bow9u1i7cwfvcb87vr8sixervk0d6b75ncc7x5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1408443343,\n      \"fpVal\" : 7.023065311965431E307,\n      \"stringVal\" : \"sfl4pcs4hkc\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 138931347,\n      \"fpVal\" : 1.2745592261383468E308,\n      \"stringVal\" : \"winvjckw0act3qgeigapzxakacdk5hnv1rzab4dd3k1lw2nr8bbzg9h819xzyayjilug5ektztd8p2fgcecugyfprvyg3lhuvuud927wjwgv881e7thylz0j\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"u9ym\",\n    \"endTimeNanos\" : \"2022-09-18T14:25:52.039264Z\",\n    \"dataTypeName\" : \"Shirlene Mraz MD\",\n    \"startTimeNanos\" : \"2022-06-02T15:06:52.039332Z\",\n    \"modifiedTimeMillis\" : \"2022-05-31T16:22:52.039358Z\",\n    \"rawTimestampNanos\" : \"2023-03-01T17:01:52.039384Z\",\n    \"computationTimeMillis\" : \"2022-03-25T15:05:52.039411Z\",\n    \"value\" : [ {\n      \"intVal\" : 1429492886,\n      \"fpVal\" : 3.659852610147397E307,\n      \"stringVal\" : \"1djelfukdl92ejxnymemb5yzq20ehspdfl3w61qcb4wdy9p\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 286806270,\n      \"fpVal\" : 1.0801858382459382E308,\n      \"stringVal\" : \"0ywd6casb9aczy5j1cbdft2wvnsjctty566o1910vf5yohwybv4y1icpc16pfvqynhl9rjzsh2m4p09x98xhlhww4yb87kqtdwgqplx2\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 926887063,\n      \"fpVal\" : 1.7095627883327203E308,\n      \"stringVal\" : \"cf0cl83e9nzluqwoo\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1275815072,\n      \"fpVal\" : 1.1379638616078943E308,\n      \"stringVal\" : \"bfcc2f4nimx6znp4ia1umthbucv7mkge36y5m4\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 626891924,\n      \"fpVal\" : 1.159080128989173E308,\n      \"stringVal\" : \"x2yagmhtpbf9ddk0uuszmm8b3s068pkmqsmn9alnesxo9kpxclupig9pi0clc1ffqhbz9jwz3mff56327me5v5ocjrf6atyg9dr3k691cr3fyavp6jjaxnaax4th6v0eydbinu9hlowjfltr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1318965097,\n      \"fpVal\" : 3.7017645917730145E307,\n      \"stringVal\" : \"2adp3o1koge52khh1nkdad58dntyfzf\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"291x\",\n    \"endTimeNanos\" : \"2023-02-13T17:56:52.039712Z\",\n    \"dataTypeName\" : \"Pearlie Hyatt I\",\n    \"startTimeNanos\" : \"2023-01-17T18:04:52.03978Z\",\n    \"modifiedTimeMillis\" : \"2023-03-04T17:35:52.039809Z\",\n    \"rawTimestampNanos\" : \"2022-07-12T16:10:52.039837Z\",\n    \"computationTimeMillis\" : \"2023-02-25T15:19:52.039863Z\",\n    \"value\" : [ {\n      \"intVal\" : 961592710,\n      \"fpVal\" : 5.987966393054828E307,\n      \"stringVal\" : \"yoviytgbrczbuqosudshb7k8090qgb2gegk9kebzmposxf1fe59jtq38zlkccylmyc9\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 683260923,\n      \"fpVal\" : 1.115995734159107E308,\n      \"stringVal\" : \"464oxh26nhak8ljyns5x1gzexk3sreld4w452ftcgi1midjajdx4y9t8fgk3nyqt0hvy4cuzknhc662jkh5w31vorvnh4yjkjj6i1nxhlt0qo145eu7xz70myawt9hi2d9gpu\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1392225235,\n      \"fpVal\" : 9.156378752139217E307,\n      \"stringVal\" : \"jx77gojn47s6af7clm89ttjgv7lvva7tswtf4r8vhpqxw271owep7xdy6liv3n290pwadp02zbup1tbw12ecgmgxqoavu107adjk79\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1122637030,\n      \"fpVal\" : 8.698166488991928E306,\n      \"stringVal\" : \"ciit5y79rjrr4ze3p5h1ho216cq832qerbk5s9aeqvlgmnnuwhj208nh6d8hqbui73j5gjx6v7o\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1313429760,\n      \"fpVal\" : 1.5721797199535963E308,\n      \"stringVal\" : \"vc46oqujwj1oh1svkpxhi3iuzvjrnnkeafij01ngunf3s6uc4yc2n673s30nv0ljc8va0botrogl1s75wdv84lykuiet2rhpj1y4x531fdljzikagkiej21n6u2nkpq1lgnbjivnrit0nxczpdm0w1y2monjfuqjxnvldnvgerw4llurpubv15zioda1hxyfr05q\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1239378581,\n      \"fpVal\" : 4.559192507115056E307,\n      \"stringVal\" : \"3feyr0vsaadvynf6fe3ixgfg8fj2gpmb8ohjfp54938e8eyeemyqk2cpxx7q69vu2fpgh2sdrb5au336x94kr3gt0w6atfunvnz4aoutvm8q3ogs9nt0bavlsbagt8h4a05s6htjj7mb8m\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76a24523-0076-48bd-9708-7fafa5b271bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.040382Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "84a21206-d559-44e4-a6c9-64158cdb34c5",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/yc7t/dataSources/064x/datasets/m648",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"9796\",\n  \"maxEndTimeNs\" : \"2022-11-29T14:26:52.036193Z\",\n  \"minStartTimeNs\" : \"2022-05-15T14:21:52.036227Z\",\n  \"nextPageToken\" : \"3w4jervs4ka17bwmqqtotivqjtpvtot9c99tz55vjz9r09fe911jz5l1mrlu63mmiugtrx5k7kbr9d4di611qyfhhki109v8vgm76d5ndv5yt3zz\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"3qkg\",\n    \"endTimeNanos\" : \"2022-11-20T18:05:52.036359Z\",\n    \"dataTypeName\" : \"Lynn Stamm\",\n    \"startTimeNanos\" : \"2023-01-04T17:01:52.036448Z\",\n    \"modifiedTimeMillis\" : \"2022-11-13T15:38:52.036479Z\",\n    \"rawTimestampNanos\" : \"2023-02-20T16:06:52.03651Z\",\n    \"computationTimeMillis\" : \"2022-05-12T14:41:52.036542Z\",\n    \"value\" : [ {\n      \"intVal\" : 876476149,\n      \"fpVal\" : 1.1739922672550861E308,\n      \"stringVal\" : \"kekq619adel7vnhz3imxs4ufg89gn2uybub09ejj3tyvtdgp0cwfyb1g7seasm1yivynbuy0lr8scg18d5gww4xy8gds0xode5rsrd1866i0xbjni598k2nd670a5p6i9b51arcommqtnyx3br47oa86lac0k8qtq22ftcf7h\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 880780089,\n      \"fpVal\" : 9.593132737489676E307,\n      \"stringVal\" : \"gw4uf7wtfjb2epu4dvhcq32jxhjog1sow9ukg3rr939hd\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1120649325,\n      \"fpVal\" : 2.1969656825622767E307,\n      \"stringVal\" : \"yxy9fm7ubewsnonwarohg5fczzhar4jjnz7q25rxxbd1mktr5vxebl6x0e943r9nun9joa3a28i6trtytlg4gkk7zn51e279cf38xx3tjadr0kijesywvbkk8a7c\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2083069162,\n      \"fpVal\" : 2.115366172565885E307,\n      \"stringVal\" : \"b3gjlaj8hxkg1yvyuhb5wabrvnlftr7q8mzp7a23hbihjdqb4arrnz8evbu36guvlihzkibpfsz6cvr103n9ip1hjpkd19la111rzf8fuj8mh5p3es01lzwmyvk6sw\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2104104961,\n      \"fpVal\" : 1.0910522099161934E308,\n      \"stringVal\" : \"9c4ldh4h5gg242ih9pvhh7z9q8hzgwh1prfo6fdg84hd9cu0mam3eth29ds1i2dvnqe536d9fh4fu3u9ywqcp5j68ya7szpt6d5zpg77cefjpbh9exdw3j33dt8m1nwckgtucfwuksw1qd8oyvyjrg73yc5ke3c7gqo\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 736626085,\n      \"fpVal\" : 8.397198002911474E307,\n      \"stringVal\" : \"eq5w7t6ijz0qyumaxalphcedc53dpjcjb7ktg6sp8vrv121n9zo1r9biczegq9ipzlf9vs2ugropk45ceykiauzkhq9i80p9i5nsiol1kzi039erchzpau6h5ovahcq1swmns246wbh3fkl22hkdv3za2k8h5c47obt5\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"t197\",\n    \"endTimeNanos\" : \"2023-01-02T17:45:52.036887Z\",\n    \"dataTypeName\" : \"Marjorie Homenick\",\n    \"startTimeNanos\" : \"2022-07-04T16:57:52.036957Z\",\n    \"modifiedTimeMillis\" : \"2022-09-16T17:39:52.036984Z\",\n    \"rawTimestampNanos\" : \"2022-09-29T18:10:52.037012Z\",\n    \"computationTimeMillis\" : \"2022-04-23T16:55:52.037039Z\",\n    \"value\" : [ {\n      \"intVal\" : 659034216,\n      \"fpVal\" : 7.532847311271775E307,\n      \"stringVal\" : \"rh06jmjerg8x41ckr57ct34ukdgn29e9dmp3sm1p69cjdk5s2l400jieryb5ood6rfrmoacvqkedmo0rwz0850p0u6xswtnxhzlhfm19c666y9qr9zihjwqmwd8dzina179y9im5glwcj6pvokwzmi066tyrrmeitud6a27hx1sxptlzmigy7xwrz5swutjs1pjsrzj\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"h0u0\",\n    \"endTimeNanos\" : \"2022-11-29T14:35:52.037178Z\",\n    \"dataTypeName\" : \"Xavier Kuvalis\",\n    \"startTimeNanos\" : \"2022-09-07T15:50:52.037246Z\",\n    \"modifiedTimeMillis\" : \"2022-08-22T16:12:52.037273Z\",\n    \"rawTimestampNanos\" : \"2022-08-11T17:55:52.037301Z\",\n    \"computationTimeMillis\" : \"2022-08-01T16:41:52.037328Z\",\n    \"value\" : [ {\n      \"intVal\" : 1571251763,\n      \"fpVal\" : 1.2207915495230964E308,\n      \"stringVal\" : \"atkffqvrsf466lq7pinfukhp4vu3z7om8ozs1x992w9t2kr98fz537pwpvmo9va554ihzu8eahu8izrqy7ekrvl4e81hh4p66xpohdie9v7uvcaoobhgdqdlg1ix461dxk3p3ul1r49z63lmlqbc4t1jqnyy6dfaqslplczc3r\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 903398491,\n      \"fpVal\" : 1.38980832968568E308,\n      \"stringVal\" : \"7nukfumd6art2wcupz92hudaszkpcsu8ie7bs60655ji5yzbvjek3ghd4meerg90ei115kptf7nw59d3j55jsjclxuagllkigsihi8gr4ycc2o3wcbyqf1nryvpoyvsuwvj0jmp0fwq4wafdbkspzrz9sf3uud2ckbfi0x8tw8xcjezpu\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 2108520074,\n      \"fpVal\" : 7.376268573551274E307,\n      \"stringVal\" : \"lq4t48dztv72jj46m25mhw1zdtjov57updxtennuzo9d1pxap7k3c045lgmo12lqpcgwit4c31g\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 624744040,\n      \"fpVal\" : 6.081005825748044E307,\n      \"stringVal\" : \"99zllefj7buq4tbtbjx4pbn8tyvctw87w2iuw0cj87guvf1lyrin9i7m9i3tjwxxlazom9k00k5is6hfvcn9p7hf44iet3somi56o69jix5ph66vh7bpw9tb0tnfpl3ar95utn56f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84a21206-d559-44e4-a6c9-64158cdb34c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.037779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "01339ea1-6815-4e63-9899-f27db5973222",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/381c/dataSources/310s/datasets/3sw5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "01339ea1-6815-4e63-9899-f27db5973222",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.036056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    }
  }, {
    "id" : "b7e3f489-13a6-4194-a2b5-714d6c5a0a72",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/k3hv/dataSources/64qd/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"86zb\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"4319\",\n    \"endTimeNanos\" : \"2022-11-21T16:03:52.032297Z\",\n    \"dataTypeName\" : \"Jesse Beer\",\n    \"startTimeNanos\" : \"2022-06-22T17:08:52.032408Z\",\n    \"modifiedTimeMillis\" : \"2022-11-15T14:40:52.032442Z\",\n    \"rawTimestampNanos\" : \"2023-01-07T17:00:52.032473Z\",\n    \"computationTimeMillis\" : \"2023-01-13T15:00:52.032506Z\",\n    \"value\" : [ {\n      \"intVal\" : 1981548365,\n      \"fpVal\" : 1.5652358370189E308,\n      \"stringVal\" : \"h0mh1q8oc7prk8joyilizt0uf5wt5ujjnpwvyuiu2h0\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"ppq8\",\n    \"endTimeNanos\" : \"2022-04-09T15:14:52.032693Z\",\n    \"dataTypeName\" : \"Brianna Grady\",\n    \"startTimeNanos\" : \"2022-05-19T14:20:52.032763Z\",\n    \"modifiedTimeMillis\" : \"2022-06-30T15:09:52.032793Z\",\n    \"rawTimestampNanos\" : \"2022-11-24T15:04:52.032831Z\",\n    \"computationTimeMillis\" : \"2022-08-02T16:48:52.032862Z\",\n    \"value\" : [ {\n      \"intVal\" : 884535721,\n      \"fpVal\" : 4.304180575273498E307,\n      \"stringVal\" : \"viw6yayx14ds0ixeht417m504ofn7h31k0dtz0apvrc3v3chksp92uj2l9qm0rk15jivdkbqvccj4kwf5c8hkk4ruak3ubxloy43oolwhve2co\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 988798859,\n      \"fpVal\" : 4.205854005191319E307,\n      \"stringVal\" : \"maik2trg3j2yld72v7xt7mjk69kad8v1hlus18l3buspbxa2g\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 411657886,\n      \"fpVal\" : 1.7937222479611085E308,\n      \"stringVal\" : \"b0lfg93ilw7blln98nw54qxtlswsqxl0nmg1n6ep7l72wugknwoq325pl08esihwjbqd4r3v69lsrkwfs6uujvp5sxsokh2u26py36f2ic3cxhjhj826bml9esista1hu8fhgoxky730mn2ywbzij5adaks4zxhlgg17wxa872ba2wl2y2vl\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1740596638,\n      \"fpVal\" : 1.3702517324149944E308,\n      \"stringVal\" : \"wkt1hf8bv79w0sslzzq2g1462yiiz2f9wg8m0cnk8fqu5usa2s0l8okevr9cffyy6abw6n5wbdb8ybz4ffgt9jov9kysjdb599da8b8r461u0zayg21lpvoxvte194kep1zm6yq2854jzhr7hgktex1x2vl7e3v1fec40u2biuogjvopp25zhky5d\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1118720995,\n      \"fpVal\" : 4.1777322695252953E307,\n      \"stringVal\" : \"t43la19uohhwnnzd6woli35hpvcck8eg5mhe92h9m4unxnkevg0nd1jaysetclkf4aw9s62cvx5f8hxfjgqs2ahwfa2kfy8b3m6m7vnmmhoywy1sr3pn\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 9558741,\n      \"fpVal\" : 1.8791704993534925E307,\n      \"stringVal\" : \"uszggkxs5avoyo6p2heon6o31r8f0e8p56zumvf9pct1yy8blbs237xxqs91f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1507562860,\n      \"fpVal\" : 1.1488166669694114E307,\n      \"stringVal\" : \"1oxp1f9m03ummhhnth5be2qv5e8t6r9vsnwnkjxy7mqxprc821mjv47ua0gx88plftxjwa\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 980658690,\n      \"fpVal\" : 5.821608118456373E307,\n      \"stringVal\" : \"5mpux87vhif6unklg96nu9gc17ri8fzdvh6ydxgd8w2cf1zkiry6us6ja6hqz1i3briqwwvpjqov9g96iizd1zwj0bkqgwogzb1nmj416fi\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"7903\",\n    \"endTimeNanos\" : \"2022-08-20T17:02:52.033237Z\",\n    \"dataTypeName\" : \"Willian Walsh\",\n    \"startTimeNanos\" : \"2023-02-10T17:44:52.033307Z\",\n    \"modifiedTimeMillis\" : \"2023-02-09T15:30:52.033335Z\",\n    \"rawTimestampNanos\" : \"2022-06-13T17:53:52.033365Z\",\n    \"computationTimeMillis\" : \"2023-01-30T15:18:52.033394Z\",\n    \"value\" : [ {\n      \"intVal\" : 999958989,\n      \"fpVal\" : 1.1796426275775213E308,\n      \"stringVal\" : \"txoz3l3cdf5lome40dv4ba64id64i9chjl11jto9oighb\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 765183828,\n      \"fpVal\" : 3.995863592737379E307,\n      \"stringVal\" : \"e2ekor2r2w6qj1qqt09o2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 821836696,\n      \"fpVal\" : 5.540386193013278E307,\n      \"stringVal\" : \"u63ryrg80zl8mw6tizdhgohfcsikfc8w6bonjt68pcfxzp7uxf5gwrk37rrsubnpfnof762pwkbaua2ps3ea5ziefll\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1077982974,\n      \"fpVal\" : 6.583103840195685E306,\n      \"stringVal\" : \"whswu7kj6btfgkylmjedr1xz3owhfal8ln2ih2th35pj8io2o9oibbt9x3\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"ex34\",\n    \"endTimeNanos\" : \"2022-11-23T14:27:52.033625Z\",\n    \"dataTypeName\" : \"Herschel Raynor\",\n    \"startTimeNanos\" : \"2022-11-06T14:30:52.033698Z\",\n    \"modifiedTimeMillis\" : \"2022-06-18T15:13:52.033726Z\",\n    \"rawTimestampNanos\" : \"2022-06-03T17:48:52.033755Z\",\n    \"computationTimeMillis\" : \"2022-11-07T15:16:52.033785Z\",\n    \"value\" : [ {\n      \"intVal\" : 856615368,\n      \"fpVal\" : 1.0279778112622116E308,\n      \"stringVal\" : \"4rv4suyfqxpeec4uhrmxnjkkq5hx84i442ksyoezy79ez0cyhx93va4vrm516xgswjy2y0jmx44h235elhj\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 645374837,\n      \"fpVal\" : 1.2505651636770528E307,\n      \"stringVal\" : \"53otfnjki77067xbwizlz0nu5vgce22j1rm6wzavqlnzgo40k903a15yefk7bydru6i7eaoxo7f7hocg76tg9dwr6h1phbmx0hu4fat9huuskfzc60jekv8o31fez5dw4g7d5tp8fqh6udezg0euycdtxxcqmhl\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1398911709,\n      \"fpVal\" : 1.227989558765852E307,\n      \"stringVal\" : \"b9v0xlk4ogoz6brg94vet8ury5q8hbxkdlro2lriwilq6nrdpgm249wc1zkdzc34zretdthn0ffhl7raju7qf0zhrou6pjuq942ct7xixvdy4iqumgu9\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1948469370,\n      \"fpVal\" : 1.7812598259228493E308,\n      \"stringVal\" : \"oxu3h94kf1301wa0d6m3g5mll1ywirkpcbdhcj1uxc16mr6c65ezytl7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"6e39\",\n    \"endTimeNanos\" : \"2022-08-20T15:40:52.034053Z\",\n    \"dataTypeName\" : \"Sheba Willms\",\n    \"startTimeNanos\" : \"2022-05-13T17:35:52.034137Z\",\n    \"modifiedTimeMillis\" : \"2022-10-17T16:54:52.034168Z\",\n    \"rawTimestampNanos\" : \"2022-12-19T16:10:52.034197Z\",\n    \"computationTimeMillis\" : \"2022-10-15T14:17:52.034226Z\",\n    \"value\" : [ {\n      \"intVal\" : 1259817222,\n      \"fpVal\" : 9.620473598076665E307,\n      \"stringVal\" : \"68fwdenrckuvqm5mtfjq7e\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1811671820,\n      \"fpVal\" : 7.574397922660275E307,\n      \"stringVal\" : \"he7so9ig5wvojzvd6lf2dnr67ah1dh35cqi7848748axrc72wslf6o256r8y1zxnv9xnmcullyijwjdvp3me5f7rtsd6pgzbels3k0oifjbm000rkecgohbvzqad9l45ykv34lutv3wu52or65gjay1r2lt3dtgof\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1269390300,\n      \"fpVal\" : 1.549058569381865E308,\n      \"stringVal\" : \"hz7m10tz7madd0ugq0aofrinb4rif5i5onng4og7x2a0yt2kcibchkfo0hw70r5dekt0q75pucpk\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2055424932,\n      \"fpVal\" : 2.4119215245046865E307,\n      \"stringVal\" : \"4vdvf285rkxjc4ihr9cz4d634zr3fl5prciqzlg3b0gpl43jwh9lpufwwroc98p7cpj4eyes2\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 662822979,\n      \"fpVal\" : 1.3399745842708753E308,\n      \"stringVal\" : \"0swpujrcwjz7zy3ujnzaz6699jshslkw14p6xir7ck5oz5h0wtkwokqkzd5w8dmwrd1p657ywbbyzsdfiytwe0foiu1cl0c347pcubj57wd3iwdjnpso58q6a3fn7mc8fd4193bumekehcf61rpu5i8tnwwmgh48lfbqinf8r67yk4lzz8r3etvdy\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"wlx9\",\n    \"endTimeNanos\" : \"2022-07-18T14:27:52.0345Z\",\n    \"dataTypeName\" : \"Arlean Swaniawski PhD\",\n    \"startTimeNanos\" : \"2023-03-03T17:44:52.034573Z\",\n    \"modifiedTimeMillis\" : \"2022-05-14T16:57:52.0346Z\",\n    \"rawTimestampNanos\" : \"2022-12-10T15:00:52.034627Z\",\n    \"computationTimeMillis\" : \"2022-07-11T16:50:52.034655Z\",\n    \"value\" : [ {\n      \"intVal\" : 1798827237,\n      \"fpVal\" : 1.4427603761759267E308,\n      \"stringVal\" : \"yxp3fc6ckz5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1397198458,\n      \"fpVal\" : 9.60935908268483E307,\n      \"stringVal\" : \"2pmdr1dqupu7zwuarsj4b7qccko7bj7tpg57py65jsjgd6tel6ipypu94xuxfcamwb0du2bms425czit1iq82z5buknu5x1oxtsxrfxpg0i3ba1uxflwccqc25b2u002ha7hi\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 231707751,\n      \"fpVal\" : 8.380001267817343E306,\n      \"stringVal\" : \"b6ihi1w0xo8n8ytznhbs78r6pzoxkw7h2qawaptkxg530byuah1mjjgxx0qsmwm43gbv439tlvcz68ouqe1e33xvye36kib2zowhmhlx1ip8lxlre7lcpf4jwesnunm6dnuv9dkxrzfxrlj5zkeriovpwnxywcz2l4tw1cuad87viltksm\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1329014749,\n      \"fpVal\" : 7.086272054596365E307,\n      \"stringVal\" : \"1p6mb31f8ssdvb1i726nbocgidu2i2bi6rsdgax4pdk50g7314zo6kh1xrxnhm7l3ouhaswdubs42oe6al14gks8i6zto3y8wk2nsnz7pmcy6f6\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2106406489,\n      \"fpVal\" : 1.0381093089852893E308,\n      \"stringVal\" : \"a8r2bakg86t6u6bzj56ypiw0f4r3dlhdxmwawa8nl74psm6akq2rz15v5upo1at47usvlz2g97i27549djeqfqjs558lw77tx9i5xxohaf7orla5zgbocyllwy8d\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"z1nfdve86cvidhpis0rluf9ice0chrcqhwxnuyu87c39akw7wg0hxmoaokl0rmycf2aozyyukyeyg9m3uipc4gm3wvkouu0bmdtbr78mb2pquce6eq3zx5orboswv\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"3411\",\n    \"endTimeNanos\" : \"2023-03-03T16:01:52.034957Z\",\n    \"dataTypeName\" : \"Elli White\",\n    \"startTimeNanos\" : \"2022-05-23T15:43:52.035025Z\",\n    \"modifiedTimeMillis\" : \"2022-08-24T15:30:52.035053Z\",\n    \"rawTimestampNanos\" : \"2022-05-10T14:32:52.03508Z\",\n    \"computationTimeMillis\" : \"2022-06-02T16:27:52.035107Z\",\n    \"value\" : [ {\n      \"intVal\" : 246521549,\n      \"fpVal\" : 9.362418362179012E307,\n      \"stringVal\" : \"i8t0hn9ei85g8giudsan2xxalsx52xwnqvzhziwcw1yntby19xubw5ccnislzgcoy36segdw44cqxajmf44za6zi6jvfisjmbrdnrd2xm4c8nhehk2kxj0obhfk28m7oubosmhwr2i\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2069968897,\n      \"fpVal\" : 2.0944279913777137E306,\n      \"stringVal\" : \"7ftsokbylwl1032phxx3axgla4rex1t6u8srrwas3q8jw8vt72nlxosgnhpx9g7ul2q9ub0oqqmohxl9k625xp9a7t1igxwqkkvbqq\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1819241945,\n      \"fpVal\" : 5.305080055097745E306,\n      \"stringVal\" : \"jwjmx5lwhy6kwrl1tex8z4q1dt3q9kxpg7btrk0hyqd55rkusawcxgcu9curklc0a\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 2063550077,\n      \"fpVal\" : 7.080375845051612E307,\n      \"stringVal\" : \"f0t27hjlukymancwei7970zl0j5i7\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 42372637,\n      \"fpVal\" : 1.3562118491188189E306,\n      \"stringVal\" : \"t14cfl9zvrt8snucrohm33w063au1u93burymmyw0cj7uqimb95ycmenrxfomttceu9wapktidlss3x7a8qfmbhswuncu7bk2siqccwfjxnlvfy0gbcjyprg1gksd7hsbt78eflyh69g\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 2118511274,\n      \"fpVal\" : 4.709577836901974E307,\n      \"stringVal\" : \"9bybajussfs\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 885609914,\n      \"fpVal\" : 1.6322073196054007E308,\n      \"stringVal\" : \"3wr5gdikyzkhjzxwohusr8df4svl8ne9h45sn92lvbr77s8xq7w36barbq\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7e3f489-13a6-4194-a2b5-714d6c5a0a72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.035794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dbe3b2e4-4b26-4c5a-9fd6-1213ff250490",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/ohx1/dataSources/x8qo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Lawrence Connelly\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/510715\",\n    \"name\" : \"Long Walter IV\",\n    \"packageName\" : \"Dr. Cherise Hansen\",\n    \"version\" : \"unr24452zmggfzkbvwgrwglypru4iasa9d0jf6gssoze9h8bbgdphzrb85eii40f0jv8e3ug1s5xljxp9ij\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"string\",\n      \"name\" : \"Errol Kessler\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Xavier Romaguera DVM\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Ms. Lonnie Pagac\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Toby Fay\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Isiah Feeney\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Garfield McClure\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Isa Barton\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Mrs. Gerry Johnston\"\n  },\n  \"name\" : \"Liane West\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsAB\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureAami\", \"dataQualityUnknown\", \"dataQualityBloodGlucoseIso151972013\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"k9j6\",\n    \"model\" : \"c6inua2ldw6e8ifz4pou7xt8vx6grez9qwf0s5193jw1ltu51uo54twgs5ajz135a9ljxlxhs132xy3k971ktlyhd3ff4h3gf4kvwmj1vop5w2r7seqenl8snbbveabp6z4w95a89ugimslkrhxrsk5o2ti3l7w9io8mhd2z9s1609\",\n    \"type\" : \"unknown\",\n    \"version\" : \"bqyjeo4t81dmfbxdvhhlxozds4fjlknwabkp7nrwf0of67h7gtv6x7\",\n    \"manufacturer\" : \"jiw8wupf5n4mmkdptmzjfpq0bnj38dg7suavne42i6uxyieolnvh4rjdwy4f28fnplyoqcxj01y0c1lvcdvzn0dioq16c608zev0ras9wvhvrbsnu7yyy5qe7jnnuc2ihedgc6s509nak3emp2pnbsv2a6lhrz937duyyv36m6nhbiz77e3gb7tpozgyg6\"\n  },\n  \"dataStreamId\" : \"d1c9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbe3b2e4-4b26-4c5a-9fd6-1213ff250490",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.032075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d01d85bb-ed88-4d6e-b2ec-56a9064d5320",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/41f8/dataSources/xxq5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Klara Cassin DDS\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/713434\",\n    \"name\" : \"Alline Walter\",\n    \"packageName\" : \"Ms. Brandi Bahringer\",\n    \"version\" : \"eioonh5881v284as3upbedwvg3biq6ypjoucy2k\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"string\",\n      \"name\" : \"Doug Weber\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Mafalda Morar IV\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Willard Buckridge\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Arnoldo Wiegand\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Terrell Marks\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Augustus Leffler\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Olivia Nikolaus\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Suzann Schinner DDS\"\n  },\n  \"name\" : \"Carmon Wisozk\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\", \"dataQualityUnknown\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsBA\", \"dataQualityUnknown\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"e896\",\n    \"model\" : \"d64n9ipfnwv23g26fwm18qq98oame2sbpx1ezr6mjcykq\",\n    \"type\" : \"phone\",\n    \"version\" : \"ft8qsafdzxj6bvgtnk58bq1izm92z1mxnqhvyx99egffnrms\",\n    \"manufacturer\" : \"8qlu69mgcler7mi2337hsmxc4mcoa15i23lyhlwecqz9vkzzf3mvp4lgvphdqug8avcm132tit5reryzfu72tkcoihms2o7ayto8uhu2ju8oo66k17fl9992pr1k6vasg\"\n  },\n  \"dataStreamId\" : \"666v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d01d85bb-ed88-4d6e-b2ec-56a9064d5320",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.030739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "805cdceb-b6a5-4333-bdbd-8620916c4806",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/0j4o/dataSources/c3d6",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Dr. Jaime Bailey\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/240256\",\n    \"name\" : \"Mr. Kirstie Heaney\",\n    \"packageName\" : \"Arnulfo Stroman\",\n    \"version\" : \"zlz4tj8izsbqp97ihti22k6lemzke4lwrytmbg54br6c7bdx62u1hcpx3z6cwy\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Dan Willms\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Eliseo Barrows\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Loreta Gutmann V\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Jody Hand\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Valorie Lindgren\"\n  },\n  \"name\" : \"Thanh Dare PhD\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsAB\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"2cc8\",\n    \"model\" : \"dpbp52yqgytqkl4eyx62zl3b6vhsdacer2bfdf8lutsk6gryy7bcdqtri5mhtrj9ixj1ydavybf8h8099cqci61jecx46wuqiyvvknh3fk4cr5a0qazhyc355nbyyf04ahedjun6qk9irwxfevatl4fekc08bu6k2\",\n    \"type\" : \"smartDisplay\",\n    \"version\" : \"z37iq5kyke18rfpbcwov1898a0xm8gfy6m1n3ens2a7aylu6txjj37eazvffaschtmxnfjgi81dj8ud1jeu4l6uxvyieu05u4to2dphfajjsur1lf31qwhp59bun7ymmr1ss92mka3jujnv9tso13oq0fck2ydu8hv7lododfyezw6auhogtf\",\n    \"manufacturer\" : \"oz7e0nvl9o1y1klgffnwnp9gei9tnzh3ohszrwvwcj2rocaqwcyh4ketz980\"\n  },\n  \"dataStreamId\" : \"f205\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "805cdceb-b6a5-4333-bdbd-8620916c4806",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.029647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f923e7f8-c0f2-4419-90da-068e420d9889",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/9u88/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Kasey Batz\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/392129\",\n    \"name\" : \"Isobel Kling\",\n    \"packageName\" : \"Thelma Jerde II\",\n    \"version\" : \"1qirb9z64eagrvkotw8c3zkgn27s4ikotefevd9cutdhhd6kaad4mu5q29mju1ahzinb5o27g29swbd4fanisms1fksz6bf1wr04luz81w21a9x0glu4kroa93o6cnnf39rj5z495cfwkneh2qvgppnks9gp\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integer\",\n      \"name\" : \"Brandee Bins\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Nilsa Rodriguez\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Miss Temple Schulist\"\n  },\n  \"name\" : \"Kerry Cummerata\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureEsh2010\", \"dataQualityUnknown\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsBB\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"5736\",\n    \"model\" : \"2l4nwujndbbubn1nzb93toczz2ummykep9m\",\n    \"type\" : \"unknown\",\n    \"version\" : \"qh8v2k4yzv1hd8nqay3ohj76173p3rjggtxxh75zezabqfl4pegp8v41ttjhb9le5m0lgyzpt5ohvy9vxlotg28akhopjr3f6c63jeazkmblerq4z039a3ui\",\n    \"manufacturer\" : \"v8g1fttigjbaqstx5e0cmzban69nar5w1eeup59rykdwbeldbikkbvehu2z8stj7fq6yhet17kwm\"\n  },\n  \"dataStreamId\" : \"7h1q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f923e7f8-c0f2-4419-90da-068e420d9889",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.02867Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c663186f-8670-41af-b5d4-2e54966699b3",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/uxi9/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Milly Kerluke\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/974666\",\n      \"name\" : \"Tania Maggio\",\n      \"packageName\" : \"Raina Tremblay\",\n      \"version\" : \"l4p87s9vibiff8zo\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Natalia Schoen\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Cynthia Littel\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Sadye Oberbrunner\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Ms. Millard Collier\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Jonathan Haley\"\n    },\n    \"name\" : \"Tari Stehr\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsAB\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"tl16\",\n      \"model\" : \"v4wfmqoe0v23p4eby\",\n      \"type\" : \"unknown\",\n      \"version\" : \"y653ev4l4nkbyeydbe7t9rnlqf1f4g9qo527giv2h4sjvlmle8pjjinyeatvqu6p73cuqug0ohenen905b9pj4y2oaiskko0xg891nnnrmfgbikx139oe9uu14cw5e8kgjhu5tg\",\n      \"manufacturer\" : \"hgoxppqh1bgn93wxo2gqyiw04ut2t5be65wwzgrhi04y8ni1i2b7uvjt068c4shz3gfnuwd\"\n    },\n    \"dataStreamId\" : \"gltz\"\n  }, {\n    \"dataStreamName\" : \"Roman Treutel\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/370961\",\n      \"name\" : \"Elisha Bernhard\",\n      \"packageName\" : \"Carola Raynor\",\n      \"version\" : \"zy8q711jniey8jg01rn9ibp0obsr19bfl659vqtfafm6jrb863gzl0lckbrja9og8uavaci9jssmbcjsccnqoj6qn3lh5h8zkm1oj5xryqc6mi0gazalx0h5rgboenax8pwbk388rlua22946jze7bhtlpepdsbldntlw0u8x\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"blob\",\n        \"name\" : \"Thad Roob\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Dwayne Jacobi\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Harley Sawayn DVM\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Bridget Harvey Sr.\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Drucilla Donnelly\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Jude Lindgren III\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Cornelia Von\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Maida Hudson\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Sheilah Willms Sr.\"\n    },\n    \"name\" : \"Dori Bergstrom\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBA\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"s90k\",\n      \"model\" : \"7lk7qaohif366r722x26jvjd48rrec3jgi74cwf0v3yupubmiq9rk0klg\",\n      \"type\" : \"scale\",\n      \"version\" : \"jz6h3s69nnniaryovmn0c967sgph8yn2pinwsjevaz7ubktib5sql3clcf\",\n      \"manufacturer\" : \"4pdxokhhxwivo0t68da2wps2elve42scffm2nqsolgt5aff19vdt95knl4wjbh4v0arstb3fgvg8\"\n    },\n    \"dataStreamId\" : \"d87m\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c663186f-8670-41af-b5d4-2e54966699b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:52.027824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}