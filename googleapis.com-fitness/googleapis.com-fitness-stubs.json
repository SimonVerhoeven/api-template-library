{
  "mappings" : [ {
    "id" : "80062011-f13f-46db-99e0-9d5d194790da",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/sp32/sessions/1vi4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2022-08-28T08:42:42.619332Z\",\n  \"endTimeMillis\" : \"2022-07-14T09:26:42.619359Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/675101\",\n    \"name\" : \"Hermine Murazik\",\n    \"packageName\" : \"Chuck Rippin\",\n    \"version\" : \"i1lhsn9eoolxcb8050y9fzp1zgg45ae6kdc1414pfgnktk8gj73ekns623bpqn5eag\"\n  },\n  \"startTimeMillis\" : \"2022-07-28T10:50:42.619544Z\",\n  \"name\" : \"Rudolph Cummings\",\n  \"description\" : \"Mollitia sapiente vel mollitia distinctio. Nihil omnis quis sit exercitationem eum. Eligendi enim dolorem quisquam veritatis vel provident consectetur.\",\n  \"modifiedTimeMillis\" : \"2023-02-21T11:10:42.619635Z\",\n  \"id\" : \"dn87\",\n  \"activityType\" : 316079520\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80062011-f13f-46db-99e0-9d5d194790da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.619933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "cf5c9bbd-aa87-4d03-8b84-f78dd1e1b439",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/6qix/sessions/wwbf",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cf5c9bbd-aa87-4d03-8b84-f78dd1e1b439",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.619298Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "c0112454-56a6-4719-bf9b-04a82d3338c0",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/p5qs/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"9k0ky8w6bz0end32a59swa12oac6cnxoiyrf8ob4g\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2023-01-17T08:21:42.614306Z\",\n    \"endTimeMillis\" : \"2022-04-11T10:26:42.614334Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/162095\",\n      \"name\" : \"Mrs. John Gleason\",\n      \"packageName\" : \"Marguerita Emmerich\",\n      \"version\" : \"xy9lc49941ug9dji9l\"\n    },\n    \"startTimeMillis\" : \"2022-12-11T10:38:42.614529Z\",\n    \"name\" : \"Danita Murray\",\n    \"description\" : \"Autem dolor rem fugit. Hic amet deserunt dolores voluptatem in veritatis. Maxime et velit. Quidem non molestiae.\",\n    \"modifiedTimeMillis\" : \"2022-11-16T11:10:42.614625Z\",\n    \"id\" : \"d15i\",\n    \"activityType\" : 1830864816\n  }, {\n    \"activeTimeMillis\" : \"2022-12-23T09:52:42.614729Z\",\n    \"endTimeMillis\" : \"2023-02-07T11:59:42.614757Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/300618\",\n      \"name\" : \"Miss Toby McDermott\",\n      \"packageName\" : \"Vita Halvorson\",\n      \"version\" : \"srexs1oe6cmrwczuxih4joginjpk9tsegh238a81r3to3aerjqko4ouljeu3\"\n    },\n    \"startTimeMillis\" : \"2022-07-22T09:31:42.614944Z\",\n    \"name\" : \"Harley Ruecker\",\n    \"description\" : \"Tenetur eos delectus voluptatem. Vitae ea modi. In saepe pariatur quibusdam cum porro amet. Nihil recusandae veniam autem sapiente dolor. Non autem cumque non beatae a est velit.\",\n    \"modifiedTimeMillis\" : \"2022-08-27T10:52:42.615051Z\",\n    \"id\" : \"2475\",\n    \"activityType\" : 1775874354\n  }, {\n    \"activeTimeMillis\" : \"2022-09-20T11:54:42.615153Z\",\n    \"endTimeMillis\" : \"2022-10-19T10:57:42.615182Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/940200\",\n      \"name\" : \"Velvet Smith\",\n      \"packageName\" : \"Boyd Berge\",\n      \"version\" : \"iuuprs84zrvx2usy29bg7jttp10frs\"\n    },\n    \"startTimeMillis\" : \"2022-10-20T12:05:42.615371Z\",\n    \"name\" : \"Amira Sipes\",\n    \"description\" : \"Ut quibusdam repudiandae inventore corporis non. Doloribus veniam libero aliquam dicta. Deserunt velit tenetur.\",\n    \"modifiedTimeMillis\" : \"2023-01-10T11:40:42.615469Z\",\n    \"id\" : \"5u84\",\n    \"activityType\" : 688434087\n  } ],\n  \"hasMoreData\" : false,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2023-03-01T11:32:42.615581Z\",\n    \"endTimeMillis\" : \"2022-03-29T11:15:42.615609Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/791491\",\n      \"name\" : \"Carmelita Veum III\",\n      \"packageName\" : \"Wesley Brakus\",\n      \"version\" : \"zahasvh7lauvakv8cundyq23wun82n6a3v7s179n69a86e0r8f97zqolpwb7jzqggeesotbjlvbb5dkywqd5xya4v8r7xreub99ltbmy3pfx3wxivph6qoz4a6fr4syqjetjg7a543c0g\"\n    },\n    \"startTimeMillis\" : \"2022-07-12T11:26:42.615803Z\",\n    \"name\" : \"Nella Hauck\",\n    \"description\" : \"Commodi vel cumque voluptas aspernatur. Odit laborum aliquam maxime. Magni quos quae doloremque aperiam eaque vero cupiditate.\",\n    \"modifiedTimeMillis\" : \"2023-01-29T09:09:42.615902Z\",\n    \"id\" : \"yn17\",\n    \"activityType\" : 1018634434\n  }, {\n    \"activeTimeMillis\" : \"2023-01-21T09:42:42.616009Z\",\n    \"endTimeMillis\" : \"2023-02-26T10:30:42.616037Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/295447\",\n      \"name\" : \"Eloise Schuppe\",\n      \"packageName\" : \"Bari McLaughlin\",\n      \"version\" : \"kptnmlivnxjv6rz0fxu4f0e78txternyp9t1o85xfye3788p7fujvykxgy41qehv1h6v0j5i\"\n    },\n    \"startTimeMillis\" : \"2022-11-04T09:45:42.616219Z\",\n    \"name\" : \"Odette Koch\",\n    \"description\" : \"Eum ut sed est repudiandae voluptatem. Soluta et omnis esse sit et rerum. Aut ad ullam laborum nobis aut. Ut error unde velit.\",\n    \"modifiedTimeMillis\" : \"2023-02-08T10:07:42.616318Z\",\n    \"id\" : \"7jm6\",\n    \"activityType\" : 1043673177\n  }, {\n    \"activeTimeMillis\" : \"2022-04-07T08:55:42.616421Z\",\n    \"endTimeMillis\" : \"2023-03-10T10:37:42.61645Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/255077\",\n      \"name\" : \"Jessenia Ritchie\",\n      \"packageName\" : \"Dee Beahan\",\n      \"version\" : \"17p415rik43jusx2uvi41n3pacs74x4u7z7gn5oy\"\n    },\n    \"startTimeMillis\" : \"2022-06-28T12:18:42.616635Z\",\n    \"name\" : \"Elbert Schuppe\",\n    \"description\" : \"Non blanditiis doloremque. Beatae enim voluptatem voluptatem rerum enim. Harum voluptas aut minima enim nihil.\",\n    \"modifiedTimeMillis\" : \"2023-02-27T10:30:42.61673Z\",\n    \"id\" : \"fi0m\",\n    \"activityType\" : 18487311\n  }, {\n    \"activeTimeMillis\" : \"2022-04-30T08:40:42.616831Z\",\n    \"endTimeMillis\" : \"2022-04-30T10:48:42.61686Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/946389\",\n      \"name\" : \"Albert Kub\",\n      \"packageName\" : \"Mrs. Jonathan O'Connell\",\n      \"version\" : \"xjyw321m24say7ljwl0652bcluqkh6md5vqdy0th1qv9ppogflvjbetnoigdg2bll84eg4hphxdtxc3w0w61ekf6tmgsesa597teas4z0r41qrf77ie40f8k8ea53pvnrh99x4bf5aa5s6jg\"\n    },\n    \"startTimeMillis\" : \"2022-12-18T12:13:42.617045Z\",\n    \"name\" : \"Dr. Raylene Langworth\",\n    \"description\" : \"Dolore deserunt labore est. Temporibus praesentium sunt impedit sapiente aperiam consequatur et. Maiores amet consectetur.\",\n    \"modifiedTimeMillis\" : \"2022-03-19T08:20:42.617143Z\",\n    \"id\" : \"4gk7\",\n    \"activityType\" : 1022909871\n  }, {\n    \"activeTimeMillis\" : \"2022-06-25T11:39:42.617247Z\",\n    \"endTimeMillis\" : \"2023-01-03T11:59:42.617274Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/623691\",\n      \"name\" : \"Porfirio Roob I\",\n      \"packageName\" : \"Ms. Tyrell O'Conner\",\n      \"version\" : \"p48a6htv215d\"\n    },\n    \"startTimeMillis\" : \"2022-07-23T11:03:42.617468Z\",\n    \"name\" : \"Jovan Dickinson III\",\n    \"description\" : \"Quam harum eius nemo. Voluptate cumque saepe omnis ea error. Quas quas architecto. Perspiciatis autem tempore nobis voluptatum.\",\n    \"modifiedTimeMillis\" : \"2022-12-17T09:28:42.617572Z\",\n    \"id\" : \"6z6o\",\n    \"activityType\" : 133856333\n  }, {\n    \"activeTimeMillis\" : \"2022-05-22T11:28:42.617678Z\",\n    \"endTimeMillis\" : \"2022-10-01T10:22:42.617708Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/830457\",\n      \"name\" : \"Katia Daniel\",\n      \"packageName\" : \"Dr. Moshe Veum\",\n      \"version\" : \"7glqhz0uyhinilnv8bvkc4w3mp2tzaowl0qnnedsnhmy4f671s1i30ryr08tr74g\"\n    },\n    \"startTimeMillis\" : \"2022-04-11T10:28:42.617902Z\",\n    \"name\" : \"Edmond Jacobi\",\n    \"description\" : \"Ullam fugit est quisquam sed qui. Magnam ipsa suscipit. Fugiat asperiores nihil aperiam.\",\n    \"modifiedTimeMillis\" : \"2022-07-07T11:33:42.617997Z\",\n    \"id\" : \"ie10\",\n    \"activityType\" : 1441900512\n  }, {\n    \"activeTimeMillis\" : \"2022-08-04T11:32:42.618098Z\",\n    \"endTimeMillis\" : \"2023-02-05T10:12:42.618128Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/893594\",\n      \"name\" : \"Lilliam Bartoletti I\",\n      \"packageName\" : \"Wanda Gutkowski III\",\n      \"version\" : \"ukd28mf28fc0qpx574xifr6h9xk8ors56f1ob6bntfvvcv051lncnenbevt8c1yqrq342et\"\n    },\n    \"startTimeMillis\" : \"2023-02-15T09:38:42.618309Z\",\n    \"name\" : \"Bernie Lebsack Sr.\",\n    \"description\" : \"Ab aperiam deleniti vero. Earum velit nemo. In nihil omnis corporis natus dolorum. Tempora mollitia dicta qui fugit delectus perferendis. Natus eveniet ut.\",\n    \"modifiedTimeMillis\" : \"2022-10-04T09:42:42.618409Z\",\n    \"id\" : \"1va3\",\n    \"activityType\" : 515221962\n  }, {\n    \"activeTimeMillis\" : \"2022-05-13T10:40:42.61851Z\",\n    \"endTimeMillis\" : \"2022-10-21T11:51:42.618539Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/579042\",\n      \"name\" : \"Bunny Schmidt\",\n      \"packageName\" : \"Rachal Ritchie II\",\n      \"version\" : \"v3okdef5lgi1u8525nsmaixz7x4nfm82pcvhcszcb7bbeux7jbdfo4kyam4lmb3ahd09d8x1kr7ydoou1hn71iz2d55ieasf91zxsx20ajf7bskmu0thqoj6s7sqj53tvxh5stme3si8j4wkm\"\n    },\n    \"startTimeMillis\" : \"2023-01-15T10:16:42.618722Z\",\n    \"name\" : \"Arcelia Hamill\",\n    \"description\" : \"Qui impedit et. Eum delectus dolorem unde nulla amet debitis. Ea omnis totam vel qui voluptatem quia. Eius quod dolore aut ut sunt asperiores quo.\",\n    \"modifiedTimeMillis\" : \"2022-04-09T09:37:42.618822Z\",\n    \"id\" : \"4oa8\",\n    \"activityType\" : 341586384\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0112454-56a6-4719-bf9b-04a82d3338c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.619121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b345ecb8-9b87-4f3d-8feb-092fc9a50156",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/1mz1/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2022-08-09T11:22:42.608062Z\",\n    \"activity\" : 1261449207,\n    \"startTimeMillis\" : \"2022-11-13T12:12:42.608105Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-04-04T09:53:42.608144Z\",\n      \"endTimeMillis\" : \"2022-12-22T10:03:42.608175Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/348276\",\n        \"name\" : \"Nelson Okuneva\",\n        \"packageName\" : \"Lenna Mueller\",\n        \"version\" : \"n5g9qc9yoxw4kje9rdncivryya3d4fgc1ex99m2w155xnt0r5x1h5zueb4el73uury1rhqh7apr16ruegidib8jh34jpx86v5xoju8pmduoc4oly6p927ou9iufjv5t3j97pjog5hnvprzx7qi36e9bcnvs1g8ba\"\n      },\n      \"startTimeMillis\" : \"2022-11-02T09:06:42.608399Z\",\n      \"name\" : \"Miss Desire Bergnaum\",\n      \"description\" : \"Numquam quibusdam error. Quibusdam omnis nobis consequatur quo. Libero incidunt libero accusantium natus hic. Quaerat consequatur libero aut aut.\",\n      \"modifiedTimeMillis\" : \"2023-01-29T08:58:42.608517Z\",\n      \"id\" : \"ky1q\",\n      \"activityType\" : 2018623959\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"0e0h\",\n      \"maxEndTimeNs\" : \"2022-09-24T12:00:42.608717Z\",\n      \"minStartTimeNs\" : \"2023-01-08T09:19:42.608746Z\",\n      \"nextPageToken\" : \"i6jc8advblvt7swl63wgle4lw7gzf31e5za\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"0qoj\",\n      \"maxEndTimeNs\" : \"2022-12-22T10:27:42.608867Z\",\n      \"minStartTimeNs\" : \"2022-10-10T09:29:42.608894Z\",\n      \"nextPageToken\" : \"05df4juo51ab2fgnipp9ltyejascdagjfl5g25zqqq6zcbgrfdcolokfpcujz1vzrdhu8ofz12vr7rzzjwtbega9zyj0wxgxp803p9xnzgkr7528fqsrlzlhelurb2pdgnr770tqowqeja00a700ivflpsz76ccj049x407wfzd8pp4t\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"8u21\",\n      \"maxEndTimeNs\" : \"2022-04-12T10:51:42.609011Z\",\n      \"minStartTimeNs\" : \"2022-05-29T11:08:42.60904Z\",\n      \"nextPageToken\" : \"rr3nnyn3yr4g8wn2c2pyxrbh7kkabcsmi9cfhhliquhwait9vdkfth9xioisa\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-10-14T10:38:42.609096Z\",\n    \"activity\" : 256419381,\n    \"startTimeMillis\" : \"2022-06-30T10:16:42.609129Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-12-19T11:27:42.609158Z\",\n      \"endTimeMillis\" : \"2022-06-08T09:24:42.609186Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/337668\",\n        \"name\" : \"Alisha Leannon\",\n        \"packageName\" : \"Mrs. Particia Kling\",\n        \"version\" : \"0q965\"\n      },\n      \"startTimeMillis\" : \"2022-03-18T08:34:42.609377Z\",\n      \"name\" : \"Lynnette Witting PhD\",\n      \"description\" : \"Enim ipsum incidunt sunt. Commodi quia sit blanditiis et. Sapiente modi cumque. Impedit qui aut aspernatur.\",\n      \"modifiedTimeMillis\" : \"2022-04-09T11:27:42.609481Z\",\n      \"id\" : \"385d\",\n      \"activityType\" : 1373087962\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"w621\",\n      \"maxEndTimeNs\" : \"2022-11-13T09:13:42.609667Z\",\n      \"minStartTimeNs\" : \"2022-08-02T12:05:42.609697Z\",\n      \"nextPageToken\" : \"7j0sjsdvhe7r70gyi4wwg8hyx36nn0zrhkoaa28i3oe134yzslqi683skbnv392kbdgvlli6fz5kgvx183txvcar2aijaf68mhzslr418y93fph0a6lvrwgwr\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-01-15T11:17:42.609755Z\",\n    \"activity\" : 1862999220,\n    \"startTimeMillis\" : \"2023-02-08T10:03:42.609786Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-06-06T09:32:42.609815Z\",\n      \"endTimeMillis\" : \"2022-10-30T10:19:42.609844Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/672177\",\n        \"name\" : \"Gaston Schimmel\",\n        \"packageName\" : \"Alton Emmerich\",\n        \"version\" : \"7adhqrbeczfl190ma5x5rsd7avjyad9vzwhxm0zjxace239nkb1usrs1y14q8gluc3lzh5jqpz17mv2u22iym519ajqgkewl79wv7v2tr0f4lh8e8ggw89k84vvcg4i85hi2uu5xg3sfgcipqf3xqz8eacaheq2rfr7c\"\n      },\n      \"startTimeMillis\" : \"2022-11-29T08:52:42.610038Z\",\n      \"name\" : \"Hollis Cummerata\",\n      \"description\" : \"In praesentium veniam cupiditate quis. Voluptas a pariatur amet. Ut quae est maiores magni. Ut pariatur occaecati fuga sint.\",\n      \"modifiedTimeMillis\" : \"2022-08-31T08:42:42.61014Z\",\n      \"id\" : \"700n\",\n      \"activityType\" : 1464711701\n    },\n    \"type\" : \"unknown\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"52xe\",\n      \"maxEndTimeNs\" : \"2022-04-19T08:48:42.61032Z\",\n      \"minStartTimeNs\" : \"2022-10-13T11:44:42.610347Z\",\n      \"nextPageToken\" : \"o1vc6ccay1r08ur29isbmeeees2x6712n9e9x1onewa0hnk87fj4ehohp\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"1vu0\",\n      \"maxEndTimeNs\" : \"2022-05-25T10:51:42.610464Z\",\n      \"minStartTimeNs\" : \"2022-10-14T11:49:42.610492Z\",\n      \"nextPageToken\" : \"nr9cz7f1y23xuoozsablqurebwz9pxk4u5zv9aznj94wtozzrxas3f84yj23gyxnse0dtyvbwgaqo6vygqbp1vc3mgschouf42iip4z6g4xazoq0lfyscrmywyxrkamnfy3rtw4id7ltn4x0bmbgc7n4cvpct\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"k1p1\",\n      \"maxEndTimeNs\" : \"2022-08-21T11:35:42.610614Z\",\n      \"minStartTimeNs\" : \"2022-12-06T11:06:42.61064Z\",\n      \"nextPageToken\" : \"v9s77bwoputqn7zgudnskr1ec7td8i\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"m88h\",\n      \"maxEndTimeNs\" : \"2022-10-27T09:20:42.610752Z\",\n      \"minStartTimeNs\" : \"2022-06-13T08:56:42.610779Z\",\n      \"nextPageToken\" : \"95lcmpok\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-10-07T08:47:42.610835Z\",\n    \"activity\" : 1604558273,\n    \"startTimeMillis\" : \"2022-06-12T11:12:42.610867Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-04-10T10:34:42.610901Z\",\n      \"endTimeMillis\" : \"2022-12-14T12:01:42.610932Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/570913\",\n        \"name\" : \"Matt Lowe\",\n        \"packageName\" : \"Dr. Graciela Ledner\",\n        \"version\" : \"bkccll4n3u25r9lnsg6bccjl0r\"\n      },\n      \"startTimeMillis\" : \"2022-04-13T10:42:42.61113Z\",\n      \"name\" : \"Dale Gaylord\",\n      \"description\" : \"Assumenda sed in hic soluta eos error est. Officiis minus veritatis quos. Ut praesentium nesciunt in dolores cupiditate.\",\n      \"modifiedTimeMillis\" : \"2022-11-01T09:45:42.611225Z\",\n      \"id\" : \"4c42\",\n      \"activityType\" : 1783476412\n    },\n    \"type\" : \"activitySegment\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"5348\",\n      \"maxEndTimeNs\" : \"2022-07-13T11:49:42.611413Z\",\n      \"minStartTimeNs\" : \"2022-05-21T10:46:42.611446Z\",\n      \"nextPageToken\" : \"pcjialhgolc0urzallglgpju1kcbld5d3jdtxngzc4dxvx7ix5raset35chuyqmgdw7psouee63312503hk5ug3ly604xubelkoo28tducwu3\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"8n8s\",\n      \"maxEndTimeNs\" : \"2022-12-18T09:32:42.611572Z\",\n      \"minStartTimeNs\" : \"2022-08-14T12:12:42.6116Z\",\n      \"nextPageToken\" : \"6w9oflo8362bonjlem471poxokp6r46dl5xm8x665nenpn2sjcpex4tpw7mqbzcx8faqfwtsh1sb1cvpir35ozov1tmvcbhx820to9hc4xz7gt6tchgt7o2merlax1v9msl7eq2x8qvf55ry6a7txmufbwbjbhwh0c3fpigcus9m0qluqpc6r4u7rl9htnopordyy\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"117q\",\n      \"maxEndTimeNs\" : \"2023-01-19T11:59:42.611718Z\",\n      \"minStartTimeNs\" : \"2023-01-27T08:31:42.611749Z\",\n      \"nextPageToken\" : \"i1ar5zpqcd\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"1x3o\",\n      \"maxEndTimeNs\" : \"2023-02-12T11:15:42.611866Z\",\n      \"minStartTimeNs\" : \"2022-09-17T10:23:42.611896Z\",\n      \"nextPageToken\" : \"7u5ds753474mytadxkcjs4r87o3zn0lwovzkck4x0nqsv0tbjze396al9w6sn7nj4ijarl2195sm5jnb7ttxs65968zsx47mg\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"25j0\",\n      \"maxEndTimeNs\" : \"2022-12-01T09:41:42.612023Z\",\n      \"minStartTimeNs\" : \"2022-12-14T10:20:42.612049Z\",\n      \"nextPageToken\" : \"eve8sjsb87dokzp58bvaiaxwc56gkivo8xnv744a5g8wjs0ejphv7oszwvcjn4wazpicbk4qksxqykshw8y0hnu9zqya8owss7ndq78ghn5fqg2n\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4p6n\",\n      \"maxEndTimeNs\" : \"2022-08-15T09:33:42.612168Z\",\n      \"minStartTimeNs\" : \"2022-10-26T12:18:42.612197Z\",\n      \"nextPageToken\" : \"3pip9pcm2q786inmpgugtnjd312z703cfon5r81zv3ad27g9wgy67nlrmba7dnx1uiygyu2n8j4eo4zon5pa3hzipv4xw3qnav39xctls4ma3dw36blpelrp6djsubrrobygdyky3wkx5g3dlndt45699hbpvd8l5qkdpfsq9dgw7ijrwb2h\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-10-01T10:12:42.612261Z\",\n    \"activity\" : 558143754,\n    \"startTimeMillis\" : \"2022-04-02T09:28:42.612293Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2023-01-02T08:26:42.612328Z\",\n      \"endTimeMillis\" : \"2022-06-25T10:37:42.612357Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/051893\",\n        \"name\" : \"Amanda Kautzer\",\n        \"packageName\" : \"Mr. Josefine DuBuque\",\n        \"version\" : \"nc0a7jr4kb558p0xgeb0j5a8se5oy60z83abzgw3lby44ntzo882qlwu21m0rntrjdupud1kh1x1osfc7yw6ae57o4g8beexr8vhtz62m7edltr790bqg04oulqsyidswq9qzxbj5nu\"\n      },\n      \"startTimeMillis\" : \"2022-05-24T10:33:42.612558Z\",\n      \"name\" : \"Roy Quitzon\",\n      \"description\" : \"Libero facilis in. Rem placeat odio. Sit minus quia earum. Ex laudantium architecto.\",\n      \"modifiedTimeMillis\" : \"2022-05-07T08:48:42.612653Z\",\n      \"id\" : \"znxb\",\n      \"activityType\" : 520927170\n    },\n    \"type\" : \"time\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"x3ym\",\n      \"maxEndTimeNs\" : \"2022-06-23T11:31:42.61284Z\",\n      \"minStartTimeNs\" : \"2023-01-21T10:17:42.61287Z\",\n      \"nextPageToken\" : \"qzlmznsbl9gvkase3o3y3zar0hht3vkc5adagv7nunf67nb0hgf8k\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"g3vc\",\n      \"maxEndTimeNs\" : \"2022-03-17T09:40:42.612998Z\",\n      \"minStartTimeNs\" : \"2022-08-06T11:38:42.613027Z\",\n      \"nextPageToken\" : \"8d0vstwy8au3vxvjfcii3w2bor0r6jvjsgbblped5rqoe9ln8\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-02-18T11:45:42.613086Z\",\n    \"activity\" : 489886556,\n    \"startTimeMillis\" : \"2022-09-30T09:58:42.613118Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-09-10T11:19:42.61315Z\",\n      \"endTimeMillis\" : \"2022-10-29T09:00:42.613181Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/023219\",\n        \"name\" : \"Ms. Marylynn Kessler\",\n        \"packageName\" : \"Willene Schowalter\",\n        \"version\" : \"76lclvs2twd3uqiy3uonoficiqbygipi6k8mq78m5p5vpixopjohb8z5v2h4wro9cw53r90a1iyhamgmowi6ldptygr53a13wf9n2jueg6a799smbtebtrxuqjkt7vs9rcvzt7kymtyp6x7mmjqmceuy87hb6652kr\"\n      },\n      \"startTimeMillis\" : \"2022-07-27T11:00:42.613382Z\",\n      \"name\" : \"Vannesa Walter\",\n      \"description\" : \"Voluptas consequatur voluptas maxime non. Sunt velit at error alias vero nemo odio. Laudantium exercitationem veritatis ea animi minima. Suscipit quod neque non.\",\n      \"modifiedTimeMillis\" : \"2022-12-20T08:54:42.613489Z\",\n      \"id\" : \"z1ws\",\n      \"activityType\" : 1873010804\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"5nwt\",\n      \"maxEndTimeNs\" : \"2022-04-15T10:12:42.613675Z\",\n      \"minStartTimeNs\" : \"2022-08-29T10:04:42.613703Z\",\n      \"nextPageToken\" : \"eormt5jr3zemh7x10iv6qsvjribbfv1ma15bic93ls6cc0q81f0ryyoyhokhd30dtw0wbq282kv\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"b21q\",\n      \"maxEndTimeNs\" : \"2022-12-22T09:51:42.613826Z\",\n      \"minStartTimeNs\" : \"2022-03-27T09:08:42.613855Z\",\n      \"nextPageToken\" : \"co8a7v45eyh560gcnn9gywir7\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"ij68\",\n      \"maxEndTimeNs\" : \"2022-09-14T11:04:42.613976Z\",\n      \"minStartTimeNs\" : \"2022-11-21T09:20:42.614004Z\",\n      \"nextPageToken\" : \"8aywc\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b345ecb8-9b87-4f3d-8feb-092fc9a50156",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.614233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d69aadad-51ae-44ae-8534-389fb31c1670",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/mdcb/dataSources/duk4/datasets/79r6",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"e058\",\n  \"maxEndTimeNs\" : \"2022-10-29T11:37:42.604952Z\",\n  \"minStartTimeNs\" : \"2022-08-20T08:25:42.604981Z\",\n  \"nextPageToken\" : \"757dmcspbvdfmk3mv6cogkzlo4in0bez4a523fnkw6uokm1eu0314iqsldvq9lx\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"ex84\",\n    \"endTimeNanos\" : \"2022-08-20T09:46:42.605095Z\",\n    \"dataTypeName\" : \"Travis Purdy\",\n    \"startTimeNanos\" : \"2022-09-01T08:36:42.605168Z\",\n    \"modifiedTimeMillis\" : \"2022-10-12T08:55:42.605201Z\",\n    \"rawTimestampNanos\" : \"2022-03-21T08:29:42.605227Z\",\n    \"computationTimeMillis\" : \"2023-02-06T10:35:42.605255Z\",\n    \"value\" : [ {\n      \"intVal\" : 1740498277,\n      \"fpVal\" : 1.2678160446388742E308,\n      \"stringVal\" : \"ppnf4822xpmp02fjm03ev387oy75p3s17xqaz2z8281vtgopabgsq8cmz6dnmrpnpbj6n0fp02za4jes5ouock54ybcyga7sxqa0operku11hi64ytcguoufl715qjfoh13fmbr5jt1h5evxul9wvfg03ky\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1839072531,\n      \"fpVal\" : 1.2726768858594234E308,\n      \"stringVal\" : \"a7hf2t4gbg9dhhn3uo8rkfs7wn2vm2xqjqmgllktp6ohhcrs\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"84bg\",\n    \"endTimeNanos\" : \"2022-12-23T10:49:42.605421Z\",\n    \"dataTypeName\" : \"Ariel Dietrich\",\n    \"startTimeNanos\" : \"2023-02-04T09:53:42.60549Z\",\n    \"modifiedTimeMillis\" : \"2022-11-22T12:19:42.605519Z\",\n    \"rawTimestampNanos\" : \"2022-07-04T11:11:42.605545Z\",\n    \"computationTimeMillis\" : \"2022-10-28T08:32:42.605573Z\",\n    \"value\" : [ {\n      \"intVal\" : 175013260,\n      \"fpVal\" : 1.2167803762092055E308,\n      \"stringVal\" : \"5jcw4u3f2wqvqe1y6hermjkoihub6aub0iq73maxerj50io10yclymtgpmxhblq8uq0h5z3kgwhkpd\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"1rnk\",\n    \"endTimeNanos\" : \"2022-11-17T09:32:42.60571Z\",\n    \"dataTypeName\" : \"Ralph Kautzer\",\n    \"startTimeNanos\" : \"2022-11-11T11:04:42.605781Z\",\n    \"modifiedTimeMillis\" : \"2022-10-17T08:33:42.60581Z\",\n    \"rawTimestampNanos\" : \"2022-05-11T09:04:42.605836Z\",\n    \"computationTimeMillis\" : \"2022-05-28T11:55:42.605864Z\",\n    \"value\" : [ {\n      \"intVal\" : 869347253,\n      \"fpVal\" : 1.4634831993777713E308,\n      \"stringVal\" : \"rfkjhqb2ce2vcg3sq3206k3octeeb2j4lbp781vi28tbjhdula92xziddk8f3x5yztw8p42m2k7m9bjh3ktggn6sxzrwf3ljywxbnbwawupn9ud9c1\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1518291926,\n      \"fpVal\" : 4.3715242417942484E307,\n      \"stringVal\" : \"smzsukk53qq1cbb1iaxha85w9beoby7m6m29nuwpgmiglre9djmxez2ftfmnrdrw3m30x6o57r2hwd5iy2dsf5yc\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 414132398,\n      \"fpVal\" : 1.241160041676405E308,\n      \"stringVal\" : \"j2k3rl6joe7djpvjypep86tp401jukf4xme9vtmgyw2m3elgv9ooipc48zve6he31giqktg6bmgs1g1ym284ye2u7s7w1pheld2nbwrstrnvqzke4gsnbgrqmb5tzb4smhp0uu4vy9djd\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 485839234,\n      \"fpVal\" : 1.3308899435926364E308,\n      \"stringVal\" : \"wcflhs1hbtbo55c7ihrffigdmwlvgx0l6b6\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 426005907,\n      \"fpVal\" : 5.042947989665605E307,\n      \"stringVal\" : \"3boqg6u9fhfg8dzuuibkhs3myka35pmp7e9wecw32ie5pllt7ftt9v5h8ut8zzutm1pgl33d9rlepi5cdlkv4ys29s93mg7t48lk2ah2cutnjpsokmx6n6tlr9p4hxpv9roosx8gnlp5spat14j2qa3m88jvwqwoquyis9dteitr8zjbmd3ccg1tnz\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"gxw1\",\n    \"endTimeNanos\" : \"2023-01-29T09:42:42.606123Z\",\n    \"dataTypeName\" : \"Miss Donald Leuschke\",\n    \"startTimeNanos\" : \"2022-10-19T12:11:42.606194Z\",\n    \"modifiedTimeMillis\" : \"2022-03-30T11:14:42.606222Z\",\n    \"rawTimestampNanos\" : \"2023-03-10T11:46:42.606248Z\",\n    \"computationTimeMillis\" : \"2023-01-09T10:56:42.606276Z\",\n    \"value\" : [ {\n      \"intVal\" : 1172400377,\n      \"fpVal\" : 3.5708706613524117E307,\n      \"stringVal\" : \"sgjkw9g6nvwbum5clrkyksn2wmrjpmxsl0jbk04y82o0tp5kxl275bakn52907d8ws50anieirf4x1phr90s4z1ntteksf233m41xxrie2hbkqgzw5usrxlxw5nzjh4961ypx4nqb4qfxfn67o1vish\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 595708678,\n      \"fpVal\" : 8.411675119328325E307,\n      \"stringVal\" : \"backwmkz7e9oofr7zppfc57u9kextwrem15dg1tozqkkqh4e1ttbixzl6jkeri3m53opccs6lmywzp04auocj5mzad7qzxgzh810e9palyv8dv8\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1539766456,\n      \"fpVal\" : 6.14651139099488E307,\n      \"stringVal\" : \"r9rp6r4rad4q7k6kznmjnhlvyxyckd5bfsjsyj62b5z0bcm9jg11a0at68bd187o5v7xohaqng3dhj2g88qlsainjzedug1xf\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"6z3x\",\n    \"endTimeNanos\" : \"2022-12-01T09:23:42.606467Z\",\n    \"dataTypeName\" : \"Eugene Hand\",\n    \"startTimeNanos\" : \"2022-07-16T11:55:42.606534Z\",\n    \"modifiedTimeMillis\" : \"2022-10-01T08:24:42.606562Z\",\n    \"rawTimestampNanos\" : \"2023-02-28T10:47:42.606591Z\",\n    \"computationTimeMillis\" : \"2022-04-21T11:20:42.60662Z\",\n    \"value\" : [ {\n      \"intVal\" : 647672920,\n      \"fpVal\" : 1.1138922345687174E308,\n      \"stringVal\" : \"mzgg8tx30lm2j5srrlvhawvb9wgdq2jkvjec6ktomgk0bypi3qikdi4b6yvq34u5yifz250je4tkjmydd9yx74qun4fixry7l9evcweccsidpl3nvemo2iw6o8xw0jx6240y4mig1liutvctokftk04r1f1h08u2onpq5euec3eoltii4ok7e65wjwmqt7wp\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1876195677,\n      \"fpVal\" : 1.4821614738389017E308,\n      \"stringVal\" : \"vnc246l7zcpujvz4h6l14lolw10t7xubee024stzaq79r1p7fitgrcaasxbvi0xx790ox2mx8t0ohb9r8jdvutz3w7n70aowyqpwyngago414\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"n58g\",\n    \"endTimeNanos\" : \"2022-05-26T11:04:42.606789Z\",\n    \"dataTypeName\" : \"Gwyneth Von\",\n    \"startTimeNanos\" : \"2023-01-21T12:16:42.606858Z\",\n    \"modifiedTimeMillis\" : \"2022-11-19T10:23:42.606887Z\",\n    \"rawTimestampNanos\" : \"2023-01-03T09:38:42.606914Z\",\n    \"computationTimeMillis\" : \"2023-02-03T12:09:42.606942Z\",\n    \"value\" : [ {\n      \"intVal\" : 467180356,\n      \"fpVal\" : 1.7277895113126586E307,\n      \"stringVal\" : \"tpyhdrz8f5a0isam84hdbakd5inbp4ad6nj3pxhlmn2v5cwwx4afaspql4b4wmlpl2oar7m6wur57hcqzf8k92kv6upycqijytlytk0eenk8qxk11o8kyqi7pvaoqsewyqtv1oyhzl29xu5pf0677rpz4kqe6h67sm98kzjkfhoof7cp1fdx4tu9q8k3snkwggkjl5p\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 791334298,\n      \"fpVal\" : 4.2545255556538913E307,\n      \"stringVal\" : \"yvw7p9029cxljnbyli6s11lt4qi4u3m4crjfn43xh2dla10jmsw057i7gfi5b0cr4o4cn2ni7fofmqnhpj94r95kdlnin64nhgazoqyhzgcknmijcperrsq1hs1jti077q63g1mh2b4\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 246477,\n      \"fpVal\" : 1.1707916117581796E308,\n      \"stringVal\" : \"zhg2g2w44skdo6ht5ha5dpkx2e28ea425i8in5t7i4q5gkjtpmdu9003pi7q9wuad4rppokqvtayvbw2n4m0dl3njhaa1dmmxlybczlwx2pbcff\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 691807255,\n      \"fpVal\" : 8.107351343762619E307,\n      \"stringVal\" : \"68jrdcun16998rihjk20test9d6kjn8f9\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1710927966,\n      \"fpVal\" : 2.341394822508571E307,\n      \"stringVal\" : \"x9buw25blm146oy567bjjvpucm156n0z1txffu3jx10juumkl95c3p64u7a\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1348940291,\n      \"fpVal\" : 1.5534960867501313E308,\n      \"stringVal\" : \"2jug6xl2cc1uhahv8aymcl\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1843529105,\n      \"fpVal\" : 4.718201693450266E307,\n      \"stringVal\" : \"9zxb2926lrmxtdu7fyuaozdurx5bcx46upzhr3ksud15ukgpqehhh05jgepszyvjp4dlgbi5dufg4ezpt7cq\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"k4zx\",\n    \"endTimeNanos\" : \"2022-09-22T11:24:42.607287Z\",\n    \"dataTypeName\" : \"Miss Ghislaine Marquardt\",\n    \"startTimeNanos\" : \"2022-05-20T09:23:42.607361Z\",\n    \"modifiedTimeMillis\" : \"2022-04-28T08:43:42.607388Z\",\n    \"rawTimestampNanos\" : \"2023-01-20T11:29:42.607415Z\",\n    \"computationTimeMillis\" : \"2022-07-05T11:13:42.607444Z\",\n    \"value\" : [ {\n      \"intVal\" : 263503537,\n      \"fpVal\" : 1.1696462055663933E308,\n      \"stringVal\" : \"b8t4r5pfoxjeoe2velodtd9e0vnglgenm05llyjz4stb9btbgoge3mw2rsor1mrewow6rn50\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 739597857,\n      \"fpVal\" : 4.5001059430204E307,\n      \"stringVal\" : \"d59n54lu4qjxlp0aul058sx0zp020w6tg0nqmeeh6axd3nz6qxvigubj5erbjntm3xydmlu8hph5ncehhke0p0utu498rrx3e3h81u55dq2zgk49d\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1250477469,\n      \"fpVal\" : 1.3092196760629624E308,\n      \"stringVal\" : \"cgrg1dbakzk0hdiez5evdgw9b0ztxukf36f8li00i364lnmw3xr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 986819361,\n      \"fpVal\" : 7.420619632368489E307,\n      \"stringVal\" : \"dyh3\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1700702162,\n      \"fpVal\" : 6.235132348895772E307,\n      \"stringVal\" : \"lngydedzxnl8ii2neb87su3q2ggcvkqs2wfvt0wlypqcmvsh7miq97nqdo37dazl11rdeqj5u8hnn6mxtm44b306aye2ez7mamr7j0f693tcq\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 116971588,\n      \"fpVal\" : 9.75794790013256E307,\n      \"stringVal\" : \"6j0r6f3x12p3dpy1dcujqxyum1cuowhqpg70akkwsmy8pjw64tlatg04bqd2vg8rpxci5d2m443s2jgvyg2hldaarm3mj8a0daoqjo45yrst7k6vuhej91robhzndr57u\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d69aadad-51ae-44ae-8534-389fb31c1670",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.607997Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "65e3d6ff-b951-46cc-bf2c-a96b10423c69",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/zb9k/dataSources/i3k2/datasets/79y6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"arjz\",\n  \"maxEndTimeNs\" : \"2022-04-14T10:28:42.604116Z\",\n  \"minStartTimeNs\" : \"2022-11-13T11:09:42.604147Z\",\n  \"nextPageToken\" : \"a411escnuyqxif7yxsrfl59ireqj9ow85p6xlarwjpnjo7giscco6mxeb5uz0sowhdpf8f88cpnccsv2be6wdxfj4ibryf7dc5rck82aj53s5hcyro11bhlsbietskv8djbmpgggetygc7nt6nwrwn5qevmsxvq1g9qzzcwc3ls3957tek3wr\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"3zhu\",\n    \"endTimeNanos\" : \"2022-04-10T08:39:42.604268Z\",\n    \"dataTypeName\" : \"Teodora Quigley DDS\",\n    \"startTimeNanos\" : \"2022-10-23T11:41:42.604345Z\",\n    \"modifiedTimeMillis\" : \"2022-06-24T11:14:42.604373Z\",\n    \"rawTimestampNanos\" : \"2022-11-30T09:01:42.604401Z\",\n    \"computationTimeMillis\" : \"2022-07-24T11:29:42.604429Z\",\n    \"value\" : [ {\n      \"intVal\" : 1330897554,\n      \"fpVal\" : 7.414972976425326E305,\n      \"stringVal\" : \"l24u5rd3tgm1uyqn8jd13mrub0i12z4a785l79nq7wjn4jljjo0gp1oxkexid8l8w6vse5z829efo8i7o0mxy9cw7796i5bw60ec1hgiyvf8\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 813384389,\n      \"fpVal\" : 1.236140714547142E308,\n      \"stringVal\" : \"aehnu0ucj20t753uz7u0k19pz8bwsuq9286cn70rr355wod\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1369122948,\n      \"fpVal\" : 5.469009198575823E307,\n      \"stringVal\" : \"0ny6etuo4ch6mh65youkpr4n6roozgqxiimr7jv0lm9du94w5rmuj4ty29n47ou4ettfol0fdco8464oorb4dj0\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65e3d6ff-b951-46cc-bf2c-a96b10423c69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.604839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d02a7be1-74e4-41b6-9250-cdf73595ba02",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/gsa7/dataSources/7k8v/datasets/0923",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d02a7be1-74e4-41b6-9250-cdf73595ba02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.60401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "9c045c0e-dd5c-41de-874e-7faf6d1fa228",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/df19/dataSources/66ai/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"mjh8\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"td02\",\n    \"endTimeNanos\" : \"2023-01-24T10:39:42.600164Z\",\n    \"dataTypeName\" : \"Stan Williamson\",\n    \"startTimeNanos\" : \"2022-05-06T08:28:42.600237Z\",\n    \"modifiedTimeMillis\" : \"2022-04-30T11:23:42.600267Z\",\n    \"rawTimestampNanos\" : \"2022-04-06T12:03:42.600297Z\",\n    \"computationTimeMillis\" : \"2022-04-13T11:02:42.600329Z\",\n    \"value\" : [ {\n      \"intVal\" : 2054526466,\n      \"fpVal\" : 7.622943319750502E306,\n      \"stringVal\" : \"kkb1pcg73skwm12s84x0c6qz1yhglb0g2cqkf0vf9qt4ouoahmo3pgbbftu\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"hs4a94h4j91qqmqmju1ob7swdylt4r9ow85okuvett1ru2qx0bmn32pwnvz71crmf0upwfr7g0yaltu8qh0qduepnh49rjei2pnnbr2pcfswzoxeqsco67vzneowf7n7\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"2e3a\",\n    \"endTimeNanos\" : \"2022-07-08T10:47:42.600513Z\",\n    \"dataTypeName\" : \"Broderick Streich\",\n    \"startTimeNanos\" : \"2022-09-09T09:28:42.600583Z\",\n    \"modifiedTimeMillis\" : \"2022-06-26T11:21:42.600614Z\",\n    \"rawTimestampNanos\" : \"2022-07-16T08:58:42.600642Z\",\n    \"computationTimeMillis\" : \"2022-07-12T09:43:42.600671Z\",\n    \"value\" : [ {\n      \"intVal\" : 1338615983,\n      \"fpVal\" : 3.9863351330227917E306,\n      \"stringVal\" : \"ixrttz3sotfqdopbaedu5xbptvkqki4dounj95534mxe6z1mxirokc7bru58dw7x9z42tt8apsc6ltf0ilzx2r7nswdpm3ubzwud9kt4nzi91zs3lhjwej\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 651227340,\n      \"fpVal\" : 1.4351754836815576E308,\n      \"stringVal\" : \"v0yvb2clx36lebg43qou63\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1635430054,\n      \"fpVal\" : 5.09372446960565E307,\n      \"stringVal\" : \"1qa7hqin66omyu1oe568enko0vlk7m21yyhytuedt\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 423103615,\n      \"fpVal\" : 1.3872117627994826E308,\n      \"stringVal\" : \"8vzl5ijwk8c54z8qc2xt428mbjjahdy598m01ils6r5zr0lk1l7ruhxfwxmrdt8wk2kleptezl6jtsoxkoenr91qurajxpaj2yolkdbhclwt0yy4fqpmjkw1vydvt3wjvbn3fc5xh39k\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1452140158,\n      \"fpVal\" : 1.0503635808544726E308,\n      \"stringVal\" : \"qau0lbpbmskn4cyttesphjb96zsazo4tocj2txzt2guakkwj1dfg4xi44qhrve7onlm2cqoyx5qwpzazq62uw8l2p5fulbgra3a0esylj2ugdtup3dhhtwoy2u1uh9m1u05wvqv\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1489511582,\n      \"fpVal\" : 1.2628947162103387E308,\n      \"stringVal\" : \"o5h0bkd3y0t40lcod1mpym8yx78p0yqq5rq2znhd4oru26wqtb45irul6x0337cgo6qd5qpzxy2ervdl57bbbx1i98aukl40uqlk64i0a2hklw7g1rotlcj09ar4uak7ya9l262dirdsalhfp9rhsczc2nv6f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"23yw\",\n    \"endTimeNanos\" : \"2023-01-03T08:27:42.600974Z\",\n    \"dataTypeName\" : \"Dr. Rosalind Labadie\",\n    \"startTimeNanos\" : \"2022-08-16T11:14:42.601045Z\",\n    \"modifiedTimeMillis\" : \"2023-03-10T11:45:42.601075Z\",\n    \"rawTimestampNanos\" : \"2022-03-17T09:10:42.601103Z\",\n    \"computationTimeMillis\" : \"2023-03-02T12:02:42.601132Z\",\n    \"value\" : [ {\n      \"intVal\" : 1709542554,\n      \"fpVal\" : 1.4427152022300442E308,\n      \"stringVal\" : \"8118sep140limev9h6n2ghw4znyxrfr3uvtylc8xyxtw9iabr03ungaf4\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2046971862,\n      \"fpVal\" : 9.724191293844072E307,\n      \"stringVal\" : \"bmtsbewtgra6dh1i9rwyizk3uxnif99uzgwmwcc6p99zfjeqoiyo6s4l84jpuu4o\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1211102088,\n      \"fpVal\" : 3.143083221684933E307,\n      \"stringVal\" : \"gshcqoqjbroh3wt9g1pw8yjdwpeurmk2qb6c0n6z59zjcoy1a5y3zddrzeme\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1217779173,\n      \"fpVal\" : 7.687806257997096E307,\n      \"stringVal\" : \"k868c34chnyuhecl7wszmr2nzivq9ucqhoh23aw78ggifb0eeg2tpwg3fsmt15old2r7vhl9up69yk7rmmhmfudw4lrp8edleb8a0zzaohfv26vcjo0s7l453rybba\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 323577379,\n      \"fpVal\" : 1.3147235394085759E308,\n      \"stringVal\" : \"msmjn8vdj5bvmp9btcqnld4dzdgtxtmliqa4\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"3ymo\",\n    \"endTimeNanos\" : \"2022-06-03T11:40:42.601406Z\",\n    \"dataTypeName\" : \"Sharonda Feil\",\n    \"startTimeNanos\" : \"2022-12-19T11:30:42.601475Z\",\n    \"modifiedTimeMillis\" : \"2022-06-21T08:21:42.601505Z\",\n    \"rawTimestampNanos\" : \"2022-08-03T10:26:42.601535Z\",\n    \"computationTimeMillis\" : \"2022-06-05T11:17:42.601564Z\",\n    \"value\" : [ {\n      \"intVal\" : 21664500,\n      \"fpVal\" : 4.022314113694993E307,\n      \"stringVal\" : \"4xnkojgn1lcc7807q966xlkyz407sovn4h1qpzqsfsf\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1954686049,\n      \"fpVal\" : 1.5612745313429538E308,\n      \"stringVal\" : \"igj5q9qiu40msv2hyb3131qxi2dpgiufxci8erc5je0mdcuorybjv77fnz04w16agaknoaw3y6ra9twwp1jvz567b8cai9a8j2gc01opp9t6x2rdafv4os0sqaxx2vy4awd5ztlj1nry554mwicpm7ozk9orqxdbokxhsoy\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 447832789,\n      \"fpVal\" : 8.497516978039422E307,\n      \"stringVal\" : \"ezptq7wchppti1\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 504481261,\n      \"fpVal\" : 1.1629444578777267E307,\n      \"stringVal\" : \"b6kg2fkuqkqmza9xx95nc5xerbs2cocr5uk0entmwk4c1g66p9sl10iiiksg29d7grofiywykmrqr4fvkg6dges\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1315175767,\n      \"fpVal\" : 1.2921789563572453E308,\n      \"stringVal\" : \"j31l5n2v4kndxtvnh6y88kz6vmycnjwu9pkq6dbowvnxuxi59iiv9ckig7utyuplpg973skh223d83hlxdlj7nflpveazotba40ckcqr7stnvjy6l6\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"j9q8\",\n    \"endTimeNanos\" : \"2022-06-18T09:08:42.601825Z\",\n    \"dataTypeName\" : \"Isaiah Durgan\",\n    \"startTimeNanos\" : \"2022-11-06T12:13:42.601892Z\",\n    \"modifiedTimeMillis\" : \"2022-05-29T11:35:42.601921Z\",\n    \"rawTimestampNanos\" : \"2022-07-07T08:46:42.601949Z\",\n    \"computationTimeMillis\" : \"2023-02-22T12:07:42.601977Z\",\n    \"value\" : [ {\n      \"intVal\" : 1494729620,\n      \"fpVal\" : 2.840250048110117E307,\n      \"stringVal\" : \"7xqoq64g8ql3r9txt4fdp9bvp0k8yjts69qu7qg78mtwlrfm0mgay5bpuxmvcrnb3ymft09a6c7atoz5ur4jbnaju1kjridm\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1140260113,\n      \"fpVal\" : 3.7491994631118826E307,\n      \"stringVal\" : \"qk1x2kdjr38ry29a6czpx7wfdpj39g5wj14qykgvknrs254z9pxvx89y9312xavq4bpx6f8rfghn6fdo5xxj6xxmn5n50e5ztdn3yoix2n0q5tplf3ddiv5gc1tzu7jdljhef05y6um48vfanu\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 757719328,\n      \"fpVal\" : 6.740188176572828E307,\n      \"stringVal\" : \"u9cbp4vfd0bn8mzg631um9h32uv1uzfyt9i5448a4sey35okvofoyvirxf060k8z0jxlhd77suu8cqmcwfcfd52bmfxn66ga9hlz0jn3va1ltdpr2lpi8t6fpwzl1s3zh0azgzi92opmfvsi1\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 117880875,\n      \"fpVal\" : 3.847741723357362E307,\n      \"stringVal\" : \"8dxokipb3sscyb9ob2s6be4n0d1h3m0pmy6tmvydv6gfp6fm3pxg3cqr2m32uaipi10yo36cnzdixu1uots4d3ht548xglh5wyyv425b6brubt3aphzm76lq5ch2bhz3dtli\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 685058267,\n      \"fpVal\" : 8.038774110722828E307,\n      \"stringVal\" : \"uyp6rjq0caazrv8vds6muv6o9fyxh961yif6xraxuyef4t7qoog147ykzie5duhtgxe0zx1hw5kgd93\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1017704056,\n      \"fpVal\" : 9.166245700368728E307,\n      \"stringVal\" : \"ki2qesalo2ydqoeb426q1nqd8jd9c061cg0fcvmwa5hzdum2ey068gs32qtdbsjil7gbgo5p7hjmygxdjwn0up25nh3gzk6jvs3gyb30fahlyw1zfrz8svdzxdilben7j\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1009087554,\n      \"fpVal\" : 1.3527344010938869E308,\n      \"stringVal\" : \"zt1\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"x0f6\",\n    \"endTimeNanos\" : \"2022-04-07T11:03:42.602295Z\",\n    \"dataTypeName\" : \"Leonel Romaguera\",\n    \"startTimeNanos\" : \"2022-04-23T10:12:42.602363Z\",\n    \"modifiedTimeMillis\" : \"2022-04-30T08:43:42.602392Z\",\n    \"rawTimestampNanos\" : \"2022-06-05T12:10:42.60242Z\",\n    \"computationTimeMillis\" : \"2022-12-24T11:28:42.602448Z\",\n    \"value\" : [ {\n      \"intVal\" : 327349373,\n      \"fpVal\" : 8.542752722964503E307,\n      \"stringVal\" : \"1t14y9tvsscfezum3b4h9ac7dcondafz0zyb9kal9uusmwsb7osm6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 58145296,\n      \"fpVal\" : 9.79422559049866E307,\n      \"stringVal\" : \"bsutj0ekobvgs4lm4qdkhk4tmkdsqr15p3005llqvymadvyd7lkvyjcrhym561badfsssvr1rcd7xueiggaix71vvc3mymerhtz6p7bfl8qeaddfhldso511eeq46abmu33pbwx2du7suygmcegxetn0k517bkxt8jtqy8m8jea4c\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 370026369,\n      \"fpVal\" : 4.638878919946713E306,\n      \"stringVal\" : \"ymodod8ewjiwiso2gddd5ukj2i5q2z8wx5lnt59pg7rialxtgji23hgzfo3y75wu2rkglsxp3vv3e55jnvnfic4klgt6v19bp5kmzlfmalq4mtoe\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1078603035,\n      \"fpVal\" : 1.4738533332455065E308,\n      \"stringVal\" : \"7jz7d2e2e85tktrcxft3i7954mv3cxvhrw8nj79u2slp5j4volgn0llsqkjg0tgf6ka10kfg3wqhejp6ts61p5fgrwjgvxrobj5rglwe5p6x3gz61h3f24qh43vxfowfwuh38y\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"g240\",\n    \"endTimeNanos\" : \"2022-07-30T09:46:42.602693Z\",\n    \"dataTypeName\" : \"Fausto Zemlak\",\n    \"startTimeNanos\" : \"2022-11-02T09:30:42.602764Z\",\n    \"modifiedTimeMillis\" : \"2023-01-23T10:31:42.602794Z\",\n    \"rawTimestampNanos\" : \"2022-07-22T09:37:42.602822Z\",\n    \"computationTimeMillis\" : \"2022-12-04T08:58:42.602852Z\",\n    \"value\" : [ {\n      \"intVal\" : 43536285,\n      \"fpVal\" : 9.724795863460196E307,\n      \"stringVal\" : \"wm1fqdj8awyvkgn9w7eofh00o7syfjlreii1an9asuuk99kk1usroidnn2l68haukabaj4es8na0sp9wo33imfc0cgoz1wusm1yoxenacmmzcxklaqspswkz14a1m1opko9r3jv8y4ik2nv7h92vrpm54e2n2qt9mqo1xpo6lz78tgj7breoe\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 410528590,\n      \"fpVal\" : 1.0390789721096805E308,\n      \"stringVal\" : \"kiha0k3whuig98d03f7hi5povuesq76z8izu\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 726840764,\n      \"fpVal\" : 1.6887848082634773E308,\n      \"stringVal\" : \"8s3upe6n81xrk8xolv8ig9fna34pdgp9k5e0ac6i3m50jxb10gpsj8m9udg7lr94zjkiwy1mt4efgjlp73v5ou6c7dawghy2f4\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1153564175,\n      \"fpVal\" : 1.7225616484107534E308,\n      \"stringVal\" : \"qijwyc0jw132t\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 961293453,\n      \"fpVal\" : 8.726908181251845E305,\n      \"stringVal\" : \"nu4h7lustp1upt2z1xq0dsyk3qc5fu8x916y7uovun7c6us\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 3311659,\n      \"fpVal\" : 1.7151606010963012E308,\n      \"stringVal\" : \"cvsfdidael571c9729u5ht0xtgvny5cduq8lyjsqge6uk806rb5647inu\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1240511578,\n      \"fpVal\" : 1.726500924740644E308,\n      \"stringVal\" : \"qmw9ok1r0dvon0n3611dtf4fvxhfzyv6najsrx7saad\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"3qkk\",\n    \"endTimeNanos\" : \"2023-02-27T09:16:42.603202Z\",\n    \"dataTypeName\" : \"Miss Lashandra Raynor\",\n    \"startTimeNanos\" : \"2022-05-10T09:23:42.603275Z\",\n    \"modifiedTimeMillis\" : \"2023-03-03T10:59:42.603303Z\",\n    \"rawTimestampNanos\" : \"2023-01-01T11:43:42.603334Z\",\n    \"computationTimeMillis\" : \"2023-01-14T09:49:42.603366Z\",\n    \"value\" : [ {\n      \"intVal\" : 174922504,\n      \"fpVal\" : 5.041085764539485E306,\n      \"stringVal\" : \"3o15dsj2p4noneldcc8ta3l8cahye1nundpkq1lcrcwz766hg9fi0oabonpwaqerghpwft78vr3hw2fsfby\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c045c0e-dd5c-41de-874e-7faf6d1fa228",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.603783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7832316a-da97-4ca9-adb9-0d868e34be8a",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/08v1/dataSources/i971",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Miss Kelvin Stroman\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/755419\",\n    \"name\" : \"Lon Williamson III\",\n    \"packageName\" : \"Dr. Mireya Walsh\",\n    \"version\" : \"fmurectqxycb\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integer\",\n      \"name\" : \"Denese Olson\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Brook Pfeffer\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Erik Prohaska II\"\n  },\n  \"name\" : \"Mitchell Muller\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureAami\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"cy7h\",\n    \"model\" : \"iyfnxhuieo80mqbh2l2sohz8ylh8p99r3gxotl6zdbx8ggmh7asy04kmctkx9dcpy3x3zauqzht7jzhwizavce3kwdkruatwpbm4h59oxcmiuxhndu7dv7rei0kra21sufsfm6g48xh\",\n    \"type\" : \"unknown\",\n    \"version\" : \"m1c7uqfo41ddsnxb9yhyfxn59alkazr1ucw1j2lp12x44yvo895agmwgc3dqok6ha3mjfnp\",\n    \"manufacturer\" : \"8ro2x54h40m4zj6fa3lexib\"\n  },\n  \"dataStreamId\" : \"n30y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7832316a-da97-4ca9-adb9-0d868e34be8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.599963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "4eb15168-c1b8-4c12-b41a-61f88bf45d88",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/zv8a/dataSources/hixu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Kelle Johns\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/311675\",\n    \"name\" : \"Ulysses Kuhlman\",\n    \"packageName\" : \"Candice Zieme\",\n    \"version\" : \"i0zb1rcfmwhrxjqzva1fzssp29xhn02whmd756zs0b51xe89hhoz0yws7c6trpyn6veov0or5u8s3tyd6u4pg404xlwwdmwr8kd12spx4y68pjs6\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integer\",\n      \"name\" : \"Dr. Romeo MacGyver\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Chaya Wolff\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Antwan Collins\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Violette Crist V\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Jeromy Block PhD\"\n  },\n  \"name\" : \"Donnie McLaughlin I\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsBB\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"a5v1\",\n    \"model\" : \"f74a68009w43ogh3k6j6rp1ftg40vo7hjoeyszym5xlpu7bxqxsa8ysc0farzmtx8nm8tsr6a4oh\",\n    \"type\" : \"phone\",\n    \"version\" : \"o4n1mp6ms32dw8wii4aut83ojj1ilnlkg4oo024pv436f6a0yby4vgzciqt4g2c94gp2riq7j3434cv18twbnd4svxrx2glbsesnl9s6z0gwpetda72w18icr4vns0w9vc270c8boup5ftfrvz\",\n    \"manufacturer\" : \"7tinhhfqhi1rfwkt563o1zx7\"\n  },\n  \"dataStreamId\" : \"id37\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eb15168-c1b8-4c12-b41a-61f88bf45d88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.599136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "65dfbf07-d985-45ff-8569-8aab1d404975",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/sd4u/dataSources/6tf8",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Andy O'Connell\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/611440\",\n    \"name\" : \"Karlyn Emard Sr.\",\n    \"packageName\" : \"Ms. Tuan Morar\",\n    \"version\" : \"yjc311mdst8ed1qwwcbpb8svkuypmrx4qfl85dqzjfhwj2amea1oqi0x4uqgyijib05tknvl9fo2\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatList\",\n      \"name\" : \"Jetta Kulas PhD\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Mrs. Arlyne Bartoletti\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Maxwell Smith\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Takako Ferry\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Reginia Goodwin\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Mirta Jones II\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Branden Wisoky\"\n  },\n  \"name\" : \"Betty Spinka\",\n  \"dataQualityStandard\" : [ \"dataQualityUnknown\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsBB\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"8t27\",\n    \"model\" : \"c5xkqqjxvgjxif4hug9n1yvqfba8zuxsw3dh32y9kkwttzxqekglgwb29wyq4ergy6z446v0pr4zhwd6w46h88aw13bo3nfe8xnn97a5uy7ax0l321poubr7szi2dz4v8tx31upmn0andpt06moip9p\",\n    \"type\" : \"phone\",\n    \"version\" : \"yn5lrk5r3hqk4fv876fafad3c35lssppz0dqpzqk7oym1sgwneayb5tqn8q9a0v5uhkqi2rzz7889jjfb7jwvzbm5axvbgoj988aac8kf3qbqtfks67rpwwl4vcr914xqjcxmziz32eioqs5f50vki\",\n    \"manufacturer\" : \"82zvpvyhdexwdmduvum3cy2lfycyw0trk2di\"\n  },\n  \"dataStreamId\" : \"9nt6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65dfbf07-d985-45ff-8569-8aab1d404975",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.598193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "0172d2af-c3a7-4c84-80e2-d87b9698693d",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/wz02/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Edda Rippin\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/627486\",\n    \"name\" : \"Roma Barton\",\n    \"packageName\" : \"Adalberto Mills DVM\",\n    \"version\" : \"2evdpk6045o8tkg0enobt9yydeqwkjxcq001tqb64batyg2a0q3lo51gnqm4q6gf9q0iryq9eq04y76vidky5td93z23tyj27bqwxon2lh5s1515wwphuivutg5ukjjxzk8q5w007hq3primraoo26h2lyqo7lvcas8qeaw751v77fi5jnb1136y6ot7ugbwgt0ude8\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"map\",\n      \"name\" : \"Amelia Hilll\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Brandon Rutherford\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Ms. Dierdre Trantow\"\n  },\n  \"name\" : \"Mrs. Jewel Hilll\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodGlucoseIso151972003\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"387a\",\n    \"model\" : \"7h08t1k1r6vl0699u6kal38y1jve7rs4x6uy2gekp8d89co0rnjim2xo342xsbm9a5213v6bbyul8jb0px1l83qj6b6h0nzgdrp0nnuwt3f0exen8kc6zjdk4c0\",\n    \"type\" : \"tablet\",\n    \"version\" : \"mp8hz99v1p2lafdst3bc\",\n    \"manufacturer\" : \"hqlm3wtbwk68riyjid2bab4fj01rf2sv5vh1mwhnazfax1slev88uugaah5tmrjiqyfr\"\n  },\n  \"dataStreamId\" : \"279j\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0172d2af-c3a7-4c84-80e2-d87b9698693d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.597146Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "60590b18-52df-418e-86f5-f39dff9bd799",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/558h/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Annie Jaskolski\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/223931\",\n      \"name\" : \"Long Streich\",\n      \"packageName\" : \"Ron Bode\",\n      \"version\" : \"nwm3ne9b9iu2lw7bbcfgh6kkyjgaaspv3im72pet29wyb6sgzrs0m3kpo21nizx9wrrnqpl16s0pevdwlbeotcb959euiibvoi6yqu2jm2edc9wumbzakbf55f73iytml0aznpimcvn0nmvqg0r4h27cdi9ae15lfdboucjenhbf4d81d9bkx\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"blob\",\n        \"name\" : \"Bev Abshire\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Kirby Fisher\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Emelia Ernser\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Raguel Shanahan\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Sylvester Macejkovic\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Sol Hyatt\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Dr. Bok Kemmer\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Romelia Johnson\"\n    },\n    \"name\" : \"Bula Bashirian\",\n    \"dataQualityStandard\" : [ \"dataQualityUnknown\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodGlucoseIso151972013\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"2vt8\",\n      \"model\" : \"49m0e9bk4lg76jvjr96aso1wesm7g4dyritgrg69zeg22s662lr9iuldvk5xz8zejipm7i37gz8sh54vzxyfwg92fus0fvrieoc2kvz4dvu5reqsp6jpmoioaipox0jpgczzw213yn051\",\n      \"type\" : \"chestStrap\",\n      \"version\" : \"pskmy6dk7ko8lvrp2a8irqipcx208k42f6l86bm26mos5d8l2udv8f5je2wc67xbp60xgp8spmmczbujznbdc9vagfoqm4qm74t14\",\n      \"manufacturer\" : \"4a74au9wam4o2c1746h33ll5xixc8453qnwcpnxuicj0uag1ruakmcr4slfg3o82f8y7y5tjt0sexvkivuqxsnisd3l2nt6aenxo89syp\"\n    },\n    \"dataStreamId\" : \"x44c\"\n  }, {\n    \"dataStreamName\" : \"So Ledner\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/238841\",\n      \"name\" : \"Lois Rogahn\",\n      \"packageName\" : \"Sherly Dare\",\n      \"version\" : \"qf0gm9jht16m8ss1egy1xpg9scpcbbl7wnx29x4oac4dl17e31yfes1y2f9ta3iayx4u5ryfwteold0z21av439lsfqzyc83fllqx7k6al\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"blob\",\n        \"name\" : \"Leonel Zieme MD\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Tawnya Gutkowski\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Miss Joellen Wisozk\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Dr. Cortez Rempel\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Douglass Krajcik\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Kirsten Wilkinson\"\n    },\n    \"name\" : \"Mary Pfannerstill\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsAB\", \"dataQualityUnknown\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"b8av\",\n      \"model\" : \"lejdmv88q7tlxsbrdolchyz0uitg9kxmwyvxjkq2k5deqwk0m0ovoqdpksz47g1y87fc5o2zroamd\",\n      \"type\" : \"tablet\",\n      \"version\" : \"i1qyzp9pjnph0vxyheifddtfo7ml1ldfur2uo5oxuvo75zt69esfvm8bs7khq05yjtfqmk9ifpxlnae9lo4frorfwe8z459lykgkelmcfre7kueubwnnk6kpgxkui4xhx3dkku404k1c0hapx3gtwqsf4\",\n      \"manufacturer\" : \"wl0dixn6orce5jm8e7pinuvaz4cv28tgj92znnwcd8np3sb6yxmaevikcrl01c3mg7juxw33juhiv43amf8kog4lfenhk915523u\"\n    },\n    \"dataStreamId\" : \"22p4\"\n  }, {\n    \"dataStreamName\" : \"King Balistreri\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/693311\",\n      \"name\" : \"Gail Keeling\",\n      \"packageName\" : \"Fred Torp\",\n      \"version\" : \"rvx7i0rp8ju3thb3hrktwdo3lewzmxtp6ejzb2p895wxpzzbv232ifohxs08vtrvgwau4osn2tni5ugcqfyixn6u3m3i7hxhynpqwar6r7gier4bn5v3vhch026t9bvtf3kk05kawgrxndtrd664mttfful5fleqvecckkyaxce2p\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Fred Bartell\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Andrew McGlynn\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Florencio Feest MD\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Georgina Russel\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Kenneth Morissette Jr.\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Mayra Schmidt\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Mrs. Kenny Corwin\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Patty Braun\"\n    },\n    \"name\" : \"Preston Friesen I\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureAami\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"e2im\",\n      \"model\" : \"lt6rpypn9r9gvzw4op5h8sdgewulb7vet2udj33gm\",\n      \"type\" : \"smartDisplay\",\n      \"version\" : \"ihi00scjjioegelsxjok5ldtdpswwdwa8zu00sfpr570u61cj81x6pevgl1lgkzg6vtz8lexbrw2hgc9h3\",\n      \"manufacturer\" : \"t42b1tva\"\n    },\n    \"dataStreamId\" : \"7bop\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60590b18-52df-418e-86f5-f39dff9bd799",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:42.596307Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}