{
  "mappings" : [ {
    "id" : "ae2ccfd9-a628-3da8-a489-39b68a0da309",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/d063/sessions/78c4",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2022-12-30T13:38:34.819388Z\",\n  \"endTimeMillis\" : \"2022-04-07T13:35:34.819415Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/684185\",\n    \"name\" : \"Jasper Daugherty\",\n    \"packageName\" : \"Christeen Hahn\",\n    \"version\" : \"g4unarwnszlj5euzpb7n8w8yb8vfv\"\n  },\n  \"startTimeMillis\" : \"2023-03-07T16:39:34.819588Z\",\n  \"name\" : \"Sammie Fay\",\n  \"description\" : \"Aperiam accusamus et occaecati et tenetur et. Voluptatem odio id nemo eum pariatur pariatur accusantium. Consequatur quod aut sed repellendus.\",\n  \"modifiedTimeMillis\" : \"2023-01-29T15:59:34.81968Z\",\n  \"id\" : \"e40d\",\n  \"activityType\" : 1485418075\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae2ccfd9-a628-3da8-a489-39b68a0da309",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "90c92a2e-cd69-3002-ada4-d2a7d3ade4af",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/l6l1/sessions/107y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "90c92a2e-cd69-3002-ada4-d2a7d3ade4af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b4c39276-e012-3aea-88e4-96ddfe0b5a50",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/0i98/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bli7yl6ihvfgq7ghtgzjlqb04d72vudhlw51esbiktonyjm069i15mglkpusyomvpvxmr39k\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2022-03-14T15:39:34.81537Z\",\n    \"endTimeMillis\" : \"2022-03-24T13:33:34.815398Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/976229\",\n      \"name\" : \"Mrs. Leopoldo Wyman\",\n      \"packageName\" : \"Cliff Beatty\",\n      \"version\" : \"y6jrszdfk2xnf99fa0aug7xkckwbdm1inp3ra0mb7lptolfzxaa19hxcuo860dem51smflx95fzzgx7nw6yp\"\n    },\n    \"startTimeMillis\" : \"2022-04-20T14:26:34.815587Z\",\n    \"name\" : \"Fabian Yost\",\n    \"description\" : \"Optio asperiores voluptates quasi numquam doloribus est omnis. Et esse aperiam tempora natus. Nesciunt quos eos mollitia dolores. Molestiae ipsum aperiam accusamus et asperiores vel accusantium.\",\n    \"modifiedTimeMillis\" : \"2022-07-17T16:50:34.815685Z\",\n    \"id\" : \"3r99\",\n    \"activityType\" : 295746361\n  }, {\n    \"activeTimeMillis\" : \"2023-02-26T14:20:34.815781Z\",\n    \"endTimeMillis\" : \"2022-12-13T15:02:34.815808Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/160277\",\n      \"name\" : \"Ms. Orlando Hermann\",\n      \"packageName\" : \"Jefferson Hodkiewicz MD\",\n      \"version\" : \"dyhj7vyvlz95jpo5p27kgnstlhdwd9p2oe1d9gwtq753ztdu89yv8xdbjf12lkp6l94v0whom4d228xavadhwzrmurqet8fwbdp056lqsplh4n2ym8lkjmmcc6hieurmv4piomsnwno2t0i9jt6xiounvstkgxd7\"\n    },\n    \"startTimeMillis\" : \"2022-03-14T13:41:34.815991Z\",\n    \"name\" : \"Mauro Sawayn\",\n    \"description\" : \"Quaerat qui architecto quod omnis ut id. Minima hic blanditiis consequuntur aut. Quis ut nisi fugit et recusandae rerum omnis.\",\n    \"modifiedTimeMillis\" : \"2022-03-26T13:43:34.816085Z\",\n    \"id\" : \"s42v\",\n    \"activityType\" : 1530923813\n  } ],\n  \"hasMoreData\" : false,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2022-06-19T13:36:34.816197Z\",\n    \"endTimeMillis\" : \"2022-06-24T15:54:34.816223Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/797242\",\n      \"name\" : \"Lavinia Walker\",\n      \"packageName\" : \"Tracy McGlynn\",\n      \"version\" : \"t07ave7hhratla52mu4v4t6o0kbax8jir5k4bwpshrva6282nmuazl6pb9zinx3plylvxrrcolni7flpz9lu74p5ukd3onv2nvkjfrzm7o3dctt05ellsuz27b40y0nb2xh5oo564s6yoqm5tpi36rk7tq5a6x3udy1lcyvxn\"\n    },\n    \"startTimeMillis\" : \"2023-01-01T15:51:34.816403Z\",\n    \"name\" : \"Mrs. Bridget Watsica\",\n    \"description\" : \"Sed architecto iusto ut delectus. Excepturi accusantium dicta dolor. Maiores ea et tenetur at.\",\n    \"modifiedTimeMillis\" : \"2022-05-05T16:08:34.816495Z\",\n    \"id\" : \"1sai\",\n    \"activityType\" : 190689483\n  }, {\n    \"activeTimeMillis\" : \"2022-05-25T16:32:34.816593Z\",\n    \"endTimeMillis\" : \"2022-07-31T16:03:34.816621Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/779342\",\n      \"name\" : \"Cathern Wunsch\",\n      \"packageName\" : \"Mindy Morissette Sr.\",\n      \"version\" : \"dmxyabf4crf65ost6htavlae27ekmm5lttzrv2gvlc3yechjnpfz5wxi8zfazwxqz3qxziqpt9lz6mhx7a4g3y7rb\"\n    },\n    \"startTimeMillis\" : \"2022-12-15T15:01:34.816809Z\",\n    \"name\" : \"Mrs. Christian Bradtke\",\n    \"description\" : \"Nihil dolorem quisquam similique. Et eos consequuntur. Explicabo repellendus illum praesentium. Distinctio vero itaque.\",\n    \"modifiedTimeMillis\" : \"2022-05-13T13:35:34.816906Z\",\n    \"id\" : \"47fy\",\n    \"activityType\" : 2143454120\n  }, {\n    \"activeTimeMillis\" : \"2022-07-09T13:39:34.817005Z\",\n    \"endTimeMillis\" : \"2022-11-07T13:13:34.817032Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/383907\",\n      \"name\" : \"Desmond Gutkowski\",\n      \"packageName\" : \"Mr. Eric Lindgren\",\n      \"version\" : \"xd0s1tjd1z6dievlryilznmltpcfol0ebk5m6r69vnna301xqu6wmox58t1s5o7rfv9pl0qhht0mt7t\"\n    },\n    \"startTimeMillis\" : \"2022-08-23T14:55:34.817211Z\",\n    \"name\" : \"Dr. Chiquita Schinner\",\n    \"description\" : \"Eaque accusamus facilis quidem ab sunt eius aut. Nostrum quam dolor numquam illo. Placeat qui autem quidem necessitatibus sequi veritatis quas. Id optio quo in fugiat. Nobis ad ea quis quod eveniet.\",\n    \"modifiedTimeMillis\" : \"2022-07-03T13:44:34.817319Z\",\n    \"id\" : \"h68t\",\n    \"activityType\" : 200104776\n  }, {\n    \"activeTimeMillis\" : \"2022-04-16T16:48:34.81742Z\",\n    \"endTimeMillis\" : \"2023-02-14T14:05:34.817446Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/164536\",\n      \"name\" : \"Theresia Homenick DVM\",\n      \"packageName\" : \"Keshia Lubowitz IV\",\n      \"version\" : \"zjhao7dzxh5up8sdkeiaw79g8qadly2ddlb149y5bvqfl6eqxw97hbbclj5bboyee4l1zzijcvwnmflzy0yv\"\n    },\n    \"startTimeMillis\" : \"2022-07-03T14:44:34.817628Z\",\n    \"name\" : \"Frederick Powlowski\",\n    \"description\" : \"Eaque quo asperiores qui cumque similique molestias. Sint sit eum beatae iure voluptatum repellendus rerum. Delectus sit incidunt ab aliquid quo sunt. Sit in qui voluptatem ut recusandae distinctio. N\",\n    \"modifiedTimeMillis\" : \"2022-12-30T16:11:34.817731Z\",\n    \"id\" : \"glj2\",\n    \"activityType\" : 725770491\n  }, {\n    \"activeTimeMillis\" : \"2022-07-31T14:51:34.817826Z\",\n    \"endTimeMillis\" : \"2022-07-02T16:53:34.817852Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/927112\",\n      \"name\" : \"Mr. Izola Gerhold\",\n      \"packageName\" : \"Mike Robel\",\n      \"version\" : \"5j7k11shiu7cnfi2zmhmzy62wji43u6sgrwfweeu7entq1yfna1rfwd1pin7d1lsiyb65vhcourj87cn068ueot4n4x5zjbw79nilz7khm1ql27oa4f7mmf140sn70wzgzdy6gmobe1j\"\n    },\n    \"startTimeMillis\" : \"2023-01-31T13:35:34.81803Z\",\n    \"name\" : \"Silvana Davis\",\n    \"description\" : \"Commodi velit et eos vero expedita dicta ad. Dignissimos hic excepturi repellendus eius minus est harum. Id non neque qui officia aut odit. Id aliquam excepturi deserunt. Qui doloribus ipsa facere ill\",\n    \"modifiedTimeMillis\" : \"2023-01-23T13:09:34.818128Z\",\n    \"id\" : \"t1v5\",\n    \"activityType\" : 613237389\n  }, {\n    \"activeTimeMillis\" : \"2022-03-23T13:59:34.818226Z\",\n    \"endTimeMillis\" : \"2022-09-23T17:03:34.818253Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/204589\",\n      \"name\" : \"Pia Graham\",\n      \"packageName\" : \"Alexander Mayer\",\n      \"version\" : \"durjf981rq6ndd07c87d1dpc6yupwgaa1og1yg56ct9bcefwxf8gh4tzs9ao0rbi3wr1r4c449myp0khtmcuhz87669ss61ym769n219yck\"\n    },\n    \"startTimeMillis\" : \"2022-04-04T16:53:34.818437Z\",\n    \"name\" : \"John Watsica\",\n    \"description\" : \"Rerum expedita alias facilis aperiam. Quia natus molestias et illum. Consequatur sit ut aspernatur nulla. Est consequatur et commodi est omnis dolores similique.\",\n    \"modifiedTimeMillis\" : \"2022-09-22T16:57:34.818532Z\",\n    \"id\" : \"7fdh\",\n    \"activityType\" : 1402000734\n  }, {\n    \"activeTimeMillis\" : \"2022-04-01T13:19:34.818629Z\",\n    \"endTimeMillis\" : \"2022-09-17T13:57:34.818658Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/018387\",\n      \"name\" : \"Sixta Nitzsche\",\n      \"packageName\" : \"Brett Graham\",\n      \"version\" : \"isuuej13xx6ww0wqdmfs3ro2bzwatymmghy4zvqepmf7kb34as3otng5i55wxm7c3p8sccqnj5v8hhc4jyvsp\"\n    },\n    \"startTimeMillis\" : \"2022-07-07T14:02:34.81884Z\",\n    \"name\" : \"Hiram Ankunding\",\n    \"description\" : \"Quia suscipit maiores excepturi architecto. Quis neque sed eum reprehenderit fugiat id distinctio. Unde voluptatem odit quia fuga eius. Recusandae dolores cumque aut veniam.\",\n    \"modifiedTimeMillis\" : \"2023-03-04T15:32:34.818941Z\",\n    \"id\" : \"2887\",\n    \"activityType\" : 36202951\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4c39276-e012-3aea-88e4-96ddfe0b5a50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "2b10dc61-ce2e-3291-b448-f10192854bef",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/070n/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2023-02-09T16:52:34.80914Z\",\n    \"activity\" : 1296981747,\n    \"startTimeMillis\" : \"2022-11-25T14:31:34.809178Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-12-29T13:45:34.809215Z\",\n      \"endTimeMillis\" : \"2022-11-28T13:59:34.809247Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/276672\",\n        \"name\" : \"Billie Larkin IV\",\n        \"packageName\" : \"Mr. Marita Nienow\",\n        \"version\" : \"3nbr4nadu7zgv3l6d71ej2jbydh84xbe8c5nz8a932uxuma2w4v4rjltoqzuaz21xwu49dceel9e25r09b3st502lgcfwcx7oq68vtvsr83oy563qac24g5hm8yczfl47w1h99o6hezz208k5qvyownvfi3z5xlqrnrplrbhm92fvssefvqkuucv\"\n      },\n      \"startTimeMillis\" : \"2022-06-14T15:38:34.80946Z\",\n      \"name\" : \"Domenic Hudson\",\n      \"description\" : \"Et accusantium accusamus quia amet. Iusto id molestiae debitis praesentium. Error odio qui. Voluptatum hic commodi eos.\",\n      \"modifiedTimeMillis\" : \"2022-10-08T15:41:34.809569Z\",\n      \"id\" : \"791o\",\n      \"activityType\" : 1433992522\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"ol27\",\n      \"maxEndTimeNs\" : \"2022-04-02T15:13:34.80977Z\",\n      \"minStartTimeNs\" : \"2023-01-04T13:25:34.8098Z\",\n      \"nextPageToken\" : \"ympsogo8bz0d2rfce5yx90c4j6gxwg5xc38gzsc5qjvlkhhgubqxwrqwwuor6bdfj8attv89nktu0a0khrbfke8tu4izhzi20gu1r7nb6d7jb2ybkp8nntsmcpdjdkeiusda\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"f7dc\",\n      \"maxEndTimeNs\" : \"2022-12-10T14:13:34.809925Z\",\n      \"minStartTimeNs\" : \"2022-11-20T14:07:34.809954Z\",\n      \"nextPageToken\" : \"fgz6afkcgy1j3kjckiyn5zwe2fcd7fxkwfwi6ym86f6zmxskn6vkmhlsxyt7z7y760fapt75xo8cbqb1lqmox\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"lqt1\",\n      \"maxEndTimeNs\" : \"2022-09-03T15:03:34.810083Z\",\n      \"minStartTimeNs\" : \"2022-12-11T14:59:34.810111Z\",\n      \"nextPageToken\" : \"l93sa60jvkgl0hhj8rqmtoa2vp53k902ehvdtaarpb0z7147spvsid8pgjeabnbgugyijnjzyxv3nus35a4m\",\n      \"point\" : [ { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-12-25T15:48:34.810163Z\",\n    \"activity\" : 1506738960,\n    \"startTimeMillis\" : \"2022-10-02T16:52:34.810195Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-05-05T16:25:34.810227Z\",\n      \"endTimeMillis\" : \"2022-11-16T15:11:34.810254Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/550928\",\n        \"name\" : \"Mrs. Steven Tremblay\",\n        \"packageName\" : \"Maybelle Walter\",\n        \"version\" : \"qphz20jevk7n18s5hyqumfxtplblwgfne55ktbscm7kzqntzjzxl128lncm9qprtzpgyqe3e7wvgqbiygs0fkmwugf710chq1ewy7gtzeaihfnaxgrn5e\"\n      },\n      \"startTimeMillis\" : \"2022-04-20T13:29:34.810444Z\",\n      \"name\" : \"Lorette Kris\",\n      \"description\" : \"Quia fuga esse ut perspiciatis minima nam vitae. Nihil mollitia fugiat omnis natus deserunt. Sed tenetur officiis beatae id veritatis est.\",\n      \"modifiedTimeMillis\" : \"2022-11-25T15:35:34.810546Z\",\n      \"id\" : \"0169\",\n      \"activityType\" : 1283827682\n    },\n    \"type\" : \"activitySegment\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"sd30\",\n      \"maxEndTimeNs\" : \"2022-04-05T13:24:34.810729Z\",\n      \"minStartTimeNs\" : \"2022-07-01T15:31:34.810759Z\",\n      \"nextPageToken\" : \"qbycr2tyndijmedarj3xcummu3e9lmf5op6u8fzejxd4glm86l1iqrbbpf27riw17ckrxtmez5ia7fx4wef93y9rl22y0i5ppongy8yrcs7p7b45\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"0i18\",\n      \"maxEndTimeNs\" : \"2022-11-17T15:38:34.810881Z\",\n      \"minStartTimeNs\" : \"2022-03-31T14:06:34.81091Z\",\n      \"nextPageToken\" : \"kjggj\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"30pn\",\n      \"maxEndTimeNs\" : \"2022-10-21T17:00:34.811027Z\",\n      \"minStartTimeNs\" : \"2023-01-10T16:37:34.811057Z\",\n      \"nextPageToken\" : \"ide6bowru6zkyc6xkrqyg3p8hkfam8rg9otryzldzpvk0isi6h\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"45hc\",\n      \"maxEndTimeNs\" : \"2022-12-23T13:41:34.811178Z\",\n      \"minStartTimeNs\" : \"2022-10-15T14:09:34.811207Z\",\n      \"nextPageToken\" : \"iqn473l6eqy539jal2qcswygudhem8dnbbm4nanmnudtg510or1e7qt7evwwxeeq14awdkpcyfuk75d0np7kth3lh4vx19upx5i21kcbcdgnktvusaavvxky199396741zb6uo4b3hr90girki068lky952nu1vb25c1o7gpgrz7fsoag8ladf\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"b06n\",\n      \"maxEndTimeNs\" : \"2022-07-17T13:17:34.811319Z\",\n      \"minStartTimeNs\" : \"2022-04-04T16:16:34.811347Z\",\n      \"nextPageToken\" : \"waktu5ed3ukcmh49uxuzy26j7dqxjt5ue4qnwjcx13js9196xhlv0j0rj7qhf4m6nnqlmu7i0blpnzp2y63kw8ifenmzardite7qmidx9wade\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"nusa\",\n      \"maxEndTimeNs\" : \"2022-10-16T16:52:34.811458Z\",\n      \"minStartTimeNs\" : \"2022-07-24T16:48:34.811487Z\",\n      \"nextPageToken\" : \"iq3nhb2eqz1onr7qp28jptu21n94e687p1jo9daginiwo47yyg6lcou2gnnjekmpkm45qfi7ufi5vhggoicy0uwlx8l93qof7jneht23m\",\n      \"point\" : [ { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-06-24T15:21:34.811541Z\",\n    \"activity\" : 110147901,\n    \"startTimeMillis\" : \"2022-08-28T14:33:34.811573Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-11-17T13:47:34.811605Z\",\n      \"endTimeMillis\" : \"2022-09-21T13:37:34.811633Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/809825\",\n        \"name\" : \"Federico Rempel\",\n        \"packageName\" : \"Edmund Schinner\",\n        \"version\" : \"wvfcnt30wefghi5ztoqpll6\"\n      },\n      \"startTimeMillis\" : \"2023-02-07T15:47:34.811822Z\",\n      \"name\" : \"Jimmie Kozey\",\n      \"description\" : \"Pariatur sit qui iste neque voluptates. Fugit quasi quibusdam non nostrum libero qui. Rerum consequuntur iste reiciendis ut et quia eum. Suscipit eius nulla pariatur omnis.\",\n      \"modifiedTimeMillis\" : \"2022-04-20T16:47:34.811924Z\",\n      \"id\" : \"9ip4\",\n      \"activityType\" : 930815499\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"9py2\",\n      \"maxEndTimeNs\" : \"2022-03-11T14:07:34.812101Z\",\n      \"minStartTimeNs\" : \"2023-02-03T15:37:34.812128Z\",\n      \"nextPageToken\" : \"rb407glh8w5568w0kq6vkmwgavrtnc4f5w76nfqopn22m\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"0ega\",\n      \"maxEndTimeNs\" : \"2023-01-09T14:59:34.812242Z\",\n      \"minStartTimeNs\" : \"2022-11-10T15:23:34.812272Z\",\n      \"nextPageToken\" : \"xzxukq759rkstlfb3lff2zlwcb76nmjodfqansf5yuvhp8emj9y86gtqim9nknz4f1wlwa4yagtagk004p83ev4wp08eje4qvkzgovuuppmcbtlq4st7aszzajfbbpt8pgg\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"566c\",\n      \"maxEndTimeNs\" : \"2023-01-06T14:36:34.81239Z\",\n      \"minStartTimeNs\" : \"2022-07-23T13:43:34.812419Z\",\n      \"nextPageToken\" : \"w8m09wjlziwdnp0g0ctty3y6bcm3g4nw0del4hshxx122vlajy4edpc81zunr6aiz9woukvanwt7q161jyigsrq14onxoxt44ib5zqp49hkbhn9qrv4lg5g0t5s0je21ga487i9qaudytolwjrenlc7yfg3owsh62yshahb165hc4cfkd\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4klv\",\n      \"maxEndTimeNs\" : \"2022-04-14T16:43:34.812539Z\",\n      \"minStartTimeNs\" : \"2022-12-29T15:18:34.812568Z\",\n      \"nextPageToken\" : \"x3hwq1wi3s24vvns7vol9j82qe6v5uquy0f5pdwttoftgh5tnumusxx5wnwowgmtknt1l98ggj5zwtlvnulya91kilo9ee39x8ypzi9pd4sjmqrjcl1kvbcsnn3p13ycoj32hj6xn1wwe05gl5wgfsgx77g7vzxbb48rg8z37okawwxocwwj\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"0ycp\",\n      \"maxEndTimeNs\" : \"2022-10-25T16:49:34.812692Z\",\n      \"minStartTimeNs\" : \"2022-08-03T14:26:34.81272Z\",\n      \"nextPageToken\" : \"np5lhgswpu6t72s9wmf7yekidfqyihlxd2fsumbkkdkflbrkr49w9fw2ipn2m9a562tp7dqx\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"jarh\",\n      \"maxEndTimeNs\" : \"2022-11-12T16:12:34.812839Z\",\n      \"minStartTimeNs\" : \"2022-04-10T15:38:34.812867Z\",\n      \"nextPageToken\" : \"j81clrqieheete6e74birn975rugb525u6yapfmw9eknuyl8hjrwr10edethunt0gny3iowt072wwfdabubtu0xlvvqnpw427q8q87usdpbxc04gajs3vd1a5ukqnjrlt95n6n1zy6\",\n      \"point\" : [ { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-07-21T16:26:34.812924Z\",\n    \"activity\" : 708688451,\n    \"startTimeMillis\" : \"2023-02-21T14:30:34.812954Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-06-28T15:39:34.812985Z\",\n      \"endTimeMillis\" : \"2022-12-08T14:06:34.813013Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/600794\",\n        \"name\" : \"Tim Luettgen\",\n        \"packageName\" : \"Rusty Goodwin\",\n        \"version\" : \"2zjbs64tkagdlgb6vsrit8jbnxs66l5gq0kwrg8azniqzjdlt86tj20wr7pmyhroe1elor3s0e11a43dtjr6xzj8xoet4tqf77gr0spn9b5tro9o3tn1kx6u7arnvmgx3y3gbeuew6be5bjkj3l6j9qwjozs8n7okzeagmqncfexy01apzmh4e6wj1i5\"\n      },\n      \"startTimeMillis\" : \"2022-12-31T13:21:34.813209Z\",\n      \"name\" : \"Tosha Daniel\",\n      \"description\" : \"Quasi est illo asperiores minima. Dolores harum provident. Voluptatibus ex corporis. Fuga architecto expedita. Dolorum autem eveniet odit quas repellat qui sit.\",\n      \"modifiedTimeMillis\" : \"2022-09-29T13:32:34.81331Z\",\n      \"id\" : \"xn8z\",\n      \"activityType\" : 1856515158\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"orn5\",\n      \"maxEndTimeNs\" : \"2022-03-31T16:22:34.813493Z\",\n      \"minStartTimeNs\" : \"2023-01-17T13:42:34.813521Z\",\n      \"nextPageToken\" : \"t4e8t4f7jvrbpebsdhypngey5qf2005vd272ihzos3aombtw8tqt9o9mvk2t2gq6kpafc6f4xk3b695nw0duo0b7jiyqoq1vm16psh3n1aul46omxerfi3usibm3vvq9rqb5x924y\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"v29z\",\n      \"maxEndTimeNs\" : \"2022-09-17T13:16:34.813645Z\",\n      \"minStartTimeNs\" : \"2023-01-12T13:10:34.813678Z\",\n      \"nextPageToken\" : \"r9w5nltsupc2t084anugp0juz9vbkz07dnj65gn0pcknvhbi8c3vvwdhugt9rwozwyjqwbq06wm7wy8i5yicgihkpm3cbugscync0c56o9gnov30djcp1kh18crezb3491r9ykpxtkkjuog40jomtj7a45slolb1zpf0yvq5o4uiv5nmeoihxvzartz1qiqy2qsybl\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"9445\",\n      \"maxEndTimeNs\" : \"2022-11-25T16:28:34.813804Z\",\n      \"minStartTimeNs\" : \"2022-08-12T16:34:34.813839Z\",\n      \"nextPageToken\" : \"rg6iktkreho400g6r9mnsfp04t7jmg0f8su\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"785t\",\n      \"maxEndTimeNs\" : \"2022-07-21T16:14:34.813949Z\",\n      \"minStartTimeNs\" : \"2022-08-13T15:35:34.813977Z\",\n      \"nextPageToken\" : \"3nldg65wfynvbama6o3tf3xpeg0p3o8l\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"onnr\",\n      \"maxEndTimeNs\" : \"2022-10-30T15:02:34.814095Z\",\n      \"minStartTimeNs\" : \"2023-03-05T13:18:34.814124Z\",\n      \"nextPageToken\" : \"ek92edk1e15j5eoi64tt33g4498pljqlqgd6vn2z8bmlt9xtr60dq3nvr58ym20b1qjjtiggpdrx4tich5rzz5gorq2\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"09ex\",\n      \"maxEndTimeNs\" : \"2022-04-06T14:50:34.814252Z\",\n      \"minStartTimeNs\" : \"2022-07-04T14:52:34.814282Z\",\n      \"nextPageToken\" : \"bhf7pjp5g04ml1m12aw0ynf87u1vqjdiiv62i063962rkabwjghd0jf4tajupviknfx9al9dtclonbeub4fjb1j23fgr2q9y8bssy5ega1szrtpoa0ygwsy7l2i49jk3y1djt48wib4vz65ts1m6ytg23fnb7r07li5afbwkjsrfns93dnkjy\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"cw6j\",\n      \"maxEndTimeNs\" : \"2023-01-13T16:24:34.814399Z\",\n      \"minStartTimeNs\" : \"2022-05-19T14:34:34.814427Z\",\n      \"nextPageToken\" : \"gz8cmxvymeowezjnthrqgmgyvv0ouon0euai55lg7ple4bye7mk4sp1aqknmaug11yk9zzqv9mw9ty1an6woo3rx0auodiyiczf03uiyg1z66n7hy9yv9wifxn8w5iyj71tjdm9vl6ccafy1vz787tqbpxpkfupzn41\",\n      \"point\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-09-03T13:37:34.814484Z\",\n    \"activity\" : 240835426,\n    \"startTimeMillis\" : \"2022-04-21T13:48:34.814516Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-04-27T14:23:34.814547Z\",\n      \"endTimeMillis\" : \"2022-06-04T16:44:34.814576Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/748443\",\n        \"name\" : \"Mr. Thanh Maggio\",\n        \"packageName\" : \"Ms. Kerstin Pollich\",\n        \"version\" : \"8as9e4jz0erlbwv8sfjc46oaij8jt855ovwx1tmrayj3nfnf4emjerotf8ynnvwaiogqoyjaf3wb8nrshzkgz2sz8hjcglt4nlgtjkcp2gqyyhazll7h6g91flb1t3ry4mwguif61r2aef0tu9tgzjrajb721sfh0rhte80\"\n      },\n      \"startTimeMillis\" : \"2022-03-25T14:58:34.814764Z\",\n      \"name\" : \"Miss Richie Goyette\",\n      \"description\" : \"Enim ratione consequatur eum placeat rerum voluptates sunt. Tempore qui iusto blanditiis ex sint suscipit. Sit voluptatem veniam dolorem ut.\",\n      \"modifiedTimeMillis\" : \"2023-02-05T15:51:34.814868Z\",\n      \"id\" : \"x418\",\n      \"activityType\" : 1648335826\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"njwp\",\n      \"maxEndTimeNs\" : \"2023-02-17T15:25:34.815059Z\",\n      \"minStartTimeNs\" : \"2022-06-26T15:47:34.815089Z\",\n      \"nextPageToken\" : \"he7jp7wmxi3b1nqxuzjid6x3xosi5c0i475nzswx35kg3use21xxbbo7rf04whyfqliaulf881ssrfygdbu4len9g6xveltbm4lhzqkimkziicvjmxci96ny5hbuqwmu6gyj5vwtz09r2p0jf1xvls7ctsu5hh80oi1t0n6853um9n5vekecs7scqza55d4sy4u5s\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b10dc61-ce2e-3291-b448-f10192854bef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "dc827834-f54c-3cf5-a1f9-e9ce2df34043",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/wodv/dataSources/42xv/datasets/5s8r",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"p52w\",\n  \"maxEndTimeNs\" : \"2022-08-12T16:49:34.807334Z\",\n  \"minStartTimeNs\" : \"2022-09-24T15:17:34.807358Z\",\n  \"nextPageToken\" : \"jelzrje70nla369i2rztdqifox23j631qceebi8po67rlxr6k0xusr59n65xwau035vjue0su8mnv\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"0mu3\",\n    \"endTimeNanos\" : \"2022-10-10T15:08:34.807466Z\",\n    \"dataTypeName\" : \"Jade Auer\",\n    \"startTimeNanos\" : \"2022-05-27T13:22:34.807533Z\",\n    \"modifiedTimeMillis\" : \"2022-07-18T14:19:34.807559Z\",\n    \"rawTimestampNanos\" : \"2022-09-08T16:25:34.807585Z\",\n    \"computationTimeMillis\" : \"2022-06-06T13:31:34.807613Z\",\n    \"value\" : [ {\n      \"intVal\" : 1120076614,\n      \"fpVal\" : 3.9100201047725647E307,\n      \"stringVal\" : \"gn5zumuau038zzl02wnmp3996t3wyce3vi5sdamw1xf0gpcaugwhysgaq2xvxxtapl4ksuc9\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1169765406,\n      \"fpVal\" : 1.1678423956869364E308,\n      \"stringVal\" : \"b1eeiqman2zp3y4jtlf199qpyj3q6hyqijzzp5liqqzrts35c9phbrivit\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1642603221,\n      \"fpVal\" : 4.499226006342531E307,\n      \"stringVal\" : \"vh52r3gjwp1f2nt58u5fe67yvsyptceel7ffv6eou7br442o9as6b8xzjpgoatqyjjt65gm358v1m\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 522978880,\n      \"fpVal\" : 3.2727251047981925E307,\n      \"stringVal\" : \"v8x3ip2augb20q84hjn0bgrmxpjmept5ongqi577hwbgzgtamoayx2x98jzf61hh3ip8cmes16gad7thtf7onay9x5dv30dzi1bp7v7dwh5sao48lfq9p9sglue2xrz0w9rhkcm20pbrar9wau2e6m5smqeen2moh\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1343414903,\n      \"fpVal\" : 1.2128970549602386E308,\n      \"stringVal\" : \"fn8ual3pa5pv6nqiz6bz8aresvv9r42ogakmjohx3fakdyve1vcjdujnsw03zw117aj40118jb08cswx2nrg7x49c4gby55v8bexxvvall2c804czv0ywwl08t\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"662v\",\n    \"endTimeNanos\" : \"2022-11-28T14:08:34.807857Z\",\n    \"dataTypeName\" : \"Mr. Odell Stroman\",\n    \"startTimeNanos\" : \"2023-01-02T14:05:34.807921Z\",\n    \"modifiedTimeMillis\" : \"2022-05-06T14:27:34.807948Z\",\n    \"rawTimestampNanos\" : \"2023-02-20T15:00:34.807973Z\",\n    \"computationTimeMillis\" : \"2022-08-14T14:30:34.808001Z\",\n    \"value\" : [ {\n      \"intVal\" : 1767819263,\n      \"fpVal\" : 8.635770802984461E307,\n      \"stringVal\" : \"cjwpzx3mudt6gchf829rlafhflo7z0aq4nsj6cxr8n6bn4aux6irsv2z6exwi4odi5i3efloilh679ui6elsodckw4ynco\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"559i\",\n    \"endTimeNanos\" : \"2022-05-18T16:20:34.808122Z\",\n    \"dataTypeName\" : \"Arnold Abshire I\",\n    \"startTimeNanos\" : \"2022-07-20T15:09:34.80819Z\",\n    \"modifiedTimeMillis\" : \"2022-08-23T16:06:34.808218Z\",\n    \"rawTimestampNanos\" : \"2023-02-16T16:17:34.808245Z\",\n    \"computationTimeMillis\" : \"2022-04-20T15:12:34.808273Z\",\n    \"value\" : [ {\n      \"intVal\" : 343723568,\n      \"fpVal\" : 1.2406596421273438E308,\n      \"stringVal\" : \"v9n6tbl2v4q7vfzs6jvy3eku3ludn0ev53k3ukff5cf39mt5tr1oxxt5a1hdvvzs7ifkaxhlvew8h\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"z4q8\",\n    \"endTimeNanos\" : \"2022-05-06T14:18:34.808398Z\",\n    \"dataTypeName\" : \"Otha Watsica\",\n    \"startTimeNanos\" : \"2022-11-27T16:04:34.808464Z\",\n    \"modifiedTimeMillis\" : \"2023-03-03T13:34:34.808492Z\",\n    \"rawTimestampNanos\" : \"2022-08-18T13:04:34.80852Z\",\n    \"computationTimeMillis\" : \"2022-06-07T15:49:34.808546Z\",\n    \"value\" : [ {\n      \"intVal\" : 598690994,\n      \"fpVal\" : 1.5609334269433774E308,\n      \"stringVal\" : \"9ql6qonetggceus2qdgj0jvhix3pgs8484ecp38verqqwubq0r0v8iidgkag144lmzeqn7j0vg4vpot8j3xgkvpndi8pjwe0jt9cubw049elpu7icxgukzs774s8xfwmnwwofketlb5brvnxltwqn57h\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1233522509,\n      \"fpVal\" : 1.7527349636696745E308,\n      \"stringVal\" : \"cazxlm12npp91vw9e6zkozc136prol3mc8k5co1hq7mih0v4f040rxz5f7eull5mql1n0orjw48h0tltfcggujp3gyzdu63ch5c2bda1sel6tzx6elifeouatbwlhr29u7rxv3qjjwj12grwmfo11pm33m1hhpwwp5rmanr8odjbufric94ucteqxf5p\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 356373668,\n      \"fpVal\" : 1.547327345081236E308,\n      \"stringVal\" : \"5754r2gfms0cd6ltx1zxzp80qxdd6mht1303f80p506s2tv4na975s612pxy0f9j2iirtgh5ev83bk9izwppsfo1kwvg4t936rssp0x37189vv1852ngrs72lzcy1efrynigoeorpvs1a6idsc29elavlt16noz1xlsd0gty\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1412111328,\n      \"fpVal\" : 1.3485447583218297E308,\n      \"stringVal\" : \"lp3eh0he4rggh7nnxw32mhaspmd9kfwnmyajgq5wvm4rkl0yno02fn5o6lu7bah8mjb0slvvnnfybiemp32t2wquolggk5\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 889138692,\n      \"fpVal\" : 1.7572138240199741E308,\n      \"stringVal\" : \"be5qohgf20v5296vcmvblutcvepyrejnm68spx3csxvmlfwb3yqiujr8avjk1oqndf3ibbxwdnco7y9kvs6be2lefj4prdv6rntr75sgnal94fpuoon6vryt7iqknqs4cfbzon2wd2m73h4oeq\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1511441147,\n      \"fpVal\" : 1.312570459127868E308,\n      \"stringVal\" : \"0snu0lyi14gqdvnzokv814ky17ij4bgbqo13xokzlzajx7rzqb5hyu6stzmro407okp1b9b02y1ba\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 11016424,\n      \"fpVal\" : 5.722581411365184E307,\n      \"stringVal\" : \"9040o87hbopa7qx5p7biakmi8l58vz7q82fu1kjqf2daa4p4inu63gncyg6gvc083msb3du9cf05\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1596282320,\n      \"fpVal\" : 4.950864762905681E307,\n      \"stringVal\" : \"wo79jl3gq2hgbsh16tufkdtxccjwmvtzgl6pjnoap0g91no2t\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc827834-f54c-3cf5-a1f9-e9ce2df34043",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "feb760d2-f2ee-3630-861e-4920dfd2e6d3",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/uyl4/dataSources/96q9/datasets/1dv8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"m0mk\",\n  \"maxEndTimeNs\" : \"2022-11-20T16:57:34.804239Z\",\n  \"minStartTimeNs\" : \"2022-07-19T17:01:34.804265Z\",\n  \"nextPageToken\" : \"u4tm2lhqxznl2jnomwy3rls0zt8mw7jimom4qdtzfrd02l9pu3a929c8bc91rrco83mq9nn8ae8kcju0m7nhmz0jb1rjf169ep9dcxq6ce4xdhiowopzcmslowwvfhhqq6c7pejg4\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"2i58\",\n    \"endTimeNanos\" : \"2022-06-11T14:40:34.804379Z\",\n    \"dataTypeName\" : \"Bo Mertz\",\n    \"startTimeNanos\" : \"2022-09-24T14:17:34.804445Z\",\n    \"modifiedTimeMillis\" : \"2022-12-07T14:12:34.804473Z\",\n    \"rawTimestampNanos\" : \"2023-02-26T13:16:34.8045Z\",\n    \"computationTimeMillis\" : \"2023-02-13T16:25:34.804528Z\",\n    \"value\" : [ {\n      \"intVal\" : 1922928642,\n      \"fpVal\" : 8.143171082712009E307,\n      \"stringVal\" : \"6fzoudvznpbovr11c4zj2fmrf1mqsq224swo5fjvywd9xkgw5ohgkz5h03n68le4atw9fqh8j471jf6e9rw9jhqfhe3f98bzxffb41wb5h57dzuj75ze3qfklvvo5v8nbh4fc1b088e4jlxssw72kuja846uy5cx3bwlzyk3sgucc19rzu4ay\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 672608008,\n      \"fpVal\" : 8.661455029594759E305,\n      \"stringVal\" : \"m078j97p8n8d7zz0zg8leh64kblnghfumihivc9hcji8e8s97wag61ei1lqmgqik3e7r8qc3vqcsfi6y1otixng1mfj43q04obwpmy7f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2056350919,\n      \"fpVal\" : 3.7950122783695174E307,\n      \"stringVal\" : \"r7kqr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 270840566,\n      \"fpVal\" : 5.279465571521005E307,\n      \"stringVal\" : \"nt3x60b3csp5aj829vs6janhwqgn6v6ffsfkv1aggay9ua9qt7iz59rdz6ugikmfc33mjbw82pm1qmmb0lq4pugqh14bf1pey9sfisy4u9w4f8k8l41qdlbtr6y4z0zr47zvsuzvrhjv3me9lh34n7sxpygqpun1vg6ae8khjqhy7l4j838s5ihqzlym\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2134288906,\n      \"fpVal\" : 5.986923028449068E307,\n      \"stringVal\" : \"0voh1o47t23qz34665otnang7dde96oul4zbcj88oogydljn6lf918pctx61i5lggi\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 721229509,\n      \"fpVal\" : 1.6892928238986854E308,\n      \"stringVal\" : \"4x5di1qnfaey6gldexvnr3b71houz30j41f08z6e53v2dg6ngrdcc2875gvsqwloqyn3zo6gvres1cwuwqq6jiepj2eltcsjfijl8c8v9malgopyvgu512mxd045w1tpi0vz0ima6kjbwsr03\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1906814346,\n      \"fpVal\" : 1.647924335849549E308,\n      \"stringVal\" : \"suamziditxv12ve5luls79thxx857ohw17uo5bv4y0fyzv79fufutnxqwmjkhzhd2kze7fl9ooxttnbwn9s2se08e2hn9cmsmx2t5p6df6dl1mhjo2gsqpf7f5c51r3sqy1sn6wwvgf\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"ra2q\",\n    \"endTimeNanos\" : \"2022-12-28T14:23:34.804868Z\",\n    \"dataTypeName\" : \"Dr. Quintin Jacobson\",\n    \"startTimeNanos\" : \"2022-03-14T13:07:34.804936Z\",\n    \"modifiedTimeMillis\" : \"2022-09-27T14:10:34.804962Z\",\n    \"rawTimestampNanos\" : \"2023-02-25T13:33:34.804991Z\",\n    \"computationTimeMillis\" : \"2022-04-24T14:41:34.805017Z\",\n    \"value\" : [ {\n      \"intVal\" : 944319324,\n      \"fpVal\" : 8.014657921560796E307,\n      \"stringVal\" : \"cgrn0fleh6533wt1w5nfky8x5mhiq9gojzpa2f0toystnkj8wylrqxbklqzbi3e\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"m805\",\n    \"endTimeNanos\" : \"2022-05-14T15:37:34.805149Z\",\n    \"dataTypeName\" : \"Peggy Gerlach PhD\",\n    \"startTimeNanos\" : \"2022-06-22T13:50:34.805219Z\",\n    \"modifiedTimeMillis\" : \"2022-11-21T13:37:34.805249Z\",\n    \"rawTimestampNanos\" : \"2022-10-04T13:22:34.805275Z\",\n    \"computationTimeMillis\" : \"2022-09-20T15:28:34.805303Z\",\n    \"value\" : [ {\n      \"intVal\" : 100742048,\n      \"fpVal\" : 5.120089914769791E307,\n      \"stringVal\" : \"4cqy2i4fv9eixmdsftvlzmxvo7ozy368ecx750mtmmcrpcqrctzec5laswuuyw8468n1ux61kxevznj1gax1caugs0fsib4xwfuk2fwqgki1ykr2lh50flfh2vv6tqi6g3hrbtl1okwoi9fpda0633xf0h60v01fqmkohntqe826g1i25w1fqnsvs6xa5pe\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1744909177,\n      \"fpVal\" : 9.742649864390523E307,\n      \"stringVal\" : \"nyo0gk0qfp3yzq1dx2v\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 929774295,\n      \"fpVal\" : 1.3963275919913346E308,\n      \"stringVal\" : \"zih2bsnaqoqpnzdcv4lo3h176jz3w37zil0547rlx3lt3uhuiv2p7weodjb84wty\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1937512791,\n      \"fpVal\" : 5.114275677407142E307,\n      \"stringVal\" : \"ofducw72sxbi9ucdvmbvscgimbw089oc1b4b0fbzsdmyc2ol4omcgkkv8y9cxmrou4z48lsoe6qn4iv2rfajh606r48zpqm3x91iknryea2dtmg9i3n0893sprxpfwfq802fvk35wl2oercl3nd88h2g\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2061035989,\n      \"fpVal\" : 1.409049910485879E308,\n      \"stringVal\" : \"5balypzutu52qpsccxv5gmt6qjg9958bmvlahis6gr0qnzadeyfnb9kmq3ddtsbw5udiso2wfgwvwcsakoiy2cab0axg04qusog5mcttad9dxfgq8wberm28kvg91oc15iw4fhoroyfib5ip4guwag\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 127144505,\n      \"fpVal\" : 4.495600909074705E307,\n      \"stringVal\" : \"qjhrsne1vtduvx97uw5thjgo358sdxm3tlogtmnns04xldscvtvtxpmf3yn4qebm3bbgtoz2uoecf4sjzpb27oxgz8zm6eye0m8ne56rgzxjqhk10tz1nxy2dtd72cwahv8xqexi6sj\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1286141437,\n      \"fpVal\" : 1.1599681357331921E308,\n      \"stringVal\" : \"dnfl0xdbwamnw1t84ahjah\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"26p8\",\n    \"endTimeNanos\" : \"2022-07-07T16:52:34.805627Z\",\n    \"dataTypeName\" : \"Alejandra Heaney\",\n    \"startTimeNanos\" : \"2023-02-20T16:40:34.805697Z\",\n    \"modifiedTimeMillis\" : \"2023-02-18T14:37:34.805725Z\",\n    \"rawTimestampNanos\" : \"2022-08-25T15:41:34.805752Z\",\n    \"computationTimeMillis\" : \"2022-09-06T13:14:34.805779Z\",\n    \"value\" : [ {\n      \"intVal\" : 121971048,\n      \"fpVal\" : 4.284604233628912E306,\n      \"stringVal\" : \"7kybdg52n3sig4yx1g5mcc2ihsq4scipq2v1zbnlhrbq6cq20vtrhn55nntqqubh9umy4uwuwh3itxmb8wt1kbxk\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1684303918,\n      \"fpVal\" : 1.6899767807761439E308,\n      \"stringVal\" : \"yqnufuj4ugymdt8blpiffgaau9nazw2slecl7ha6pf3ucdqo3rcbjp8b5ai7fmqiabo70lljufru0apmw4yhhxxv5avzfw9u09hukmkumouvhtpy5oftlp052616ya0ekrwk594w1bo9fqbvtaxv0zy1ol4wkvay6ax\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 45229587,\n      \"fpVal\" : 1.000236402468862E308,\n      \"stringVal\" : \"o5l8czt140clownfft5cv7zgxw90mu5yaiqw818euaju8jutrprwdb0y46wx6bld6uu0kgi4sdsklr4lkbvqw57v8fzymvrg4qvaguehwx5c0wmt0aps2hu36vxjtjm4zvsc9tle3yc3wvky4ct8ngmrcmmczx7wx3ggqkf52zcn17tv07k468\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2131081845,\n      \"fpVal\" : 1.6926721917370082E308,\n      \"stringVal\" : \"tgix5a3feg3t2anic1oltgw3xk6i9lcjfv0pr\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 971141582,\n      \"fpVal\" : 6.283670170806844E307,\n      \"stringVal\" : \"5cu7p4ij1v9we9uffizuo1m\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1641453713,\n      \"fpVal\" : 1.4578431102243562E308,\n      \"stringVal\" : \"ief0h5cix3rz\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"k31h\",\n    \"endTimeNanos\" : \"2022-12-30T15:52:34.806078Z\",\n    \"dataTypeName\" : \"Daren Maggio\",\n    \"startTimeNanos\" : \"2022-11-03T16:48:34.806139Z\",\n    \"modifiedTimeMillis\" : \"2022-06-09T16:05:34.806167Z\",\n    \"rawTimestampNanos\" : \"2022-08-24T13:58:34.806195Z\",\n    \"computationTimeMillis\" : \"2022-06-28T14:40:34.806222Z\",\n    \"value\" : [ {\n      \"intVal\" : 491035961,\n      \"fpVal\" : 9.16095315398343E305,\n      \"stringVal\" : \"2kf7ixz7ek6fhlpjd2xwa4lnfujfvmyyvq3kbvjpm8ldy1tr5v8rbpfxd6jmkmjmzk75xoc4bpcryeokqjx3cxg1yymg0q5x2l5x1jnugogidltm\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 301594338,\n      \"fpVal\" : 6.706451686662683E307,\n      \"stringVal\" : \"xip851ob9uz4s68dfbhyd4fa8blcownv0eew1e6bbffsrez9nlsiu7y84p3q9g7aisth4sbvqfam7z5l0sokc5mnhgclx\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"x40z\",\n    \"endTimeNanos\" : \"2022-12-17T16:04:34.80638Z\",\n    \"dataTypeName\" : \"Jarrett Conroy\",\n    \"startTimeNanos\" : \"2023-01-23T15:28:34.806444Z\",\n    \"modifiedTimeMillis\" : \"2022-11-22T14:32:34.806471Z\",\n    \"rawTimestampNanos\" : \"2022-09-06T16:50:34.806499Z\",\n    \"computationTimeMillis\" : \"2023-02-13T14:48:34.806527Z\",\n    \"value\" : [ {\n      \"intVal\" : 887444823,\n      \"fpVal\" : 7.63799441945792E307,\n      \"stringVal\" : \"sf9zcrwmf34kazpypshd80teqmwo1pq1219x8egbvqw321rcvjxnorbojosmvazzxiep6qdkbgyoe9crorkx1d8slnd8abw3pe4qlvnwc55zl87q1wyyhbhqcppli46\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 756476002,\n      \"fpVal\" : 1.1584871212993567E308,\n      \"stringVal\" : \"j61vbpb8rvezr5qj6fayt3lkofn3269m8dt7rgepds3zbearluvfq1viqpcd9e706atju7qt1pg8jbx13aif89k3cxn2r54ae2k3981feii2ksvwwn6toi8e6n8mcqv3qdm8fxdx5ashdq38w9i1p4wfcjrxn9eonbn41uu3rquxnfffnkhv83\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"qh2n\",\n    \"endTimeNanos\" : \"2022-10-26T14:09:34.80668Z\",\n    \"dataTypeName\" : \"Mr. Eddie Rau\",\n    \"startTimeNanos\" : \"2022-12-28T15:49:34.806752Z\",\n    \"modifiedTimeMillis\" : \"2022-04-23T16:21:34.806784Z\",\n    \"rawTimestampNanos\" : \"2023-01-25T15:32:34.806817Z\",\n    \"computationTimeMillis\" : \"2022-03-25T15:46:34.806846Z\",\n    \"value\" : [ {\n      \"intVal\" : 213454839,\n      \"fpVal\" : 8.849883265452368E307,\n      \"stringVal\" : \"r0niuqy4fcqtgrxe3js7m0r1ttnl79iy89b4w1da6fmbwqol\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "feb760d2-f2ee-3630-861e-4920dfd2e6d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "4d04a08f-8397-3099-9bb2-d92456dc3ad6",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/112q/dataSources/epn7/datasets/690y",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4d04a08f-8397-3099-9bb2-d92456dc3ad6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "5da370cf-0b12-3661-a8fa-6450ef03814f",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/h2c1/dataSources/6t89/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"z2fd\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"qbqk\",\n    \"endTimeNanos\" : \"2022-12-01T13:33:34.801731Z\",\n    \"dataTypeName\" : \"Ms. Mike Senger\",\n    \"startTimeNanos\" : \"2022-03-24T13:17:34.801808Z\",\n    \"modifiedTimeMillis\" : \"2022-07-22T14:22:34.801839Z\",\n    \"rawTimestampNanos\" : \"2022-10-02T16:00:34.801869Z\",\n    \"computationTimeMillis\" : \"2023-01-10T14:54:34.801899Z\",\n    \"value\" : [ {\n      \"intVal\" : 821777842,\n      \"fpVal\" : 1.1005369109064106E308,\n      \"stringVal\" : \"b3jcw2gmb6vynx6f4m3ppagk41npcnn362mgisn7pvc6w9lgc42o0qcia1kw6m16xqkfo8xvsadizzy66fspolcq6rq2o4so\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 695922337,\n      \"fpVal\" : 4.4565794122922663E307,\n      \"stringVal\" : \"bmrjea9pwnz5sb3guqgxb9lqky1m73rkbxkxah78uphneovqcjmogpm\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 939250387,\n      \"fpVal\" : 1.0869997239890418E308,\n      \"stringVal\" : \"joib7d7fwrnamxw4ja2qix07iylrqun51n87nyc57aj7zm9ja08zk9it5xoh0fy8miw24ibmeuynao4jx0vw532z1awodaqhtzf2t2au0q8ez2dqd0ri82da5uuwull4\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1399624907,\n      \"fpVal\" : 1.4784255603455478E308,\n      \"stringVal\" : \"6zwppy1cr5hspj6hke5jpay6a25fkeiygraeq4678p53ev1xb8rmpt895qhyc4bwdvsltoujrilspxdasim5invnjk2fzcu5bat5rdx\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1697911213,\n      \"fpVal\" : 6.958891258816515E307,\n      \"stringVal\" : \"oqtoycd2v5q6a6jtai5ylfdakpgibtawi365vya8niak18s4egnswowho80mqmj2p63h0s8q13bso6nh1mv137rjkc6en2lfgpq6gxgl1bbs0ks0ax435z645mq0zcfopy1ff968zscmtzg4u11vfssz5i0e58egypzoi8xkisc02ezqmqg\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 645366357,\n      \"fpVal\" : 5.766283858067995E307,\n      \"stringVal\" : \"ekfvifu0d03ze0h2t3e9twdnils7hu9y1n3fa9yc9ljp8s18o7mqhu2ddwffxmcb1mgb74o1kftgvl5svc0b0ryyx6s7pid8048ltfggq2vuosc7a0kj51k7q7tnw4wq4apw3qfo7ebdekzc8dehxiu44y8nuzooichfp652zy8jyxigrl63q\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"uxy9\",\n    \"endTimeNanos\" : \"2022-03-25T14:54:34.802212Z\",\n    \"dataTypeName\" : \"Oda Hand DVM\",\n    \"startTimeNanos\" : \"2023-01-01T16:35:34.802277Z\",\n    \"modifiedTimeMillis\" : \"2022-05-09T16:28:34.802305Z\",\n    \"rawTimestampNanos\" : \"2023-01-15T16:15:34.80233Z\",\n    \"computationTimeMillis\" : \"2022-10-29T14:08:34.802357Z\",\n    \"value\" : [ {\n      \"intVal\" : 1100511597,\n      \"fpVal\" : 4.66046533683012E307,\n      \"stringVal\" : \"f9e5mrvdqbz2uzuwaanqxjfp6k5euy074sr2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1709302018,\n      \"fpVal\" : 5.73347648647051E307,\n      \"stringVal\" : \"m04gegv60bvm28j46wsj14bd4b3flupn8nqpmwqarqb6cya9ojyvsj7qqge97ruumbo09r4cuzn6rlmpnetn9v127lr1od1nb9070tmf6tnjztuv7bslv87ajmavcifgcvwcjri\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 206192372,\n      \"fpVal\" : 1.4870600848720862E308,\n      \"stringVal\" : \"ifo52rknbznyulpzspxzb10t87vq8nuxc45vwicgt5i0lhf9sqf0y3dzoc8f2t8riy5x6pp4cqa43iuqavfcl8n106w24r6i1m17mwy2lef8udzwjbpuerj5ftzha\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1460304797,\n      \"fpVal\" : 1.3823800683572609E308,\n      \"stringVal\" : \"zm8vc03f5nb7o22a65wlrlj09k4ktq24c4t25ul4tg549lfac14aksp320q725ckxteuyvxm90rtjsib8777\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1338990468,\n      \"fpVal\" : 6.474558869374978E307,\n      \"stringVal\" : \"ojvezp45x3af57i184yuxbd7ldhjsi3bpqc1sryq82x11bsl8greyx2rzfapfcg4oks9garijoo5dkpc80xu8isdgnnwtyjz78d9ste6iulbtf6kmlk0j6b8esi66fz8929eku1xh36e7w3352ud01aw7vmn91tj6n3g34ufs8vn43zjw4x9y2yhuych\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 955899844,\n      \"fpVal\" : 4.350098562408002E307,\n      \"stringVal\" : \"8ilfsslwundcljny5slimqlvfqsrsv2ag67026o807qy3qgj2ackhivxfr29vpmgkrgsc42tftewelxb2zcrnjzz1witqi8n0l0cmu4omuy658qmevlciez4at03cpdyf37yobplmgeduszz1dbmwqltthfb874y9rgsyv1fugezg4sr9rh8svcan\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"t1abnskg3jte10ugp6h9du5tn8k8erdu6q9qk25pwgepigpvkkf2mukw33l4gdop3vnyqnwx4xjr18knta1vutkkfle4x0nj2e\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"6ycw\",\n    \"endTimeNanos\" : \"2022-05-30T14:21:34.802673Z\",\n    \"dataTypeName\" : \"Gertha Langworth\",\n    \"startTimeNanos\" : \"2022-08-05T13:18:34.802742Z\",\n    \"modifiedTimeMillis\" : \"2022-08-11T13:44:34.802772Z\",\n    \"rawTimestampNanos\" : \"2022-06-09T14:30:34.8028Z\",\n    \"computationTimeMillis\" : \"2022-04-19T15:24:34.802829Z\",\n    \"value\" : [ {\n      \"intVal\" : 221125978,\n      \"fpVal\" : 1.2418665538706564E308,\n      \"stringVal\" : \"ecov5uju64efp8f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"44p7\",\n    \"endTimeNanos\" : \"2022-10-03T15:29:34.80296Z\",\n    \"dataTypeName\" : \"Rima Hilpert\",\n    \"startTimeNanos\" : \"2022-09-09T16:20:34.803026Z\",\n    \"modifiedTimeMillis\" : \"2022-04-02T15:09:34.803052Z\",\n    \"rawTimestampNanos\" : \"2022-11-25T15:55:34.80308Z\",\n    \"computationTimeMillis\" : \"2022-11-19T13:59:34.803108Z\",\n    \"value\" : [ {\n      \"intVal\" : 501502125,\n      \"fpVal\" : 4.942222161943663E307,\n      \"stringVal\" : \"c1mbc3r2i1dvl7dyyl7hbl9uhrjf8trjl5f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"6e6v\",\n    \"endTimeNanos\" : \"2022-03-17T16:33:34.803238Z\",\n    \"dataTypeName\" : \"Ms. Marion Gusikowski\",\n    \"startTimeNanos\" : \"2022-06-13T16:03:34.803306Z\",\n    \"modifiedTimeMillis\" : \"2022-09-19T15:09:34.803334Z\",\n    \"rawTimestampNanos\" : \"2022-08-12T16:33:34.80336Z\",\n    \"computationTimeMillis\" : \"2023-01-25T16:22:34.803389Z\",\n    \"value\" : [ {\n      \"intVal\" : 870975392,\n      \"fpVal\" : 4.800572589710144E307,\n      \"stringVal\" : \"ad7fnxm\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"82oa\",\n    \"endTimeNanos\" : \"2023-01-26T14:00:34.803511Z\",\n    \"dataTypeName\" : \"Jed Spencer\",\n    \"startTimeNanos\" : \"2023-02-14T16:20:34.803576Z\",\n    \"modifiedTimeMillis\" : \"2022-11-29T13:51:34.803602Z\",\n    \"rawTimestampNanos\" : \"2023-02-20T14:28:34.803629Z\",\n    \"computationTimeMillis\" : \"2023-02-21T16:54:34.803656Z\",\n    \"value\" : [ {\n      \"intVal\" : 1702697533,\n      \"fpVal\" : 1.5159648598691112E308,\n      \"stringVal\" : \"is8noojbhy81k4sh1hqv73xfiij2u7auxl13ugww48uz8c10up9dbhya8a3o9obudqbcyhv01ymenro3rm7yvea03jf6pd9xbgaio\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5da370cf-0b12-3661-a8fa-6450ef03814f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "47670a0a-f441-3870-bcf8-5dfd3abf263d",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/6aul/dataSources/0qhk",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Boyce Gorczany\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/803687\",\n    \"name\" : \"Dr. Erasmo Fisher\",\n    \"packageName\" : \"Karren Beer\",\n    \"version\" : \"4pxvz98g2fw5li3hotufunmhf30yg2rwezf1i9h3ka2wis6nzwrhm23gpcryc8kzg5c80qisfdslyvn0lx9re1f4fb0i6auvmf818s1jou1dep7t9pzosy9\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Terri McDermott\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Fidelia Ebert\"\n  },\n  \"name\" : \"Despina O'Keefe\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureAami\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"0g0z\",\n    \"model\" : \"flmo1703a27rdgssdrpc2vcm9o\",\n    \"type\" : \"tablet\",\n    \"version\" : \"zc16jd9wngeruwbjm77lfnabww56byr6szq6av12sg46axmk8rkx5oycq43o7pq1b63jjgx70q6j2fulu6ys0ykzu0vyo\",\n    \"manufacturer\" : \"vlscjt04hzi3cq7h1n08pxgfvem9d6nuasobxgtthdyc6cbl820hyi6jdju5wtj65cezirisqja8zn9x90tu0l4qbg\"\n  },\n  \"dataStreamId\" : \"t11f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47670a0a-f441-3870-bcf8-5dfd3abf263d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "3502a0bf-2355-3c4d-8458-f8d9a0fc1a01",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/am8q/dataSources/o9yd",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Raisa Hermiston Jr.\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/172569\",\n    \"name\" : \"Kendal Muller\",\n    \"packageName\" : \"Karine Rogahn PhD\",\n    \"version\" : \"it6rzacc2ab3vknpgau2bichzmh9telqy3y1nalmq2fk5fu0sk1wrisz6ylde9lo12cj59p8pw0xdr1\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Jessie Koss\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Heidy White PhD\"\n  },\n  \"name\" : \"Jolie Pfeffer\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureEsh2002\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"dy2v\",\n    \"model\" : \"jjjsrtrg\",\n    \"type\" : \"unknown\",\n    \"version\" : \"ql131t4feodvxxhbogltb0muqe4ci0bg60ep2c7i3s03bn83o9fb09kvfvd7gflcjqy5w16c5wcm6vzsecepves9ffgvque7b3pa640bhsgsfunumpr2hj\",\n    \"manufacturer\" : \"fbyvds6neay3h\"\n  },\n  \"dataStreamId\" : \"1u6o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3502a0bf-2355-3c4d-8458-f8d9a0fc1a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "ea825a6c-1556-3cc2-b149-1ad9447ca5fa",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/46pc/dataSources/2qp7",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Gale Hamill DVM\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/861802\",\n    \"name\" : \"Mr. Ozzie Satterfield\",\n    \"packageName\" : \"Jong Morar\",\n    \"version\" : \"ekovrp2lpzqh2le5mkpo6ru1phs29b\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"string\",\n      \"name\" : \"Ms. Talia Buckridge\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Porfirio Maggio MD\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Georgiana Bergstrom\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Bertram Leffler\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Tosha Hackett\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Phillip Collier III\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Ching Haley\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Eufemia Koch\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Bridget Ferry\"\n  },\n  \"name\" : \"Rafael Weissnat DDS\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsAA\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureBhsBB\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"91jr\",\n    \"model\" : \"okflxa6qxktjno85ims6kk03gojehg4q314rbyme9kkdm4bbs5535h6vrrbqu8t3ljj9whvr8py3k1487gie24k4bwnwyjzl5mventanahabh7sll1y74utkkggda4e1f7kr9hzpf04mqxj80i6p64qhvmx1hxqe7p7r1sl5bw9fr1dfezlpm9vh2viv08vkd93\",\n    \"type\" : \"scale\",\n    \"version\" : \"2n2e12y88y32zax469xx9bfmb56jubrawlsnutplwppxpsglluavqh452gjrtjg0mpsckvpmnlbyivi04qqpuhyq4b5z8qowqqy4rxtf3nb613fblxjyum857m0bs894ilas3qvtlkagigwjpn0\",\n    \"manufacturer\" : \"lq6ccwnyotk30ufc8w01yvu0v7lj5eaf1mj4tllika6tplplj42wq6cygetsmykd\"\n  },\n  \"dataStreamId\" : \"7nz8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea825a6c-1556-3cc2-b149-1ad9447ca5fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "833aa063-055c-349f-8e48-c3c08463bca9",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/2z6z/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Miss Karissa Kihn\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/862255\",\n    \"name\" : \"Kala Farrell\",\n    \"packageName\" : \"Whitney O'Reilly\",\n    \"version\" : \"cgarts818n0mtn1bkgxcudeawdzckwxaolik9k0ltt2nlj94b4qws6xitv194izzep1xlgq6006u7tpvdplr7aku0bbjw4etm1lz94kl737r1409f9btq3ct3j8s29io8tlu28cpw7typ8bqdieeic1fcpkyx187f41ekhvng4o3vhdo89sutmrd9mjrvh0n1gtj\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integer\",\n      \"name\" : \"Russ Ernser Jr.\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Ana Cassin\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Bert Abernathy MD\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Dovie Zulauf\"\n  },\n  \"name\" : \"Margarito Larkin\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"ay19\",\n    \"model\" : \"n2kd44tf1jfjo27n1k1bp5osayd6j9yeqk6ontbsj7rgv032vypi4dqqqyms6itusnmqt91s65184hhwn7yvyhralvcbfdjtfkgzpadkt6g0del7dd7xtteva9b5955p9n9qc21ryut0yaardu4st10pj4v5dyzx4zk95w56bctge9xj3zac5q49mk1fe803u617\",\n    \"type\" : \"chestStrap\",\n    \"version\" : \"qyceku3l73uqfvpwzbr0cxuzusaz33eii1m6ihh1gnfxrjw53y5is93cqtmdalr84l28h7ngrucn3jo1rinwelj9dqf3o42bikjr3gtkwfm7sn1z55c957ga9dc6tt5ymsqf4f2jbsvx2uq0vopm68zzd9qxhb3mrzt1a0svwomu\",\n    \"manufacturer\" : \"3wiibf75ppfptylxe0525co3xm809korf0sxprsbdbjuhu2x19jqtryxzuz4rwaceg3lk05hu6e34v5498lz11ilktjglzb\"\n  },\n  \"dataStreamId\" : \"1y6t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "833aa063-055c-349f-8e48-c3c08463bca9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "810fa14e-2b5d-373a-86fd-48c2a799d7bd",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/0o76/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Marshall Glover\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/090705\",\n      \"name\" : \"Benny Rosenbaum\",\n      \"packageName\" : \"Mildred Cummerata\",\n      \"version\" : \"jqdpd63rxo3l914eu864xxokuhkba906zxnk9gc7q5zvhwtfnezhrcsk84wcaz\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Dr. Arielle Rogahn\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Shanti Fritsch\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Rueben Marks\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Dr. Tuyet Rice\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Nicolas Kub\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Mrs. Hilario Mann\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Spencer McDermott\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Raymon Medhurst\"\n    },\n    \"name\" : \"Lester Marquardt\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2010\", \"dataQualityUnknown\", \"dataQualityUnknown\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureEsh2002\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"2da8\",\n      \"model\" : \"i9lw639al4gvnn8iwzza44knunla0wvqeeb7ha2kkik2zh7ztrr1gramv96642qd7jjvs6rexpcqcpf5p6guf4ng5it7\",\n      \"type\" : \"headMounted\",\n      \"version\" : \"jhmm2qimj6sls9ui3rubuiaf4icuv2dxarwlll2zv27w40gbxjls2wvma5s5ao6kok59u78bgu0jbjp009yd57ksfij4qtdw93j3tkd96\",\n      \"manufacturer\" : \"gjzo79rkgi5brm69wl8rusabk5mf4bs9u4hkrh62p04dkuh5ae8729t4iw1ad1a4lo0eu93zvfw6pav9y2zwshivxvbnvuuuw83f0dgguu9kicmxxrk6wakvzsl2gipms3of115wo95dn7ehjd9lga8kkrom61qkd2plye9rzer\"\n    },\n    \"dataStreamId\" : \"9166\"\n  }, {\n    \"dataStreamName\" : \"Altha Streich IV\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/193738\",\n      \"name\" : \"Amparo Dare\",\n      \"packageName\" : \"Barton Vandervort\",\n      \"version\" : \"3a0n61n4rga7aiazp3hzlizyqczxhaoe42qcfry83dxfkp0v8fy8i7vzoxqli8tbhi4jhik3ut3d\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Mrs. China Daniel\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Sung Weissnat\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Xavier Schultz\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Joaquin Veum\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Colby Schmidt\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Claudio Ryan\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Raven Prohaska\"\n    },\n    \"name\" : \"Youlanda Funk\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureEsh2010\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"9d4w\",\n      \"model\" : \"ezg84hyng6cez4arpt0d\",\n      \"type\" : \"smartDisplay\",\n      \"version\" : \"se0p4thrytws83qc1wkemwkf2ub2s4s4hij42tcvfr3qx6u5jww\",\n      \"manufacturer\" : \"5axvpi8yhzcxwuenvn9lejr2njqcjo7pfgkm4r\"\n    },\n    \"dataStreamId\" : \"jad9\"\n  }, {\n    \"dataStreamName\" : \"Holly D'Amore\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/933334\",\n      \"name\" : \"Evangeline Hegmann\",\n      \"packageName\" : \"Un Langworth\",\n      \"version\" : \"05vp38wakwqr6uxp4nytg4o8vrtqj52eozvyd9gc3iptn75dgjvxgk2871alrk0a4fe2x\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatList\",\n        \"name\" : \"Mrs. Quincy Nicolas\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Garth Olson\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Reginald Crona\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Frederick Hagenes\"\n    },\n    \"name\" : \"Freeman Simonis Jr.\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAB\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"s8ta\",\n      \"model\" : \"3r7yukw6dkqd4t15ww4z0pxafnl099h5tdjqeg6dij9l0p80a9ctzmxbo2n0m1yhcp07awofxk4176027lqxm\",\n      \"type\" : \"scale\",\n      \"version\" : \"8ndqrnn3ea2mz6vg8n9b21kj8d5l21h02e9atgdnk91tbanf1rsguynl14k7pcvsi9bc2yuja93arxfcmdugcz2tgee9rltnlbmslko13ln3vkmjnlstjtpos6ytifd6mqsekrhrw7fjo7oveb2\",\n      \"manufacturer\" : \"a5zi37h6ni3166kmhw012dovnc9mtvta2bnv41vzp67n3al2hyc2xbbcurpu53rc72x952ks5xdnfndbo3dmrwmus3a3hqfdx3\"\n    },\n    \"dataStreamId\" : \"r349\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "810fa14e-2b5d-373a-86fd-48c2a799d7bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}