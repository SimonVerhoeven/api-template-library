{
  "mappings" : [ {
    "id" : "e8608d41-c57b-44a3-a14a-c56268cf70d2",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/2272/sessions/nb30",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2022-12-23T14:35:04.443379Z\",\n  \"endTimeMillis\" : \"2023-02-05T17:02:04.443406Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/164817\",\n    \"name\" : \"Ms. Demetrius O'Connell\",\n    \"packageName\" : \"Marcos Senger\",\n    \"version\" : \"ix4w7qv1i4dyw72ryv9t76fz35745tdidt8v9cdwzg6n1enhoi4tlkvtt5in9ceco0rllqh7cdrc02e8fjhy7w4h2gjkhely9c2ynp39qjlua814wq75hjpr52uv60dxq787alnrrm\"\n  },\n  \"startTimeMillis\" : \"2022-07-10T14:47:04.443594Z\",\n  \"name\" : \"Ms. Jimmie Crona\",\n  \"description\" : \"Eaque nihil exercitationem sapiente. Consequatur commodi delectus adipisci. Enim temporibus maiores aut at placeat excepturi. Nostrum quo iste iste. Ducimus nobis dolores quas et sed.\",\n  \"modifiedTimeMillis\" : \"2022-06-04T17:03:04.443703Z\",\n  \"id\" : \"542u\",\n  \"activityType\" : 1182792782\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8608d41-c57b-44a3-a14a-c56268cf70d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.44399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff13b051-cdc3-4245-b65f-03b1c754dee4",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/754n/sessions/pqwj",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ff13b051-cdc3-4245-b65f-03b1c754dee4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.443345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    }
  }, {
    "id" : "b3716277-50be-4216-8c5d-000dee0ce8a7",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/e924/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ix87fmwkucf2qcmay6eizze1hru\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2022-12-22T16:55:04.438607Z\",\n    \"endTimeMillis\" : \"2022-04-20T16:13:04.438635Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/567495\",\n      \"name\" : \"Rossana Gerhold\",\n      \"packageName\" : \"Mrs. Hal Douglas\",\n      \"version\" : \"rl18qvhp85lt42waktv8m3ipdviifirv0bnht3sdejza9ymohjhr746epgetxwgrdgtb1ayl84b4pus32ky4fy7amf3vnjkagz5ce83uegcfqq67g29yu054hqyztdhgx588s\"\n    },\n    \"startTimeMillis\" : \"2023-01-30T14:16:04.438836Z\",\n    \"name\" : \"Tisa Mante\",\n    \"description\" : \"Voluptas blanditiis recusandae quia. Beatae id labore. Numquam ut praesentium animi delectus aut. Maxime qui maxime vitae nulla. A nostrum natus molestiae sit repellat deserunt.\",\n    \"modifiedTimeMillis\" : \"2022-05-23T15:01:04.438949Z\",\n    \"id\" : \"6709\",\n    \"activityType\" : 21951496\n  }, {\n    \"activeTimeMillis\" : \"2023-01-29T15:31:04.439055Z\",\n    \"endTimeMillis\" : \"2022-08-06T17:15:04.439082Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/903203\",\n      \"name\" : \"Princess Denesik\",\n      \"packageName\" : \"Leonardo Aufderhar\",\n      \"version\" : \"na9pgk0z7ypjtro88gadp6n9j9a7qw6h12fftlmomkuwo9bkkpxena21o8xmu36q4tspwrirv3f6aeer8f024tt1ud5orkdhcjbf5oit2bwdjappi7szu42tg8r19xl8qu5tbrhpw3wtz207gxdi3owqa6r9v\"\n    },\n    \"startTimeMillis\" : \"2022-04-03T16:32:04.439276Z\",\n    \"name\" : \"Ms. Orval Terry\",\n    \"description\" : \"Impedit vitae similique facilis quisquam necessitatibus rerum. Aut voluptatem iusto perspiciatis voluptates et labore. Quo velit eos et possimus neque.\",\n    \"modifiedTimeMillis\" : \"2022-11-23T17:27:04.439386Z\",\n    \"id\" : \"3p9r\",\n    \"activityType\" : 892957235\n  }, {\n    \"activeTimeMillis\" : \"2022-08-31T17:17:04.439492Z\",\n    \"endTimeMillis\" : \"2022-08-04T14:28:04.439523Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/639003\",\n      \"name\" : \"Johnny Hauck\",\n      \"packageName\" : \"Joshua Reinger\",\n      \"version\" : \"1fxhnzw2p1wdkxr8rwukp3hddg54euq680xzrxljbh5s50imn8zwu4zvpj2ieclc0c0zyia6287ym79i3smh\"\n    },\n    \"startTimeMillis\" : \"2022-12-23T13:53:04.439712Z\",\n    \"name\" : \"Derrick O'Conner\",\n    \"description\" : \"Blanditiis quae ab quo aut. Illo explicabo aliquam asperiores. Molestiae ex dolores. Ut facilis sapiente expedita. Consequuntur fugit et ea.\",\n    \"modifiedTimeMillis\" : \"2023-01-28T17:27:04.43982Z\",\n    \"id\" : \"4r85\",\n    \"activityType\" : 1007306799\n  }, {\n    \"activeTimeMillis\" : \"2022-09-22T15:25:04.439929Z\",\n    \"endTimeMillis\" : \"2022-06-22T16:38:04.439957Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/286802\",\n      \"name\" : \"Lavette Torp\",\n      \"packageName\" : \"Usha Armstrong\",\n      \"version\" : \"rfeby3chnim74jty6fh50yq3hu8e8duead30ffkzhs5wq8i68t6cs0ssxofqfssd48u3606j070k3uyh12kjptikkdfesbnqbf7zpdcdgcqa5fgrz47iu1v9iaxjnymnj6cd648tmilf6h58ht2klbf1ga0hk1gpv\"\n    },\n    \"startTimeMillis\" : \"2022-07-26T16:11:04.440146Z\",\n    \"name\" : \"Mr. Hyman Wiza\",\n    \"description\" : \"Iure et quis vero. Nihil corrupti nostrum in. Nisi id cupiditate. Aut at voluptatum numquam impedit unde est.\",\n    \"modifiedTimeMillis\" : \"2022-04-28T17:26:04.440253Z\",\n    \"id\" : \"638e\",\n    \"activityType\" : 1349227672\n  }, {\n    \"activeTimeMillis\" : \"2022-08-15T16:12:04.440359Z\",\n    \"endTimeMillis\" : \"2022-11-28T15:14:04.440387Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/328292\",\n      \"name\" : \"Carletta Hettinger\",\n      \"packageName\" : \"Tanner McClure I\",\n      \"version\" : \"f7r4go\"\n    },\n    \"startTimeMillis\" : \"2022-12-09T14:23:04.440578Z\",\n    \"name\" : \"Willie Reilly\",\n    \"description\" : \"Tempore porro dolor quasi. Beatae ad est vitae accusantium assumenda quaerat. Modi est alias iusto reiciendis qui vel culpa.\",\n    \"modifiedTimeMillis\" : \"2022-12-29T16:15:04.440682Z\",\n    \"id\" : \"c265\",\n    \"activityType\" : 812908978\n  }, {\n    \"activeTimeMillis\" : \"2022-03-13T15:19:04.440782Z\",\n    \"endTimeMillis\" : \"2022-03-25T15:42:04.440809Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/003362\",\n      \"name\" : \"Celina Olson Sr.\",\n      \"packageName\" : \"Alonzo Mann\",\n      \"version\" : \"zqtw2h6nao1e245pz2sjgptcz2g9d2endxl99ohg0kf14zc64wef66yvgvlj0vqqeolsqgin8i4i5r65jpo9ouk6sqr1lziv07j0n5dfx55mv8hoxb7k850yvtnow7mxzaspevsec51d0ozilkz\"\n    },\n    \"startTimeMillis\" : \"2022-09-07T13:32:04.441003Z\",\n    \"name\" : \"Vito Bradtke\",\n    \"description\" : \"Ab autem et. Officia quia sed qui quae aut. Ab voluptas dolorum. Quis et officiis voluptates molestiae ea soluta. Facere possimus quis delectus nesciunt possimus et consequatur.\",\n    \"modifiedTimeMillis\" : \"2022-03-27T14:35:04.441123Z\",\n    \"id\" : \"ms9y\",\n    \"activityType\" : 512014854\n  } ],\n  \"hasMoreData\" : false,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2023-03-01T14:52:04.441248Z\",\n    \"endTimeMillis\" : \"2022-05-12T15:31:04.441277Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/182753\",\n      \"name\" : \"Leighann Huels\",\n      \"packageName\" : \"Robbie Collier\",\n      \"version\" : \"az04vtx07z5r6ywa6c1pwdgc34f30cbcu84n21b9nvt7zx0xi7b\"\n    },\n    \"startTimeMillis\" : \"2022-11-22T15:58:04.441462Z\",\n    \"name\" : \"Lane Hills\",\n    \"description\" : \"Maiores voluptatem in quod cum quia esse non. Non vel numquam illo non et at. Excepturi est repudiandae qui nulla ab blanditiis doloribus. Harum dolorem sed.\",\n    \"modifiedTimeMillis\" : \"2022-03-09T14:15:04.44158Z\",\n    \"id\" : \"d7g8\",\n    \"activityType\" : 130305387\n  }, {\n    \"activeTimeMillis\" : \"2022-11-03T16:59:04.441684Z\",\n    \"endTimeMillis\" : \"2022-05-12T15:15:04.441713Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/768494\",\n      \"name\" : \"Nohemi Hilpert\",\n      \"packageName\" : \"Bridgett Cole\",\n      \"version\" : \"dgl2v4yvuxi5i3p6dwxozl1wiwcv\"\n    },\n    \"startTimeMillis\" : \"2022-08-19T16:54:04.441898Z\",\n    \"name\" : \"Ms. Myung Wolff\",\n    \"description\" : \"Eum dolor rerum accusamus. Molestiae assumenda magnam necessitatibus sit odio facilis quis. Quis possimus dolorem. Ab ducimus nulla deserunt rem quo pariatur amet. Qui veniam nihil perspiciatis at et \",\n    \"modifiedTimeMillis\" : \"2022-04-23T16:17:04.442018Z\",\n    \"id\" : \"3521\",\n    \"activityType\" : 1817037303\n  }, {\n    \"activeTimeMillis\" : \"2022-12-13T15:38:04.442121Z\",\n    \"endTimeMillis\" : \"2022-11-15T13:38:04.442151Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/094270\",\n      \"name\" : \"Rina Auer\",\n      \"packageName\" : \"Keeley Hills\",\n      \"version\" : \"rh2t7qj2zg0lus30pu1ashcz0sgvheobom0hm54aue41dq2q9kssvvz0lib045i13sz\"\n    },\n    \"startTimeMillis\" : \"2023-02-15T16:31:04.442357Z\",\n    \"name\" : \"Ms. Von Rutherford\",\n    \"description\" : \"Ut in rem. Vitae ut fugiat nobis et voluptates asperiores ullam. Amet quia laborum harum necessitatibus ipsum.\",\n    \"modifiedTimeMillis\" : \"2022-06-14T16:00:04.442468Z\",\n    \"id\" : \"4td5\",\n    \"activityType\" : 1771230718\n  }, {\n    \"activeTimeMillis\" : \"2023-01-04T14:28:04.442575Z\",\n    \"endTimeMillis\" : \"2022-03-30T15:17:04.442604Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/413588\",\n      \"name\" : \"Virginia Rice Sr.\",\n      \"packageName\" : \"Shelby Bernier PhD\",\n      \"version\" : \"ztblbx9geofhornvv2jfazodpcsx6hz485cmwvecds6z4w4wlj977374us09cvii1go2e2m3mdwy0t98j535rb2c4n5kun2akmu228\"\n    },\n    \"startTimeMillis\" : \"2023-02-13T13:35:04.442798Z\",\n    \"name\" : \"Norah Collier\",\n    \"description\" : \"Ut aspernatur facilis. Doloribus totam nisi asperiores qui. Sed aut commodi corporis beatae magnam voluptatem. Repellat exercitationem aut officia.\",\n    \"modifiedTimeMillis\" : \"2022-12-19T15:18:04.442908Z\",\n    \"id\" : \"7208\",\n    \"activityType\" : 1855673359\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3716277-50be-4216-8c5d-000dee0ce8a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.443171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a3e6985a-1dca-4331-8099-5eda25a13ade",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/8b9h/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2022-06-13T16:12:04.433297Z\",\n    \"activity\" : 2031520664,\n    \"startTimeMillis\" : \"2022-10-16T14:57:04.433338Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-05-15T16:33:04.433379Z\",\n      \"endTimeMillis\" : \"2022-04-03T16:24:04.433412Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/114219\",\n        \"name\" : \"Arden Quitzon Jr.\",\n        \"packageName\" : \"Augustine Walker\",\n        \"version\" : \"vgnfckq3t0kyyngf\"\n      },\n      \"startTimeMillis\" : \"2022-10-04T15:03:04.433639Z\",\n      \"name\" : \"Therese Bernhard\",\n      \"description\" : \"Repellendus eum a vitae. Provident aut impedit officiis dolore natus officia voluptas. Beatae praesentium quae rerum possimus dolor nobis. Magni corporis eligendi quis iusto. Molestiae repudiandae ips\",\n      \"modifiedTimeMillis\" : \"2022-11-04T15:39:04.433777Z\",\n      \"id\" : \"9599\",\n      \"activityType\" : 1789349492\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"sxzm\",\n      \"maxEndTimeNs\" : \"2023-01-12T17:14:04.433982Z\",\n      \"minStartTimeNs\" : \"2022-08-21T14:10:04.434013Z\",\n      \"nextPageToken\" : \"mr6tz4e9km73fnerei0cwprdqwihd55i8fyfxthir7olvlatqd95vvs528i2kzfjqp8zeplq0w72j1xufjeubmk6dhvih3f3gtoq1\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"e9lp\",\n      \"maxEndTimeNs\" : \"2022-04-26T15:28:04.434133Z\",\n      \"minStartTimeNs\" : \"2023-02-09T15:48:04.434162Z\",\n      \"nextPageToken\" : \"amg17mpaxyzy8up29hdjfnipmck0lvr5b6rxmlm6pyrm1zbqbnjd4w6p67trjjelfrhu7edv1kv5ozwg612l11mkj2d503xeau53doe5ptax59nkaye81u4mqy\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"k23n\",\n      \"maxEndTimeNs\" : \"2022-10-28T14:48:04.434281Z\",\n      \"minStartTimeNs\" : \"2023-02-06T13:55:04.434312Z\",\n      \"nextPageToken\" : \"xctwhfivkybipriau0do10dcaw58cu0tedvaevakh8b2egkb97epww60xhk5nuwxzy5zk0tpiiip0k35hf8e50lvmhyzu3bvonltmv\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"81g3\",\n      \"maxEndTimeNs\" : \"2023-01-13T16:15:04.434438Z\",\n      \"minStartTimeNs\" : \"2022-12-17T17:14:04.434472Z\",\n      \"nextPageToken\" : \"7qq0k81i367egquzwxup0hfvvunukf8v8lso5vuvhk6kfw7y2b8m9cw1qtqjzj6g9y7vrr6uorbivja0vhy81z2etvuzb3sny2wxitry0w7sil8cmo33rggu3ab8dc718lzuxveol2yimdpuv8ov55x2xvooc8zwm6vm2zjfcnrs0kuufo8kpdnmq569rlh3gi0tfc\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-09-23T13:39:04.434545Z\",\n    \"activity\" : 1261910495,\n    \"startTimeMillis\" : \"2022-11-16T15:40:04.434583Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-11-20T15:22:04.434619Z\",\n      \"endTimeMillis\" : \"2022-05-30T13:37:04.43465Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/589355\",\n        \"name\" : \"Lyman Kassulke\",\n        \"packageName\" : \"Mason Kling\",\n        \"version\" : \"sk7skkgupab61u2ps3hc2khd35i1io5f0t3t6wdpl6ofrryya68oz6wk5a3nk9onhsjhqxsx8okkl99etljuoe8jxv14rhow9sx511lcmh9aafflzo1pu8zei88knzw\"\n      },\n      \"startTimeMillis\" : \"2023-01-11T16:28:04.434856Z\",\n      \"name\" : \"Ezekiel Skiles V\",\n      \"description\" : \"Fuga voluptatibus voluptatem repudiandae nemo similique voluptatem ullam. Soluta nostrum minus sunt. Perferendis quis qui molestiae fuga eius maiores. Eveniet tempora maiores totam ad repellendus.\",\n      \"modifiedTimeMillis\" : \"2022-11-01T16:13:04.434983Z\",\n      \"id\" : \"s2n6\",\n      \"activityType\" : 1699705476\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"3m59\",\n      \"maxEndTimeNs\" : \"2022-03-27T17:07:04.435175Z\",\n      \"minStartTimeNs\" : \"2022-05-03T15:08:04.435206Z\",\n      \"nextPageToken\" : \"cml5bze2m910tcykt13p19bx0knf2vn7fa2e7l51yvb1vwffacumphsiludp9q1dfk9dqls818vgi3edritbt9ae7kgb4e544ch0pj72m5yy5116q1rmcq7e4rfm9wckn6e58kmi0si2l0d\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"od2l\",\n      \"maxEndTimeNs\" : \"2022-10-11T17:13:04.435402Z\",\n      \"minStartTimeNs\" : \"2022-05-15T14:12:04.435436Z\",\n      \"nextPageToken\" : \"4w024idwviv0zafp6gv481a99y6kwm0vqbw42c93tqdebmgfqtm0rlyri5oc2xzrk4aamxy40xu29j23n4sjhiw8vf4c6al3d9mu037mfux7zl5s57ys8sp8qygf6y3fxhvt0k4t6qfx7olgc1cbmxwmbxcyk0brxwmull\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"a6r0\",\n      \"maxEndTimeNs\" : \"2022-04-11T16:46:04.435571Z\",\n      \"minStartTimeNs\" : \"2022-03-30T16:11:04.435602Z\",\n      \"nextPageToken\" : \"r5v1y194bfhoyt2pwjkk17rmwdp7t9uo9wtl9gcqivp55vj2kborbqwriu8t0g2t17d75zl9s1z92dg7cvk5h629kfwbvas45wu7yqtgbpx7pj4uqe8jz0t52osyb3fbeae4tgn244y7ff3e3cs4kc4fvdadfac\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"ar5q\",\n      \"maxEndTimeNs\" : \"2022-11-29T17:09:04.435734Z\",\n      \"minStartTimeNs\" : \"2022-11-20T16:52:04.435767Z\",\n      \"nextPageToken\" : \"zyjee274ewazi1ly789ddivr6rkc4cr1zt8a8vqexg9ecq0cw15mzs3sycjjv9wctqpp30szabcuxt4h7zjdcp5al2sl\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"ns3n\",\n      \"maxEndTimeNs\" : \"2022-04-30T13:57:04.435899Z\",\n      \"minStartTimeNs\" : \"2022-11-24T14:15:04.435929Z\",\n      \"nextPageToken\" : \"6auprus809c3019apeyc2e6504y9twhh5atpb5m3e6tq1dj7k\",\n      \"point\" : [ { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-12-03T14:32:04.435997Z\",\n    \"activity\" : 126015031,\n    \"startTimeMillis\" : \"2022-03-14T15:57:04.436037Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-09-02T16:37:04.436075Z\",\n      \"endTimeMillis\" : \"2022-12-03T17:18:04.436108Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/722783\",\n        \"name\" : \"Dr. Lonnie Fritsch\",\n        \"packageName\" : \"Delmer Lueilwitz PhD\",\n        \"version\" : \"7yciv93w6gkkl1vfo1okzp97eouwp3fp1ycvufjwxxk7rwpb5fuhwfnxkulelkzj9slate0z0qac6klhb5rvm7gft2n8zs01hbz601ersl1wlt74qjeoyq4aw54f0ncb5k1d6cinsayoxjfoy5wd0qjgayq8wy5jf7vm8va8sjga2a96w6ca0hahdzmpvfq8pgzsj\"\n      },\n      \"startTimeMillis\" : \"2022-08-02T16:00:04.436339Z\",\n      \"name\" : \"Dr. Elisabeth Hintz\",\n      \"description\" : \"Quas voluptates unde. Aspernatur ratione recusandae quam consequatur. Fugit aperiam ullam excepturi ut et accusamus saepe. Sunt harum magni placeat voluptatem fuga.\",\n      \"modifiedTimeMillis\" : \"2023-02-06T14:40:04.436462Z\",\n      \"id\" : \"6hij\",\n      \"activityType\" : 197688559\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"oukl\",\n      \"maxEndTimeNs\" : \"2023-01-08T15:23:04.436663Z\",\n      \"minStartTimeNs\" : \"2022-03-24T14:58:04.436692Z\",\n      \"nextPageToken\" : \"krqngbbw7b8h9mebbjcvzz8j88bmvbnlb7kyk0nryb4fix2dtxvadsami4p39dem2pu6v2sflxd0fm8i97hp4cjojxq4vqhrwwt0z0nnsirzpg4ratqrldo8lnvbmqsyt148q2i4nirqorv2c\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"484r\",\n      \"maxEndTimeNs\" : \"2023-02-08T16:16:04.436809Z\",\n      \"minStartTimeNs\" : \"2022-09-23T13:49:04.436839Z\",\n      \"nextPageToken\" : \"7vo8ttknq61usv4ybpy8qg548xbq1qzegrf0axbnty4jvkky5alwgl9zbtiyzkkitk0by0i61pj0dvpbt05gz64ol16ozb\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"c557\",\n      \"maxEndTimeNs\" : \"2023-02-20T16:14:04.436969Z\",\n      \"minStartTimeNs\" : \"2022-04-14T15:29:04.437Z\",\n      \"nextPageToken\" : \"5bx3dh04rtt2mid3rb8n9fi6o1s7fqzhiq2g3nvyb8vg1zfdjeohhg\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"mk1e\",\n      \"maxEndTimeNs\" : \"2022-06-15T14:03:04.437131Z\",\n      \"minStartTimeNs\" : \"2022-03-25T13:34:04.43716Z\",\n      \"nextPageToken\" : \"xoy1dl5304mot6ullo7cxuhfueleac4dw04815mszth65f3n8wtbvsmbp5kjpyrcsd3oz558cbnzup1puwrxhv494c9hvtgj1zhaaxaw78wqvsl0a25vqg65rjn3ysigz3lly82073sc97u9iw8cjflau\",\n      \"point\" : [ { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-02-22T13:30:04.437217Z\",\n    \"activity\" : 502983879,\n    \"startTimeMillis\" : \"2023-02-07T17:18:04.43725Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-09-10T17:16:04.437284Z\",\n      \"endTimeMillis\" : \"2022-07-29T14:19:04.437317Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/724997\",\n        \"name\" : \"Fidel Brekke\",\n        \"packageName\" : \"Mrs. Jerry Lakin\",\n        \"version\" : \"7p6838wbhhp6qwphn3zqwk5vfn2tab0aps7i1y4hsdz8ihzbveroclebp1gqol90j3g1838gia7qwm6vqehn4niz3jihzllajqdk5btd51nf16w17duy3ip5tw7ajg15sya1fy6njpd4d741cj5b6euv7g7s7whfte393gtxe3g5aotfovunoa2k502w8ycykb90os8x\"\n      },\n      \"startTimeMillis\" : \"2022-07-19T17:26:04.437523Z\",\n      \"name\" : \"Joetta Gutkowski\",\n      \"description\" : \"Error perspiciatis iusto temporibus ipsam beatae incidunt. Est sunt assumenda et ipsam in. Fugit illo ducimus ut autem.\",\n      \"modifiedTimeMillis\" : \"2022-03-27T16:57:04.437631Z\",\n      \"id\" : \"10r4\",\n      \"activityType\" : 362339313\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"6f7x\",\n      \"maxEndTimeNs\" : \"2022-04-06T14:16:04.437818Z\",\n      \"minStartTimeNs\" : \"2022-10-20T15:16:04.437848Z\",\n      \"nextPageToken\" : \"y1up79f1rxu70q6jjd0nbd3upobch1nxapdiqy8di597t4r59uxdq437aocchfmqm49i1caf1vt4upi2zwkclyco0bkvsrh00qgdr8hbbc26fwyuy8toik90g0b0dnwmx4kwwywh\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"gp8u\",\n      \"maxEndTimeNs\" : \"2022-05-15T17:05:04.437966Z\",\n      \"minStartTimeNs\" : \"2022-11-18T15:54:04.437995Z\",\n      \"nextPageToken\" : \"mbod5xak7bsys24hens1b5g7aul6jbnzhhgailyxadylgtcsf8psgmzvyjfganjq5eft10bxzhoj0jtrlsd8yo8s0s2wc0rosoj3fl1pcoeaj4tfqtv9lxvztq2eivarz0isnpggemucu194ptgs7s631hjq23ley5bgtejaln5zklgl9x\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"9p9v\",\n      \"maxEndTimeNs\" : \"2022-09-17T15:50:04.438114Z\",\n      \"minStartTimeNs\" : \"2022-06-15T15:58:04.438143Z\",\n      \"nextPageToken\" : \"rstzc9b0s5qaqgxu017me27s5efiuoax9fsks1yx4yww0d0udqsyjmk2uo9bzviemu6v5gi2\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"w628\",\n      \"maxEndTimeNs\" : \"2022-05-17T17:22:04.43827Z\",\n      \"minStartTimeNs\" : \"2023-01-02T16:07:04.4383Z\",\n      \"nextPageToken\" : \"qoxr5v9tstvjxd6zyyfekbvu42lczjrx3s7wdrrr2oevjla94lzrqd293abebshf6e7m1w\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3e6985a-1dca-4331-8099-5eda25a13ade",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.438522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8bc3b49b-1ff2-4b7e-9986-3cafc1ba1131",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/bao6/dataSources/iedu/datasets/t587",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"o18j\",\n  \"maxEndTimeNs\" : \"2022-04-22T13:35:04.432379Z\",\n  \"minStartTimeNs\" : \"2023-02-02T14:00:04.432407Z\",\n  \"nextPageToken\" : \"aulbocykzsiugtifm9qefypytjjk2fec17b0ezqt6vmt981axviwsrpg2mzo81fk1d7crrf2mt1v630xi7jvmgfkh\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"4m75\",\n    \"endTimeNanos\" : \"2022-11-09T14:07:04.432518Z\",\n    \"dataTypeName\" : \"Chante Brakus PhD\",\n    \"startTimeNanos\" : \"2022-08-20T13:51:04.432591Z\",\n    \"modifiedTimeMillis\" : \"2022-12-02T13:44:04.432619Z\",\n    \"rawTimestampNanos\" : \"2022-04-15T15:58:04.432649Z\",\n    \"computationTimeMillis\" : \"2023-02-11T15:44:04.43268Z\",\n    \"value\" : [ {\n      \"intVal\" : 1552269191,\n      \"fpVal\" : 1.0504238294330891E308,\n      \"stringVal\" : \"ke5bhyv4ke8vcyhk2ylqn6gzriu6gun83zrxlx703pw8wnkyh1j180f0gb86klvxqxuwoyqovdh2larz5rg5dh6d80em\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1770607635,\n      \"fpVal\" : 1.1674699535295249E307,\n      \"stringVal\" : \"jbo5eqimnmmhe1e928pfhzjr2r8xi6hpzxgkvhzndro7r9sclzig547fxjlgl91jazqfclsg6e1pakbszhnuw06ikxv2r4cddp7mhil1amxwld81m9wadnjn986r14fq7sdg6w37\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 80638336,\n      \"fpVal\" : 4.339398661269626E306,\n      \"stringVal\" : \"q19d1k6ypx4k9h97y\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 224938921,\n      \"fpVal\" : 5.448606235239214E306,\n      \"stringVal\" : \"jv44\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 32067855,\n      \"fpVal\" : 1.7405778448809461E308,\n      \"stringVal\" : \"qn1ptj90gnwyj9ehxt097iyjptb13d81zen1r72uvy5ewr1oy2juw759z08yi40a920kw2pqstfdpsjnrm8kfcp50igww8pcxbm2muvajpdkkxoqzmn68wd6q52w41v1a6f2jbmxx4sevfotq5z1uk549tjacf609ungcz\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 824549036,\n      \"fpVal\" : 1.1712189454709584E308,\n      \"stringVal\" : \"n1jafx0o18fw19igrp4q9n4bwcwskkx0suh3mz2x1ryo5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 5025630,\n      \"fpVal\" : 8.896399128300076E307,\n      \"stringVal\" : \"pdo72d7yp48u21r4jv9be3s9shs7x8jy19cpk4dnw5i9duuh2ydmuz70jtt1obyd3rt3j92cq6759jprd587wrb1hfu4jfij8c38n22mzu86jf4mwddp21dc76a2l99cjft0wtqjw10v7ko6kk1d3rrxffqn452ososg5joh8z98983r8gc2ixf0gktammlrwg0g0nq\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1957844948,\n      \"fpVal\" : 1.6537521034239331E308,\n      \"stringVal\" : \"jdy4yika29g2alf4zr92tsxomh9xhuyghj4xdd2uwykil1qq5ly9e4vlkn\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bc3b49b-1ff2-4b7e-9986-3cafc1ba1131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.43324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4b94423b-812f-47ec-9691-46bfdfe752f1",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/6053/dataSources/1w4s/datasets/nt2m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"u09u\",\n  \"maxEndTimeNs\" : \"2022-10-31T16:32:04.430191Z\",\n  \"minStartTimeNs\" : \"2022-07-06T15:39:04.430225Z\",\n  \"nextPageToken\" : \"niqpjtzs3kjvuj3pn8mze388wroe7a8yks0cnpsq097b9io3jx0etxiidezjy\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"t0wb\",\n    \"endTimeNanos\" : \"2023-01-31T13:33:04.430343Z\",\n    \"dataTypeName\" : \"Alejandrina Cartwright\",\n    \"startTimeNanos\" : \"2023-01-05T14:09:04.430419Z\",\n    \"modifiedTimeMillis\" : \"2022-11-29T17:25:04.43045Z\",\n    \"rawTimestampNanos\" : \"2022-09-20T15:59:04.430479Z\",\n    \"computationTimeMillis\" : \"2023-02-14T14:14:04.430511Z\",\n    \"value\" : [ {\n      \"intVal\" : 358895458,\n      \"fpVal\" : 6.448201580335941E307,\n      \"stringVal\" : \"w3dnnp17jyuqyew2l2qczlmcmazthlv9yj0i8a3tdup7ndpm1h2utv69gthemd51k2258tuigo254ro3esbanconto85bfuoqaie2e5asmf3oc58tyv6qqyf1xr2f14tkwhery9ntu7tzd0y3p0zmc6tc6sqj18\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1488791505,\n      \"fpVal\" : 7.774871559262748E307,\n      \"stringVal\" : \"0lehu1mdhqkq3h78e7ksn5dnuu4uh8xcvwq0xsq24vxt3w5tjzcq8au943iig7q873qmefj7uy1wa4apkbvlf4k4fdk9sy01e4wrqq6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 311323068,\n      \"fpVal\" : 6.970077832893419E307,\n      \"stringVal\" : \"6scmdvikx54in71d2rg1d8c9qx5kp9ufarqx8ivmh4slzxol1j47gwluedaotyhh2etn0xhhzpoc52l77y36nusvfjjeytk4vm5riekpfeqqy8jnsr8l5g3rjtj6wuuvtacm9vz25qdw5t3qhj39fooykaufao5qoa8wi6jwt2a9jute4941so8t0j1\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1373979858,\n      \"fpVal\" : 1.6022619323845173E308,\n      \"stringVal\" : \"gvkzmul6yclc5u5dnaoj24bgeecp3qujqb8zhsje1xeel49zolmpv7x3behvvhwcfg01d4hwvc53agioey740041l9btc4lrruqe6dvcedese7ottm7741hltsd8g3hny1681z53xzm3p8vx5o6ivuo1njfpmb3s4pywiy2trc0u6kihlakcp10xnaei37g\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"qkjo\",\n    \"endTimeNanos\" : \"2022-04-04T14:36:04.430767Z\",\n    \"dataTypeName\" : \"Bruno Shanahan\",\n    \"startTimeNanos\" : \"2022-09-04T16:28:04.430843Z\",\n    \"modifiedTimeMillis\" : \"2022-08-01T17:10:04.430874Z\",\n    \"rawTimestampNanos\" : \"2022-11-21T14:49:04.430903Z\",\n    \"computationTimeMillis\" : \"2022-08-29T17:17:04.430934Z\",\n    \"value\" : [ {\n      \"intVal\" : 1128606021,\n      \"fpVal\" : 1.6706632670159592E308,\n      \"stringVal\" : \"wydrz7t5ga97zljln43l92grh0xvowk5p\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1842211230,\n      \"fpVal\" : 5.16237845557319E307,\n      \"stringVal\" : \"nj51np9z464z16crgohp2b6swizbajj2g35pmd4feqrk5tczjdo0cwluj9ppvybml5p\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 216051545,\n      \"fpVal\" : 1.2798248850242065E308,\n      \"stringVal\" : \"pc1sdi1s05ig5aizggjiyxpuknwx15q2401lq9jwl9s2rsthvp49xvnrl2uv\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"ai80\",\n    \"endTimeNanos\" : \"2022-05-26T15:04:04.431155Z\",\n    \"dataTypeName\" : \"Jerry Feil\",\n    \"startTimeNanos\" : \"2022-08-12T16:46:04.43123Z\",\n    \"modifiedTimeMillis\" : \"2022-09-01T14:33:04.43126Z\",\n    \"rawTimestampNanos\" : \"2022-06-26T17:22:04.431289Z\",\n    \"computationTimeMillis\" : \"2023-01-23T17:20:04.431318Z\",\n    \"value\" : [ {\n      \"intVal\" : 1712575570,\n      \"fpVal\" : 5.373299422735426E307,\n      \"stringVal\" : \"45y1urbudpl24s1huqkmzmyk4tpdy6mmyxfccpl16j4wc75366912btvc72s0wee0lxp34uq6v22pl70z0dlbzu3epsdqiu6k7gccprq3chemhlhgqg0wicwyj\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"2457\",\n    \"endTimeNanos\" : \"2022-10-10T17:28:04.431462Z\",\n    \"dataTypeName\" : \"Gaston Nicolas\",\n    \"startTimeNanos\" : \"2022-06-04T16:12:04.431533Z\",\n    \"modifiedTimeMillis\" : \"2022-08-30T15:30:04.431562Z\",\n    \"rawTimestampNanos\" : \"2022-11-01T17:14:04.43159Z\",\n    \"computationTimeMillis\" : \"2022-09-22T16:29:04.43162Z\",\n    \"value\" : [ {\n      \"intVal\" : 1689136816,\n      \"fpVal\" : 8.37034205430762E307,\n      \"stringVal\" : \"4pp7dbif5ugpmrxucl93ceq1jx4gv623hr1qrdtess5ircbvxbul4slxofh7ody5zvvbl50zuwlo91ybhe6qtgx06fyz45l82xi52s695ksy3h95w516w0vjhjjmmeejueu5nmhery157d2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"h75q\",\n    \"endTimeNanos\" : \"2022-08-10T17:14:04.431757Z\",\n    \"dataTypeName\" : \"Melonie Gislason\",\n    \"startTimeNanos\" : \"2022-07-04T14:22:04.431829Z\",\n    \"modifiedTimeMillis\" : \"2022-06-26T16:08:04.431857Z\",\n    \"rawTimestampNanos\" : \"2022-05-23T16:58:04.431884Z\",\n    \"computationTimeMillis\" : \"2022-12-14T15:52:04.431912Z\",\n    \"value\" : [ {\n      \"intVal\" : 1499162016,\n      \"fpVal\" : 2.890239881601762E307,\n      \"stringVal\" : \"n6ctxmbp1u30iz5mt3drf2j66laagqdsmzik56he3y30k1q0rxait694m5mok4f8gavenisqdgqkqawqzvvvoahkkb445yabvr9jzfzmd1gcbnfmts8pv25hedwlbmcc1mqz2vbphtp8fn19ttx466ezufw5jfp77a4979sw3s\",\n      \"mapVal\" : [ { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b94423b-812f-47ec-9691-46bfdfe752f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.432272Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c7d67d38-27ac-4619-8296-97add27a9d7d",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/b86d/dataSources/zqws/datasets/d9d5",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c7d67d38-27ac-4619-8296-97add27a9d7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.430073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    }
  }, {
    "id" : "7f9bb7d6-30a4-4b3f-b86e-1840bc875960",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/8znq/dataSources/v369/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"6h69\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"84gi\",\n    \"endTimeNanos\" : \"2022-09-15T13:29:04.426085Z\",\n    \"dataTypeName\" : \"Ariel Ledner\",\n    \"startTimeNanos\" : \"2022-07-21T13:52:04.426168Z\",\n    \"modifiedTimeMillis\" : \"2022-11-10T14:21:04.426204Z\",\n    \"rawTimestampNanos\" : \"2023-02-16T15:35:04.42624Z\",\n    \"computationTimeMillis\" : \"2022-11-13T14:57:04.426275Z\",\n    \"value\" : [ {\n      \"intVal\" : 1114706340,\n      \"fpVal\" : 7.656964107243819E307,\n      \"stringVal\" : \"rez6yvy5lz5idvwnfeacmm7zjl0930lgi74413zw58gofmkbpsdab0ijbedwr052ln3eloh4uqx13703lqk035x8r5slswes\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 850131667,\n      \"fpVal\" : 1.2133341216438239E308,\n      \"stringVal\" : \"5pocc25iynxxv0lbqm129rf5db47f9krx89g8pht64lq1ri76ahl9ojee2wg1we8jdmq0dexq2qp0e1g491f7bbi9ykjihjz1wwyccwq2cl0vn67vlu1aktknyzmxmxea9z4so87agph\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1577083268,\n      \"fpVal\" : 1.382604505284934E307,\n      \"stringVal\" : \"km3ixitkkmftlwht8dvqbazok48he324a47o3f7dfcxzkyno32x1rq5dmemsq56arwa4x4n29u3khgbriov3pteum1hsptbj288escbhb0p98bsa6bhaaongyv\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 444897399,\n      \"fpVal\" : 4.0272440100212656E307,\n      \"stringVal\" : \"gc5yoqyvtp9x74ye5qkzrfskf1abl98ma4vy5nsil7k6kq9bivc0bcfxy7j7pi0je8yx1m9bpbpqhojlnr713ueyzk28s9hk5wz6jj8skz92q\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"7004\",\n    \"endTimeNanos\" : \"2023-01-03T14:09:04.426553Z\",\n    \"dataTypeName\" : \"Owen Collier\",\n    \"startTimeNanos\" : \"2022-10-05T13:34:04.426624Z\",\n    \"modifiedTimeMillis\" : \"2022-10-07T15:46:04.426656Z\",\n    \"rawTimestampNanos\" : \"2022-06-28T16:30:04.426686Z\",\n    \"computationTimeMillis\" : \"2022-08-04T15:12:04.426714Z\",\n    \"value\" : [ {\n      \"intVal\" : 100517567,\n      \"fpVal\" : 1.3882894126291723E308,\n      \"stringVal\" : \"g9ars677lwef9p14b1o69ylcbrqglrk07aasgl7k4jh3qwzqnyey940hdzdkchbeo82xonuh6syzxip1n3esn7s348g2gdxrs9npa40rn1k82oz0z5hopzhwh6nirqtai05xostg4dw9tu5x4nyxtjorrx9d62bt7p34vey54xi7xwwv\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 169642368,\n      \"fpVal\" : 1.1873860993819265E308,\n      \"stringVal\" : \"z9t674uavnbss3yr0w31cybqotur6h2hwyalza1hphc1e0iffoh0eenp6cl6mg53r8vl3n480q60e3scwaa3d9jqe4zze7z9fgkkbw8oymp6yicjjp6euut149twokuadurofulwdo6fsz272zwh1qyqhiupp\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1768686402,\n      \"fpVal\" : 8.319181267020393E307,\n      \"stringVal\" : \"pg82r805sewi08wbup93q7gl7f5zc05oznsam5a28r1mdqodazfj4i8gf7ijqq1dq0mwdw0d1w4c649ytclb0iewr5oswmkmejpard\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 827837963,\n      \"fpVal\" : 1.3209832585581695E307,\n      \"stringVal\" : \"cg09rtmihzk0au0pglh926v66p10el9a2\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"rv7y\",\n    \"endTimeNanos\" : \"2023-02-25T16:20:04.42699Z\",\n    \"dataTypeName\" : \"Donald Cummerata\",\n    \"startTimeNanos\" : \"2022-05-25T16:55:04.427064Z\",\n    \"modifiedTimeMillis\" : \"2022-11-12T14:17:04.427093Z\",\n    \"rawTimestampNanos\" : \"2022-04-03T15:04:04.427123Z\",\n    \"computationTimeMillis\" : \"2022-06-22T15:23:04.427152Z\",\n    \"value\" : [ {\n      \"intVal\" : 349806909,\n      \"fpVal\" : 2.676181241317119E307,\n      \"stringVal\" : \"elcfbydshhqrozlqrst8ch6aoenf64q4c3fjjiic1ceaon581kubup38lvz0vxzliuip4rzdg1wr\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"e913\",\n    \"endTimeNanos\" : \"2023-01-05T14:00:04.427284Z\",\n    \"dataTypeName\" : \"Chase Runte\",\n    \"startTimeNanos\" : \"2022-03-23T14:06:04.427358Z\",\n    \"modifiedTimeMillis\" : \"2022-12-28T16:58:04.427387Z\",\n    \"rawTimestampNanos\" : \"2022-09-10T14:38:04.427423Z\",\n    \"computationTimeMillis\" : \"2022-10-24T16:55:04.427455Z\",\n    \"value\" : [ {\n      \"intVal\" : 1804841986,\n      \"fpVal\" : 1.5329758322872419E308,\n      \"stringVal\" : \"n1xnxtq16v5c9370y0phnlb7uhox9rni8nn8dymah9cdgho4v11mf1amd84htmc2ghpn2mtf\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1481500092,\n      \"fpVal\" : 1.5459600049798972E308,\n      \"stringVal\" : \"8deiabn16f6nnvjt3nsnaagsfvu16whuha9fujxaa2onc90cz4qzu5vdiwb2wfbj9smkrvyo9amammkuw4gl5qj2clqdc0wapzv8s\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1902237604,\n      \"fpVal\" : 5.361663536236968E307,\n      \"stringVal\" : \"wo7vjsxh4uhvg7xyitl714mlh90k48huzthmjzs7mgqmz6zcb02n19oad14dkplc8mols7u4gwqifz2ygpo9j2heti1ycbk4boh7tt2j4mxzs2ay9cmxbd48uxqkntfknuoei32ti\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1767669673,\n      \"fpVal\" : 4.3632808446831883E307,\n      \"stringVal\" : \"gg67va04i8ovb4ej2u1er97crsx8e2tg931gr2ooensrbq4ve71e9tossx80s0z9dinydez5qrqkzp02bg9m03jzwdsgz59j4bh0p6zvabcflk9f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 361431749,\n      \"fpVal\" : 4.980853441382023E307,\n      \"stringVal\" : \"78lg8kdm0s95gwb8tprqoybycmn0o7mzwrzhfsq4s2bfddmmifu7z1snsqnw51khyhofjr3vpkijkdlx1nao8ka5ncl97kma3bd36n02f79hxb6qdg0gnfqu9k6jwoiekc99rlhi6mg7ftzz03vxy9ohmft5sd9qyt45ktd\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 365145836,\n      \"fpVal\" : 4.841914650547287E307,\n      \"stringVal\" : \"f1gbdx4ncp3xrib5oadpx23y07f5qpifgemeyim2lxlkp6aqo72p2yf\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1089594381,\n      \"fpVal\" : 1.6464038443426433E308,\n      \"stringVal\" : \"lz4869gf\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"f3unndp5a1ytkndyhscbie1ft92xnj2p346pckyrlllzppxlu5oxrh\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"q41y\",\n    \"endTimeNanos\" : \"2023-01-31T15:14:04.427862Z\",\n    \"dataTypeName\" : \"Gus Cruickshank\",\n    \"startTimeNanos\" : \"2023-01-27T14:11:04.427935Z\",\n    \"modifiedTimeMillis\" : \"2022-11-07T15:31:04.427965Z\",\n    \"rawTimestampNanos\" : \"2022-04-11T15:47:04.427993Z\",\n    \"computationTimeMillis\" : \"2022-04-06T14:26:04.428021Z\",\n    \"value\" : [ {\n      \"intVal\" : 1416850771,\n      \"fpVal\" : 1.1540530439977263E308,\n      \"stringVal\" : \"44per5yi5ln1ag8jlca1h2l6d0mf5fo67rfsvrktjfoqjuo2dkqjlce3znskp8ypgh1qo0inikbkyrsv5sk2ju5fmbtvp7ersxxsqkypnkker11geddnp5g1v8es08k\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1852473131,\n      \"fpVal\" : 6.855238518199239E307,\n      \"stringVal\" : \"bbm8p6cto0lij4pe1g5on4efj0kbdggczgjldxojaz9hbod2xi1tbd582cg40moh85g3cjntfwxma5qthnzajcqj2zmt1i7xsycq2kainnect1gp6afpok1v3bnmc1teu00mfw92y8cc8636ikw75dh5lyym0xavnfnz3jdudm6bb7bzshzb0z009\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 64067815,\n      \"fpVal\" : 1.6974477721243934E308,\n      \"stringVal\" : \"d1d96xlhoit89adwwm85y\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1792894176,\n      \"fpVal\" : 1.575012466490555E308,\n      \"stringVal\" : \"wuhbo2oouj45ov2qb1acscr2zt7essal8d2m7j8xo6deo78ipcc237dc2nlrcjpy1ke1l5qfhysmy8pd\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 896289829,\n      \"fpVal\" : 1.4211694723982665E308,\n      \"stringVal\" : \"7uf8ax6e01wqagk3i2ubo0a54qm6xfftjx62h5ri90jmhv420pa1tgjic0i9eowj8yc1p5l1hxjsxk2o4wb8tmef4yeav9c\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 186549665,\n      \"fpVal\" : 1.2187171939004038E308,\n      \"stringVal\" : \"qnjrzy7oockdpzxnuyrykhjaetjfywzp\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"9p0c\",\n    \"endTimeNanos\" : \"2022-07-15T13:43:04.428328Z\",\n    \"dataTypeName\" : \"Nickolas Robel\",\n    \"startTimeNanos\" : \"2023-01-10T17:27:04.428402Z\",\n    \"modifiedTimeMillis\" : \"2022-08-16T14:19:04.428433Z\",\n    \"rawTimestampNanos\" : \"2022-05-16T14:07:04.428461Z\",\n    \"computationTimeMillis\" : \"2022-08-16T14:32:04.428492Z\",\n    \"value\" : [ {\n      \"intVal\" : 2034306166,\n      \"fpVal\" : 3.169460336522353E307,\n      \"stringVal\" : \"mwpx05n0hw369i50gx9w0xruogdg78rgxeaxb5advsnxy5bm175dfzay1norh050xe2bompav07k67a96eutvwulik63472kcoiffkosraeaxpxmzwxemvw3xqpc5nlzc885l6i2pk2v4ydanf87ztccw5yqfl2jir5ut90\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"29o4\",\n    \"endTimeNanos\" : \"2022-03-13T15:33:04.428623Z\",\n    \"dataTypeName\" : \"Kathy Grant\",\n    \"startTimeNanos\" : \"2022-08-03T16:51:04.428699Z\",\n    \"modifiedTimeMillis\" : \"2022-03-24T13:52:04.428729Z\",\n    \"rawTimestampNanos\" : \"2023-02-01T16:30:04.428759Z\",\n    \"computationTimeMillis\" : \"2022-09-24T17:03:04.428788Z\",\n    \"value\" : [ {\n      \"intVal\" : 1013404662,\n      \"fpVal\" : 1.3306679997022726E308,\n      \"stringVal\" : \"ubfzzg9i1jyikekdlq89q3cg01r15s8wck6v57hd3lr1ob55bwgw90tamqd2c9ryyf8jzjc03lmmrwquvohjcubyce8orc332jj9nuhfgnt67qv8fst9irl8unryv2t3iv11dgddzkrgr97i1jpnv9vkgkc9v2lpshhynv488ms4cwjamhtoo0zudtqgj6m7yhac\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1122428442,\n      \"fpVal\" : 1.1519523933859196E308,\n      \"stringVal\" : \"gb983xouo4cvgcjt24hjhd60ei07mmw1jjst\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1072812338,\n      \"fpVal\" : 1.754085468110906E308,\n      \"stringVal\" : \"3im2mxzstr692ey00it9avxzvspui1tzry665455lxm3s2hc4xod8z8kyhz9eajnhm6qg6yffrfzahfqoxl7j9fs8oza4lackkhmd7ci710cplb1n7b68vpm752rgi1vf1n7eoz1t29uk9uykxucqfj7tsuvba5v0l0rzkldtnyoot8hh3zwm4dvvk5\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1024642280,\n      \"fpVal\" : 2.2088734468021E307,\n      \"stringVal\" : \"uy7fhmn9224zuuhr43ld18j\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 381246918,\n      \"fpVal\" : 9.274564624117452E307,\n      \"stringVal\" : \"2ga5mx4hd0ufpambkcmizpud0amfcubxp6akay1mi4vahi9qr3y39kv0xqn6nnaczn37ro8znia6w1p6bhptp0tnc2c9lq2tqt53oulj1xq8zp5pdw3\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1506234181,\n      \"fpVal\" : 1.4673517010677052E308,\n      \"stringVal\" : \"hg5hqn8oz3akze7y5rzqe94wd1amqxobd0p9tyrgw8ta99t8yo6rbjih99iz5fbegc39tj5iokw324u9jd2s0k7prh0z8qilijd6eyr1kym9dl50m1vnjqkc3us83m2x2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1774560690,\n      \"fpVal\" : 8.874907504955431E307,\n      \"stringVal\" : \"iqlqm082xgtjbg4aiz675ax9a4uzibpcyv8s1v5c97akczargiqg3slhyva8gy1bnztor9x2qy58xzssmkc5m4qu6sly5sa4tuabwk40uq1t\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1227067439,\n      \"fpVal\" : 2.2127706000922521E307,\n      \"stringVal\" : \"hk6ydrn0euz88ziywuqt\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"9306\",\n    \"endTimeNanos\" : \"2022-08-06T15:52:04.429214Z\",\n    \"dataTypeName\" : \"Curtis Mraz\",\n    \"startTimeNanos\" : \"2022-06-30T16:23:04.429288Z\",\n    \"modifiedTimeMillis\" : \"2022-09-08T16:19:04.429318Z\",\n    \"rawTimestampNanos\" : \"2022-07-03T13:48:04.429347Z\",\n    \"computationTimeMillis\" : \"2023-02-10T16:02:04.429376Z\",\n    \"value\" : [ {\n      \"intVal\" : 346754073,\n      \"fpVal\" : 1.2591067764562643E308,\n      \"stringVal\" : \"wauu3dfwd35aoyld7b902eamtwmma95mnkva247hzwcmw3ttx3g17l4nbindswrsdnd3ej4byos85xvjwiil6hlqz9o8d21maszj8229gjuyjdfqc2et2c9o9ok84grvimi1\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 2000419935,\n      \"fpVal\" : 6.990332304197054E307,\n      \"stringVal\" : \"w7dyipcuyznondxd68z2q4l69hihoklqibqxjrov0imrq543njjoa0xv7i8646777v27ns6erzgrmyof25ogki34wvc12bqcg0l58ogm21ayfntmtixc8melbc5tfao2kmyxg31gaus92p9ora46u7264t45jncgrtf\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 130620698,\n      \"fpVal\" : 5.094021672944059E307,\n      \"stringVal\" : \"j6syaa76srgycl8mwsa7xxdk4sw4xzeoout7wz8or0isr0jmfe7szi60eu63fxolv8q0ct23yd0vnl39veh9f664v\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1696834815,\n      \"fpVal\" : 5.259495281209612E306,\n      \"stringVal\" : \"vpniq1nrpouwl3ra01096626e22pr5sty1slx0xi6rzr6nrwawm5kc3ebnog4y33xt8a0ejdx6tu9\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 284756745,\n      \"fpVal\" : 7.066731717273226E307,\n      \"stringVal\" : \"8bfcxn63l0i2xsx7sh5bpexef9v7atrjgwjrim1davjzjrmkjhnhshb\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f9bb7d6-30a4-4b3f-b86e-1840bc875960",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.429857Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "87fa10e1-8dd5-4e05-b1f8-312cfcbdd81e",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/1wzr/dataSources/3xvy",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Mrs. Miss Luettgen\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/285769\",\n    \"name\" : \"Milton Wilkinson\",\n    \"packageName\" : \"Miss Waylon Douglas\",\n    \"version\" : \"wulc9v2aum3i8ngvaoumr202l66ggiqjom5p5z1exopvsp7k35ba98cjk1owhb7l4eh62p2ugi0ky2txlpecv9vypbs3t7mjiisaavtdkivl2v9jxqevglzbcdng3jpncqqlatalf2mfyqc2uqgrtr621m8v9q5lx683p0h4rkmdz3fywzvxekp2sxwwohnbpep158\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"map\",\n      \"name\" : \"Marc Crooks\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Jame Flatley\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Ardith Schiller PhD\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Keiko Swift\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Miss Rochell Rath\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Robbi Schowalter\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Irena Cremin\"\n  },\n  \"name\" : \"Hayden Emmerich II\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureEsh2010\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"q098\",\n    \"model\" : \"c4s17dqzt3wi4zv1tjygc0kjuok8njo5upowmtjly2su5rn3dy31fmhdg13my92btrxg5e5wqmy3z1tiw4vozz01326z43wsqdles87ax4s17doeokbwyj6\",\n    \"type\" : \"watch\",\n    \"version\" : \"iy0i5o7c0njrib19u6nwodf2tzbjvn1x9t3z94cxibl4uaiee4dtqvtt10wjwendf24lkprzhimvyimrsmmtd9n1zjz3o53g4m4cfc537dbcnl\",\n    \"manufacturer\" : \"ep0vqumbp4zw9untz5wu15g2ja4igxbw8jrz\"\n  },\n  \"dataStreamId\" : \"zru4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87fa10e1-8dd5-4e05-b1f8-312cfcbdd81e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.42588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "63823061-d664-4bf2-a756-a11170f59dcd",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/j2n6/dataSources/56s3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Arlette Abshire\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/592060\",\n    \"name\" : \"Chet Thompson\",\n    \"packageName\" : \"Lacie Osinski\",\n    \"version\" : \"egy1mv7s540ef7bb60ysb2jnphx71rqezfh2kgsv983srszu65e619giz8vus3oply73fapbdyhupvkrpwqq90awhq24ia9s62uniyenza5l8xu9wtm8n1zj0oq1jaqasin0\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"blob\",\n      \"name\" : \"Benedict Lesch\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Brendon Schneider\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Ms. Ellsworth Heidenreich\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Otis Borer\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Tracey Bins V\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Ronald Ondricka\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Kristal West\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Perry Prohaska\"\n  },\n  \"name\" : \"Ignacia Boehm\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodGlucoseIso151972013\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"73m9\",\n    \"model\" : \"wi4i3obuh1zichlrw1ffwcan62b6pu45pdi8a1inmecle97moe8y6o7nrc89ryc2qu7ppvu3ly5chm7c67nc49bs0ncr9tcg344rep2it9omrswj04fz4p92xbi03s\",\n    \"type\" : \"headMounted\",\n    \"version\" : \"53aongd1rjd58ypu20v9j879dm7wi7z5ob417cua425nz2ott02tslr2pv5y9n4hch7squbhv1jknw17bhow3up7ho0jz1t65lwsiwzqdurvnr7sgy1e0c50h3zpv59bccnihj84pmq9h1pf1r90fanly6fzambt3wzgk5wcfq74yutac0d0vtfemzjp8\",\n    \"manufacturer\" : \"1tj91uspos76j4ifiix46qwh3yh144opty\"\n  },\n  \"dataStreamId\" : \"zqaq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63823061-d664-4bf2-a756-a11170f59dcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.424786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dee26845-d00c-4a3c-8661-1ffc6355c58f",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/stlq/dataSources/9774",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Len Howell\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/996573\",\n    \"name\" : \"Effie Yost DDS\",\n    \"packageName\" : \"Delma Hermann\",\n    \"version\" : \"cxowdxoq54b\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"map\",\n      \"name\" : \"Theo Hodkiewicz\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Patricia Smith II\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Victoria Kling\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Miki Bayer\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Grover Conn\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Evan Maggio\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Sid Fadel\"\n  },\n  \"name\" : \"Harold Flatley\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodGlucoseIso151972013\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"vl68\",\n    \"model\" : \"hgtpx0ipyw4ng07jhz9ocq2yi1rda2eeu8w4zroc4b4uybdb9d8pcgzeph4hqu8524x05tap84nce5tbvp7di6gy2np878gv3ha9g1qe3lfewnovvng3e15r19qnybcrja9arckho4i6y9280nx\",\n    \"type\" : \"smartDisplay\",\n    \"version\" : \"vwxw5s733pcvn6o3qncj2zcys3m4bs47tocwvaautlfoojqpgp4aa0grbo6qw8wpwify0b4qqcikh255ewa1sr9fmutdhjybqfxz7a1zhe985fsesrkw19w67p1q1a\",\n    \"manufacturer\" : \"t1oeam0kk54depp98wnu1z5ps5vfpzlzpzyu7o4apv253s46yvyiimq86v7w5w7qbnuzxt5dmzvrfbykpxd12hdjri6c2mqxgtd14k0dbd0nod2l5ji3ipcu49zo69tp3s0\"\n  },\n  \"dataStreamId\" : \"rp77\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dee26845-d00c-4a3c-8661-1ffc6355c58f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.423638Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b7b1703-ac18-4018-a4b0-f126d5e0730b",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/gz2x/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Maudie Murray Sr.\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/570927\",\n    \"name\" : \"Jesse Goyette\",\n    \"packageName\" : \"Keri Tromp\",\n    \"version\" : \"12eqpr3b2z\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"map\",\n      \"name\" : \"Tommie Abernathy\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Vida Towne\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Claretha Sauer\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Lamont Bailey\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Laurence Hahn\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Wanetta Satterfield\"\n  },\n  \"name\" : \"Gilbert Schoen\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsBA\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"s4wr\",\n    \"model\" : \"5atzt7pww4nezbgs26r9rhhrl9bwd559o89wbd6m8j1haxzwd71pb7d0veh2tfepmreja0\",\n    \"type\" : \"watch\",\n    \"version\" : \"ge5zk7hf0pcuof1rcp6imd7tps5gcyvayiqe1u5v90v4mnp1q99etheyv0jhpxuqc7953cv15zly6yplnjpp8ptiqvfd29o0tv7wrgt1bnz9d811v2y5656flxckc6r3mezb9hisfs157adl6fz3huotgqbqblt8\",\n    \"manufacturer\" : \"a8xhlkxy6hxs5dmy1bje782c4jl0textclq9cihhpk797ihxf4l\"\n  },\n  \"dataStreamId\" : \"91ua\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b7b1703-ac18-4018-a4b0-f126d5e0730b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.422526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10e4365c-eacb-4901-84dd-cf6806fed267",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/5714/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Kristy Pfannerstill\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/996519\",\n      \"name\" : \"Suzi Erdman\",\n      \"packageName\" : \"Millard Ebert\",\n      \"version\" : \"urlrk4ypknwdi6ep59hq1ix4ly7mt51orcvhdvulglw7b8xwiehbat6uswo3y7fty6eqtnvhrgf1x4kwk1o2ije2va9835t56g7w9svakxxg1x55wjkzg49kjno6ysqpsqa1aa4r4rh0mpf0h3f281ph83fg16j0kl7meduoijp40b3s12byzcl4xv48\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Dorie Kuhn\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Mireille Vandervort\"\n    },\n    \"name\" : \"Anita Harvey\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureEsh2002\", \"dataQualityUnknown\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"v4z6\",\n      \"model\" : \"qhm254d8h2zo8qip8ef5ci9jbe0soscdet6jo05z2gtlsy127aglp0kng\",\n      \"type\" : \"unknown\",\n      \"version\" : \"pbadkgwg4jmkwivmkgu0shsdavjqplvf56k7ed72c5q1y4b3gx1eb69xfscisym8ul47vgn0racgvtxxjuig2jhptnwm48sggf0gaf0l5gk2j993thm22ztsfg120e8ywrxmyh3mx1i1pa4aswdmpr4cyi9q28rn5vjmhrviraajjmpe5tf18i66dn9qtfzyst\",\n      \"manufacturer\" : \"2wl03w2jue62qja3u7l7qimspkkag9lde8hp37m8ua65ra7avdiv52ai9i0kieqmk59ddfs8vw234usq9yswvhqijciw6vfye2gd1zk8kynav83azkwjl7erfkjad31k7zifyr\"\n    },\n    \"dataStreamId\" : \"057q\"\n  }, {\n    \"dataStreamName\" : \"Alberta Schinner III\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/405580\",\n      \"name\" : \"Emery Becker V\",\n      \"packageName\" : \"Mr. Bernard Bednar\",\n      \"version\" : \"hhh1p7hzq\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"blob\",\n        \"name\" : \"Ms. Victorina Yundt\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Thomasine Turner\"\n    },\n    \"name\" : \"Lowell Miller\",\n    \"dataQualityStandard\" : [ \"dataQualityUnknown\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsAA\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"5u9q\",\n      \"model\" : \"83uvne37i23aybe9zfve\",\n      \"type\" : \"tablet\",\n      \"version\" : \"qv0n04kw8l9usspgmx6od56309jhrjjmapkbm5pn7llwsbezvxvtwor8xekb4inedcb90y6bbn1zo3nstkk7qghdc7ozxwei3rkniz2yj39xib1c11jp95gyyvx5t43yqctk4meab1pgl4v7e62ln44m7kwxnu7g7i886pgrtdsr\",\n      \"manufacturer\" : \"gyqxk4p7jx2mzw0rtnu5dl6p28u3d5pf0un71zp9hu0dz4ob68svxida3m5ijoqjv0k12j4a3lgokroggdaud0xpyxj895qvlh7j87b8gspl86o7ay2772b63d1c7vkpxoxszewy5yo19l164kcac6da86iy54gmfp9hv3tbl\"\n    },\n    \"dataStreamId\" : \"12zn\"\n  }, {\n    \"dataStreamName\" : \"Carl Fadel IV\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/440442\",\n      \"name\" : \"Mrs. Solomon Schroeder\",\n      \"packageName\" : \"Mrs. Raymundo Gusikowski\",\n      \"version\" : \"529gd26btsu1fu\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"string\",\n        \"name\" : \"Lyn Murray Jr.\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Erinn Gottlieb\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Pedro Wintheiser IV\"\n    },\n    \"name\" : \"Miss Gary Kuhic\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2002\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"iu1e\",\n      \"model\" : \"fruk7vdefe5qbd8peya3rthbjh8tlve4391748yt00gao9i2bs9z84fz7j2az5smf3tku63worqhu7p3p03683r4d4o4f85etq2ziif9gg1bnc83prdmocticamv3vgnuad03zz4gjrl7vg3lkllj9pcun4crn2a2b\",\n      \"type\" : \"watch\",\n      \"version\" : \"iswtvppp1kvaejqpsrma381t3defbvqbcam8ajs3hetv8hy1cier7hf5spvi4w79bzn4hxiart65hesrj2uupj5cs2x8z7fbzf0339dmvz00skcucb0vtry5d6rlt5l1rm0zlxmqppxwy\",\n      \"manufacturer\" : \"x7y8jm\"\n    },\n    \"dataStreamId\" : \"0g9y\"\n  }, {\n    \"dataStreamName\" : \"Meagan Goldner Jr.\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/708274\",\n      \"name\" : \"Numbers Cremin\",\n      \"packageName\" : \"Rozanne Pollich\",\n      \"version\" : \"qo012jni9uc4cr3p9\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Dr. Danyelle Corwin\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Dorcas Turcotte\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Miss Cierra Collier\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Kaitlin Conroy DVM\"\n    },\n    \"name\" : \"Murray Witting III\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsBB\", \"dataQualityUnknown\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"3cd9\",\n      \"model\" : \"b1oojy2ca1l00e6rwn01pxzmvjmtht4fm53jxtinmmqhaik9mwhmpwahw6r4gh05g58bwiqmhhxgjgjbxdqn0sognp5t8yfo83m6c5qvp52bqg78k4\",\n      \"type\" : \"watch\",\n      \"version\" : \"7xpqku5dmhlr51tnqmlv8ryus92xz6jlmhkmaev266jy2o2ie8zl84nnv1lusg0kbqxjsr341n4f9btjadduemvnf66zmke83p9x8bckzht528av26wpw4u79ss0c800698btkqheni9qxapsnkw560ux2hxuafp37bjvwenk2ffjkt9uvxlaky420nxwhix\",\n      \"manufacturer\" : \"c3q2uaqhatq4kspel24ijuvx80d9chzy3p0ed1yu0m1jsalfjunn48ti62qsuk9wxsxgoobn3eamt4z4mh4zmxmxud3nqbz6idsrb01p51876v6729g3fkdndk33\"\n    },\n    \"dataStreamId\" : \"c7y4\"\n  }, {\n    \"dataStreamName\" : \"Dr. Jasmine Schroeder\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/583683\",\n      \"name\" : \"Joeann Nitzsche\",\n      \"packageName\" : \"Buford Kohler\",\n      \"version\" : \"f58nrwarfp3ltatl4vjzz1tgi5j8ko8x6knoug\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Danyell Kris\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Ms. Jed Mayer\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Alec Yundt\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Miss Joane Christiansen\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"William Roob\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Johnsie Murphy\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Fredric Reichel\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Johnny Rath\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Miss Marg Glover\"\n    },\n    \"name\" : \"Marcus Dietrich\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureAami\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"8e9w\",\n      \"model\" : \"6xdvtqkecqprwx0oe4eexpi1el7fvtnbauto4ab48pojyamzib4hif7fpentlc14cof2ftobgmqcmtq2nmfny6gp70o44d0hdo0wodacw5kgxoh2xrwfd542iy8x7rzy9po42ztmjcmx5aatbh56jo46yax7ylf7vofcq0eli8o0cyluuu718rrx9d\",\n      \"type\" : \"watch\",\n      \"version\" : \"asd1ivi9ly0xv278c9ac0wj98z8gs05w8pw731zzfxohfhi056g0ktgh7qimxi2qejh\",\n      \"manufacturer\" : \"3hb4cnf4if5sl9xc3v8fjtnnp15rpr8r8dq4tp0xe7cauyjfja1htw9dxzeas88ysxusx24ty8wi3bt20wkxfgdtqxm0t33bmdoqk24txjofsh56cok5nuuu1ycyjcl66rz012\"\n    },\n    \"dataStreamId\" : \"3iq0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10e4365c-eacb-4901-84dd-cf6806fed267",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:04.421488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}