{
  "mappings" : [ {
    "id" : "128c15fd-417f-4e2f-bb3d-f0903dbc258f",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/0w0e/sessions/6v95",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2022-09-16T10:56:51.148444Z\",\n  \"endTimeMillis\" : \"2022-04-26T13:26:51.148505Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/205222\",\n    \"name\" : \"Michal Orn\",\n    \"packageName\" : \"Mr. Bernita Jerde\",\n    \"version\" : \"ua8qcahsrw2vjcknjsykp0hdexxgzslvrq3p565w6kjb40ehmu65zl5nn2fsp4bi4igk9muhthvgxodhmmy20rr1ma7if2nhow8y6dx1dp380dw84dyxq7xf8m02zzm5ceezr3wyinv5v6ztf0wlv1l\"\n  },\n  \"startTimeMillis\" : \"2023-02-27T11:00:51.148969Z\",\n  \"name\" : \"Nolan Kilback\",\n  \"description\" : \"Officiis qui dolore aut expedita officiis voluptas. Dolores eius praesentium totam eos consequatur dolore reprehenderit. Sunt id ut aut unde. Labore et iusto doloribus.\",\n  \"modifiedTimeMillis\" : \"2023-01-15T13:31:51.149223Z\",\n  \"id\" : \"px0b\",\n  \"activityType\" : 1038829209\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "128c15fd-417f-4e2f-bb3d-f0903dbc258f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.15073Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e2ab2a01-6b07-4cc9-b61d-29f75fe58111",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/5c73/sessions/t3b4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e2ab2a01-6b07-4cc9-b61d-29f75fe58111",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.148357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    }
  }, {
    "id" : "93345556-51e4-4b51-8534-9ee56b96c923",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/7649/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"zzegitq043j32oossfedg1d0xqbbd9x7wwg0zhlowcolikkhjsr5rz2ilxwog3som696s\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2023-02-27T13:34:51.128434Z\",\n    \"endTimeMillis\" : \"2023-01-12T11:34:51.128503Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/198840\",\n      \"name\" : \"Theodore Ullrich\",\n      \"packageName\" : \"Leora Daugherty\",\n      \"version\" : \"u9h2jes6uvzb3skpvsrso0pnwm4t2aeh8yh5bx7ntut11s5nmc2nxxp5lfx9pi4vlawhvtpbdxd8bxjaqkm10dx5ldzxvi1f1w9miyuzpoylqlbg44l6pk7la5a0\"\n    },\n    \"startTimeMillis\" : \"2022-09-16T13:25:51.131541Z\",\n    \"name\" : \"Vito Kovacek\",\n    \"description\" : \"Mollitia harum sint. Ea voluptatem blanditiis. Recusandae quibusdam voluptatem et fuga accusantium error dolore. Id quidem vitae natus dolorem earum fuga. Ipsa dicta sit.\",\n    \"modifiedTimeMillis\" : \"2023-02-06T11:44:51.1319Z\",\n    \"id\" : \"260j\",\n    \"activityType\" : 2097350241\n  }, {\n    \"activeTimeMillis\" : \"2022-12-20T11:13:51.132482Z\",\n    \"endTimeMillis\" : \"2022-09-13T12:27:51.13258Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/341283\",\n      \"name\" : \"Mr. Otha Bailey\",\n      \"packageName\" : \"Antoine Cummerata MD\",\n      \"version\" : \"lqv90tisulw29s6n7jy8ivvjrqki05mm2w1zuivfekkm15yyjxh7qbn8dwdgfaxl5eox6ymccs6lrds76ttzagx1nwo1yant1x4w7ihi4atzkpkiofgot229mo4jqv2gqwfbpg5h1p9d88drhoh1gd9c8c2mezw4gn3kypplde3be\"\n    },\n    \"startTimeMillis\" : \"2022-11-28T11:09:51.134011Z\",\n    \"name\" : \"Melodie Walsh\",\n    \"description\" : \"Quas earum possimus distinctio blanditiis porro. Velit est provident quo dolorum exercitationem. Aliquam ea unde commodi. Et asperiores reprehenderit necessitatibus ut. Omnis quod rerum.\",\n    \"modifiedTimeMillis\" : \"2023-01-31T10:42:51.134273Z\",\n    \"id\" : \"na88\",\n    \"activityType\" : 370228552\n  }, {\n    \"activeTimeMillis\" : \"2022-10-03T12:19:51.134533Z\",\n    \"endTimeMillis\" : \"2022-07-17T10:54:51.134591Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/746043\",\n      \"name\" : \"Emanuel Nienow\",\n      \"packageName\" : \"Dr. Garrett Rodriguez\",\n      \"version\" : \"vji3zsff3vevgv94dtcd25twa3eb70cacnnyx990sd6c8a64qat1tqvibc75696udre965h42bdvxph9ka6gq39gu8k1fngci7ttw46ewadekknxxg1xixm88wtp47fja3ipfudgfvbko60lns75knz45e25ct212ofx1694758u1oreq25bcqb554avg0y\"\n    },\n    \"startTimeMillis\" : \"2023-01-29T13:42:51.135163Z\",\n    \"name\" : \"Frederick Breitenberg\",\n    \"description\" : \"Et non minima qui. Placeat laboriosam ut aliquid. Totam maiores suscipit.\",\n    \"modifiedTimeMillis\" : \"2022-04-04T11:36:51.135659Z\",\n    \"id\" : \"g789\",\n    \"activityType\" : 669179198\n  }, {\n    \"activeTimeMillis\" : \"2023-02-23T11:07:51.135924Z\",\n    \"endTimeMillis\" : \"2022-08-08T12:07:51.135992Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/230657\",\n      \"name\" : \"Carey Lubowitz III\",\n      \"packageName\" : \"Lyda Murphy\",\n      \"version\" : \"fkogpmgk1g0bozmbcaziy2iz48gzclexqduyyj1pjwa3tjou5a6qrcwxhvfofkmz7ucctb1ahf4hmjoyjd30lw9hw69s3ye17jdwcjuqy3rtvw06a3a2ds72sw6w5a0kdim0hajlihrub0ausv2m42rhxapphoyzp5vx4344hc76v947f68\"\n    },\n    \"startTimeMillis\" : \"2023-02-18T13:38:51.136641Z\",\n    \"name\" : \"Frederic Brown\",\n    \"description\" : \"Officiis labore et rerum non aut et eius. Libero voluptatem cum similique ipsam. Alias cumque non at et. Et est ratione. Eveniet voluptas minima ipsum.\",\n    \"modifiedTimeMillis\" : \"2023-02-22T13:17:51.136946Z\",\n    \"id\" : \"s3ef\",\n    \"activityType\" : 1932492063\n  } ],\n  \"hasMoreData\" : true,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2022-06-13T12:59:51.137517Z\",\n    \"endTimeMillis\" : \"2023-01-18T11:58:51.137596Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/103833\",\n      \"name\" : \"Bertha Adams DVM\",\n      \"packageName\" : \"Antione Kub\",\n      \"version\" : \"0mb785md8girdec7i9q\"\n    },\n    \"startTimeMillis\" : \"2022-04-05T11:12:51.138339Z\",\n    \"name\" : \"Lindsay Mitchell I\",\n    \"description\" : \"Ullam et cum ad et vitae animi. Sit vitae perferendis iusto iusto doloremque consequatur ipsam. Quisquam deleniti maxime dolore nulla voluptatem. Consequatur consequuntur nam delectus esse debitis dol\",\n    \"modifiedTimeMillis\" : \"2022-06-05T12:35:51.140219Z\",\n    \"id\" : \"4vh3\",\n    \"activityType\" : 2053832832\n  }, {\n    \"activeTimeMillis\" : \"2022-07-29T14:04:51.140494Z\",\n    \"endTimeMillis\" : \"2022-10-15T14:13:51.140547Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/295384\",\n      \"name\" : \"Darell Hegmann\",\n      \"packageName\" : \"Raven Altenwerth DVM\",\n      \"version\" : \"sme6kc0ix2h132il4kzkfti04ecbq5yavvin3xwqcwowl7vsbfq8trqc571mpo9tfudzp4uno90xwgu5tfqup6if6ec1nth4f8rgfv9oq64y7erjd4veyi9si7amckqmd44xkaequzw12s3qttd14r8ozl2artbsgol\"\n    },\n    \"startTimeMillis\" : \"2022-06-04T12:52:51.140976Z\",\n    \"name\" : \"Bong Hirthe\",\n    \"description\" : \"Laboriosam ut nobis quia. Assumenda facere veritatis quo sed. Alias dignissimos reprehenderit nulla dolor repellat repellat. Incidunt ut hic.\",\n    \"modifiedTimeMillis\" : \"2022-09-01T10:38:51.141252Z\",\n    \"id\" : \"qv2l\",\n    \"activityType\" : 1127247575\n  }, {\n    \"activeTimeMillis\" : \"2022-07-13T11:49:51.141617Z\",\n    \"endTimeMillis\" : \"2022-09-07T12:48:51.141673Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/655862\",\n      \"name\" : \"Mr. Weldon O'Kon\",\n      \"packageName\" : \"Ivory Murphy\",\n      \"version\" : \"lu43ppvwiw90zi4umn8mygvpeqqop1cux52uj8au95uvgkltxuemlt0u8iq634wvg9nbszckoxyh0n39j945lg0e0v4dy1o9sffvzfxvdgj2zsd4qkbqxy5e8agmrzuuykv1dfmw1evfmfz1knj3hm301dy8woq3hnthd8nxok\"\n    },\n    \"startTimeMillis\" : \"2022-05-21T11:48:51.142125Z\",\n    \"name\" : \"Miss Alonzo Walker\",\n    \"description\" : \"Qui ducimus possimus molestias eum. Sapiente provident temporibus sit consequatur ut voluptate totam. Tempora voluptate sed corporis adipisci ratione sunt optio.\",\n    \"modifiedTimeMillis\" : \"2022-10-11T12:52:51.142447Z\",\n    \"id\" : \"3bmi\",\n    \"activityType\" : 427484951\n  }, {\n    \"activeTimeMillis\" : \"2023-02-04T10:59:51.145728Z\",\n    \"endTimeMillis\" : \"2022-12-20T12:26:51.145819Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/182605\",\n      \"name\" : \"Roosevelt Dach\",\n      \"packageName\" : \"Stan Okuneva\",\n      \"version\" : \"9o6ubeo8u8xeooe2fdxjvf0jbi3786bhihmc42k7jnuzqwyv5lnyp5wskwtuq4lwj5v533bqdq6x4kzqtrgvi1pvzs7hcs2jrhx\"\n    },\n    \"startTimeMillis\" : \"2022-09-24T12:30:51.147044Z\",\n    \"name\" : \"Margarete Wolff\",\n    \"description\" : \"Earum quia mollitia. Nam qui officiis voluptas labore modi. Inventore iusto error voluptatum soluta.\",\n    \"modifiedTimeMillis\" : \"2022-12-04T11:16:51.147282Z\",\n    \"id\" : \"n00c\",\n    \"activityType\" : 488010939\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93345556-51e4-4b51-8534-9ee56b96c923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.147918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "54b6767b-97ae-4888-b428-20a53187b216",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/znee/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2022-11-27T11:41:51.074556Z\",\n    \"activity\" : 1100099344,\n    \"startTimeMillis\" : \"2022-04-26T11:28:51.074615Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-08-30T13:36:51.074673Z\",\n      \"endTimeMillis\" : \"2023-01-10T11:19:51.074725Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/364734\",\n        \"name\" : \"Eliana Farrell\",\n        \"packageName\" : \"Al Lubowitz\",\n        \"version\" : \"rajve2suxesc5pdhwnjrmcad4filsf17lyhxofo3py8mz3dannnqgt2xh1xzg0ul637mktebcjb9yj06ufqibcj1r3o8xzzs1igm2i5\"\n      },\n      \"startTimeMillis\" : \"2022-12-04T12:13:51.07508Z\",\n      \"name\" : \"Lindsay Fay\",\n      \"description\" : \"Magnam eius rerum ex. Distinctio ratione ut. Id sunt vel nostrum.\",\n      \"modifiedTimeMillis\" : \"2022-04-30T13:36:51.076688Z\",\n      \"id\" : \"3m66\",\n      \"activityType\" : 1445568299\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"fx1i\",\n      \"maxEndTimeNs\" : \"2022-03-21T12:50:51.077195Z\",\n      \"minStartTimeNs\" : \"2022-11-18T10:37:51.077253Z\",\n      \"nextPageToken\" : \"ipp5mjfqrzj58c4pojo6\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"9w3a\",\n      \"maxEndTimeNs\" : \"2022-08-31T13:59:51.077528Z\",\n      \"minStartTimeNs\" : \"2022-09-09T10:49:51.077584Z\",\n      \"nextPageToken\" : \"5hitzmpy62cwir6kprszqm7or6u1s6qth9jzyncnp98qoulfqmy9dnctbchq2iag0f3l7dhj63f7u3uctk4c9ssn9vdxxn5mbn8yj2igj8x0ssgwa2ac26rujnmhqdnj7\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"683p\",\n      \"maxEndTimeNs\" : \"2022-09-18T13:22:51.077986Z\",\n      \"minStartTimeNs\" : \"2022-11-10T12:32:51.078047Z\",\n      \"nextPageToken\" : \"z2njk83w0mm7i4z012ybpxk\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"ihub\",\n      \"maxEndTimeNs\" : \"2022-07-02T13:41:51.078345Z\",\n      \"minStartTimeNs\" : \"2022-08-29T11:40:51.078399Z\",\n      \"nextPageToken\" : \"5stj5fb0zp8dayz11k7mgu7lnpp31j0bjouxteeu2whmv7sv9ias8sbqdwnqohmyjs2aar08j0x4kv8sld1fg608f6fgj42\",\n      \"point\" : [ { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-02-03T14:10:51.07851Z\",\n    \"activity\" : 1431852943,\n    \"startTimeMillis\" : \"2022-05-11T11:44:51.078565Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-05-13T14:04:51.078627Z\",\n      \"endTimeMillis\" : \"2022-11-01T10:43:51.078675Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/185281\",\n        \"name\" : \"Dr. Bobby Thiel\",\n        \"packageName\" : \"Collin Stokes\",\n        \"version\" : \"yrabdbbpl71aqg1lh6c9qw23mvlpwrlm986htm20p1944pdby96bwzcetjao51s49esnk3dg64ohyk83xi9wu565we0gx27s9bh4i4tn4\"\n      },\n      \"startTimeMillis\" : \"2022-10-07T10:30:51.079028Z\",\n      \"name\" : \"Carrol Witting\",\n      \"description\" : \"Esse libero molestiae sequi assumenda nostrum inventore et. Tenetur modi repellat soluta impedit. Autem vel quisquam deleniti. Dolorem perspiciatis quia soluta. Eum adipisci voluptatem molestias.\",\n      \"modifiedTimeMillis\" : \"2022-05-24T12:19:51.07923Z\",\n      \"id\" : \"jy46\",\n      \"activityType\" : 140346968\n    },\n    \"type\" : \"unknown\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"5qu1\",\n      \"maxEndTimeNs\" : \"2022-03-09T11:36:51.079618Z\",\n      \"minStartTimeNs\" : \"2022-09-28T11:48:51.079667Z\",\n      \"nextPageToken\" : \"jjj5nw4egl2vupsz4lqgj1634485xq15ghclcoydlt83fbr12coeucural9f6gx5euw2p8l8ox2gd91hcjfii9uyb8h8ufmlt10mebib50kyf7mu5rk0rft7h9rsoln5wvybph1zwgf9i699dgpsei436gzboqx4x4obpzpgpbpd5le\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"e115\",\n      \"maxEndTimeNs\" : \"2023-02-20T13:13:51.07995Z\",\n      \"minStartTimeNs\" : \"2022-05-03T11:45:51.080006Z\",\n      \"nextPageToken\" : \"me8swqj00j9o3ro5sqfgk9xue9abq9kr2kq96bw\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"66td\",\n      \"maxEndTimeNs\" : \"2022-07-03T11:13:51.080242Z\",\n      \"minStartTimeNs\" : \"2022-09-25T11:46:51.080294Z\",\n      \"nextPageToken\" : \"ues4eyy97goxta0s4g4651k5chloeo85zkl4l8surp5yshkh064pqpp4odhvkg0f0w4jgeo\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"9543\",\n      \"maxEndTimeNs\" : \"2022-03-25T14:09:51.080592Z\",\n      \"minStartTimeNs\" : \"2022-03-25T12:34:51.080659Z\",\n      \"nextPageToken\" : \"cdbejw07lo1h09l97pp05gjcdzgcf441xqcexi2\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"h0yo\",\n      \"maxEndTimeNs\" : \"2022-11-09T13:43:51.080949Z\",\n      \"minStartTimeNs\" : \"2022-10-12T10:19:51.080999Z\",\n      \"nextPageToken\" : \"7yjnw68ek5bzaeon1922aimfkwf90dh058br9qbazpcrdvrka0frvrb1unapgiedyvu0x1bi6giuwcn5r0tseymki6o638uztaxqbv2m0s56qxoyocqw1dzt3ssrzhx0uns9oxx05l8k1zyc2e3ftymvu6fr0wn4lkuss212mw7gvwpu4fb8qjnuxf44\",\n      \"point\" : [ { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-08-01T12:33:51.081115Z\",\n    \"activity\" : 1018416013,\n    \"startTimeMillis\" : \"2022-04-22T12:11:51.081196Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-07-13T12:07:51.081266Z\",\n      \"endTimeMillis\" : \"2023-02-01T11:53:51.081313Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/454937\",\n        \"name\" : \"Chadwick Morissette\",\n        \"packageName\" : \"Ellyn Altenwerth\",\n        \"version\" : \"my6b4z4oylsy8nr86aaitrzyh61vih51zap5c1183ur9y4pwsjx7k83zkunekf7tzludc4nctm3iwrpavbj3y6v356tzkcx1np67fbh9rhkv876t7k0chauxt0bdng8kpabriyhqdq7qoou5t8fk11ge3ekj5r22v2px2h6w324dkrs\"\n      },\n      \"startTimeMillis\" : \"2022-05-06T10:27:51.082871Z\",\n      \"name\" : \"Ms. Cecil Jerde\",\n      \"description\" : \"Quia facilis quasi nesciunt sed eum eaque quisquam. Consequatur voluptatem et vel dolorem. Et tenetur incidunt aperiam in et sit recusandae.\",\n      \"modifiedTimeMillis\" : \"2022-04-11T13:35:51.08317Z\",\n      \"id\" : \"yfpk\",\n      \"activityType\" : 504675347\n    },\n    \"type\" : \"activitySegment\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"m5cl\",\n      \"maxEndTimeNs\" : \"2022-11-17T13:02:51.084311Z\",\n      \"minStartTimeNs\" : \"2023-01-21T14:06:51.084475Z\",\n      \"nextPageToken\" : \"l66ikg2vus5b8f6qnwree\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"n10k\",\n      \"maxEndTimeNs\" : \"2022-05-27T10:39:51.084784Z\",\n      \"minStartTimeNs\" : \"2022-08-07T13:21:51.084844Z\",\n      \"nextPageToken\" : \"b4fxnnaigz4ssn78fnttksddi9fabahvo82r0rpejcuo4ldvuzot4q9vo9t8xatfqhb139lbszcrt04tgxmlb2lsx0m5kg4f9qrlfadtv39y2y1c1equlursjairno4vdf8shba4scigxk4iip148vgvcomn3p7r391l1iwcsj9\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4dai\",\n      \"maxEndTimeNs\" : \"2022-10-28T12:24:51.085163Z\",\n      \"minStartTimeNs\" : \"2022-11-03T13:01:51.085222Z\",\n      \"nextPageToken\" : \"7wxpvk2wxxnx9xuvkdzn75wkgzh807hjb9yr6y916hpgy7uonhr02a15cqrc1zef2ebx8k8fbj0edhun0lpzm\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"mp1o\",\n      \"maxEndTimeNs\" : \"2022-06-13T14:17:51.085606Z\",\n      \"minStartTimeNs\" : \"2023-01-06T13:45:51.085678Z\",\n      \"nextPageToken\" : \"977es3k87mvela289d6w47i2ml67fy10bzdplybyafd8o41dq1pir8jhnbczwy4gckaa9e7xafo0sw9dx787o04tjsocnqnumw513bsmv7ubf1k5fwo8q\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"8g2c\",\n      \"maxEndTimeNs\" : \"2022-12-23T11:02:51.086024Z\",\n      \"minStartTimeNs\" : \"2022-06-20T11:27:51.086091Z\",\n      \"nextPageToken\" : \"11w2nc5pndclxbvv5u6js9hsgtzb3y68v\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"7945\",\n      \"maxEndTimeNs\" : \"2022-09-02T12:55:51.086471Z\",\n      \"minStartTimeNs\" : \"2022-08-30T12:17:51.086529Z\",\n      \"nextPageToken\" : \"rljdm5tvki3bx7sb9w0rmto66mo68ijmdc9zuc08p7mzad71r84ds1kydpbktqx8xv8363icj42vbx2vouz1yop3gtebodyg4lszw1gfguh\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"39rb\",\n      \"maxEndTimeNs\" : \"2022-06-25T12:47:51.086864Z\",\n      \"minStartTimeNs\" : \"2022-08-07T13:20:51.086918Z\",\n      \"nextPageToken\" : \"n3zrd79ijarnrgph4hguxe0a5ngx3iw0fecoec4ikosy8mvja695w2eumzh7pyimr71qd\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-03-11T12:32:51.087594Z\",\n    \"activity\" : 1971575737,\n    \"startTimeMillis\" : \"2022-04-07T13:37:51.087672Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2023-02-28T11:32:51.087768Z\",\n      \"endTimeMillis\" : \"2022-10-26T13:25:51.087835Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/642006\",\n        \"name\" : \"Josef Heaney\",\n        \"packageName\" : \"Larry Mayer\",\n        \"version\" : \"ky66iy6m5tl8humu\"\n      },\n      \"startTimeMillis\" : \"2022-08-13T10:56:51.088322Z\",\n      \"name\" : \"Oswaldo Boehm MD\",\n      \"description\" : \"Aut minus et animi. Neque enim non et qui voluptas. Veniam est dicta dolores aut sed delectus. Consectetur consequatur quis ut quaerat aut. Sit ut occaecati error rerum totam maiores.\",\n      \"modifiedTimeMillis\" : \"2022-05-01T12:46:51.088604Z\",\n      \"id\" : \"ys9e\",\n      \"activityType\" : 1367793223\n    },\n    \"type\" : \"unknown\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"9tdl\",\n      \"maxEndTimeNs\" : \"2023-02-14T12:29:51.089244Z\",\n      \"minStartTimeNs\" : \"2022-06-17T13:09:51.089318Z\",\n      \"nextPageToken\" : \"93pe3ywi69b7ljpxxp1ntq2dliyiw4vx07c7rcn7667irr1ew3deoky7bh8atbt7ohqy1zlcmj0dzl6xzqu9v845x1os39icntkriuzv9zd\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"o3zw\",\n      \"maxEndTimeNs\" : \"2022-05-14T13:14:51.089697Z\",\n      \"minStartTimeNs\" : \"2022-05-17T10:53:51.089748Z\",\n      \"nextPageToken\" : \"2wnti5y31qnr47exponk6lnk4cbgfhxl4068lisqy6t5jz2pdgjdyj2x93nr8k690xpdo\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"46o2\",\n      \"maxEndTimeNs\" : \"2022-10-26T10:47:51.090289Z\",\n      \"minStartTimeNs\" : \"2022-06-07T12:41:51.090359Z\",\n      \"nextPageToken\" : \"ctcel861fx7cecu6bzg5dq3o6p1awxr4ishy459gq1wkeck5oz09v1p4aiva1ss4v6poe8wa1g5r139bfnkz2dyqu4n544dj4i3aq1vsyyk68xb37f42l4ul4yn64hto2vrft0odnezx2auiqzlyko8lp6\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4gvv\",\n      \"maxEndTimeNs\" : \"2022-07-02T13:48:51.090764Z\",\n      \"minStartTimeNs\" : \"2022-06-12T11:12:51.090829Z\",\n      \"nextPageToken\" : \"w1c7yhj8v4p1rt27xmafgu99zkynq13k340ovqqcggq4gqit8wg2r7vchujdgi5dysk3xovrcmlq4pv7c7syxwqfl498ig29sp6gs4lcpdinyf594u01m8333a3whmqtg75jtxicdn\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"02gz\",\n      \"maxEndTimeNs\" : \"2022-10-13T13:54:51.09142Z\",\n      \"minStartTimeNs\" : \"2022-10-19T11:02:51.091502Z\",\n      \"nextPageToken\" : \"rktwvud0x6sj1zryjstxm5p4lx9anxtp1mmy33r3zbl6puba0eo28t\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"b60l\",\n      \"maxEndTimeNs\" : \"2022-08-11T13:19:51.091887Z\",\n      \"minStartTimeNs\" : \"2022-05-05T12:44:51.091942Z\",\n      \"nextPageToken\" : \"v7hfhuv6orfqst7298gq3\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"dctd\",\n      \"maxEndTimeNs\" : \"2022-03-28T11:15:51.092353Z\",\n      \"minStartTimeNs\" : \"2022-04-13T11:41:51.09244Z\",\n      \"nextPageToken\" : \"dcrzzgg171ezsrxusbvdqu4ckhz5f7agdjxs7msodxz9so89by5d18b8ytbjw03hfqco2lvr5a7n82cpg2u6pw0iwni2co29ptg60zy0iz4xwx4lwnhfuia4ykuo2jzerfl4m5h11ofn4h\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"ce4g\",\n      \"maxEndTimeNs\" : \"2022-06-10T12:35:51.093097Z\",\n      \"minStartTimeNs\" : \"2022-04-21T12:55:51.093176Z\",\n      \"nextPageToken\" : \"ldb807v5cpha3gs43doggog4b2ydwm1gmexg3oyfn1zj6vbh3rv9blg4njiyqmq4e912zkrf1cwlco5pf0qxdzjstoxzca1g5pc58he44xl2rl\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-01-08T12:26:51.093414Z\",\n    \"activity\" : 1775685326,\n    \"startTimeMillis\" : \"2022-09-28T13:43:51.093481Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-06-21T13:32:51.093552Z\",\n      \"endTimeMillis\" : \"2022-04-27T13:08:51.093609Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/166445\",\n        \"name\" : \"Annemarie Schimmel\",\n        \"packageName\" : \"Francene Hudson II\",\n        \"version\" : \"rtrcxvm9p05fimbu119d1xt46aph3ph7ohc64hji7ok24b207fy5do5cqyxcnfrmkdn8mu80iijyvylqujg9jdvjla8lynzmg614cfkdqhlh7wchzm7fqz65aqfk0xu7wwywur3rlfjlcjjo6gr2wqevtil29e34qbqjx75u6idde7v1ixkekj0hrylhx\"\n      },\n      \"startTimeMillis\" : \"2023-02-17T13:04:51.094161Z\",\n      \"name\" : \"Chad Windler\",\n      \"description\" : \"Quasi atque molestiae enim et ea cumque. Amet tenetur aut autem. Voluptatem assumenda consectetur enim non molestiae est. Qui rerum est ad sunt dolor.\",\n      \"modifiedTimeMillis\" : \"2022-09-24T14:08:51.094447Z\",\n      \"id\" : \"189i\",\n      \"activityType\" : 344716951\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"xm13\",\n      \"maxEndTimeNs\" : \"2022-05-09T13:37:51.094995Z\",\n      \"minStartTimeNs\" : \"2022-04-01T13:52:51.106963Z\",\n      \"nextPageToken\" : \"fsm0dxtsi4qu0t33ivbi25nss4uc84m5hdc03fet0rjzz778ye1cr5sly5avxkc6hnjx\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"6erp\",\n      \"maxEndTimeNs\" : \"2022-12-18T10:47:51.107323Z\",\n      \"minStartTimeNs\" : \"2022-05-14T10:30:51.107388Z\",\n      \"nextPageToken\" : \"mxa5pwnrrj5e1db7x58d0lg56171qo\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4p08\",\n      \"maxEndTimeNs\" : \"2022-11-10T12:00:51.10789Z\",\n      \"minStartTimeNs\" : \"2022-10-14T11:18:51.108046Z\",\n      \"nextPageToken\" : \"bygo0ps6z4a2yx0ry4g1yv8iotn2w4baic2lbkeyzjy7b14gqtztl3sp436fok7jkknh4h56hxw9v71q8p2mqbjr0dpu5ibirl7cgdsabpuaixos4di4yz8tal6v0d20thg2qi0t7ln\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"l5xr\",\n      \"maxEndTimeNs\" : \"2022-10-29T12:52:51.108855Z\",\n      \"minStartTimeNs\" : \"2023-02-14T12:21:51.108925Z\",\n      \"nextPageToken\" : \"io5t6laohz9vgpmdg3ugdy8ex1shd7nxw3gyibrdxa1mwtcgtvdql6sflafnk207cm573mhu755bizk85i5rblc6amsvi8459hgzoinrhnnc9zd59z0h8f1ns91yn7rrdd4818p14y4q5h4fsnn5mgxmfsfsrhez56rwmakbfallv98j7yuj\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"5h37\",\n      \"maxEndTimeNs\" : \"2023-01-12T12:00:51.109709Z\",\n      \"minStartTimeNs\" : \"2022-06-13T11:02:51.109939Z\",\n      \"nextPageToken\" : \"64hj5533iozl1s9ykmnrq6yydo6haqszepufxiyof2cfitasztnk2r3m17due1rrov86fv2ksr7850tv330g8dzp4fsbgfbiqv3au4fqd2rb0jhrg5k94uzihv3q1d6tjtasce5f344mcoo96rzli955oo9api930glwrz1i9l0c5hlpads6qi6fyumujptp\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"8x3f\",\n      \"maxEndTimeNs\" : \"2023-01-11T13:12:51.110443Z\",\n      \"minStartTimeNs\" : \"2023-02-05T10:29:51.110496Z\",\n      \"nextPageToken\" : \"b4cxfc9exi4gfn1j5rdupquhbyhzt53eypmt7rdgso3b9ed9obqky7niyt42bpiafl5tli9mshs\",\n      \"point\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-06-28T10:26:51.110692Z\",\n    \"activity\" : 1703729236,\n    \"startTimeMillis\" : \"2022-03-08T14:14:51.110774Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2023-02-12T10:36:51.110846Z\",\n      \"endTimeMillis\" : \"2023-02-21T12:32:51.110928Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/273776\",\n        \"name\" : \"Aida Anderson\",\n        \"packageName\" : \"Devon Will\",\n        \"version\" : \"t72kdrsexr4sec1sbxhg73cwbt1i7f84533hn1256ojgjoktqecojqdlp1q3m5mutqxlyf3pgt47abi5gbm52daht30jxqgkt0xgmqmvgp07m0u3by0b7y7hhzz4ss8jxo2ievi2d9iblnqgxxa10vcw04i\"\n      },\n      \"startTimeMillis\" : \"2022-09-20T13:20:51.111798Z\",\n      \"name\" : \"Karrie Cummings DDS\",\n      \"description\" : \"Eum et voluptas. Omnis eos deserunt omnis odio distinctio possimus. Non recusandae amet voluptas sunt ea. Cum dolorem delectus in quas quia.\",\n      \"modifiedTimeMillis\" : \"2022-04-22T12:35:51.112121Z\",\n      \"id\" : \"245f\",\n      \"activityType\" : 272009164\n    },\n    \"type\" : \"unknown\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"2l0c\",\n      \"maxEndTimeNs\" : \"2022-11-18T14:10:51.113969Z\",\n      \"minStartTimeNs\" : \"2022-12-30T13:50:51.114043Z\",\n      \"nextPageToken\" : \"tk5fijj0qz4ztdnjavw42p7uv3woxd6o1acbnsq3igglvmqdung9bvp2hb0m5zeoayzmoi7074t6yp8zd3m6hnfafrejhuvlgvd79nvdvt6ee4xl8eq0eg\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"rj38\",\n      \"maxEndTimeNs\" : \"2022-11-08T13:28:51.114652Z\",\n      \"minStartTimeNs\" : \"2022-08-29T10:49:51.114719Z\",\n      \"nextPageToken\" : \"kntn6n7t0n2j6px024pt7vdmsb9polyh32ks7g8le5ewxpj8q9qkqv0bpguhkkpal2u16fvn0b10in3bv91thzn7c2p9jvwr6vmvxxrapm1p55h495k9qa665o2ors31ljhqiwl2y0ovmhj3fkcgj2kkjzprqxvn7v4ucek4v\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"a184\",\n      \"maxEndTimeNs\" : \"2022-04-06T13:48:51.11513Z\",\n      \"minStartTimeNs\" : \"2022-09-30T10:56:51.115199Z\",\n      \"nextPageToken\" : \"m2fud6su2jpux3t5w3rmng33sgm3uvkj9tuqcy0rbdplgfl3kshf3cn4dn8zpkruggzoyju69cmgvd\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"25vn\",\n      \"maxEndTimeNs\" : \"2023-02-10T14:03:51.115627Z\",\n      \"minStartTimeNs\" : \"2022-07-25T12:32:51.115701Z\",\n      \"nextPageToken\" : \"6oxculnkncw3qmf3zz05xsh5h6l3x8sq7iq8ykue7uzm24efwtv0bsu6hor723eo5uoncfvaf\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"78bu\",\n      \"maxEndTimeNs\" : \"2022-07-25T13:57:51.116065Z\",\n      \"minStartTimeNs\" : \"2022-11-08T13:11:51.116122Z\",\n      \"nextPageToken\" : \"3sa2v4jctjkculi835qlcf66oy6iae8hg0kulagixu7ddokagc1h6i3huswtzan45dpg7q1cn436phkwsh6vpow\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"8616\",\n      \"maxEndTimeNs\" : \"2022-08-26T12:19:51.116474Z\",\n      \"minStartTimeNs\" : \"2022-06-12T13:43:51.116535Z\",\n      \"nextPageToken\" : \"p67u545wefh8y3nn0op157j8716t7noi55alld4slbxq5og4l3yip0rqv0t3j22979brnvg232w84h7dx23surm9cnosx4oxfrolssv60v9wmo25i8vng4wgbzv74s0yleorztv54r07krbcqpv0evjru0rgdfc8yz81hih1nd9ch\",\n      \"point\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-08-04T13:35:51.116711Z\",\n    \"activity\" : 1730055121,\n    \"startTimeMillis\" : \"2022-09-05T13:26:51.11678Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-12-15T11:39:51.116872Z\",\n      \"endTimeMillis\" : \"2022-05-09T12:54:51.116951Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/057995\",\n        \"name\" : \"Charmain Gislason\",\n        \"packageName\" : \"Ms. Blake Reichert\",\n        \"version\" : \"z3ftkg9qkvfhlgikh8pvev5vzb2ns8gvurnsn8fqpcb2ll01g4jz6h553h3h3ba4ihju9155s1hg16znyib8f5eqbucehoyjuwdamqajtzxd9lec66n6pwcf2qcwc0h0nm4yvz25zh3958ue9fak1cwmssw\"\n      },\n      \"startTimeMillis\" : \"2023-01-10T11:40:51.117688Z\",\n      \"name\" : \"Eugena Kshlerin\",\n      \"description\" : \"Velit autem ab sed. Perspiciatis sit iusto rerum. Quos aut aut corrupti rerum.\",\n      \"modifiedTimeMillis\" : \"2023-01-06T12:57:51.117885Z\",\n      \"id\" : \"7q1j\",\n      \"activityType\" : 322419506\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"5icv\",\n      \"maxEndTimeNs\" : \"2022-10-22T12:49:51.11979Z\",\n      \"minStartTimeNs\" : \"2022-11-18T14:16:51.119858Z\",\n      \"nextPageToken\" : \"a50ssqpnneydblddkh9zsgbz0kia2pnqkvlxo02vze8tvefex4kp5r2ef5k6iscfusgha93ehqfgg018pp64e4qi0duxkawepiff87ssw3\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"wd12\",\n      \"maxEndTimeNs\" : \"2022-09-19T11:22:51.120283Z\",\n      \"minStartTimeNs\" : \"2023-02-24T12:53:51.120429Z\",\n      \"nextPageToken\" : \"g03ssrv007yn4kpx3iw0gpujz9cff3naa1nq0l1nu61pyud9b05hqaz7ov1jg0r6twfspnvt6z4s6uioqlxpvabzsmo6g4u3tlbub59t30h488s37r2fr490fpmd9085ll6hy04gdwqm0freixw3awlai2jblzh15ux32r76\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"do1a\",\n      \"maxEndTimeNs\" : \"2022-06-19T11:50:51.120945Z\",\n      \"minStartTimeNs\" : \"2022-04-13T12:34:51.121028Z\",\n      \"nextPageToken\" : \"vdrzn6chitmv5u1isynb9upx9n7y1z8zy2fqh2yfm5srkc60jh5\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"160f\",\n      \"maxEndTimeNs\" : \"2022-08-23T10:22:51.121413Z\",\n      \"minStartTimeNs\" : \"2022-10-10T14:15:51.121784Z\",\n      \"nextPageToken\" : \"fxhjycs7yhsvyti1tw0bf6cp4st2bozs976u5lz8gq5djbm40fy6q6ngxlj7l49gwkmlew8ed35tzdqr4kgzmh8caomuwlka4xo1\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"4e76\",\n      \"maxEndTimeNs\" : \"2022-06-03T11:00:51.122259Z\",\n      \"minStartTimeNs\" : \"2023-01-18T10:35:51.12233Z\",\n      \"nextPageToken\" : \"9f3ab7qcbeymqty01onqw9zphx7okkyld79zcnntulyhck5gdvhmikrmte3k08zbnfsjwbifgpc3vve121z79wnyjy5p2vig8314fwsiim1o55f8ss8rtx7l61rzm6eefms0dcktwfihbbb0u1ynqto6nzyz7f36965mi3mh5awwykvqwknksa5m1viw79ubpp\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"kt0w\",\n      \"maxEndTimeNs\" : \"2022-06-20T12:30:51.123196Z\",\n      \"minStartTimeNs\" : \"2022-04-01T11:20:51.123282Z\",\n      \"nextPageToken\" : \"qz1s7kd67bppp78ny8zhu5qoo8fg0xeeuh5kzjnvvlwov2g3k3xa1kpzbmlvhfvyoaqzxgr4vcyqw479\",\n      \"point\" : [ { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-01-10T10:42:51.123494Z\",\n    \"activity\" : 1642538197,\n    \"startTimeMillis\" : \"2022-03-14T12:13:51.123595Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-03-24T10:39:51.123681Z\",\n      \"endTimeMillis\" : \"2022-11-28T10:59:51.123901Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/951754\",\n        \"name\" : \"Donnie Kertzmann Sr.\",\n        \"packageName\" : \"Wade Nolan\",\n        \"version\" : \"5x80j2yk1ji4hfyizj87643awsvub3i3uxlgp3eshwvnjr0oufn9lmljj725rbe8szqdyw6jrflvp8721yjqtikxr2zzs\"\n      },\n      \"startTimeMillis\" : \"2022-10-19T11:29:51.124499Z\",\n      \"name\" : \"Devin Lind\",\n      \"description\" : \"Illo aut perspiciatis. Facilis quo a molestias nobis. Voluptatem et dolores quisquam dolor voluptatem excepturi voluptate. Est deserunt provident ea est cupiditate nihil blanditiis. Dolor vitae amet q\",\n      \"modifiedTimeMillis\" : \"2022-04-12T11:55:51.124748Z\",\n      \"id\" : \"j925\",\n      \"activityType\" : 1369723889\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"l238\",\n      \"maxEndTimeNs\" : \"2022-08-16T12:39:51.125254Z\",\n      \"minStartTimeNs\" : \"2022-05-04T11:27:51.12531Z\",\n      \"nextPageToken\" : \"g8mzb83xjrb7i2so03onn8z8qfihgx2kj6y4tkzaomq6ymb4pmdhiv9gr7l1n8y164hhf88dul9puplpsnbym7y6klds1uv62kg9fq\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"8xx4\",\n      \"maxEndTimeNs\" : \"2022-11-02T13:34:51.125598Z\",\n      \"minStartTimeNs\" : \"2022-05-15T14:00:51.125678Z\",\n      \"nextPageToken\" : \"t6p358cdnm3hvquntwn7palo4506oy7jhmq0u50w510rr3bd8y8dbm0knxr3o0pqhhqjgcjf5oh0ks9th73iel534gg8csxodb5sqxjbxff74bk518sr0gg951bvbo0gt9vy53enrnxxs\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"r0ak\",\n      \"maxEndTimeNs\" : \"2022-06-17T11:38:51.125951Z\",\n      \"minStartTimeNs\" : \"2022-12-11T13:22:51.126017Z\",\n      \"nextPageToken\" : \"h04s8rh3os0p6vlc3n9sdjvdbbut0s1lhkof9i2q3sx6k8mk68dq4micno5e7h6mcztqcggfes39sh4viyxrwqvnixd7zoq7jusap7md6hxhgbjg8\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"96k0\",\n      \"maxEndTimeNs\" : \"2022-05-17T12:29:51.126383Z\",\n      \"minStartTimeNs\" : \"2022-04-05T13:28:51.126438Z\",\n      \"nextPageToken\" : \"ehahp7t01fvigt7tlpdpsipsw4lcrgglznf0sxekdt885f1xnxka0ytietdztr9dcimpde6wyokslp6r1kgz3tmmfbu2j54xaarbfvktpdj3v8z9h27s6tvnl9khiuzzxf67n3tdep6cc7jc4fnrnv072349p9l0xxz0frt913jjenik6kvfoi\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"50h6\",\n      \"maxEndTimeNs\" : \"2022-08-30T11:54:51.127257Z\",\n      \"minStartTimeNs\" : \"2023-02-18T11:13:51.12738Z\",\n      \"nextPageToken\" : \"qkn54dviuuiw0zg07m1o2k6a3w2cenfq1q4v1lp1msppav0otux50s78jbpv1ewfnvwtiyr3eyx3vzbrsxf87k0p0xzoq28lczp61xiue428t0ipbkmcssujb94zyzw7b2paka1zpms3wdvyrg4yirr5guk9o\",\n      \"point\" : [ { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54b6767b-97ae-4888-b428-20a53187b216",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.128243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "60e523ab-9fbb-484b-a56b-0f31bebf531a",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/i745/dataSources/261s/datasets/7g7c",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"7031\",\n  \"maxEndTimeNs\" : \"2022-05-16T13:02:51.066883Z\",\n  \"minStartTimeNs\" : \"2022-09-04T10:41:51.066934Z\",\n  \"nextPageToken\" : \"6d6plzmfyvzu3uhgwo2pesi8fy6poo2122jackcia0tn35p9t6hzhciv2gca4dhpqvloxpoo44byw9oixz8pc3b11jywsxydn2l775jqo23wotj1ckv32i05bt2zt78ndp8jaxkgaazoi6m46s5v402rt8qd6kwxsqghn5cn519ung4ovb0kgn1e77\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"v07n\",\n    \"endTimeNanos\" : \"2022-03-15T14:16:51.067165Z\",\n    \"dataTypeName\" : \"Asa Erdman\",\n    \"startTimeNanos\" : \"2023-02-06T13:39:51.067283Z\",\n    \"modifiedTimeMillis\" : \"2022-09-23T11:20:51.067334Z\",\n    \"rawTimestampNanos\" : \"2022-03-14T12:16:51.067381Z\",\n    \"computationTimeMillis\" : \"2022-06-23T12:37:51.067435Z\",\n    \"value\" : [ {\n      \"intVal\" : 1039775238,\n      \"fpVal\" : 1.329569412848163E307,\n      \"stringVal\" : \"v2o92gatgkymwxlx8nw5h1odq7m5leefr2ounbwu9bjv9bcj3hxgg3zuzu3zxy68yii88wcxzn32s5\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1019228770,\n      \"fpVal\" : 1.2866154137257626E308,\n      \"stringVal\" : \"augwxkv1sq4ba12uueaaq1ikeln680w0moacb795\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 385666875,\n      \"fpVal\" : 1.6476486921460824E308,\n      \"stringVal\" : \"ra8a3vvm9e2y0904x1gg24ilyrb0risuekquh26ppvc6nuaq7r7shlt3tos90oxwgrfzt8eyueuwtyqjmo3fbx70s28dm7uxoj0t687tebo0w5dmppwp4dg0ilptkf73vleck2i4y3upln\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1328072318,\n      \"fpVal\" : 6.927149381228718E307,\n      \"stringVal\" : \"nsmmx8iqzw63zokyiuril9nilglealqqn0k50elokzxur8u3gnzttsmnco3h0tz6xq2dtr5npgj282nz7zsajn9600jcmn96ahixu1746hqoo46k36xyhavxe51jdx7aauqu1damfbcoqg8w0d3h9dgbq7l9vxdvgw4ohojp3cequ04n9f3z14lljtbjuxocdgln\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 270610335,\n      \"fpVal\" : 6.652240695866423E306,\n      \"stringVal\" : \"bq679r5va1laxkmgq9k65wl86cusxce7hez1ulv3bwc2f\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1034265260,\n      \"fpVal\" : 1.2993463449455278E307,\n      \"stringVal\" : \"infiiggfoixe0icqoq1pgzdx9mhenszqin3uw9xp4ydsym5678z0y7lgd4eyq9r61lsjzsacpmcsf96mwcesvzovxkt09fzppbva2az3sbk0dnpkg57f6vwbnf3ijut7llee2xbpvh8qkn0jx09m7jhtgwadpaqo91s4qi7wrft\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1122624290,\n      \"fpVal\" : 9.744593647064537E307,\n      \"stringVal\" : \"0oaz48ugbp6mrb4mpf1fnltx6ei3tknigesigromza8ok4fjej8tu7rutrs\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"5zg4\",\n    \"endTimeNanos\" : \"2023-01-02T10:41:51.068247Z\",\n    \"dataTypeName\" : \"Ethel Gusikowski\",\n    \"startTimeNanos\" : \"2023-02-14T14:13:51.068408Z\",\n    \"modifiedTimeMillis\" : \"2022-10-23T10:59:51.068462Z\",\n    \"rawTimestampNanos\" : \"2022-08-15T12:32:51.068526Z\",\n    \"computationTimeMillis\" : \"2022-07-15T14:11:51.068584Z\",\n    \"value\" : [ {\n      \"intVal\" : 1784394672,\n      \"fpVal\" : 4.2921366986060625E307,\n      \"stringVal\" : \"oqtj9qzwkusb4ytwimtufu0v72qyke70jnjtp5b4r9w84joqx9354kb8sfsm0h3tal2k0aqcbldi9uzbtzg9htap4gemu2xlh4ykq4ni184hx1ld40z8otbc422ltvxi581oas83fx4hdd\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1184986431,\n      \"fpVal\" : 9.789821542787185E307,\n      \"stringVal\" : \"b2834tgq7bqiduq0\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1629853465,\n      \"fpVal\" : 1.6938587260544204E308,\n      \"stringVal\" : \"cr2nersm5l5evekcd3nub45m3owv5jtm976sxz66qcxlfpjotdb9x0quouaacisv1iox75vtg2l0uvrxeusu0fwyfhwstkpnggdfhb7bungi6iq1osq2xx2fgpk2dyblv3wiaeydfn65nsphwvjtoeimr3ef8bzlom1y3ubedbky4frao\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 783593268,\n      \"fpVal\" : 7.063763506891601E307,\n      \"stringVal\" : \"dcaz1d18vxoi1i5k3viwpjg8f2ao0dncsnt3i436v2ee1gsd5v5wk1rywc6x07ah2wuv1uh1nzucjbcb8oky4h1rgx7tuogjr50oyw7kb91c5fhkde32buxuyw9d809go1gtly1pcvut5bcfr1pdii71ft38jiito52r9swb9ozj8tvfqev3pznrut63z3qaso\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 860181877,\n      \"fpVal\" : 1.7647205895261019E308,\n      \"stringVal\" : \"q53agqp0lsy8isqsug0omog0x8s0r4qai0x28nsaokkdvuhznm528zpuzz5oclmdkxm71xkmuib8qwffkj73l5pwv5vv2rq8poq1r5qagmud3kbamc2ndshlwdfmw73c5sp8a7pt1hocfzdf449mkzghuodtejwo7xuc6w9sinbw9eiqzwmvq6v9fdx8h5yowovcr2z\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 640855902,\n      \"fpVal\" : 7.239516980418836E307,\n      \"stringVal\" : \"vfn5hc63t9rwt0z5gs244a9yuih2srjg9giet83h3pqzipd1squ8w52qou5zr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 685076284,\n      \"fpVal\" : 1.6155582833578837E308,\n      \"stringVal\" : \"nd4nfsilmkpf7gvsudkmvh41ga4adwtugkod8d1mzurxd8icdmcn3za3w1uylgvpb9p2cpflve73mubfp7jlsjoohn9ckjt5kfrzid6ri4huzc8lgnt5ts1inv4g0mcev72bf6rmx1x97f7qsvzbagf1j778hjkdckjczq1021wuyzk38ukrhx4zbz6qorp8nulbp\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"ngm6\",\n    \"endTimeNanos\" : \"2022-05-26T12:34:51.069345Z\",\n    \"dataTypeName\" : \"Miss Frank Schmitt\",\n    \"startTimeNanos\" : \"2022-10-10T11:05:51.069475Z\",\n    \"modifiedTimeMillis\" : \"2022-11-06T10:59:51.069526Z\",\n    \"rawTimestampNanos\" : \"2023-01-21T14:15:51.069575Z\",\n    \"computationTimeMillis\" : \"2022-06-15T11:49:51.069625Z\",\n    \"value\" : [ {\n      \"intVal\" : 996770151,\n      \"fpVal\" : 7.613903609335024E307,\n      \"stringVal\" : \"q4cfsmccbi3qj160aebk30y0xbuwnzzwy5ny5aer5zreaj4zf99xy22rfbsa3wr0k39is0d30njkwwxw88kdlc2ayn7obii4tsue4gic91jnvowgmzorsb137gkyj5y8\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"v8sx\",\n    \"endTimeNanos\" : \"2022-11-22T10:41:51.069924Z\",\n    \"dataTypeName\" : \"Ted Mayer\",\n    \"startTimeNanos\" : \"2023-02-08T12:10:51.070035Z\",\n    \"modifiedTimeMillis\" : \"2022-04-06T12:30:51.07008Z\",\n    \"rawTimestampNanos\" : \"2022-08-18T13:17:51.070127Z\",\n    \"computationTimeMillis\" : \"2022-06-25T11:58:51.070177Z\",\n    \"value\" : [ {\n      \"intVal\" : 1715332979,\n      \"fpVal\" : 4.2824239614628013E307,\n      \"stringVal\" : \"9uwull17aab4735mydcpmon3mr11xbqj3gb4mv0o7r47jns4l1aimpya4hua1h92w6qyqwv4fme44jxmwjqj736w3ie8rc4cjhw\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1396332483,\n      \"fpVal\" : 8.979279240100462E307,\n      \"stringVal\" : \"lj3j1ochwdktzjy0jg63yk1zs5jpznfd1c663t6skwbu4m7bzed42j0n48ev2cdw9hzq6pau0v75isyy08wb8c5sq2l8htjw5jg29bvfdk116ycl3nlhl9n1recke5yekhqykw17\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 757834245,\n      \"fpVal\" : 2.591561293317163E307,\n      \"stringVal\" : \"1gehadwn3uc5z4sramgw93k0r93uon6jyeqxow597d04h3mko6xk7ixeomftm1xfb2crvcvsoc6s51fo5v5ag43j100uwb8n9hg9jxwdi3yzudyms5x0c1c4lslpetl4zaldvgnnxlduan1z5v876y\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2007274530,\n      \"fpVal\" : 1.6971637091261132E308,\n      \"stringVal\" : \"s5rxjlyf3w4y9sqzdqak0k8it08fg21hf5ef7mkl7xx40tktu6hq2r4r1e\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"x209\",\n    \"endTimeNanos\" : \"2022-12-29T11:52:51.070683Z\",\n    \"dataTypeName\" : \"Maxima Okuneva\",\n    \"startTimeNanos\" : \"2022-12-31T13:25:51.070793Z\",\n    \"modifiedTimeMillis\" : \"2022-06-30T13:04:51.07084Z\",\n    \"rawTimestampNanos\" : \"2022-04-16T10:38:51.070892Z\",\n    \"computationTimeMillis\" : \"2023-01-23T13:01:51.070939Z\",\n    \"value\" : [ {\n      \"intVal\" : 280858870,\n      \"fpVal\" : 7.775221122984686E307,\n      \"stringVal\" : \"wg8914miyrn4b2q81kei0w2sd9nfnokcazcrg3hbfsc6jxqk19m0magfn6y453eh545dt1nkuybrvx2wnsxqw2ozwde7t5ehsen19c9gf0w9wejt8xyd0st9tzxo7n8g8z1otqis563y40wmwjnp8gnjanh7jvhss7tt0\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1017417478,\n      \"fpVal\" : 1.0702270724962525E308,\n      \"stringVal\" : \"lj0bx6gkt8hgmearsx8f6kmf7yc7nunl13js80gz9siuqfq2plyzlv28hdm94bwos4mrfhhe13hr\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1533435010,\n      \"fpVal\" : 8.198859196268138E307,\n      \"stringVal\" : \"98d3avp1uq0ntspoy204e70lvuk3h8nbcl8wd3iorfdnelwe7sovgf7z4efca41mx1ha7gsf04al4xrrem00ctnq\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"ekq3\",\n    \"endTimeNanos\" : \"2022-11-29T12:50:51.071428Z\",\n    \"dataTypeName\" : \"Ms. Aldo Larson\",\n    \"startTimeNanos\" : \"2022-09-23T13:50:51.071541Z\",\n    \"modifiedTimeMillis\" : \"2022-06-20T12:06:51.071591Z\",\n    \"rawTimestampNanos\" : \"2022-09-01T12:23:51.071636Z\",\n    \"computationTimeMillis\" : \"2022-06-08T10:50:51.071685Z\",\n    \"value\" : [ {\n      \"intVal\" : 188920548,\n      \"fpVal\" : 1.6760676687243891E308,\n      \"stringVal\" : \"8tv0nxwzhcvjbsilldp0mc90tmitgmtqwzlv3321aygtnr2wom2aziql5em5u3l2i87yu346j8tfkk86rsuu58imvnur2tefjd5o0su8n2oikwffz0bzw6tbfzcocg1t7kjtajlg78kutv4rkgz2tj5f\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1107050295,\n      \"fpVal\" : 1.4882402954139394E308,\n      \"stringVal\" : \"hr1v1qh81giwt455f85l6t1zu08sghtknx1hhq5nsaah8893lhlt7bspesdi9artz2yossceuidt7skkg09hs6fqswf9ndwi54eil0xhkub4ezyujolebkj6b6tykp5aqx7eaitilvb361klb7lancrcfrprzis6a6a4efyv\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"pu85\",\n    \"endTimeNanos\" : \"2022-08-23T13:44:51.072062Z\",\n    \"dataTypeName\" : \"Lita Pollich\",\n    \"startTimeNanos\" : \"2022-11-15T12:24:51.072172Z\",\n    \"modifiedTimeMillis\" : \"2022-06-04T12:01:51.072218Z\",\n    \"rawTimestampNanos\" : \"2022-12-21T13:53:51.072265Z\",\n    \"computationTimeMillis\" : \"2022-08-28T12:14:51.072312Z\",\n    \"value\" : [ {\n      \"intVal\" : 855409002,\n      \"fpVal\" : 1.6087430912937972E308,\n      \"stringVal\" : \"gynr3c6vderxwzo5f3hhe9yyd7lsjuy8f3joi7jc8020qqs9xa7ag5h9cgnmkcnkdpw6g9kmgqse7gwj8bdzbtoactqdgzm4qis3mtykb6ozpumi32vwse7q7spep8pohshueb3rhnssvr\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 125464381,\n      \"fpVal\" : 4.833442185546997E307,\n      \"stringVal\" : \"ug70yt5oxm792x90mllr3smotnwr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 982341804,\n      \"fpVal\" : 5.920640683568237E307,\n      \"stringVal\" : \"amxhwf78c0wtfkwq0y9mslfsha0lrk0mzt5gis7vahtq06ct\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 459080953,\n      \"fpVal\" : 2.650057767206899E307,\n      \"stringVal\" : \"1wwdi6bhwrh\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1644666932,\n      \"fpVal\" : 1.6372042611344972E308,\n      \"stringVal\" : \"2spcbvsnytvtkgs9yke3fxd2h8natk26k86wckjf31fkrfqbldgsf4age8updhdfynsynhz158x54eenaznonwgvdb85abxk759itp7qr2c9edqbx9j1npqyobc2tomrwtbkkcx5ah7o\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"341m\",\n    \"endTimeNanos\" : \"2022-06-10T11:57:51.072918Z\",\n    \"dataTypeName\" : \"Mr. Erika Hettinger\",\n    \"startTimeNanos\" : \"2022-07-14T12:06:51.073041Z\",\n    \"modifiedTimeMillis\" : \"2023-03-03T14:15:51.073112Z\",\n    \"rawTimestampNanos\" : \"2022-08-16T14:07:51.073174Z\",\n    \"computationTimeMillis\" : \"2022-03-05T13:02:51.073234Z\",\n    \"value\" : [ {\n      \"intVal\" : 339573198,\n      \"fpVal\" : 1.087609842916116E308,\n      \"stringVal\" : \"u7qsle5lwwen3twtiyrm1tbvkr34wakkmj5c9ax9q1bu9cdkyqo1k9041wxgaxa1\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1785817438,\n      \"fpVal\" : 5.995082452486609E307,\n      \"stringVal\" : \"fo75f6jyiyg\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 109051175,\n      \"fpVal\" : 1.6051241401848912E308,\n      \"stringVal\" : \"guya5o8rsv5ae1k3x2keb3gv08xr32t48qblgttx2hpnitl8py6tsty02tyqthvfpbzl36c6t28ms2sysxz0sew7ga92jsip798jxuuwbc3j0\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 637535837,\n      \"fpVal\" : 8.491709916873868E307,\n      \"stringVal\" : \"3ejtqndhlxwyr4xof1plmjt8ekwjkvycnk2oufegw3ra0g5o7ooo27k1xtz\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 714608442,\n      \"fpVal\" : 5.963324631244672E307,\n      \"stringVal\" : \"xkewb3t4j7fe8pga98riuj6p95tzvg0yykr7gkxfu45eiei9vugskt8zgxxet6asymatg4qt9cp9xmt53527m61extzvkykmf6bid9k62adpmaaxh2j3c58javaidvt2r7qfm5a73ksk3lstowllrbfxl9yv\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1912774672,\n      \"fpVal\" : 1.1027910848644016E308,\n      \"stringVal\" : \"f7kcag1od7z0x8d1w1gahfgik32t5xnmhy8at8we47gp0dmltxvcycmidxcl1ryuv66vqrbngtolbo0dcxkl7468g73p6gfvjzwmcypungebzla0z7cigckdkoxn46wxyc4jwnjb29y1utxjr1onn3jwfmg65hy18mwdd9xrpsgegflpwpzde5gbv\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60e523ab-9fbb-484b-a56b-0f31bebf531a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.074441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "455837f2-e8e9-4bf2-95d5-d039edddb5df",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/a1o8/dataSources/9i38/datasets/oez9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"f24r\",\n  \"maxEndTimeNs\" : \"2023-03-03T12:47:51.064893Z\",\n  \"minStartTimeNs\" : \"2022-11-08T11:41:51.06495Z\",\n  \"nextPageToken\" : \"ru972aludrqcsv4asm076b6g8k5scqzwa7hdhuwth\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"dg0t\",\n    \"endTimeNanos\" : \"2023-01-13T10:43:51.065254Z\",\n    \"dataTypeName\" : \"Mr. Paul Douglas\",\n    \"startTimeNanos\" : \"2022-06-29T13:05:51.065386Z\",\n    \"modifiedTimeMillis\" : \"2022-09-22T13:23:51.065456Z\",\n    \"rawTimestampNanos\" : \"2022-05-20T13:37:51.06553Z\",\n    \"computationTimeMillis\" : \"2023-01-16T13:10:51.065609Z\",\n    \"value\" : [ {\n      \"intVal\" : 443724754,\n      \"fpVal\" : 4.004266400351538E307,\n      \"stringVal\" : \"9ps5kjpcnp259rxrd2i1f8fu38iazsz\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 680476300,\n      \"fpVal\" : 4.735599299670041E307,\n      \"stringVal\" : \"2kc1th530ztd52d20nilh4gy8ozwdrhfc24blswpuege51c9tl71ahk9hqsh2dz65an1cjq6naw8hf5h3mp3r29pz70hepgk8iatp9w6jpo05qn5suh1i5lbun1ib8f8pugy62aiqdxedhqq2pyyptvtnry2yoi6c4yrpqcpp6ymg0lzs21p1aiuxr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "455837f2-e8e9-4bf2-95d5-d039edddb5df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.066607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8083e0df-8783-450a-9404-8d85593f8b45",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/124i/dataSources/4kzk/datasets/wm5o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8083e0df-8783-450a-9404-8d85593f8b45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.064101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    }
  }, {
    "id" : "0713d770-b8e2-4a72-aa9a-08640fd41e4f",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/fqc0/dataSources/r33b/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"gc1v\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"99v2\",\n    \"endTimeNanos\" : \"2023-01-16T11:25:51.040756Z\",\n    \"dataTypeName\" : \"Kasi Cummerata\",\n    \"startTimeNanos\" : \"2023-01-18T11:52:51.040918Z\",\n    \"modifiedTimeMillis\" : \"2023-02-27T11:30:51.041003Z\",\n    \"rawTimestampNanos\" : \"2022-12-11T10:55:51.04111Z\",\n    \"computationTimeMillis\" : \"2022-11-25T10:45:51.041176Z\",\n    \"value\" : [ {\n      \"intVal\" : 1015423719,\n      \"fpVal\" : 1.291849077096151E308,\n      \"stringVal\" : \"huh82ojnrso9gdohycuv8as1mifw52j9acd87s9b756hrtlv57houh5tt65jemg5d40ijua1uhsw2riflu5lgy0tpch7wazp9rh3cc0b4cre82gg8tu3n61vt6iw3ic20ceasm4b9vlo5z6kz9c01g3df1uwvpou4nmwnmhnk0fte\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1633977021,\n      \"fpVal\" : 1.2916585977460254E308,\n      \"stringVal\" : \"6rxq6q0sv\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 987573192,\n      \"fpVal\" : 2.652134782781248E307,\n      \"stringVal\" : \"srhbdw7xi0481spb29x1p3cj\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"a5mc\",\n    \"endTimeNanos\" : \"2022-10-22T11:17:51.04166Z\",\n    \"dataTypeName\" : \"Brant Padberg\",\n    \"startTimeNanos\" : \"2023-02-13T10:25:51.041779Z\",\n    \"modifiedTimeMillis\" : \"2023-01-16T11:56:51.041827Z\",\n    \"rawTimestampNanos\" : \"2022-05-20T13:08:51.041877Z\",\n    \"computationTimeMillis\" : \"2022-03-21T12:40:51.041932Z\",\n    \"value\" : [ {\n      \"intVal\" : 779345239,\n      \"fpVal\" : 4.525731088549973E307,\n      \"stringVal\" : \"l5m7j04kvfodlzf2aj33fh85hymanq10rqh1yis0bf6xc9aye3k2i87vlipsgmx69udrrb4lwkc1uo9kf810q8xsbw9trdplamzxqo5jhxr4202klvustrmwoth52a876d3k7tmnay2b29sy\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1938385719,\n      \"fpVal\" : 1.0345713698307141E308,\n      \"stringVal\" : \"3jd33xdv11qtkfx4wjqhf0y8g0iop1ibsfz7o2uvpflmisqm4xsov7ex8vuaa6dd78p78cup9g37yapkjrt97f2dlnyic6l703xa68i5kknk7pnd649o\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1309560203,\n      \"fpVal\" : 7.273226288841694E307,\n      \"stringVal\" : \"bbahrzrby5mjhycyuduy05mzdedlum8m9c1o806vera6ydpx54bwpbli99n20cpipj1mxwrskenluvplbqffxlkth2g0jo7je5pydqoybrabdm9b374epph7m7dja68ccwxdiwm5pua1e8w83poi\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 784908093,\n      \"fpVal\" : 1.2764721781497311E308,\n      \"stringVal\" : \"6d2w7uvfa2fu156iovdtqr6c1ymwogt2esbhpj17da674xi63wejidix\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 168287701,\n      \"fpVal\" : 1.3857000535120682E307,\n      \"stringVal\" : \"mi7o6fr6jycy65xihdb12x3qlmhkz4enr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1527409282,\n      \"fpVal\" : 1.283607815678745E308,\n      \"stringVal\" : \"43gj08p2obuljyu5ovg5htrgpbp46chsaf8v1rfb5onhhcp78hx4ys6cirhgoosy5cyeks5n2jblgr153jpw5s8apv69f536w023un8w5a2t547o78alrnttc8k1os5sa9hobpnfo78xapr7g1baakoaxinvqr7xoflklkfq5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1896755325,\n      \"fpVal\" : 4.572533723472324E307,\n      \"stringVal\" : \"1pw8\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 833147466,\n      \"fpVal\" : 1.7923732351172946E308,\n      \"stringVal\" : \"vrg0hbpklae4w1dl79gndl2xcxk90rdtymaphtdzw8w97mkpwlrutb73ch5msb534n0qvfgwe3xihk1x8g5qiqsct5ih6ll1g6cvz60zu5z4bbhzgffo7gcufi7bx6mpq2p8z8i06hg7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"1205\",\n    \"endTimeNanos\" : \"2022-08-04T13:14:51.042869Z\",\n    \"dataTypeName\" : \"Trudie Dach\",\n    \"startTimeNanos\" : \"2022-07-19T12:28:51.042989Z\",\n    \"modifiedTimeMillis\" : \"2023-02-01T13:43:51.043049Z\",\n    \"rawTimestampNanos\" : \"2022-05-02T10:35:51.043135Z\",\n    \"computationTimeMillis\" : \"2023-01-10T13:40:51.043254Z\",\n    \"value\" : [ {\n      \"intVal\" : 701580732,\n      \"fpVal\" : 1.5926164564328505E308,\n      \"stringVal\" : \"h43ui9oil0w86n9qk168111k2fol3s31bup1qxdccd0nolco92zbtu2u3vhc7gu0aymkelwu1posytywq65j6pn\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1240743940,\n      \"fpVal\" : 6.971929697142073E307,\n      \"stringVal\" : \"p83gcqvutj04pe1evixocc0wxl21brsxf6uo4npgi1xlh2fi7qukvj4n3uk7pyuou22c05vfmm4dqae6qumnoal75gepq3r43wkb7a8s8q6b7m6c5bqtf2wq4o5ctautowzqeqqzstfndhe53fhyr35iis0by2pj7uvvw0rfef6icvwgvwk7lkst9dz27ky17y1gnh5\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 289895207,\n      \"fpVal\" : 1.6978020764596304E308,\n      \"stringVal\" : \"t9mgltmznj26axx1ll73c5yikqj3xnwna6\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 194256181,\n      \"fpVal\" : 3.804312717863874E306,\n      \"stringVal\" : \"7enwj79ifpsrn8r0pj6rf8svuxkzl6x4j32uq7yktjnktgzigjsqqn0xt7tdh3e2uk0gjrdzvt3phup1sq3z9l3xvzheq7zmgxe9l02ll5g28yiphf3dgavqnfnx4nxmuvnxd14rn69k1j3ak\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2067350112,\n      \"fpVal\" : 4.85560965331142E307,\n      \"stringVal\" : \"yd065eyq08z03eh6sfsqfzjvw\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1292182060,\n      \"fpVal\" : 1.0812893913195224E308,\n      \"stringVal\" : \"fvzckuzhwlwlmeiv70vfsfwz526mw3gme6iqpcg4nbwsnuxoappspvcj6u1ttqstyvlro73i8yu0s8gqvinj7joufebcn1fseg1xac1mabd19o7v3umlaqxvr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"cf39\",\n    \"endTimeNanos\" : \"2022-03-18T11:37:51.044279Z\",\n    \"dataTypeName\" : \"Maybelle Huels MD\",\n    \"startTimeNanos\" : \"2022-05-09T11:36:51.044534Z\",\n    \"modifiedTimeMillis\" : \"2022-09-24T13:46:51.044608Z\",\n    \"rawTimestampNanos\" : \"2023-02-08T10:21:51.044683Z\",\n    \"computationTimeMillis\" : \"2023-01-22T13:23:51.044755Z\",\n    \"value\" : [ {\n      \"intVal\" : 1073616972,\n      \"fpVal\" : 1.7872885422094213E308,\n      \"stringVal\" : \"hp2t0feqqo6mfha7zjmzz34m7vlsv4y3gnpelvda4mve3gni40nki56yp414atg7k\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 303280644,\n      \"fpVal\" : 2.413863768566994E307,\n      \"stringVal\" : \"oymwsy8v14idzevaox9wt4abstnp3stlixo7l9ftxkl4paupphpbtz2jol9so4x1brood6wsxavbqb0ayndzqwya99o0fhjov6\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1878296105,\n      \"fpVal\" : 2.5136394951087685E307,\n      \"stringVal\" : \"q0qhc6v6kala5pvl9qgkj56k5m42stdm70y6v82fimgijlhsxop8qx9qptjp153ycextgtzac5s0otfe4rkz2zls6iaxju20hzw9vcf3fouug9owgfsiutxy34npetermu789fonev863p91h7bwixykacf2yrg3aga0cklpqtz9dtl9pr\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"c5g4\",\n    \"endTimeNanos\" : \"2022-05-09T11:33:51.045459Z\",\n    \"dataTypeName\" : \"Christa Bergnaum\",\n    \"startTimeNanos\" : \"2022-08-13T13:14:51.045617Z\",\n    \"modifiedTimeMillis\" : \"2022-10-03T12:27:51.045693Z\",\n    \"rawTimestampNanos\" : \"2022-08-25T13:46:51.045766Z\",\n    \"computationTimeMillis\" : \"2022-03-28T14:06:51.04583Z\",\n    \"value\" : [ {\n      \"intVal\" : 1213807815,\n      \"fpVal\" : 1.2922050669302879E308,\n      \"stringVal\" : \"7kg059af30gvogntelibupnz442ez7jlhpv78m3qflt6k9zamxu2uk0peh2afcakeldxryc71jtxpvxupuyu9mfcu8s7r3s2y00syt7crctrc5dqxszzulyc35qmupidjbje2sabsygsg7f19gbnqlr0xofn5hdy68nuvvnic7y0q3i9d4945zjdw1\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1481968576,\n      \"fpVal\" : 1.4123282110130412E308,\n      \"stringVal\" : \"x2dsrjrvamffa9k74h9u3jqfqgh1g120h2idwkqhq985uvy5ossupl6qd4b7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 605340043,\n      \"fpVal\" : 2.41446044565701E307,\n      \"stringVal\" : \"qigd52cmuxc2y91bhij7hfhn8prx5kihfbdzzgdfh2idxs9xzrys77zt5i0m2j7isn8wny1f0e3iwcgvasab3hi0bt2g1916zixz8mfb3t7\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"vl9x77dkjoc0f1svws1kf86kc9ni0j0d0o2\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"9sk7\",\n    \"endTimeNanos\" : \"2022-06-27T12:29:51.046624Z\",\n    \"dataTypeName\" : \"Cristie Hoppe\",\n    \"startTimeNanos\" : \"2022-11-17T10:59:51.046893Z\",\n    \"modifiedTimeMillis\" : \"2022-09-20T11:43:51.046957Z\",\n    \"rawTimestampNanos\" : \"2022-12-21T14:14:51.047014Z\",\n    \"computationTimeMillis\" : \"2022-11-03T12:42:51.047087Z\",\n    \"value\" : [ {\n      \"intVal\" : 1197676646,\n      \"fpVal\" : 6.664231725852052E307,\n      \"stringVal\" : \"pxgrftjjwbv11pkznh2euunxdxeny4pw9rtral7yxiufeberyssje6kuflgx272e8395j2lmpo5v25zli276gmciet8ouwv9eww78es748chk91hvjz4t2rer6jqmms8j7ipjbtegvvgc1j40c4o2qeoucz4noa3q0v9uffq3tlau4utyd\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 738840233,\n      \"fpVal\" : 1.557062857577356E308,\n      \"stringVal\" : \"brqq1rw0uz0t7k8njaddbg56e1helm7xbj30t72dxz4bkl5e2qf1ium1jlojfh87nnyg0r6n19z0xkj8ksh5ajm\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 657319943,\n      \"fpVal\" : 1.2576783455255493E308,\n      \"stringVal\" : \"jlcma94t030k2h8aukqbfx7d5q9fg139jn9xyjw1x8ats570vwvrzgnqwh0wukjajf33zuqbn52q40lxfq346xcqudz6wndzf6r8kbeeqid751u7tgcmr2d2fj\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1049205646,\n      \"fpVal\" : 1.319684492353504E308,\n      \"stringVal\" : \"gkppucbwxypsvc7j8xxjswy1z5jznidkqg8qj85kgxay686pdes438x4wtjhrlo20n8c\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1667697637,\n      \"fpVal\" : 9.779456226810452E307,\n      \"stringVal\" : \"ti1q0cwdgi6ovzy290nq4pi6a7jpnhtx6dfqjv6i6btez0ttuhx43g\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1279491219,\n      \"fpVal\" : 1.2114622971868668E308,\n      \"stringVal\" : \"aap48k3rt0udwz6c2zrh7cqg7xinwm9tk2aetovz9nrupvlsyi93ict9xr5qw80s4f258p63fhps1\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 847101904,\n      \"fpVal\" : 1.1459343125560712E308,\n      \"stringVal\" : \"8z4lueemm4f8jv3oo49j82qtkpotqmmptmw4pdlvaodkuu2aboz5wkm5ipzj7ym0r8oj7ebelo3d9gwn9t1lfhwppzgogatojyyem5gw5ls7uhrn35kbnj6994fkigd\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"v446\",\n    \"endTimeNanos\" : \"2022-12-31T13:56:51.051229Z\",\n    \"dataTypeName\" : \"Brady D'Amore\",\n    \"startTimeNanos\" : \"2022-12-05T13:56:51.051609Z\",\n    \"modifiedTimeMillis\" : \"2022-12-22T13:35:51.051683Z\",\n    \"rawTimestampNanos\" : \"2022-07-01T14:13:51.051734Z\",\n    \"computationTimeMillis\" : \"2022-07-05T11:35:51.051785Z\",\n    \"value\" : [ {\n      \"intVal\" : 1119413088,\n      \"fpVal\" : 1.6722516413183765E308,\n      \"stringVal\" : \"wrla25ye0ssch0czi8cqckzn1n0zkppxp0zgyuhvuh7vnviv\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"647z\",\n    \"endTimeNanos\" : \"2022-07-11T11:59:51.052126Z\",\n    \"dataTypeName\" : \"Eda Koepp\",\n    \"startTimeNanos\" : \"2022-11-14T11:52:51.052282Z\",\n    \"modifiedTimeMillis\" : \"2022-06-17T11:42:51.052352Z\",\n    \"rawTimestampNanos\" : \"2022-09-18T14:05:51.052418Z\",\n    \"computationTimeMillis\" : \"2022-11-04T12:55:51.052486Z\",\n    \"value\" : [ {\n      \"intVal\" : 666588206,\n      \"fpVal\" : 4.539674703961508E307,\n      \"stringVal\" : \"2o6ixulldl2dq4mjlbe5gb42cpby3xbmkkcyiro39prowbjs1iqvgtwjny7hn8wlz37v18skv0ypg07ahqlwgzuh6li5l8yjkq7cbju9jvf0sf0900ekkcodhxdxb8sbmvnw20\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"8sh0\",\n    \"endTimeNanos\" : \"2022-09-16T13:07:51.053608Z\",\n    \"dataTypeName\" : \"David Towne\",\n    \"startTimeNanos\" : \"2022-11-22T13:18:51.054131Z\",\n    \"modifiedTimeMillis\" : \"2022-03-24T14:08:51.054233Z\",\n    \"rawTimestampNanos\" : \"2022-05-14T13:32:51.054311Z\",\n    \"computationTimeMillis\" : \"2022-07-04T11:55:51.054378Z\",\n    \"value\" : [ {\n      \"intVal\" : 738868961,\n      \"fpVal\" : 5.314936632916177E307,\n      \"stringVal\" : \"meik0svvuyqan1py0aej313s6t9geil42xw5mxdkcv1bioafufh482fcirzgycy2swgnfx7t73msw3432ljgpo4wt7dw7l3sqr9u9mloyo68hv4wz1seyow2hpsk9tmikkcl5u44954k1cw0adizq52o4\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1499565770,\n      \"fpVal\" : 2.837036041624189E307,\n      \"stringVal\" : \"5fzo7yd99wdnavdyrwow0i8pe8zvkev1jcnwsn344esuizwbtcl903kt5hmfaij7rnjbk26zynop302r77smm8g28afavfs7cvr8l7ck\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 680535721,\n      \"fpVal\" : 1.2441179728577208E308,\n      \"stringVal\" : \"9rkaokgv9o5hv0ax68vv0soamhgwgusdptviat1sql40rrh5s7wu64u5aq81p6oxjf\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 229217851,\n      \"fpVal\" : 3.419792753744803E307,\n      \"stringVal\" : \"pf22pwg6un3690j53xnip9055hq5mzaq46svfl4t44p088p708suks03naqe49wctq2bpnizsmolfjn5xu0bmns6d0xo596bink6rbaoakfur8ke\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 888059694,\n      \"fpVal\" : 5.063906382257746E307,\n      \"stringVal\" : \"6vjm3569yiw7wjuz118ur90do6ryty6cl6e2ycg91k5fhr1tejryl7parn2h8tr81oui1e2tl1r73n54iylah7859fxu50qi9m343\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1079609752,\n      \"fpVal\" : 9.917509325361243E307,\n      \"stringVal\" : \"ggb1z4gtk2klv023kl3v4edd8kikszt9cbk37f509\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"yyot\",\n    \"endTimeNanos\" : \"2022-03-14T10:52:51.055788Z\",\n    \"dataTypeName\" : \"Monica Okuneva\",\n    \"startTimeNanos\" : \"2022-10-21T11:58:51.056515Z\",\n    \"modifiedTimeMillis\" : \"2023-01-17T11:24:51.056737Z\",\n    \"rawTimestampNanos\" : \"2022-07-10T11:01:51.056985Z\",\n    \"computationTimeMillis\" : \"2022-07-04T12:43:51.057268Z\",\n    \"value\" : [ {\n      \"intVal\" : 1329842863,\n      \"fpVal\" : 1.0188467509532783E308,\n      \"stringVal\" : \"4lujjopiza450dfoi4t9q32jul48o3p2h7blhwfdbk90ew8ssvmkg3a3zxhx7l117bdlktno6pzmgtg5pe9y636lw4ybcfdw0mf2p7sib6vhc1mqhuo30lx1mo351imhtkm5df2crndfsnmolz1zanruhvb4cdi55pzs2ohil3puvwojl5dm0ph\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1581366408,\n      \"fpVal\" : 2.863746626572328E307,\n      \"stringVal\" : \"mc0c3mhndxn0pmxp2br3dbiub1hwlyxd6wykyh3pch12hj190nqx9ueh2n0\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1848470700,\n      \"fpVal\" : 7.472268383270613E307,\n      \"stringVal\" : \"arpynk4dxo6m05kpxmnhgxws6rbowvna3nd2z6khon2vsoahzxienln2hhnke87hrmzi8kgqvm5qm45eylod3q4zt74f5nq7q0ricyk8bqmynd9a3rm8zq8r56edlewhlisrpkg3umhki668l2nc7fp\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 439308311,\n      \"fpVal\" : 1.5084472387162307E308,\n      \"stringVal\" : \"zy9fc3kw5e89pxovsfxite7o475g5g5bpwkvflig00vsc1bbue06659h9mpdpsytcdyh08is1myjq133ytak7dqwinfbb0jx2f6u3adbqivywb1wsnw6xue5pklfyas84z435u2ul9chie9xvy3\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1958576422,\n      \"fpVal\" : 5.787246070638885E307,\n      \"stringVal\" : \"k2vhmz5ilo417013tgf4nvxdj9jee6y7uuffbccslwyuau36m54v3076o0in9nj8glds7mqpmoj4yr1yceclwohfahm3y8zf8itfv1a03z84ete100h9f79eyf00q988fusaihd3ktztrxwto7y4slpy03nnllfrak96duftkvagkbdl9tsq2qprsczbiubtnxo\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"sw02\",\n    \"endTimeNanos\" : \"2022-12-01T11:53:51.058608Z\",\n    \"dataTypeName\" : \"Arielle Beier\",\n    \"startTimeNanos\" : \"2022-11-23T11:15:51.058798Z\",\n    \"modifiedTimeMillis\" : \"2022-05-12T10:40:51.059135Z\",\n    \"rawTimestampNanos\" : \"2022-10-03T11:50:51.059412Z\",\n    \"computationTimeMillis\" : \"2022-06-23T12:11:51.059695Z\",\n    \"value\" : [ {\n      \"intVal\" : 1935167316,\n      \"fpVal\" : 7.614026037777423E307,\n      \"stringVal\" : \"sy9pto45bhv81vpwc9usfpq9kuxkehrx4xnqy1jtu8qxdoz01h6vwyqfrbm3luckizk4svhjxob4b71zmr1xgqzlfr3vricvquqfq9umr9h\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 741650447,\n      \"fpVal\" : 1.3971093375392646E308,\n      \"stringVal\" : \"wdvilhzhismuizuhqhx3pe7ql5a1k3lpp9lghz0x41j6s13boeonybbvt36nehj1u8qf8xjhda8rajzplcg9phvb03ds2468sym9rxk68atyd91up769556d7kegwy97jnp411jbwamd8j64g7wfay5iy0ds12p5fqwj\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1065644196,\n      \"fpVal\" : 5.702274554193815E307,\n      \"stringVal\" : \"h7yjrq0j77mht1gg27rmhobsjh5v7merl5zjvozle17izx97ln09wwtz94rygmp188cuh2hmw669we8t4bg67tfaffg0vh6885spmccswijcdpa7323cipkin0qpvbvwjv8g9ett8\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 2020182471,\n      \"fpVal\" : 8.505403205110535E307,\n      \"stringVal\" : \"tecu749s0cgmdcwxcoogygrttivchj54r2z2p4mtq03jrrmz3s7kkuivny4hmojfk337plzo4207gg1snfx06f59u7m8j67r0tozqb35mdgmf749c1qtcvjbrvos5smmf4mdtzze8j1w4wsty5e5xfu6zyulvmspxrhxdn7oiu5tb\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 513333066,\n      \"fpVal\" : 1.6830536324868918E308,\n      \"stringVal\" : \"tvwbji7thaw11nkojryj45dbychkabqm4n1z6rjrgotd8r276ghh90fzt6l1knn1ztrly29mo3xk6kb0jtgop0d2r1lhm7ptjqbm7q5n6g\",\n      \"mapVal\" : [ { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0713d770-b8e2-4a72-aa9a-08640fd41e4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.0632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d67f8afd-34a9-4ff5-8ca8-91c4ce4017b7",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/pk37/dataSources/7000",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Margert Mueller\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/815054\",\n    \"name\" : \"Mr. Dong Marvin\",\n    \"packageName\" : \"Carmelo Windler\",\n    \"version\" : \"np1vzef1mzh1up69d2nnc63hvyizo0mys5zemb4gpc3n7we457pmrqmkco7u9eqazt1z4gaodo\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integer\",\n      \"name\" : \"Bari Spencer II\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Phillip Morar\"\n  },\n  \"name\" : \"Leonardo Hilpert\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureEsh2010\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureEsh2010\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"90sw\",\n    \"model\" : \"n8snae0ee3876highudz25ce2c7p2he1sz50do04lsxnvhvr3ihipvwlwzifxpefbt629fvzzxnk5m354cwpfnu13k1xf4wi0vf251cnj8qn0xjey7xermo8ed6ntjrd3w0euco23bjcpsj1js7fher6fc\",\n    \"type\" : \"phone\",\n    \"version\" : \"ybjt2grng2p0g6k2p52p493farjdvqvfr3dpv95jhgkhift8k7n80byr2qync4ekawztz64hp5yiqu0yrhkywoyk3xrkiwenqjvh1b59gxev7ti7zi01x2h9diz7evjnhs4c5wvs6n42nhbrij4l2awe0qk57xtwq13rklcwf389up6qdmefct7f0j9ahy7ydgzpe1a\",\n    \"manufacturer\" : \"nnvzg8ge99vrbcnymp96ta7yaw40qs3haqsozrzckfe4ud8aswxk0gxvuihv9x8lkcfwwq9lnh6a4wryrohv7d3q9ecskaifirafyd0ru923po1nvvgwawt7qua4vn9gqzliuxt0u2m1dqxh53f9o6vehdedsr1jyi2j06gpx3zw36\"\n  },\n  \"dataStreamId\" : \"88p9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d67f8afd-34a9-4ff5-8ca8-91c4ce4017b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.039965Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ded13fc0-1042-44b3-952f-2c44ec4671f3",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/0qq8/dataSources/j9ao",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Darren Rosenbaum\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/397014\",\n    \"name\" : \"Emory Jenkins\",\n    \"packageName\" : \"Eveline Gulgowski\",\n    \"version\" : \"qg9zwfra8mrbiazta13q2w24lofn2f81udvi85ayaatha6wxc2bvgsu8xmyygo68zm7ad82jrbkltosjikmnzvgp62t9ctodu9fjh0kv2nwgvhedza8ipxq9kk9ghbq5vwf23izurznd74yzwhh937o2eow7rgd3ddt9\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Ilona Hoppe\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Halley Casper\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Kiyoko Upton\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Sebastian Bergstrom Jr.\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Sharri Smitham\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Carrol Miller\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Jan Sipes IV\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"John Murray\"\n  },\n  \"name\" : \"Damon Skiles PhD\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureAami\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"r246\",\n    \"model\" : \"9zij2itli41plc11efe6t15f43l2myh1otmf0zyghkavt8mkvbazk0qw1jrg311ocwsdu4flk6mi60btmqw5y87tgoms4mgcq06bkcjvsnh5rgdp24m4l1b6qt3i4m5tgga0mo7b555fmgr3n09\",\n    \"type\" : \"watch\",\n    \"version\" : \"hyj30u38\",\n    \"manufacturer\" : \"hznoipi4jk9ihqcmu6j10hc6kdc7da48w6dypfd8zoxucvhmxbqm9fx82q5loxn01imy9a91nkc6b9z0c8azyootw0s0j399vlitwm0zpi82hxl1ay3sr3wdz09p8p52ju9yhmeae37kyjkfhryi5h2szcsn73\"\n  },\n  \"dataStreamId\" : \"51wi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ded13fc0-1042-44b3-952f-2c44ec4671f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.036624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e0f4fa0-66c6-4050-a2a9-2a2b9a98f80c",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/a9ld/dataSources/5zr1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Wonda Willms\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/128093\",\n    \"name\" : \"Idella Schaden II\",\n    \"packageName\" : \"Christene Frami\",\n    \"version\" : \"cpjfbnbdkgngjswbl3vs6vsr0j7hucc5nsb0npjo5gsz7s4uz7jibzr2jxb3b48dc12g1oyk0ettjqx6kvbwsq403xprqcbubd9auohwut9ni9e016cf1oy482m0mj830aa\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"floatList\",\n      \"name\" : \"Elmer Gusikowski\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Edison Ledner IV\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Luis Bruen\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Rolf Stehr\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Eleanora Wisoky\"\n  },\n  \"name\" : \"Randy Ankunding\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsBA\", \"dataQualityUnknown\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"da71\",\n    \"model\" : \"qv35q9n4o8lem1guz9kdsmme6gzuddfx7w8d37n7vomgd0ocmsk3yodqsh819d2voqkixqlxgzr0rrow3awo\",\n    \"type\" : \"headMounted\",\n    \"version\" : \"ffbatzekh5jbt7ck8zus5m\",\n    \"manufacturer\" : \"xwlec0f4umj61btogl9\"\n  },\n  \"dataStreamId\" : \"9793\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e0f4fa0-66c6-4050-a2a9-2a2b9a98f80c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.03443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "05e9ec01-df75-4098-8334-80ed582d43c9",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/l3r2/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Ferne Waelchi\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/680008\",\n    \"name\" : \"Warner Thiel\",\n    \"packageName\" : \"Eli Considine\",\n    \"version\" : \"7qex4lxei3txyy9har2r4gx9dlqljlyq1fda32hla3ut9mvrfonqt3lvpvqp\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integerList\",\n      \"name\" : \"Dr. Janeth Terry\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Rosie Corkery\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Domingo Jerde\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Jinny Veum\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Ms. Eddie Kuvalis\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Vicky Hartmann\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Mrs. Duane Schumm\"\n  },\n  \"name\" : \"Elias Steuber\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972013\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"0d4h\",\n    \"model\" : \"6phfo8k235r4z3v10y3bbibkegby48zq6j6nm4b29vwtsy4xc4q1gqo04w03ry8pf59na7o05aoyb85wj76lkf\",\n    \"type\" : \"watch\",\n    \"version\" : \"sb36go9ns32et3ctsttathdn7ydsrohvih305hyvkzcw3rj1f\",\n    \"manufacturer\" : \"9eq5jc21ld468i9nrywjy9y5to5uulupyoahd6xy8y7x16b6i1sxpr494dtmnvs1\"\n  },\n  \"dataStreamId\" : \"9iib\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05e9ec01-df75-4098-8334-80ed582d43c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.032071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ebf0d7d-44c5-4e65-b926-4173822696f3",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/lgh6/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Dino Erdman\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/970311\",\n      \"name\" : \"Latoria Runolfsson\",\n      \"packageName\" : \"Stefan Altenwerth\",\n      \"version\" : \"v63zcfmwxia31hywkak5wo6rh108j47scg897sfbdziym4z7oq02pluprs1e\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Christie Quitzon IV\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Tanisha Bahringer DDS\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Kareem Runte\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Victor Robel\"\n    },\n    \"name\" : \"Winfred VonRueden\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsBA\", \"dataQualityUnknown\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAA\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"r19i\",\n      \"model\" : \"y4xxxw2maty0yye71t10wzrf27kylpefwzx5qsngmlk3mxssrx0j3hvrye12rdvgvhaw8dzffx4m8rwm09p\",\n      \"type\" : \"watch\",\n      \"version\" : \"ivx2oxb7j1946f6neyzmfibcvk0i7uu2j5xv5rttan2sldq0ck5adm0azyauu1n8dny5uiyss2llm71nj81aux5jreuaxwl1ld6fcq1kcds1cfwcat3duir7xyyu0\",\n      \"manufacturer\" : \"d7vun5hbkhhg2ou5maev2nbo8ivj92j2wfsaqlxmz99d1dyiadcx8n84gr58760fdxwk83s66nagfzmxxjwwra3c1whvywgdgxjkx13ee9aftsy2gi8bmc3frnzbrv2ug3lrr32c6mry1x7tf0lvx45otvjd15z0qz7w0awuomv81d51i3ba13s88whoob6hvuzof\"\n    },\n    \"dataStreamId\" : \"a9z3\"\n  }, {\n    \"dataStreamName\" : \"Hilde Hessel DDS\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/913475\",\n      \"name\" : \"Chet Dibbert Sr.\",\n      \"packageName\" : \"Alfred Buckridge\",\n      \"version\" : \"93q1gvulrwmkhqld476wcyhaws74mcx5lxd1dvs9suc48rk5iefoqauzt8z5we7uyyny6wucaaqv\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"string\",\n        \"name\" : \"Leonardo Runolfsdottir\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Rebecca Volkman\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Dr. Lon O'Connell\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Kassandra Howell\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Santiago Stokes\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatList\",\n        \"name\" : \"Rolland Brown\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Refugio Greenholt\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Ms. Oliver Satterfield\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Calvin Marks\"\n    },\n    \"name\" : \"Zaida Muller\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureAami\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBB\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"89rv\",\n      \"model\" : \"g7ejwtky3mxb3tsnxm6rcg6b7jvqbusmzvw59zny6d5il0yuosatsbgc51eqbl0734yhpf41bydwnpfavug8mdtmueckpps25msou\",\n      \"type\" : \"phone\",\n      \"version\" : \"d48x75gg1pdegw83h0ow0wruuwaurqmkc4v66kdtxhucok9elrwf82wuxwulc5xixmlehbbm1xj5q4nshu9d7es8qlcxk3oypc6w5hul3prllsj75zyc5fzyrtjm7n38zc4cmqi34li1mxyxhp7ba2\",\n      \"manufacturer\" : \"26nu29vj1tj7zynzgnqopmqf1hq0sq09gs6z15okforsookhbo7vxfiym8fnkqg299ip3o5qt0megfia7brkdi9cmx5i1liztq4visykrwf63nm05jcg5umk8xv83e0wpy4lvr8kmgwfs0ylob0fcppol3e1iv8xwpxw6tldh\"\n    },\n    \"dataStreamId\" : \"tnj4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ebf0d7d-44c5-4e65-b926-4173822696f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:18:51.028627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}