{
  "mappings" : [ {
    "id" : "3a763834-10a6-4f8f-9dbe-2499248dcd1d",
    "name" : "Updates or insert a given session.",
    "request" : {
      "urlPath" : "/8c08/sessions/r1fn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"activeTimeMillis\" : \"2023-03-05T17:56:27.934901Z\",\n  \"endTimeMillis\" : \"2023-01-24T15:49:27.934932Z\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/422395\",\n    \"name\" : \"Donnell Gislason\",\n    \"packageName\" : \"Shandi Dicki\",\n    \"version\" : \"83ruqsb3n8ajbchujm38qmbx612bjjsbufd8z7jx0qjbkt20st5nl61sty9dom92f6l2cpfjwb6sqb0e2sz4uv8h89wp5zwd20djiiel04i1r0lensbrz13h5cnw6xyagrmgqd43fzoaydzz2h9j24xaclpdny1rwt35a891qugo6x1wg1qp0jvekr71k\"\n  },\n  \"startTimeMillis\" : \"2022-08-29T18:08:27.935117Z\",\n  \"name\" : \"Emory Abernathy\",\n  \"description\" : \"Officiis qui neque maiores libero suscipit. Eligendi et illum nisi fugiat quod perferendis molestias. Et pariatur dolorem repudiandae minima debitis sit sapiente. Ab nobis iste beatae.\",\n  \"modifiedTimeMillis\" : \"2022-10-18T16:16:27.93521Z\",\n  \"id\" : \"72pe\",\n  \"activityType\" : 625412666\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a763834-10a6-4f8f-9dbe-2499248dcd1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.93551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.update",
          "schema" : {
            "description" : "Sessions contain metadata, such as a user-friendly name and time interval information.",
            "properties" : {
              "activeTimeMillis" : {
                "description" : "Session active time. While start_time_millis and end_time_millis define the full session time, the active time can be shorter and specified by active_time_millis. If the inactive time during the session is known, it should also be inserted via a com.google.activity.segment data point with a STILL activity value",
                "format" : "int64",
                "type" : "string"
              },
              "activityType" : {
                "description" : "The type of activity this session represents.",
                "format" : "int32",
                "type" : "integer"
              },
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "description" : {
                "description" : "A description for this session.",
                "type" : "string"
              },
              "endTimeMillis" : {
                "description" : "An end time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              },
              "id" : {
                "description" : "A client-generated identifier that is unique across all sessions owned by this particular user.",
                "type" : "string"
              },
              "modifiedTimeMillis" : {
                "description" : "A timestamp that indicates when the session was last modified.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "A human readable name of the session.",
                "type" : "string"
              },
              "startTimeMillis" : {
                "description" : "A start time, in milliseconds since epoch, inclusive.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6b724a16-7412-4d38-b9c9-401930c73bd6",
    "name" : "Deletes a session specified by the given session ID. - 200",
    "request" : {
      "urlPath" : "/e2u7/sessions/y781",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6b724a16-7412-4d38-b9c9-401930c73bd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.934859Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.delete"
        }
      }
    }
  }, {
    "id" : "98b58e1b-7d88-4476-b4fc-1d330c79108e",
    "name" : "Lists sessions previously created.",
    "request" : {
      "urlPath" : "/9t20/sessions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"l13zq6tzpmj0j0f2kvfmk9ymqyhl1pmlubvyka1gbir8wk5807hl0twncq3oc8i12as6r3d1688j3uwbin1cmr9p5qlcyty8qv1od3zqt8z9tsyoca0y1r8jzwic2ue75u6g7wyk8f3t58leod5hjxr\",\n  \"session\" : [ {\n    \"activeTimeMillis\" : \"2022-05-22T16:14:27.928774Z\",\n    \"endTimeMillis\" : \"2022-10-18T18:14:27.928802Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/513551\",\n      \"name\" : \"Mrs. Courtney Fay\",\n      \"packageName\" : \"Cyril Rogahn\",\n      \"version\" : \"27r35oafkhllc0k1yjb76fw8gelhowh09fvq2yc\"\n    },\n    \"startTimeMillis\" : \"2022-03-25T16:52:27.928983Z\",\n    \"name\" : \"Adrian Nicolas\",\n    \"description\" : \"Sunt illo qui nihil sed facilis. Illum veritatis sunt exercitationem. Asperiores quia rem est soluta. Fuga quos pariatur adipisci ipsa mollitia ab est. Harum incidunt et.\",\n    \"modifiedTimeMillis\" : \"2022-05-10T15:35:27.929084Z\",\n    \"id\" : \"4svb\",\n    \"activityType\" : 1184682957\n  }, {\n    \"activeTimeMillis\" : \"2023-02-06T17:04:27.929186Z\",\n    \"endTimeMillis\" : \"2022-08-02T15:17:27.929212Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/140217\",\n      \"name\" : \"Mrs. Alonso Zboncak\",\n      \"packageName\" : \"Maris Ullrich\",\n      \"version\" : \"bdms4rjmnd4qcagq11mmna4grz1b8xereoerhs8z42z9obiylrv1nm51vtx9199uito0m5rtremzudgh4lrmqaeyacu9dwxud98lskkt0mma2yknacfskpoqdt0z94fmxc1l3rnflxm8be369wzy5ihi3g2rdfx2iu4jy4w1sd8bv\"\n    },\n    \"startTimeMillis\" : \"2022-12-02T18:00:27.929395Z\",\n    \"name\" : \"Abbey Hettinger\",\n    \"description\" : \"Aut earum perferendis. Et vero iusto sit ut consequatur. Omnis cupiditate voluptatum dolores consequuntur aut. Dolor ad incidunt omnis qui eius alias dignissimos.\",\n    \"modifiedTimeMillis\" : \"2022-08-10T17:30:27.929494Z\",\n    \"id\" : \"9mye\",\n    \"activityType\" : 548111023\n  }, {\n    \"activeTimeMillis\" : \"2023-03-05T16:47:27.929594Z\",\n    \"endTimeMillis\" : \"2022-09-18T15:55:27.929624Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/415520\",\n      \"name\" : \"Sammie Wolf\",\n      \"packageName\" : \"Miss Margorie Ferry\",\n      \"version\" : \"jh5y5noc08kaeweweqr88hbdlw8bl9cwp9xh8zdfyfi5zw7wveqiu8pw7adraeeefyhrjylj993s2jdq2lyeblkzs0oqz5fy8gb8meo6t8972nrv6vzyd3xyw15bnrzpwrcdpk7yla2zuk83c4to67yg5j8q5j8mc3wx4a406t72oh7l3g0es8de6\"\n    },\n    \"startTimeMillis\" : \"2022-08-06T18:34:27.929814Z\",\n    \"name\" : \"Autumn Jerde\",\n    \"description\" : \"Laudantium reprehenderit ab aut vel id laudantium. Corrupti sed voluptates optio omnis. Dolor voluptas ut occaecati doloribus.\",\n    \"modifiedTimeMillis\" : \"2022-09-29T17:18:27.92991Z\",\n    \"id\" : \"6lqe\",\n    \"activityType\" : 418762254\n  }, {\n    \"activeTimeMillis\" : \"2022-04-17T18:39:27.930008Z\",\n    \"endTimeMillis\" : \"2023-02-25T16:16:27.930035Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/209311\",\n      \"name\" : \"Kanesha O'Keefe\",\n      \"packageName\" : \"Dalton Jacobi\",\n      \"version\" : \"pbjbazr2d76qwaeat6cweqlhb8ogtpxjo7nakiak6g2u2u5job9ygn3qjql0xd\"\n    },\n    \"startTimeMillis\" : \"2022-11-28T17:19:27.930212Z\",\n    \"name\" : \"Alida Bergnaum\",\n    \"description\" : \"Qui sit error ea ut. Similique error architecto et eaque non. Qui aliquid rerum numquam itaque.\",\n    \"modifiedTimeMillis\" : \"2022-05-20T16:39:27.930305Z\",\n    \"id\" : \"5346\",\n    \"activityType\" : 1674116154\n  }, {\n    \"activeTimeMillis\" : \"2023-01-20T15:48:27.930403Z\",\n    \"endTimeMillis\" : \"2022-11-19T16:07:27.93043Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/819801\",\n      \"name\" : \"Dr. Honey Murazik\",\n      \"packageName\" : \"Ms. Kandi McDermott\",\n      \"version\" : \"smv2spqw7n97nw8r5m0iel7q7a\"\n    },\n    \"startTimeMillis\" : \"2022-10-03T17:47:27.930609Z\",\n    \"name\" : \"Agustin Haley III\",\n    \"description\" : \"Quo dolores placeat officia modi ratione possimus possimus. Et ea nihil magnam. Odit quis cumque enim dolor qui.\",\n    \"modifiedTimeMillis\" : \"2022-09-12T16:41:27.930705Z\",\n    \"id\" : \"on90\",\n    \"activityType\" : 822381283\n  }, {\n    \"activeTimeMillis\" : \"2022-07-03T16:11:27.930803Z\",\n    \"endTimeMillis\" : \"2022-07-23T16:51:27.930828Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/889986\",\n      \"name\" : \"Corine Hilpert\",\n      \"packageName\" : \"Carl Barton\",\n      \"version\" : \"guiobozmfzskb5vecgbtf4ksiixw2mxm4rf9jjpq92pl0lh1l4c3sbu8iiy9vk044beqlnozhl7226ritpdbb5gfqk4ggq9ugqedgsa1ijlzbxrymauviaex98ag0wit0rgzf6ht\"\n    },\n    \"startTimeMillis\" : \"2022-06-06T17:53:27.931005Z\",\n    \"name\" : \"Garret Emmerich\",\n    \"description\" : \"Quis fugiat dolorem. Molestias ex omnis. Consequuntur quis deserunt excepturi quo quibusdam officiis et.\",\n    \"modifiedTimeMillis\" : \"2022-05-26T14:56:27.931094Z\",\n    \"id\" : \"4wsb\",\n    \"activityType\" : 548981772\n  } ],\n  \"hasMoreData\" : false,\n  \"deletedSession\" : [ {\n    \"activeTimeMillis\" : \"2022-11-20T18:18:27.93121Z\",\n    \"endTimeMillis\" : \"2022-08-02T17:10:27.931238Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/227843\",\n      \"name\" : \"Chris Gorczany\",\n      \"packageName\" : \"Ed Rodriguez\",\n      \"version\" : \"u5yw9cplwwzrnnqg3uyb35h88cehoil2j3qtuxscpsmdwjux3bty02fmasfso6iay1p2cfyy2yafcg9aoati96syzc6ita856boioi51boqyzfy7ivbzpoir5yz2mxfe8w29esafsb6c88vmx7fh9\"\n    },\n    \"startTimeMillis\" : \"2022-09-13T16:19:27.931417Z\",\n    \"name\" : \"Vicente Kohler\",\n    \"description\" : \"Totam aliquam cupiditate. Doloribus itaque quam aut perferendis amet cum. Enim sequi exercitationem asperiores sit repellendus rerum.\",\n    \"modifiedTimeMillis\" : \"2022-04-05T16:32:27.931514Z\",\n    \"id\" : \"vhy9\",\n    \"activityType\" : 1737673747\n  }, {\n    \"activeTimeMillis\" : \"2022-08-01T18:53:27.931608Z\",\n    \"endTimeMillis\" : \"2022-07-09T15:17:27.931642Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/482284\",\n      \"name\" : \"Dr. Gilma Hamill\",\n      \"packageName\" : \"Deja Effertz\",\n      \"version\" : \"z47dbnutw3j80jcdqos5mqeuybnk040h1xjngrl3\"\n    },\n    \"startTimeMillis\" : \"2022-12-11T18:11:27.931814Z\",\n    \"name\" : \"Leslee Pfannerstill Sr.\",\n    \"description\" : \"Facilis et qui velit non. Consequatur vitae possimus. A porro sed veritatis consequatur.\",\n    \"modifiedTimeMillis\" : \"2022-06-18T16:42:27.931907Z\",\n    \"id\" : \"i0fs\",\n    \"activityType\" : 1258498840\n  }, {\n    \"activeTimeMillis\" : \"2023-01-12T16:27:27.932005Z\",\n    \"endTimeMillis\" : \"2022-12-01T17:01:27.932032Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/884013\",\n      \"name\" : \"Buford DuBuque\",\n      \"packageName\" : \"Gretta Cormier\",\n      \"version\" : \"9ktu2gtm31tvl819layumjbpjhnt8ltwcwu16esss2jtyycq0xnrmu7957q36o\"\n    },\n    \"startTimeMillis\" : \"2022-06-24T15:27:27.932222Z\",\n    \"name\" : \"Chantelle Keeling V\",\n    \"description\" : \"Inventore deleniti occaecati ea voluptatum autem. Natus et illo sunt voluptatem. Sequi expedita qui quasi quae unde. Est eum qui autem.\",\n    \"modifiedTimeMillis\" : \"2022-11-02T18:07:27.932335Z\",\n    \"id\" : \"dn3w\",\n    \"activityType\" : 1544775617\n  }, {\n    \"activeTimeMillis\" : \"2022-03-11T16:39:27.932438Z\",\n    \"endTimeMillis\" : \"2022-03-11T18:10:27.932464Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/061091\",\n      \"name\" : \"Dorothy Walsh\",\n      \"packageName\" : \"Thanh Keeling\",\n      \"version\" : \"3lb93c7w6dt2q51g1511qms9cr040c2cj9luqlusuxo04l49rx7ulanxnzw7wfpa6p48iojlyegg8gsdx7kbr0s11\"\n    },\n    \"startTimeMillis\" : \"2022-04-01T17:48:27.93264Z\",\n    \"name\" : \"Julissa Block III\",\n    \"description\" : \"Laborum nemo sed recusandae sequi amet et. Temporibus aut aut modi qui in. Ullam voluptas perferendis tempore occaecati reiciendis.\",\n    \"modifiedTimeMillis\" : \"2022-12-27T17:24:27.932735Z\",\n    \"id\" : \"z3kl\",\n    \"activityType\" : 1403284420\n  }, {\n    \"activeTimeMillis\" : \"2022-12-02T15:46:27.932829Z\",\n    \"endTimeMillis\" : \"2022-05-15T15:41:27.932857Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/652207\",\n      \"name\" : \"Crystal Cummerata III\",\n      \"packageName\" : \"Darwin Blanda\",\n      \"version\" : \"772uw7f7rfdwpmk4to91wxjk5e5kqvbxxgmyabd1qg6ucfussvt7aty1scc0sg5glm3qlb9gl1oqp25eaojwyuhc0iqg510ffvso0jh57vvfnqvnhzog1m54gpvga5i3fk5fvjqob2jnfb0nj4j6isaa6s74qw1bg5rvns3o65tl41dt1qcgek35w1bh\"\n    },\n    \"startTimeMillis\" : \"2022-04-07T17:39:27.933045Z\",\n    \"name\" : \"Ileen O'Connell\",\n    \"description\" : \"Nam aut recusandae cumque nesciunt aperiam sed sit. Commodi iusto reprehenderit quo est voluptas. Asperiores repellendus officia dolore eius.\",\n    \"modifiedTimeMillis\" : \"2022-06-08T16:19:27.933141Z\",\n    \"id\" : \"frjp\",\n    \"activityType\" : 1411483493\n  }, {\n    \"activeTimeMillis\" : \"2022-11-12T18:22:27.933244Z\",\n    \"endTimeMillis\" : \"2022-11-05T17:58:27.933271Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/299248\",\n      \"name\" : \"Miss Karl Stanton\",\n      \"packageName\" : \"Elenore Ruecker\",\n      \"version\" : \"yo1kq0sf04bg6w9cp2ipjfdnz9\"\n    },\n    \"startTimeMillis\" : \"2023-03-02T15:40:27.933452Z\",\n    \"name\" : \"Yuette Hand\",\n    \"description\" : \"Tempora natus occaecati iure eum aperiam expedita incidunt. Quod aperiam accusamus aut. Dolores optio earum temporibus consequuntur non. Qui provident omnis.\",\n    \"modifiedTimeMillis\" : \"2022-05-13T15:23:27.933554Z\",\n    \"id\" : \"1g7t\",\n    \"activityType\" : 1465343294\n  }, {\n    \"activeTimeMillis\" : \"2022-05-19T15:33:27.933661Z\",\n    \"endTimeMillis\" : \"2022-11-01T17:27:27.933688Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/086184\",\n      \"name\" : \"Laurinda Davis I\",\n      \"packageName\" : \"Audria Wehner III\",\n      \"version\" : \"bx7ete02uak6dadvdyc5ozr43vsnnl0idva66a8b2h4th20kojc7a96xlr47dyytn0brusa89tyoqmavgqz9tswovnx5t5doeyqv98ie4\"\n    },\n    \"startTimeMillis\" : \"2022-08-12T17:00:27.933881Z\",\n    \"name\" : \"Lon Treutel\",\n    \"description\" : \"Aut molestiae in neque beatae illum architecto. Tempore nihil minus deleniti quaerat aut atque cumque. Nam sapiente quia ducimus enim qui aliquam est.\",\n    \"modifiedTimeMillis\" : \"2022-04-17T16:36:27.93398Z\",\n    \"id\" : \"0bx3\",\n    \"activityType\" : 1544382808\n  }, {\n    \"activeTimeMillis\" : \"2022-05-01T17:10:27.934082Z\",\n    \"endTimeMillis\" : \"2023-02-13T18:30:27.93411Z\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/881184\",\n      \"name\" : \"Mrs. Allegra Hodkiewicz\",\n      \"packageName\" : \"Laurene Steuber\",\n      \"version\" : \"8jg4marf3sl5ricso4ocalg73hnx2ouz07zc0t7kwoxxuct65ipv1q70oy1nyp38qci3oszh8j64bdsks3gyb7pb6iid27568a6g1dcsdywz8mxrj2pi8xuak2nmrkyw07qswhd4ovvqqv0c8w8zlsas65ukhqfm4em3ohw1iew9occr5cale9gxskhrvnf8uga\"\n    },\n    \"startTimeMillis\" : \"2022-06-29T16:04:27.934299Z\",\n    \"name\" : \"Sherryl Pagac\",\n    \"description\" : \"Consectetur ipsa labore quo ea. Ut quis cumque consectetur cupiditate amet et nisi. Qui aut veniam eveniet. Saepe deserunt sed laboriosam velit in sed. Voluptas sunt tempora.\",\n    \"modifiedTimeMillis\" : \"2023-03-02T16:51:27.934402Z\",\n    \"id\" : \"0kak\",\n    \"activityType\" : 859647942\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98b58e1b-7d88-4476-b4fc-1d330c79108e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.934687Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.sessions.list",
          "schema" : {
            "properties" : {
              "deletedSession" : {
                "description" : "If includeDeleted is set to true in the request, and startTime and endTime are omitted, this will include sessions which were deleted since the last sync.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              },
              "hasMoreData" : {
                "description" : "Flag to indicate server has more data to transfer. DO NOT USE THIS FIELD. It is never populated in responses from the server.",
                "type" : "boolean"
              },
              "nextPageToken" : {
                "description" : "The sync token which is used to sync further changes. This will only be provided if both startTime and endTime are omitted from the request.",
                "type" : "string"
              },
              "session" : {
                "description" : "Sessions with an end time that is between startTime and endTime of the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Session"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "443c9471-0e2f-4f2e-8d64-898cf3fd089f",
    "name" : "Aggregates data of a certain type or stream into buckets divided by a given type...",
    "request" : {
      "urlPath" : "/sw48/dataset:aggregate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bucket\" : [ {\n    \"endTimeMillis\" : \"2022-08-14T15:09:27.921262Z\",\n    \"activity\" : 984940268,\n    \"startTimeMillis\" : \"2022-07-18T15:17:27.9213Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-09-25T14:58:27.921339Z\",\n      \"endTimeMillis\" : \"2022-04-17T18:10:27.921373Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/280081\",\n        \"name\" : \"Petrina Carter\",\n        \"packageName\" : \"Cleotilde Christiansen\",\n        \"version\" : \"zyhgor0bx2nl4hognk1uu01dfolzd1dp2okq75myusqhanxjkumidn3i9mxpm98uxfhdzml9s3zvfin7q6008bvm0vdz406f4osca34e\"\n      },\n      \"startTimeMillis\" : \"2022-07-31T18:05:27.921574Z\",\n      \"name\" : \"Hattie Mills\",\n      \"description\" : \"Sit ab placeat nam qui voluptatum excepturi. Quia sunt enim. Eos optio corrupti. Sunt nihil accusantium sit.\",\n      \"modifiedTimeMillis\" : \"2022-03-29T18:47:27.921689Z\",\n      \"id\" : \"nef6\",\n      \"activityType\" : 1405386710\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"95fz\",\n      \"maxEndTimeNs\" : \"2022-03-24T17:15:27.921874Z\",\n      \"minStartTimeNs\" : \"2022-08-11T16:49:27.921902Z\",\n      \"nextPageToken\" : \"dd5qg1d41o6w1j0v5uwlr9apkqp9bel93837zdf27j7n\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"pemj\",\n      \"maxEndTimeNs\" : \"2023-01-27T18:24:27.922016Z\",\n      \"minStartTimeNs\" : \"2022-10-12T16:13:27.922043Z\",\n      \"nextPageToken\" : \"bvmxgy0sk16udi91nab249sos6muj43clq6q1w5gxjla53nh6tcsff1cco16oc7v5d4q6qablp80vgj8l9puoyo32zakg3kb43184rllwf7eei1oo1uwgmjg89nnrg8a1g4w7w4av5hjnk43wforv4kuv96srwkick9ai4gd0g2oljixn\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-08-02T15:57:27.922101Z\",\n    \"activity\" : 515773870,\n    \"startTimeMillis\" : \"2023-02-06T17:37:27.922131Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-10-24T15:41:27.922163Z\",\n      \"endTimeMillis\" : \"2022-04-03T15:41:27.922192Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/640355\",\n        \"name\" : \"Versie Hodkiewicz\",\n        \"packageName\" : \"Latoyia Borer DDS\",\n        \"version\" : \"jbmz3xsjuk883dxuj6gmmtcjgvmfan0mwe8r0utf0zevkmeqr6h7ytlp0o1k57vdtb4a7yfg3t3i1yhfqxq5aqdkg0d7h0e5m2zwhd9k7irp2lek\"\n      },\n      \"startTimeMillis\" : \"2022-07-15T16:35:27.922389Z\",\n      \"name\" : \"Wallace Batz\",\n      \"description\" : \"Fugiat corrupti eum nostrum quidem atque aut. Ut dolores minus sed voluptas veritatis veritatis repudiandae. Maxime neque qui ullam. Recusandae consequuntur qui in.\",\n      \"modifiedTimeMillis\" : \"2022-12-22T15:30:27.922489Z\",\n      \"id\" : \"8i6m\",\n      \"activityType\" : 652478661\n    },\n    \"type\" : \"activitySegment\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"6mcg\",\n      \"maxEndTimeNs\" : \"2022-10-09T18:01:27.922714Z\",\n      \"minStartTimeNs\" : \"2022-03-15T14:58:27.922744Z\",\n      \"nextPageToken\" : \"7dlzx2li7ttqnhm1z77k4i6nc2mqadsm4bh2xlndj5kl1hc9hit8\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"w67r\",\n      \"maxEndTimeNs\" : \"2022-09-20T17:36:27.922863Z\",\n      \"minStartTimeNs\" : \"2022-08-22T16:23:27.922892Z\",\n      \"nextPageToken\" : \"fd8e6o5vjubzx9type18f1e9gk3iex7pxu5vzi1fca9ocubx15rl51h21odnt9vpxed6rlkp3fgiwh5j1rz61o513rqofjg12i6x5oxsls0bdd23tq6po4pxmki8lp3e\",\n      \"point\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2023-01-17T18:43:27.922944Z\",\n    \"activity\" : 300595471,\n    \"startTimeMillis\" : \"2022-08-22T17:56:27.922976Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-06-30T15:01:27.923006Z\",\n      \"endTimeMillis\" : \"2022-08-15T16:35:27.923035Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/746189\",\n        \"name\" : \"Lindsay Considine\",\n        \"packageName\" : \"Refugio Waters\",\n        \"version\" : \"qiqfp6x4c3nzne3fuhuvbyblf04wwldsvifawhy54s50719h62dvnf9thmt6b6iixhgf2syu5icsuga86grno1xfqgrqoxx7fov7nbzx3ws\"\n      },\n      \"startTimeMillis\" : \"2023-01-31T16:14:27.923217Z\",\n      \"name\" : \"Ms. Blake Windler\",\n      \"description\" : \"Voluptate excepturi voluptas dolor cupiditate. Et qui error velit. Cum eum ab odio rem inventore.\",\n      \"modifiedTimeMillis\" : \"2022-05-03T16:42:27.923319Z\",\n      \"id\" : \"59my\",\n      \"activityType\" : 693902436\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"f75g\",\n      \"maxEndTimeNs\" : \"2022-09-09T18:34:27.923488Z\",\n      \"minStartTimeNs\" : \"2022-07-16T16:29:27.923518Z\",\n      \"nextPageToken\" : \"1kv5o9ep50wqhx9btmmu3ygtsaw9df29ajbbr464qfdnm6ebot9ofgp062vutfm48uydmm4bxsnvkamwurdil6x7w5hct3ry4gw1klop3ze7jcxco5rp1n68bd9fo05m1ijfzavqgopr\",\n      \"point\" : [ { } ]\n    }, {\n      \"dataSourceId\" : \"co06\",\n      \"maxEndTimeNs\" : \"2022-07-03T16:52:27.92363Z\",\n      \"minStartTimeNs\" : \"2022-08-01T15:58:27.923658Z\",\n      \"nextPageToken\" : \"4dbt5990m0ounhg0tpn7yssw8hud7k5afu7rho7rycl2joycsj1x8jv9a5k1mss434lp6zamgu9agqllfz4od11khm6v94hq9n9ir80mo9bvy6qvhxydn2xxsd2o7o6296jw0ynine\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"7l60\",\n      \"maxEndTimeNs\" : \"2022-09-26T16:08:27.923785Z\",\n      \"minStartTimeNs\" : \"2023-03-03T18:25:27.923815Z\",\n      \"nextPageToken\" : \"9umfbuh2iwsf4dla4jyf2khn0o5hkfpbgr3pfva8v1gx7vbln66leg5b0rfbmndgwdrnl39raz90dr1ds0x0f0ulvm0gtgqtnnxqyswu2gb0y2e0r8e3xjzat1hwmu12r7y8eu2qrq3l8w80d4xzn6u7a8dw9wa6v4wb4q2b1vcotchpwjn6motdmfcn5f0mryn\",\n      \"point\" : [ { }, { } ]\n    }, {\n      \"dataSourceId\" : \"43sz\",\n      \"maxEndTimeNs\" : \"2023-02-07T16:23:27.923931Z\",\n      \"minStartTimeNs\" : \"2022-04-27T16:49:27.923961Z\",\n      \"nextPageToken\" : \"wbad6nc4a6xm5jkaby4y08gpropxiod0vcd4s8qcrlk385zwno3ztsrmbteknijpc8co90e5ytwe88hkmw38gqakgda4brf1fo363dmvtupjl8jaapyfyi7lt7yg7owz4wqwiu0c37rnky5jxsbdu97xkd08ioopjbycl30tj9nsotmvtlyr\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-10-18T15:11:27.924027Z\",\n    \"activity\" : 267893709,\n    \"startTimeMillis\" : \"2022-10-05T18:34:27.924061Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-12-22T18:33:27.924096Z\",\n      \"endTimeMillis\" : \"2022-08-16T16:55:27.924125Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/167948\",\n        \"name\" : \"Bobby Wisoky\",\n        \"packageName\" : \"Edra Hintz\",\n        \"version\" : \"8j8614u7qfdqrbugyyi2wh6ct3wtnd1ewbfy9402fn2ujpapmsbxg70v33few7t6tv7tyozae4nezcjkmo3sgyk9kjclurh6govyhmmzbfutouztoitonl8iq2ddpwldr5ki1sulqr24d4khhzh9ptieb4qrcg\"\n      },\n      \"startTimeMillis\" : \"2022-07-24T18:25:27.924539Z\",\n      \"name\" : \"Davina Kutch\",\n      \"description\" : \"Amet illum distinctio sed aut. Quam qui quae perferendis occaecati corporis deserunt numquam. Ut cupiditate a consequatur ducimus debitis hic.\",\n      \"modifiedTimeMillis\" : \"2022-05-01T18:09:27.924664Z\",\n      \"id\" : \"xc12\",\n      \"activityType\" : 363134323\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"8642\",\n      \"maxEndTimeNs\" : \"2022-07-14T18:20:27.92492Z\",\n      \"minStartTimeNs\" : \"2022-08-04T16:33:27.924952Z\",\n      \"nextPageToken\" : \"sd7envx9nxgdivssun6cvbm7hf5hnsy0j6osu3nx8h06xak8ramo0icyss3f1wz6nqyv31f0nwayrsbws383dk2rl7ud84gixgpzdsjzhziv47w5kwoun1r1xwkr0oep5at1a1eiyzw7sy7\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-10-05T17:00:27.925023Z\",\n    \"activity\" : 1950740248,\n    \"startTimeMillis\" : \"2022-03-28T18:22:27.925059Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-05-15T15:47:27.925092Z\",\n      \"endTimeMillis\" : \"2022-04-15T15:36:27.925122Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/361601\",\n        \"name\" : \"Gale Schuppe I\",\n        \"packageName\" : \"Sung McKenzie\",\n        \"version\" : \"1u8k59kreig614mqtwumati0267kl692zepi84hqzv08kchkhc8lohkzzbnsd7nc92m79\"\n      },\n      \"startTimeMillis\" : \"2022-08-04T18:47:27.925321Z\",\n      \"name\" : \"Mr. Mariano Stracke\",\n      \"description\" : \"Explicabo impedit consequatur. Voluptatum rerum consectetur inventore excepturi et nam. Quae sed magnam eum reprehenderit dolorum. Dolor maiores qui debitis. Rerum voluptatibus quidem qui atque quibus\",\n      \"modifiedTimeMillis\" : \"2022-08-06T16:07:27.925426Z\",\n      \"id\" : \"87rp\",\n      \"activityType\" : 1418039475\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"c34l\",\n      \"maxEndTimeNs\" : \"2023-02-13T16:57:27.925607Z\",\n      \"minStartTimeNs\" : \"2022-06-23T18:17:27.925675Z\",\n      \"nextPageToken\" : \"qrfgea\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-11-17T17:55:27.925802Z\",\n    \"activity\" : 1926188780,\n    \"startTimeMillis\" : \"2022-08-01T17:45:27.925846Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2022-06-28T18:46:27.925883Z\",\n      \"endTimeMillis\" : \"2022-06-09T18:48:27.925916Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/154161\",\n        \"name\" : \"Cleta Quigley PhD\",\n        \"packageName\" : \"Dexter Berge IV\",\n        \"version\" : \"3mhznbmnn1bplvbwla0nepegqr0w82e6wnif2ffjdp0ef9u9pxtdhbwnsklpbwbk9vgoqj3ds4r\"\n      },\n      \"startTimeMillis\" : \"2022-04-07T18:31:27.926179Z\",\n      \"name\" : \"Elois Emard\",\n      \"description\" : \"Ut pariatur id aut. Aut voluptatem molestias iusto aperiam est. Quae sint sed qui corporis consequatur delectus fuga. Ut amet non blanditiis sit molestiae voluptatibus accusamus.\",\n      \"modifiedTimeMillis\" : \"2022-05-13T18:33:27.926309Z\",\n      \"id\" : \"jvc4\",\n      \"activityType\" : 1558800493\n    },\n    \"type\" : \"activityType\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"3002\",\n      \"maxEndTimeNs\" : \"2022-04-24T15:20:27.926545Z\",\n      \"minStartTimeNs\" : \"2022-06-11T15:44:27.926582Z\",\n      \"nextPageToken\" : \"a3pxb6nmuhh\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"19ff\",\n      \"maxEndTimeNs\" : \"2022-09-26T18:53:27.926713Z\",\n      \"minStartTimeNs\" : \"2022-12-16T15:55:27.926744Z\",\n      \"nextPageToken\" : \"pmie6umxgoix6db7yp7r4qlkd3l98jxvyyx1xbuavgyh1372gqjuz5klft9twla22d0l9itq1s7ql0fvqrmuh9s777xvhbp9kq0b18b37zi7jiz8xdkgxe1v4sd8e0nu8dw27wk8\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"dfw0\",\n      \"maxEndTimeNs\" : \"2022-10-17T15:22:27.926869Z\",\n      \"minStartTimeNs\" : \"2022-09-22T18:17:27.926899Z\",\n      \"nextPageToken\" : \"uxd4ux7k1alhdoatbno8bqawjuhb9ajax5tt6qo\",\n      \"point\" : [ { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"l195\",\n      \"maxEndTimeNs\" : \"2022-03-18T14:58:27.927017Z\",\n      \"minStartTimeNs\" : \"2022-09-29T17:21:27.927048Z\",\n      \"nextPageToken\" : \"mjhiqgj77xjgaigipd7ocs1vpehav7\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"1xl0\",\n      \"maxEndTimeNs\" : \"2022-05-16T15:32:27.927167Z\",\n      \"minStartTimeNs\" : \"2023-01-12T15:45:27.927198Z\",\n      \"nextPageToken\" : \"ollgpfzxnctt9x1b2mwmx6nfmuuyakzvwfcr9rrejv6n4fzcq2qe7wbp9ywjovmfk14mq9bl0sahdok58sk6ocqg08aswbpas0o2fq\",\n      \"point\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"z195\",\n      \"maxEndTimeNs\" : \"2022-06-21T18:04:27.927339Z\",\n      \"minStartTimeNs\" : \"2022-11-30T16:44:27.927369Z\",\n      \"nextPageToken\" : \"xi8z90ele8kdx4eywng1xlhmy0gqkugmizrdaa2cp9omw9ssv0wv0t85u\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"hakj\",\n      \"maxEndTimeNs\" : \"2022-07-22T16:54:27.92749Z\",\n      \"minStartTimeNs\" : \"2023-01-26T18:17:27.92752Z\",\n      \"nextPageToken\" : \"hy8zu0d83yrave4qxm2gx6wi4g6a675xrfogvf283t5eijhmwjqdj0ib3wzjkj9q45dmqdbzzm69nia5gzly8pn8d7o8iug4gkk7ezgknttm7cbflav30ehewjy782ioj4jl47k\",\n      \"point\" : [ { }, { }, { } ]\n    }, {\n      \"dataSourceId\" : \"6h62\",\n      \"maxEndTimeNs\" : \"2023-01-18T15:49:27.927642Z\",\n      \"minStartTimeNs\" : \"2022-04-26T18:48:27.927672Z\",\n      \"nextPageToken\" : \"s7awofjrx9n9h2twry8mq401qpaq5mqbnr7mcx24fbxtcq3fw2cutlyol2s7w6sqq14mzsqlhh494vqviyviyz0xvg5uqealg4a3mgyqcwcr9pw15mpbkkxwb3qd24tf5h8rlr84q72xu54g9pxzpj1xu6u96ur02w3hcqrexg69t9mdjk3z3k01iiq28qxxloioy\",\n      \"point\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"endTimeMillis\" : \"2022-12-24T18:31:27.927755Z\",\n    \"activity\" : 1243175423,\n    \"startTimeMillis\" : \"2022-08-22T15:46:27.927796Z\",\n    \"session\" : {\n      \"activeTimeMillis\" : \"2023-02-18T18:42:27.927833Z\",\n      \"endTimeMillis\" : \"2022-06-02T16:31:27.927864Z\",\n      \"application\" : {\n        \"detailsUrl\" : \"https://web.example.mocklab.io/526987\",\n        \"name\" : \"Jarrett Rippin\",\n        \"packageName\" : \"Jose Miller\",\n        \"version\" : \"z4jfkztimelhf35kr9kzk0obr3y30olimgb000csweh1v5g9is0rojzlcv025wm3dqbt0lonsn6d7ry83v8m535islotdat4u3mm45aeujqnjmyc8f2mbgjl8x2ur2gszvc7ux9utrrhs4tefvx5rrpv8enrc\"\n      },\n      \"startTimeMillis\" : \"2022-12-07T15:30:27.928082Z\",\n      \"name\" : \"Gertha Olson III\",\n      \"description\" : \"Architecto aut ad quia quos. Dolore sit facilis rerum dolorem sed. Non et et saepe eos repellat. Et dolorum ullam id qui sed odio perspiciatis.\",\n      \"modifiedTimeMillis\" : \"2022-06-21T17:00:27.928195Z\",\n      \"id\" : \"jf57\",\n      \"activityType\" : 1219971898\n    },\n    \"type\" : \"session\",\n    \"dataset\" : [ {\n      \"dataSourceId\" : \"3l1q\",\n      \"maxEndTimeNs\" : \"2022-08-01T15:48:27.928392Z\",\n      \"minStartTimeNs\" : \"2022-11-17T15:28:27.928422Z\",\n      \"nextPageToken\" : \"idtg58efg6maxurrt91v0v5q824gazoog7gf5eo6o8j4wis4pcton9awcjjekypz5f2uxapk4pgwvgulr35fsj0ji1v4504nhau2sa9l89k9v03uq\",\n      \"point\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "443c9471-0e2f-4f2e-8d64-898cf3fd089f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.928684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataset.aggregate",
          "schema" : {
            "properties" : {
              "bucket" : {
                "description" : "A list of buckets containing the aggregated data.",
                "items" : {
                  "$ref" : "#/components/schemas/AggregateBucket"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c6a54358-a605-48c0-9183-2c599464fd14",
    "name" : "Adds data points to a dataset. The dataset need not be previously created. All p...",
    "request" : {
      "urlPath" : "/azl6/dataSources/4489/datasets/8879",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"d833\",\n  \"maxEndTimeNs\" : \"2023-02-17T16:32:27.917544Z\",\n  \"minStartTimeNs\" : \"2022-11-05T15:18:27.917573Z\",\n  \"nextPageToken\" : \"mm74tztfpvyjda2zrh1je6o6pw1y7gkixqqjojrhmf0io2sjws8quzb3kazug8unylhyq57663zd8e3xbo1evnwoeq0kg0zwn0ckolu11gro48f2iqc3ujnhdgch1tkey6061er5hdwkkh2iihweq7lme4j5pnkx86jr1pk8kle4pw9xrl33jaifgbd3n5wxpyus\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"b5b2\",\n    \"endTimeNanos\" : \"2022-10-31T16:58:27.91771Z\",\n    \"dataTypeName\" : \"Floy Abshire Jr.\",\n    \"startTimeNanos\" : \"2022-08-23T18:48:27.917785Z\",\n    \"modifiedTimeMillis\" : \"2022-05-11T15:05:27.917814Z\",\n    \"rawTimestampNanos\" : \"2022-11-01T15:13:27.917844Z\",\n    \"computationTimeMillis\" : \"2023-02-19T15:14:27.917873Z\",\n    \"value\" : [ {\n      \"intVal\" : 1015979916,\n      \"fpVal\" : 3.4371603310700694E307,\n      \"stringVal\" : \"t7u25591o08ew7jog8mjhn1s60c0ey7ycautmb0oi3mvqnejoyttww\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 447297754,\n      \"fpVal\" : 1.371567810832197E308,\n      \"stringVal\" : \"c0b9flkxlrox1z1hiz2dynhu7y43ai5wz1vbf0v9zwwnzzoy35bph9vv6sh9rwixi9itnpnrtqwi1317xoqdqeqfof9xrq323cy5yn4mv81x3576vkrjcz1z7w4shhcl0yxi1whc4izk2hrkmt6b0c\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2080341611,\n      \"fpVal\" : 3.5721940949951403E307,\n      \"stringVal\" : \"b3y1nw9orf5ptuegri3vba872kmzi1h4hgtbvpcdg8bcvhgkm15l0v81kw6eg89xndamj3tc3751pawf8xzr2iqrly0m4n2rdq6rlei5bfrhj42ykkic51k\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 418088429,\n      \"fpVal\" : 4.767628740287749E307,\n      \"stringVal\" : \"n91nwbjnydmye71pfeop4qeeihnajo8s1yolep2u2qxor19oxtn372luw4bs7ta5r0novxptb1ogzyph0ccgm6w5y0n6xzaidw3fui2d22l8j5dr6pbq6ior6oinsxvozg7q0p299\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1947110333,\n      \"fpVal\" : 9.943714753780294E306,\n      \"stringVal\" : \"lur6ta72mhrphyiqbt9dg8shz0knqkwb3mf3me11unvib0y\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1308901008,\n      \"fpVal\" : 1.3565352460653115E308,\n      \"stringVal\" : \"vjy1a9gy7l3wnbcnksrevaok7i8ctf8xwmg0ynlqhg5fq389oa5fdilde38hg738s4rvnllyq9diz5wf0spx6q11ai547iprloax1582z6zadcsbh7xl2j5as6pqqu002uqz4o6envy\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1391434188,\n      \"fpVal\" : 6.99643774420838E307,\n      \"stringVal\" : \"zi2iihp3c2yo7e0asztsqlaxa27lsctske6fqev4n79kk85cmgu2po1ejashg7xxnaxjc0dy2c9191kdguotdufvlxg0rbkvmo8aekbadyujjoc13m5dykbj5ifl8fehvhcxwimwbzw4caqnzi87o66kzh2obwsxaebjohaollz\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 611547852,\n      \"fpVal\" : 1.7539646828514573E308,\n      \"stringVal\" : \"lsfqxut14xy8ho0c8g1ffj6h7v06411eh4gseywhp33pfhk48tymx3sqia7dxbz7fv2zismz7smslmdv83j2044uei39tfw9lwqnydp34o3xwurtu\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"tm32\",\n    \"endTimeNanos\" : \"2022-05-06T15:24:27.918244Z\",\n    \"dataTypeName\" : \"Ms. Sona Bruen\",\n    \"startTimeNanos\" : \"2022-03-29T15:18:27.918317Z\",\n    \"modifiedTimeMillis\" : \"2022-05-25T16:14:27.918345Z\",\n    \"rawTimestampNanos\" : \"2022-06-10T17:27:27.918373Z\",\n    \"computationTimeMillis\" : \"2022-07-10T16:43:27.918401Z\",\n    \"value\" : [ {\n      \"intVal\" : 19643244,\n      \"fpVal\" : 1.4488172015814472E308,\n      \"stringVal\" : \"h26a4kgvr3ajpvp8jmmdp4\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1323115024,\n      \"fpVal\" : 1.0381182975363778E308,\n      \"stringVal\" : \"na3tab28bf9uxkilykakal2r0cb97ls23fdm48vlk0a4sfw6zxrbz3jeqj8f61boflndxwpa10sl388xups3ezfrnk8zgw94h9e22twn2ikooq60qmneitva2tc3o2wwguy5uawhrjp2dt\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1050361542,\n      \"fpVal\" : 8.064127323647584E307,\n      \"stringVal\" : \"cz1ei312x1nq2picd81vrn6s0gzz\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 1368195679,\n      \"fpVal\" : 1.6459485429812576E308,\n      \"stringVal\" : \"5ufntnkh7a7tppltersick6xqu1zauvg2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1700702122,\n      \"fpVal\" : 9.213742011489897E307,\n      \"stringVal\" : \"91u391wceuh6ggo2gbgwbktssca9xoqpmg8xso7fx4c65noh7chk62roercnng5s3b1x1qpmewe91me1okuc9d1jv5v8hv1y5wc2jz15de3ejd12krv3b2kzocnq7sebgqhwy8wsum7e36fo2xtu\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"91k6\",\n    \"endTimeNanos\" : \"2022-10-07T15:38:27.91868Z\",\n    \"dataTypeName\" : \"Damian Yundt\",\n    \"startTimeNanos\" : \"2022-12-06T18:44:27.918749Z\",\n    \"modifiedTimeMillis\" : \"2022-12-02T15:05:27.918778Z\",\n    \"rawTimestampNanos\" : \"2022-09-21T16:57:27.918807Z\",\n    \"computationTimeMillis\" : \"2023-01-05T18:49:27.918836Z\",\n    \"value\" : [ {\n      \"intVal\" : 1952276220,\n      \"fpVal\" : 9.782712852010494E307,\n      \"stringVal\" : \"qr6qlacauj8kt99u2frqdc4qc60rm68m82hqm8l7qbv11r5sdyrwku7m4brqvdrxxfkq43yo0ij3h8do2deswfqykcigq4c7rh8z672qbvdngboaif0nwk34ntoqrdfqx4o4qlsxftgzz9\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"86u7\",\n    \"endTimeNanos\" : \"2023-01-16T18:06:27.918963Z\",\n    \"dataTypeName\" : \"Beverly Haley IV\",\n    \"startTimeNanos\" : \"2022-11-02T16:27:27.919033Z\",\n    \"modifiedTimeMillis\" : \"2022-08-03T15:25:27.919061Z\",\n    \"rawTimestampNanos\" : \"2023-02-21T16:41:27.919089Z\",\n    \"computationTimeMillis\" : \"2022-10-09T18:27:27.919117Z\",\n    \"value\" : [ {\n      \"intVal\" : 1509303220,\n      \"fpVal\" : 1.973820214956656E307,\n      \"stringVal\" : \"iulvaelsbpy0dzw1zg06qsws8o3ebccvl5uzgjj1yzz4eluk7mzoa60jsjx47w8r5uzdfm57c144y0t123b3329gl4az0su2slvd5dz6gahfxqsg5x363lstuiw36g32ge10txo97aneflk5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 964809810,\n      \"fpVal\" : 4.593870310952362E307,\n      \"stringVal\" : \"y2toglh1l9y3kst4yhat5hgrqigh0re6k4zmynldh5hwsln51at1unp1cbh2nipfltcqaygi50x4ev9bo3t6nwka\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1050886999,\n      \"fpVal\" : 1.6021131071080676E308,\n      \"stringVal\" : \"isf69q3oscv\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1314422767,\n      \"fpVal\" : 1.5292681616458305E308,\n      \"stringVal\" : \"mjqou7f3g0sywwnd3l333l8s90yrcyym3k2ws9sxcylxf3oago24iyzhl73y0hm\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"3m60\",\n    \"endTimeNanos\" : \"2023-03-02T18:46:27.919333Z\",\n    \"dataTypeName\" : \"Larry Mertz\",\n    \"startTimeNanos\" : \"2022-04-24T16:27:27.9194Z\",\n    \"modifiedTimeMillis\" : \"2022-11-05T15:34:27.91943Z\",\n    \"rawTimestampNanos\" : \"2022-07-15T16:09:27.919459Z\",\n    \"computationTimeMillis\" : \"2023-01-18T18:09:27.919486Z\",\n    \"value\" : [ {\n      \"intVal\" : 1078487409,\n      \"fpVal\" : 5.449553734171453E307,\n      \"stringVal\" : \"c24yasfuowowiazbnxu2pinov\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1002606165,\n      \"fpVal\" : 3.0672852614687346E307,\n      \"stringVal\" : \"c03xtkizci9pad972p7owh508wg5mhmbv5kxpoiw702qg7jb7lbkt19afgu3zsusuk8a\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 8819547,\n      \"fpVal\" : 1.5638726257644062E308,\n      \"stringVal\" : \"i8s38ppws0c89slxnx42kdv7atthi4ei9g79ssubxi3zquimqdst6pu9fad4legtu158teyqg3591xydccl28ng1lf2e1q4cbz45fp4khteeugupq65ng2r7a48p5qgt5aq0v31mke58i8dhhvxc8wjy\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1900149483,\n      \"fpVal\" : 1.3317552320780364E308,\n      \"stringVal\" : \"gw6vvxdtycug8bluci\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1487899077,\n      \"fpVal\" : 8.263546076205875E307,\n      \"stringVal\" : \"hblkw2d8z77bvzgjft9izzwsc8gmsro\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"p132\",\n    \"endTimeNanos\" : \"2022-08-05T15:11:27.919748Z\",\n    \"dataTypeName\" : \"Mr. Guillermo Reichel\",\n    \"startTimeNanos\" : \"2023-01-05T15:47:27.919815Z\",\n    \"modifiedTimeMillis\" : \"2022-09-17T15:45:27.919842Z\",\n    \"rawTimestampNanos\" : \"2022-07-02T18:37:27.919868Z\",\n    \"computationTimeMillis\" : \"2022-08-21T16:29:27.919896Z\",\n    \"value\" : [ {\n      \"intVal\" : 856823630,\n      \"fpVal\" : 1.185459994009075E308,\n      \"stringVal\" : \"wvfgn9u5elnbcthkpf78aw1hedyix88z79eafclcm4xrs\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1590248814,\n      \"fpVal\" : 6.371297007344474E307,\n      \"stringVal\" : \"i88gmsng1jrbum2zw44neg4dfsce1vv9ibmc5ljz6yu7kaz6\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 542237098,\n      \"fpVal\" : 6.809666672350836E307,\n      \"stringVal\" : \"mikpl93wmqvg514lkpy02lathkdnr3521s2vj2my\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 988072621,\n      \"fpVal\" : 1.3060199880226417E308,\n      \"stringVal\" : \"ylskcob4a7rtkji32qlvgrr8ttkgpkq0m88p9ir3rlx7au6ib9juxonqb9xu05ffogklksd8zxaqnmxcvz0i3gj8mvemdtt0cdz9mykriw994bzljg9fhhoyu4opzkzeqwatmw2xklj9x5btgl8ecl3gv26zq6rimonts6h91xzu94z4kxn33ivuxk\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 190285193,\n      \"fpVal\" : 1.3025229706421273E308,\n      \"stringVal\" : \"73ggpyykvm8asuowesafoo94tzaq\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 64899350,\n      \"fpVal\" : 3.083772264481801E307,\n      \"stringVal\" : \"t2naft3p3j5z03ew0fp9v13qp6kwlezava02ynoonb5ah49sax65q547bxivuy7who1yz2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"guv6\",\n    \"endTimeNanos\" : \"2022-06-24T15:46:27.920156Z\",\n    \"dataTypeName\" : \"Tim Gerlach\",\n    \"startTimeNanos\" : \"2022-12-31T18:13:27.920226Z\",\n    \"modifiedTimeMillis\" : \"2022-05-11T18:22:27.920252Z\",\n    \"rawTimestampNanos\" : \"2022-10-31T15:54:27.92028Z\",\n    \"computationTimeMillis\" : \"2022-10-02T18:21:27.920308Z\",\n    \"value\" : [ {\n      \"intVal\" : 213422879,\n      \"fpVal\" : 7.711426540623131E307,\n      \"stringVal\" : \"mk5s91vjhmji9dny8eyznlahellj69md1s8\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"8pya\",\n    \"endTimeNanos\" : \"2023-01-29T18:46:27.92043Z\",\n    \"dataTypeName\" : \"Emelda Streich\",\n    \"startTimeNanos\" : \"2023-01-18T17:53:27.920496Z\",\n    \"modifiedTimeMillis\" : \"2022-09-19T17:37:27.920524Z\",\n    \"rawTimestampNanos\" : \"2022-05-18T15:01:27.920554Z\",\n    \"computationTimeMillis\" : \"2022-11-20T18:38:27.920583Z\",\n    \"value\" : [ {\n      \"intVal\" : 1742364487,\n      \"fpVal\" : 1.3111912447195597E308,\n      \"stringVal\" : \"capk3oj4esm8p5s0c2lj3xcyr8xxoxhvmtxpvgh27b0a620d7tnrb2tvyqm9xe9powii3jxrg3sxljryh64epcddvanxj8ciy8trgteff1eyabong1wnd71w7mzwrco44nsdpplmik6cnv0z1q0zfic8npcyrh5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2010070868,\n      \"fpVal\" : 1.6426178618404733E308,\n      \"stringVal\" : \"kh5hfbed2oqnuomhbmg1b4mxr8828xob950fbccb19i338ol7vtv1udi4v4j0052yoo32ltp1qbix2mx25pibrp0h032bu18ra5m1adxzsf9y0c505wmaufoxkrqg2b3agnv2r\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 577859103,\n      \"fpVal\" : 7.829757286290561E307,\n      \"stringVal\" : \"suv7adnzhl1tdoleeypgaqpcgouful\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2007355204,\n      \"fpVal\" : 6.415989099683127E307,\n      \"stringVal\" : \"utk1d139heky25potyhsz8nrj98jy8s8q7h7r8sof48dcuhvvzepkionlvfyql6hng61sjhyybql2hxqg15zuuh8v45fraun5p14s2onbe28c0adk90a1\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 578582677,\n      \"fpVal\" : 5.828006279531674E307,\n      \"stringVal\" : \"j09zte97zqxwjua4k1ec0sicyvdiicpvukr86ab60uflbyhfrjg96i2t56quhfwx12r5mbbpmdn3u4r17tpw8nnkrd1ud26zso62wyyimtc2h94s6lctjspa48w94h1oz8u412sjmgme\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 165046433,\n      \"fpVal\" : 1.3636885406839748E308,\n      \"stringVal\" : \"ofpj2oav\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1848941062,\n      \"fpVal\" : 1.5103867692582547E308,\n      \"stringVal\" : \"o31hzjdpmksy048i2tvh3aaibr50lk8eovbg2yy6wbvou8e8xaboqq7ztkdb7skttjbojqo9gzalcx9dxbkyf4blgg7yirsl3oaub3vum\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1639022465,\n      \"fpVal\" : 5.778166519167539E307,\n      \"stringVal\" : \"ro93ra2rc15a2e33nmmxz1rz7k9tklm44h0hdtmna9k4ycaxmud13ho5ubut614og04qsq50ns1ml75c\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6a54358-a605-48c0-9183-2c599464fd14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.921202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.patch",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b08d5a5-93ec-4e78-9a02-c695612476b7",
    "name" : "Returns a dataset containing all data points whose start and end times overlap w...",
    "request" : {
      "urlPath" : "/8vsc/dataSources/v8vx/datasets/81xd",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"9se5\",\n  \"maxEndTimeNs\" : \"2022-12-18T16:00:27.915533Z\",\n  \"minStartTimeNs\" : \"2022-10-24T17:07:27.915563Z\",\n  \"nextPageToken\" : \"0mnefg2b6t0kwtf7bp5fnjmvdmuv8ti0azxrdasrqlsnsqc4fhpgry9xb7doizoto7aswk6rvs6w9utywlab8dyzfq89ux1cl58id7etvrk2ygx\",\n  \"point\" : [ {\n    \"originDataSourceId\" : \"uh00\",\n    \"endTimeNanos\" : \"2022-04-09T18:23:27.915683Z\",\n    \"dataTypeName\" : \"Dr. Delbert Johnson\",\n    \"startTimeNanos\" : \"2022-12-20T17:22:27.91576Z\",\n    \"modifiedTimeMillis\" : \"2023-01-21T16:32:27.915801Z\",\n    \"rawTimestampNanos\" : \"2022-03-24T17:58:27.915833Z\",\n    \"computationTimeMillis\" : \"2022-10-07T17:14:27.91587Z\",\n    \"value\" : [ {\n      \"intVal\" : 1663739436,\n      \"fpVal\" : 1.4193622392814418E308,\n      \"stringVal\" : \"7iwrkzcvj2jhdne0vzcy8v5c8slvn2tlcnzz2np51ez7qvqfxb1q0tkfw5pgt36r7bckk8163yufa1hik3bs5aznqwdwh79ra6gtulcat9dd7p51soh\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1840312423,\n      \"fpVal\" : 1.0423829016642088E307,\n      \"stringVal\" : \"yxy7d16z0h5u63kvv2nmbkct9aix91aw8ylf6tykalzni0bj1e7ceclkkwav48n4sdjx9xdqjle31h7wgqfjmfnucv0mturg9f86izg1vck3fpro2utjusnr4vg7ag9fpicp9hqpda319ik5oyonqcl7qwhh5yarq872rfc\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 2134029256,\n      \"fpVal\" : 6.37037147965115E307,\n      \"stringVal\" : \"504hd\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 223406546,\n      \"fpVal\" : 8.436620735997079E307,\n      \"stringVal\" : \"29yn1eoo3snolbus9yfhgm2qs\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1634766201,\n      \"fpVal\" : 1.3462748540602735E308,\n      \"stringVal\" : \"omgg1psk3poxqmmc9nvysawh864ea42fx2bcaptkxrz6\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"smyc\",\n    \"endTimeNanos\" : \"2022-11-24T16:07:27.91616Z\",\n    \"dataTypeName\" : \"Mrs. Luciana Emmerich\",\n    \"startTimeNanos\" : \"2023-01-16T16:40:27.916233Z\",\n    \"modifiedTimeMillis\" : \"2022-05-04T17:41:27.916263Z\",\n    \"rawTimestampNanos\" : \"2022-11-13T17:21:27.916292Z\",\n    \"computationTimeMillis\" : \"2022-11-28T16:18:27.916324Z\",\n    \"value\" : [ {\n      \"intVal\" : 1170284511,\n      \"fpVal\" : 5.429946963552922E307,\n      \"stringVal\" : \"56ctdyz70dg56w6wivwdi203dmitome7v8z99pa4zaykpa51m900heqju9rb878amzixwj3br0mopvfmgyoebnr7ybnoqavfg72mcna9ckwab0wb45mv6ww0hlo4oui1yavr5uxm9c\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 780091707,\n      \"fpVal\" : 1.4967208425665566E308,\n      \"stringVal\" : \"f27n0ido2eufqtsot2cy9roelq78rp4mp8yj3t21yoj0n180c4x9knwmbnvjokyk63mbmnl2vwqbdh2oksd75o373u6i82wnn9joakpp8gce88y4ea5owu2xm1uw3cwl70u96vf2i6jslklcyqf2mo404rududfc8n1a2dnntdcivmnroocrq3\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 1978341258,\n      \"fpVal\" : 6.236245147171124E307,\n      \"stringVal\" : \"lbnob0722r9qeh1uzqz1qvu3u1tdkvlubkkbag3lifyg3puifooyi3slws1hn6n1tttr6efvm3jltwz09hmry0b51poh66hzztpyy2je03hl9ednsapgsglwdpu5oehcpl\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1275552606,\n      \"fpVal\" : 3.503685836837684E307,\n      \"stringVal\" : \"ta8de0x77d0czlvaqjgbb1vde61014ps3rsd55o8lixzhv3w4k5ig0ft06oqy5awlw65ppphw9xkhpjvgzhtgvfg9dfwnil7t3yc39ldxa9v\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"x93v\",\n    \"endTimeNanos\" : \"2022-11-25T17:13:27.91655Z\",\n    \"dataTypeName\" : \"Vito Pagac\",\n    \"startTimeNanos\" : \"2022-07-06T16:32:27.916619Z\",\n    \"modifiedTimeMillis\" : \"2022-11-11T17:22:27.91665Z\",\n    \"rawTimestampNanos\" : \"2023-02-20T18:32:27.91668Z\",\n    \"computationTimeMillis\" : \"2022-10-06T16:18:27.916708Z\",\n    \"value\" : [ {\n      \"intVal\" : 1620415509,\n      \"fpVal\" : 1.7611997331571996E308,\n      \"stringVal\" : \"tbum2r68k8vvtwu1doz1fzf2udxsei94mzre24fmqfxw2x4hamwod78x594l1hg7g894zk1qm8129hx4gmocus1sfbuygcf0891dpytqfevuxp3kx1jo4txxb9heua2vpppnizassljfq1\",\n      \"mapVal\" : [ { }, { } ]\n    }, {\n      \"intVal\" : 903032058,\n      \"fpVal\" : 5.965941561364806E307,\n      \"stringVal\" : \"59a98biij0l1s73504gg9i3x9dfy3et9tw09j3giywvhdpr1yzsg7yatn0y83ytkt8b28wv3w3d3tsllfu2xrlea1soezaptemty5eqsqpn5ep78lh11r6t7alwbf9k8kjvqcsdznyjlin3vr7zc219m\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"6g5p\",\n    \"endTimeNanos\" : \"2022-07-23T15:05:27.916868Z\",\n    \"dataTypeName\" : \"Tory Hessel MD\",\n    \"startTimeNanos\" : \"2022-07-19T16:19:27.916936Z\",\n    \"modifiedTimeMillis\" : \"2022-12-02T17:46:27.916973Z\",\n    \"rawTimestampNanos\" : \"2022-10-18T18:45:27.917002Z\",\n    \"computationTimeMillis\" : \"2022-06-04T14:56:27.91703Z\",\n    \"value\" : [ {\n      \"intVal\" : 1894785761,\n      \"fpVal\" : 1.0564821858412336E308,\n      \"stringVal\" : \"er8fnpg4o0u6dbr9lew7duaf3d2mznx35m4mir8ey8fpb6n9f6g4002g4r991e50jx2317obn70l947xm7ls8miu7stg5wy08h2novavphp45se5idmvqq714pn6kat6pk85m8322r8foth9cmnsh1d1cs61x4h5s\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1913355714,\n      \"fpVal\" : 1.5576710574376483E308,\n      \"stringVal\" : \"cb80msy2awmmo9iztbsbro53ad9xxz4ht1iz\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b08d5a5-93ec-4e78-9a02-c695612476b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.917431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.get",
          "schema" : {
            "description" : "A dataset represents a projection container for data points. They do not carry any info of their own. Datasets represent a set of data points from a particular data source. A data point can be found in more than one dataset.",
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source that created the points in this dataset.",
                "type" : "string"
              },
              "maxEndTimeNs" : {
                "description" : "The largest end time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the second part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "minStartTimeNs" : {
                "description" : "The smallest start time of all data points in this possibly partial representation of the dataset. Time is in nanoseconds from epoch. This should also match the first part of the dataset identifier.",
                "format" : "int64",
                "type" : "string"
              },
              "nextPageToken" : {
                "description" : "This token will be set when a dataset is received in response to a GET request and the dataset is too large to be included in a single response. Provide this value in a subsequent GET request to return the next page of data points within this dataset.",
                "type" : "string"
              },
              "point" : {
                "description" : "A partial list of data points contained in the dataset, ordered by endTimeNanos. This list is considered complete when retrieving a small dataset and partial when patching a dataset or retrieving a dataset that is too large to include in a single response.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9a77a0dd-0f17-4912-ad3c-20c922308963",
    "name" : "Performs an inclusive delete of all data points whose start and end times have a... - 200",
    "request" : {
      "urlPath" : "/x82g/dataSources/z0za/datasets/6o3n",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9a77a0dd-0f17-4912-ad3c-20c922308963",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.915422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.datasets.delete"
        }
      }
    }
  }, {
    "id" : "28ab95ed-fa13-4b58-8ec5-f9f5dd0bea06",
    "name" : "Queries for user's data point changes for a particular data source.",
    "request" : {
      "urlPath" : "/qjh2/dataSources/58l1/dataPointChanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSourceId\" : \"byr8\",\n  \"deletedDataPoint\" : [ {\n    \"originDataSourceId\" : \"212v\",\n    \"endTimeNanos\" : \"2022-08-21T16:38:27.912715Z\",\n    \"dataTypeName\" : \"Dr. Ron Jerde\",\n    \"startTimeNanos\" : \"2022-04-22T16:44:27.91283Z\",\n    \"modifiedTimeMillis\" : \"2022-04-19T17:20:27.912868Z\",\n    \"rawTimestampNanos\" : \"2022-04-03T16:37:27.912898Z\",\n    \"computationTimeMillis\" : \"2022-08-27T16:21:27.912929Z\",\n    \"value\" : [ {\n      \"intVal\" : 941696080,\n      \"fpVal\" : 1.6302935210667946E307,\n      \"stringVal\" : \"pg7br3tl3ljjhwoh9o14ae1b3oi7c89zkpzcxrw2y1cteqd6y9cn9nlj0suu3lxujlte6tusuyllpfo4dhge64kigq\",\n      \"mapVal\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 927205049,\n      \"fpVal\" : 5.852824176398571E307,\n      \"stringVal\" : \"q51inbgf01vf23txkeiqquz9cvelcyoxt9s35ymnlykoc1gbr2vv9cmqox4qao8ele14e9rjhlcdgwxrqdkyuus6hq7aom7ezc7p4i2ro9k49ec742dmaysna6nw24y57m02u\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1180860888,\n      \"fpVal\" : 5.700312233347501E307,\n      \"stringVal\" : \"zsx29iab8gw9sgyizp8xqyx7ujf6zrb5nrmn2ta3d6u5eqvn0u8fs8h0kzis06aknuh33cbqhewx3yhbklvwg1c19ufui4pj7yeg6gdyhuazwoin2mctg5ix2x68nnknoinqohh87wnj10kh2y1aps7uav63thcc1imu5jtcubgq6p5i9ozebes6u0xbyqj7e\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 680122562,\n      \"fpVal\" : 1.6518986064415069E308,\n      \"stringVal\" : \"99rpnooo6sc6l485z943xnzwiji7ib4xrw386kmbbbmir0geza1jlct2gf66e68vy4q60z0o08w2uok21i257qo412rwl0qdw5bsvd1ztn6uywh8gs0jzmwhcyicjgip53rktf5gv0rjb1lhtav7pu5a6dn246s1yh6cbk8ainwzhiahnvzrd9wy2192o\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1106767246,\n      \"fpVal\" : 1.2881289891861793E308,\n      \"stringVal\" : \"qdjfzadym1372pwmenlgut6prls3p14rbnac9b631g8eh46eajkvfngcwbczcad6u7a2ti2s0mnmmn8kd060q9npde7jkgk8bayyucdiqwo2pxqj5xyuhonz5nq5zzu17rn6fpnvk\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"120q\",\n    \"endTimeNanos\" : \"2022-04-05T15:03:27.913222Z\",\n    \"dataTypeName\" : \"Buford Barrows MD\",\n    \"startTimeNanos\" : \"2022-10-28T15:50:27.91329Z\",\n    \"modifiedTimeMillis\" : \"2022-05-04T18:01:27.913319Z\",\n    \"rawTimestampNanos\" : \"2022-12-06T15:23:27.913361Z\",\n    \"computationTimeMillis\" : \"2023-01-14T15:19:27.913394Z\",\n    \"value\" : [ {\n      \"intVal\" : 678483565,\n      \"fpVal\" : 1.7556816144608461E308,\n      \"stringVal\" : \"mf89m4m6rg13wmk3lv81f6ql2eko6eghgmqbksp8t6a4vwyap360nncr09vii1fzaco0kbvpzwowp9b1a31b0dqoge55fyj3oki72hfwydwivbzji7yicosh7li4u1591ioz6ft5pmbr\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 35258942,\n      \"fpVal\" : 1.2955718334708024E308,\n      \"stringVal\" : \"8ba881z30x553eyepl6ceu402uvxajvk41q8lq2coix78h8045ii3k1fyb72je27f1ih8z5rqd5mupie2xnbwg3jmd53r45wgaaezkcodfvmrje7y9j97v40qpjwgqzn5\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1299830341,\n      \"fpVal\" : 1.6248370561381601E308,\n      \"stringVal\" : \"ey3ome2dr6pqa6urmm72thjtphnunlzcufke6ivmjloggvg4ko1b3hfekfw6gkuwnrl7jvkhckczcds1getmk3q01yp1kz7isk2hdz9n71dqtllinc3b47vnf6bis9hy6ou3gcjn0hnrt7nylujyreiicft3pq5s91y9z2\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1111263479,\n      \"fpVal\" : 1.1636627172012271E308,\n      \"stringVal\" : \"3ecquexpkw7dxk31aa9xb2tdq8rtsvo9dzb8qjcs0zogk\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 400168779,\n      \"fpVal\" : 3.301548325244958E306,\n      \"stringVal\" : \"fx08ufwpe5tg4gbijvk5g3yu706gn4emsqa73kwjeqlz6246bvezca46t1eyed45p4z0vulvfcyxsic1m3a45o9jianwolqdqh66udfpe3qtu3dnzsicf1drvhbvvh8ykvnacky96olgk2lsrwmo64knsgr3ow6c2ao3x0efjiw9lr3o5an7iyf8z7qrf4pc\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1704871899,\n      \"fpVal\" : 9.272634972646738E307,\n      \"stringVal\" : \"jo7d9eg9nuit7gxk5pg43qxfrqjrvpytssw7si037uogp4vrnutdv3r92nctwuftfbe6up7qhl1d3vfmvbds01oj019v4oae3smv4fa757cxyizz799fkbrcjkrtv5ssfnu9qrt6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 153633753,\n      \"fpVal\" : 1.5794400943956034E308,\n      \"stringVal\" : \"8z4vfmpsu37b29hrpdkxq6h59w58919q4worc8wcalljpegr2mcj7tgerocav6auvv8sl58471pfkv208cqh1uy6nuektp2hyjho92tggc7t1e67s13j5h2sy40jtk6cc6zi60vpx22mi64zt5qtvqawjuln4a7u5e0xeimabmqibjs0jtnbbitjy12wdnr75jjq\",\n      \"mapVal\" : [ { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"9367\",\n    \"endTimeNanos\" : \"2022-05-31T16:36:27.913715Z\",\n    \"dataTypeName\" : \"Paul Waters\",\n    \"startTimeNanos\" : \"2022-05-17T17:21:27.913802Z\",\n    \"modifiedTimeMillis\" : \"2023-01-03T16:56:27.91383Z\",\n    \"rawTimestampNanos\" : \"2022-08-15T17:49:27.913857Z\",\n    \"computationTimeMillis\" : \"2023-02-27T16:05:27.913887Z\",\n    \"value\" : [ {\n      \"intVal\" : 239927138,\n      \"fpVal\" : 2.751253806195438E307,\n      \"stringVal\" : \"jhk\",\n      \"mapVal\" : [ { } ]\n    }, {\n      \"intVal\" : 1530063507,\n      \"fpVal\" : 1.4596223252266267E308,\n      \"stringVal\" : \"91fxnzi6fhvgzzw49fg84shg1joydup4prt730b985eqr19ov68qnl39\",\n      \"mapVal\" : [ { }, { }, { } ]\n    } ]\n  } ],\n  \"nextPageToken\" : \"671srn619dht6m1wzyw88wmh6r21qd5zwzx7iyzxoh6saj3e1wqm4szd5cqtn6w0rfyq4o9qprpzxsgnigq975qowcg890zxrknuqd7\",\n  \"insertedDataPoint\" : [ {\n    \"originDataSourceId\" : \"11e1\",\n    \"endTimeNanos\" : \"2022-04-08T16:03:27.914064Z\",\n    \"dataTypeName\" : \"Glendora Walter\",\n    \"startTimeNanos\" : \"2022-06-02T18:29:27.914134Z\",\n    \"modifiedTimeMillis\" : \"2022-04-22T17:44:27.914163Z\",\n    \"rawTimestampNanos\" : \"2023-02-05T16:54:27.914193Z\",\n    \"computationTimeMillis\" : \"2022-11-12T15:39:27.914222Z\",\n    \"value\" : [ {\n      \"intVal\" : 1678198928,\n      \"fpVal\" : 7.841064353278713E307,\n      \"stringVal\" : \"aosi4bbgdjw8ms969lvf6dk8dshlxqp46ytw412uxpdf6xpqezkuztkjlfx9gh5dtljsy8l71hod5oqhs04\",\n      \"mapVal\" : [ { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"zw7o\",\n    \"endTimeNanos\" : \"2022-07-12T17:47:27.914345Z\",\n    \"dataTypeName\" : \"Leontine Runte\",\n    \"startTimeNanos\" : \"2022-07-25T17:58:27.914415Z\",\n    \"modifiedTimeMillis\" : \"2023-03-06T15:06:27.914446Z\",\n    \"rawTimestampNanos\" : \"2022-11-11T16:48:27.914475Z\",\n    \"computationTimeMillis\" : \"2022-04-18T16:55:27.914505Z\",\n    \"value\" : [ {\n      \"intVal\" : 252968631,\n      \"fpVal\" : 5.756324912951798E307,\n      \"stringVal\" : \"cb7yaz6is1p45ijamkshjuvjn3gt36tjqbigk5betoona1w7rmh2zgzy5lze8qw77pn0004liidsoniz9ouevd1u2fnli2icz8k68lleblsc6g8rscl3mepuwt3gk3qvq7zu3e1y8als96nq4v0wwqb3g6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 1406147341,\n      \"fpVal\" : 1.7404117840543033E308,\n      \"stringVal\" : \"r8gkgt0him7p89e1qplo2pg27hud9kpbcnn7jzqbsc4jot5hi5lc5pxtyyug72f429hl7dk6m74tofdzocdiawl5q5ouno37jppcy9fqd03cy7ze7x9ehqfozh2v7fceg\",\n      \"mapVal\" : [ { }, { }, { } ]\n    }, {\n      \"intVal\" : 93205103,\n      \"fpVal\" : 8.017781708039137E307,\n      \"stringVal\" : \"2mnqkukt1bks6gveyrj2dx15fus67p02a5npduqjofbs1qm1dzejy2ynnnx5wkbb5yyeqeq7ur53usn1xzlp12h6v7yi1eqmzzjhxt6iezr5k7xwxhhb36vy1k5zmrpiyyyfvs3van07wfyn57plgsweo46umi41rp4azb\",\n      \"mapVal\" : [ { }, { }, { }, { } ]\n    } ]\n  }, {\n    \"originDataSourceId\" : \"28i1\",\n    \"endTimeNanos\" : \"2023-01-01T18:37:27.914697Z\",\n    \"dataTypeName\" : \"Stan Smith\",\n    \"startTimeNanos\" : \"2022-07-17T18:19:27.914766Z\",\n    \"modifiedTimeMillis\" : \"2022-06-22T15:56:27.914794Z\",\n    \"rawTimestampNanos\" : \"2022-09-15T18:28:27.914825Z\",\n    \"computationTimeMillis\" : \"2023-02-18T15:09:27.914853Z\",\n    \"value\" : [ {\n      \"intVal\" : 915967591,\n      \"fpVal\" : 8.155919739148304E307,\n      \"stringVal\" : \"uf3b2ec13d3ucg4499rot6\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"intVal\" : 839024007,\n      \"fpVal\" : 8.342640137383275E307,\n      \"stringVal\" : \"yt7t4cau9ctcw8k1hyyoz6471exrcf1pquq12q8oxlpo5i2rxn2gexu416mtjhllvo6i9mwtqxb9f1dz3bhw5hhrtesna2y51vh997mu\",\n      \"mapVal\" : [ { }, { }, { }, { }, { }, { } ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28ab95ed-fa13-4b58-8ec5-f9f5dd0bea06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.915186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.dataPointChanges.list",
          "schema" : {
            "properties" : {
              "dataSourceId" : {
                "description" : "The data stream ID of the data source with data point changes.",
                "type" : "string"
              },
              "deletedDataPoint" : {
                "description" : "Deleted data points for the user. Note, for modifications this should be parsed before handling insertions.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "insertedDataPoint" : {
                "description" : "Inserted data points for the user.",
                "items" : {
                  "$ref" : "#/components/schemas/DataPoint"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The continuation token, which is used to page through large result sets. Provide this value in a subsequent request to return the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b00f495a-4d4e-4b68-b0e1-e6c4627c2d3a",
    "name" : "Updates the specified data source. The dataStreamId, dataType, type, dataStreamN...",
    "request" : {
      "urlPath" : "/07h8/dataSources/9k33",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Terrance Wiegand\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/809505\",\n    \"name\" : \"Dr. Lorine Kub\",\n    \"packageName\" : \"Tyron Abernathy\",\n    \"version\" : \"x50u052ypmp0limrzf2o7473ggyuiw0c162kpjmtzx76kb1vx32ijp9d2y21i\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"map\",\n      \"name\" : \"Huey Lakin\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Kristine Franecki\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Jeannette Wyman\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"floatList\",\n      \"name\" : \"Edgar Hegmann\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Francisco Senger\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Jeffie Howe DVM\"\n  },\n  \"name\" : \"Blair O'Conner\",\n  \"dataQualityStandard\" : [ \"dataQualityUnknown\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsBA\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"s3v0\",\n    \"model\" : \"vaydqcbgdr9n84hz5lv955w8yvuqdirj724h89dyklajhd08r71mv6i7bugeemvnko3kmnd5oi92stigjv7c3nto7zyrs2gswpspdrfaljfmd77n5no763ju3xcqx3615t6i14bhwvvh8f78izouvhuex5fuevtyv7i9x21008ig0aybto8vo3gynu7p7o\",\n    \"type\" : \"scale\",\n    \"version\" : \"fhi8dwqeumt59o3ej8oxx34edmncctgvxlqdtw6tn79kufgrp1er7gtgkt4wxa1nwdycgjq4thg3zf58dsulprwozr82runu0wgvvv6d9fo60seqp0ql0wt5139msi43ky7kkywzum68mecr3e1tpufjridszgwb90n05pnzh6mifyuto165n7qnw3\",\n    \"manufacturer\" : \"adx5k6m0ttaqwiar2t9mzq9u2yxema4jano2flr334oaewfo607i4nt245p4mdh9a0hqfx6jyy46ikg38ksrz45rq8ibq4qjbzwgoaoojdndnf\"\n  },\n  \"dataStreamId\" : \"19j9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b00f495a-4d4e-4b68-b0e1-e6c4627c2d3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.912527Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.update",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e24a594-8de9-4b1b-9419-23a9e397b5b7",
    "name" : "Returns the specified data source.",
    "request" : {
      "urlPath" : "/n084/dataSources/btoq",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Rod King PhD\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/037991\",\n    \"name\" : \"Lorriane Brown\",\n    \"packageName\" : \"Allan Padberg\",\n    \"version\" : \"x9o9npvonu2amorras8i9tv92nv9805vcooha0bbb63mj4cfqxuxlycvi2w581qay4fsb2wy59jivjz3firc8\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"map\",\n      \"name\" : \"Miss Carlotta Brown\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integerList\",\n      \"name\" : \"Donnell Schuppe\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Brittney Robel\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Bobby Okuneva MD\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Orville Littel\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"integer\",\n      \"name\" : \"Miss Jamel Ruecker\",\n      \"optional\" : true\n    } ],\n    \"name\" : \"Erick Kris\"\n  },\n  \"name\" : \"Ranee Jones\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsBB\" ],\n  \"type\" : \"derived\",\n  \"device\" : {\n    \"uid\" : \"8pfx\",\n    \"model\" : \"512cywxql12ov9ks5sir7c2rq2sfz2blmduskkr5hpwsdn05m8be3uis9mq2v5j9fe8is1iq3ub\",\n    \"type\" : \"chestStrap\",\n    \"version\" : \"y4t6a2zih48edqxcunvg0y3nz8az7h6d1qvyq0q46i88vhmiw41x9wd9268fkxxykv2tjzz2z90bxd7kr\",\n    \"manufacturer\" : \"og9qp2jmk2mardvrl3wpt03fgqn73c5t7823qfhsvb9hmwyldkptjsps8rgp29znzebvnrxkhalcthkz2g7l74cygxg1b0qroic5z8o0truu6551hrfqpfrclyaj4busb2kpk\"\n  },\n  \"dataStreamId\" : \"mror\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e24a594-8de9-4b1b-9419-23a9e397b5b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.911615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.get",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8bff9685-ba9e-4060-8aec-03f1233398b2",
    "name" : "Deletes the specified data source. The request will fail if the data source cont...",
    "request" : {
      "urlPath" : "/1z94/dataSources/ib2i",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Milan Schowalter\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/731162\",\n    \"name\" : \"Kari Auer\",\n    \"packageName\" : \"Madlyn Zulauf\",\n    \"version\" : \"mtwdy3wnhv5ydyzrkryepl6smuj029mdsddxy6plfdxt8myzmeqcc3p6buhq\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"integer\",\n      \"name\" : \"Grady Jacobson V\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Hayden Larson\"\n  },\n  \"name\" : \"Olimpia Pacocha\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodPressureAami\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureBhsBA\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"sw6x\",\n    \"model\" : \"0t2jw134m6ldtwnq4m8j6i0h3h5gtr1cxe4281z5xy4j952qi4thq30c4n7fhcwg4pu7dhoco0wz67r315tiw73qbm5mgorb7dx2xh9qfdhb8y569t0b8gsuoqv3u0y6ejoy9609vggtuzq2myx1lod97m1kaampfz0h\",\n    \"type\" : \"chestStrap\",\n    \"version\" : \"yiq8ewogjya5pvcje5vk7cg5hfxv6ewldfwjkqpm9b5vgz4u3nonoivf4j699ik97fnn08zxz91yt36v3nisgasoqcwre8sglv4b26hh1wtjet9qo0r0l7702cqwfu38i2u064a6o6fihj9zmq4q9qhbxqxwdm976k79w2x4jl3pzyqydqd7dvctafpd9dj7em4iv\",\n    \"manufacturer\" : \"zo1kwnnckefrbqn3vebd7fz409clq854ucwm55vyleov78sycwrt9f2kbuf1lqe8p4atxj2lichagb58yosee8ezkzgiq6p9n6que8k1s867f2rst8h5oq\"\n  },\n  \"dataStreamId\" : \"8uia\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bff9685-ba9e-4060-8aec-03f1233398b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.91061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.delete",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bcc4cef2-cea1-4cfb-8b8c-912d1c1a6be9",
    "name" : "Creates a new data source that is unique across all data sources belonging to th...",
    "request" : {
      "urlPath" : "/22s2/dataSources",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataStreamName\" : \"Serita Labadie IV\",\n  \"application\" : {\n    \"detailsUrl\" : \"https://web.example.mocklab.io/835138\",\n    \"name\" : \"Henrietta Koch\",\n    \"packageName\" : \"Neil Bashirian Sr.\",\n    \"version\" : \"kqeh873yu85o6cjjtjlnib6zeicigcn3msae3p3uiay8ov2jy4kq6h0uzc6wczmezxlnk8h665nlwnjnkv0\"\n  },\n  \"dataType\" : {\n    \"field\" : [ {\n      \"format\" : \"string\",\n      \"name\" : \"Roy Douglas\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Andre Christiansen\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Chantell Wilderman\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Federico Aufderhar\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"blob\",\n      \"name\" : \"Tracey Tillman II\",\n      \"optional\" : false\n    }, {\n      \"format\" : \"map\",\n      \"name\" : \"Sharell Gutmann\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"string\",\n      \"name\" : \"Ilona Schmitt\",\n      \"optional\" : true\n    }, {\n      \"format\" : \"floatPoint\",\n      \"name\" : \"Odis Sporer Sr.\",\n      \"optional\" : false\n    } ],\n    \"name\" : \"Enrique Ortiz\"\n  },\n  \"name\" : \"Carman Reichel\",\n  \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureAami\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityUnknown\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2002\" ],\n  \"type\" : \"raw\",\n  \"device\" : {\n    \"uid\" : \"rk5o\",\n    \"model\" : \"nho7rbcfuzijvmbjt88z6na2szcixkrprnxqnpe6ih3ou1u8idvkdoofq8foykijs86z56acgcesr3q1cn8h8oq3hy3ilw24yk8xp37iwfn17rt7tqoliwbosae4wptc23j4s2tbrd11ram9dt2tpzfrsglm02\",\n    \"type\" : \"scale\",\n    \"version\" : \"v0s1r74kipu0kdal0vqb3tirqa507m0bl6x00v46h3qv46nuxjgep4rg80mcvoupct8r4t37md52qaxewdm22m1h2kc31wfsxv1m9xtqm\",\n    \"manufacturer\" : \"20ntfxc4ww9551mw81lxlq5phnmmghr1hcnuz6tbhvna4xttxicbeghl91ku4yh5tee6y394ah26q6kzq3k94dmfb8wn9dv4nidnvth9x2k5nh142k9jdx549cea45fbjturfo0rryb00mx3v5727j5soqeiwcpuhaiq8\"\n  },\n  \"dataStreamId\" : \"bc1o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcc4cef2-cea1-4cfb-8b8c-912d1c1a6be9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.909879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.create",
          "schema" : {
            "description" : "Definition of a unique source of sensor data. Data sources can expose raw data coming from hardware sensors on local or companion devices. They can also expose derived data, created by transforming or merging other data sources. Multiple data sources can exist for the same data type. Every data point inserted into or read from this service has an associated data source. The data source contains enough information to uniquely identify its data, including the hardware device and the application that collected and/or transformed the data. It also holds useful metadata, such as the hardware and application versions, and the device type. Each data source produces a unique stream of data, with a unique identifier. Not all changes to data source affect the stream identifier, so that data collected by updated versions of the same application/device can still be considered to belong to the same data stream.",
            "properties" : {
              "application" : {
                "$ref" : "#/components/schemas/Application"
              },
              "dataQualityStandard" : {
                "description" : "DO NOT POPULATE THIS FIELD. It is never populated in responses from the platform, and is ignored in queries. It will be removed in a future version entirely.",
                "items" : {
                  "enum" : [ "dataQualityUnknown", "dataQualityBloodPressureEsh2002", "dataQualityBloodPressureEsh2010", "dataQualityBloodPressureAami", "dataQualityBloodPressureBhsAA", "dataQualityBloodPressureBhsAB", "dataQualityBloodPressureBhsBA", "dataQualityBloodPressureBhsBB", "dataQualityBloodGlucoseIso151972003", "dataQualityBloodGlucoseIso151972013" ],
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataStreamId" : {
                "description" : "A unique identifier for the data stream produced by this data source. The identifier includes: - The physical device's manufacturer, model, and serial number (UID). - The application's package name or name. Package name is used when the data source was created by an Android application. The developer project number is used when the data source was created by a REST client. - The data source's type. - The data source's stream name. Note that not all attributes of the data source are used as part of the stream identifier. In particular, the version of the hardware/the application isn't used. This allows us to preserve the same stream through version updates. This also means that two DataSource objects may represent the same data stream even if they're not equal. The exact format of the data stream ID created by an Android application is: type:dataType.name:application.packageName:device.manufacturer:device.model:device.uid:dataStreamName The exact format of the data stream ID created by a REST client is: type:dataType.name:developer project number:device.manufacturer:device.model:device.uid:dataStreamName When any of the optional fields that make up the data stream ID are absent, they will be omitted from the data stream ID. The minimum viable data stream ID would be: type:dataType.name:developer project number Finally, the developer project number and device UID are obfuscated when read by any REST or Android client that did not create the data source. Only the data source creator will see the developer project number in clear and normal form. This means a client will see a different set of data_stream_ids than another client with different credentials.",
                "type" : "string"
              },
              "dataStreamName" : {
                "description" : "The stream name uniquely identifies this particular data source among other data sources of the same type from the same underlying producer. Setting the stream name is optional, but should be done whenever an application exposes two streams for the same data type, or when a device has two equivalent sensors.",
                "type" : "string"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "device" : {
                "$ref" : "#/components/schemas/Device"
              },
              "name" : {
                "description" : "An end-user visible name for this data source.",
                "type" : "string"
              },
              "type" : {
                "description" : "A constant describing the type of this data source. Indicates whether this data source produces raw or derived data.",
                "enum" : [ "raw", "derived" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c6deffd-f622-4784-a7ca-d479479ae321",
    "name" : "Lists all data sources that are visible to the developer, using the OAuth scopes...",
    "request" : {
      "urlPath" : "/i889/dataSources",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataSource\" : [ {\n    \"dataStreamName\" : \"Mrs. Mathilda Olson\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/297901\",\n      \"name\" : \"Rosendo Conn IV\",\n      \"packageName\" : \"Gilbert Dietrich DVM\",\n      \"version\" : \"brsoh2a\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"integer\",\n        \"name\" : \"Derick Zieme DVM\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Brandy Borer III\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Naoma Cummerata I\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"map\",\n        \"name\" : \"Reda Hilpert\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Michelle Leuschke\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Jamey Ferry\"\n    },\n    \"name\" : \"Christian Mraz\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAA\", \"dataQualityUnknown\", \"dataQualityBloodGlucoseIso151972003\", \"dataQualityBloodPressureBhsAA\", \"dataQualityBloodPressureEsh2002\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsAA\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"y3p0\",\n      \"model\" : \"ts19ejciq5bmvet15wknvdd7aa3ch83odveftcamuczlc5r2mei4kzc4vmlgm8euvwu0q7rudy43tltxac55yvcw5exp8o74nblfxig3rzs5iefrayxr3v7n89jsnkgho1rcims1k3tut1ayqg6s5wq17ci\",\n      \"type\" : \"scale\",\n      \"version\" : \"s24et1yug1zig0xooolqt12avfsruarrp0xu28j0epcfcp5oth18ipxuxd5w7bdwn4qip3lk5duhagbf5dcv2onsrkw0ggjbaqr6ci73zs88vfqmn2wxidq5obiw18szwavzk6ht1tb1d56kvii5810ol837dcgggksbm7kph9zzmfn\",\n      \"manufacturer\" : \"svn2ob5lbk9knsfu067bn8h6du4tnxyk7laozyx3xdqi6j9jd2mkh5bsjb29ys0w4kbe1ha7vs6hljeyiqlfz45r61w8mqq16\"\n    },\n    \"dataStreamId\" : \"759r\"\n  }, {\n    \"dataStreamName\" : \"Mr. Rigoberto Wolf\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/677303\",\n      \"name\" : \"Alfonzo Morar V\",\n      \"packageName\" : \"Wilmer Beahan\",\n      \"version\" : \"e8wfv490pt94exmswfckjj1n1woy2ymtzl\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"floatList\",\n        \"name\" : \"Deedra Huels\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Larae Leannon\"\n    },\n    \"name\" : \"Hoyt Auer\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodGlucoseIso151972013\", \"dataQualityBloodPressureEsh2002\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureAami\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"zi9k\",\n      \"model\" : \"ycc3pnu4j6e2y1mad67o0ffclwujjg7lje9fkbh2nffzk\",\n      \"type\" : \"headMounted\",\n      \"version\" : \"ro5sf4hn47dc3d8nbvciptd58mwto9quhkqdeofdrffm1ue8tnvewsqmuzie9hie96v5ua0beebwu3o97000unwqqlcu6\",\n      \"manufacturer\" : \"2safjhxkv23wai3vcqqe8mib1m1lor8drcbvapf75y0num11\"\n    },\n    \"dataStreamId\" : \"1ma8\"\n  }, {\n    \"dataStreamName\" : \"Francisca Hagenes\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/907966\",\n      \"name\" : \"Dean Waelchi\",\n      \"packageName\" : \"Josefina McClure\",\n      \"version\" : \"x4j8459tfq8ghnfjmtqf8no2awapaix2m2s22sc86cpygbaye4wm66v0y3b4vrnjdqkqex858gyutibzyybfcqul3uhqs54tv43uewmk23yw4guivwmjcd8yml\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"blob\",\n        \"name\" : \"Hayden Hegmann DVM\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integer\",\n        \"name\" : \"Lavette Marquardt\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Ms. Christian Hagenes\",\n        \"optional\" : true\n      } ],\n      \"name\" : \"Nila Gerlach\"\n    },\n    \"name\" : \"Robin Bechtelar V\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureEsh2010\", \"dataQualityBloodPressureBhsAB\", \"dataQualityUnknown\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBB\", \"dataQualityBloodPressureBhsBA\" ],\n    \"type\" : \"derived\",\n    \"device\" : {\n      \"uid\" : \"j749\",\n      \"model\" : \"8dayp2fx9mh6mqfkzm9pntvubryy8ypyv4n23axdxt5j5ni9gx2j6cedsbojsi4y8llwcg2x3ztcab4lt0th3idd1ng9evfw66ms17lf7zy5n\",\n      \"type\" : \"unknown\",\n      \"version\" : \"rvv80k0q1v92y2vwxeh80f5vcekslgg0q4dzvdfn6m4zopmlpfkpqdiaravs4tf8y2evhas546bry6qt6mwltmn9\",\n      \"manufacturer\" : \"8o6neujp0jimzu7un7tmigeishmdlboet9v73v7pa02yh0ijlcbm4st1piwqb8hulivpwfbzwawh8yyvbdiziu7wom4s586gbu2lrr8k8kynu4801stb2loczn1jbqjgmoe79n6crrcptfhgcz\"\n    },\n    \"dataStreamId\" : \"6yr9\"\n  }, {\n    \"dataStreamName\" : \"Joan Treutel\",\n    \"application\" : {\n      \"detailsUrl\" : \"https://web.example.mocklab.io/985438\",\n      \"name\" : \"Rosana Upton\",\n      \"packageName\" : \"Lionel Baumbach\",\n      \"version\" : \"chssc7wpj42d0k8k6kp6lkrperkm40mxard2nhj4cya50ryh9zdsn3l7fbqnm1i84lt94u9m2zf0cy04273uc3clb0u0to2lx8uijapd4o01rexrs\"\n    },\n    \"dataType\" : {\n      \"field\" : [ {\n        \"format\" : \"map\",\n        \"name\" : \"Elijah Stokes DDS\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"blob\",\n        \"name\" : \"Augustine Von\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Dan Schmitt IV\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Dani Hagenes\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Ji Hilpert Sr.\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"string\",\n        \"name\" : \"Spring Howe\",\n        \"optional\" : false\n      }, {\n        \"format\" : \"floatPoint\",\n        \"name\" : \"Patti Runolfsdottir\",\n        \"optional\" : true\n      }, {\n        \"format\" : \"integerList\",\n        \"name\" : \"Nicolas Kilback PhD\",\n        \"optional\" : false\n      } ],\n      \"name\" : \"Miss Jessica Cartwright\"\n    },\n    \"name\" : \"Sherrie Parker\",\n    \"dataQualityStandard\" : [ \"dataQualityBloodPressureBhsAB\", \"dataQualityBloodPressureBhsBA\", \"dataQualityBloodPressureBhsBB\", \"dataQualityUnknown\", \"dataQualityBloodPressureBhsBA\" ],\n    \"type\" : \"raw\",\n    \"device\" : {\n      \"uid\" : \"y5v4\",\n      \"model\" : \"ryv2sm7see9844j95g928gp4k7c8nbhx11ckhd1loiujf83x5d6w2fn5ecrbpo0e3g4jt8oowqnoyrmcbfrpwhly49jjt9v0ivvz7x4d94oopfqizs4ac9lw5t5fz2ib96wqxuegw3se3t1farejxc09qsgk7yuvxihxagodov43mxab4gtv\",\n      \"type\" : \"phone\",\n      \"version\" : \"3qfqrdifjizo6k1t6350vahh0xy6hyc\",\n      \"manufacturer\" : \"bruk8735p1lkzo34w41e4e78mwfjhdqk4fjy7rxmt26liz07xlf10i6gces6c67m16xf9atm2st6e7uygzl5lluqxs2my2jy0pzjap1qsmyyq8chunhq3e7ca8vv91xt3jbqqwx1h91yehr8n19\"\n    },\n    \"dataStreamId\" : \"tco4\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c6deffd-f622-4784-a7ca-d479479ae321",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:27.908791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "fitness.users.dataSources.list",
          "schema" : {
            "properties" : {
              "dataSource" : {
                "description" : "A previously created data source.",
                "items" : {
                  "$ref" : "#/components/schemas/DataSource"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}