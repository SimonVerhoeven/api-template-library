{
  "mappings" : [ {
    "id" : "5799c3fb-2b6c-48c2-90b0-72b6338f5f93",
    "name" : "Update flow test users",
    "request" : {
      "urlPath" : "/v2/Flows/FWF3F4A9514E734d7AAad04Bd37D76FBB5/TestUsers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"url\" : \"https://web.example.mocklab.io/752492\",\n  \"sid\" : \"FW29DEc5A11aC1Fe5f8D7E0fB2a7Db326d\",\n  \"test_users\" : [ \"lqnq9hq8xtufmx8rk4g8ddst5apa2rf3yl0jvdd17vpfvgnnagzfud4pbl15r3ebj5iskyna6jvo21ihemxg0lx5kfwuybbcs29q49xgia5bm5tttjhrfs4noar2jrx\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5799c3fb-2b6c-48c2-90b0-72b6338f5f93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.497392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateTestUser",
          "schema" : {
            "properties" : {
              "sid" : {
                "description" : "Unique identifier of the flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "test_users" : {
                "description" : "List of test user identities that can test draft versions of the flow.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "ab708ba4-61c8-49d1-b826-100f81597087",
    "name" : "Fetch flow test users",
    "request" : {
      "urlPath" : "/v2/Flows/FWAd9cab1fABACF3f01EA31457DBEeaa4D/TestUsers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"url\" : \"https://web.example.mocklab.io/445777\",\n  \"sid\" : \"FWCeD880d2F58A3D51EB2C1a24dAf1d4EB\",\n  \"test_users\" : [ \"mazq66yqt5ffzdrj45pqjtyrdrx7861df7dojtnsua4z4w05guhsbyrikxf9yrwtb9wgiawit5w4hdesaq9w20iovbe9qebrciabvmqbgzg91\", \"u8t543nvh23kgq6wi7gy418fadgnlm9vhod6ez565u3qs1ehadui0yi79bo9qowibg561nqwl2o9mjd3vsln0v593o3umio0hkpiy4\", \"ec7alw82ov6vpabdrdsmvls59y94tgazsezevmlnmad6ous6ahdauv3glcrxooiiinbfbpnnqyyfz5n0g0asma11c8km2x5z8ghci4epmk6lw9p1jt1h92nmrge7fkadlmb1txwyfzz93st2bdcc3axknrwu7s3\", \"54chbxj711w3612womb9l4qzz1vq6rosby3iqfxzxa5z9sjt5yp1lmwymgwfqg9mkuuafqwa9ckrk5uh3k1bmcpxqd0jdh21kb0es8z2g6zsbgacqswyklwrp5o6\", \"ys0jhvo21kd1r2davynohu9cx1wmzaoymnji1m7u23gzboop0i3zbhglh09ep6z0qppqu93895oqprlzfqphwe5i4zdtbd14y0j\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab708ba4-61c8-49d1-b826-100f81597087",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.497258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchTestUser",
          "schema" : {
            "properties" : {
              "sid" : {
                "description" : "Unique identifier of the flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "test_users" : {
                "description" : "List of test user identities that can test draft versions of the flow.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "url" : {
                "description" : "The URL of this resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "bd12a047-d6fd-4b05-a670-b3e1fddc8f3a",
    "name" : "Retrieve a specific Flow revision.",
    "request" : {
      "urlPath" : "/v2/Flows/FW8bDA0e97FF2FEc0BCa1eDdd7afc7AFB6/Revisions/2wmsdi1munkwyfyy8hkhu9ipa8770foib6w51gnsvnt4st2ydmpof6e7uvlt4g5ea2539wmz0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true,\n  \"friendly_name\" : \"Mr. James Walter\",\n  \"date_updated\" : \"2022-10-28T00:28:57.496Z\",\n  \"date_created\" : \"2023-08-25T15:15:38.496Z\",\n  \"account_sid\" : \"ACDAD5faaE9D8Cb38aB2Ee9DF59dc4fbc0\",\n  \"definition\" : { },\n  \"commit_message\" : \"Et aut eligendi est non sit. Laboriosam impedit quia quod omnis atque ex dignissimos. Occaecati laboriosam in.\",\n  \"errors\" : [ { }, { }, { }, { }, { } ],\n  \"url\" : \"https://web.example.mocklab.io/271996\",\n  \"revision\" : 6965814059668813246,\n  \"sid\" : \"FW41FfaaC6f1acA22FC2a46DE026E70A27\",\n  \"status\" : \"draft\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd12a047-d6fd-4b05-a670-b3e1fddc8f3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.497063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchFlowRevision",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commit_message" : {
                "description" : "Description of change made in the revision.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "definition" : {
                "description" : "JSON representation of flow definition.",
                "nullable" : true
              },
              "errors" : {
                "description" : "List of error in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the Flow.",
                "nullable" : true,
                "type" : "string"
              },
              "revision" : {
                "description" : "The latest revision number of the Flow's definition.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/flow_revision_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Boolean if the flow definition is valid.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "6b383c04-3ac1-4bfe-a764-5c9f390d3db9",
    "name" : "Retrieve a list of all Flows revisions.",
    "request" : {
      "urlPath" : "/v2/Flows/FW5E19EC7A9cD52cbbAa7AAc6bb82f9De8/Revisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/313142\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/618510\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/567411\",\n    \"page\" : 5826624435387156244,\n    \"key\" : \"zpfuj7cf0cr3duk1dx9upyu5xtlejldyh9a16b64t0u2l7fz1u44o3yahdbsa7o5byqjvaoy23k9tvnz2ori0osl0hfxn6n9xpt3uv3bcyp8kyi22u6ucixtma7jpmu1veyrgavon36nu06az7av4cp7j8to108nppppgwogy6l2k67bewtk5672j2j7yb2vy1qne4\",\n    \"url\" : \"https://web.example.mocklab.io/213643\",\n    \"page_size\" : 3568196355498181073\n  },\n  \"revisions\" : [ {\n    \"valid\" : true,\n    \"friendly_name\" : \"Lane Leuschke\",\n    \"date_updated\" : \"2023-03-26T05:31:59.495Z\",\n    \"date_created\" : \"2023-05-07T19:41:20.495Z\",\n    \"account_sid\" : \"ACdB52a114F79c5599B7bf2eDA5Ab0ACdF\",\n    \"definition\" : { },\n    \"commit_message\" : \"Consequatur numquam dolorem animi consequatur adipisci atque. Ut odio aliquam omnis explicabo ea quis. Soluta suscipit ullam. In exercitationem autem laudantium sed.\",\n    \"errors\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"url\" : \"https://web.example.mocklab.io/818069\",\n    \"revision\" : 8714517253771898772,\n    \"sid\" : \"FW00d03e2F6DdcFAa9fDcDee4D5F3D95eF\",\n    \"status\" : \"draft\"\n  }, {\n    \"valid\" : true,\n    \"friendly_name\" : \"Mr. Adrian Sanford\",\n    \"date_updated\" : \"2024-03-09T15:28:27.495Z\",\n    \"date_created\" : \"2023-12-07T00:46:02.495Z\",\n    \"account_sid\" : \"ACF12792fed7f3Bbbc24E8c3fFFacBCa4f\",\n    \"definition\" : { },\n    \"commit_message\" : \"Quas accusantium incidunt ut et error rerum voluptas. Consequatur distinctio minima dolor error ipsam. Earum ipsum saepe. Sit ea optio. Magnam accusantium rerum delectus aut.\",\n    \"errors\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"url\" : \"https://web.example.mocklab.io/639168\",\n    \"revision\" : 7589240305682047309,\n    \"sid\" : \"FWaeBD0A33C835710Ac09d9ad14B420B9f\",\n    \"status\" : \"published\"\n  }, {\n    \"valid\" : false,\n    \"friendly_name\" : \"Byron Stiedemann\",\n    \"date_updated\" : \"2023-01-03T10:19:47.496Z\",\n    \"date_created\" : \"2023-06-12T22:56:37.496Z\",\n    \"account_sid\" : \"ACa79bD8a6E9e2d2d4481D604147cbcC23\",\n    \"definition\" : { },\n    \"commit_message\" : \"Eius dolores commodi modi. Itaque amet quibusdam dicta consequatur. Veniam tenetur ex qui. Unde placeat et distinctio fuga in. Inventore aut aspernatur veritatis laboriosam est et temporibus.\",\n    \"errors\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"url\" : \"https://web.example.mocklab.io/883824\",\n    \"revision\" : 645823210500579660,\n    \"sid\" : \"FW2EebF80fd36518Eb93cd78a13ab0dd5F\",\n    \"status\" : \"draft\"\n  }, {\n    \"valid\" : false,\n    \"friendly_name\" : \"Jefferey Simonis\",\n    \"date_updated\" : \"2022-04-07T14:26:42.496Z\",\n    \"date_created\" : \"2023-12-11T14:34:42.496Z\",\n    \"account_sid\" : \"ACEe8EE495f4FC01AeCed4B770DeDAa3De\",\n    \"definition\" : { },\n    \"commit_message\" : \"Perspiciatis itaque consequatur ad et possimus. Dolore in quo alias corrupti alias error. Et nam est quam aut. Voluptatibus et nemo eos distinctio sed.\",\n    \"errors\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"url\" : \"https://web.example.mocklab.io/149730\",\n    \"revision\" : 7197227733563125976,\n    \"sid\" : \"FWeEBaA2EE4fBcfbB9912033be6D410b1a\",\n    \"status\" : \"published\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b383c04-3ac1-4bfe-a764-5c9f390d3db9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.496677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListFlowRevision",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "revisions" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v2.flow.flow_revision"
                },
                "type" : "array"
              }
            },
            "title" : "ListFlowRevisionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "c4d9f951-b6d3-46fb-b62b-d206e049d4d4",
    "name" : "Update a Flow.",
    "request" : {
      "urlPath" : "/v2/Flows/FWBF2F710FDB60C39B4CEED4A0dA7ebdAa",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Aletha Sanford\",\n  \"date_updated\" : \"2023-08-06T05:32:35.494Z\",\n  \"webhook_url\" : \"https://web.example.mocklab.io/170797\",\n  \"date_created\" : \"2024-01-01T15:08:18.494Z\",\n  \"warnings\" : [ { } ],\n  \"commit_message\" : \"Perspiciatis omnis ut et rerum et. Et nam quidem voluptatem. At ut voluptatem ea animi. Veniam dolorem autem velit dolorum. Labore debitis consequatur earum sed optio suscipit ut.\",\n  \"url\" : \"https://web.example.mocklab.io/695932\",\n  \"revision\" : 8209039870196902238,\n  \"sid\" : \"FW9A0FbB2CEcC5c26ba5CFc78322e2aACf\",\n  \"valid\" : true,\n  \"account_sid\" : \"ACbDfC34DDf0eC4b824c36F9b57eB83F39\",\n  \"definition\" : { },\n  \"links\" : { },\n  \"errors\" : [ { }, { }, { }, { } ],\n  \"status\" : \"draft\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4d9f951-b6d3-46fb-b62b-d206e049d4d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.495243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateFlow",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commit_message" : {
                "description" : "Description of change made in the revision.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "definition" : {
                "description" : "JSON representation of flow definition.",
                "nullable" : true
              },
              "errors" : {
                "description" : "List of error in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the Flow.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of the Flow's nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "description" : "The latest revision number of the Flow's definition.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/flow_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Boolean if the flow definition is valid.",
                "nullable" : true,
                "type" : "boolean"
              },
              "warnings" : {
                "description" : "List of warnings in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "webhook_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "6d875ba0-3737-4003-9ea5-8ff1e2b14186",
    "name" : "Retrieve a specific Flow.",
    "request" : {
      "urlPath" : "/v2/Flows/FW80dbd6c1CDfCBF650A3bebfFebdAcC6e",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Birdie Torphy II\",\n  \"date_updated\" : \"2023-03-21T04:50:14.494Z\",\n  \"webhook_url\" : \"https://web.example.mocklab.io/531512\",\n  \"date_created\" : \"2024-01-26T03:46:18.494Z\",\n  \"warnings\" : [ { }, { } ],\n  \"commit_message\" : \"Autem error modi a. Illo neque est. Autem quia vel sed eveniet. Magnam minima rerum vero fuga.\",\n  \"url\" : \"https://web.example.mocklab.io/506639\",\n  \"revision\" : 6391173659607765556,\n  \"sid\" : \"FW2D742dD65fA6b6BBD1002d1D0df9dBa9\",\n  \"valid\" : true,\n  \"account_sid\" : \"AC5D4A56fFB137BA8CEAcDDf41B6EA465c\",\n  \"definition\" : { },\n  \"links\" : { },\n  \"errors\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"status\" : \"draft\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d875ba0-3737-4003-9ea5-8ff1e2b14186",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.494798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchFlow",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commit_message" : {
                "description" : "Description of change made in the revision.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "definition" : {
                "description" : "JSON representation of flow definition.",
                "nullable" : true
              },
              "errors" : {
                "description" : "List of error in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the Flow.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of the Flow's nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "description" : "The latest revision number of the Flow's definition.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/flow_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Boolean if the flow definition is valid.",
                "nullable" : true,
                "type" : "boolean"
              },
              "warnings" : {
                "description" : "List of warnings in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "webhook_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "de39bb1b-336a-448e-94da-da7b17c22258",
    "name" : "Delete a specific Flow. - 204",
    "request" : {
      "urlPath" : "/v2/Flows/FW481C7d3BDCdBDFc1AfaFaE6cFde6d2bb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "de39bb1b-336a-448e-94da-da7b17c22258",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.494304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteFlow"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1e7a50ff-f3ee-4776-9b6b-4b9e0cc2b9c2",
    "name" : "Update the status of an Execution to `ended`.",
    "request" : {
      "urlPath" : "/v2/Flows/FWc1Cd38cc9b7f233A5A79E72B08dC34Ad/Executions/FNcf11ea9dcDd9A79DCA2fC46cf6f95807",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWafbAe0b13F76dB32B45a72eBEe3Cb09e\",\n  \"date_updated\" : \"2022-09-22T15:04:07.494Z\",\n  \"contact_channel_address\" : \"n0rmjnv6wlj2n1js9krldhbgc1dd873r6mu7wh2fr4pcinut2cq4lppimbv3\",\n  \"date_created\" : \"2023-05-03T18:26:34.494Z\",\n  \"context\" : { },\n  \"account_sid\" : \"ACfCf1ADdd0a2e206bAEE22BAa8Ef3F3EA\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/118821\",\n  \"sid\" : \"FNeb7FCB6CBeA79B862c0B5409C2ecD39a\",\n  \"status\" : \"active\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e7a50ff-f3ee-4776-9b6b-4b9e0cc2b9c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.494269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateExecution",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/execution_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0059b489-d404-4916-815d-930fb90610c9",
    "name" : "Retrieve an Execution",
    "request" : {
      "urlPath" : "/v2/Flows/FWC355cc1FB85F34Cad11CdceA629aDACE/Executions/FNb5B67AAf3eceE7Faa8FF5Bda2b0F08e5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWF0Fe258eB07eFEB04Fda0222f5E077bB\",\n  \"date_updated\" : \"2023-06-04T18:28:13.493Z\",\n  \"contact_channel_address\" : \"zugj4mnx03wzpfsgyf09uh0069sfjc7v3ey5zf0ou7ext8j1x955zk6wjobiaaj8vidwrfbj4jzm28s6vle0bl35cumcf5ruavl3zhw4n9mz5cnrqzqxgiwcjguagzfnqb23nqu4br3ex85crzhg4fxj5dpbkdgt9g4n09xf4n5uu72txpr22lk7et4\",\n  \"date_created\" : \"2023-12-13T22:02:01.493Z\",\n  \"context\" : { },\n  \"account_sid\" : \"AC86adB43DEb0F277a6b54fcdCcfceEF5f\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/201886\",\n  \"sid\" : \"FNbA41AbbB125e4eb4F9e4caDafbEEB9aC\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0059b489-d404-4916-815d-930fb90610c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.494059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecution",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/execution_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "fe6ade0c-2a27-45c1-879b-ccd8a73c4b5c",
    "name" : "Delete the Execution and all Steps relating to it. - 204",
    "request" : {
      "urlPath" : "/v2/Flows/FW3cB67B0eEf3EeAb3DB0abCA48E1C2fA3/Executions/FN211a0BeeD58C2B9ba6b44b497B4FE28f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fe6ade0c-2a27-45c1-879b-ccd8a73c4b5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.493812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteExecution"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "13b3ab27-8be1-41bc-b843-e8103a43f9c5",
    "name" : "Retrieve the context for an Execution Step.",
    "request" : {
      "urlPath" : "/v2/Flows/FWcfBc11f10dfd9b565eb91B4DDe406bd2/Executions/FN2F4bC6ad382c8Bc1AAE76Bb896dB2ACa/Steps/FTE6140Ef25FfC10aF4da3A6DD3B3F6a8f/Context",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWE34D1b4A1D2d18A9faa42abCf705aCA9\",\n  \"step_sid\" : \"FT0bD2ae8dACfd1F3a4fFdd4C2Ad903bA7\",\n  \"context\" : { },\n  \"account_sid\" : \"ACf9BdA1de0Bd1240Bb9Fac788ACde014d\",\n  \"execution_sid\" : \"FNe4891Bd68420fe2Bcc16AFefc8d69bF1\",\n  \"url\" : \"https://web.example.mocklab.io/017202\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13b3ab27-8be1-41bc-b843-e8103a43f9c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.49377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecutionStepContext",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStepContext resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "execution_sid" : {
                "description" : "The SID of the context's Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "step_sid" : {
                "description" : "The SID of the Step that the context is associated with.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "477d577a-961a-4ca6-8573-7275c03b52b6",
    "name" : "Retrieve a Step.",
    "request" : {
      "urlPath" : "/v2/Flows/FW3Eaba08f803d7DDA44Fa2BBE3eE22Cda/Executions/FN5355CE03b7256587D60099ffe7F3132C/Steps/FTD27f943AceA6aB2Af294caee7A71eBDe",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWD12f0320Ae6B4AE7C009EfE3c94bd9A8\",\n  \"date_updated\" : \"2023-07-16T10:55:07.493Z\",\n  \"date_created\" : \"2023-09-11T07:11:48.493Z\",\n  \"context\" : { },\n  \"name\" : \"Eddy Bashirian\",\n  \"account_sid\" : \"AC0eC439A2aD3A7DAD8B61c8DB9afBeb0B\",\n  \"links\" : { },\n  \"transitioned_to\" : \"fovyxsfy4nlnwm0t84tsiessrxfr5t7ancnwz11iojs7v6880s2j9cvmeoxbt5xcu9e6gdrafpscltdvby191b9eyycfruaxn61l4cu6d4xnbxfaf7pqe3928suze6ygrokl7q8\",\n  \"execution_sid\" : \"FNdd2DdcA884edae952ecEAE7Fc52aFA4F\",\n  \"transitioned_from\" : \"m6y1ifo30gt84lbaajxtqy9btv8uurgmg0htl6lkwfixh9mm5t75d6tnq7ntbb60dqm5pgkwpq5vn98q9pzrmrg83zzsjo1zutzh09dzujyn6loqvri3lhjqq57u3qk8ybpmcsbl491c74rqrnd2ib59c7nfav4g3adc42aezsfjga1196yjmq\",\n  \"url\" : \"https://web.example.mocklab.io/176331\",\n  \"sid\" : \"FTf0f6C2bb1c2ef1F65aE62AB78bEE4Ccf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "477d577a-961a-4ca6-8573-7275c03b52b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.493553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecutionStep",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionStep resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "execution_sid" : {
                "description" : "The SID of the Step's Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of related resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "name" : {
                "description" : "The event that caused the Flow to transition to the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the ExecutionStep resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FT[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "transitioned_from" : {
                "description" : "The Widget that preceded the Widget for the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "transitioned_to" : {
                "description" : "The Widget that will follow the Widget for the Step.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "04a8feff-e9c6-41c5-8778-d7c27e3f7806",
    "name" : "Retrieve a list of all Steps for an Execution.",
    "request" : {
      "urlPath" : "/v2/Flows/FWcB8Ee3530730e5a2feEcDe6CfC50dAdC/Executions/FN7F5A022ee3cb049475C1cBD5F71bEb5f/Steps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/242762\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/316886\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/019796\",\n    \"page\" : 6902741573752546576,\n    \"key\" : \"m9nrj2q6l22wadz2lbufkzhed12eweye6bvsx7c1t9n4fimgl49w51n\",\n    \"url\" : \"https://web.example.mocklab.io/239135\",\n    \"page_size\" : 1816790256452543617\n  },\n  \"steps\" : [ {\n    \"flow_sid\" : \"FW7cda4b38fCf3C23DCe5AAadC246A5B66\",\n    \"date_updated\" : \"2023-02-25T09:46:34.491Z\",\n    \"date_created\" : \"2023-01-30T05:27:26.491Z\",\n    \"context\" : { },\n    \"name\" : \"Bob Armstrong\",\n    \"account_sid\" : \"AC3dDB5ac4eACd494Fefe5BeCB0f89ce3D\",\n    \"links\" : { },\n    \"transitioned_to\" : \"7tyid\",\n    \"execution_sid\" : \"FN5e5cCF5e945E20FdBde1b1e640cFd84B\",\n    \"transitioned_from\" : \"lg8mzzvkbwp94gswi7z4nx95pxpvjaclpy5uj5euh4gbxh4vqcx2xfmewm9v29yc63ewctp9ykilp86j6yge8o01c8nlc0bz2e9l8t7eiydv4ori23cp28jfw\",\n    \"url\" : \"https://web.example.mocklab.io/936686\",\n    \"sid\" : \"FT9edabcAe5C75AAaea6B0defc7bf96e8E\"\n  }, {\n    \"flow_sid\" : \"FW4C056A554f52E61a98341C18C5D7a9FE\",\n    \"date_updated\" : \"2023-07-01T03:36:18.491Z\",\n    \"date_created\" : \"2023-11-09T22:54:48.491Z\",\n    \"context\" : { },\n    \"name\" : \"Ms. Katrina Gulgowski\",\n    \"account_sid\" : \"ACdA83145fc3FfcE5515FBeD49Ff2AAA9b\",\n    \"links\" : { },\n    \"transitioned_to\" : \"9bjwi2fgycrafmeth2lp3cwb0r37ugdt4g16wktq2vs3mrxy1sud7qzxfun9wgl07gt1a87986h\",\n    \"execution_sid\" : \"FNbf5CD298eCf8c349633EFb5ab4F6a0aA\",\n    \"transitioned_from\" : \"zyef7xpsova6qk6xrslive5yhcr77wswaellq93le2aj75xp3zz3lp2tsy2kdk82y5wiwis6edgp4vs9j0xt0jolurou2ovmmxhmailqv90uddj5pb9kk78yvzu7s38wmriwm6shmt2zedjulrt3i49ohd0hl9gsry0y5ikn6mxn8iknocfws0bgyx3t4uyj1z7isz\",\n    \"url\" : \"https://web.example.mocklab.io/645055\",\n    \"sid\" : \"FT1ED9B046a52d8ADf6BA69a6900dcC6B7\"\n  }, {\n    \"flow_sid\" : \"FW128dEb0f352CAfbA5B3022F4cDBB6f10\",\n    \"date_updated\" : \"2024-02-28T21:28:38.492Z\",\n    \"date_created\" : \"2022-08-30T19:13:17.492Z\",\n    \"context\" : { },\n    \"name\" : \"Margene Weissnat\",\n    \"account_sid\" : \"ACF2f6Ad9a188bba9adccF3AF94b2b9f35\",\n    \"links\" : { },\n    \"transitioned_to\" : \"0ocdkbvc4jr6iflmbqlouy59eebyrc8cpow2ngfwvmz1fjxa1uaesx2hezwj24k1j275g9a0g66masgipx3v557y5dld2nntakjmze74bpnuvyqugs0fa\",\n    \"execution_sid\" : \"FNc56C04fBE88B64AA4Ee386e2EB3fb57c\",\n    \"transitioned_from\" : \"chql4vtnedfqcto9suei20e6i352q5ls8g3jmt24j6d69fjr5is6jgx8o8dqfnu4funmj9o0vs077okve7k859viwc4x2zz9kzzzjue1ny8x9f2ahx6mxxf055iy\",\n    \"url\" : \"https://web.example.mocklab.io/185963\",\n    \"sid\" : \"FT7dEce17735C7dE70E10A17aF41FcC81d\"\n  }, {\n    \"flow_sid\" : \"FWAac3fF5bf068aB02bE67C4EdBeD73B7a\",\n    \"date_updated\" : \"2023-03-27T18:10:46.492Z\",\n    \"date_created\" : \"2022-12-31T00:17:35.492Z\",\n    \"context\" : { },\n    \"name\" : \"Delia Schultz IV\",\n    \"account_sid\" : \"ACc70f6bfeF4D485CeBffa9C0B47F3fADb\",\n    \"links\" : { },\n    \"transitioned_to\" : \"wnx6a0oenenjr8g9k8nvykvf806etufloep4phu6gej6o0ndmg8stuxdm6m59uu237b44elmoss0i\",\n    \"execution_sid\" : \"FNFd034CEAD2beAF7E5AaFaCfBAcaEcd7b\",\n    \"transitioned_from\" : \"cs99g2aprd6eiafbqffz3kb185aw8kib8dp3p1ltr0az5vu2szsalc6nmtkxctoycjg8qzoq8uy4g89bj1ti6ldsypvvw49bg2psvxi091\",\n    \"url\" : \"https://web.example.mocklab.io/580752\",\n    \"sid\" : \"FT5e5f41Fa8e0cBEd6766F1eACa10Cd5CF\"\n  }, {\n    \"flow_sid\" : \"FW8D0BbFf94F7d4D7C3eD44BCA3cE3AEb1\",\n    \"date_updated\" : \"2024-01-24T10:09:27.492Z\",\n    \"date_created\" : \"2023-02-24T04:05:43.492Z\",\n    \"context\" : { },\n    \"name\" : \"Ladawn Tillman\",\n    \"account_sid\" : \"AC87Dd8Fd163cf0fce2Dcbdcfc9d4cFA97\",\n    \"links\" : { },\n    \"transitioned_to\" : \"3in1ndjwmt5ei3rchi4ftyw5slneoq1ctclpalu5v8a244vgc7o7t8dfr1jh4g606wpyx1g9x6u8fgf8wsla7ku7s2w7b2ttvfwsrep8qkuovmi9yqmbyz8n7hbx0w2he5xu15ty0th5zh15sk37\",\n    \"execution_sid\" : \"FNa9dE48DCEE73aCAe026d9b10e76956D9\",\n    \"transitioned_from\" : \"xn6yk0m2uhx8twfluu8htb6azetytb3anc1uz\",\n    \"url\" : \"https://web.example.mocklab.io/143485\",\n    \"sid\" : \"FTa807Dc5c58a2C085Cf27B939EdD1EfBB\"\n  }, {\n    \"flow_sid\" : \"FWAeEABE4DbCce913a0fC94fC3BbE15991\",\n    \"date_updated\" : \"2023-07-04T18:36:03.492Z\",\n    \"date_created\" : \"2023-09-26T19:53:47.492Z\",\n    \"context\" : { },\n    \"name\" : \"Herb Boyer\",\n    \"account_sid\" : \"AC6535D4CCb71bcdFBd344eF33F1F093Ac\",\n    \"links\" : { },\n    \"transitioned_to\" : \"a8ue6950wf5x8j1iy9pvy55qo3psv0h5vbg27o0c70o8z6zfsr2rcltncd88kfzhf31r07e6xxj363vw8wc5odady9s42nkwqbrckkmgc1td12oo82xq\",\n    \"execution_sid\" : \"FN7cADaB5b9f8eeD7EAb6Cf5E8dBd542bE\",\n    \"transitioned_from\" : \"p8j37w3x7gx2fmxoh2gkbd43eokoldp50wz8epfd9ud15vxr49adtjsbfhdvhoco4o1c14sapj4e3ogse1ej0a86fop9rxgf9p3hubnfzwsviya2vm3fhmgfghq7rs0he2pmki41f1ttp3e1a7i5sfveovyruxxz1idvsj\",\n    \"url\" : \"https://web.example.mocklab.io/059521\",\n    \"sid\" : \"FTFcddaa6DE3edA250DAD7abB82E947f4c\"\n  }, {\n    \"flow_sid\" : \"FWaD3Cc44a85e0b9A84cB2358b02aCF13e\",\n    \"date_updated\" : \"2022-07-15T20:55:29.492Z\",\n    \"date_created\" : \"2022-04-26T09:44:45.492Z\",\n    \"context\" : { },\n    \"name\" : \"Robert Wehner\",\n    \"account_sid\" : \"AC89ebE87fa327AEE5f52c3D27F8a9e559\",\n    \"links\" : { },\n    \"transitioned_to\" : \"38gdhuyr44ja5hpptxezdt85lbs8xlct\",\n    \"execution_sid\" : \"FN7B4b4F7c50d982B450eD53c76Be26BC0\",\n    \"transitioned_from\" : \"c79dbmxim87y0j9cbu5u5t9tw1yr53njy7qz3yx2n1r49523qldf77yazwhbf5dmf6d9gj4x56izu566v1s3zcwhkj2z0c5v30608oiomet8v7am8dseczzdv97u3irm682w4v7q0q6f1rqiiigob\",\n    \"url\" : \"https://web.example.mocklab.io/448614\",\n    \"sid\" : \"FTdAfFE1dbeF328d6FDEdbEa086aEAF2AF\"\n  }, {\n    \"flow_sid\" : \"FW5cf1d86ab97554fe9daDF1c7dFAf490b\",\n    \"date_updated\" : \"2023-08-20T20:31:02.492Z\",\n    \"date_created\" : \"2023-07-01T22:44:52.492Z\",\n    \"context\" : { },\n    \"name\" : \"Miss Fae Ebert\",\n    \"account_sid\" : \"ACa8f6Bf4CF3a74fdAc55EF35C6b41a9B4\",\n    \"links\" : { },\n    \"transitioned_to\" : \"moyfcy96ay6d86174r1t7d26r6dkinsqf807orjkzdgufpfv4afnc4234yvxy3bjkyq7a560ejrd9atiftnzstxc53oi2e6ma3swpjm8jses0shd0bgxioeyqsvim8c2cpyld1tdobjh2b744mfxo2p9yntt2lyc2tsx1f1aoekniw1ir4g4dj\",\n    \"execution_sid\" : \"FNdB009e77b39BFf8AFb6feacDBFbFA19c\",\n    \"transitioned_from\" : \"4ytd9eczt3wqirogtkzxzvfwx6ifhmht5l0crfkynuhig01grknpni9widkb1zx6xoq7unza2zifv5yangkftq1811l50q4j1xipszhvixvs7bnzs2xytvy0ewf6mk1h9ehenbi6qm0pxa9nz73jztpkynz8n4d708f26ljfaxcqj8npgoi0vp0jo68hsamzjfwa\",\n    \"url\" : \"https://web.example.mocklab.io/240545\",\n    \"sid\" : \"FTEB17EaC4D5198b2D3EF46127BabC1D9e\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04a8feff-e9c6-41c5-8778-d7c27e3f7806",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.493201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListExecutionStep",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "steps" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v2.flow.execution.execution_step"
                },
                "type" : "array"
              }
            },
            "title" : "ListExecutionStepResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0bfc80f3-fe86-40f1-b887-59d120aad76d",
    "name" : "Retrieve the most recent context for an Execution.",
    "request" : {
      "urlPath" : "/v2/Flows/FWC2143F5FfbCBFF16ef5FafD9a3C7adf8/Executions/FNcA32BB83A43a99Ada7EA2942CB42dfe3/Context",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flow_sid\" : \"FWD38a2fF8E8b6af2CdcFFEFbd0E23Eeb9\",\n  \"context\" : { },\n  \"account_sid\" : \"ACFf3c2EEBDE69f8892dCCFBeFea8b850D\",\n  \"execution_sid\" : \"FNCb32DA98D30282eD9CCe43DDeeFeCc98\",\n  \"url\" : \"https://web.example.mocklab.io/195578\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bfc80f3-fe86-40f1-b887-59d120aad76d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.491309Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchExecutionContext",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the ExecutionContext resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "execution_sid" : {
                "description" : "The SID of the context's Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "3379d7ef-6b95-4200-b377-7131bd1789c0",
    "name" : "Triggers a new Execution for the Flow",
    "request" : {
      "urlPath" : "/v2/Flows/FW2DC7e4453b77dE6C7cE62f31244e1d7B/Executions",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"flow_sid\" : \"FWC2911be82Cf9f83dc536D648DB87847A\",\n  \"date_updated\" : \"2023-03-19T02:03:00.49Z\",\n  \"contact_channel_address\" : \"4nywwxu3ms0j\",\n  \"date_created\" : \"2022-12-02T19:27:22.49Z\",\n  \"context\" : { },\n  \"account_sid\" : \"AC9eaB2ECfd94FC75EcE2abc8bf5C6C9c1\",\n  \"links\" : { },\n  \"url\" : \"https://web.example.mocklab.io/249250\",\n  \"sid\" : \"FN554aA7bd0FEc8c711aDc759af0fFb1Ee\",\n  \"status\" : \"ended\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3379d7ef-6b95-4200-b377-7131bd1789c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.491115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateExecution",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "contact_channel_address" : {
                "description" : "The phone number, SIP address or Client identifier that triggered the Execution. Phone numbers are in E.164 format (e.g. +16175551212). SIP addresses are formatted as `name@company.com`. Client identifiers are formatted `client:name`.",
                "nullable" : true,
                "type" : "string"
              },
              "context" : {
                "description" : "The current state of the Flow's Execution. As a flow executes, we save its state in this context. We save data that your widgets can access as variables in configuration fields or in text areas as variable substitution.",
                "nullable" : true
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "flow_sid" : {
                "description" : "The SID of the Flow.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Execution resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FN[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/execution_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "98249970-bd6f-4be4-a6e8-78bd6d109240",
    "name" : "Retrieve a list of all Executions for the Flow.",
    "request" : {
      "urlPath" : "/v2/Flows/FW4febA56FbeB72DA86B699d61C41E8a05/Executions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"executions\" : [ {\n    \"flow_sid\" : \"FW1D2adfB102761e74d07bfdD505ddd4e2\",\n    \"date_updated\" : \"2022-05-13T07:20:42.49Z\",\n    \"contact_channel_address\" : \"6ds5wbesingl2fcnc1q8tkz1669sgpcidlyu072xhcq8xahtqo98suqt3nnzgq12n1iurc0pafhvzzvuea8s3j4ps0uq9sqsexlb0m8m4jr49yke9mwzsv51hc015tznyxzh5xsy88s\",\n    \"date_created\" : \"2024-01-30T01:01:43.49Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACbBdea80e2485b8Bd89BDFA3d3b2F6bDC\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/854821\",\n    \"sid\" : \"FNb3dd7f5dEBaAE3aadf3Baf4d589f3Dca\",\n    \"status\" : \"active\"\n  }, {\n    \"flow_sid\" : \"FWeFA590Fad4Af07fECDc1bcB90cC0bfff\",\n    \"date_updated\" : \"2023-08-25T06:56:11.49Z\",\n    \"contact_channel_address\" : \"s4mufitu7r785muf8y3f3p5bu4tzwbtor50ambfzjaq79gfcbycbn484chroq9nx1hoc0mlyb6tgu0rm\",\n    \"date_created\" : \"2022-08-10T00:19:03.49Z\",\n    \"context\" : { },\n    \"account_sid\" : \"ACFc0E2e7D5d74CfEe4fAd37d73De8Bc0a\",\n    \"links\" : { },\n    \"url\" : \"https://web.example.mocklab.io/331046\",\n    \"sid\" : \"FNA02Aa8d988e188FaEbbf5f52F3128Fd2\",\n    \"status\" : \"active\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/105114\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/032362\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/366141\",\n    \"page\" : 2472759536543902656,\n    \"key\" : \"d8x2enwm2ah3axqyqyjimnult3lhtfm75z0qfw2qu36bxwk0zs088tzv97u0bsa48a4frxf370pwo8vwx8po2tio7ug5ylx4nru8walh3pbf5l699tafkvjkzjznyby0x1uaoejocb3417vdjjip6rmj\",\n    \"url\" : \"https://web.example.mocklab.io/014185\",\n    \"page_size\" : 8700519003768412686\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98249970-bd6f-4be4-a6e8-78bd6d109240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.49086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListExecution",
          "schema" : {
            "properties" : {
              "executions" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v2.flow.execution"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListExecutionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "93a4155e-21db-4be0-a989-81c5384de9f9",
    "name" : "Validate flow JSON definition",
    "request" : {
      "urlPath" : "/v2/Flows/Validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"valid\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93a4155e-21db-4be0-a989-81c5384de9f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.490155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UpdateFlowValidate",
          "schema" : {
            "properties" : {
              "valid" : {
                "description" : "Boolean if the flow definition is valid.",
                "nullable" : true,
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "bce11379-2387-4ac7-9d43-f585406979ca",
    "name" : "Create a Flow.",
    "request" : {
      "urlPath" : "/v2/Flows",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"friendly_name\" : \"Eloy Stamm Jr.\",\n  \"date_updated\" : \"2022-10-26T10:40:29.489Z\",\n  \"webhook_url\" : \"https://web.example.mocklab.io/054962\",\n  \"date_created\" : \"2022-05-31T12:58:35.489Z\",\n  \"warnings\" : [ { }, { }, { }, { }, { } ],\n  \"commit_message\" : \"Similique tempora excepturi distinctio sit ut nam ea. Modi sint eum quia aliquid voluptas et perferendis. Voluptatem rerum est ut nemo. Dolores nulla et quia aut. Autem quo aut reiciendis quaerat.\",\n  \"url\" : \"https://web.example.mocklab.io/600428\",\n  \"revision\" : 44324131614640532,\n  \"sid\" : \"FWad7d070BA66d55cc5cCECfF204D84Ee2\",\n  \"valid\" : true,\n  \"account_sid\" : \"AC2CaCc4e421a1Fd3E07cFa71548ef7A8F\",\n  \"definition\" : { },\n  \"links\" : { },\n  \"errors\" : [ { } ],\n  \"status\" : \"draft\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bce11379-2387-4ac7-9d43-f585406979ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.49009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateFlow",
          "schema" : {
            "properties" : {
              "account_sid" : {
                "description" : "The SID of the [Account](https://www.twilio.com/docs/iam/api/account) that created the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^AC[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "commit_message" : {
                "description" : "Description of change made in the revision.",
                "nullable" : true,
                "type" : "string"
              },
              "date_created" : {
                "description" : "The date and time in GMT when the resource was created specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "date_updated" : {
                "description" : "The date and time in GMT when the resource was last updated specified in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "definition" : {
                "description" : "JSON representation of flow definition.",
                "nullable" : true
              },
              "errors" : {
                "description" : "List of error in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "friendly_name" : {
                "description" : "The string that you assigned to describe the Flow.",
                "nullable" : true,
                "type" : "string"
              },
              "links" : {
                "description" : "The URLs of the Flow's nested resources.",
                "format" : "uri-map",
                "nullable" : true,
                "type" : "object"
              },
              "revision" : {
                "description" : "The latest revision number of the Flow's definition.",
                "nullable" : true,
                "type" : "integer"
              },
              "sid" : {
                "description" : "The unique string that we created to identify the Flow resource.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^FW[0-9a-fA-F]{32}$",
                "type" : "string"
              },
              "status" : {
                "$ref" : "#/components/schemas/flow_enum_status"
              },
              "url" : {
                "description" : "The absolute URL of the resource.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "valid" : {
                "description" : "Boolean if the flow definition is valid.",
                "nullable" : true,
                "type" : "boolean"
              },
              "warnings" : {
                "description" : "List of warnings in the flow definition.",
                "nullable" : true,
                "type" : "array"
              },
              "webhook_url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "94b39787-d2b2-4bae-ac47-1783c66d38c2",
    "name" : "Retrieve a list of all Flows.",
    "request" : {
      "urlPath" : "/v2/Flows",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"flows\" : [ {\n    \"friendly_name\" : \"Leigha VonRueden\",\n    \"date_updated\" : \"2022-06-08T01:48:20.488Z\",\n    \"webhook_url\" : \"https://web.example.mocklab.io/598902\",\n    \"date_created\" : \"2024-03-03T23:55:56.488Z\",\n    \"warnings\" : [ { }, { }, { }, { }, { }, { } ],\n    \"commit_message\" : \"Sed qui illum deserunt placeat. Et vel odit. Facilis quia natus quasi repellat ut minima magnam. Sunt porro dolore voluptatem aliquid non.\",\n    \"url\" : \"https://web.example.mocklab.io/935389\",\n    \"revision\" : 4831068471821605594,\n    \"sid\" : \"FW9132eC1Ce532B4b85DD3edDcA66441A6\",\n    \"valid\" : true,\n    \"account_sid\" : \"AC270eBBAe4DEFdC0D2d5BEdbdFB16Fe4C\",\n    \"definition\" : { },\n    \"links\" : { },\n    \"errors\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"status\" : \"draft\"\n  }, {\n    \"friendly_name\" : \"Phil Wyman\",\n    \"date_updated\" : \"2023-07-23T23:31:44.488Z\",\n    \"webhook_url\" : \"https://web.example.mocklab.io/643893\",\n    \"date_created\" : \"2022-11-08T12:11:00.488Z\",\n    \"warnings\" : [ { }, { } ],\n    \"commit_message\" : \"Officiis possimus aut et aut et. Dolores perspiciatis et quidem nihil ex vel voluptatem. Omnis vero et sunt qui quas. Rerum et velit voluptatem voluptatem.\",\n    \"url\" : \"https://web.example.mocklab.io/260432\",\n    \"revision\" : 1607333470042386631,\n    \"sid\" : \"FWd04DE2abBceDcbcaAb05927C5AAb29AC\",\n    \"valid\" : true,\n    \"account_sid\" : \"ACaCEA67C7aBc8b02A90CcdEfacBE47f84\",\n    \"definition\" : { },\n    \"links\" : { },\n    \"errors\" : [ { }, { }, { }, { }, { } ],\n    \"status\" : \"published\"\n  }, {\n    \"friendly_name\" : \"Austin Kovacek\",\n    \"date_updated\" : \"2023-01-22T12:14:10.488Z\",\n    \"webhook_url\" : \"https://web.example.mocklab.io/657835\",\n    \"date_created\" : \"2022-06-02T08:22:02.488Z\",\n    \"warnings\" : [ { } ],\n    \"commit_message\" : \"Pariatur consequatur excepturi tempore totam. Sed aut qui quaerat ut. Inventore voluptate ullam sint voluptatibus placeat. Eius et non occaecati aut excepturi nemo. Repudiandae sed vero.\",\n    \"url\" : \"https://web.example.mocklab.io/841772\",\n    \"revision\" : 1974425507997672413,\n    \"sid\" : \"FWbaDa27FEc35c05053f1FB6d3fcA3C1ee\",\n    \"valid\" : false,\n    \"account_sid\" : \"AC7C7D196d6de619f9a2c66f1fD62cfd7b\",\n    \"definition\" : { },\n    \"links\" : { },\n    \"errors\" : [ { } ],\n    \"status\" : \"draft\"\n  } ],\n  \"meta\" : {\n    \"first_page_url\" : \"https://web.example.mocklab.io/215611\",\n    \"next_page_url\" : \"https://web.example.mocklab.io/221460\",\n    \"previous_page_url\" : \"https://web.example.mocklab.io/307454\",\n    \"page\" : 4027251627595798532,\n    \"key\" : \"s5udq05lq8p1bqyh1g5mb4tkyom19rsw5xal51twgwbyr0yx7f6g7dtqfnbnppiwdwlxwqa6d1gf5mr91bfh2fk81l6e1h3dqeyesj82ht164xu57c9ngy2g81u7lrxh2rm2hzy5ga69hgf1xyr21kjktrv14xniwfowaaybnq9oc0i0wxq\",\n    \"url\" : \"https://web.example.mocklab.io/432695\",\n    \"page_size\" : 447439366813157446\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94b39787-d2b2-4bae-ac47-1783c66d38c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:56.489542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListFlow",
          "schema" : {
            "properties" : {
              "flows" : {
                "items" : {
                  "$ref" : "#/components/schemas/studio.v2.flow"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "first_page_url" : {
                    "format" : "uri",
                    "type" : "string"
                  },
                  "key" : {
                    "type" : "string"
                  },
                  "next_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "page" : {
                    "type" : "integer"
                  },
                  "page_size" : {
                    "type" : "integer"
                  },
                  "previous_page_url" : {
                    "format" : "uri",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "url" : {
                    "format" : "uri",
                    "type" : "string"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "ListFlowResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  } ]
}