{
  "mappings" : [ {
    "id" : "7c50392f-8d27-4b72-97ef-59f8aedda8bb",
    "name" : "Translates input text and returns translated text.",
    "request" : {
      "urlPath" : "/v3beta1/jbzcordho1g1oazoftygwy1gue8rcj2z3gwz5fi8cfh748wqapcyepm4f:translateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"translations\" : [ {\n    \"translatedText\" : \"zkdv8g1z9viygdqdwac6v2lvyb6btn6rh5cf895npk065ee4estomaskzdutnf8s\",\n    \"model\" : \"4vj18gopuarhijyvli9x0eq564ew9vfaoxjy5ozl5quwufhjii38db1pd4zk66fhi705faw63kquhium5wbsuts19c0xgrn0syprz4d4mv48i2yfoki1rfhrpbcc5az4852gdsrozvjhypru97bqzepx9x71kuuzwws74cml7crec0dzukixa7\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"p9u1p2d4ieisb95ul087mnt\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"tx19q4cdkq7ybdbv56l64ey5n98wfjpn7k37jbb2ac8segsh2mn4iroeki4l76q0sap0u4hfrx091lydf61w7grducmbgd2kyx\"\n  }, {\n    \"translatedText\" : \"x35m63zr8lvjh2fz3q5q12wytjvs6jtih3jsr2ddl60c9553vjtbcn1638eiovinxm7ddv14k3m536myp9q1y0hlcem7eildio51v9r59bsm6tibt4xgy4i0k\",\n    \"model\" : \"wgtoqp1kwk1iblyjwi7hiktq8cvphb4huwzuqfmyg8kpaph5ettlxa4xom1zvemeek1hsjl2el2ko50a77jfvl5j93hlqfzouk4vzy0oz3o4sgz24uxqd0aju7el9htnkfuh86p5dtuh0\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"uu299wd50wwmu9e7kbidw1867wzabazwlx2\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"zt9hcmeqq8sjy5hjb68dnodo6vlsmn9tiqmjz4p78b9i6quwkkedupvw0ykcarlgvud22qb0zamrfga5efkjyly1t277xyikb5z9t5kv6cei4p6fqmjgs8qc37o6mhm3\"\n  }, {\n    \"translatedText\" : \"xta9sx320sl6ibu3zdxtpwbjx95pxkaayv6zchn\",\n    \"model\" : \"lfo9vncki76uvqpqod5hqoa5qfayslalf2gi4ymgfrbs0dn2kyuunll76rx6x01ir8mj3swd34sjc7tt08b8szy16yldkmf4c3c8\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"85vmka8120be3igoauf3v6xzilwict4q7ydndd9rmzifue5ajrymp2825768s98r4wjhx3ngp5j36nocwfzs4f9bphai3f6nnb4kn94pfgb8wnr6eayd3i9humwsn3fl0ndkxeqtoh0frsvp0ru9su2kdfxqp9fqnf5h9po4pvuxh5x5izzghj9spohb92j5\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"97yp0a0kjastk9lzltsi05jnrwcmg050d0udvjhh0k63npsfs4nd5ioqx8uzg1jz0mkmrx6c\"\n  } ],\n  \"glossaryTranslations\" : [ {\n    \"translatedText\" : \"o9fkyr9tzp3os8jsgzyo6g88tqn7q5fdeqo720q40aekq8n53545fusrlkgxkbxr1ew7pceofywn2xb0kvh2u1mhwzb412dtqgs9ori64lcjulguxp6hq8508ato58cc0gec7cyun3iu2km79ca9okjugzwrveykjih0hc6c4ofbj7\",\n    \"model\" : \"crfc6nhwtyyjkuiexrqxeaiy7eqbqdl7htx7mvtj8ajwqqmvqn5wo8vsg8ctff1zqgfoq00ugrfljzv4toowfc18t0al\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"8dzxlxz03tf3auxy0sx6mz9f40agajhksr\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"44rrw6yb0y\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c50392f-8d27-4b72-97ef-59f8aedda8bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.836566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateText",
          "schema" : {
            "properties" : {
              "glossaryTranslations" : {
                "description" : "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              },
              "translations" : {
                "description" : "Text translation responses with no glossary applied. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f6de074b-7e40-47ad-8ae3-f9c199f750e5",
    "name" : "Translates documents in synchronous mode.",
    "request" : {
      "urlPath" : "/v3beta1/popax58dwm5aaeljbaab9ab9mh712k8q7apdbb224fo9syo4vjg0tetlpb1105h9jfnmfaxev8a255e6g1ulm6irpcnoq61ytnxsp3xv5ttdqm7wrsulzpvj5ysklgavc6ly6pvfpuqyxypj70xkvv71ai64azne:translateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"w9y37ilrb824q900z524nd2nh12ff5bz57fnzhycfvqz1fkpp1j\", \"p66e9py51hnwygf6wsrckqwqw4k1xb7pgwv0ldyiwtjod8pwn48b68lin7hvw6u4lgnyxvug7znu6ndlf01deii6ze1mcu8j5xq1zr4ihcbydtfcwjvumtytt66ws3zv3vs5y8jfskrsiuwp5\", \"52so3yg9eigtxbpswv2m5ggpfkl287j0\", \"gu4up0f6gijrf32epzviu4oc8bejunf30\", \"o368xhwqthipz8knvlpr785mqmikrqylvdcsiv0mku54pkqu8484\", \"k7w41vv69mk3sxg6ujm3tru14sdsxx51pbqugw3qs2u965myfmj22ltv41qhysfc3q63505d\" ],\n    \"mimeType\" : \"jjybct347w0wtz09swn73m60v4yd\",\n    \"detectedLanguageCode\" : \"oh6tdbpwc94uwt8s7ldbtd6xtg2u06q027pmsu2kg3xyys98fcm9c44w0q8b0ljsxfsvfv2t86cejpuix1lmcbu338lgkwxtvg0ogaozykog4cih92f9oumppqlgq8pkuxs6k9apxrx8ha7a4u7u8831qwsv613sxsdvv3n0dx841urd4\"\n  },\n  \"glossaryDocumentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"n0xy9nq2w2o5t6sd6f00kxr9xk8k4ky7prldblvh4f11jccodo9eyqlisp3u2zo3rrs8j5eavouyfkt7kq36kuw4jk77qvjxrq1vsbl236r0bkhhazhw2jzejul3ar59d4llfo3sjdfap71bjprg\", \"132qaucles5oulthru330av1lrbta0lx5dn67762m3lwcpeaom77m7z\", \"d700wtcofm3oj9hgl6p4aerna489wznypoc6a7ordtkxlf95qcpc7avgq7xyqur74n0hstdls7a83f\", \"s9vhpr7n6fno3phcjwsmnwyr1caiisf4859f8um8gcw2wid77pw1pbc9pr38qah06mn8izn00uue3aht7q10hiihqi7w0x0250gvxmboe34jrdhoan40z5kdfylmu55zh3hkz2kevbzzoujr1ywgro631u2xyxa\", \"4rllymnh0s4ii0cf5ejq3wa58jhpwimqetjzf6s5hosf3wugutbkw17e1ierkvexufneasikvpjmzvm1hmgm388jej\" ],\n    \"mimeType\" : \"glwsznhk4a1htxlv03ay82ywnfc5c00h6we5qygihj3v99ut1fru6zcoxgycnxkgfx692ptlzwkw7su6pvz3e7y\",\n    \"detectedLanguageCode\" : \"74vwz67gx17cakchal4e97p9detfrd3rje6vpgjwpiists6pb5qvhcj7xzbwphk48rjh4wddrvw36qnvdlb64n2scd57myepp39t\"\n  },\n  \"model\" : \"q1xs7trufeeobpzltdk5u69c0fqcy4zpx8sgddgq6d87d7qnj7wr4f4tm1qjlas77kyh9w9pgufryui9etyc71xv16oqp6sr7scvvu7ragqtfhz3kxh024c7y3pkc13xehqydfsxi5eac8hevkub3wtc78d7kd1tqbau97ymeiv0\",\n  \"glossaryConfig\" : {\n    \"glossary\" : \"6j85bma1rjri540ikkvq0qhvna8zhiuewe7dxxpdozy9ib4guy9y1rg2bmsecckl3sp9ichorghk80qc3xkj41zwbw37hgvq35ywny71k044dg61yls64oh4qc30c2ask5643z75ngfajdyv1mdbtw3qmdijm6z1dfe8zw4ngca0im4gjzv30albdkbp6lr94lso6\",\n    \"ignoreCase\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6de074b-7e40-47ad-8ae3-f9c199f750e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.836193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateDocument",
          "schema" : {
            "description" : "A translated document response message.",
            "properties" : {
              "documentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "glossaryConfig" : {
                "$ref" : "#/components/schemas/TranslateTextGlossaryConfig"
              },
              "glossaryDocumentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "model" : {
                "description" : "Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "898879d1-b00e-455e-a7b6-1348095bac19",
    "name" : "Detects the language of text within a request.",
    "request" : {
      "urlPath" : "/v3beta1/2780tbasc50tf8xv8cbyodzy5t2kh6mf60kzarpn1uzityql2rkos66rvkx8pnaaat2adeeaz:detectLanguage",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"confidence\" : 1.4050866216347245E38,\n    \"languageCode\" : \"zzij6nsxfe2fgjpu2j1x0qanhuces5iq2pvc3bgnx0hke42i05ego8csd8zi3csp08mbe0y7kvo0vuyh1y83hhi0slzqwrv67f3zldwhoweq538n3svemprd6m9rb62rvm4li8s5um9vadpsd12ohb3d8i898xw\"\n  }, {\n    \"confidence\" : 5.224340927016784E37,\n    \"languageCode\" : \"wmqbt10geh97cn9065hwxgcm655w4knso81bmyb7ti15uon2hx25i5qmwddz9prwhsgavd8oqaaqmc5r518rty07y5jr40ohzxafch41ywfa6ur5zc7p16a4le9tir7x334ndna510i6nrjf5a5jj7g3kqds7n6es6mlez17t2oedf2irw4eg3f2zz3h74barbsy\"\n  }, {\n    \"confidence\" : 1.9715759537786666E37,\n    \"languageCode\" : \"pcvgb2gvqzoday697mcpvl288o4ldorsfzcjgpaiwmyodxc1hkhwar4qe\"\n  }, {\n    \"confidence\" : 2.3077580297888415E38,\n    \"languageCode\" : \"30h9kototakeuav86x00mzqv0chdxy8pltgucfaeofmqe5nrm1i8oubgz6jvfkkxqdj3r7k7jotujz01gaby69ilbzwjczj29gnrea95qp9zgon6atqdy4vqth42ey60oq2a8lg9xeuce0j62obd72s6puv3j79m9wihxz7f74wanm5w29mnpo6\"\n  }, {\n    \"confidence\" : 3.755204372631257E37,\n    \"languageCode\" : \"1asoooeldcmnq0a9y35s0mczf3m3xyc3nxld5gq51ty87y2d8w84gptczuhr7fr54tqpgpckmvy06xde8j8tnpeqls3d9vry4o7pg2h7byil9fzgl06segrnexjps2w1v37fz0ri0qvq59sqon58hegxghi4vlyf6365zjjo5r1r11otn85l3a051s7d4ncsr\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "898879d1-b00e-455e-a7b6-1348095bac19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.835856Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.detectLanguage",
          "schema" : {
            "description" : "The response message for language detection.",
            "properties" : {
              "languages" : {
                "description" : "A list of detected languages sorted by detection confidence in descending order. The most probable language first.",
                "items" : {
                  "$ref" : "#/components/schemas/DetectedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "370d8abf-7a95-4c81-a0cf-e3388ab1df30",
    "name" : "Translates a large volume of text in asynchronous batch mode. This function prov...",
    "request" : {
      "urlPath" : "/v3beta1/5fy8b381j0880nyyzmma2g522gm6ip6744niy8yppaizw82:batchTranslateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mitzi Bayer II\",\n  \"error\" : {\n    \"code\" : 2037031852,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ut natus consequuntur enim et mollitia sequi eligendi. Sit reiciendis laborum quia sed praesentium. Officia aut corporis magnam ipsam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "370d8abf-7a95-4c81-a0cf-e3388ab1df30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.835654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateText",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4eba8b65-e132-4651-b966-f8b5d19989c8",
    "name" : "Translates a large volume of document in asynchronous batch mode. This function ...",
    "request" : {
      "urlPath" : "/v3beta1/tkbkyav16jwl76oybk62p6iqhw7s69gpd4o5gzjcsypvfgdom3ss26qn8s6pbbp7lfkot6bo0p6g1gncj3rx69f2djnmfeplx5z94uuz4k8n8w2hv8vaokdn6oelejcu9b57bhdfacat1667wr:batchTranslateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mrs. Muoi Beatty\",\n  \"error\" : {\n    \"code\" : 589606137,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Illo voluptatem fuga quasi sit. Rem id non dolore vitae praesentium perspiciatis dolor. Quasi harum amet dignissimos dolores. Et enim voluptates sequi.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eba8b65-e132-4651-b966-f8b5d19989c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.835465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateDocument",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0884c6e3-5f32-4cf4-8197-20ad1ef841d9",
    "name" : "Returns a list of supported languages for translation.",
    "request" : {
      "urlPath" : "/v3beta1/tx8p7aa44obof5eyipt0lq6d9bazqomwjvyper6cxzkwux8j1w7grnv6b50yqu3tnx8ey1mv5p86dnspngvnm30lyo69c20o05s41skjbfdzb0bjk9fdd7cehurcu5ujrokfpxf/supportedLanguages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Marty Armstrong\",\n    \"languageCode\" : \"ibvdj47e76q42wrx8s00j80d0nmzwf36qnkgkdc96he6xqiabn6pobbu86aw5byqhm4vpr7um2av7ijiw9ltu9yk0pfiu4irdavthufdrnh29oqxowl4cawt8q24\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Buster Morissette\",\n    \"languageCode\" : \"vd8q0uzrwb9g95fwizfbspfk1rsfvswkx2s6oziv9j39o102wwvd6q98s4kb5pnrtpqgsq0wsuqtzpvyein7xg9g8qkz38yaqekz74mkecxmbg2mrbh8dfzscd5rjwfmgtozyhgdx1h7cyn071cofey7sd7\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Wesley Hamill\",\n    \"languageCode\" : \"kb27lvi8zghx88vyicj8o9jk85ow2kgkvagbcaodmum57utc0fcgrwjkkfr5gazexqalpmj54lbx5peffsfyeduuapctmsqji2ffzusdny9qa6eu7ovlh1ut7l076\",\n    \"supportSource\" : false\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Anthony Feest V\",\n    \"languageCode\" : \"e2ot43dvrjh3p105mgd7nu32jgm5z4xuc31xl7ri9017ibecgn9s9u3xx9gv7gpma50nujb2fzmp5qngzibgd4768nur1seunt7nbcn6hk0bo7lxbtckrwhmmxvn2mzmrzy03\",\n    \"supportSource\" : false\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Delma Emard\",\n    \"languageCode\" : \"uxhephzddprik2xh8pvqg5k4oxf\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Stacy Zemlak\",\n    \"languageCode\" : \"ql8b3kc0p5j4lh2cfpxk84rmdjr07qtcw4a20o6y184h9q1ghazrw6tomu0mr1odoogezihsckujxoqzsx7h4ymqkcjp06ucmca3m8stvi0jg2f73wcqdz878f54zh8\",\n    \"supportSource\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0884c6e3-5f32-4cf4-8197-20ad1ef841d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.835271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.getSupportedLanguages",
          "schema" : {
            "description" : "The response message for discovering supported languages.",
            "properties" : {
              "languages" : {
                "description" : "A list of supported language responses. This list contains an entry for each language the Translation API supports.",
                "items" : {
                  "$ref" : "#/components/schemas/SupportedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc460714-255a-4d60-9f10-8317c77d796d",
    "name" : "Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if...",
    "request" : {
      "urlPath" : "/v3beta1/q6mzquyofz56cm61ofczisu84nhqm2efd8fdu2yitnxb2qqbvj3s2hf6zbffdsb4talmr4c9xgyyklcje002yiavhecia/glossaries",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bill Cassin\",\n  \"error\" : {\n    \"code\" : 1992061896,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quo exercitationem tenetur consectetur officiis. Et id quod. Repellat labore sunt qui porro eveniet. Laborum quam explicabo eius.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc460714-255a-4d60-9f10-8317c77d796d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.834811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4458aa28-33bc-4189-9892-57554baf89eb",
    "name" : "Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.",
    "request" : {
      "urlPath" : "/v3beta1/dw1ojyfgq2s9gc2s6vnrryji0g7od5qngdwq4mbaqpm0xqa7tvpuk8de5ktvebzw10y0zi16ckxxwefm7alg5wa31uu1bs4mhkp2r32pj11/glossaries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"0z8u34ul4rs7ba93gy51yjh3tld025021tw8q73eixpuxm83lui3njb\",\n  \"glossaries\" : [ {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/081267\"\n      }\n    },\n    \"entryCount\" : 1636540989,\n    \"submitTime\" : \"2022-08-18T15:42:38.834356Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"1pl2wtmjlixic8baq4mg68uy0q6gr2fmgwb91lqw837bj3i7ag3tkuyy9ck4wovzptvzsral63m10q1dar658lfk8res9xq7xgv8jl9hranvr88g6rfq7x\", \"stm3ics37m82g56x2023cltexe33iqmwh3qvbftnx0ma3bt\", \"9sr72151l310dxjcwbjyho87stw45brnvw04o3s79j2y8b06mr1g8656tshs1w7l2j2jofo452d6i7cu7pxw2wyfbxn1ywoavp9mmcelmu2gvprd8c0g5xl52k4p1hhadhdviiwpb9hwzu7qd39rn6s99dpuw3\", \"bwxs129n\", \"a6eco7p083q2r691hc7zrtwf2hpq78er62sj0xe8j3ni9cmzr96vgn7g9jxc9h0bnddx\", \"pzum0g5skuqd22c0hvvqr7ttf8grbusc8dmeo9br22eu03ebuvofnarjeyzqg9kjoghmgn5mb8us4eo7q1xb18roy8\", \"06joa059upuzpr4ys7vspibjdzvdy1wyxe4qc2admf2o7pixnupnsjdvjrkbdezpj96z85dvvk1\" ]\n    },\n    \"name\" : \"Antonio Heidenreich PhD\",\n    \"endTime\" : \"2022-07-21T15:46:38.834492Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"i3dj7a4mvdnfz6nao0yvdhxvwhpy6ddwhim0bxdjh8thjqmc04qqzk30g465kwmbsoizsp94lv061\",\n      \"targetLanguageCode\" : \"mw7d81dnsbszgt2umr5eggvvqwlqje8y7\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4458aa28-33bc-4189-9892-57554baf89eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.834626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.list",
          "schema" : {
            "description" : "Response message for ListGlossaries.",
            "properties" : {
              "glossaries" : {
                "description" : "The list of glossaries for a project.",
                "items" : {
                  "$ref" : "#/components/schemas/Glossary"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4f0b1dc-5f72-4295-9b25-4ad11252fa37",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v3beta1/Jarrett+Spencer:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Esta Auer\",\n  \"error\" : {\n    \"code\" : 759311324,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Saepe quaerat numquam doloremque voluptas iusto sint. A dolorum quidem quo qui et minima. Ea qui temporibus et delectus odit iusto.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4f0b1dc-5f72-4295-9b25-4ad11252fa37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.83419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a2efceec-f597-4835-9e1d-51923c4d4582",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v3beta1/Shelby+Huels:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2efceec-f597-4835-9e1d-51923c4d4582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.833957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4560683c-f55c-40f8-92fa-94e70bcb86f0",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v3beta1/Don+Oberbrunner/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ted Cassin\",\n    \"error\" : {\n      \"code\" : 569385730,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia labore porro minus praesentium unde. Molestiae ratione debitis impedit autem aperiam. Illum ut aut sequi quia magnam pariatur ut. Ipsa ut sunt. Excepturi et pariatur sit asperiores facilis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lavenia Orn\",\n    \"error\" : {\n      \"code\" : 382056667,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia id ea minus qui omnis. Molestiae quo non. Qui quia qui.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Alexandria Von\",\n    \"error\" : {\n      \"code\" : 1987824188,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Assumenda adipisci ut necessitatibus voluptatibus fuga. Nobis qui maiores eos. Autem accusamus et veniam vel deleniti et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kathlyn Gaylord\",\n    \"error\" : {\n      \"code\" : 255912766,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Nihil voluptatem et et. Accusamus excepturi voluptatem consequatur. Beatae maxime aliquid unde. Vitae fuga et minima.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"jab1qzafzvkv7l1kygi2ie7mqf1nbuht120skj6xk4g8whm4wfagzjo0xwnp501u7dvmtrszbed696d7le7caylg9mz5uxuzjr2txd8mc315ukcywfha6ixrobqodsfv7r8zlreib3at0t1w7o86z790zdaevt1mx6dmdhtak4jrz3hn8i4kxtwcahp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4560683c-f55c-40f8-92fa-94e70bcb86f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.833875Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "152a55ad-7f27-48ba-9fc7-457950e8ed68",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v3beta1/Anton+Emmerich+I/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"oex3bspw6j4sa2enkwa5j7lrpr0s9ib0kh68lc7grfb925buxf7y76hh51vt0qyf0gwbgwil3o32s0xbuoe\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Towanda Bailey\",\n    \"locationId\" : \"42e4\",\n    \"name\" : \"Lewis Kunde V\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ivan Larkin II\",\n    \"locationId\" : \"z8yh\",\n    \"name\" : \"Yasmin Dickinson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Curt Schneider\",\n    \"locationId\" : \"unwz\",\n    \"name\" : \"Mrs. Rosemary Wilkinson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Shelby Lemke\",\n    \"locationId\" : \"bh41\",\n    \"name\" : \"Lucio Brown\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "152a55ad-7f27-48ba-9fc7-457950e8ed68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.833308Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77f1dee4-9d38-467c-9320-d49dcb3a7020",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v3beta1/Dalton+Heaney",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jennefer Murazik\",\n  \"error\" : {\n    \"code\" : 928897321,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Architecto blanditiis vel explicabo ea et doloremque reiciendis. Distinctio ea sit quo. Et dolor fuga delectus ipsa.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77f1dee4-9d38-467c-9320-d49dcb3a7020",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.832442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5492902-5296-497d-81da-cd2ab059ebc3",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v3beta1/Miss+Isaac+Kshlerin",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5492902-5296-497d-81da-cd2ab059ebc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:38.832135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}