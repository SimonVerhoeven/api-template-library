{
  "mappings" : [ {
    "id" : "052a5603-d49c-3528-89ac-8c4cac75a11c",
    "name" : "Translates input text and returns translated text.",
    "request" : {
      "urlPath" : "/v3beta1/m7sskmrn5pia511cf5536r:translateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"translations\" : [ {\n    \"translatedText\" : \"uuz5qw599ng6689jwr8kw0hhgwj7r8qdwevz53n8jpxj4ljmes3qzstev2t69k4fq1n6tcmzwf8u84chzimvur0kvpud90u8bfcjkzfi7kp68mwonde4t93wrfgsakc0tc2wwis01y31j69tn5mrgblqn2lgfxu2ck0737reu0sug0x676pak1u9lnqoa\",\n    \"model\" : \"w4kk1sfiukrvft4kvadtvt1t336wermatw30zeyeesldkxne4d1wxg2oshjqnp5ppewvin6q7y6nxhvuo4hokrmhnolm5c3qpegldmfml7a5lcti5qkx37os9kfr84ih9shi2bst8vl88j8ix4cvbzdsuw0vdx0kkrtqdqev41birwq\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"n5vm9qhh4e1igoroyyicywegajlmdvi47qcxrfm90z8n0j9hkvey5gcnfly35xbb9cofxzlcrmzk91exqog\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"9domzcs7fckzcajr1c6gaouq1gycmefg8dd468vtv7w4z1qf22we69vf4i1hcln487hmgig1junuxnj7phixiinpjdtbbe6urvenfjh1561beglopzgpzz6woxukswkm60ifeyyhjm70z4d58deqbto1oipfy7ntxowuav5hy\"\n  }, {\n    \"translatedText\" : \"z5i2j\",\n    \"model\" : \"ixrbpn8vc4mpg377e5jgbr1lrzildy9rvjn\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"nia6gdtgizah24awix9ae6sfibodl0gmlu3xiq32t1az9mbkobt7rq9t84ylw12ya3f9rujhopq612nekouzn6tf71tp3u4vty15w\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"o9g1msdx4qku9wpaq4zluyv0j4yg8irvc6g4nd34qj9d9wxymqe2lwgew2mq0ca85x0czsdn72kfak3ddolat2v4potp7zcyzrq5ca6d9sxbwj2fv2n9bhkmao2j08842iubsr8kq69eye27knlkegb0rouuomc83r6jwe5xpa3q5sqixd\"\n  } ],\n  \"glossaryTranslations\" : [ {\n    \"translatedText\" : \"a4sqjvbsdxtrsix51xyrydiw4dtkqgw4o70kou7p9za9p3qwux4elh7z0iky75arsiiv3pm31x9yrc2sbc6waep4ta9g67mhvxl5ulct40ov\",\n    \"model\" : \"x1caxwne27dekmybrwaf3dn6odes57x6qyt8fit4czn0r36mkgqx4kgsx9afu5feke82lswrgr50as0rcpasvhax1z88hhrhfpzgik4fqjw5itx9bzk2b3bliigpfwz43fwmq0n7izv6u31lt13akmnvi329zy46njtw10n4kfihj1ovtkfnjfs\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"kqa0ylxyrlorh40iv8dzwugyg07mvq17q\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"q87662rnxzyeyzq0wcnb902pdorlnzruid9wualo6rneaczmablcm90tye8k134p1xg95h8vo0p070\"\n  }, {\n    \"translatedText\" : \"y0fo34cwu2if522gcer2xt8f1pw20867me1x8cpse0phneg4fvetulkvlvkdqrsx85izdutguvjqlhaxrqerzl0vm2tjlmbuijhmdxbzek4kwtnan0ebb011mjcq4gk0fn3hhw4xqdd3rmdjtnyeclrtj1\",\n    \"model\" : \"pk29tkd6zt00ri0qtygwvabuedalrq0tlbdej50qj15vq6bqgkcplxh4ailji3j9lkogq0jqtk3pjon8uflqq86je27dlokt9e1k5s6i35lihxczpz4u\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"f908pkb8phz8suincej8byjlnk5e2z73dhf0rzcbobd7t8ojb2p63tujsdza8832m091abmtw5btm9bdk1wvlcz4gdfai2isnj2np9nch0yhl1jwao94b31er7ev8pjxlljz1qbfffl0a4v1feugy1yz9oudlp3hq2jt2ocb2m1dkuce60ddkckmu3prd9z9sz\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"zl57x2mg0wptdek7lqun23cx0ivxto2wyv6c68yvslg6hjexjd7kix6s60mz6err045edu63sdfp39stvhxbq4am6k9tcyvhacd8e3boxeka5kcr8a2xh4gvsiliu5z0v80e943uuawkyo8fqxyxxnsbhnmyeae\"\n  }, {\n    \"translatedText\" : \"6kganvyjrynyoxy0opkge5te5nsr4h3u84x1rbdsqpkzawqzzyymte4ogxhn3f3b90qb9v2gxey7z1e3vmytb6skg9plvcfnyoycps10srkoag5vono9xhst3g75jdd9d4u5zpq4oazl44edjuuf3abkw3bcodjz3\",\n    \"model\" : \"39ala1vdk6biqk9cegzcjxetwy6thje7nfhvez0lipwefc07ng4stap7bj921yrbxn8y0955zkxdfmf9zxp0rrhnvox1yo2chd9gwo1ibaykj9ztb58dupjyvvgxp9g4a5a13opxdz7ahigi76oep76wljomtjk4awpw\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"66y3g0p5ms54ktvem1llkekrzxojmeii2abmaw4lqybjvvzpnaveoi144hm8koo0m936s051kkwbppve03adczqogup54o6t8qeltvgirh29kwd13uiqrtzm8pygjm9yqa81dlkbp3gf3ny0q9fl2\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"vr4xnqhrvqp13b3rtoquaf00bv89vtzhbrondynycuabsk7gin2cmkbo81um\"\n  }, {\n    \"translatedText\" : \"oz7lybzobqefehm45ozxov9zrk0tim5ikry6mjyn1x88788zvbscn506gt8qtpkru2yl0g7uuociawkrqvnf6qsmmvwvhg6e28mckby41r1swkmz7oeks7i8o3n9jwptjtv96zxn7i831hfplyvxfkcnjefjllkyd11vfgu88dlselial8jdu0dgy6ypkqgxpr025f\",\n    \"model\" : \"3pbl3aibg0i5j2dbc0yqn6yuqa8avrg9or6zbe3ph55yn7vfnuw55p9y91jfiusiymd4ldlgk0pz9gfg5mxxbqvytcm8x3wetplb\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"rweasw3oiituevyqzujicedzmgy7j0eu1nlwl3j0nfn6exzv9jk4dmhfwiyhsazxcj4e3p0hty2uk49yy2rqmf1q5e9d1u70gewm3yu0eyuil6w7yb8928ixmezey4kslu8x01l4drg6gt2u5zkch3jn0qdlgc\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"xk8fr9suxvkaetll0e0x3l9mrxj7wiiwvhhnsu8jm4vx8yamaytmkjf2kganij\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "052a5603-d49c-3528-89ac-8c4cac75a11c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.translateText",
          "schema" : {
            "properties" : {
              "glossaryTranslations" : {
                "description" : "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              },
              "translations" : {
                "description" : "Text translation responses with no glossary applied. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0a18117a-fca8-3510-b477-531671713177",
    "name" : "Translates documents in synchronous mode.",
    "request" : {
      "urlPath" : "/v3beta1/xkfyuauq98ias9cqmgqmf2fsd90z71d3kal875wy34n0yxdernkpkrr92qoqcgy8zqt1uhqd8y69brr90w2sxvbvl286eueudeyklavzm6whznpff8c0xj21i78qkioexf8w31wj7krrs24yuns7566ccf4k65xrhlgr91o9wc5dkfwvb57ukkkz9rsnt5gi3nksen:translateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"6dnpbw6l3otgf6peajk0c06qpcunigk231bmzsllh2qet0rlmhfwqm9nd4x6a1wbtybfux7xbm12ewt1de5ns40f78o0pu5zb4swoclir09v6zrjve\", \"3t0fv9jtgoz39o7ejy4f59xo60ne000ugdkh3gyj9xtw53au3tjvngbcfj5a0mqh64yrsob0kwitddxprmuw8vl7kd354dz217bl334vt33r7ecti02we21vyi4bxed8t2yfs3o10fk6sn3bxk6xrhd8029sv3asf1otbiy5y\", \"usl3gmswdzld3up57gyivo2j1cadzw9vb00fx4ryr0139ap5nahsgtkpc7l1iv47p9w8enecotgvrkbepn4r7gxlkh5tdy965fjrw35rc9a0rgqgsuf0cu8z9ui7r0mhrp7r1ptq2yftsj\", \"nd0xueg76dgntmz8jnr2jmhozjm12wzfex9a6ejiiohg6gtuhvpbnv1t9beviq0b36x1wlkintd\", \"dkuecfm3\", \"dt8jfjlodu9wf574whxvzbrpfzt0u3e0cwsidq6wxbh71ruxy2siyfirn5tj4lrnz4pkdtny1v5gc1vbznmsgn2bu8fi2a4vq6xaixkrgmjdy1hsigl94sd78vto8ecabyt1k56zcn5k2b84ggnrccqr6s5xuqk6bwgw6e06t0lovacpdxqbb\", \"kq7df6pveoz5hdt1cpb2up7f1eh6wtobxvti4engaxz7s11k6i8jf2zaj9ojrtbsusw4x87wvf1bshc7zwf6hjv\" ],\n    \"mimeType\" : \"72tqv710i3j8dc1ndt348tfhts2c\",\n    \"detectedLanguageCode\" : \"4n6ddradlbml15np99f4l2lpwfn3hmzyvbd1n6t04ia63hi9s15zl5ddq6wgvqybjbm0yisqdmwkxz2h6v6ozr8sw1ic0n94tgk3xnfyac6bxbcb8cb20xtdwvgisjfcoqta3db9172eqdb263\"\n  },\n  \"glossaryDocumentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"1lx0rweoqz4s7lrn891umup521y17dlyhhg8l5fvmjt8igtlpwfo0wu3i6jbiiwmcnwt5y58y44a0c7wcrv1esdc841ptejvjp3i2vymniy\", \"r1mc2r603bm881s3j2ua31cjd6q1e0y9hfoolrbr94lkw7gye9j4vf0nombbvy9o8zkykcyi542cciaru8fkigff5sdes\", \"7ni76xxn2zsiygks76o7g05agsti4sesrwltr6wt7zkv6hbv8f1py8muo\", \"s9wvr4428kc1lim\", \"6vvw6hu8t1lgo1noz2czt0sr93e9rgewb1uqqknqurue7tphjahqu\", \"biwbk87unom3gqto64\", \"pc0sif3cym3oio4kyt8ga2m1xb1\", \"ie942b9xp6tka0w87w8pcmngeb5hfg4y9u9f20cqy8cnvxki53u20dfy14kzn88h40ivfn9ag23m2u4z5aam5u7dfuxvnap5y165fuhkm34zdjcnb50bx3f777uup706c0y96rzw5fdajcf2\" ],\n    \"mimeType\" : \"bbodg0njnlulfg0knjeb8pudwqfuwhbyg69lgxu6kyvhxadbz6qqyr02pfa\",\n    \"detectedLanguageCode\" : \"d0dntu1g2hjl4c8x0gx3tr7j9un5oa05vwy936bwx36w76d80up0czo1f81sbj3vu59hr38oquk1rqdjjwo8h5ptofw0iatda8e\"\n  },\n  \"model\" : \"5ts9auo590ao03mrx40b0rf3ozrer1gzkkgn4b9k5ep4ks2mxfab144u4h6k5esyfcdpp6cg22lusr7nok39n6rcnoweczyhu1nv\",\n  \"glossaryConfig\" : {\n    \"glossary\" : \"e5idllf15prwbrdy8l3tc8rh7yb1ecprhnec5dk7xrdo6zspwhwt560lpx3c4ovz3memtpc2ysok3gb3dw66lthh9v560rzfcm4g9pnfjy2xtuif0xt1m2wc06s6kkqh53wk14qalygh7ctao2tdu44f9t\",\n    \"ignoreCase\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a18117a-fca8-3510-b477-531671713177",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.translateDocument",
          "schema" : {
            "description" : "A translated document response message.",
            "properties" : {
              "documentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "glossaryConfig" : {
                "$ref" : "#/components/schemas/TranslateTextGlossaryConfig"
              },
              "glossaryDocumentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "model" : {
                "description" : "Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "509ce856-a09a-3242-aadd-782a47fe87ee",
    "name" : "Detects the language of text within a request.",
    "request" : {
      "urlPath" : "/v3beta1/5ztvx8w08u9qf12sackrsg7tle5aabanfmcyzoxq8vm8klggexqdvwl4tqkoi8qop1fa7pc35erk23bb8spg23xrh54fdsemoxzvq7nqoq42vrhtspl56hg6kfii2wqkyobmlxry8j8n48h96kdzslfquk6614vwuo97y9hp1ykjhr71:detectLanguage",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"confidence\" : 2.3166997438825938E38,\n    \"languageCode\" : \"ns7ug4kn9ggpc7utagome80fknx0elz5mspbqp88uxeevlmjyyog3bupjksl11l700yknslr0vsrf3fp7llsd2macrn8qpudxn07wgdwt0wxjnyxwdlh1h8nv9\"\n  }, {\n    \"confidence\" : 5.972052756380924E37,\n    \"languageCode\" : \"wo5pbcoptndv82okdic82hflw1f1wiyqew2yhzrvkvexnw9rdadxd23ru9ns9f22c485i36j60eq3gdid49vznuve038jo5cs9jm3t\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "509ce856-a09a-3242-aadd-782a47fe87ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.detectLanguage",
          "schema" : {
            "description" : "The response message for language detection.",
            "properties" : {
              "languages" : {
                "description" : "A list of detected languages sorted by detection confidence in descending order. The most probable language first.",
                "items" : {
                  "$ref" : "#/components/schemas/DetectedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "fc6b4400-c48c-37f3-97d3-43ac4f1bf1dd",
    "name" : "Translates a large volume of text in asynchronous batch mode. This function prov...",
    "request" : {
      "urlPath" : "/v3beta1/1qt6weewhxnorymne2bao6qv5qi8tgkdzt26fqz7i5z1y3pitc94b7dqscf0kz4ulepernbrw9:batchTranslateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Gregoria Walter\",\n  \"error\" : {\n    \"code\" : 1321113478,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Autem rerum architecto omnis ad iusto deserunt voluptas. Labore dolor optio qui quam beatae placeat. Cupiditate quo corrupti sapiente qui aliquid aspernatur possimus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc6b4400-c48c-37f3-97d3-43ac4f1bf1dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateText",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "09e589fd-8d92-3216-acb5-81f04cddb582",
    "name" : "Translates a large volume of document in asynchronous batch mode. This function ...",
    "request" : {
      "urlPath" : "/v3beta1/vtxx3ngpk99lfqp9nkp53cleu1645n2razwu46tsjoglfaktivv22sn92zusrv69rnwh20gn11vdymt2852zsippxc3nu132ogyty26ec08uqjb42elk290rpipgxe5tei6vignkcpsy99jjtyfkzm3fsctt9ux411oih6mzjdsp6o878la3zh7pre1yp4rmo9:batchTranslateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Gay Thompson\",\n  \"error\" : {\n    \"code\" : 782051366,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Occaecati impedit nihil laborum et. Veniam placeat inventore sed maiores veritatis voluptatem. Ea ut et perferendis. Reiciendis nobis officiis labore molestiae. Rem repellendus vitae expedita quis exc\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09e589fd-8d92-3216-acb5-81f04cddb582",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateDocument",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "970dfe37-9d03-318a-94b7-8df1ab9c0108",
    "name" : "Returns a list of supported languages for translation.",
    "request" : {
      "urlPath" : "/v3beta1/6t3kjzbe4w0w5ojmyk37rlwof6thrh5p7b6sab6e18fo3iyii4tlwlb60hd4pc2g8xny79xpl24rizq6fiqrxxvycwd047qt7glep8fepys55a7mxjy91cdu5u/supportedLanguages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Alvaro O'Connell\",\n    \"languageCode\" : \"5t9k6tk6r88q3l34k6xwyo0qe4lk5oslo7gbkkxtjujrpdc2ag\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Mrs. Micheal Heller\",\n    \"languageCode\" : \"h82h7wyfawns8l67u8ehdgubmx9u7aj33v9bt9sjsszusqrksqio60sur\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Evelin Feil\",\n    \"languageCode\" : \"xs9o4f19qp3pngue8j7fspwicxbroiubi62znj6psdalnph6kgth\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Kiana Hoppe\",\n    \"languageCode\" : \"myka9x8wrkg4cr7nsuamb8kmsh0s3xzvya1vin6manau4x2ijyh9ulstzsvqgri46yjvot9gtrex1pa1m8kjjyv32aazzegjlz0b9wo\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Jenee Ebert\",\n    \"languageCode\" : \"ji1qat3w2rlh6f\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Mr. Casandra Wolff\",\n    \"languageCode\" : \"tbxjdekjflp3a1f124oupimuzag3yx49oyrtns1av13emowaszb2y778qs0ryoqoa1h0b0w5hi8s5xwol2lubnkkwsxs6k1to2w121kg9u9cw9meyrmdce8us65s0prtcvcvi0leh65upz2dfgmy5twxo69lmle8ua1qx8gruenry7s5be17u36ug312mf5yxwi\",\n    \"supportSource\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "970dfe37-9d03-318a-94b7-8df1ab9c0108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.getSupportedLanguages",
          "schema" : {
            "description" : "The response message for discovering supported languages.",
            "properties" : {
              "languages" : {
                "description" : "A list of supported language responses. This list contains an entry for each language the Translation API supports.",
                "items" : {
                  "$ref" : "#/components/schemas/SupportedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c2b2b00e-bce8-34f8-8c4f-42a8544f3a57",
    "name" : "Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if...",
    "request" : {
      "urlPath" : "/v3beta1/62m68k/glossaries",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Robert Nolan\",\n  \"error\" : {\n    \"code\" : 1264502458,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Culpa ducimus quisquam. Qui veniam nostrum sit occaecati voluptas itaque omnis. Est et autem aut. Sed praesentium omnis. Hic officiis error sit pariatur.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2b2b00e-bce8-34f8-8c4f-42a8544f3a57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1e3fb1b1-d2fd-3085-9b2d-c8b37f77524a",
    "name" : "Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.",
    "request" : {
      "urlPath" : "/v3beta1/dnxgwgtpjmimxdkaik1ezvmiv8ryuhs6atfmp5nlipcwfrmjwg1d7au3nn735lseh6mv6f6m8gzaqsm4ewm6510fdsu79xwvrv8ohzdu7c7l6gjj5umkg45npvjusxfhwjag01lrh0kgx3e1h/glossaries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"hv7fuk2bjpexw9z7yxu1nyfqj49ju6vydsoncelolczny4crlaug5bfsdg1it3ddpesuakubk0zi6z5miq78s6b\",\n  \"glossaries\" : [ {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/428121\"\n      }\n    },\n    \"entryCount\" : 1156303478,\n    \"submitTime\" : \"2023-02-19T13:49:08.70654Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"w8j3mt9155vmmlkutu5fofabld03dfhhweosdral2p6gsay9rdm9tyf2utg6gucokb2jtt6o0vdsu8rwvslbj7n5y3ktgg9fcefpg5cwvym0qigik0i18gkkdre5evz0k7och15buoz\", \"1ewwq9ot3wl3npfmmxg3xokszb0j02n\" ]\n    },\n    \"name\" : \"Elana Runolfsson Sr.\",\n    \"endTime\" : \"2022-07-17T16:26:08.706647Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"56xonb3c2mbvbt95nd257kd24omd0pzgxrv97myt0zhgc4znwz8qfb288xs0fr0ibbpnhrz1u0o7cx72bigeoy2kwvd8mhh62y1l5l8imt54khhxnm71dle9pzfgyne1e09lbl79\",\n      \"targetLanguageCode\" : \"2rpwa99f1dbpdrhv0plo4542u0x6ejtfxmm477q0r1feehd3l7tg4yqigr9w0gd61opcjfmns0ii3z3u9x4e6nt53bnydvl6e4li7umcmi6sds94ww7otd75r4ok5jffsuj5303frua4wlp5zy\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e3fb1b1-d2fd-3085-9b2d-c8b37f77524a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.list",
          "schema" : {
            "description" : "Response message for ListGlossaries.",
            "properties" : {
              "glossaries" : {
                "description" : "The list of glossaries for a project.",
                "items" : {
                  "$ref" : "#/components/schemas/Glossary"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "c066e928-d979-39a1-9d23-b51bc04fa05c",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v3beta1/Toby+Daugherty:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jacques Keebler\",\n  \"error\" : {\n    \"code\" : 1067702733,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Tempora cumque odit praesentium sunt. Suscipit laborum eligendi qui molestiae. Est excepturi minus ipsam aut eius odit corporis. Doloribus et illum dolorem illum itaque magnam.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c066e928-d979-39a1-9d23-b51bc04fa05c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f2e99670-63ad-3300-9eda-ad08e04e79fe",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v3beta1/Malka+Osinski:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2e99670-63ad-3300-9eda-ad08e04e79fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "11eda229-780b-3c60-8f63-19d2f52bc365",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v3beta1/Mr.+Francie+Jast/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Prudence Lesch\",\n    \"error\" : {\n      \"code\" : 810975273,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Est consequatur sapiente. Rem quo rem molestiae voluptate iure. Placeat ut qui qui. Dicta temporibus non id quibusdam placeat.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Clinton Howell\",\n    \"error\" : {\n      \"code\" : 1786669593,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Molestiae quis doloremque ut eligendi. Qui dolore quia doloribus eos perspiciatis consequatur quas. Molestiae quo totam aut ipsam libero. Voluptatum ratione minus saepe corrupti deserunt. Et quos corp\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Graig Rosenbaum\",\n    \"error\" : {\n      \"code\" : 316986375,\n      \"details\" : [ { } ],\n      \"message\" : \"Libero sequi autem. Et exercitationem qui error in labore. Molestiae sunt eum quia magni velit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tressie Tremblay\",\n    \"error\" : {\n      \"code\" : 555457818,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Sit a nulla nemo. Tempore omnis aperiam repudiandae. Doloremque alias occaecati quibusdam perspiciatis excepturi tempora minus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Charity Stark\",\n    \"error\" : {\n      \"code\" : 289381060,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatibus optio ea qui aut quae enim molestias. Aliquam odit repudiandae commodi qui quo amet. Dolores accusamus libero iure quam distinctio et. Minus reprehenderit commodi. Voluptatum aliquid est \"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Gale Lang\",\n    \"error\" : {\n      \"code\" : 1903861351,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia corporis quibusdam iusto labore facere earum. Quidem voluptas et praesentium. Quo recusandae velit esse consequatur ea voluptatem. Animi minus perspiciatis libero libero. Sunt cum facilis provide\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"6jsxzavg4ar9l1sus8n9jddtnh6tiqte4oqcpqima2w3vpji7g4r33rnhksp0h8eg83wojcd8olnfbf81wu27lkl47stutv7ukuttvqytlyhht351zdlxvppsy3hthf4n7x3bkisaoywxeorld9bjlhi73fxbnwyfnf9qg4nf2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11eda229-780b-3c60-8f63-19d2f52bc365",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "6dba6b4e-ba8a-3f56-af10-c876c1c9acc7",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v3beta1/Conrad+Flatley/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ikehah4n3mqigurqo2d1or6n7jsewf33y322cqrct0\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Terica Hessel DDS\",\n    \"locationId\" : \"kbu4\",\n    \"name\" : \"Mr. Basil Bradtke\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Donald Bernier DVM\",\n    \"locationId\" : \"e764\",\n    \"name\" : \"Ms. Anthony McCullough\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Sofia Mann\",\n    \"locationId\" : \"z8fh\",\n    \"name\" : \"Phillis Abernathy\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jaquelyn Orn\",\n    \"locationId\" : \"yo02\",\n    \"name\" : \"Otto Senger\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tiffanie Hills DDS\",\n    \"locationId\" : \"dz14\",\n    \"name\" : \"Whitney Bashirian\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dba6b4e-ba8a-3f56-af10-c876c1c9acc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "2ae51a9a-1866-3aa4-a146-cc4e1c7d9037",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v3beta1/Donny+Okuneva",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Efren Collier\",\n  \"error\" : {\n    \"code\" : 593698533,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Facere natus et autem possimus error iusto numquam. Quia natus tenetur. Minima vel et atque. Eum nihil error facilis cumque expedita quas. Adipisci iure labore.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ae51a9a-1866-3aa4-a146-cc4e1c7d9037",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "6158d75c-6e77-3e8f-bb80-63fdfd3b9407",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v3beta1/Levi+Wiegand",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6158d75c-6e77-3e8f-bb80-63fdfd3b9407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "translate.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}