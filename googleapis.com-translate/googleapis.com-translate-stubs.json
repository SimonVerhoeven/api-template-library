{
  "mappings" : [ {
    "id" : "60afc6c9-0885-4dd2-a232-695f8f14ba23",
    "name" : "Translates input text and returns translated text.",
    "request" : {
      "urlPath" : "/v3beta1/efkj1ugfvl2ac8w5jhzne45vt4f2gg9d7tgk0pni551cr06lfrokndfmwsm9379ejnc6k142aqpw82orqakouxpx0ecz6ginoxohkl8vxfe2icu4akyffef3x0ax5ldwbfct0lu7kdlyp8j3yjd6bmu02w2cqya68s82xifjes:translateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"translations\" : [ {\n    \"translatedText\" : \"u6meun1r8jn3lyssisuehz2ryeb5boiq6lzcte970xneor4e7l4v5qg6a3y0iya0m1jkz3aaxhn2vvp5vq7gq1cypw7h55a45cdbn609n1ay0y78c3dand4of7pkbe5f58a5ecafqb79apof73w28uug\",\n    \"model\" : \"alv6i8vdogm8lcbta0e0b0ony0g\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"t9o93r6e9eo6wy0nnvfx09qohrdjz27nao0t8592hqexbd2zsl7aprnw7vlox8avc7cxrf9rxn44it68za8pef16umjrcblacm44r2oz513cee5yqtz9rhuusgjow49orhre9xdrdnxby1cou13ab6nf0w9jkyv0qhxnx5wnaj1zk6x\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"526vf3jos8y23m8qcfn45qumni2cqjiqecvkm3lr3ud0qif3fnty9cbg0x3h6j5kr7jc83i0yy0ihzrj3u49c3dqb3x5uxm3bah7n6urmg\"\n  }, {\n    \"translatedText\" : \"frnsqtgce2b1f\",\n    \"model\" : \"cjw23sa3nnant1rzbnlq6amc99gt78hvxz631h4a7js5r9fg87fj5mugxdxnszcxcz0hp8q8row9wru46xkcvobsatuftax8ql1hfg7sfgz5nojzlvw58yxpy1r8\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"4g3l0fw0x6a959urwrolpfgzfcaq2c9bp4lwd6pbys7ompzioibtyvirev88fa09wrtu3rjg8tkjp3s7eqlmmenm48bx8hkf20rbih0njvilqvkzqujkkco41n6rp4l1l1yneczmj0j4cejdoncvupa2iv6n2rfssjjyasgbxwjz47hutslue1ro6xv2jiq\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"4f72x\"\n  }, {\n    \"translatedText\" : \"zjsraz9xlqeczc4f5my0zrc66vd5vz5ihw79j7k39a15t9bbhnuq1nrhn\",\n    \"model\" : \"6pmeudh7d5m728vdlxndnnq97gu4f3flu23lbjuxbvaiwqv0o6s2kxasq6pnmw824kx6cmbj6aliako3lkk8eqflj7ws310xtkjuwdbondhhovhfwcqzl0y39uyab4fe01b0ssm46p\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"wuny13cpfnsfdf5uya5ofv9w\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"skd637iw5b3b2nricq5tumfwxo6zr86o8tn6m1xjw0wxrn52qt2d82pqovwlhhkgcexv4jqhgc6hzbmapsh9evf0aiidt98hogmzrxps5kx8b4a1m7i5t91au\"\n  }, {\n    \"translatedText\" : \"ace\",\n    \"model\" : \"hvmt9b7qdhlaft4td74bklti4k4z04nrz7i92bvks9jzl75dnvzro6tp1r8gvsw3arhu2mb41t5935qycbzxukkyfkyctypn5t4qu020cwcwewdtk495hnba07a36ybiu55ud2ik9zm41nrpea0r54aoifo5hwuk3lmb82k5wu1x42bn4scjvewdbugv\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"tu05dsyqviix9ygx9jpfhxjo2q1qvxghwmcqoouqxnaovfww0nb\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"q5c0cspsyc7r00rydeiho9df4sq5cajfkaafifubuai3hdc884yw1zx12a55f6y8st0qo1vtgmjwz9ta2uwopeu1impr27u4q3bx3m2kaip58tfp18x24q9703bchnxsjbzvf2tjohd3\"\n  }, {\n    \"translatedText\" : \"wwdeuxagtz5ulb8srxljt4i7bf1r57iw1g4btwdy2qtdc4epiebnicblmmp7qy93q6i291cv0iqvc8c0iw3ypvd8sfcj7rr7vskyp4ihye7f6an5db3l3y4mo71wbowxcitl658kyy5qe0n22c1kcqihopcanb7eejxtbc2u7favrg74025evtt7\",\n    \"model\" : \"cdpzxqmzv187jhhx2sv8h7fqq2bd2s6472vx667d2e9nj7t70amggq4dl\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"28tn2hdv7euivq5fafvczyh6vl89t3kfplvre1lpm3zpw751toe6oqct9gwe5cfeh0a3lb8pwkvepvz989jni79vo0s8ow4ybkbpffrefgtxizhpty\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"1apl17oijeavrm8io6celsj8gaggz1l7fc2n2n8x8rnebho9g66u2hzbqho4gnn528lp07w8kdqlv6hgsxvndmq85vk4\"\n  }, {\n    \"translatedText\" : \"susk74pabn5rhn1q4yepb2o8lqttcghaj6bvyb7opywcxwmz2rknu14uz6zgs24dek55y7tokyf52t0yrujv3y9h3fvhjf1h87vzxa22bs\",\n    \"model\" : \"r343gv58iymh9wb3kc7e8yqkyybsq1dnn65nnjanrj1n3e59gsoesqlpoiqhly29g42k8h0yeo94wiuc8tghv6076sk696r5rl526co589gagt5gjv2w6leboo3nm48tnls9bclzstwfryywd13d6k3cfil989ardb8m6i05f2he9x5t\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"eeurlfyjcfuzss0b1xp7tnw6np9sg5h30sj9ra8lg4xfcnxt8ql5tkz90bbf15fp5trkp61usx7lkhpw5\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"uberxuekh7mj578lgepvipdevu33i38ssd0m1jg8ko6emm\"\n  } ],\n  \"glossaryTranslations\" : [ {\n    \"translatedText\" : \"nezhpbml9ytyuagf4hms04v21c3yrp4cfop8dzvea6c2zaae7lud7l7ij5j9hql7t3z8gpnyjzp5r55q78h9y0l7cvv\",\n    \"model\" : \"2c16kuz893jlso2pearrle1gqvd0fhaqqixed97jvsastjp4cs893q1y0085e63wu0pwlwkwmab41b5tbqui5cfmpo45ffi\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"ovbm00u0wt0sz9pv1t7la8lzd9fviwh5vkna75wjff3f1b634qr0ibye61kfd7tes9580w1vape2rsfzf4serjbf53e1z3rzvdk49q8f9too9ov1rcrt4ft78hs860bk1yljlmljvy85bvmloa7ojcey\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"wi61lugd4o6wcgnjy41w7jqs5ri6vkb7kc5jh8eo7l2jxbd8dxavrhldm05s0aa0r397pru11zp9yyuvxrrmc8rlqk8rn6fp8m4a4i116yvic47n5foh2z6sebpgoj0a7hszietvvtn2x53lhhdpl2qpcsatrp3mizm1gxc1ju\"\n  }, {\n    \"translatedText\" : \"um5yxbpg5nlfl591i2zcrc6drxvbp2soxguvk2hay1jvxmaqxyhrvol4ffjl26icuz3y04tak1qjny9yn0ar55rmk1es38n835d7axtg8emycjtnt998cy079qwllcg0dd34a47e2kkpofs35jqdt5jfyrxjzm9w5s1yvr1xj4ewags5lpqnvoy7qjy\",\n    \"model\" : \"oiltolk8wei2hpqgcntmzfx9d5g61v2xhmymc7foohe8uhv504cemjmjurr25nzqylwbdfc6igtydqvse5mf36s\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"df1jk8udz6em4x7b0i3cxsrctjcyezrjlgd5672jpsfuv28twd8g5bkk03ejwquyyz49tzd2y2palhaxcp6dyg3ivks2yh4o6xan3vhltzjx2elu4d9uq0r4gyzi3s4ubkgbr0vpnr03iw0yr52j33h05h0r833wu2szuxpf0q2his7kr9f1090j\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"153otpwfepvdllmyli1y4whhyxlhosv1i3bgxtj04fnnvyyxlyudvbc9m1vb2ereuvje7fcdgahf1pzpcwbuudnvzjmlgcjey74ogeim3cpphrb67u2ztatf03kwwekks9qoqjpm4mrx1btvq5vn8rjoq823wl5l46hxy92hckvf7ya5smsan3bz94g9\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "60afc6c9-0885-4dd2-a232-695f8f14ba23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.108589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateText",
          "schema" : {
            "properties" : {
              "glossaryTranslations" : {
                "description" : "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              },
              "translations" : {
                "description" : "Text translation responses with no glossary applied. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "c83ec92c-9465-47cc-addf-09d428822ac2",
    "name" : "Translates documents in synchronous mode.",
    "request" : {
      "urlPath" : "/v3beta1/j9wtjyb5onf92i875m8urykpg7540sl245jxtjk0mzrml74vt8conf9aod2kziric9bmwet98ph:translateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"coeut1lfp87edkuwxsdv8anjx30jjsiah5manqhehrn4y2vy6t0e85raox5m5wu1bmaubvvyoubwm5qmu6xkad383dtnhua7mlsynk2bw0b0rbgf1kiv9vb4yb78sevcmzte3f3c627m52c6\", \"v69k8net8b3ix2n4r21hv2w24bf1ncw8g1eup0kn2zh86erh1imbj5eaik3wc24l9ef1ocagknkkd3yaxe8pvo\", \"g6ew9jq4q4vd6cy6lrosqd0xg796rgww3dwdqp99s7zlplcgavjbc2xjyktzhxrpf643e2uena81kj2spff971aojezfawz9wygltjh4g8din1y64gs0bp3c1prbdywh61\", \"j110w3pohq6tz92orl3ymn8fa0q0lh13dvaw7zfuq459p3vkl8xg43houpmfqaxs3r\", \"8nlcjfmlzyvqq1h3m18b4j1jbneauq02ftlmfbpb24rmsle0qdlp65le3rpqw0k4xjkk40itjz3a3r61b2zbn9ookm3b72xieiysre9n3nriymlrt6zbh5cvgkvf64zujgw9freoz5szz3u2hck55irr65l2ydt1j3xseex50zxonhnuywy7y7by2lei35p\", \"v067htopjomvb87gdkuyq1x7as86r8okihdihoggy7pk81lvoz01ny857hyi\" ],\n    \"mimeType\" : \"y39wwvhqri5n8ynst9e0zuqo997gslihq3o2k1hm0ay4ougtjz6wyedo7rbb6r5m7oqcs8dqjce5e0astk6pcxjp1xnkf\",\n    \"detectedLanguageCode\" : \"oq1a7xeuzok1uf5v33vqea4gn7khosimxwa825hrwu4yc3rw1moex6c7wnth5g4thlb7atfl9ts24o4r0umpi41qhh\"\n  },\n  \"glossaryDocumentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"i9ez6azeajahayzc7phte84l5z324wlqdtdi79d1l939f3vakbmn3mhh\", \"1uffjpuhjxdyl890cv31dj2iy9bhoiud1a8ygn1c2l2ubppc6f4a6ofcuo1qdnjtzr9preuilpeazw359\", \"bwhax1f5yoxq6\", \"7t1qddccusfe5izjrfr84y\" ],\n    \"mimeType\" : \"p37l33h7uu3cdslok48gjh6w6y335e7al5gtiign9d8hpcsyl7qqpnf921xs9vgvsicq0uv2j5l6xwfw7c2is3eezmzj35856zpx50baxsz8etl8la5aogfr31bgj73g67awigjcu8qqr6cyw4h1i8rkoaugyqzkxy2n9m49ogrswp4co0j4l\",\n    \"detectedLanguageCode\" : \"m912payv4dtqv4lv9mde4uukoao55344k9jwpz5e9qc4zqk1szx0sp9j808njkgip8tan2z5o29rkwbrkhferqob17fg5nnm8dsjpk9srhrrc1yrguozdro6rslvv44y65kngh5b28vz1j2o1kb4q1\"\n  },\n  \"model\" : \"yqn6o18l3llro7sm0grtbaqp5zd9yh51l1402m6sayn8c1u4dq4uceftc4eu4fmwyr9pva7jjoft0bqhypv\",\n  \"glossaryConfig\" : {\n    \"glossary\" : \"247s40x91z04bgmm9i1lnnzvnsqcawylvxe3ec8cmkopxz3h7gru3wv2dsupb10ijdww9vub3l8w9otevr67edpfvzcrvnib8dla174n5ihy2sjjek6jruw2fk8mrem6d0heh\",\n    \"ignoreCase\" : false\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c83ec92c-9465-47cc-addf-09d428822ac2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.10803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateDocument",
          "schema" : {
            "description" : "A translated document response message.",
            "properties" : {
              "documentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "glossaryConfig" : {
                "$ref" : "#/components/schemas/TranslateTextGlossaryConfig"
              },
              "glossaryDocumentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "model" : {
                "description" : "Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b4a3e0ac-65c5-467f-81e5-604d93c0b0cb",
    "name" : "Detects the language of text within a request.",
    "request" : {
      "urlPath" : "/v3beta1/jv0tv9ti4s0sqpqrhih3c5mebefsgaf6y0pxuqahjhb91m0drts6fklgmqfmxql3ayv9phwm41h45ffu3o657ga126n48cmlg7zzfz2lb756hrnpnz0:detectLanguage",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"confidence\" : 2.9273444469484824E38,\n    \"languageCode\" : \"n1k7ak2fvnzgy7fliw0vkqjtua1e5mtvge9a0sc64bu5idmf56dt3t9jueima95myvr4s2wokglvx9dczi7t9jppbk80kx0rxr0imiso7pzfn14dpbhvze98o9whb1spqeo0ldizznhnswapxqbmp53zxspqavbgcy62bhcvqdz4zih1t36c3s97\"\n  }, {\n    \"confidence\" : 9.32293233961517E37,\n    \"languageCode\" : \"97ebdeu\"\n  }, {\n    \"confidence\" : 1.1365219931484208E37,\n    \"languageCode\" : \"e6uaunp7cyxbx85ayoatat8e8gjp4o975qqh5stoey6za32jum96ngnbab9r6un1vgpdivfuk92ll1923skq001\"\n  }, {\n    \"confidence\" : 1.1751332564681949E38,\n    \"languageCode\" : \"rp09bjiynms4owpcjlea27x25rpzozfe31uqcibdstbkh3jvcen70a3p3kantnkb61z0wmiar53u2sb6bm9j74o48s5kf6t16mrw7rudb6aabyygx0vzrd8wwvm54918fihdt9v2hw1ik3ehx9u2wobvke0ne\"\n  }, {\n    \"confidence\" : 2.1422725862863055E38,\n    \"languageCode\" : \"xmnkda722uqppcw6708uisb0jei93mx0rbcez5nngo13g0uozpujpmkyjf7ux4rixpssh4gffp5vul5tty2vo3mcnh3dze\"\n  }, {\n    \"confidence\" : 1.7511989656457905E37,\n    \"languageCode\" : \"3fe4fc3tpc1qswcvhrw4edpz1rudk0r91ide0n0u6s87v1ghkvpjeq0o3qfaym2b3gwmtsmxz4bp2t7nwccrogmqrb7u3k49nt4ykzw2b8cnhzfn1yconcer8bhjh3b\"\n  }, {\n    \"confidence\" : 2.2668812125017203E38,\n    \"languageCode\" : \"frp69ufmmkzlgzd0537xigjz4ropsmxkr6izjixagtqneggms8zikw2h5o5pm2tapolesvpb5z3cdxxx6y2461hq08fz736c1rm7l7s9ey7ow12yiet2thsiobu7xuoykyg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4a3e0ac-65c5-467f-81e5-604d93c0b0cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.107752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.detectLanguage",
          "schema" : {
            "description" : "The response message for language detection.",
            "properties" : {
              "languages" : {
                "description" : "A list of detected languages sorted by detection confidence in descending order. The most probable language first.",
                "items" : {
                  "$ref" : "#/components/schemas/DetectedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "71c2179c-afa3-431a-a3f1-1b60075725a5",
    "name" : "Translates a large volume of text in asynchronous batch mode. This function prov...",
    "request" : {
      "urlPath" : "/v3beta1/fsv3kkbco45ni8skq1tk2x803lah9452o1sh50xo16i00h09ai3copiwq9ms6z7wlcbwd2gynvxni2dgykrvnaypud90qefevhvxlfmuszeg1e2ughvdgw4l5ytk1838r4gi0mxzki68h1xemvzvniw19kq:batchTranslateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Glenn Kunze\",\n  \"error\" : {\n    \"code\" : 2031437436,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Autem inventore architecto rerum quasi similique autem. Deserunt tempora ipsa molestias tempore ut. Odio itaque ab aut quae quaerat natus. Adipisci asperiores est qui. Nesciunt voluptates impedit ut i\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71c2179c-afa3-431a-a3f1-1b60075725a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.107517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateText",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "62a550c3-a376-4915-aa7f-09c07fbf3c44",
    "name" : "Translates a large volume of document in asynchronous batch mode. This function ...",
    "request" : {
      "urlPath" : "/v3beta1/3ftrpxl5nvbe0175nimhs3w5dp0ce73xnpca7uzkqxp7l0ogmppdw6ixk3r9t:batchTranslateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jesse Hintz III\",\n  \"error\" : {\n    \"code\" : 1325926958,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Tempore temporibus quidem et fugit. Doloremque minus ullam. Quae dolorum optio quisquam autem laborum qui facilis. Cumque delectus qui sit numquam ipsam ullam autem. Minus saepe reiciendis et eum volu\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62a550c3-a376-4915-aa7f-09c07fbf3c44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.107321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateDocument",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "62a3a8d9-5dbf-4b40-9a6c-e1c7bc95c56d",
    "name" : "Returns a list of supported languages for translation.",
    "request" : {
      "urlPath" : "/v3beta1/chugn3igd5fidxg1gku2ig9go1m7pvrc79fjm8ayg0wqxomn7458rb8kzzyp3vw3irydavwhw60uz27swdcjvmmvhvr41zyr2x/supportedLanguages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Miss Meda Moore\",\n    \"languageCode\" : \"81sbbf6e725zuuz57vppp3bixuxvdhuc5\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Craig Hauck\",\n    \"languageCode\" : \"719b1nmkh0k9bl3zfcmnn905759gg6qdyft6iuk68zhf0jzbw7kf67mxeo5a26ai8eyte0bqa1pdk69xgs5l07bqvelfip3gbbtjpzkovdi9k5aokduxr15f15lu7edbd9xpx5v5moqd7uadcem6fdeggd5o130vdla3d478h1o5erkh8qxdv7vycly8puop\",\n    \"supportSource\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62a3a8d9-5dbf-4b40-9a6c-e1c7bc95c56d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.107051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.getSupportedLanguages",
          "schema" : {
            "description" : "The response message for discovering supported languages.",
            "properties" : {
              "languages" : {
                "description" : "A list of supported language responses. This list contains an entry for each language the Translation API supports.",
                "items" : {
                  "$ref" : "#/components/schemas/SupportedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "027cf450-07c2-48a5-b8cb-67cf8c154532",
    "name" : "Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if...",
    "request" : {
      "urlPath" : "/v3beta1/5u4ld7p12hdgsnee9000wnado43xwgd3jlypts63dot9l87pgyatmbgvrzy3ytcaw06w2ots8sw5k2m9r656ntsdz426/glossaries",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jesus Cummerata\",\n  \"error\" : {\n    \"code\" : 282452869,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Expedita odio dolorem adipisci optio ut. Ut molestiae vel hic omnis velit omnis. Nulla non atque eligendi quam nostrum ex qui. Ut nulla sunt.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "027cf450-07c2-48a5-b8cb-67cf8c154532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.10657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "cd099835-479b-4dc2-971d-60062769bad0",
    "name" : "Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.",
    "request" : {
      "urlPath" : "/v3beta1/ynr7p24z5gk0c7ksh3c6tv2990k1w3znqufq5bi2rhf35tlfbihitvddqodhojkjth0ku2zhhvslkii55bsqo9t2qlnasgr8cxf081shz7zim/glossaries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"banu6pms3a55tg802kydheqcpn200t04o1qdli6frkvimbvt492i8bompcn89hsxl5s6hlmll5wjvhcrcm69j145pydq\",\n  \"glossaries\" : [ {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/220955\"\n      }\n    },\n    \"entryCount\" : 909836019,\n    \"submitTime\" : \"2022-09-22T15:09:07.103979Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"wsmbn12rikfsimhpanttxx5amytgxgjc0on9g7e47lx8w034amn24fruptbswbmrstsp3usg1w9vc95fqalm7pwmq4ikvm4r73f773z6asvlvvbm4amzy9lrprslbpk9gxfrhplvoe3nwweseoqr8xx1lqrzudfwo8k5c0z65fer4766qi9wtdyvgl2qvs99\", \"c2ao1lyqdbotsc3poowb5n15s4e20f9eh6y20rm899im8cgbu2p0zoua1fspvd4tt81je\", \"kcm9ak3c2nizhjylytlga5y0sj4iiakagy0y3lm1vusni85j3u9oj4ngztd8n\", \"dxz949b2s1aj3149damdfbuwcetfhw629n296xfab53erydgzo1fwvhp8yc9j9x3xoubn5iugq5gnvir7mzqqwhwjlvwb1ylb\", \"zi1t9h7kppxyr8ylfdfl3nuh69yzyvbkk720kv\", \"340wytyece3bo53megqm9eybtwof8e3d26h0ho1dkhsjsq87yjc1w256aaw91qkwa07ji259a0bbfynf\", \"9c7liamtgh7xsgp936rcmcimgvzbasrzwaz7yaxd6ko0hl4atdhv55a8hvb121k5an9wl0mhnxwume7hc1n3512gnho94b2uqstnr0m6bybwaaheroqq7jyz76mtc29vlhi71r4gkg48beisbk7pdg31hqgf2vtn3e1z9ckjbvhkcpi8vvp1wecp0t7uj5vb\" ]\n    },\n    \"name\" : \"Waldo Kuhn\",\n    \"endTime\" : \"2022-06-26T14:53:07.104166Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"5dk2k0f5kg5bitjbaxnh51l3ktb9rt4r8lqqs3wvxsbsuldkgq0ud25gnlxa8iuztv7da3lin0me9wjvl6jbeu8xnlxxbqqmcfbuicqxhbsms3mk6ba\",\n      \"targetLanguageCode\" : \"jer0ei52bott75jx8bsfapgenb4m92j1xw43d2d8pfblrizkn9xnzokj4dy3l66c96b1dhjoryp4hu1atrvv3hcg3hl920c8rydlpchb41rmxsx4c72k9biu78egiem5fehbeetx3ss77maruflo6fj4s8chu1s1twbwkw9t2vokq4uwtxwqmoboqn3at3iuqaob\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/487673\"\n      }\n    },\n    \"entryCount\" : 1362422996,\n    \"submitTime\" : \"2022-06-18T13:26:07.104329Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"yfqxqpkfhd8ap1acz5r4qnizr432094suzsk0lodl40yi1wo1m936bcs10i659q5kf34r197ui34dxz351rde4l92biu7njy3q4dl96zfqlnjvfzb1shic3pd7uuqdnjo7n6odrzxldcgh8mey5ke547avrhm1ecllvbqs8d3lo6kcrie4a5eg3ti8xrrk4t2p\", \"hx3vttqlds6qak42vdryaynffklwcmwrvon9bonbes0m08lc8jh1zh97t6s1f\", \"0tl4j01q160zhh65u4x2uojrirku9vnpzl4vdkok0gw4knnd0acs4r9z3oz2q8y89ys2dulm8siiegx7ooxdv\", \"whdlkrfag0lnztdp4fl7coenoxk4mkc0inub6qa1mzv5vpayu7x9li0d7lmlx98om2rrb986jwdppscc12jnvijwoc6t9kcpo5fbaym04b0zk7zicvj79u9shnstnh75pxbw030w4vfarjax3v8u04pi8\" ]\n    },\n    \"name\" : \"Heriberto Haley\",\n    \"endTime\" : \"2023-01-10T15:31:07.104427Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"yjg902io6cr8w7whfyel46kcltvomsjuuege5kpdqntuqhgi0dtlg3aqmry70h7v1y3p9z8eq1tqtw9cp87daxzbeubjxmj4bxgi9ug8juq2d8kk1zvkd24jke134fio84h9hhmazhd51tpith9gzoj\",\n      \"targetLanguageCode\" : \"4pe89v83crp8n9mhy1f4f3c3wuaf27a52hdw73mkre8cvabwekmpq875gc4lyxvu641052fx9ph5xtck8j0dhh36t89xichxhttwo3jifncmchl89qslukkcoh74yh2oy8yv4ra70oobhxeuv6bc2bf9ksn5ek9\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/995639\"\n      }\n    },\n    \"entryCount\" : 595331078,\n    \"submitTime\" : \"2023-02-13T13:11:07.104571Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"m1gmzuke1q3f8yr2nwb1mz27a3jpnnoasxyjhdzw1uj6or96ntazouk4dy05kmewhg7z3l1qdqzrdhnnxr1n7cfjnv3c29y0odllkum6ilqej51784gqv1yaid3jccv2fsyrwwpiijc6xvb0jzogh5n3gg4ew2uq5y1x1n35249kkj5pkx8twfkl\", \"7ou9elgu3muilnjbbor61lfmmi0v7yxscek8sqi5b9m9d8zynuhptlbggvwm1fkc7s3hvr8q9usco053292hhal5acs6tbjgjzapk278lwnu1klfc4hihcexgk3k98drgemfn0jmaz3hgsrcxpqv8bucfjarpcjra6qs7x37e00j3zqgl8tpuf\", \"b7rnwzgjznasm3k3gdl81ukvz4bknlaayesgc2x4m91us1q1uk9544yhxs1j5xhrsq41746cttjrfj02xmivtrem31kw6b3ctu7lvpeo5rhprayta6r60c6\" ]\n    },\n    \"name\" : \"Mr. Leonore Goodwin\",\n    \"endTime\" : \"2023-02-16T13:50:07.104699Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"scb67fshsju9gibu56sdjdgp5bgyxbuwy5iezjth4m2w1k0t38pz4z0nbi9dldv4br5prba7e3ebwn1n8ai5fu6xwmsxz5eh3li8yau64edyby23pusd1qtbsh1454i2rgi264tiq61e4xszkynxcfpke4sapxq02112i2bp5doe9pllxw37lnjsbjxxtcfz9\",\n      \"targetLanguageCode\" : \"dy2mftooh7x3963g5a8y5gfbqjw0wwmmt77ubu3q7m5e9hwdudtfw03k0tjgo72v8eyhgesq9gx4asel2hjl9td9j15xo9dx880yu\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/047402\"\n      }\n    },\n    \"entryCount\" : 61078768,\n    \"submitTime\" : \"2023-01-08T14:24:07.104876Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"dnfcg1eqeo\", \"t13w2jp74u52earc8hx3zg38mr760o9f1ed3otqj4ef9fs5whhwa583uuhzrh0wfam6bbdbo4iez2y5sfe0cuc5qo4peyg56blqx3iz06eszmac2jh965px4qvxljdor4kpwfqn18fj2g5hl6pk8vh21y735zk\", \"2gmyi2mq5otfsnds73kjvilwi2vly80qpr0qjoh62cvhefhat4y2m17em32tk70myscm69yxjq0rx3cqzpofay8n80l7\", \"gp3zag9lzrogzzgt75fshkf0tyusg15yvli38p88zbia4u8efzyky8yefyss01e4c2u800gngkop14yeqoq73cfiqlk0q31o3r8mkj4tn74\" ]\n    },\n    \"name\" : \"Rolf Reichel\",\n    \"endTime\" : \"2022-04-21T13:20:07.10498Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"hxvwst79xg3h18c2ctaawegef0e88vt8um8qq7o2w954gncg2e9jaqqk0lnhx2a9rm3rixcynhixzvja1r9e6493y09nwoo5e1ca31ymagawz1i4qsox0u5ka9l8e75uxubpza8ckui5oppundkyj7ddxvdhm5v22xx1e78yfcpz\",\n      \"targetLanguageCode\" : \"eizjrdphv5gyf60tjta2r6tnqxg9n6kdwc8h8upuuy1xkm83ub14j0jc3gblj2nh2vd996yytof8axm937adm2opuuy4beuyc2wcykdt9jwlp07bfif0f1pzco933d5epdr80dtzy7u3xvy5jv6qip26tco6xl9raxotasrk4\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/900187\"\n      }\n    },\n    \"entryCount\" : 191898168,\n    \"submitTime\" : \"2022-11-30T13:30:07.105163Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"dcwx7gmhhelfxp5jwwexfgmibak4gddazs618uka3\", \"y2ukn51h7e5hb3ci7puq60knvbn2iiviwoldr7qmckbn2zn7ccw9b0677nl2842vla9euy2zbqe511eozqw59r91ihfrpu3d4cihw56z8dcrsnaytwf54vuk5i528yemvd0c50teqh3wfb6kqhxa96t\", \"qv4phh74n0papqlu6sfvvrq6osejoct\", \"ri2wosbrlu2y7tka930mwce4eljip5ptixjsbi9nk2q4esdnyte6hra8bxv4w643fn81qsdhbfn7y02bg86qg1z4hs6hnegpaxpkqnvg5xx8g1nxu6h8mtsrfalrlhmk0vebydxoi7wfobjmbxe9tor2re2tz8d7a1n8agxux7tdpj7po\", \"kmrir3037ohh78hig8zygz1qnxzjs\", \"g4douhx9mscrhv3grjk7jzpmrasw9pgp1nve031rjsg5ih7qdwpfd9f\", \"asjdyr8dmy1rax9fhziahp321g1c2h3njyom1su6iguzmz9\" ]\n    },\n    \"name\" : \"Ellsworth Schamberger DVM\",\n    \"endTime\" : \"2022-07-04T13:45:07.105274Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"9jq3fj3jbhs0aor8hjzu3e6kf27tcvx6sdiof8zive18auhvamnd0ik1vgjc4tkz1ax9\",\n      \"targetLanguageCode\" : \"3tbrhj1i717b0u2vkpygwv4ld3gxox4yko5i11ocisstsq6vq61o4lqonxp4u12zg7qbq5xlcmdqs862kli8i7v05v4tif5654zbyq4p8xfk62hi\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/580694\"\n      }\n    },\n    \"entryCount\" : 1027872874,\n    \"submitTime\" : \"2023-01-14T12:11:07.105458Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"a4p9hbxu7073e6hpiocv3s2lb0jgl809hmtl2yu7nuhqavqzsjfjqiz1gr3607t2eedwg79c93swm6rpt0kve3ln9axerf6io\", \"9802moh7ihcu53o5o57myn0op29kkyzfd791bl8v2mny32lfj6k\" ]\n    },\n    \"name\" : \"Isaiah Dietrich\",\n    \"endTime\" : \"2022-04-12T13:11:07.105545Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"23v8sq1o4eeezhkh2g4vrv8ivx79cbky7j4ebf20gomglf3hd71im15mmc4qfv8ghy6nym1yx6l\",\n      \"targetLanguageCode\" : \"hioxffsc1iy8ggae7n2yzgf9uln99pqffocw3rk1xfvq2bz3nxwxxqeu3ydk7iph220s3r2t8dmu6vsmqkb7d61skexyxutnr7sxkg4ta41gngdke414vs9trx1tuij5ucxv117oeoi89\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/939054\"\n      }\n    },\n    \"entryCount\" : 1537302714,\n    \"submitTime\" : \"2022-11-02T13:36:07.10569Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"f0fy36qthrr544kn57\", \"s8zykbqv28ey2pq29t44ja78w1re\", \"2u14968m12elxfbhjflnmwyxmcm06wak5700ugr8q5ib82xnxsb56mwjkn\", \"gpfkagc0d18896w9cixz6n4a8839a76ukanlkrszd23nrzc2j6fg0w83wfvb5lazzmzkes1bxki2js1goftlgiqvvluy3pxrixagtrpsrjxet3zb2mdmarq9o9nid137tosqc4dkiup2861c7qbyb43k186am7btwye2sqpce114sn5mywx\", \"qshjgasqbauftc3ol8y9x6o7pxncixpyi8rcfq6znltnwot22gfe618qwwjz9mrtnpjqnux06q7vsidht77p9kyjcno1rmds2u93vb7yoosfd66hdcwd7pj2cpxucza3v0h8riz44rf9fh0yk3oofm2rxj8ph8rkqizl05mezc\", \"zp1bcjibdkx99umjmv5c2z\", \"fc60svys6f8zc2sawka4l4n1xom6cu0vav91634bw39jf4h5wkiz61ux7ifmfelw42fsnbghutmrgjaptq84j1ckykufvy2lad9z1guk5bkrvf1rgbri78azc8o7vdd0e0r9cetif7zsaegpk9wxbd1l5ko6obctq703ijrgy7etmd1zdp6i3pr97\", \"qj2k0jrgr6xdylj39s4linv\" ]\n    },\n    \"name\" : \"Wilbert Adams\",\n    \"endTime\" : \"2022-06-11T11:59:07.105811Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"t9dijk13hb01zky69q7oh7lvevvrt9btcu3dr99vv65y3wmx69x57\",\n      \"targetLanguageCode\" : \"jcxwbcp55yf6gv136f50ruobodl5pctvn9et0as2or40sot7ibdhd3s6pk1tnleriwqi\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/682895\"\n      }\n    },\n    \"entryCount\" : 1882047656,\n    \"submitTime\" : \"2022-12-02T13:24:07.105951Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"e1awr86xh0jkrnvg67ksz40xmsl020sb0wn0ewx0hi2lfnxbjpfaqbcd4lgwcg8j9q8eej7l2vu9hwpim03t10txcwipzu2l7r5a19w5jg3028mg6rqvx9u1gzsroiywnmun6jbj5k\", \"3d860zg45akbcfmh20whnzbfcz8xnxe1egu0t1vh2pcqesd7z0j0kllpufo71\", \"bxoi1r4sh0clb2gh3f3odi2ije23dfdb85omvtc6m3nlg26v0wqx8mjgfcl9ehis6t2iokjr1go2d3gd0jv35suavkll4yyw9kc8sy6ki4aiyq7ve7vaugaiq6gb5i5a42j\", \"dp93i78mhbqd0zl5uio3nz9ir7c9j49pfovbxmwzp8408wtyadd2mv7y8udvy5r3er6ztgw2hysdkauz0tkg3j4icl2kxge4c6mktsb0i5ue27vgnoi1vo1\", \"53wn1r02hg3tpm677zyj4h1x99ninaay3nv4erld8f4zol1dwsd3\", \"gxv2ncqzaxiz3nxbxn7cnwyjmkxb7bqv5crxff6ny8m4q7m7lx51cqgh9oo1usxzgpc21m5b8h4067lg3i0qsiwkrrgoxk\" ]\n    },\n    \"name\" : \"Miss Leigha Kunze\",\n    \"endTime\" : \"2022-05-14T13:40:07.106059Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"nn2orszf2ovyuotkcytpj97xjhpgxnlu1wzof0dda25kvwnnawohoqjaehsrpdjpr0ymawzvsdx68g2bnrviqecl0f\",\n      \"targetLanguageCode\" : \"ek761xsmw1y\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd099835-479b-4dc2-971d-60062769bad0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.106257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.list",
          "schema" : {
            "description" : "Response message for ListGlossaries.",
            "properties" : {
              "glossaries" : {
                "description" : "The list of glossaries for a project.",
                "items" : {
                  "$ref" : "#/components/schemas/Glossary"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d02eda52-1685-4dc0-b34b-b9715d9cf407",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v3beta1/Burt+Kessler:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Zoe Von\",\n  \"error\" : {\n    \"code\" : 359829911,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ut incidunt dicta ut. Non et iusto. Incidunt qui autem nesciunt. Ipsa et porro rerum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d02eda52-1685-4dc0-b34b-b9715d9cf407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.103712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "235f763f-f936-4d4c-940a-81d4ec53a0a1",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v3beta1/Ina+Carter:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "235f763f-f936-4d4c-940a-81d4ec53a0a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.103442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "b4cfe0ab-83a0-48d7-bf2c-eb1ac8398a21",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v3beta1/Yadira+Osinski/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jonell Nolan DDS\",\n    \"error\" : {\n      \"code\" : 928721218,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Aliquam non nam dignissimos nemo voluptas. Possimus voluptas sit ea veritatis eos quod libero. Corrupti qui dicta eos tenetur saepe cumque. Rerum magnam omnis consequuntur repellat ut accusantium. Rer\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Graig Leffler\",\n    \"error\" : {\n      \"code\" : 788184253,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Magnam dolorem ipsum. Repellendus impedit placeat. Aliquam occaecati nisi minima totam doloremque.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Harold Bergnaum\",\n    \"error\" : {\n      \"code\" : 458152198,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Consectetur enim voluptatem nulla nisi harum voluptatem. Nam earum cupiditate provident et cupiditate. Provident omnis quo fuga ut sed. Quidem non omnis eos. In reprehenderit ut molestias.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Betty O'Hara\",\n    \"error\" : {\n      \"code\" : 889157601,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Minus suscipit dicta. Temporibus praesentium dolorem esse omnis distinctio natus et. Qui minus consectetur non. Cum officiis possimus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Meg Powlowski I\",\n    \"error\" : {\n      \"code\" : 1413512351,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Porro aut excepturi quia assumenda libero et. Cum odit hic dolorem aliquid tempore. Et nihil nihil eum porro commodi vitae. Et cupiditate sunt ut hic quis cupiditate.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Randell Feil DVM\",\n    \"error\" : {\n      \"code\" : 1494333451,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Vel et voluptatem odio eveniet. Sequi deleniti nam ut maiores occaecati. Ut aperiam quis et ut. Quis nisi modi facere eum ipsum.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"ornqjm9ucx8o8vthtw0wtqxsheek90xevvjon02dti5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4cfe0ab-83a0-48d7-bf2c-eb1ac8398a21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.103353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "5d77e9d4-0197-4555-ac2f-bb032719f1d0",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v3beta1/Genevieve+Beer/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"e36cybxm1e2gvt8fle785141g2ap1lekaq02l8tb8563ivrg2a5cy3tphxd5eyuv1kamxbhv0gaty0mtw0rw6wo751ref02h4ea7lnogg42q8om4lyv0cdpj41nsjbvyojeq2uokywe6o7jocz4r5hca675efnwer4q38m79d0n8dho9l032gqwmb399ms4he4kpto1v\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Pasty Pacocha\",\n    \"locationId\" : \"3puv\",\n    \"name\" : \"Hayley D'Amore\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lillian Windler PhD\",\n    \"locationId\" : \"t7wb\",\n    \"name\" : \"Hal Keebler\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jan Hansen\",\n    \"locationId\" : \"oa85\",\n    \"name\" : \"Huey Kuvalis\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Freddy Yundt\",\n    \"locationId\" : \"213v\",\n    \"name\" : \"Connie Hyatt\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Elli Brakus\",\n    \"locationId\" : \"r84p\",\n    \"name\" : \"Jason Howe\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d77e9d4-0197-4555-ac2f-bb032719f1d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.102381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7cc2ce98-ca3d-4467-95a4-600db37540c6",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v3beta1/Ms.+Lizette+Mraz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Beverley Hirthe\",\n  \"error\" : {\n    \"code\" : 652621835,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ullam aut sunt laboriosam. Non necessitatibus eos neque voluptas optio modi. Ipsa voluptatem quia aut magni delectus sed. Voluptatibus voluptatem porro delectus quo voluptatem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cc2ce98-ca3d-4467-95a4-600db37540c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.101343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3c61eefe-408c-4192-9514-97a5639694d0",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v3beta1/Ozzie+Lebsack",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c61eefe-408c-4192-9514-97a5639694d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:07.100983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}