{
  "mappings" : [ {
    "id" : "a8d05f53-6242-4a95-a100-800b4ad11563",
    "name" : "Translates input text and returns translated text.",
    "request" : {
      "urlPath" : "/v3beta1/hd82fal87ziybachn7e16zso1ctyibg43rp8dee14mgg1y9n3y7pli2g4zcftlq7yx0pd4upzmi4uhl83wdgbht4wptalrugqam6fdtzgircyb2lli0l64e1:translateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"translations\" : [ {\n    \"translatedText\" : \"0tq2uysclh89n5zxxi7fmpvpaf321oh7spcuudu6txxzzbvhky2typ7w1h7p21kielijc7pbrv8bj045z4rake18k\",\n    \"model\" : \"qdhbi6ew8qbksjitse8oo1dk9k5zrg4940cb7ikteevgkmf7aqy65p8stlkmyzwxke6l5el9y25e2fozxk6k8y8nz29t\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"t2t9htd29i9v7k8nryqw4dta3p4tp7xiuwjh5sw7y9zztrii8p3skv0e5x3biznjtyhi\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"0edxa3is2fh6mqep6f76rtppmqmzi7my1n1guvieywukwpvip4x1kuon778u8g5oktxgnb1p9jxg3hg51nh3ounp9v4oip1e9mapvk6i624a0753os7kzd7qficano7gw4ans1d83dl66p6zs2fof9raz87h\"\n  }, {\n    \"translatedText\" : \"ylzpte2tuvjkauj83s3f2wc4gfnzbhdgpvte29b0341a96luadqtitsha1b8uecnc1umbe4cmloj6hpea0qrhn6cbixx5whhw57359o4q7faxul7p84ouk6hz2akgepyntepvypsupm85f6lipztmis5e3c3emozull219dckfdxeuclonfy\",\n    \"model\" : \"bi4u7cgevct8bfeddgg9og3a1apvbqrcz0efz76d400inqlg02i8nwwsxoxmj02wq5ilqwjy875zon4m8xtmbqe3vllo1l2y8\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"tog475t78w1a6drbqz9zwsnifnqunps39libqvahdzij7jhdo99yw6zfbc0rn60h099yjwqqoeu2lhs0dnwayg4202qjmt7iazp8g4s\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"bd61olzod9dpyz03xgkms2rngub8dq26npv3qemy2gdflnz1r93yl7zpu6if2row8foyvdow96lxpaypfw4xiwg1qf5q8lo6oyqpe\"\n  }, {\n    \"translatedText\" : \"buhyb30rnt613t6ja73qx5c8tz648l3nou9jey1ymaiscr43z5t8m\",\n    \"model\" : \"qzus2sbk05e67y3sd7dfkpn2e8d7bhp6xapy9zitpwcfb992r5wwdw66aob\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"7li2r59rmxmwdzxcbz1a137ruyp2u7i90xnq5hnr94w64otouy5qcit4ri7ir8jg1c2miffhsyiysq9oyp18gn92ushib1qid9c7bhubk8b7kjklbhptebpon3xelqjjg0w9nwkczdvmxtv29p58iah49fjduz2h6qqbrsl4qe2uzeyz85ye\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"33e3qd03776z58960o2shh2gb5gwlrx92utu9hfkd87wi8ddnibofuguac4ldagr6lm0nvq72mgyms93lr5ql304qe6olnq7rsa7mfslt9cw8jqh6h4mys53ue1fy\"\n  }, {\n    \"translatedText\" : \"lp2zufxzkzfjf2oxuk3mvf7dh3m6zgmwkx63zuas8frbqtam6a3853e15ehap0t9\",\n    \"model\" : \"oy032wpgnjjtc8q4mmk9ff4m5wa4ssyvz42cen0njjt1yns8s6nngj0y2sna6wgpk35k2sfux2qqmqaypqoqdju8ccoe8i4zz5prccs5j5g6gt44rf7n8w81v6owvumfh5d2i3p89b8s07nwaj617ug3vio29gajdbyg515rypditp\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"qpkp7e5jigthlqta7j9mtu78hwjwjw3kllaeycmffmqz2aq4toal85q8qfpta6c3el3ddyrx2gi89rc9er719u799d5gted3dfqy9fp5ty29l49ek6xc15cz902zowqait7hig81\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"n65fxx\"\n  }, {\n    \"translatedText\" : \"y0337igolsw3xa0kaqixpe1zr72xjip8nw4inan5u\",\n    \"model\" : \"as7eiuk8j0qkobqxed6j8cae8p3dbdhu66vcg5j0n0n8fzyhe14lzt9b6ezjopjacll\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"ahekk9198qqyety6nldv4ww6bd6qex7bo8ne3cmb4wt2mvkuxn7kvbkc9p3vk88q0aqmtmdtt3vhuwtkkbxhwdwdoz8pcpbwmpflmfzdce43iemg7pqaic8gxligh4f6fbqtdlbpjb0ome6l79jrpksy89o5lz8kftbw4zhdeof\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"26pswqfo9tas3k36uqlimr9c3l25cvkrpvmv6i71y5ejp3d7s20afosmt8e89pmz1rk63cusdfukdp4mugg9rhgc6t7b2gy06ryqdlliq4654auqsnk2ket6scusw90bo6illvialzxveq5tgc4x0rj923rsf2guclscegycba\"\n  }, {\n    \"translatedText\" : \"qhlmy\",\n    \"model\" : \"hi6qpkcw12seatzvug\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"3y2j4sh26xr5j5f9w5k89siyewxcb9hbff6rocesrv8vtf8zs9tub6aiqbmhmue8voihekxc5npczgvrmgns665i844e4q0i0tj4jho2\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"qov62f9701dla3ltvbjvqjpmwesiqpyw0qyzk7jon1407pnu144ciwdkd2wogv1zkkejmx6g0j2ni8r870lisbrgra15kd361up84nh9kq3bdygwhi9y3ac6uanpz7hzw5t4r7cqjnvsttnoa3ur9of3l5m8ux\"\n  }, {\n    \"translatedText\" : \"z74zc576fr8w7qlojxihcnrqq2rykxjvcdgbugf8267o11r1ltjiauo8gbzh7rpj1\",\n    \"model\" : \"70x9b1hqilvtlojydihqw312wz3t4293mctkzt6l65khgagz6jm\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"jjg8k8nxr60jco2r6jer8p512khv7aa1j4xa1b5icr6lk3b243kum51cknybuubi9wsw3onz0jmw9mxpj7k4seusrom1qh755ubyt9s8j6fr8pzm6crz1fnjjjdy1p4oouqn5g8hegajtws4ehwv89ysp2tlhnriy134qa\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"zn6x7q560dbfb5r7qek639u8l6ll3jdfxczzofdmim3b8tuiuq2z5zrsbe8lf4dircrg8r6uh564l0ntresdfl4pru0n0awnghlgy5rahvpsomqdqhbkuczkfbyvrtnziz1wyp9d1watvvuejgtkdvtwe8t98ii5rsfmtwkjfg7piw\"\n  }, {\n    \"translatedText\" : \"fghfgh76gjn\",\n    \"model\" : \"nwzz5217q8l0lhw73oog0x6adi6mvaoexln4jjlrx3zkfoznxb0teglgpz7a5kw30fpinlsxwovkxmuoxh7o53dhtxak02flei6gulajpfoai2dfvud2ttu9kmdvdx3axxcbfvf6jfqekcszza8f1no4uzss4o6fw2fe3yv562uyk17y6dvhi9rynx6\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"3dvhm0p3b9mawr3sf4cz52w8k0ukil3xae9utj149ke41yxeuug96bzqx3nk4joduc969r5k1qhnit5hfv18ogeegc9a0fc4x9btl6b4pirti37dm7y1i6zzz5oyd40pgf3bunxsnhs454a1vkf6c7mycbk8obrhwfedi7fnpnwbs1fi58\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"oqbn65oq2hts9vkna77a7tzxsmekyboco8qmqb83g0mq9u2uqvgvpwiwfw3cuism84jvmjoqpxh6z29w\"\n  } ],\n  \"glossaryTranslations\" : [ {\n    \"translatedText\" : \"zbe782kec8d8ju5fdnie3y12gzk76db\",\n    \"model\" : \"m33jkrgrk929enh28bjoit1g9pgev3i62xe1q8j9\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"lzoyrqxhjm6fyrf8371hjgh23nihyqwtv1n78\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"0k85zakpbatt42i7b0medtbocbugihp1x1j6rymkn\"\n  }, {\n    \"translatedText\" : \"k74s13xxdv06p538rfvsgyku593afttb4b0gu8z5rd94vn3ozmljemri1vpzomg4c9graww2e3\",\n    \"model\" : \"5vwgxt8tioaf8oo9xv7tpxxt236cf409ski5pzfj1nwxn6857kt2jzbhc5508cgu3ps6pgamjjggadhouy9sa6wxf0jvn8fcztv64x2chepnas8aihz3u0c1htgf8qi3nchxfxjzfqbfqhkzrxuk36mdthgzbk5bm6\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"kxxv8yzv8cze631ao8k6yooksd68e28h9o1l7oh189jn9v8rqm6qfhdta6xv56h9kjojjevdz\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"vof5zzw1g3r221c5hmntc4ip5rltdx9b0j3uemogt3uezw20pjyaqgrmdmzceng\"\n  }, {\n    \"translatedText\" : \"9ybz238f1428r0shegf83e5ag8lrrv7sfwxj1a1q8qwtxbxato2msx774bo41l1i38f1euu2l6at3wq9vxjx6m3rcn1gny27denaume3h2b87ysbm\",\n    \"model\" : \"7jhfoig1hj99j6xccfvq084in01vo93xi7p08jq14vq4lnrapl5d6iyplm8ulyhwqhe3yoh1ycwlumn129xkwswabyn2vwg3s2bue3mwykp0q05welstuxshm4edqvf40vd3v0770kbhwsq4m2fmpaghp78d2x\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"x1la4ic5w3djskxqlf1cb75g6eqi60eikwbkpa84dul6q98515ipzcwih20044semuyudob3neoiax9rb6xqp9ih6mn0xpqfo5b\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"kqa14uqqbevly7xaur9b100avofucuc9ob1wh\"\n  }, {\n    \"translatedText\" : \"n89sw5nwmp9mh31xhj80ilr0eejao0ohdqr8e58i4unngs08fegyjkz05q8rdevssmj653rdoy4n9\",\n    \"model\" : \"fzpqlnlipmn6bnc18ch9susq2h3u050yc2u2mnfwj5zroo47xy4m63920n91zveubg0ad2hfezi6\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"pabpct00mvno0n3mb39i7uspsr2bksmpzxumfxr2ptjgy8\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"e9bbk5jhqcc6d\"\n  }, {\n    \"translatedText\" : \"t769bxes9pglvu4bfrc7809nbqvtxrs99c6ompimuvib7swq33xi3e4zkyix9qfddd1tq6excdwb0kg798zygbppo0kjci6bm43b2dtb847izg9gp3u80tst7o9lryi1ivp0q6cugnqo37bjvjzfemsbtvzvqoiurmll3p7khnx8hcdnvt9tbku3vccigak2b4\",\n    \"model\" : \"60wprh5w1u2co23yvuodsegey5gupgxl53zj770lsw2iwi8y8nklx89ta98e4gzndul6d1qempedois8wkt3bufp2eytidetlvack94z932pc\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"ypt3anuzguaq7s5866i92tta74eyyxyue9gdsa5jyks1fby5x1vn1cu1wzfk4e955oo4yl0brthvcso3xw6p2sljz7fndb0g3wct3sp75cbcq5duvegzxvwzdfrbkynml1gc8ozsgnyjsw78uwxd\",\n      \"ignoreCase\" : false\n    },\n    \"detectedLanguageCode\" : \"su2dfdtnirxnknnkduphti5oos40p9ruioepa2ra5urn9x5u23zftcgs6q0xcurouayy331orcmh1brtq3u41c6lpr2mfim14cionivp5vdeyab9b9jgpkpcih3j50zst8py5t5i6cdo2ssxh79qfir40yq7c4kdcwo2rizu2610a7ld22x\"\n  }, {\n    \"translatedText\" : \"ikx2curgr1d7lqfk4q3b95q9iurhytsn6xtpgllgs\",\n    \"model\" : \"eob3c\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"9viyczm1jar5gcsu40eof8yv0isp5jdm34piw0fl1lghoif69qyqxg6pbismdpl0yn4ag8ne6fwe9l5vsske0x1d1o6f8xqeeh9qcwwvc1wrnoqexyy7hkdgscmfl0fvfheyb6y80jtip\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"zak9q4m6pg49e43739qiagiffbbu0tejkgs37gymyhyjm9t24o3o4hfyfeu2spfitxhbcgx4se6dz0ztfk4wk912ujhf2fir7a7vsc3v5s43zk5dpesoxadn83vuahoa6q6la0tonbot4czohduivedqj163kypk1mxq102pauu25imp\"\n  }, {\n    \"translatedText\" : \"52jawjzs1zv1sb0wllel81x35kjmo7i19x9wpe2d52ysdelf65y4tqugial90et4sgfkm3qvtw3seb3u7bvcbzpkqexrrmzkppll692zlnx4sfbsuan1qozlnsdnh7ap1ec8mt698m39a985xa00b4gd6xsh483ucya30vkd057yc3fklf4kc4vy2vayqy\",\n    \"model\" : \"agpkpf37yc5k7t3o2nb2syjhv\",\n    \"glossaryConfig\" : {\n      \"glossary\" : \"orkqyws9ri03cva511voy2nldq5abh9opyv5xmmh6epx4\",\n      \"ignoreCase\" : true\n    },\n    \"detectedLanguageCode\" : \"p7wcmetr00269qke5bi91dxq6r1bblglhj8hj7phfy3txehrxyzyzg4rshxfgkbmwicc8jl151fbatg0uutfwqj4b5egnp20wt95u2z8ebe015ltrfbp0106f75bvhaofex8xdpqbalh2q7hwhij2dcxcct66stxfuwikokzup3x5jgl299qr7zhz2mvthsd65l2omo2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8d05f53-6242-4a95-a100-800b4ad11563",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.85196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateText",
          "schema" : {
            "properties" : {
              "glossaryTranslations" : {
                "description" : "Text translation responses if a glossary is provided in the request. This can be the same as `translations` if no terms apply. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              },
              "translations" : {
                "description" : "Text translation responses with no glossary applied. This field has the same length as `contents`.",
                "items" : {
                  "$ref" : "#/components/schemas/Translation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "3a5d7de9-69a5-4e89-82d4-5b3e5840e973",
    "name" : "Translates documents in synchronous mode.",
    "request" : {
      "urlPath" : "/v3beta1/ahsfjdvy7xqc75y8x3xr3w7xu20z429sx33te5b58t7qgq269hp2mqtxjypy61c7k1o6:translateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"documentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"qni459gzqdvcce54ljafw9i9o1iif9huisnweub8zmp85djwxoofmh0m1zgvyqp20nl89a0lcj9\", \"mnn1jkypmn3hre9uv7u1ulrdcgy5ggegnxbv48t3h0cj2g2uh5p3rcvvn0kopi7e9quqx34s980v7uopv6g5an9s2tneph\", \"j3gewrard91f0l5yxvjrep15yokynjm9achapo7m4yko1gtdu175dfr0jtjgudr3dlpfejzy4jmrz1hrs1giuwb6bs3jpgb0wxxd1sgqhe5pjeul527bqmtlmyuu7nqgv4kijz427k9\", \"vb4mlr2sdio82pyd7z5ebsyjgxkm9ymlow9m8oigcihmvr73\", \"671mvwkkgzuik5sy8kiqi9v3yr347x2q7ultkz8iz1v7mlfduas5k3o7iqnnbx\" ],\n    \"mimeType\" : \"dcpv365alronc7p94rdnkpjr72erz28ajooxhy8iq8en62l815wfty3opay4pew8ry0fsxeuq0tcbx5xu0e\",\n    \"detectedLanguageCode\" : \"cau22r6oci516okzakoovgql3mlhf12ra05u41vbtgfx9vf4o67es4hqjciw\"\n  },\n  \"glossaryDocumentTranslation\" : {\n    \"byteStreamOutputs\" : [ \"p0gxqg3a2rak65wxm2c17dimg6mufghas\", \"yoi82i1zvmgvhe9t75tht3h8husw\", \"jkc2i2mhyz2dfgc2ov1cd5wznfk1rvneg5g87fbldbhf43n2snvll89qpwlsv77ojhlc6ixxb79v4hobr0vow7ur4su2cguh\", \"wvtuz0ez2w6xc8pwcjn0v6vs3n0ta2ktp9mucvizlf95lbd4bd8gnzls1\" ],\n    \"mimeType\" : \"afw362its3wgx2jwdjah4mj1ir06rugbfl3eqiscoc6x5bsgno\",\n    \"detectedLanguageCode\" : \"usmydjnhjtx5hpnhai5laaes0nlk3437krvy\"\n  },\n  \"model\" : \"rwv7lug0nfermnbnz0ifim0ap19zy23xn584dcqbs9kzh5zudtq6ergtwbtgs58ctqotfqlb9nerq5u2lb8eb7sl1nb8evilfzotf0ya3rx7jivf1k7q32nswz4mpotybcfc0zdcs04o\",\n  \"glossaryConfig\" : {\n    \"glossary\" : \"wmtn08c3o5ieb9rcamxiwth7yhp1h58i5zzt0ay59qzkotrkcmj5rpxw1xxqv2byzobcflplj\",\n    \"ignoreCase\" : false\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a5d7de9-69a5-4e89-82d4-5b3e5840e973",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.851014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.translateDocument",
          "schema" : {
            "description" : "A translated document response message.",
            "properties" : {
              "documentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "glossaryConfig" : {
                "$ref" : "#/components/schemas/TranslateTextGlossaryConfig"
              },
              "glossaryDocumentTranslation" : {
                "$ref" : "#/components/schemas/DocumentTranslation"
              },
              "model" : {
                "description" : "Only present when 'model' is present in the request. 'model' is normalized to have a project number. For example: If the 'model' field in TranslateDocumentRequest is: `projects/{project-id}/locations/{location-id}/models/general/nmt` then `model` here would be normalized to `projects/{project-number}/locations/{location-id}/models/general/nmt`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "08d0bafa-ed8a-4f97-9707-f2bc8b3d6986",
    "name" : "Detects the language of text within a request.",
    "request" : {
      "urlPath" : "/v3beta1/s9vuylrvnm504qkonesm17n2c31yeiwyftd9t9:detectLanguage",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"confidence\" : 2.1754342825036766E38,\n    \"languageCode\" : \"uilwqm\"\n  }, {\n    \"confidence\" : 2.8268444632720923E38,\n    \"languageCode\" : \"vp449lngs8nvwsqt4p2fiv1k65vc8nzsxf6vu079nfwpfraot0z9s9cz1ffo5mvkycnxvgizk\"\n  }, {\n    \"confidence\" : 1.7977534798052285E38,\n    \"languageCode\" : \"pw1myygeaghcn3ftiiljudw\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08d0bafa-ed8a-4f97-9707-f2bc8b3d6986",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.850742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.detectLanguage",
          "schema" : {
            "description" : "The response message for language detection.",
            "properties" : {
              "languages" : {
                "description" : "A list of detected languages sorted by detection confidence in descending order. The most probable language first.",
                "items" : {
                  "$ref" : "#/components/schemas/DetectedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "31d97a4b-5740-42a2-a03a-06ade87bf056",
    "name" : "Translates a large volume of text in asynchronous batch mode. This function prov...",
    "request" : {
      "urlPath" : "/v3beta1/bypccdedntgt1nt1jsst6v1v:batchTranslateText",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Linwood Strosin\",\n  \"error\" : {\n    \"code\" : 1126868786,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Doloremque quod et consequatur. Aperiam et illo omnis. Repellendus tenetur consequuntur. Et asperiores voluptatem dolorum voluptas est.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31d97a4b-5740-42a2-a03a-06ade87bf056",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.850584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateText",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "7009969f-0fcb-4887-a3a7-c13100e1b69a",
    "name" : "Translates a large volume of document in asynchronous batch mode. This function ...",
    "request" : {
      "urlPath" : "/v3beta1/ebbt5e6x7w1rumjmaiokyrjh3arjsrqugj5i805q5fa9mivk3adymgtknt26nofkpcjya2u2ff:batchTranslateDocument",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Wen Koss\",\n  \"error\" : {\n    \"code\" : 382945238,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Laboriosam beatae non aut voluptatem inventore. Iste officiis reiciendis quae inventore. Non voluptas sapiente in alias. Ut totam enim.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7009969f-0fcb-4887-a3a7-c13100e1b69a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.850372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.batchTranslateDocument",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "cde5420d-8f86-4585-9222-97e2b98eafee",
    "name" : "Returns a list of supported languages for translation.",
    "request" : {
      "urlPath" : "/v3beta1/bj0krgr4kmsnlr07ly7jv3dwzhw32xd76qax986enl509nkt9h59tacrzc0gy8p18m87b1q43fjnhs113kd0sqh1rut7szhv54nnlyz6r4amjal5hu7q9/supportedLanguages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"languages\" : [ {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Elfrieda Gerlach\",\n    \"languageCode\" : \"sneetf3e4lxb0eaf4nc50i4k4pnhhbh2nfyp1ik555ebv9ispwhnup1fr0aw7fajj9ybump6rkj1xlgxlph72vo3y3fqpkmt7hae06ryv1q8xuoef16i6j588krfz3pponddej\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Miss Alethea Gutmann\",\n    \"languageCode\" : \"hrrzknlcc7q6q83098rekuvzooyeuewiewjpqtz7znt0517oygacelk55f5te5eqsgajsiuaf0n4wydg64nzcu62qhrbmhapretdhrqtdcx1836jhikxokftfwkj7smjewvrtfpyh0k\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Aubrey Bergstrom\",\n    \"languageCode\" : \"0y670eddu9vfrlkn2o0asta1p0v1ucsd8sq0zpmwscd31r6sy3imhe6m3ejmmr530dvnv9tkf2pmw8ucwzgvteuugu4piemdxsty7bztsx32iv59krkkz11xhwq6yxw02ap8gp6o5y4p9fgyfkd3kg1shfgx6sc7jm74nxj808ctmytswl9msy9zwzqitkg2tuqr6\",\n    \"supportSource\" : false\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Thora Kozey\",\n    \"languageCode\" : \"q05vadgylboh8\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : false,\n    \"displayName\" : \"Betty Beatty\",\n    \"languageCode\" : \"elrm8blxm2xdu475imci9ob10f323dvt6xs0swqp5seicnn5fslpb6yrxyqeb8y5dpgl4l2mtkfob7sm1kwyr6fgwgqtmp8\",\n    \"supportSource\" : true\n  }, {\n    \"supportTarget\" : true,\n    \"displayName\" : \"Weldon Hermann\",\n    \"languageCode\" : \"5w1pr3w3rfbw4xzic0h0\",\n    \"supportSource\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cde5420d-8f86-4585-9222-97e2b98eafee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.850078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.getSupportedLanguages",
          "schema" : {
            "description" : "The response message for discovering supported languages.",
            "properties" : {
              "languages" : {
                "description" : "A list of supported language responses. This list contains an entry for each language the Translation API supports.",
                "items" : {
                  "$ref" : "#/components/schemas/SupportedLanguage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d00b29b2-2f1f-4117-8b00-75cb70e6f021",
    "name" : "Creates a glossary and returns the long-running operation. Returns NOT_FOUND, if...",
    "request" : {
      "urlPath" : "/v3beta1/lasoozwklya69l4j33n3pwwj64rgr52d4dvjm1n17jekeerlwncjcy68wj1rknjglccnq8m46qepsdbrwimtzmgi56l6vtht9b8t27ieblm0lfijaatccaociwuu0fay2qfto745tauxa2fnr946hggent86ncshr1oiy833ltducaux2bd7ogf0f95brhl/glossaries",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Wilfred Robel\",\n  \"error\" : {\n    \"code\" : 1091547193,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Sed quod incidunt. Dolor quis sed. Animi placeat repudiandae quaerat consequatur neque nisi provident. Assumenda ipsa incidunt aliquam ut voluptas. Enim sit tempore nesciunt nostrum eum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d00b29b2-2f1f-4117-8b00-75cb70e6f021",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.849624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8ae79e91-302b-42ed-a873-68a45dd03bb7",
    "name" : "Lists glossaries in a project. Returns NOT_FOUND, if the project doesn't exist.",
    "request" : {
      "urlPath" : "/v3beta1/c9zp3jz67p0rp2koo7mqnblmkhkssyi3maizzzfyoi1nin71e5axuf8sc9zoyidtgerk9ci0hn6lgjeax36b1pksbrexepl6t4r3z2r2efyxzsxk06mzbv1dbartc5c/glossaries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"ocgcfos30dm21lify81d2dzx4ftepz8thx96wu0cc853hl61gjrm1hjvrr8rmtrd66pkm42k87d5kypfcf71vz3nxb6fgqa35nqxqnulhbtspxya\",\n  \"glossaries\" : [ {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/553081\"\n      }\n    },\n    \"entryCount\" : 1313531610,\n    \"submitTime\" : \"2022-12-08T09:28:16.847677Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"bnzk3ytb3dxmjvffpun8r8vuli7957sfrhflueaa5i97nazksdqnw3lrdattoxf85lyo2wpznw5snge92yz0flfypspzzsg7t6\", \"yeig7quhwwg0m8bwcinf22p8fvyb8nr86qiab77fmzigqt9b6jttes7f1sdsv4vwbuw5ylavq3fgdoppm3hus0f53lyy8mcpnjxyws15z9c511zq0ikv\", \"z57p69ny9e42yaghc2swfve7tpu7voiodtftz0q19soep82119m4b930mq7k89gzlfzzk1aa71u5t5dw0bvsabade801onor5nalgqds35f5q1oav\", \"nkdgzjq1nde5uwgbof7aapey1ytih59yre299eyaurydwahq3pl5w5nkszv68ix1d1ak18p707rz68zh51t3jvi03rsy9\" ]\n    },\n    \"name\" : \"Minh Dicki DVM\",\n    \"endTime\" : \"2022-05-10T12:08:16.847791Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"gigbwv9a5smud53u737d3mfkpyt0q38snzo4wtetzz3h29\",\n      \"targetLanguageCode\" : \"equjyxs7vgo1yd9sf9owstkoq36xlxb6qut0f6bvq5szbbz983q70yxw3z74g2exly429\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/020716\"\n      }\n    },\n    \"entryCount\" : 993391844,\n    \"submitTime\" : \"2022-07-07T08:57:16.847936Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"8ej8i4s66syibatslm355w5vag5etylqpfndsr85nzef1zajgcgw8q3lgth1qj7knnlrt6yizen2n4usi619ojhpejzsiuetrijkioh2spb1iq5rbywxu0v\", \"xea6luhdalw1a1q0na7sgi2xwwmd6vrnh5p3vh\", \"kns4var7kok3hh6f9wpxxbffhwb22po0rqnl9rrb1txi8ot2pz4qff871h6zxyncdqzrta\", \"qhv68qzkjdbzc71ay59sgp611\" ]\n    },\n    \"name\" : \"Garnett O'Connell\",\n    \"endTime\" : \"2022-09-06T08:42:16.848031Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"1jwqxa08jbek7hf2nzij8rsk5j2nv0d68j0uhx943xtyxuek0s6dd9yigx7jud2ekuixjt1m0p8t29tjk6wi9iemi68algs4l43wzo874c6d5cfkfbt8ln2p4mg0afwmbz7a0tna79j2wd251orxotz1f4h5r8y3bhphbp8kz65klulpbcynwj61bhv\",\n      \"targetLanguageCode\" : \"v055fxya21m1h6lc9mxawveb8ky2h80idmfzndl17v1eexe8tp62gbk02fuzwki74o3f4jp7f8z6kse31mvjrtgtdorobvseyojad1r0qedicf8jdz9wxcju6\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/341761\"\n      }\n    },\n    \"entryCount\" : 1674432240,\n    \"submitTime\" : \"2022-10-21T12:00:16.848167Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"0puwikco4d82qkg94emngc5qelo3\", \"833zmu5fnlavco3zo103nqlvficnuqomzedtwk785l6y03ns4g8822drm3bs3knzdpob7dn9zhr3qydci9rkiit44\", \"k2nddjk3g1kfg5klaa3nrik5hwwttm4we9c1pgcopyocmss2725f5nfsv8gk8a6cggpc3zgfyher3xlza6vufcd9w3hpkejzo0c51jg9by3mvxerhoktoogayz234biuv9g4ys7a0ldgt79790c9\", \"s9oqupe2jek1kar5awjlak6dur686ewnxsqj5z5myga2zo0nu5x465mmo59p4hxgiglozkqstoz4o2bspkmt8ep7dv8usmaz7g5dyv42ldik93wu0te4ppg\", \"61nn3h8jfjid1kboigdajc2lr6pgs315hp6f0urwuxh6kcfudgrxetebdyomx1ppoodmcl3u1jarwe1w8wfltnvqao7vkthme6o5sdzmgtfp0vkl5pyvijvwkn8qm853egmnr30vi8irwjo8u0ae88qqwlxwmdvup89853\", \"qdcohuhsvbsdm1rtaijfncdzftejv3ip2pyom537s2r5y9n3g3e9hdy401dhb33lvg7lejoiu4vif1yr9tnxccv217ymm51\", \"i6dqn6a39125ruof7v1c4b1t9b4pvl5b7sqeskvpo3o6tme5oqlem3pb43n9544y6e5f58ikb6111lumi5if8s4p4bgg40nxkvc1c6mli9najoxo9gjmdozl2s3zm9eg\" ]\n    },\n    \"name\" : \"Ms. Bill Monahan\",\n    \"endTime\" : \"2023-02-14T09:26:16.848281Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"z7a0h7suyf0v4vf4zjngubh8zllds3irfv9iehgvm80cnpg1v5l4zbrwyyxa7llhs9g\",\n      \"targetLanguageCode\" : \"mzk3cs12c7qgee1iq4y8yz6zwl8a000gwww6kpvis3ltd76bfzwl2h4vh85wcwq7aqpcx9t8i\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/753670\"\n      }\n    },\n    \"entryCount\" : 974143302,\n    \"submitTime\" : \"2022-12-29T11:30:16.848417Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"v9gtbfdh385n5iqfkevwlmo1wn2y5\", \"wzikxv3evadmafmotjavoj2yn7fhzutpie65rizogqz8ho22e8m9ljeuplg5btlx3q6t3z2jkdfful7pgtp5sr801h80yhfkel3qjswpcr8vly4ld3q7b5ng6awhpzsm8u9hhrx4\" ]\n    },\n    \"name\" : \"Jarred Hartmann DDS\",\n    \"endTime\" : \"2022-11-09T11:52:16.848503Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"izp9y92n4crou2tnff9e62yk1vsfbaxx969dtwje9j2zrtire3deq4e9o4tyxsvvwhqtjt6arr7opfnxajjfm5i5mcm1jb4erdyh7f8nup1duo09p9r3fxncbxe7gmaknyzlebl53lkw72p\",\n      \"targetLanguageCode\" : \"mupi1znw1sxr50kmcvfztuhl91kz7z3vpgj7cen0l7ux7f2l9visdulczoqr059mgjc6qkjfn7iu6acafa13zzabwvtqbqhqafbtpuer4lmzfmnpqci6zmc58qnj5xfao4deo7d9ba19wae0f5rbqu44ag6jfvkr1y7j2rb0h4lnim59e\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/831339\"\n      }\n    },\n    \"entryCount\" : 156921642,\n    \"submitTime\" : \"2022-06-11T10:13:16.848633Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"w3hhs2reb8aa6trwmf7v5m0bd6590wp62w517x51hb1qqyptenqs9og18\", \"vni5t3ujess7iwwtfutacyqxsuw336yusznsdny6sk35b0n0a52semud2fvnq9q6zmnux0v61kgz83jau54gsmoesuelj5cudsw8sjgcr85ayx9iv6kdtmpbpkvl2prc5dhhycmk4gkxb5leh83rut9brrb4rq5z\", \"60ppsr45ne49gctc85969ie4\", \"w51crjdup4sxhox4x5nlwq058ef08s46t0q54n2ewrvri25jn8225ik5ya2q2a7t8w9t17tuutjdskabh84g42xa205ixdjqq0fq0t0iwm9g8aboz0tn3sn2qyn8zutfv93dom2et39r2z4pzwgg59q0huh1mpmz9\", \"8ruyjeh2i1bjruwiri7j4grok8z7ekfnpvsk0aq12tko1mi1ngbnkvr8ng34l2le3dvbtqj84ital3c94a86vkprhthhgakcq310wtpv3a4cg8pqhjopmnu7flobvmgxufgi003p9wfjdu1slmoo4f8ptarmqga56g\" ]\n    },\n    \"name\" : \"Rob Moen\",\n    \"endTime\" : \"2022-10-06T08:50:16.848731Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"6lot206pwq52ehzyqah4ggfvde6pkv63qwky2llm80y22zak58qhm0wqcmjwbbcmgfa57toob3jl8dg1nl58r93kzyfpio61\",\n      \"targetLanguageCode\" : \"ywegkfzbcfcx39k7gtbidk8c2x464tq750e0y2t96e2bvevw4crpkawu96r9dksp7w4iwv4g0q70rr1as1k3x7dva1zpgsj4n3bj8a73xrjg3766t8g3yaq6pcbayl3mandxnwfnaotvqrvvyhn2gwbk9mt95wpgje8yy0icib2aemz2o4ztgbw9\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/423700\"\n      }\n    },\n    \"entryCount\" : 1295613838,\n    \"submitTime\" : \"2022-11-12T11:29:16.848863Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"7sesu4vkidqigb3b68453vz0qmngfwmxktmccihqq2kktovxdyfwmiip139jec8ud9l2qzrg4bi8jbsxeuguz9chquk21odyidkxwm4731ovvd3qsqe37464z7itj11k40qqviuib\", \"hru0ehkh6vktcs4oaqqw5zn0y1s41tamxkkxqam6r41p8t5y1acp28xvnj93fxzx8vfa18odss7vh17etycsxl9m139k3hbpl2xz0sbq1xa86ofee4y3gxkqd5djuzzdyowfq6vlqyuighksfjqgih1dwav8rg7el5ra3lndvn\", \"m2c8qht9kigrx14ghfdna079sd9u0s7xe39dfy71zgpw6io2a0kihd1ws1d6nu00cx6r8vv8yg1dbzvzncu2g3fo9f\", \"ukkzog4zr7o38xo44qzdm2vuu02s9wgm4uifc7tn0vc1wa6llpwelwfjh9jgiw1mt6jbjdhruqrmeayoczlh1j2iyftdglpwfgh1d9nmdk1wtdc39pm451jzzd5ovn1o0jm2dgt1wg6e603a0frou0rpvxxqkfd42013zg0otv3gnug65wtezguhp9vpqkodbrye\", \"149gcfxzi1ecvqymt7ajzfqrkvyyn7swppl0hds3fwzibb8alkfh0v390yaft77euz7aec8gapjyg645k7k75mzcn5c45q6mb\", \"mn4eyq6uh37lr4su9hz6nfa58k33eobhvjustb8drskehrh4nodifsvnvftdljgimf\", \"daxld4xmzb\" ]\n    },\n    \"name\" : \"Kareem Morar\",\n    \"endTime\" : \"2022-08-27T10:22:16.848975Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"v6ab98uv2fw3zk8dw8lhxay5ol5qh6n2qa5duc7u29biwh95ob7m8nk23n1tew4vj2x2gi8d8xu6lljqrxcp\",\n      \"targetLanguageCode\" : \"sciqsnrea3z80y6\"\n    }\n  }, {\n    \"inputConfig\" : {\n      \"gcsSource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/845819\"\n      }\n    },\n    \"entryCount\" : 1365760428,\n    \"submitTime\" : \"2022-10-04T08:53:16.849099Z\",\n    \"languageCodesSet\" : {\n      \"languageCodes\" : [ \"xnlz9xrxep4acq59vpw9wqwhs3o906ljmsnhkrasuoit1541c2o2no9ms0okqudpblmmumqzqefhc2t9cicdtmww03g2mtsin34b8fiusdcmf9cvzf09pmqdly1e\", \"a1s0bxs69icbz23w9z47v6obb15egazlyhnbiurcx7o1ht3t1b72ur1a8a6a\", \"zkd2zo8bygt407c4e5mhhh9bb1d31lbvg94qfuvvdwl2jm2j86908lsawnunos67hf886wwg52v8aq24vfza4332wa2w1a19g8dc8r1ahv6guz5lgozpe702dmxx2g3fryi6f54ghqr842lt6o1n6dtrpegj59eptib6pwjiqp5e5uj\", \"xud8xyi3hfmgzofr30feh579dyv6vwb7ediz80x0cemy9uwo31fhl9uk27hlo04f7lbq233y02guyyonqhiyxgttu8jnf90i818t\", \"l5w788yy9ezr8a10pgqbpui7j6hnd65h79t4i1jmbxl9fhkofcyrhq5txwx7u6jh9vdv5sdre753r2izy\", \"wft9lx75wh5bg4wih8zyqu2t0kx503213rjpw33zippcb8ywtabwqpbmpggbl9h9i7ouzoa9p20s7i58z9qhmf1mwa1d9xwgp6493yhryzgu9w0ort9fr6awrfwxt2muwhk9zmg1b1wzw9xx6nanrw4zgu6olvic2nfr8\", \"zuzrjlv9qq971p5ubtsp34i7741ulhd5wckr4sqlkbxh14qynwrhfvidktcbovgxnpvp0xn2kh8bk1r7ro3isb6m25hutqswm6o5zgf\", \"eojg0mt9uu8z7dtv2dfse8uhwp9uy7grroa7r2qfehhodky8wy6e6h30fh458n65i62k9sgcovsy7mvwtm1m4aav52zctlsfiaka79patwhf3c62xf3yff7ucwjg8hkabcnppxy7r816iaxc0702sd6530kzhlf\" ]\n    },\n    \"name\" : \"Barney Walsh Jr.\",\n    \"endTime\" : \"2022-03-27T10:30:16.849216Z\",\n    \"languagePair\" : {\n      \"sourceLanguageCode\" : \"3ur8od11o\",\n      \"targetLanguageCode\" : \"tk8ie7gxl9dalhot09o1n4a026qtij8pdksmkbbmw2es2v2isnr0qlvwjae8u8bos0uhutevcnjdp80lfefmsixvn51noid6jrs0gyl8tcktd8388folw3h8a6i0z5eobupqn8zxz2ajbfvtzpa7erb3o9xc10q1iwe9rc97esw7eg06w0uks0usqz\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ae79e91-302b-42ed-a873-68a45dd03bb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.84939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.glossaries.list",
          "schema" : {
            "description" : "Response message for ListGlossaries.",
            "properties" : {
              "glossaries" : {
                "description" : "The list of glossaries for a project.",
                "items" : {
                  "$ref" : "#/components/schemas/Glossary"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve a page of results. Pass this value in the [ListGlossariesRequest.page_token] field in the subsequent call to `ListGlossaries` method to retrieve the next page of results.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "3d055f61-a027-445e-92f8-5e0fe48a625a",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v3beta1/Alica+Heidenreich+Sr.:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jonas Sanford\",\n  \"error\" : {\n    \"code\" : 2126913238,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Ducimus explicabo est qui iusto dolor est velit. Debitis et excepturi est aut pariatur. Rerum numquam quibusdam soluta consequatur.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d055f61-a027-445e-92f8-5e0fe48a625a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.847512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "f57cc255-e89d-45f8-9f07-0fe2c5a1364d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v3beta1/Miss+Alden+Kilback:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f57cc255-e89d-45f8-9f07-0fe2c5a1364d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.847296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "d95cc5b1-5c21-488d-bbdc-adf22724854e",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v3beta1/Dr.+Shameka+Hettinger/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sanda Corwin\",\n    \"error\" : {\n      \"code\" : 1744373055,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Doloribus dolorum veniam aspernatur voluptate rerum fuga soluta. Nihil maxime voluptatem. Officiis quo est corporis numquam dicta. Itaque soluta illo similique fugiat quo.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Giovanni Stroman\",\n    \"error\" : {\n      \"code\" : 1147439664,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem cumque beatae. In provident ipsam. Ea libero consequuntur corporis porro minima et consectetur. Dolor et quia velit.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"60z4izcn0q2gabblhdmmqfts2fvcj0dmt7oiylj1jwfdf9j81ylnmg3mgyklzinlftbsbns8xtun67bg9uc6ket6o2ewf5vzn5me9f8ez5mxj8k9qflrythglz7i2t9oxjirz28l4t536xkb3rplrx1wfivm24x46ovbr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d95cc5b1-5c21-488d-bbdc-adf22724854e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.847214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "c436ed5c-15ca-4667-97ce-2aa6872e50ef",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v3beta1/Gladis+Schaden/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"q78syat9kc10v19zvlg367j8wdl687amjx0gm7k2xkjmkqxepnj5481p9f3kcbtolv3d4mbtctl2nz4op6b1mmcbzsmm5dmot5cdjzofm7fim3wx57bzgf929r3ers18mikxxycjqx4ssibachbra9ipsd1a5se20\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Lorrine Hand\",\n    \"locationId\" : \"h532\",\n    \"name\" : \"Vance Hayes DVM\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tilda Strosin\",\n    \"locationId\" : \"k0vl\",\n    \"name\" : \"Aja Hamill Sr.\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c436ed5c-15ca-4667-97ce-2aa6872e50ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.846863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "db6f63ba-1728-4138-b68f-33cc2e8c7152",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v3beta1/Dr.+Noel+Senger",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Rebekah Wolff\",\n  \"error\" : {\n    \"code\" : 1916196486,\n    \"details\" : [ { } ],\n    \"message\" : \"Aut possimus iure laboriosam. Qui nihil iusto similique ea voluptas odit nam. Molestias doloremque architecto dolores minus dolor provident minus.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db6f63ba-1728-4138-b68f-33cc2e8c7152",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.846336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "549d83df-7809-435b-ae3b-cd1d8ea805ba",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v3beta1/Georgina+Vandervort",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "549d83df-7809-435b-ae3b-cd1d8ea805ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:16.845989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "translate.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  } ]
}