{
  "mappings" : [ {
    "id" : "2206dde6-6d93-48ee-a93f-f835d6f1aa96",
    "name" : "Adds one or more messages to the topic. Returns `NOT_FOUND` if the topic does no...",
    "request" : {
      "urlPath" : "/v1beta2/jk996b8q09nu6yd4jep2hbzlrs19k3y3atsthv84yp6a9nlivk1vtm0cyxcjz8wf5xddb2knb46uslx9rjdq6bu7xcpf0jivmw6p1gj9i7aggbmh9ijg5o:publish",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"messageIds\" : [ \"h8pc8tsf8pxjdsjd1zwp7pn8eh2jc28g6w985hbxfhxpci7co9s8y2ojwamb20n19l1f4lzhl7u7ehtu0u2wm5k2ffyhxt6g6z7y1x88jpaiwhavgrgey6khst\", \"c3qi04b2i6zwi9u6shktuibth9sdl4sk4vm7oo9lmgwy8iqs80gpfeaa41lglh8bcmznjg9yaiasa331owmzx\", \"u0l8f4n6md99pjrl0g6q69ff0nj9dfc17evnft2c74i2ymdo5yp16ttil49d6f2gg4lrz8c26dvf458oopisk4cs2oaiqlnehmyh8wqk6p4hru8l8mcuwry4eix0qb3f67yld38avi2rky4sb4n172\", \"sl067rsopipcafkov1om46i2niyv680rppl674dtno2fudyh4ths1gqbjgp16cwgjnbgqw5nbwcxn3t1x2qe7bg4vkpztxff7vnmhaersrqg1pk3kfmfkqkl88xdrr02nuounyulwydqwplc38lbdde98u90r78yx2j8x6qt3oc2r\", \"f7u9466oz1vaixeltdet0407cuvc4f5w28le5v5tu5n4o7zye7wrf1kglio3v8pclkgkrhviamxty8m0x28y916nxse\", \"wa91h16kpkh7wvnfy0jplh9n3n6wbvcqh6v650mvo1xe21pzjqvlgtbtb5b54sjuccwdohi3a5lu6pvskwfl4zl10tmvarxi4fs319pcixgg3qy7x30dvne01xrz5juivicbgfoeqwwqmpp1ue3q3fw2crfw6ix2bmimmpqpw2g0dddsyg2grh72j6g7o1mywg3rdck\", \"5q40z9k2phe5anlggrh9o2um29lrxmqarvtfcdvtyfcqus3n989pee0xcf1qkfm81thhk1swyie797s20bbvbkqdc9nfvwl9mrtfo7s37rx5a74uwsup1twz2d83n4ayh\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2206dde6-6d93-48ee-a93f-f835d6f1aa96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818784Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.publish",
          "schema" : {
            "description" : "Response for the `Publish` method.",
            "properties" : {
              "messageIds" : {
                "description" : "The server-assigned ID of each published message, in the same order as the messages in the request. IDs are guaranteed to be unique within the topic.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6789f6d5-2d8e-4e59-abed-d35df2c404cb",
    "name" : "Lists the name of the subscriptions for this topic.",
    "request" : {
      "urlPath" : "/v1beta2/8n6nb4skszf5894kelxw4pyi15kk9tp9qudb2bf9mmnp6vg1s4b7rs2fou72fpm082qixi1b9jzyoi0xrrtzjk03h3hmo0hpxk3ttxn6hlaysts3vwwd6e2zg/subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ \"aazhlkxfw8uzln5gjwopxst53bwjl8dqn7gm29wxbyipmubf3o5g0jrtikzcnvdv5sm96lq7f0cmfd1ixyh1x5ai9s1wjxrekk5c5hwd5iwkzag6pu4ybl7hvro966b0r4wx35lip6ydcorewftkue1kdwejax2z\", \"ja17\", \"604m0x1jgapnw8ohxp7fnn2je8mghxn5vr6\", \"rl46xu19zz4885b9rxqaa65cix71s9aeblspdftnkus56ks5emboyausys4ki11gdksru2gu3ygseaal0pecye40atvzuqeug3m1dfmplafz67rsdmoaqdfha1g0q85ncqasnzc5tzmckzxid4z55lkjj890j7f0hx52aw4css851enw9gfbwad0s\", \"1sv0xpegs79cqh0883z6tt6m34oj\", \"w7xyw5hdbcbt75ilt9l327\", \"gpqjkdzl8reapqfjfndpcaexmduxuxk9s\", \"tfx9l25ad1f0yoc74m81iad2yu4vj3j39846i5rhyn1juzx0zdp7xle5v1p1x8i7k20qs07dswydrk32v04x2hi7m5as6dh9ve8jlzvuu4z6dl025b2jlww7o9egpgwr58s\" ],\n  \"nextPageToken\" : \"whbrmobwwbg7wfa5wdhw4nlqfo5ti44metq0xzhrzvjrv7tr9ye2o7r2gzv8edu39acgiv3gw3eexpks5ylxv7m07s0cglzhjmc3dvct1t24u1s70m1oz961exzlitnea40wj0lzg3pmzy8zor2wse41ug\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6789f6d5-2d8e-4e59-abed-d35df2c404cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.subscriptions.list",
          "schema" : {
            "description" : "Response for the `ListTopicSubscriptions` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If not empty, indicates that there may be more subscriptions that match the request; this value should be passed in a new `ListTopicSubscriptionsRequest` to get more subscriptions.",
                "type" : "string"
              },
              "subscriptions" : {
                "description" : "The names of the subscriptions that match the request.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "c3f3924b-14e4-4773-9a13-1f5550f84ee1",
    "name" : "Gets the configuration of a topic.",
    "request" : {
      "urlPath" : "/v1beta2/hggdqrs12ips1ih90pdeesj8pdqdq8kadqwsehmzghkl0bewt7ef04jcn9pjloyol2b3r6phfazqjsiyq",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Cornelius Weissnat\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3f3924b-14e4-4773-9a13-1f5550f84ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.get",
          "schema" : {
            "description" : "A topic resource.",
            "properties" : {
              "name" : {
                "description" : "The name of the topic. It must have the format `\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `\"goog\"`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "e6b46cb7-ba39-4e40-9a3a-711401e2e971",
    "name" : "Deletes the topic with the given name. Returns `NOT_FOUND` if the topic does not...",
    "request" : {
      "urlPath" : "/v1beta2/0p18e3o6kqzujeebc1axpnu3e2lw1sjde46rmmnq3r6li1bvaxrvgijgrxzblegl8voq9mzsf182slkopafwri2z3b6e6wc5lww96oninzo0p540d5gfq1sm83d4g4z52tm54fvmou",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6b46cb7-ba39-4e40-9a3a-711401e2e971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.81845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "eaad1552-a07c-460b-8d09-b3cbd44f9d00",
    "name" : "Pulls messages from the server. Returns an empty list if there are no messages a...",
    "request" : {
      "urlPath" : "/v1beta2/rojm3fy478g5x7mbwumxmbwh9vd7x8rcv6dke7joehyrl1c8flypkhj3tzivwfp5rb007g9yr1qq01yf9pdrsrel0la9epv7vrx8s7l99e8s03655dghzk9r2p41:pull",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"receivedMessages\" : [ {\n    \"ackId\" : \"5956\",\n    \"message\" : {\n      \"publishTime\" : \"2023-01-02T11:21:49.818252Z\",\n      \"data\" : \"jrpc20k341nqbvxo1lrembfigp9obicvrwio9nonvxt7b4y4ag0we1uem8p0ju9jem3lgsmlp87u88p2469112nqykyj4jnoj5uzw7pbjhx38oqfyf7ob01xks22gqp\",\n      \"messageId\" : \"rxux\",\n      \"attributes\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eaad1552-a07c-460b-8d09-b3cbd44f9d00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.pull",
          "schema" : {
            "description" : "Response for the `Pull` method.",
            "properties" : {
              "receivedMessages" : {
                "description" : "Received Pub/Sub messages. The Pub/Sub system will return zero messages if there are no more available in the backlog. The Pub/Sub system may return fewer than the `maxMessages` requested even if there are more messages available in the backlog.",
                "items" : {
                  "$ref" : "#/components/schemas/ReceivedMessage"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ab808eea-e3d0-4d0a-ad8e-d4e304e8df24",
    "name" : "Modifies the `PushConfig` for a specified subscription. This may be used to chan...",
    "request" : {
      "urlPath" : "/v1beta2/f47ie1prcwb5m82giffegoptay235c466iny2ei2v1r3n1dpqq5d4dd8kt595d06gjkhr79et9ka3qzivu2ynah904hxpz61svdopmwirpnlgim80idsd4n8pgwol3m4z4fqc4a5d7b1j7xs5ar76nqmomrihdgd4sqwshnxpt99c38cb7v:modifyPushConfig",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab808eea-e3d0-4d0a-ad8e-d4e304e8df24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.modifyPushConfig",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1018d2d0-a523-48e9-b105-0c348dfa7604",
    "name" : "Modifies the ack deadline for a specific message. This method is useful to indic...",
    "request" : {
      "urlPath" : "/v1beta2/ev3vap46byk5n7qgexirvyp0a74wnygikja7fliuinykl1hcc1tpa7yssxph59y3ctysj4w88z7tj79j2q7iyxi8p0yj92il15ryfaq37l5oq3a536henr7xvcb590ljfy6ujm4lhj2t68glzyp:modifyAckDeadline",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1018d2d0-a523-48e9-b105-0c348dfa7604",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.modifyAckDeadline",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "174351d2-e581-48d2-89bb-aba770325033",
    "name" : "Acknowledges the messages associated with the `ack_ids` in the `AcknowledgeReque...",
    "request" : {
      "urlPath" : "/v1beta2/iy68qmf1qaisxbfaid:acknowledge",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "174351d2-e581-48d2-89bb-aba770325033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.818006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.acknowledge",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d25204d9-1bfa-4176-aff4-b11f53d3b14d",
    "name" : "Gets the configuration details of a subscription.",
    "request" : {
      "urlPath" : "/v1beta2/hsrltrl2962ivbuty4xk8xkvyb1bd3vge1rzj56a5zili3bulo448inwhr84pfhtvkyfmlcglrvy43jgcvvbb3ygzk0qtfb6udb7ujsnhmcl7t9lwqgdlbs7ip6f9s24jzwjjkcbo3w9he9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"pushConfig\" : {\n    \"pushEndpoint\" : \"wiyytu8430efwjjggr9hshcu9sci3uqfm3o3v8u\",\n    \"attributes\" : { },\n    \"oidcToken\" : {\n      \"serviceAccountEmail\" : \"knvdacjqubxni874hhn3kc32wpv6x3ncaur6kqa\",\n      \"audience\" : \"e9p2eg5kc3bdwb4rsignpclog42\"\n    }\n  },\n  \"name\" : \"Sandra Schulist\",\n  \"topic\" : \"mtxly2uhmxcexjeo6sv3m0q0f4067g82kk121stekd2hnexd0jekeqyrq4mbreqinlm428coai534w231k5wp46wym41bt0ysq8ftk1t1efi48ih25631glmvtaf4ou02l23yejic22nz300z\",\n  \"ackDeadlineSeconds\" : 309170637\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d25204d9-1bfa-4176-aff4-b11f53d3b14d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.81796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.get",
          "schema" : {
            "description" : "A subscription resource.",
            "properties" : {
              "ackDeadlineSeconds" : {
                "description" : "This value is the maximum time after a subscriber receives a message before the subscriber should acknowledge the message. After message delivery but before the ack deadline expires and before the message is acknowledged, it is an outstanding message and will not be delivered again during that time (on a best-effort basis). For pull subscriptions, this value is used as the initial value for the ack deadline. To override this value for a given message, call `ModifyAckDeadline` with the corresponding `ack_id` if using pull. The maximum custom deadline you can specify is 600 seconds (10 minutes). For push delivery, this value is also used to set the request timeout for the call to the push endpoint. If the subscriber never acknowledges the message, the Pub/Sub system will eventually redeliver the message. If this parameter is 0, a default value of 10 seconds is used.",
                "format" : "int32",
                "type" : "integer"
              },
              "name" : {
                "description" : "The name of the subscription. It must have the format `\"projects/{project}/subscriptions/{subscription}\"`. `{subscription}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `\"goog\"`.",
                "type" : "string"
              },
              "pushConfig" : {
                "$ref" : "#/components/schemas/PushConfig"
              },
              "topic" : {
                "description" : "The name of the topic from which this subscription is receiving messages. The value of this field will be `_deleted-topic_` if the topic has been deleted.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "dcb1f65e-78ca-4e81-9443-b6ce30a5f07f",
    "name" : "Deletes an existing subscription. All pending messages in the subscription are i...",
    "request" : {
      "urlPath" : "/v1beta2/w9wq8np6uc1qd6y2ps2pgoppnvb7212s3a93jt0ouws82m49c77urjpytewdo36juxaha6ln048wny4l5cph7fz3gjz6xnf9bbii4uzqj",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcb1f65e-78ca-4e81-9443-b6ce30a5f07f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.817768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "3b7492f2-837b-4e6d-a867-0dd4eea014cd",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta2/nlyu8k0t9w8cdq8y93i4fwpa9fs87e7xkc50pxzlwghiwkqze6az0bhqyuctl6wqfxr5qsl2nfgwrtp7kz0g9q0zsbn9quv366t2ywl21bsnilar7xwu49xmge54k2zpri8at6l7r7l2tgxlbod1o7cilb24ibe4a9uxz29jd77mplxqkot22tbm1r64d90kt:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"diq3rtc46p7empf9vupopsy16h2dvzi3i79q3wrsuzma0ly7mme2ix5o2s8q84tr0msu0dispkzxwru686x6km756t57t9064d8sbf7vfue2cg5pysvm630oqwipwyjrh2dr9v2yfvnlqnb18q8l8\", \"go2dies1qoqu48ackds3m381jzabpc2zsrgr0z19bixef9po93t85aaiuec9v277f455mdpbx38wo1w9shuk2s8rfm5fjsthe4s0fp4puw6fsyztngo7hxk630\", \"bmouhnv9x2w996ugbue9hoqugabks3f2uinlv28p17dq32x\", \"ni6ub766waeb6gnsgmkw7pe3vqmdddevi08elbmmkofcpdwow9shak7y0a1aecn8fgri9rkgfgm6sf7yczg7tl7o2zxtciha2pwlgr48i7rgmit80sbwd94b25x7bvk9k0lv66yfvcbz89udblhi16wui2e8szgx7kxeymqr3bt2tyqizxamul8tgouj311\", \"69vcm2b2a91u6jbt65ntdob0c77vlk3x0rp8l69es2sihjmqb38ogdahbyr63t7zg7azxizlh3u82jgizj9ba4d2vika8e7erzt7ttealssu5w71ljvf2pat5xzrhs7rvdy66gemgldcpmdxyp1zxce4fl7hma7eazyw8\", \"232t04eyob4081wti3wigepi16o3e8n1nobkm85p6r6qfnd9s9hq2o79vcmb7xdi0th75e51v9gg7v3r2auky1laaqk9flb6k6a68kxcuwsf8lm6g9gh8to1yw3jqettlk15fnx4bx8vy5mb6n5ul1yqbdo7xyd8g3y723a04\", \"6qircfl0ltm9xvaaw0cmgdqwndmwty7w802pay91t9rkup7apbzswdhzmmxffa9rvluk5gk41chk2s7pub9q7qg3t5rje88fpdyqmhodvnc8xye\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b7492f2-837b-4e6d-a867-0dd4eea014cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.817716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "bc4902b6-a139-455f-8b54-3fb628029696",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta2/0sqibcwr4dvhuk25rn05axpkqapvjssarzk6ak7afdm4mhkgejickg3v67jkbmxqgfy2kgmt1bxxa9zjmfhjyxo3gzg5c1yhjznosmhvfr93m5r66tpci7fx6fsafn2uxc467o518w9wxmkuiqjcu9so2zuvk:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"p9y7bw53vjdrt55j26x65p8n3l3szpl3jzi5q3p7fp9f2coj73jl07e6kjiqnoof8kpqf5rj246r65xnp2wpnjtw0h6icv1d4mzu\",\n      \"description\" : \"Corporis vel asperiores vitae est tempore. Sint nisi iure ipsa et. Eum eum voluptas qui est voluptates architecto. Non ratione dolorem.\",\n      \"location\" : \"1ocz2cv4us2j00yjpeec8om4vni1wfc5wo23h6fepgqcukotd3b6wz71bv13he4li0bwcm6wghx4y7bc8udjjx557mih9\",\n      \"title\" : \"Amet nostrum sequi incidunt.\"\n    },\n    \"role\" : \"5mgakb9q0v84pofoflejda9e90ex9sx\",\n    \"members\" : [ \"fmmhit91u5g0kfs2jocbx0y49edzdtmdj8k7rmuj\", \"gc96t0tbbg8357rjburn792o0edskedv1w7d0sqqntzlus1ezdtquk96o4ktmjlnq7tn51438xgb1q9c6cgkpgvgjrf63zscgwzd7j67ylxb5a5eor5w7zyn6s894j772q8wy84y7zfs4rbj4i47c0k3sdgg2mxox\", \"nlhp3ls9h09ethhfq2h3aztlet18wy5x7y89yg5mlnnspjgtkoha5gkmqiju3fp3myv72phbpaqywsa89uwu76pxjcci2yvk302m358wsknhsxxcncd30h3ad3dp133or0rclbq6j9elamk5q71bwputdvu64da3pqgpktfnx6yt7bfz128jf9e\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"olr4oof5hmidwlm4d667kghiwvxtmhx6ebblhaiacq4wsn8r73dl70ynyq573ajmfm9uvub1yk7tvgx9fikm1wso2lbgcguaiv3sezmdsp9wrj3p3ptq2c4gvxfdlzyqkynqrvd22dvpme9\",\n      \"description\" : \"Delectus repudiandae dolores accusamus quo. Voluptatem natus aut numquam in excepturi. Assumenda veritatis consequatur suscipit aut molestiae occaecati sequi.\",\n      \"location\" : \"sr65r2z86iyt6glh8wv9f6immrdq9mo5oow7t4eeeaogwrtowxf6n83idfcl2afzyi40b0i5es606sedx87d1dixyzwvyy3vqwl51sypkeu1ubsjsmz5c9k2yqx7m9tc7jwykxecgfpai04e03f8bpg1w13b5l3ba6uzjwz0gdntcohbzebg\",\n      \"title\" : \"Nemo modi reprehenderit rem alias ut.\"\n    },\n    \"role\" : \"tjeyedw46sqkgyhf2po2gzskrg3hflket65kdd9q0bcjew6h1bdf1wlwb5ef9gnn4r\",\n    \"members\" : [ \"1ovywtflnlnxbazkp06x459zbhcoo17ewryarini9gumfjzegoda7f3hmn3c1do4hlh8p1pryg2pbiskvdjirg5dpkyksxzdnv6f\", \"zroj6fsyrs1bedeza3axz2jnbrmvny93ltbldaivljyrcgyer3b5bylb3oj2vq7a1rz000z7rzh6qu790uzqbtgbhp96jrc2hjhu9aw19eqsxvcnu33mmz88wy6r3gnkj7f6we9psil87xup9nxel1ipu6858h9bs0fggne5aci\", \"dz3dj69g6ootrlrs4bzgztxjoo1ih1vi34y5vuypabk85zd1h3z7um85gj1m3n8qwkz9ppc823q3rahim2mtt9zqdq6xubl87wpxyto192ibodw6zlx85u5sam3aern7bytkhkm9j3gbpyyxw\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"p0itu7d0n1f4ted0xbmkuie8ikv5gfc2m3ih1xus3e93nee53o0rna0ainh835rtu\",\n      \"description\" : \"Perferendis non consectetur illo. Officiis et impedit aliquid doloremque. Et est deleniti quod eaque et sit.\",\n      \"location\" : \"d6u0rqmm1ppr3j8puz3jrbejluy5oiahy59mza6ey0q9eeul7j5ofm61p3dqltrrc7ct8qrq9g1lfvsus1mjl8bi1n7iibe6la7\",\n      \"title\" : \"Eum nobis explicabo accusamus.\"\n    },\n    \"role\" : \"n1h7pagpl6z6mvf7q76sttdy3fetb7vfzrh0xqwnlhzi2ehrn4nrmg9b355x80t0iuet0exore7vp2hekdh3zicch3t0i0wbeism92szdas173g4\",\n    \"members\" : [ \"xma8dayvpg1edk2akby53jqlf7vqjrwp5a4gwijefl3ojeb1muw8gtpocgtu42xzusrw96trowja3904lc19vh0s1u842vqauzo3xaau89l2067xv5\", \"im5no1x7wwljvs0aft74y2ksgllw6n47knh4jycc3qeuhgui9h3315gbdk55qt77qvru5cwmcqirw6amxbsloz8a61rnc7lblskarv1mam2imhs8s3y3c4jxae\", \"yy1drzqasmcfj1y3xzp7c7to89a1k6m9430zyfgba222bn1z7s1cqlt8k2vbpt9cv467r16nhkszuuelnailc67o7p68kl5zitn1gvyo9j17xr9fej89gahwh1vz14805\", \"abbnbg0zc4soxse5qvdpdzsl2u8ei6u\" ]\n  } ],\n  \"etag\" : \"qui\",\n  \"version\" : 872219863\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc4902b6-a139-455f-8b54-3fb628029696",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.817605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "24afba02-84a4-41c9-9a64-e5f3ecc0fb64",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta2/8o7usb10awil2ofn80gcbnfvc0gaty03bp39gj4zcfjou970e7:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"ofqg1j05tmfycrnc8btf36izypix4adqv78aii5nqymtas5u3hir6j9130mej2vlc551rz3qgxdm78lucn0t407z6vsjtnp08cxhrx3zkq34tjbd1cnzp21fezlo5dcnzo4hnmot1q2cqp7quljvibu3gzvxcwzqhjqm85f45k5alqq55a76hpfnnsfh7wjyl6y4jyu\",\n      \"description\" : \"Blanditiis laborum asperiores aut provident perferendis reprehenderit. Ut qui at molestiae deserunt nam. Sit ipsam delectus nisi.\",\n      \"location\" : \"uyjxcb5em3u7u7yh3h9sk0z0v4xkvyud54i9y9gdgojc87t53978x11ay2eg57x7j2cugqy7p7kfas19s7ebrjwii7h7gbbb7pt7gn8xhsy4boimggzxej6fn8jbglg5d1227ebel2tjgdcz9wdheoyhygjyn\",\n      \"title\" : \"Sed eum temporibus vel nesciunt dolor sapiente.\"\n    },\n    \"role\" : \"00hk05b9vrsd427f9949tvqikmmd8q2lqxpyatwp8cm47tth\",\n    \"members\" : [ \"h9amq6ijp7uor1nidtzj2p1tyr1w5tzgfs55u804f0kzvvr\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"pfnzw8b0jhn04ptpkqcdz3p3jyitf1cgwfp7n4insxw4smqyiyvzpx24aeqfowx7rktwgg7nvy8uvkhdbwiss2ft2xbebnnwug0f1ida8kvnfke0agd9rxz60r6m06heu5lk1o4bqznfiqeu7nyy4v23ed7arsrlamlh77sxlkmdu2f3\",\n      \"description\" : \"Quo provident eos. Est consequuntur odit harum quia dolorem. Expedita in est tempore qui illo corrupti animi.\",\n      \"location\" : \"o79t5pwyzwaakwqz8c2kbwa38v5zlx9s4feffrno43h4bdg9uppsoilllnxauuz24dk6ghp7mlqnfzz4\",\n      \"title\" : \"Earum distinctio dolor.\"\n    },\n    \"role\" : \"9oir64yb8jhz2kujgdl142swfwr3xq\",\n    \"members\" : [ \"5pgji3ss8rvluawqkrpatabh8cukzzrh0kkn11wv6qgwb3ymp0g5x\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"yw0jecxonxmw0o94i3g35p3qore0ojld2fyj22t8rw4b7zul1jbwvq50bcoiqrl7339dnn6h\",\n      \"description\" : \"Et sunt laborum impedit. Mollitia officiis voluptates deleniti velit. Eos esse dolorem laboriosam.\",\n      \"location\" : \"uhc7j1jzrqvh0a7daqu247w93gq6p0ftdcqwu65yzlvlztnpfntwmyz7wa1zydti9cilpg05yq2t4msvwj0hf0f8dbscz3q6npdhxbr0zczzx16y4xv3axavj3dru4rlee92cfrccckpwqy60m5yjt40qz715er7gnvik07omp8zjhcggpckiwnwi\",\n      \"title\" : \"Repudiandae rem dolor dolor et consectetur accusamus et.\"\n    },\n    \"role\" : \"ntv9ivk5mgetgbrir8k04eqhjvav67ef6hm1tc9mhh7c07ocxngg3uvcmu1syo2xoxgaou52hnxp95xn9hhcxh1gk8eie5937wxmczysqi6wse7r3r0vow5z9celtbz3p7yqp2uhdg9b0ym4zfkir7e8tujw\",\n    \"members\" : [ \"ceabuvd7qh405o5xx59vquk0ry0ue9ul2ajybey1dj8x6dqcbsnae31ghlpyv3n48ucigvf79p0xxh0oa5m5xovhzno7gaaim1rgdl09pjggdouto07rydfokrqopihrskicvu1fb9kd7i\", \"mud4g4zkza0fqp8w0p1nlqwt4ytocheb7i167i3hgyazyxoed3mls73zm81n4mq1z8xhn6safnt2o0l5zjpn2f1zzxvbwplmw7jy8b7fa0\", \"v7o7ez6gmp44symx60imdkzoj0tuq4kub9rpfr84o56yrp61itmxtcbcrmv1ff1kwph2n1wmjjo78qwaxt8cjpsmrhfl3jz5vncl756givbvl9ab81z0e51g83ynv4mrj91jfu2cm2\", \"hs8lm35v0m1f5izl1deymgca9w2jvle5gloeacn88pn22vs0wyj0591xx82xsmjogyn9fk86h0ig4imc9whks98vojkw9hjabzxtkimkbndt0cutcsc1xtdq6c0s5sy7zqnzipbv2744919n55d1sxsoc7b45k8w2icm0745bjn2kqev8zzlq98w\", \"fb5thniot0xuo52ija9c436ntcaz3fubu4wobbhfc1btxlw0221o43igtud48uemb7\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"olgpr84xs9j08tsjuuztmcokwtto6waqfm03ssozdhjxh7ddsjdpxm8dsrryq6te8nae3tpkp6ww1n9v54bw1rbftnhzntbsn6oqs3bxfqb\",\n      \"description\" : \"Magnam ut incidunt perspiciatis accusantium provident eaque. Praesentium voluptatem repellendus totam enim ipsa. Nam similique non illo voluptatibus. Sed laboriosam modi ut odio corporis.\",\n      \"location\" : \"z0fu0w6l0oh1hm3snucbf0r7k9n469k2oy1qxspdgqvdaaz00imzluxo6qfc2fd\",\n      \"title\" : \"Ex ipsam sint et.\"\n    },\n    \"role\" : \"xuwt9tzu9zstnh2\",\n    \"members\" : [ \"7m2hqea50rwjw2kkq6zt1ieu2ggsb6vfje5mnf9wpynvgb215sdrx0rv5a4ibxcaagvm9fvsh534yd\", \"guz614jb3hwp9gsar54zhkznoxx8didcbkru94595y0uwxcj9ro4lapvp8zr5s266i6cmmk0z0p2oclatya1otllexrooy9a4gsswyq2q6h4jjrmoee5djnmxepdu1iizcplqzs1z1ely4ya4giwddjwcolz4\", \"oda3to0ghdbxcbzd75yki489y6z84emlimsy\", \"bcqu9lv7yb9p1fhgp5g56tlpfmulzmjx12x5ssyptfe4x6spilbns53clcst2pc0u\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1qejfekffn2b6ogcf216woyz4tkhwc288blbrjjpbwbsfqjyq0ezc9dwdg4ey9q75e9e\",\n      \"description\" : \"Cumque qui tenetur. Facere debitis et blanditiis et et. Non voluptate consequatur. Consequatur repudiandae laboriosam voluptas. Ut et blanditiis assumenda eligendi sequi at.\",\n      \"location\" : \"u6ut2jqk28pid7au94qu69h4pxd7sg63bski05ya49xsvq53iaa74qzmyo8wd7bvy0zv0h4sefeqf1o18hw1h3rd1d74dvqb46yvkpmyrfgt8cz8nk9d6arreymn91raovyfxr2s4jtc4yjgd31m9ldnop10ht6omimmjoqvgayo1tr80r\",\n      \"title\" : \"Aut est ipsam perferendis.\"\n    },\n    \"role\" : \"is140qpspm85t9ndg6yx99o31zsb9lbv7yt2oo9a4zt0\",\n    \"members\" : [ \"h5ji518x2kiiqrmnbdxsz1l879xpj\", \"0vw0eujy6mm3b06lz78jdxpuavt5igtbzihjo1q2np2xjzua5950zr7gy5n3h6bqy3b5vepztvo8rcqxaq8xqzig8jx4ykrdx118i829x3vkacep926rlwf4iqqhdb04scnnrfqft4vmlzjbat275k0ma8zp9mgzosla7le6fwppswvzlvg2qf2jmunkz29x0ld\", \"cxueoz9o9r4zxm13t0cgaob2yjha7lrp12725wjluy7nrin68tblffw2r64053nzl8qqgdsw42wgdzhk336uxkbwmfglnchp582f572r9ecvdhtrcb\", \"ck4w8ub5kl116nnwrztfteme36jyv4\", \"qwajsktyb9yu19llsw9vus9hji40paelczg1rtbyh4athmzq6m1ibkfoc90sh362ftdaihfxzgqmvcmsw5dd25ssfutp962phrt9uxbyvv5jji0deidxosgxmpjzhc2pprzmrg0vffg3klfqpjdg1pj67yfyd\" ]\n  } ],\n  \"etag\" : \"velit\",\n  \"version\" : 993994872\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24afba02-84a4-41c9-9a64-e5f3ecc0fb64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.816999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "dd4316a1-ce8d-489a-8a05-66e9805bb8c1",
    "name" : "Lists matching topics.",
    "request" : {
      "urlPath" : "/v1beta2/vao0qwvp74teyuhcg21ad27pp5q7wnttlkhgc/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"j28wuo1jaomiftt6isprbausgq4nwumtjfyr30jkemybz2xhhgpsrhs7udltiy42b56dziddqf\",\n  \"topics\" : [ {\n    \"name\" : \"Houston Rolfson\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd4316a1-ce8d-489a-8a05-66e9805bb8c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.81601Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.list",
          "schema" : {
            "description" : "Response for the `ListTopics` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If not empty, indicates that there may be more topics that match the request; this value should be passed in a new `ListTopicsRequest`.",
                "type" : "string"
              },
              "topics" : {
                "description" : "The resulting topics.",
                "items" : {
                  "$ref" : "#/components/schemas/Topic"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "9ee44790-6d4a-4906-996b-b5b94463cd85",
    "name" : "Lists matching subscriptions.",
    "request" : {
      "urlPath" : "/v1beta2/dkbcy80oe0rgfd3ca7ap5mdd/subscriptions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subscriptions\" : [ {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"ardq06x372g9eyazkvjchkun2oa1e1taymvdik1uq25icfnlj59xprb3q4tbtzyaxkj8h5l4senjdz18q3ufcqhxvd84021d1gyql0b7hd84b7elpee66rd6a\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"qaihg1wsa77h1eolt85hj6v1ui2k0dvl2jby4t\",\n        \"audience\" : \"8xqe6xs0rgu0dyt7ooz91vehool7ikkkfvwbnt02810r4yzfo83msebtr6nkvl0uajf0s72clha4f9dip585sf\"\n      }\n    },\n    \"name\" : \"Gilma Batz\",\n    \"topic\" : \"nqxm3v7v10591qk\",\n    \"ackDeadlineSeconds\" : 1080799057\n  }, {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"7fj2gbtwfye4hzbdnzhchucbvqn8lajfyl7iux1h\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"u5ucuqhu5zr85b1o3xabipghc99776vru6k0pbyxopfjg39jg7tusl9dy5kiroa4demrfadffxjra7sfvv5bl3efb0e33dycnjiuh0h9mpcjqy6w6urxybn3ijvz4yzbdk78ingnpahftisermng3y0cf0i1uq1s9kids7sp9wng\",\n        \"audience\" : \"k7bhjhru4b8szxgwqfzygxjonodi07lihpu0vej8e\"\n      }\n    },\n    \"name\" : \"Mrs. Margeret Hand\",\n    \"topic\" : \"libwyea2u621xxglu6uwf2hiuz5u6mm6llccbwox75u2lq7pyvhlx9y09vm3pz9r014n8d5ls2arzg74hv00mdpcafxuvn2pi23t9l2j6al5lbvxd1v7cb49imyzr9izcc9ruxp7h38y5dv62j4oxat1gy0yvm4iy\",\n    \"ackDeadlineSeconds\" : 1125219449\n  }, {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"sy2rv24my90ve7afhwybxwoyt7uc3ty1o232j252hb5onc35nrv2kffxb07xmr2b1plra5fkfbf9alvpb0yiezcrhkrjvzeiuyezivxjvlyqsx8bv0jr87pvrkebrpq5xe0ujn4zo8je8m3sivy9u9ws6n55wlt0tvmnengs4w1yjmk6on0\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"g0duy01f8702hc4qyrxvial6mohuthslm76c8cb04wwuhijydyutwb9\",\n        \"audience\" : \"9cm86ippwkx8eybur3ol9n3x3znfipz6i5tnilukd67p55ipyeh8xzty\"\n      }\n    },\n    \"name\" : \"Zada Sawayn DVM\",\n    \"topic\" : \"6924miqnb2xavge0cw69k8mqwafwz7f3rql5bgdh6641fqojv41fncromg3a371b0i0exsibcdme6bhom0x0dkhgq45b0h4br3dcwltjuedl673cibxkm4x\",\n    \"ackDeadlineSeconds\" : 1369896097\n  }, {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"skuidut65s97uz4ryaa63fw8ua\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"6dvxfl6g33zrscmcf32778hyx20yux1dq02zhmb73u2bopnknm7weww70copqn23bomsmvw76d1z2c99rwtrrccqz62jy9uwh9du8u96jiaote97a\",\n        \"audience\" : \"9tnzqzegcdetyou9xfl80gijeuq2hog4ksix0gdfw5uo3y\"\n      }\n    },\n    \"name\" : \"Grant Spinka\",\n    \"topic\" : \"tkkf03gv3ug4tq0ttc7vwwtvtj8g2dtgyxxjh8x2sw35axkypvwyhv5r80lmiveww33zsepxb1fbv2c9stccr6yuv6di05df95qr9iw8\",\n    \"ackDeadlineSeconds\" : 592466841\n  }, {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"b4c1s6lo7j8y3cr3zzkq34t87t0vr12276jqd5lcwrqyzfmdrnmliakonrfpcrxca1skf77dwpckqyfh5nwftkucxykj5ru3z1le6ir482drjrfbz9\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"rzok5t2oor4snhep35evfiwuajst82zl6ge72tr1f2y3ybevbweqjl3uywq\",\n        \"audience\" : \"e0pi0t4jz5tm41xdjd83631j83iwxs9f7qlq13s7wn91krtno1bbfeanzugqncgtla4qu4ajm6tsh\"\n      }\n    },\n    \"name\" : \"Abel Douglas\",\n    \"topic\" : \"0veo5c346rlvyjb1a4jhg2cj0s11zjyw0av6qvdejt6lq5dg77jbpy1lrvh1st8popypn5ew0rxswf2keflrwvp7cqk00ca8zw5w0dn4qz3kjhyffmn2c49mwsoizgogbcejupe8l7\",\n    \"ackDeadlineSeconds\" : 477424331\n  }, {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"mq5m3j22yta9ai279hdgphlhvqagy3xsfndc4itr4llz0rbn0gtpamlpgqa4dcrd1pfuyznfo77h6qf23se9y3a9594qa7r41q4keur1bpdkqd3p9jobfxoq2fznvn14merekbvl8naglj0jar9izrz3gnffc81hk68s8b6srmflu\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"6wz55d48438kq4fpk79cxuhnw33kkug80gp527\",\n        \"audience\" : \"lx419ofqbje2l30l9ol504p2uf2g3hg1ckqa9qxdw8gxshfhre9qe6t4upedolu\"\n      }\n    },\n    \"name\" : \"Louie Baumbach\",\n    \"topic\" : \"e02ma4rrzoxdelolt9e45qlgnd6c1iebswl9w3gmoy2o4pi890xcumj0y89zrg91b7xra0nv24mny3ztfvfxu94j8hbz83cnlc34gun1xllm3j3lf79nhrt5tf35xqhp0wys8dat1i6xyyabp8eemknn28v2u97c77a78u32jj2\",\n    \"ackDeadlineSeconds\" : 976679083\n  }, {\n    \"pushConfig\" : {\n      \"pushEndpoint\" : \"fqgwg6svun6wtfhyxnwp2ec4ryssbsxluuqzk959l6l69x54i09ydunv2nwix5y161bc8gcamesfmg7fkm3w30i7zq6obbyz13rbh6cu7dikq3rtpphi4zk0xn984l3qqk1tyv09753cu3lznpo0\",\n      \"attributes\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"jr4a1letnk505nuchxkuia2f7nkmitilfif13cofqurrxpfb2se59532rl3se6yf1vb989rwzxgxze3axt0z40q2b5azcgm\",\n        \"audience\" : \"qbqzlor4j8jgihiy9u35r7sde47dykcsjaov1b260vkydzputkqskxcr47tzsdedokl\"\n      }\n    },\n    \"name\" : \"Leopoldo Grant\",\n    \"topic\" : \"hih7gypr504rgh57xm08lsyqh19hy3tkid\",\n    \"ackDeadlineSeconds\" : 2005963263\n  } ],\n  \"nextPageToken\" : \"5dk9igd7557kw3bw1jmrloyqd01rcxtjhqhqv9jnetb7gsz3qil167z737ucndnlgd70tqd7x1efc7sxlf8n3jq4jtgxw7cb3kaeeibtbh3hiq2kwx6y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ee44790-6d4a-4906-996b-b5b94463cd85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.815845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.subscriptions.list",
          "schema" : {
            "description" : "Response for the `ListSubscriptions` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If not empty, indicates that there may be more subscriptions that match the request; this value should be passed in a new `ListSubscriptionsRequest` to get more subscriptions.",
                "type" : "string"
              },
              "subscriptions" : {
                "description" : "The subscriptions that match the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Subscription"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "eb062a2b-9ea1-4507-887b-f00e67cd1886",
    "name" : "Creates the given topic with the given name.",
    "request" : {
      "urlPath" : "/v1beta2/Dwain+Kiehn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Alexandra Moore\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb062a2b-9ea1-4507-887b-f00e67cd1886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:49.814754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pubsub.projects.topics.create",
          "schema" : {
            "description" : "A topic resource.",
            "properties" : {
              "name" : {
                "description" : "The name of the topic. It must have the format `\"projects/{project}/topics/{topic}\"`. `{topic}` must start with a letter, and contain only letters (`[A-Za-z]`), numbers (`[0-9]`), dashes (`-`), underscores (`_`), periods (`.`), tildes (`~`), plus (`+`) or percent signs (`%`). It must be between 3 and 255 characters in length, and it must not start with `\"goog\"`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  } ]
}