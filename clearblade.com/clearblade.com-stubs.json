{
  "mappings" : [ {
    "id" : "88474071-1bf5-3e54-87bf-9004e117083b",
    "name" : "DEVELOPER - Delete code service - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/t0923er7xvw12qdkvbxt1cyq6719sff0fsi4am8nia6wnjg5005rufjfkfpmqf9b86lgnolakj8n8g537otj4a2tmje4ada52aro2d4lifdusvchotx0ahgtec4xr83dnkabg7rviiexra0cvlli0ghai50ka40nprspo8ip279/Celine+Kuhlman",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "88474071-1bf5-3e54-87bf-9004e117083b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0bf9bcfb-7701-32b2-b5d5-eba382aca03b",
    "name" : "DEVELOPER - Delete code service - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/1ehxckl9nrerh4qk5d1cjgo8mfq6r3mmgqgncx92hgeg8y4wbkw3756w10wgtl9mrrfd7i6ruef66t95j2s8kckujg8dcah55vxmq8ajslsf6pqb8qp3chyiqrnwv7qjqreiwrbfu9xtp3gaio0us1kfbxsqjn0wqw3efimv46nz3ret5wkr/Mrs.+Oren+Anderson",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0bf9bcfb-7701-32b2-b5d5-eba382aca03b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteService"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "ef7e37db-99b2-3036-b13c-954fb3f67a01",
    "name" : "DEVELOPER - Add code service - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/3oj8asw2vbta1c8ls8h8ugshf8gyj6qnhn80hwh58ntzo93wvaf21tvsyadmqpeonovchpdpa70rdzpkt08kqopm817kdw3ye8nii7b35birj0hj9yx07uzgxeho435g02a73v2qhaicsbl539lw/Ambrose+Waelchi+V",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ef7e37db-99b2-3036-b13c-954fb3f67a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddService"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f4808278-e4ca-3dd0-af52-ad42f68c26c8",
    "name" : "DEVELOPER - Add code service - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/gmrdr09skfu1b7p4d33ebpvkss0ww8mb8313rvm34dxmvll9yc76wvtupp1a5hrhnhd9ezy5naypypbasor06was7arewkcpkk2n06rtxxic9lldpc6j0qcn20mxwmam/Minh+Renner",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f4808278-e4ca-3dd0-af52-ad42f68c26c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddService"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "c23fd110-bcd3-3d18-8beb-759d52b1d4d8",
    "name" : "DEVELOPER - Update code service - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/vnqd0u0xjp7nxbxa59ycb308s0mjkd52prgc266hgvy5867w85uwc45a2lmru6tqev7fde4qm5kxe16ow917qvxfx9ybc9lfeekq6peg/Jesusa+Hamill",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c23fd110-bcd3-3d18-8beb-759d52b1d4d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateService"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9ef2f453-edbc-38e0-b1ed-feb1c5c69fbc",
    "name" : "DEVELOPER - Update code service - 400",
    "request" : {
      "urlPath" : "/codeadmin/v/2/fzv3uguvzvc9uk7m24jguaw6q5kj7ow4jnu8hpl2n0ljblvdbkdzdt32zwtm4l1rikx73jydvmsvsvu5hsq3hyyhogqujtiytflkehg1o0s72u33d/Royce+Abshire",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9ef2f453-edbc-38e0-b1ed-feb1c5c69fbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateService"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "8cba7776-90ec-3ba4-bca2-8cae73cbae90",
    "name" : "DEVELOPER - Update code service - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/ihtwsu0eottci8u0wh42eer0qawki6eilqaunnu80c2/Cassaundra+Weimann+MD",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8cba7776-90ec-3ba4-bca2-8cae73cbae90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateService"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "3cbf0c6e-8639-37a4-9001-a57e77f246df",
    "name" : "DEVELOPER - Get services logs - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/logs/207pfszt63y4y2ewj6kkjgezcg35j/Phylis+Wyman",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3cbf0c6e-8639-37a4-9001-a57e77f246df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLogs"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "e14f12bd-6657-31d5-950e-9671917c4edf",
    "name" : "DEVELOPER - Get services logs - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/logs/90vabu4iyeptxhfpe0o1mykitrqxzodn5wg4tk4deyc5zfnjk6f3v3ds2ey9qe18q52/Mr.+Sarita+Thompson",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e14f12bd-6657-31d5-950e-9671917c4edf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLogs"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "8c2e342a-2567-3bed-932c-c506e16d461e",
    "name" : "DEVELOPER - Delete library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/qu8i0omffk8jpafa21by6u9rlvjy6k02pzgb4ss294errcw2ia1k8jqpyc4fl/Mr.+Janay+Kulas",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "8c2e342a-2567-3bed-932c-c506e16d461e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteLibrary"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "9e33cd32-fa13-3a85-91b4-cbbb009d9676",
    "name" : "DEVELOPER - Delete library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/1ro15eqk9mep54q5zzj8s82rue1n5vsnk7zurjhn8in6z8wovwavq0ys0ko7lkegd7r5uojj1gixla61qrruybjwq2y20sxicie8t9rl6ql7ixk1dcijp0c4uawi2rthlxu9kv3kh9a6fl57g3rwybq0qkd64983bltycddxjlk7qrln8j24ds5/Aron+Hickle",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9e33cd32-fa13-3a85-91b4-cbbb009d9676",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteLibrary"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "c24a6ed8-0507-3d4e-8a50-11e9b9970e1a",
    "name" : "DEVELOPER - Create library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/cfr2e5hx0bm2nd8rvkb6z94iur8cxshhfr37ahh7vfzjqwk4dklmrx9jd5gyjlfuyxis6pkakt0c2s9d/Mike+Klein",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c24a6ed8-0507-3d4e-8a50-11e9b9970e1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateLibrary"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ce8aaf2a-04ad-3abe-8d3d-86570774686a",
    "name" : "DEVELOPER - Create library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/m8fojdbsbs5i4lis6rjx6k5537isnlnj58gk2au1jyu4dy76wqeqa0a90qih2k230uq2p7mxg75ho4u18gcjovy8q9lz52e6uacqc0ozmaxdzg72t74bg851zprimkdpjon86xaxrhjgjouf3oz8qf30by99681ff3bwwz5btlyhn2zzvqw4i0wq84nyws/Earlie+Price",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ce8aaf2a-04ad-3abe-8d3d-86570774686a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateLibrary"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "449ed007-c370-337c-964c-d3b985385d84",
    "name" : "DEVELOPER - Update library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/4h6e5kolug2svihgk2dninq9osm56rerhs57zt3922kq04jc1sy7chsp5e2s0j5a7gxy2xeqwxj0jlj/Mrs.+Alonso+Ward",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "449ed007-c370-337c-964c-d3b985385d84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateLibrary"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "0bc05280-d59f-3679-92b2-c669617d815f",
    "name" : "DEVELOPER - Update library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/v3n89j2nv24p4vi4c975navupg81dhwf6i8f44dvjyy9w7m3hdw9mwx955td6bu5e7ao6kn9h5yb68id397xoz03cwdi37hwtz37ef8xb8388shvchooz7fyegb82dhhvp9b0pnchz8rtlw45qrrphehzidee1zvluqe4uss4d72dt9slc49gzatm15/Alena+Conn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0bc05280-d59f-3679-92b2-c669617d815f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateLibrary"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "b3321249-e30e-3986-9231-9b75f1437c88",
    "name" : "DEVELOPER - Get library - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/k8syrnax57s14s92rymxztc9k5k4ns/Eloy+Streich",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b3321249-e30e-3986-9231-9b75f1437c88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLibrary"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "5ea157cd-8d27-306a-ba78-2feb2200508e",
    "name" : "DEVELOPER - Get library - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/bwi3l86gx2i4fdfqhd1rug1t13rzcg9rkzqpq61/Deandre+Hodkiewicz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5ea157cd-8d27-306a-ba78-2feb2200508e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLibrary"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "c098c87b-d164-30b5-8703-df3e6055db80",
    "name" : "DEVELOPER - Get all libraries - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/t1u4k3vdehzf7fvs3cy9ppf5hkx1cz363xj3tlmxxhrs0elwoff3zkdz46l82kdfo0dcsd",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c098c87b-d164-30b5-8703-df3e6055db80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLibraries"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "95eff006-8a43-3902-8eb6-209972a1ca1f",
    "name" : "DEVELOPER - Get all libraries - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/library/34kewshrg7cocbb5lqo40umhzerqid3yldbsnz5wouk2s20o78e49wj2n2no8phcvyvemhbjw7xm5l8rmk8u42vtptremr8wh3zdqaie",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "95eff006-8a43-3902-8eb6-209972a1ca1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLibraries"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "3ecbf1d6-5100-36bf-8c86-ee77333d6a3d",
    "name" : "DEVELOPER - Get old library version - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/t04lpyts74d6tubbx43r0yh9wn42cqcm28bch/Ahmed+Mertz/edm52x1wy5dxbcrmb1qf5z9nf",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3ecbf1d6-5100-36bf-8c86-ee77333d6a3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetOldLibraryVersion"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "16a90039-403e-3c87-8703-9c9c902deb27",
    "name" : "DEVELOPER - Get old library version - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/nyvrdr7x4unw1fgw2x76f12fg55sfpqmxgtaw59hlv9pb0vn4irhbar281vadpj02mzmvg7j173tjpzqfovtuebhx3elf59cou62rxy4/Mrs.+Melita+Block/y7z0izu2xzx3oik9kocwjsq",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "16a90039-403e-3c87-8703-9c9c902deb27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetOldLibraryVersion"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "565da76c-dc9c-3e4b-a349-44fa3a6c35e9",
    "name" : "DEVELOPER - Get library history - 500",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/fhf5m4k2k8dxcuw23tpmai1066a0zmazbxyd00d/Arron+Moen",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "565da76c-dc9c-3e4b-a349-44fa3a6c35e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "LibraryHistory"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "186de241-93c2-3661-82c9-4cd5fa7fe4f2",
    "name" : "DEVELOPER - Get library history - 200",
    "request" : {
      "urlPath" : "/codeadmin/v/2/history/library/xjxtzw18jt7t0hmujm7jjm8hfenorqua86729r7kzr9qnhigf43sczfoova6cq6f43epysp6hr2pcqm0n5ehi583xoxwkghod3vhnf3qpyhbc18vy79lub7xumpz3zf53k5az9g0cx7budn4xdnk4m/Noah+Brakus",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "186de241-93c2-3661-82c9-4cd5fa7fe4f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "LibraryHistory"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "d346bc3d-5287-3a84-b39e-82ca4287b1ce",
    "name" : "DEVELOPER - Delete failed service run - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed/d8bp9evz5uwz2xa1shlia4u4j5t0uuxj14v0aif0z070ck2wrqa1o6v1fghrsrgtlkje212dyq9xisizphim8lq7fitzj0q6qjsmal05r5capabjeepgs61qe75yq7eyke261sm9q42zo4w710bi2liqti9auhhnygpcn0on7ghn63l7vncp5axocns40rm",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d346bc3d-5287-3a84-b39e-82ca4287b1ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteFailedService"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f25767d8-55e4-3b21-a662-08f6803ca9f6",
    "name" : "DEVELOPER - Retry failed service - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed/r3tizj3an2s1jdjre3rxb3kv8n60h7bi2xzpkio2lxg9onbwzbmz582m0eferq90u30vn249hhr98kvcjkqv25d9g4daizksz5rlvdriraarawscerqdn7d194p66gu5tahvled23ns94cc0h4r084",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f25767d8-55e4-3b21-a662-08f6803ca9f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RetryFailedService"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "c7d79607-6a61-3923-bf0f-8233ab7b6843",
    "name" : "DEVELOPER - Get system's failed services - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed/l4w452e8fukwkvxlz5b0ojflgjmxkbli8qzw3v6poim8v4qq5yoen7rjzjzxebacuq2tufo4hmcckdf21by09kww18sywugkoxi90659w5kytv72rtrdfe5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c7d79607-6a61-3923-bf0f-8233ab7b6843",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemFailedServices"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "837a235a-655d-3de3-a708-3ae8fec2eaad",
    "name" : "DEVELOPER - Get all failed services - 200",
    "request" : {
      "urlPath" : "/codeadmin/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "837a235a-655d-3de3-a708-3ae8fec2eaad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetFailedServices"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "2b49f112-88d3-3e93-943d-920872f14725",
    "name" : "CODE - Get all failed services using Query - 500",
    "request" : {
      "urlPath" : "/api/v/4/sgjtoxrrt53glftumrsebodastgz2u5dvw7sqztdkpw4s3x00wnh528oc6myvwt45zqvlvjhegkuw8am2i636a7nd19p0/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2b49f112-88d3-3e93-943d-920872f14725",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "f8435dec-cd62-323b-bab5-20403f1da10c",
    "name" : "CODE - Get all failed services using Query - 401",
    "request" : {
      "urlPath" : "/api/v/4/w2qggwih6il3q5eqc0a7sndpv6lmfm6gzmb3kk8gvrl0pgsupp/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f8435dec-cd62-323b-bab5-20403f1da10c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "84298bac-5a9f-339d-b710-9df31f91a870",
    "name" : "CODE - Get all failed services using Query - 400",
    "request" : {
      "urlPath" : "/api/v/4/g9hi592w2pefxm7kvvyz4pqtjueuecld31ufjimdg9an2svz/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "84298bac-5a9f-339d-b710-9df31f91a870",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "d1557e81-bca6-3ae4-994f-1ede707b8431",
    "name" : "CODE - Get all failed services using Query - 200",
    "request" : {
      "urlPath" : "/api/v/4/xxgn4wnfi658lvy4027on/code/failed",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d1557e81-bca6-3ae4-994f-1ede707b8431",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetFailedServiceQuery"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "e83b6500-2c0b-31dc-9df6-be583d58afc6",
    "name" : "ADAPTERS - Delete adapter files - 500",
    "request" : {
      "urlPath" : "/api/v/4/uqcw3uzr931ciuy1og095fok7qpqmkanjx2i397mu1oxa9wp0gplh7hd1lh251k4veny07fkuujp8/adapters/Julee+Runolfsson/files/Anneliese+Thiel",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "e83b6500-2c0b-31dc-9df6-be583d58afc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteFile"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "fa0cae93-e35b-3593-a706-46f9bb8b92a3",
    "name" : "ADAPTERS - Delete adapter files - 400",
    "request" : {
      "urlPath" : "/api/v/4/4zie7bz3ns9qaje/adapters/Jerica+Feest/files/Stefan+Heaney",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "fa0cae93-e35b-3593-a706-46f9bb8b92a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteFile"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "5f19e79d-771a-305b-97be-a1f05dc555a4",
    "name" : "ADAPTERS - Delete adapter files - 200",
    "request" : {
      "urlPath" : "/api/v/4/5suftn5jb3j30xh8z735ee6fcpa7nurjaugjv8ze0v0176t7h2nsbmvt8uoooew6h36pqoo5srb78yxcf95so/adapters/Dr.+Joy+Conn/files/Oscar+Nolan",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5f19e79d-771a-305b-97be-a1f05dc555a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteFile"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "7cfc82a5-afcf-3c60-872a-8b519ec8a50e",
    "name" : "ADAPTERS - Update Existing File's content - 500",
    "request" : {
      "urlPath" : "/api/v/4/bgyjir29tqbxsmwm28q6j7a85tc5yqflcwtnrzrq0lpiqsoqvcdya8wowuz2is0z95lp1q6uspqnzf7vbzde9aqz7zfvkdvnkzg0horru42lpzu5t9cijq43qpgod87z3/adapters/Maybell+Greenholt/files/Rex+Gerhold",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7cfc82a5-afcf-3c60-872a-8b519ec8a50e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "2dfd8382-9f63-34ad-84af-efa329e5a054",
    "name" : "ADAPTERS - Update Existing File's content - 401",
    "request" : {
      "urlPath" : "/api/v/4/liijqw49i4j7llsednaqaur8z4zv9sklgo7poq7v5b7f5piwwvfpufffbnzjwtfqoi5zaj0sdkptc0jtt9j748nf52sjqgnh7l96xyvvmxt0bjrvwli4w6abuc86fogez3lt8v3egcbc0114srcbftc95k/adapters/Leighann+Quitzon/files/Crystle+Wisozk+DDS",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2dfd8382-9f63-34ad-84af-efa329e5a054",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "f1213cf9-9e27-38e3-af2a-b45703fd80d6",
    "name" : "ADAPTERS - Update Existing File's content - 400",
    "request" : {
      "urlPath" : "/api/v/4/525b9in08zttdaclhdcr86ogfo6xvx6v6/adapters/Mr.+Rhett+Hintz/files/Abraham+Beahan+Jr.",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f1213cf9-9e27-38e3-af2a-b45703fd80d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "5718adc1-817e-3ac2-a05a-3f9740909040",
    "name" : "ADAPTERS - Update Existing File's content - 200",
    "request" : {
      "urlPath" : "/api/v/4/wnw9n0bos5bm0po8zb6zkz5z8ki9aj8kuigkly8r58697ic89ji2b8cjlrq63unjx08z2lq5dz3mx9jcnc0rqxulkragkyl261q40deff2m67v314mh8smwwq5t6qvxaphsacevd3sbnbjmz1w9wzlp9u2wcy702dne9q9hv672/adapters/Miss+Rocky+Bruen/files/Carlton+Osinski",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5718adc1-817e-3ac2-a05a-3f9740909040",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateExistingFileContent"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "6422d74c-c84b-3933-8609-d0c5e16f0ad9",
    "name" : "ADAPTERS - Download file from adapter - 400",
    "request" : {
      "urlPath" : "/api/v/4/3el3kktvb0bcf0v3zs2addhpzdq0aavfyek379hulbdy06hbg90uqrzjtduzfqj32cnoflfkwqwvv1v7eq9i8qq1ur1fq85wo5qou1ock4szmwdy60rqd6e0iarj1cjyf91x7rj2d2h1ne2x8yn6b06f4v4wm6fm53wg/adapters/Lucius+Rogahn+DDS/files/Riley+Legros",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6422d74c-c84b-3933-8609-d0c5e16f0ad9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FileDownload"
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "dd8308ba-9720-3c0d-9986-ca149914a6c0",
    "name" : "ADAPTERS - Download file from adapter - 200",
    "request" : {
      "urlPath" : "/api/v/4/mxo9plk92w1swcq8vehvttcr5q5qysa69rli08895v55y56l7yck6y9hnwc65gx5wmmn9v2h3s9iow135fsavpawrxedp20qmoi3f7udqat8k82xc35pkza5qct32gpf76qzv40x11u6a5nswpgdkrbkyzwaf2bqf85p9pww8478z4mgd/adapters/Stella+King/files/Modesto+Bode+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dd8308ba-9720-3c0d-9986-ca149914a6c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "FileDownload"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "857d83b3-afe6-3c04-81ba-08dc82e428fd",
    "name" : "ADAPTERS - Add or replace file content & configuration - 500",
    "request" : {
      "urlPath" : "/api/v/4/rdfkvjlgv0xj86t0dkz6yzz3oygiujrjb2xrn720f96w6q4pqz2xgkdz4my2totj1822sfif0wlhyfu8b4y9u8nmqkp53u4dfdy9fk7igzfz41ro2/adapters/Donette+Crona+DDS/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "857d83b3-afe6-3c04-81ba-08dc82e428fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "7e66ac3e-cd45-35a8-b12d-e84f1b0cd834",
    "name" : "ADAPTERS - Add or replace file content & configuration - 401",
    "request" : {
      "urlPath" : "/api/v/4/vro184gyz81kq71681ruyyvopvtqr1exdq4fbthi0on16p3iuinh5hn7yoi7zezegswtbz/adapters/Vito+Abshire/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7e66ac3e-cd45-35a8-b12d-e84f1b0cd834",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "138c16fa-b667-3f5b-b4a2-0cdb3a545c59",
    "name" : "ADAPTERS - Add or replace file content & configuration - 400",
    "request" : {
      "urlPath" : "/api/v/4/zlu1fpfm9j4was3j331yv664sl0lb9ie2w8owudu0e1p2j59o1n8son34eoh2ek3qpo6vuwc1joe2ik0euy7qe9rycxw7giztsuf444nqffox01a3ntjwc7dbrvxxf7u7lzvo80lw2dl3trmxpvcqvfgr3m8tg0bintuaaxarve2xmoydh3apiyo/adapters/Bobbie+O%27Connell/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "138c16fa-b667-3f5b-b4a2-0cdb3a545c59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "31a240f2-7ca0-36b5-a09a-90f720dce08f",
    "name" : "ADAPTERS - Add or replace file content & configuration - 200",
    "request" : {
      "urlPath" : "/api/v/4/ie4tt8sd2ugey3sc8l538p4pdhdfd92to0iit5cjs6zwfgz58dj084id2rye5mc14flnwq94mxlx36kih1smf0wgo0m0a6afzo1kqrozmuqk31pmqwlmbqasgqn8dllmzmvwioltpuwvapg5muh34avk8gwvi79ydq2nolo0g4xr9i/adapters/Marshall+Deckow/files",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "31a240f2-7ca0-36b5-a09a-90f720dce08f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateFileInfo"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "66567735-7dbf-3d95-93e8-9bec8140f437",
    "name" : "Gets list of configuration information for all adapter files - 500",
    "request" : {
      "urlPath" : "/api/v/4/8iwnqy91hlmli3k5uubbyc1iedl66pyk59vao2ci8c3m0a40lmijvi8idb1lm2dfcpw8y84rhtqkrj27pya1/adapters/Jenelle+Schuster/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "66567735-7dbf-3d95-93e8-9bec8140f437",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "64a535bf-fc60-3e64-bab2-47b2f965d06a",
    "name" : "Gets list of configuration information for all adapter files - 401",
    "request" : {
      "urlPath" : "/api/v/4/omb9mj/adapters/Eldridge+Jenkins/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "64a535bf-fc60-3e64-bab2-47b2f965d06a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "b166ba41-2d34-3a91-90a4-725ac9d6c015",
    "name" : "Gets list of configuration information for all adapter files - 400",
    "request" : {
      "urlPath" : "/api/v/4/e62cn8mfnpgfeealh72nxqfgcg21a9874jvi98yj323pp1xeww78a0b0b4jj3aawgosz78845q30g8m09hgv13869mix6dgplz307o8d1bqc00q82rvg13gfcez/adapters/Joel+Lueilwitz/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "b166ba41-2d34-3a91-90a4-725ac9d6c015",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "11db046f-4846-3a53-a35e-7de48f85495d",
    "name" : "Gets list of configuration information for all adapter files - 200",
    "request" : {
      "urlPath" : "/api/v/4/ambwauenhwb986bimebi2sywqiavgn20f7anq0vdxopbd39svorp9hattbspj0yemr522uua57c1b5wjp7ipvbn4isqpuf9b34/adapters/Clint+Hintz/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "11db046f-4846-3a53-a35e-7de48f85495d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdapterConfig"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "60be7bee-1e74-3da8-837b-8a58de65fed2",
    "name" : "ADAPTERS - Send command to edge - 500",
    "request" : {
      "urlPath" : "/api/v/4/qr2zqjtk7dgjca4v0j7z4zmgjkm22rku8413vfb9u4krw2pxhq6prw1vfeosa98v924jly/adapters/Andre+Boyle/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "60be7bee-1e74-3da8-837b-8a58de65fed2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "72cd3a4f-8a19-3546-9f64-be5ecfdeb7b8",
    "name" : "ADAPTERS - Send command to edge - 401",
    "request" : {
      "urlPath" : "/api/v/4/9t5bil3388obi3xau0aero6k0027wb6s678wpaauqc/adapters/Yelena+Fahey/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "72cd3a4f-8a19-3546-9f64-be5ecfdeb7b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "06f2657d-6893-3e92-b869-57c015bb0f6d",
    "name" : "ADAPTERS - Send command to edge - 400",
    "request" : {
      "urlPath" : "/api/v/4/bhetw5m5dxrds25k96c9k90k2h0jcqvtgrc6pxt1atnav2h39pe9b9spd7jx1abtws8qkhob82royzisa9orv63or3ome8ndcdt0lpfhrr9docggxf68ehgqzew6hap5jhxecwv9ikl6s6wh5uvk2ercavamoabtlc505sedti5lbxphz/adapters/Kylee+Little+I/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "06f2657d-6893-3e92-b869-57c015bb0f6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "a73752a3-fb39-359e-8984-0a1c6c55751b",
    "name" : "ADAPTERS - Send command to edge - 200",
    "request" : {
      "urlPath" : "/api/v/4/d51hun6xxgudf88guw5neslgf31trwl4iulsigzla452qhmh8inpyymw0v33fd3b40uujkqv8wyinatsc43smhuste7bnz9jkp3embp24mfq7zayr7dbd5yjes7k8bub/adapters/Tiffanie+Feest+I/control",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a73752a3-fb39-359e-8984-0a1c6c55751b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddEdgeCommand"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "ace6131f-9345-38ba-bd45-43fbbf76c918",
    "name" : "ADAPTERS - Delete adapter - 400",
    "request" : {
      "urlPath" : "/api/v/4/s7w8xuuf74dywdh76mvx5gsxrk0v0uezqdq6xtifcoi6mbiox8empq70v19ng49jmdovzb9qpv8mip0x8bsg1o75drq5xruid7rbxjf6y98j8eib3al/adapters/Lavina+Wolff+MD",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "ace6131f-9345-38ba-bd45-43fbbf76c918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteAdapter"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "e53cc9d9-b47a-3b97-b629-08b3e5c307fc",
    "name" : "ADAPTERS - Delete adapter - 200",
    "request" : {
      "urlPath" : "/api/v/4/du1e8bbp2e194mvzias2/adapters/Mr.+Gaston+Mosciski",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e53cc9d9-b47a-3b97-b629-08b3e5c307fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteAdapter"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "2c181702-01fd-32d0-b503-e8092db46cf6",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 500",
    "request" : {
      "urlPath" : "/api/v/4/687zgdt7gwecyoaimg5z2ke4g0psrngnth5fe07jh1809dgkgq8foxkeypagdd9wjomsaabk2wuij1ltbk82i1yzu3a9m8uxjh6evm42aikhmowxakp8790ospzh0/adapters/Arlean+Cassin",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2c181702-01fd-32d0-b503-e8092db46cf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "7d3073be-19f6-338b-bba9-1dcea3e04085",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 401",
    "request" : {
      "urlPath" : "/api/v/4/du6isvcmtxfp7q9qxypl60bl6o11pw2xej9yyo9enj0n39bjqrx1h583tvpvw06tn9jz9enwwjxqqsr7nba06uoxy2o9np0ya9cwq62nly64nh6t/adapters/Olen+Feest",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "7d3073be-19f6-338b-bba9-1dcea3e04085",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "8f87c6c2-b237-3eb0-a373-3a9883e02a27",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 400",
    "request" : {
      "urlPath" : "/api/v/4/blwrb8tsne63/adapters/Tiesha+Hand",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8f87c6c2-b237-3eb0-a373-3a9883e02a27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "9c82a30e-38f2-3735-b7ca-6b22856fee89",
    "name" : "ADAPTERS - Map Adapter command to execute a file - 200",
    "request" : {
      "urlPath" : "/api/v/4/y6nl4w32syzhhw3mzleiia8/adapters/Cammy+Schroeder",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9c82a30e-38f2-3735-b7ca-6b22856fee89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MapAdapterCommand"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "68693f33-0727-3287-8b8e-f580a8df5827",
    "name" : "ADAPTERS - Add an adapter - 500",
    "request" : {
      "urlPath" : "/api/v/4/20nmixi7xjjfsnw0qy5gy6x426qgqfu/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "68693f33-0727-3287-8b8e-f580a8df5827",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "28705ee7-1a6f-3a65-96df-7360727f69d6",
    "name" : "ADAPTERS - Add an adapter - 401",
    "request" : {
      "urlPath" : "/api/v/4/iqlbtadxbmji6vajn8a76cffx7468oasmr4d53zawtmvitzcfpy3r0k8zfod53abs/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "28705ee7-1a6f-3a65-96df-7360727f69d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "e723b9fa-531c-3f12-88b7-f8de80148a97",
    "name" : "ADAPTERS - Add an adapter - 400",
    "request" : {
      "urlPath" : "/api/v/4/q6yqeps8o/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e723b9fa-531c-3f12-88b7-f8de80148a97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "5ebebe44-62a7-30a4-8b41-41aa03364e54",
    "name" : "ADAPTERS - Add an adapter - 200",
    "request" : {
      "urlPath" : "/api/v/4/0gs3p250ur6d5t5qh71g0xlcbyzbmt62k157e1fkk5fn43czgnj7oimtdpd3dasmevfaiorvplel7leoytf4x0qajf355mf7m3vaszg7lnkkasjb1v36mpqw2adqfd3mcx4cx6kq5ogkgcbiw9uygni9amwm6zjtw7izt1xjb3u1idtz/adapters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5ebebe44-62a7-30a4-8b41-41aa03364e54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addAdapter"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "3d6db8e2-542c-3283-9692-9541aa3a46dc",
    "name" : "ADAPTERS - Get all adapters - 401",
    "request" : {
      "urlPath" : "/api/v/4/18v6ovhtsrayq1rzz523wpzas7dkl73o8bl1b6nwocshh3jdfdnh5iu4dldrss7ln07vm3ze3wj49xf/adapters",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3d6db8e2-542c-3283-9692-9541aa3a46dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAdapters"
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "f278e348-4f06-30c6-b7f1-73f523d8fc1e",
    "name" : "ADAPTERS - Get all adapters - 400",
    "request" : {
      "urlPath" : "/api/v/4/9ru535bn4v2zv6ksfqwzudca4k8xnp9t4435e7xq3vqy6056w9iacwc2bh42ivk6pfeko6885t46dk8fegva3asmmi9ui9x4gfin4g93eeonwgif8eswiu8u6jqds1mf9t0l36ohy52ti5nn1czkp3bar5fyb888w0q75odxla7n4znpzdyuunqbunou/adapters",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f278e348-4f06-30c6-b7f1-73f523d8fc1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAdapters"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "b4b2d707-b1b3-3ede-b4af-1643877a43a4",
    "name" : "ADAPTERS - Get all adapters - 200",
    "request" : {
      "urlPath" : "/api/v/4/3u5h9nlrp325kwexbuz2jvo013823w61tzd90ze7tzoe94o0/adapters",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b4b2d707-b1b3-3ede-b4af-1643877a43a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAdapters"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "bed24afd-10c3-3185-9c83-7a35b232a372",
    "name" : "WEBHOOKS - Executing a webhook - 200",
    "request" : {
      "urlPath" : "/api/v/4/webhook/execute/1kgmf2zkdfffjfnreyelifbjhwv6nbw2vvj7n26hlshp6si7bezoafwmyeybhmgjku0e0dyp/Murray+Corkery",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bed24afd-10c3-3185-9c83-7a35b232a372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteWebhook"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "c997e706-d57b-34ee-907e-a72eb2545ac9",
    "name" : "WEBHOOKS - Executes query string payload webhook - 200",
    "request" : {
      "urlPath" : "/api/v/4/webhook/execute/nsfi0m1bn12vi3qswwde2x9rve6feo7wzs55zv2198az1vul9ondr0zk93r6k4sjspwu7sh754uy34ey7n5w74l7s0q6nqnp6nho01g8ai84blpldxa22yos2hhu1o4xhf4zi1si2f2c14gtuyokhlov3jaro/Kizzie+Harber",
      "method" : "GET",
      "queryParameters" : {
        "token" : {
          "equalTo" : "6lr3citp"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c997e706-d57b-34ee-907e-a72eb2545ac9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PayloadWebhookQuery"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "3cf8ba76-49db-30d7-b369-8fdf3cd2d200",
    "name" : "USER - Users change roles and passwords for other users - 500",
    "request" : {
      "urlPath" : "/api/v/4/user/manage",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3cf8ba76-49db-30d7-b369-8fdf3cd2d200",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeUserInfo"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "6b48bf34-f2b1-3d4d-9752-2a59a5bc0cf2",
    "name" : "USER - Users change roles and passwords for other users - 400",
    "request" : {
      "urlPath" : "/api/v/4/user/manage",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6b48bf34-f2b1-3d4d-9752-2a59a5bc0cf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeUserInfo"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "32b728ef-ce6d-3598-8c4a-6904e242813a",
    "name" : "USER - Users change roles and passwords for other users - 200",
    "request" : {
      "urlPath" : "/api/v/4/user/manage",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "32b728ef-ce6d-3598-8c4a-6904e242813a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeUserInfo"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "07932cc7-a275-3fd5-a85c-cf02cc6870bf",
    "name" : "MESSAGING - Gets number of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/g1o88ehksqra6972knfrwh7k97zevtl1rbzra32f99u3z3qfaz8z0n2b9vsxulyna2zwpdwqlr37xevpmawymicgvvxqgw3h7invvf3a771t4y9cf92l245k08t31bhj8tgga9z78iw6ggaphsuxf3dqzy9ilw20p1xyzsz06j5f4i9j86987tz7gokd/topics/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07932cc7-a275-3fd5-a85c-cf02cc6870bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTopicCount",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "4a4652c1-0172-3a09-9c9d-7e44fe406193",
    "name" : "MESSAGING - Gets number of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/m7ulqkaiwem727culyo49fl26s204fi9m/topics/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a4652c1-0172-3a09-9c9d-7e44fe406193",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTopicCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "cdec1be0-fb3d-341f-b664-5d09fcce65cb",
    "name" : "MESSAGING - Gets list of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/9qedvmgrx3gcyorrb0x6kpln7f3yg23w8qi05n8xoml3a4ladpo2bz4d15wodb9aepgqtcrzytnthi80vqv2554y3sr0vbqftulxovajauprw9v6xj8i8x2hvth93bhkv1ego51rdb782i373dxvwbykrygz8u2it6ts3tfpjupcblr6oiclr/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cdec1be0-fb3d-341f-b664-5d09fcce65cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTopics",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "21de3617-0f3e-317c-b9b3-91c0340979a9",
    "name" : "MESSAGING - Gets list of topics",
    "request" : {
      "urlPath" : "/api/v/4/message/pqjxh7cxcmmpbdzfcoyxht6c4deupx18hnce987q3b9ct1gr6pd6zkwyz1pr/topics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n}, {\n  \"topicid\" : \"Topic Name\",\n  \"qos\" : 0,\n  \"payload\" : \"Message Body.\",\n  \"payloadsize\" : 50,\n  \"ip\" : \"\",\n  \"pk\" : \"12a38ef9-6d01-4aed-8117-e4464f14ffbc\",\n  \"time\" : 1589313683,\n  \"userid\" : \"e291cdc70bf6a4fa3e288c3af01\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21de3617-0f3e-317c-b9b3-91c0340979a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTopics",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/msgTopic"
            }
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "223f2cf0-90d4-3dbd-a174-3d807fd9063d",
    "name" : "DATABASES - Create a external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/o5d2r1ldocb4i7hri8lw97bli6nm26zoi6xt9zdnvvvw1zw06sw34xbfp7gflrc69kj15qmvnf6fchd1xhjebqy63v38yj19oz8nc51/Sharda+Cronin/data",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "223f2cf0-90d4-3dbd-a174-3d807fd9063d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PerformDBOperation"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "0fe32544-3796-3cf1-baa3-a01bf4a2d100",
    "name" : "DATABASES - Create a external database connection - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/4mfrruua5jba3o4j/Franklin+Dibbert/data",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0fe32544-3796-3cf1-baa3-a01bf4a2d100",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PerformDBOperation"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "b873569a-c4d7-3a48-8d88-abe60cb6e246",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/k2lywfvcoskv392mj2jg49wc8xrq3pky23lbna96wofu1uwydtieqfhytllf0oaoug8uh5f0z6izzjgeomza9ixl3xppkt0kcmn2/Golda+Ebert/data",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b873569a-c4d7-3a48-8d88-abe60cb6e246",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PerformDBOperation",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "15e6590b-1ead-3f90-a71b-b929d7886080",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/usoshfit5h49gglsf/Neely+Roberts/data",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Total\" : 1,\n  \"Data\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15e6590b-1ead-3f90-a71b-b929d7886080",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PerformDBOperation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Data" : {
                "type" : "array",
                "example" : ""
              },
              "Total" : {
                "type" : "integer",
                "example" : 1
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "a65552d4-ce6e-3fbe-84d4-058682d13d29",
    "name" : "DATABASES - Delete a external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/94fua29ujz5h062irq18pvaaeofqhealcwqkx1irbim24tfhbpdmxdfu1f0tm99fqeoo44s0qq7n95lsj92l093s95lp2b0bxkk20qzngub05euqbtfvm6eayg13tv3tzl3qt7v5e223ezg8s3o2n14s5mpt962lvwsd6s8xm/Taisha+Ryan",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a65552d4-ce6e-3fbe-84d4-058682d13d29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExternalDB"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "f0e5d38c-0d74-34d7-8e24-96397ac7d028",
    "name" : "DATABASES - Delete a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/bm18ulz2/Colene+King",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0e5d38c-0d74-34d7-8e24-96397ac7d028",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "ab634ad3-4149-3639-814b-8239eff2433a",
    "name" : "DATABASES - Delete a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/4uolxi3btxowzbsfyssaqwzq1qiv74sdzat9qwrjpebt43apflwx/Pauline+Botsford",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab634ad3-4149-3639-814b-8239eff2433a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExternalDB",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "1a37d730-0383-37a3-8c07-f81e9c6e6422",
    "name" : "DATABASES - Update external database credentials - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/arjmqwpzuxzytpmrr6fkjy12dgvejjjk6gevid35yirkfpfi9lju4ockgi0o6y5uvcee3cfw8ve3f7kzlqysbg2ya6asg4c0zq5th0issrr1xgnkjjcrk8darb856nxjoz4ew0ma023n1uya79uv/Hertha+Tremblay",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1a37d730-0383-37a3-8c07-f81e9c6e6422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "c6c42ce5-ad34-3038-8f80-76ddf51c3267",
    "name" : "DATABASES - Update external database credentials - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/k4999hmkplbpju7hystuvpqk5hvw2y1r1w0zya3dbtinll6g0pyz4b3lj2tc855079z4l6tbvrfhlkfewhcddyrpum2x4doiza7spl0e92p2c2dpowyv5h58dlq4w3717neqmavmeudz2lur6tx7/Rashad+Kilback",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c6c42ce5-ad34-3038-8f80-76ddf51c3267",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "a97f7307-0bc6-3307-aeb2-c25ef09b133f",
    "name" : "DATABASES - Update external database credentials (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/5jf0uk1dknxcoa5qlpt88nq5py3w42fcqw7bnljix497smzim1jyuskg42f5vls94wjtuxna05rsvlcphynsbxb6mpj8b62bkzcgccy0eel8lxobpvoxxfrdfphr4u13tbcd3afpuygb6dk9n5sjg6ewqy2nr3qz1vw7hzbz22gxnoj2u/Numbers+Watsica",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a97f7307-0bc6-3307-aeb2-c25ef09b133f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "4b8e4f22-409e-379a-8172-f928718ff871",
    "name" : "DATABASES - Update external database credentials (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/tx5gfq0cgy59f7fxebh6p7ka70tkdqaj8pv3atpccrn7b6x0p8a2jo9nii0w6b2tw7ch7qr0qiwqq7802ozftytizw0mdlxknv26zpt3gwgs17h58x82gszijneil/Mr.+Monnie+Bechtelar",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"password\" : \"MSQL_PASSWORD\",\n  \"address\" : \"MYSQL_ADDRESS\",\n  \"dbname\" : \"MYSQL_DATABASE_NAME\",\n  \"port\" : \"3306\",\n  \"user\" : \"MYSQL_USER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b8e4f22-409e-379a-8172-f928718ff871",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDatabaseCredentials",
          "schema" : {
            "type" : "object",
            "properties" : {
              "address" : {
                "type" : "string",
                "example" : "MYSQL_ADDRESS"
              },
              "dbname" : {
                "type" : "string",
                "example" : "MYSQL_DATABASE_NAME"
              },
              "password" : {
                "type" : "string",
                "example" : "MSQL_PASSWORD"
              },
              "port" : {
                "type" : "string",
                "example" : "3306"
              },
              "user" : {
                "type" : "string",
                "example" : "MYSQL_USER"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "4910e0db-ed2a-38f6-a62d-3a436fbd7733",
    "name" : "DATABASES - Retrieve a specific external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/wylfniw6c1djab97u5pgxjt5oeewjktjqlj34a41hxlnfppb567gp16uo9689okcv18fvrn95r9nnlckdxs90im5jr827gk9n8xbglr4uu5kd2ihum5wjlfd/Jan+Yundt",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4910e0db-ed2a-38f6-a62d-3a436fbd7733",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetExternalDB"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "d98c9fae-eaea-3315-bff1-f046e05636fe",
    "name" : "DATABASES - Retrieve a specific external database connection - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/huyxsm1myi4jb/Alexander+Rice",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d98c9fae-eaea-3315-bff1-f046e05636fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetExternalDB"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "30e1338b-e426-3c88-803a-c8df9fabf1b3",
    "name" : "DATABASES - Retrieve a specific external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/swuyb63v2o6x8n39ogc/Oscar+Haley",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30e1338b-e426-3c88-803a-c8df9fabf1b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "aa2522ae-4258-304b-b10a-0fdb5c67661f",
    "name" : "DATABASES - Retrieve a specific external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/n3xzgm5ag56sok9vkspvgaklbcms98nmo91vjzgigfzp4zg7uw0ht9l1ih8jia7voho4veoj3j4vr961c4o25d9ojal2yxsn6imegjyhu35sriiibjlhogpr10bpcdxce47saal5pkuay2lkfenn2rc95rrjpuim2lfbe2qm7oaqnh6lnxhswrz2ey5yi4s3c69bmlk/Jeanelle+Corwin",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"credentials\" : {\n    \"password\" : \"MSQL_PASSWORD\",\n    \"address\" : \"MYSQL_ADDRESS\",\n    \"dbname\" : \"MYSQL_DATABASE_NAME\",\n    \"port\" : \"3306\",\n    \"user\" : \"MYSQL_USER\"\n  },\n  \"dbtype\" : \"mysql\",\n  \"name\" : \"mysql_example\",\n  \"system_key\" : \"bc91ede40bb993a7babaa801\",\n  \"id\" : 5\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa2522ae-4258-304b-b10a-0fdb5c67661f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetExternalDB",
          "schema" : {
            "type" : "object",
            "properties" : {
              "credentials" : {
                "$ref" : "#/components/schemas/credentials"
              },
              "dbtype" : {
                "type" : "string",
                "example" : "mysql"
              },
              "id" : {
                "type" : "integer",
                "example" : 5
              },
              "name" : {
                "type" : "string",
                "example" : "mysql_example"
              },
              "system_key" : {
                "type" : "string",
                "example" : "bc91ede40bb993a7babaa801"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "4c594f2d-6424-340d-9d00-6493bcc70b87",
    "name" : "DATABASES - Create a external database connection - 500",
    "request" : {
      "urlPath" : "/api/v/4/external-db/dwpj22j9ulu5b3sn64d3yeo7hrvkcfk19d87qz603f201t4bz75ejc0u6si7su8xwr218nh6lbhohuun",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4c594f2d-6424-340d-9d00-6493bcc70b87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExternalDB"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "0e8bc01e-f3d3-379c-944c-e6c34836eda0",
    "name" : "DATABASES - Create a external database connection - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/j8cgtykk",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "0e8bc01e-f3d3-379c-944c-e6c34836eda0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExternalDB"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "7ddb2d74-c1e0-3ad9-a5a3-3e64404dce9e",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/tsqy58mzn1wrxlhllaqruqhji2fo5tlw4a559517eb8mm7i3rarl6zcj6wpxbba44g9vnsu0we14yqtvd4b8zu2qeiine705cfpf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ddb2d74-c1e0-3ad9-a5a3-3e64404dce9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "72ad5afc-c498-3ae5-959b-168bd8c05041",
    "name" : "DATABASES - Create a external database connection (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/em8v3bmmpf3d2j8wz7slkbf2dbv2gnyyka32p9kknkxpyakj7og448qatfmvfkj03b5pczrpftzdvnqqtoidv0uu9wgs1xiwybgpw6nlogmv79p5awaosfxecmh8fl92qkudppiwfuy69opnigkdlguk355bqg4ufc4lv9297nv295",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72ad5afc-c498-3ae5-959b-168bd8c05041",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExternalDB",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "40b92564-1fef-3d09-ab0d-0b8d30819b96",
    "name" : "DATABASES - Retrieves all external database connections - 401",
    "request" : {
      "urlPath" : "/api/v/4/external-db/tmzzrxpwo9i96gcrhcd9c1cx4zmpq2xpc6fk9yynhlnfm756s2k4cog046wuz7b9kkfdssh3yncyfxdzcod1gvz22dt67i6gsj9othh52o6ortsy8hauqnpnu1057yt4a76vmwi",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "40b92564-1fef-3d09-ab0d-0b8d30819b96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllExternalDB"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "d4dee8d2-7088-3a4f-af6d-55a9b3d9d47d",
    "name" : "DATABASES - Retrieves all external database connections (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/9vsqou1nrmjf1ksl744mmotivhyjz4zz65g8205nht3f7y8wyz7kdrjhgm6hm3e8hxvt7d0wtzc2lqt55pnrchk8y9gq7ed2hf1b98ilhrggpou8o8s775x989k0holn8zat2r5837xet87p",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4dee8d2-7088-3a4f-af6d-55a9b3d9d47d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllExternalDB",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "e04bff3c-64f7-36d9-bcc2-a0f93f9c2e50",
    "name" : "DATABASES - Retrieves all external database connections (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/external-db/vyzx9zj6l2a1aabixvf0juepdyf06w1zpo5kmjfdwhlgc0oy9gvxk3pu0pr1bw76k5scw3b8f5c1",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n}, {\n  \"dbtype\" : \"MongoDB\",\n  \"name\" : \"sample_db\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e04bff3c-64f7-36d9-bcc2-a0f93f9c2e50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllExternalDB",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/database"
            }
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "345749fa-f781-3606-8783-cbed131624e1",
    "name" : "DEVICES - Get information for a connected device",
    "request" : {
      "urlPath" : "/api/v/4/devices/sa1rvzelx7i44nyl5004m8csy/connections/Adrianna+Turner",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "345749fa-f781-3606-8783-cbed131624e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetConnectedDeviceInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "658c98ff-f61c-349f-a33a-da8acffd52fb",
    "name" : "DEVICES - Get information for a connected device",
    "request" : {
      "urlPath" : "/api/v/4/devices/xn4bky3h7qrtrhe/connections/Mrs.+Ester+Hills",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"e4ba8adf0beeea9dcc909dafaeab01 :: deviceName\",\n  \"certificate\" : \"null\",\n  \"description\" : \"A connected device.\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true,\n  \"allow_key_auth\" : false,\n  \"last_active_date\" : 1576095410,\n  \"name\" : \"ExampleDevice\",\n  \"has_keys\" : false,\n  \"system_key\" : \"e4ba8adf0beeea9dcc909dafaeab01\",\n  \"created_date\" : 1576095410,\n  \"state\" : \"active\",\n  \"connections\" : [ {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "658c98ff-f61c-349f-a33a-da8acffd52fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetConnectedDeviceInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean"
              },
              "allow_key_auth" : {
                "type" : "boolean"
              },
              "certificate" : {
                "type" : "string",
                "example" : "null"
              },
              "connections" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/connectedDeviceSettings"
                }
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1576095410
              },
              "description" : {
                "type" : "string",
                "example" : "A connected device."
              },
              "device_key" : {
                "type" : "string",
                "example" : "e4ba8adf0beeea9dcc909dafaeab01 :: deviceName"
              },
              "enabled" : {
                "type" : "boolean"
              },
              "has_keys" : {
                "type" : "boolean"
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1576095410
              },
              "name" : {
                "type" : "string",
                "example" : "ExampleDevice"
              },
              "state" : {
                "type" : "string",
                "example" : "active"
              },
              "system_key" : {
                "type" : "string",
                "example" : "e4ba8adf0beeea9dcc909dafaeab01"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "10299fe6-5964-370e-ab32-23ab0bd68e5c",
    "name" : "DEVICES - Get connected device list",
    "request" : {
      "urlPath" : "/api/v/4/devices/eg8yco70ztey6oqk166mhhk5err7d0dfqezd58bogrh1t5wy6a54cmmlc0ta4xqc5trcqvw174spspfoda8sb7yfcvtn44o8h2qxg85l606pf83q2ls0m9qujilf/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10299fe6-5964-370e-ab32-23ab0bd68e5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetConnectedDeviceList",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "45576599-4959-3b28-8ab7-d8b78e8bc2b5",
    "name" : "DEVICES - Get connected device list",
    "request" : {
      "urlPath" : "/api/v/4/devices/f6ulfjbvd6sr695fk2wg4rxo95n8ytqwjjwskqi9g0siwllpnm6ldgq1gwjzt9wzc6ug61qycxdygxfv1u5ltfif3sepf4y9tcoc11ya65efmbho6m3a0twqpcjmtancibmtd/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_name\" : [ {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  }, {\n    \"time_connected\" : \"2019-12-13T17:53:09.5778599Z\",\n    \"client_id\" : \"DhkVG42mlBQ7DkZSvb5d\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45576599-4959-3b28-8ab7-d8b78e8bc2b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetConnectedDeviceList",
          "schema" : {
            "type" : "object",
            "properties" : {
              "device_name" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/connectedDeviceSettings"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "5a6869a9-7dbc-30a6-b9bd-383bf6ff2b48",
    "name" : "DEVICES - Get total of connected devices",
    "request" : {
      "urlPath" : "/api/v/4/devices/ld1igubvu0d1fjhyxii2fvsvrmetvuqjbtl05mwnpgb88hx712xnr20pjrbgxcch9dgk551qquvzhw5j3nb9ov2blaflldk2o9xo08d5swqeik6g8qzr361rgkkfk57so8je6go7cu6s3dwezuvuqfdwmktvd405w6mrwbb0pd4b0fhj18airq3uwj/connectioncount",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a6869a9-7dbc-30a6-b9bd-383bf6ff2b48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConnectedDeviceCount",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "a9b115ac-0324-3be1-a920-45e91456e174",
    "name" : "DEVICES - Get total of connected devices",
    "request" : {
      "urlPath" : "/api/v/4/devices/bz0kmz9a011y4yegnni2cpjq9x0hxhxnwi6fznlq/connectioncount",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total_devices\" : 3,\n  \"total_device_connections\" : 5,\n  \"unique_device_connections\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9b115ac-0324-3be1-a920-45e91456e174",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ConnectedDeviceCount",
          "schema" : {
            "type" : "object",
            "properties" : {
              "total_device_connections" : {
                "type" : "integer",
                "example" : 5
              },
              "total_devices" : {
                "type" : "integer",
                "example" : 3
              },
              "unique_device_connections" : {
                "type" : "integer",
                "example" : 2
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "157cfa21-2e29-3add-9fef-7dc084a8786f",
    "name" : "DATA - Update upsert values (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/mlxoebiint4r3z8jeayyozs6pg712fn07qwz9t5nd7py6g1r4slti2be746cpio0nuko62gy31yg7lp/Ms.+Nan+Gusikowski/upsert",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "conflictColumn" : {
          "equalTo" : "39w2oiu31wux752009pp68s5or9vi9ezwh3eeysijllekgfn54sany4bp48fk339xs4v33mfv7sitdqqs9ckt3y9cgx8"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "157cfa21-2e29-3add-9fef-7dc084a8786f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUpsert",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "781c0ea2-13c8-3ac9-b114-859ea94a7866",
    "name" : "DATA - Update upsert values - 200",
    "request" : {
      "urlPath" : "/api/v/4/data/63tu5hdaqsv2z2daxiumnq3fuujnzdj9xdjdvlt7kmq6r2e0y96ptz4wj4uq2u1qpc0g3gmbund1yatulp5g4sh9461s2xi2wp35qd4fur2tspm4dw91wako75ircaz8fsomb0aym2ft2ws3kbwyz0ylxsocr7klqs42bixl3839bld3x6o9werb/Yong+Keeling/upsert",
      "method" : "PUT",
      "queryParameters" : {
        "conflictColumn" : {
          "equalTo" : "rrmq0xz5ll3yeq8r3q2cilhb0mkni4ubmc3cjx3b3w2qd90lm5dl2u9lriu1iujkq29ht3sq72smupuetb63h392557subvpvsv5okfqls2q6ki8e76pwpnyg"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "781c0ea2-13c8-3ac9-b114-859ea94a7866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUpsert"
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "725748a8-0be6-3eb9-bd24-3775d7689211",
    "name" : "DATA - Delete unique index - 401",
    "request" : {
      "urlPath" : "/api/v/4/data/j41xk9s6hqsahrs1z28kru/Denice+Reichert/uniqueindex",
      "method" : "DELETE",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Kristy+Schmeler"
        }
      }
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "725748a8-0be6-3eb9-bd24-3775d7689211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUniqueIndex"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "8e0f6db9-b05b-36b4-ab23-c8886093f54d",
    "name" : "DATA - Delete unique index (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/xiz20v70b5ulovrtpsas3699z9aa96kbtew720txae73vudpo62khn2dqw7ivwnkckhoeynglzaxb8p8sudutjity584em1apuy86ldx0tuwkciqkimhqf945kwkolax2a7z1r90bq6zs7xi/Arla+Dare/uniqueindex",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Sonya+Witting"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e0f6db9-b05b-36b4-ab23-c8886093f54d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUniqueIndex",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "5b854561-b178-3454-90b8-8da722ac40d0",
    "name" : "DATA - Delete unique index (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/eispdg56zuhb0cg4cp10ioud7l4m3q4ypalfyn5tr13i4v0r1pvds/Jayme+Bauch/uniqueindex",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Claude+Waelchi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b854561-b178-3454-90b8-8da722ac40d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "46897bcd-2fae-322f-8522-a2f8a544a169",
    "name" : "DATA - Create Unique Index",
    "request" : {
      "urlPath" : "/api/v/4/data/nek2fhthxheh8q8h0rr6suxnev8m3izo/Zoila+Schamberger/uniqueindex",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Darryl+Green+I"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "46897bcd-2fae-322f-8522-a2f8a544a169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUniqueIndex",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "8b021d6e-785b-38b8-ad46-d660606c5d9f",
    "name" : "DATA - Create Unique Index",
    "request" : {
      "urlPath" : "/api/v/4/data/cp6jskcpvekefinyvaw2vxy7ept9bembjps4b70lpugxz6sifexpiagiuy7n8wjvmm2vtn37jcxg8h4nb50u4rt2q23rrok5j9nlz60pmgmurq8z2w5qcguv2jv9h07p6s0at6veozkkyin356bwlg0h7k0wnd226dtdzg0eoovdyttnnvb/Rhett+Champlin/uniqueindex",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Milford+Turner"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b021d6e-785b-38b8-ad46-d660606c5d9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "36591a18-6e8f-308d-99c3-65a0b40a4c1e",
    "name" : "DATA - Get list of indexes - 401",
    "request" : {
      "urlPath" : "/api/v/4/data/tgkvf8bfkyon4xhpuw4kehmsnrqboiy2f83jsy4tsh4yqc1tlvd0kqgkswx88h29pn8h0uo74ozi84koyy7471f9b9emaotqt47nviro/Mrs.+Isreal+Runolfsson/listindexes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "36591a18-6e8f-308d-99c3-65a0b40a4c1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetIndexes"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "3fdcfebc-16ef-3df1-b15d-f8da4aac9570",
    "name" : "DATA - Get list of indexes (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/n4v5wapv7fup1dllkoae4shwfmzgbax72q7gv2xy0hx47tuafsipo1oqma8now4hhpz4wn0yedmpxjjrn7oywmgal3d6r608gu849l7vdbo7q3836xka5zl/Katharyn+Ernser+II/listindexes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fdcfebc-16ef-3df1-b15d-f8da4aac9570",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetIndexes",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "cea8d32c-646a-3e29-99ee-f7f05c7385a1",
    "name" : "DATA - Get list of indexes (application/json)",
    "request" : {
      "urlPath" : "/api/v/4/data/em4hrqjd5thob49osh0c54v4kpqtvzbsy23f5hoqav4frjwhf7zf75bhx1gutgd5cbnh7hgf8ahrkfhzhr6tnlxkb1uee96/Korey+Waelchi+DDS/listindexes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Total\" : 2,\n  \"Data\" : [ {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  }, {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  }, {\n    \"name\" : \"ExampleColumn\",\n    \"type\" : \"Unique Index\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cea8d32c-646a-3e29-99ee-f7f05c7385a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetIndexes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Data" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/indexArray"
                }
              },
              "Total" : {
                "type" : "integer",
                "description" : "Total number of indexes in collection",
                "example" : 2
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "b1415c33-eb4b-3129-85a6-1a97ba661acb",
    "name" : "DATA - Delete collection",
    "request" : {
      "urlPath" : "/api/v/4/data/48nev01cnzg5551xqwj0upym62nkrho7s9wtpjsid8xwj63ff8j0b0wdd0obnl5cut88lkyrutqjzishnysv0nb1oy60c/Erik+O%27Keefe/index",
      "method" : "DELETE",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Wesley+Pollich+I"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1415c33-eb4b-3129-85a6-1a97ba661acb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteNonUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "ed893e43-b657-387c-b0dd-4d5d2a2cf629",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/4/data/9dfaka0ug5mcn0zmvlco8v7c4od7fxo3926c749st94fjwcwzy5gbdwt1n5egvmuvwai4vkddwgzaw0tsjhxbxl64j90y7wi2gj4bd5vkdio/Ms.+Bernie+Dibbert/index",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Lionel+Gutmann+MD"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed893e43-b657-387c-b0dd-4d5d2a2cf629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNonUniqueIndex",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "3ab34657-f6ab-3e0d-9ba6-586dbb21c6e2",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/4/data/f69hz1u180n3i7osttfe6zj3vbl9we5uib636uw47uq4i4a0iul1ondw6715/Miss+Shon+Kerluke/index",
      "method" : "POST",
      "queryParameters" : {
        "columnName" : {
          "equalTo" : "Ofelia+Harvey"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ab34657-f6ab-3e0d-9ba6-586dbb21c6e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNonUniqueIndex",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "022f83b4-d654-3090-832e-e19fe7b7a4b1",
    "name" : "FILES  - Get all files metadata in a box",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/mxpjsm0a5xdhpmby41hfxwslaem7h7o8otv61dbjcaku10mkt9c1tt9xf0gnuw3ddacwp9zvsiaepr208voaetyx/Lamonica+Deckow+I/files",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"example/full/path/to/file.txt\" : {\n    \"base_name\" : \"sample.txt\",\n    \"size\" : 60,\n    \"permissions\" : \"-rw-r--r--\",\n    \"bucket_name\" : \"inbox\",\n    \"last_modified\" : \"2017-07-03T19:52:41.693Z\",\n    \"relative_name\" : \"test/file.txt\",\n    \"path_name\" : \"example/full/path/to/file.txt\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "022f83b4-d654-3090-832e-e19fe7b7a4b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetBoxFiles",
          "schema" : {
            "type" : "object",
            "properties" : {
              "example/full/path/to/file.txt" : {
                "$ref" : "#/components/schemas/box_data"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "c2da1192-8517-3937-9959-0329680befd9",
    "name" : "FILES  - Moves a file to a new location within buckets. - 200",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/4vwfmrtellxk2yqpxtqnqpib7pqxyj4k49klfayve2s5cunrpv9v9l6cvboacqdp5orj6kuuo8y6h59x5btwdhr2cdjx16sw0e01qvtn9iw0586aw8dcs5hs2d0344h/Miss+Zulma+Torp/file/move",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c2da1192-8517-3937-9959-0329680befd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "MoveBucketFile"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "1e5e3bf7-9fda-3c05-87be-a9ced002223a",
    "name" : "FILES  - Get a file's metadata in a box",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/gf3u4827adbfrp0oh9dq59f4g9gtik3cp0b/Thurman+Armstrong/file/meta",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"base_name\" : \"sample.txt\",\n  \"size\" : 60,\n  \"permissions\" : \"-rw-r--r--\",\n  \"bucket_name\" : \"inbox\",\n  \"last_modified\" : \"2017-07-03T19:52:41.693Z\",\n  \"relative_name\" : \"test/file.txt\",\n  \"path_name\" : \"example/full/path/to/file.txt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e5e3bf7-9fda-3c05-87be-a9ced002223a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetBoxFilesMeta",
          "schema" : {
            "type" : "object",
            "properties" : {
              "base_name" : {
                "type" : "string",
                "description" : "Base Name",
                "example" : "sample.txt"
              },
              "bucket_name" : {
                "type" : "string",
                "description" : "Box Name",
                "example" : "inbox"
              },
              "last_modified" : {
                "type" : "string",
                "description" : "Date of update",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "path_name" : {
                "type" : "string",
                "description" : "Full file path",
                "example" : "example/full/path/to/file.txt"
              },
              "permissions" : {
                "type" : "string",
                "description" : "File permissions",
                "example" : "-rw-r--r--"
              },
              "relative_name" : {
                "type" : "string",
                "description" : "relative name",
                "example" : "test/file.txt"
              },
              "size" : {
                "type" : "integer",
                "description" : "File size in bytes",
                "example" : 60
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "77146a10-31fb-3726-a8ae-c2f4855e1269",
    "name" : "FILES  - Deletes a file from the bucket. - 200",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/u48jzhbgyfhujyq/Shirlee+Hane/file/delete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "77146a10-31fb-3726-a8ae-c2f4855e1269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBucketFile"
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "ea0472e1-6dbe-3dd4-8c4d-376b5f1b6f81",
    "name" : "FILES  - Creates a new file in a bucket",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/wq2yq7ty9frjcqgo1y356l4f6zfgzf0/Refugia+Hilll/file/create",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"base_name\" : \"sample.txt\",\n  \"size\" : 60,\n  \"permissions\" : \"-rw-r--r--\",\n  \"bucket_name\" : \"inbox\",\n  \"last_modified\" : \"2017-07-03T19:52:41.693Z\",\n  \"relative_name\" : \"test/file.txt\",\n  \"path_name\" : \"example/full/path/to/file.txt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea0472e1-6dbe-3dd4-8c4d-376b5f1b6f81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBucketFile",
          "schema" : {
            "type" : "object",
            "properties" : {
              "base_name" : {
                "type" : "string",
                "description" : "Base Name",
                "example" : "sample.txt"
              },
              "bucket_name" : {
                "type" : "string",
                "description" : "Box Name",
                "example" : "inbox"
              },
              "last_modified" : {
                "type" : "string",
                "description" : "Date of update",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "path_name" : {
                "type" : "string",
                "description" : "Full file path",
                "example" : "example/full/path/to/file.txt"
              },
              "permissions" : {
                "type" : "string",
                "description" : "File permissions",
                "example" : "-rw-r--r--"
              },
              "relative_name" : {
                "type" : "string",
                "description" : "relative name",
                "example" : "test/file.txt"
              },
              "size" : {
                "type" : "integer",
                "description" : "File size in bytes",
                "example" : 60
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "90a7b831-c84e-3801-ae66-988071d72a5e",
    "name" : "FILES  - Copies a file to a new location within buckets - 200",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/hrhtn37tndqdab427fe7c1i44whlh4zrvmv7r9sc26a8ujoef0encee8lh7sayajx67zwbgmjll1gbaoasqrj1edqzf82em71socj828hev84956b4u3i235/Yolando+Braun/file/copy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "90a7b831-c84e-3801-ae66-988071d72a5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CopyBucketFile"
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "6109a4ad-b1d3-33dc-8753-b225250df250",
    "name" : "FILES  - Returns metadata for specified bucket",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/48fgqucx2utztf2jfb4vwc15zo0mj8bto13nyaz06yqqizv76hmxcp5h4udsjtk6a9hh41nj0bpkob6aohdgz8tqtawf91i9ygt2isrn6fg2xzntj9gbp8o084k003rpsmc/Mrs.+Randell+Kirlin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6109a4ad-b1d3-33dc-8753-b225250df250",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSingleBucketData",
          "schema" : {
            "type" : "object",
            "properties" : {
              "deployment_name" : {
                "type" : "string",
                "description" : "Deployment Name",
                "example" : "ExampleDeployment"
              },
              "edge_config" : {
                "type" : "array",
                "description" : "Edge Config file",
                "example" : ""
              },
              "edge_storage" : {
                "type" : "string",
                "description" : "Edge storage type - local or google",
                "example" : "local"
              },
              "platform_config" : {
                "type" : "array",
                "description" : "Platform Config file",
                "example" : ""
              },
              "platform_storage" : {
                "type" : "string",
                "description" : "Platform storage type - local or google",
                "example" : "local"
              },
              "system_key" : {
                "type" : "string",
                "example" : "98a6cbe60bceafcc5d8b4a33b"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "2c041ea1-c8ea-34e9-93c1-fa2df55428ea",
    "name" : "FILES  - Returns a list of metadata for buckets in system",
    "request" : {
      "urlPath" : "/api/v/4/bucket_sets/3vepunam52qbgv1fn8x7q08rb13fwcalyi817gqddz7zo7ogqpfob6e4vb8ksc3z5e6sxizb73u9mnskkmaf3k2znegot",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}, {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n}, {\n  \"edge_storage\" : \"local\",\n  \"deployment_name\" : \"ExampleDeployment\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"platform_config\" : \"\",\n  \"platform_storage\" : \"local\",\n  \"edge_config\" : \"\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c041ea1-c8ea-34e9-93c1-fa2df55428ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetBucketsData",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/buckets"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "450125c8-6cfb-3189-bb8a-8a0168d3d13e",
    "name" : "DEPLOYMENT - Delete a deployment - 500",
    "request" : {
      "urlPath" : "/api/v/3/his7106fk7q3kaiqwbhw1no3qanxaryaj884ktu7ci1yeuaoimn0af3q658pip9up9ejfoch9haxxp6h6qpolt5n5pygmqxd0pid83gzf79kbakowqnpbn4wsr80dsml7fjmdcy07lfj2edu9z0exc3tu67yhehtugx97q2pcfgpv32yn5l/deployments/Aura+Medhurst",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "450125c8-6cfb-3189-bb8a-8a0168d3d13e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployment"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "ea37f2f8-fe45-311f-936a-cdd35047c569",
    "name" : "DEPLOYMENT - Delete a deployment - 200",
    "request" : {
      "urlPath" : "/api/v/3/au38y6qjjgsw6181ywnf25h3/deployments/Ted+Rohan",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ea37f2f8-fe45-311f-936a-cdd35047c569",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeployment"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "bdef494e-8030-378b-aa89-f6c644bb9af0",
    "name" : "DEPLOYMENT - Update deployment - 500",
    "request" : {
      "urlPath" : "/api/v/3/lqgzo1hzydwvek5y/deployments/August+Johnston",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "bdef494e-8030-378b-aa89-f6c644bb9af0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployment"
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "d70b201f-9f19-3f99-b667-855c50846b99",
    "name" : "DEPLOYMENT - Update deployment - 200",
    "request" : {
      "urlPath" : "/api/v/3/b936t5pi6n4no99x2sfpeih3cmhzrigxw7c9a59mumo3ewxmenxxk1cssud15twlmco76wj9bknod44xsn4fftab0sq2eyy31wrp6mvavanytn1984o7srgx8zq2dt42datktocfcsfp1jtzgtdhai6ao93xvvisigy27l7knm/deployments/Ms.+Kortney+Romaguera",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d70b201f-9f19-3f99-b667-855c50846b99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeployment"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "699e5aaa-b2c6-303b-9033-4a49c2213677",
    "name" : "DEPLOYMENTS - Gets a deloyment for a system - 500",
    "request" : {
      "urlPath" : "/api/v/3/3wtveth1pz0d1xqbgihnt7tz7252xa3qbfskb2k4j6agqqptln6sxj1oaszp4zijffxpsqz8g8ngv3xla0korz/deployments/Shawnta+Morissette",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "699e5aaa-b2c6-303b-9033-4a49c2213677",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetADeployment"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "c9826e3f-0b2d-3055-bc44-4b41886db5d4",
    "name" : "DEPLOYMENTS - Gets a deloyment for a system - 200",
    "request" : {
      "urlPath" : "/api/v/3/chq4z4fag7jdsrzp2467wqbbzo4qrf26nh7knsv9ndov1ukswpwhfi5d9tvsf4br9c7lykywi6y6ub0ovaim8pxpqn8t6q9y695rm2nqpryrsm5kyolivyxaof5nfb1v54al89nrcbqm67lo7ag4nzqophgs/deployments/Apryl+Jast",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c9826e3f-0b2d-3055-bc44-4b41886db5d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetADeployment"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "6ab7c6c5-87a6-3510-8b83-2b6b1f5ccc6c",
    "name" : "DEPLOYMENTS - Creates a deployment - 500",
    "request" : {
      "urlPath" : "/api/v/3/2uloiuvfq1wfoexsij/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "6ab7c6c5-87a6-3510-8b83-2b6b1f5ccc6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployment"
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "b0fcaf12-9523-3a19-b8e8-0b72ba77f093",
    "name" : "DEPLOYMENTS - Creates a deployment - 200",
    "request" : {
      "urlPath" : "/api/v/3/1ey5bbjbhzk16jp8k8lb3yhb89lfswe4r325l8zb/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b0fcaf12-9523-3a19-b8e8-0b72ba77f093",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateDeployment"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "a1dd40c2-eee0-3af9-8571-4e8fddb02e87",
    "name" : "DEPLOYMENTS - Gets all deployment names and descriptions for a system - 500",
    "request" : {
      "urlPath" : "/api/v/3/ck6pnhrk6usxl/deployments",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a1dd40c2-eee0-3af9-8571-4e8fddb02e87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllDeployments"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "f21c0b43-2c25-3515-8a02-3c0afb732542",
    "name" : "DEPLOYMENTS - Gets all deployment names and descriptions for a system (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/s5nfmecjrlqlva0nziruuc4zzqi6lquijd44t97sr7welonzozcbwcyjj53r9m3yiwtja60wskcifpn3mxnsmpc3xdqeurdf85u7mj429s8gtbxy5rzk4insbbgdh7l9yt3twr3i4oh9pl7knxdli92c7u5hg4akg7k/deployments",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"deployment_name\",\n  \"description\" : \"This an example deployment\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f21c0b43-2c25-3515-8a02-3c0afb732542",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllDeployments",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deployment"
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "00431265-0524-3290-b696-f7b8b0855951",
    "name" : "Edge - Delete edge - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/rezukslq1szwgj1cahlndc0b6zwzm48nr0gdced35l1xywky7d2jxmpwopjoprp8jsz3ltbpfe6qirymzbb8c0l82aeinyadsv3wrmgc6vxzj40xlob2i5ioboi39ecuctgwtbqt6v2s/Marlen+Batz+III",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "00431265-0524-3290-b696-f7b8b0855951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteEdgeByName"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "64b22c89-e9f0-3b72-8eef-58c63105dd2a",
    "name" : "Edge - Delete edge - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/5zvc3zb9qy876u/Jasmine+Hand",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "64b22c89-e9f0-3b72-8eef-58c63105dd2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteEdgeByName"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "db479dea-22e4-3f5c-9de7-941ab998cf81",
    "name" : "EDGE - Create edge - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/vqye4lwxsezgufbinv9977ykuu9qu766e5qd8zf3ta4d10y32nuutf48z4dp3h9rmmfi1iwvjlce2v5qn3wceyqsglyagfkd6ym6ba0wnnnnc1anqr1blo83o3cw9kdb69y2xnxin6oks8bv8xp8wtqa2fylmvym6eswpxdehc/Eunice+Gulgowski+V",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "db479dea-22e4-3f5c-9de7-941ab998cf81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewEdge"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "04eeadec-1ca9-375f-913a-4d50eeb208b7",
    "name" : "EDGE - Create edge - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/co07agvmrt2s88a00j31z8ab96be2kcicmdcgtcybzr0kp2v7nrfc2ck1sbdug5qv8p8t5s3re63xuxoqsrteoylisjhgdz5sxeqtrugve8et9zzmb2ohbtox0sr40a4wvsi93qm2udvq48ff4p2d/Deedra+Kilback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "04eeadec-1ca9-375f-913a-4d50eeb208b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewEdge"
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "1b216d71-6adf-3dc2-afd9-31b419ecc7ff",
    "name" : "EDGE - Update edge - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/f41g1w/Evan+Purdy",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "1b216d71-6adf-3dc2-afd9-31b419ecc7ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateEdgeByName"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "2687a118-2b68-3648-8cc8-b7e1860c1c07",
    "name" : "EDGE - Update edge - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/qyl6j20ysbbfgsig2azhiv8e2sg3aik98udmorc0zae3n4elzskh1zpwih1g2iteh6vme4nbqd8q113wuvobglcp1s0d69k0iyif28/Laverne+Nikolaus+PhD",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2687a118-2b68-3648-8cc8-b7e1860c1c07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateEdgeByName"
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "f5dafff4-7731-375d-a136-2a33310bac43",
    "name" : "Edge(name) - Get edge info - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/ymzac4obig4vx1svuntns0gagm1g36vo72fhus3gw1yhtue8cus3mzc0icxb1mtinqwvad28712r250k6pbzskuaehqwwxma9vufbcgjtqo8nr8o6a53h16m07bevatzb9xct36k089oq603imn31hfp8ggdyyf1jgpw4t4nqlsi3l4608zvlwm2tdidq3j1ajn/Cordell+Russel+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f5dafff4-7731-375d-a136-2a33310bac43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeDataByName"
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "852c4dcf-b99b-3ccf-8059-52433d10706e",
    "name" : "Edge(name) - Get edge info - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/k1vb7lz5fb9n0b6ky8jnpfurucezal6n24zdki5vadw6omcrnbyvmcmopuroe2mms8jjx3wkk0wxkc9zy03n/Ettie+Friesen",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "852c4dcf-b99b-3ccf-8059-52433d10706e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeDataByName"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "4977c0ba-a110-3811-b8bb-1270b675e47b",
    "name" : "EDGE - Get count - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/c1b5efjccu5oqzaxcfvun7m14/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "4977c0ba-a110-3811-b8bb-1270b675e47b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeCount"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "6f420cd7-7c0b-3e18-918e-a8757061e4ea",
    "name" : "EDGE - Get count - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/hn2ss707vvtb33v6zcqg52ezvb3kpmt5qlfxj8owp2khaudqy1tzcq5q3b0vhr7gnl1/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6f420cd7-7c0b-3e18-918e-a8757061e4ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeCount"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "05bab7e4-5fa9-33e1-b003-babbc6487e19",
    "name" : "EDGE - Get columns - 400",
    "request" : {
      "urlPath" : "/api/v/3/edges/tz41nwo798vb9brgvyvoe8k3phe1onfbuxwztz3pkrkesqgiymjux8ltlfe0j3cyvhudpcub5dntzgqye6npk3h4rhydz4cvtmm2kfnom9u09dht5ygxn7zgwh441nceitgmt141kczcn67itx8ufwsr4pzoozskrqopc5ll7iofc25ysod8zs7uz2/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "05bab7e4-5fa9-33e1-b003-babbc6487e19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeTableSchema"
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "6ae3fa21-4a1b-3bcc-90d9-5b03a42ecabc",
    "name" : "EDGE - Get columns - 200",
    "request" : {
      "urlPath" : "/api/v/3/edges/6y4p3wl2cvvc8fhbb4l2yso4j94b99h6tuwagnw6uqi0jo4ktzuptfbfbr3j97667v00yrv2gvj8pvo9kcnontnrccf4/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6ae3fa21-4a1b-3bcc-90d9-5b03a42ecabc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeTableSchema"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "7e1e3897-99bd-3c99-b7da-63d4c97f5459",
    "name" : "DEVICES - Get count",
    "request" : {
      "urlPath" : "/api/v/3/devices/gf2pbtybkt676nk97wvycx9of7cjtskl9by10wr1v09gclvcnfptouaiq7to5aoht2/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e1e3897-99bd-3c99-b7da-63d4c97f5459",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDeviceCount",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "0d294a35-dcce-3911-a046-dbf6062da6c9",
    "name" : "DEVICES - Get count",
    "request" : {
      "urlPath" : "/api/v/3/devices/8iruuf061y06zz3dtj9ojrznz09xt7/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d294a35-dcce-3911-a046-dbf6062da6c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDeviceCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "80dbdf2b-8259-3b1c-9b46-f662496cf248",
    "name" : "EDGE - Get device columns",
    "request" : {
      "urlPath" : "/api/v/3/devices/2rex8yyzj7eo8pin7jlmjz4h98glt9g51tbu0e5jek4jpn2r09llwm00tj1vfunk2kfxjwnxcs42jr9jdqf9ax00mpwz3v0ec0rviwivhuc8imrjhyay7fscv4y0e99pr13fs680zq1likwzw6jf1e82k36b7oof84/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80dbdf2b-8259-3b1c-9b46-f662496cf248",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDeviceTableSchema",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "af4a3e24-88a2-3ca1-b18e-96c9ed6f9b73",
    "name" : "EDGE - Get device columns",
    "request" : {
      "urlPath" : "/api/v/3/devices/kl05r06noek9j8wwlb6/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n}, {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n}, {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n}, {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af4a3e24-88a2-3ca1-b18e-96c9ed6f9b73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDeviceTableSchema",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/columnObject"
            }
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "5242ffa2-4f12-3a39-95eb-83e385374301",
    "name" : "DATA - Delete collection - 200",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "03ur"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5242ffa2-4f12-3a39-95eb-83e385374301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCollection"
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "04d0ec19-222f-3048-ab0a-dc12b8383a7c",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04d0ec19-222f-3048-ab0a-dc12b8383a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCollection",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "39981523-3988-3a34-ac05-18288f1e8c13",
    "name" : "DATA - Create collection",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"appID\" : \"c0f8e2c50bbeeaf87f5efa2eee301\",\n  \"name\" : \"newCollection\",\n  \"collectionID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "39981523-3988-3a34-ac05-18288f1e8c13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCollection",
          "schema" : {
            "required" : [ "appID", "name" ],
            "type" : "object",
            "properties" : {
              "appID" : {
                "type" : "string",
                "description" : "This is the system key",
                "example" : "c0f8e2c50bbeeaf87f5efa2eee301"
              },
              "collectionID" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "name" : {
                "type" : "string",
                "example" : "newCollection"
              }
            },
            "description" : "The information necessary to create a new collection"
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "0142d488-f682-3cdf-a187-7dafa3f1d66d",
    "name" : "DATA - Update collection - 200",
    "request" : {
      "urlPath" : "/api/v/3/collectionmanagement",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0142d488-f682-3cdf-a187-7dafa3f1d66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateCollection"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "eda7109f-0861-3b99-ae65-c8ac9a68c29b",
    "name" : "HANDLERS - Get trigger handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/xtpdabslf2f3v/triggers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eda7109f-0861-3b99-ae65-c8ac9a68c29b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllTrigger",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "97c86a0c-4e89-3bf7-99c5-1af3d9995510",
    "name" : "HANDLERS - Get trigger handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/ktyhyn579rsdib7dkubrqtz7gsl/triggers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97c86a0c-4e89-3bf7-99c5-1af3d9995510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllTrigger",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "2854ecff-de92-31d2-a524-a3593a19be7a",
    "name" : "HANDLERS - Delete trigger handler - 400",
    "request" : {
      "urlPath" : "/api/v/3/code/y4v7y5ywt0iu2fozzb022qao975uhxdwqp/trigger/Dr.+Josie+Ondricka",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2854ecff-de92-31d2-a524-a3593a19be7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTriggerByName"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "0a8cc764-545c-3e4a-b4e5-b7bcf533f58c",
    "name" : "HANDLERS - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/api/v/3/code/ymqkddr3icfjr65mpl8i1469xtwxrmxpk7nnsobmaw0vz8knlgez3ko5wk0p4ij8q8f0cby8dh5n2cpdp8tynjki8xjbubxu2oneaaaexvawwutj3mibgl9y0htn460ialeyirs30jg901w6aiow85/trigger/Chung+Bednar",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0a8cc764-545c-3e4a-b4e5-b7bcf533f58c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTriggerByName"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "ce7d375d-d208-3a0d-a159-0ce64f42a0cb",
    "name" : "HANDLERS - Create trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/umq1obg7ikk2b10oj1gfflsgefxgyoh2umvjwo1u56ijhkcb03ei1g06v2wwezlid2n8k8xzty78470x7nln97x8n8k7x0n3bklxgo4atj8lr712/trigger/Pablo+Ebert",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce7d375d-d208-3a0d-a159-0ce64f42a0cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewTrigger",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "5ee46f83-6b82-34df-b61d-9e602a94675d",
    "name" : "HANDLERS - Create trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/3baqz2ri48sykcrvytdrw9d2p4b77srsh6z0sk6zwu6tap19s7gepsd7zxvunbw3swb3tu4x59d6puyh5dp23lpe9pmx/trigger/Dori+Heidenreich",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ee46f83-6b82-34df-b61d-9e602a94675d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewTrigger",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "bb0d9581-358d-3569-887b-f04296c5d660",
    "name" : "HANDLERS - Update trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/ogisyanaits4o8aepfqcx1hta7dgxb5lxuryddzcf0cdosvpe1rkxw1rxbjzh5okedplgm7o7i2o8z5ayfzzn4m9h0ajgne89nw5airhcbjxyu/trigger/Miquel+Reichel",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb0d9581-358d-3569-887b-f04296c5d660",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTriggerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "f6dafe61-d762-3bb9-a33e-42e3e300f376",
    "name" : "HANDLERS - Update trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/bok2xn2seei48hfx5jsly3dpzeckrmepc2ekb9o0ad0qa0wv0t49zlc5ceikiqmzax4544mh8ajuv1c6tq2isvhs4hfsrmspzhb/trigger/Mr.+Horacio+Reichert",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6dafe61-d762-3bb9-a33e-42e3e300f376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTriggerByName",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "a8c27626-4156-3de3-a50d-8868e2714043",
    "name" : "HANDLERS - Get trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/67o2v3sasc6v9edoj3wam9zqmjjey6iahfuzbd8y695weylmf201nkq8wsvpj8kebm5ope0j/trigger/Britney+Weimann",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8c27626-4156-3de3-a50d-8868e2714043",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTriggerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "7d6c5321-735b-3e98-b359-47d8b7ec43d9",
    "name" : "HANDLERS - Get trigger handler",
    "request" : {
      "urlPath" : "/api/v/3/code/i00pjmvhjody43mrre4dvp4/trigger/Joseph+Klein",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n}, {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"service_name\" : \"TriggerHandler\",\n  \"name\" : \"Message_Trigger\",\n  \"namespace\" : \"\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"event_definition\" : {\n    \"def_name\" : \"Subscribe\",\n    \"visibility\" : true,\n    \"def_module\" : \"Messaging\",\n    \"def_keys\" : \"\"\n  },\n  \"key_value_pairs\" : {\n    \"topic\" : \"/CB/sensors/#\"\n  }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d6c5321-735b-3e98-b359-47d8b7ec43d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTriggerByName",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/triggerList"
            }
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "8577bdf9-5052-3aa7-904f-79452befaa30",
    "name" : "HANDLERS - Get timer handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/h31qzakq5c95o1b97lwf9zpsjdzaev6jlo1g4yllxu7d0cpkm95gmr30ljo6cn8x8ywzm3ss5y5a5iru2ybxaj04gegmq8pru22qlf49tdvdlvepjye4pg8f1ydxke89a3ea5pyr0q0qvv874lq20gslwq05v520e22j7ddaj2a/timers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8577bdf9-5052-3aa7-904f-79452befaa30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllTimers",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "95f9ef51-97e4-3752-a3bf-18aded6c2fd6",
    "name" : "HANDLERS - Get timer handlers",
    "request" : {
      "urlPath" : "/api/v/3/code/9qq7qkjyl1qs1yllttywt23ax729dbksp01wzj36ap0ctp4v1xkfwoqml11zixzucbaqx99rqfae081rfp61bagynsq9rhg9lnjwwshqegz9pplthzexw0qgeftjgh80/timers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}, {\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95f9ef51-97e4-3752-a3bf-18aded6c2fd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllTimers",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/timerList"
            }
          }
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "e89a9def-1777-3f42-8eed-c9b363d02b18",
    "name" : "HANDLERS - Delete trigger handler (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/g68cibvws3xubyudneeqpjdfnqysc6lfgnsoc25ounrs4m2mdkk72t28g39irxb6vrmrts7fm1v10ts0adz1nb3ufgo32qxkagmtj3iai7fac0jaxnps1td/timer/Alfonso+Weber",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e89a9def-1777-3f42-8eed-c9b363d02b18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTimerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "e391afcb-1b4b-3045-9cca-75f646a66298",
    "name" : "HANDLERS - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/api/v/3/code/4fayuatbnu04y6by4qkzef41qqarhk5f9ry2eqop7yvt6d5ti6sjyna9ydmm6ryvf2irjfp7ttdbdjx1bca6i3qu4ql2lxbckz0qyuip2h4w8b4i7qn9xuedahtds4w5x4ehcmpmuo9fhe9wjyfa545e/timer/Jacquline+Leannon",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e391afcb-1b4b-3045-9cca-75f646a66298",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTimerByName"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "140533f2-a68f-3c47-9c85-2c30f6d0e9a2",
    "name" : "HANDLERS - Create timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/jd0e71k0ejlzb35yq5z76e1ycgep7ifkckluypceoq0as85pkyt/timer/Natasha+Koelpin+IV",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "140533f2-a68f-3c47-9c85-2c30f6d0e9a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewTimer",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "df650180-5b8a-3c9f-8962-c1603f8d0aeb",
    "name" : "HANDLERS - Create timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/pqinm8dryvdqnk0khyml0kg4jfkgip9qa3vkaux26938rlbchtc6s49yzy09fwyk5svdnxkk981wtx6g89bls8icmex4t7cmthijn3pk2c3gbw5em329okp7qmcyw7tu7tjg4ry/timer/Vivien+Corwin",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df650180-5b8a-3c9f-8962-c1603f8d0aeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewTimer",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "a6e5511b-b7b1-344a-9b51-c96e1de098f1",
    "name" : "HANDLERS - Create timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/6u8zzh5d0tpn13tlrh188xh4avhz2k3iaru6x44gy4pvt5bf9e7sl7pcifdqpf3ovhcsg5jvew2i36a3qeiw9mxjvo8bsc2mp7ik6237wl06hwjgicwu01bmjna9kgm0kepz0/timer/Corrin+Jacobi+III",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6e5511b-b7b1-344a-9b51-c96e1de098f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateNewTimer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "example" : "This timer is 60 seconds"
              },
              "frequency" : {
                "type" : "integer",
                "description" : "Frequency (in seconds) between two consecutive invocations of a timer handler",
                "example" : 60
              },
              "name" : {
                "type" : "string",
                "example" : "Timer_Example"
              },
              "namespace" : {
                "type" : "string",
                "example" : ""
              },
              "repeats" : {
                "type" : "integer",
                "description" : "The number of times a timer handler is invoked. To invoke the handler indefinitely set 'repeats = -1'",
                "example" : -1
              },
              "service_name" : {
                "type" : "string",
                "example" : "TimerHandler"
              },
              "start_time" : {
                "type" : "string",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "system_key" : {
                "type" : "string",
                "example" : "ccafb4cf0bd0dcbcadaccaf9ebba01"
              },
              "system_secret" : {
                "type" : "string",
                "example" : "CCAFB4CF0BBABDDCE3F2F1E6C3E601"
              },
              "timer_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name"
              },
              "user_id" : {
                "type" : "string",
                "example" : "c6b4cf0b8ca5b7c3fad793cb12"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "dd78b579-67f8-3719-8098-ccd9f86794f6",
    "name" : "HANDLERS - Update timer handler (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/akqiveolyh3tlij76/timer/Tiana+Murazik",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd78b579-67f8-3719-8098-ccd9f86794f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "9a8d3c86-0955-3e1f-a937-bb4111512372",
    "name" : "HANDLERS - Update timer handler - 400",
    "request" : {
      "urlPath" : "/api/v/3/code/nscuz9syhbd512msl1pvxnyoyj23lhxi83kilqt2n7tb5e4l4uyeeptxcbirs81dn46tmn881w35ludxwqpnfds2vg7h16/timer/Haywood+Shields",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9a8d3c86-0955-3e1f-a937-bb4111512372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimerByName"
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "107260f0-e09f-3ba1-8e4f-d856ab9c313d",
    "name" : "HANDLERS - Update timer handler (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/esla6yysbtfmsqpxjl85a/timer/Dr.+Ginny+Goyette",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "107260f0-e09f-3ba1-8e4f-d856ab9c313d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimerByName",
          "schema" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "example" : "This timer is 60 seconds"
              },
              "frequency" : {
                "type" : "integer",
                "description" : "Frequency (in seconds) between two consecutive invocations of a timer handler",
                "example" : 60
              },
              "name" : {
                "type" : "string",
                "example" : "Timer_Example"
              },
              "namespace" : {
                "type" : "string",
                "example" : ""
              },
              "repeats" : {
                "type" : "integer",
                "description" : "The number of times a timer handler is invoked. To invoke the handler indefinitely set 'repeats = -1'",
                "example" : -1
              },
              "service_name" : {
                "type" : "string",
                "example" : "TimerHandler"
              },
              "start_time" : {
                "type" : "string",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "system_key" : {
                "type" : "string",
                "example" : "ccafb4cf0bd0dcbcadaccaf9ebba01"
              },
              "system_secret" : {
                "type" : "string",
                "example" : "CCAFB4CF0BBABDDCE3F2F1E6C3E601"
              },
              "timer_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name"
              },
              "user_id" : {
                "type" : "string",
                "example" : "c6b4cf0b8ca5b7c3fad793cb12"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "157b3344-8cc8-3141-862b-b9de77f258c2",
    "name" : "HANDLERS - Get timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/kviv2soeq5xugsu6yj609omh/timer/Tracey+Wehner+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "157b3344-8cc8-3141-862b-b9de77f258c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTimerByName",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "c18616ba-7f00-31ed-892b-c64318ef6650",
    "name" : "HANDLERS - Get timer handler",
    "request" : {
      "urlPath" : "/api/v/3/code/mg9dfr4y19gjbr6yft2zv2xni6dw5perk6ylbyn29l1wkfbhx72irkhoj4pfif5si6y8jhw5juuey44zccjyl820ayzge0yvvatekjl1d920/timer/Taunya+Daniel+PhD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"repeats\" : -1,\n  \"start_time\" : \"2017-07-03T19:52:41.693Z\",\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"timer_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name\",\n  \"user_id\" : \"c6b4cf0b8ca5b7c3fad793cb12\",\n  \"service_name\" : \"TimerHandler\",\n  \"name\" : \"Timer_Example\",\n  \"namespace\" : \"\",\n  \"description\" : \"This timer is 60 seconds\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"frequency\" : 60\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c18616ba-7f00-31ed-892b-c64318ef6650",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTimerByName",
          "schema" : {
            "type" : "object",
            "properties" : {
              "description" : {
                "type" : "string",
                "example" : "This timer is 60 seconds"
              },
              "frequency" : {
                "type" : "integer",
                "description" : "Frequency (in seconds) between two consecutive invocations of a timer handler",
                "example" : 60
              },
              "name" : {
                "type" : "string",
                "example" : "Timer_Example"
              },
              "namespace" : {
                "type" : "string",
                "example" : ""
              },
              "repeats" : {
                "type" : "integer",
                "description" : "The number of times a timer handler is invoked. To invoke the handler indefinitely set 'repeats = -1'",
                "example" : -1
              },
              "service_name" : {
                "type" : "string",
                "example" : "TimerHandler"
              },
              "start_time" : {
                "type" : "string",
                "example" : "2017-07-03T19:52:41.693Z"
              },
              "system_key" : {
                "type" : "string",
                "example" : "ccafb4cf0bd0dcbcadaccaf9ebba01"
              },
              "system_secret" : {
                "type" : "string",
                "example" : "CCAFB4CF0BBABDDCE3F2F1E6C3E601"
              },
              "timer_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: timer_name"
              },
              "user_id" : {
                "type" : "string",
                "example" : "c6b4cf0b8ca5b7c3fad793cb12"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "3d4af234-1644-37eb-b9ee-deab99bb2583",
    "name" : "CODE - Returns code services and settings - 500",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/acvzu9h75svze2vrtoc2n3troor",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3d4af234-1644-37eb-b9ee-deab99bb2583",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ReturnServiceSettings"
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "ccbe53fc-4db2-3a9c-9e0a-06f0e3a50af9",
    "name" : "CODE - Returns code services and settings - 401",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/k5z17mlmlv7l9pp37d4qlp2dfecrjylw6sby7pd7uohtthkfm7wqd2f8xixcfagwkrkxjsniy3vkxn6k76b5ad2612ymtm48c9xev3pczdvlrpxntfwd56tmwfrwzk0jc4jhmrdvlilyltm3g9c0yxeddcvcnesx",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ccbe53fc-4db2-3a9c-9e0a-06f0e3a50af9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ReturnServiceSettings"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "e18b6f7e-5818-38a3-8d71-064015c236ff",
    "name" : "CODE - Returns code services and settings - 400",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/b837ugi2zrkvmqvol1grldmo6snumh7o69f4tnzkx1fp9nl5dhbky1lopb1enb3d399qgesu3mtcp66bheywglk06092qss8zvydanveonfuwz0wz71n7vc6iy61w5j9ngds84pqy4oshm1itwdk941pbic5kuoo5jaoi765o8pxuy27ha5079b0a",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e18b6f7e-5818-38a3-8d71-064015c236ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ReturnServiceSettings"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "08e47acd-93ad-334d-8679-f399860afcc8",
    "name" : "CODE - Returns code services and settings (application/json)",
    "request" : {
      "urlPath" : "/api/v/3/code/codemeta/b9eaxxpo9db8sp28c72zt6136ncclrkh730zqj4qhr7s8ptzyhzz0fl1fderdd3n8qioo4xokjgoxb8",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : [ {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : false,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : true,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : false,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : true,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : true,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : false,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  }, {\n    \"auto_balance_euid\" : \"\",\n    \"euid\" : \"b0a6cbe60b8edf93fdca978aed8e01\",\n    \"version_id\" : \"1767d09d-e6c6-4841-a26a-9935a1e5fd96\",\n    \"auto_balance\" : false,\n    \"uuid\" : \"ea339dce-3e5e-45b2-b1a6-fe030a03b0fd\",\n    \"version\" : 3,\n    \"concurrency\" : 0,\n    \"logging_enabled\" : false,\n    \"name\" : \"serviceName\",\n    \"namespace\" : \"\",\n    \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n    \"auto_restart\" : false,\n    \"execution_timeout\" : 60\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08e47acd-93ad-334d-8679-f399860afcc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ReturnServiceSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "code" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/codeSettings"
                }
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "6826b419-2896-3639-bdcd-b967715a4c03",
    "name" : "DATA - Get collections",
    "request" : {
      "urlPath" : "/api/v/3/allcollections/0ief4xsua91j4rt1ehgs18jm458s12adaauufqzuog8xwukx2zhg1jtd3cl17pga3bss1fywigo2e6vvbsydknh31nhoh7kv9t51wgngp2n4cbykdsg7gcyxath1hzvt5jllfj",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n}, {\n  \"appID\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"name\" : \"Employee_List\",\n  \"collectionID\" : \"92ceabdd0be690a3d3fdd9dbd3e901\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6826b419-2896-3639-bdcd-b967715a4c03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCollections",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/allCollections"
            }
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "0c65e0c0-0adb-3f8c-8113-5dc8acfcc08c",
    "name" : "EDGE - Fetch all edges - 400",
    "request" : {
      "urlPath" : "/api/v/2/edges/npbb0n0sc86usog18z7cfapubfxd7i2bm3shlwv5p8yzng8c5dnohvefibhivhwgp8ksuu7izonqejx4",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "xk32"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0c65e0c0-0adb-3f8c-8113-5dc8acfcc08c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllEdges"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "a513891a-aecf-3b2b-9010-a8971d0b58b0",
    "name" : "EDGE - Fetch all edges - 200",
    "request" : {
      "urlPath" : "/api/v/2/edges/knvsd2rjuapc5u8peyp92pcr3uhr34ozepwxf6pr02ijp0hkv2bops7kgqnvtgyhow7vlt51auwgj6avycbdzsh9cdwqjlde9ivdszjm0w5yavk2u5zdjofzz",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "4bnk"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a513891a-aecf-3b2b-9010-a8971d0b58b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAllEdges"
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "ed115017-c874-3f6e-9c0d-4fbe52b337e9",
    "name" : "DEVICES - Adds a device - 500",
    "request" : {
      "urlPath" : "/api/v/2/devices/l2rlwr1d02qn8fotc42xfqa7ffg89q5nqreg505fslmbsywxoestaczrmp7vlgfnagz2c8g2bh52xk4u9r5933wifrfb80uzlle9au5qaez0qe7eqdu1wheo5socghmmypij0zkb8sspjnpyg9zxawbk8cdiqnf15qxewh1km6bpvwbtivgx2wlzlmfaj72gvqt8w7h/Jamar+Kub",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ed115017-c874-3f6e-9c0d-4fbe52b337e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddDevice"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "977dc0ae-8bed-3384-9b79-fa3619b3f87c",
    "name" : "DEVICES - Adds a device - 401",
    "request" : {
      "urlPath" : "/api/v/2/devices/nu90pbjgknla5y9wbszlikdpgynb5074liep0ugwlrtso3gxzs5w48vhlf4cp6e9zbmzpv4gjmf7ua7psbldqjqzydxfyjf799w55acefjn8w33u4to9labc2y/Anthony+Streich+III",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "977dc0ae-8bed-3384-9b79-fa3619b3f87c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddDevice"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "83874379-4864-31a6-a616-8a0f29e654f7",
    "name" : "DEVICES - Adds a device (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/6leg1lgzut0lvc7bq3kkhqwacvkgu8omttg7iylsyrd14v4gb6svvhwzhdh0goxsj1ijrwoqpln3fac9tst1dbssyxtx9s9byx4glqyxv96vrz3z7f12cqon5t0lh3ey3xm/Jewel+Goodwin",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83874379-4864-31a6-a616-8a0f29e654f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "b18b13f7-51c2-36ab-9990-9ab35f41d275",
    "name" : "DEVICES - Adds a device (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/a6yd6ugh188ldvfrmofhga6d1f4gf1u8b83ehtqeszrkalfbpdof15y3ak3azcpp9m1qav17lzjdi3atj/Miss+Nanci+Klocko",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: device_name\",\n  \"allow_key_auth\" : true,\n  \"last_active_date\" : 1574445864,\n  \"certificate\" : \"\",\n  \"name\" : \"device_name\",\n  \"description\" : \"This device is a sensor\",\n  \"system_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"created_date\" : 1574445666,\n  \"state\" : \"On\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b18b13f7-51c2-36ab-9990-9ab35f41d275",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddDevice",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_key_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "certificate" : {
                "type" : "string",
                "example" : ""
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1574445666
              },
              "description" : {
                "type" : "string",
                "example" : "This device is a sensor"
              },
              "device_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: device_name"
              },
              "enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1574445864
              },
              "name" : {
                "type" : "string",
                "example" : "device_name"
              },
              "state" : {
                "type" : "string",
                "example" : "On"
              },
              "system_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "20b23b82-aa19-3445-bc49-11f9c906f975",
    "name" : "DEVICES - Update info - 500",
    "request" : {
      "urlPath" : "/api/v/2/devices/7nodni1uz0end0xe9imlzyhi7tpy49oa8p7kdsgszrv2k39pga6ft/Kiesha+Lehner",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "20b23b82-aa19-3445-bc49-11f9c906f975",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeviceInfo"
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "97b9813e-5d69-3e5b-b1fe-fdfd687685fa",
    "name" : "DEVICES - Update info - 401",
    "request" : {
      "urlPath" : "/api/v/2/devices/3jcfzlruw9nrnk2kalrp6p9g1tduli95ygqvc6ie4w76p4x7v5nf2nq8t15317sptlgcnkl222ovgah964gjqv724gkonpl5077hhg7nk5no1vcoabtmzsm3v0ng2305776uhqr2ca3zjbgt5gj78s9v5wmvuxh8nrhg1pmtgihkwd377hliy7pyygc1hc/Myong+Schumm",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "97b9813e-5d69-3e5b-b1fe-fdfd687685fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeviceInfo"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "372a321e-f2ed-3a9e-a554-b1902e58722e",
    "name" : "DEVICES - Update info (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/rr7cqsy5m3/Ernest+Reinger",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "372a321e-f2ed-3a9e-a554-b1902e58722e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeviceInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "84e5d95f-71a2-36e2-979e-67033b816210",
    "name" : "DEVICES - Update info (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/6t8593ppu5auwoevg2mmrszw0a1kqsrj0eu/Otha+Veum",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: device_name\",\n  \"allow_key_auth\" : true,\n  \"last_active_date\" : 1574445864,\n  \"certificate\" : \"\",\n  \"name\" : \"device_name\",\n  \"description\" : \"This device is a sensor\",\n  \"system_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"created_date\" : 1574445666,\n  \"state\" : \"On\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84e5d95f-71a2-36e2-979e-67033b816210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDeviceInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_key_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "certificate" : {
                "type" : "string",
                "example" : ""
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1574445666
              },
              "description" : {
                "type" : "string",
                "example" : "This device is a sensor"
              },
              "device_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: device_name"
              },
              "enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1574445864
              },
              "name" : {
                "type" : "string",
                "example" : "device_name"
              },
              "state" : {
                "type" : "string",
                "example" : "On"
              },
              "system_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "f5c4c7e5-2b68-3d9e-b35e-6e52a9e2bd3e",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/m3q9s3ods0994vdgblwms08fg4ntus5jxdecueofiis9jnw5rge1nespuk89xc2pkvclycuz6243mhd6de5gau7ot86up5nsfhhe10g50r2gl4opya5qiembanmc4c1geg9ij90579hnstp3hgqfn4kpf2gmkoqmyz3fk6hc79jdbpkd/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5c4c7e5-2b68-3d9e-b35e-6e52a9e2bd3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "1f914fdd-3569-32cb-95a5-089796921a32",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/uonykjnvl1xxd0cuv8hx2w6sjh3cebcdfj29cvme02corzedtlhd5ylmo49la5sohv4bwg5engq8utxdv1hfa7a8dnw55o7q4jj976tl0oz4q12zdn96ejpn717zbmislk03c1lhc6zm3jcm70pj3yq1l7otc4tt/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f914fdd-3569-32cb-95a5-089796921a32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "6f3f1e76-c434-3aec-baf1-6c01494bafc6",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/40e53pbsayop9d27j3t6kvzfbghwn0iibfuceiq6pauagp375gzjdwa0be07jhtuoe8hb8lu0c95z4xnzbw1ewypqomcs3inw760dsnl7b7gn/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f3f1e76-c434-3aec-baf1-6c01494bafc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "067d3798-80a5-3ca7-980c-3f9f17d15d5f",
    "name" : "DEVICES - Authenticate device",
    "request" : {
      "urlPath" : "/api/v/2/devices/bn4c6l5kbc7ptywimoonsmqghv/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deviceName\" : \"BLEdevice\",\n  \"expiresAt\" : 1589313683,\n  \"deviceToken\" : \"1dBfevzh0-lLVbZwx9DbyTLPyw-8F0RDq3qeUGqwinr8x3-bKMXLpfyliRSXsre5KxMn76CuChFQANoEEg==\",\n  \"refreshToken\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "067d3798-80a5-3ca7-980c-3f9f17d15d5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthDevice",
          "schema" : {
            "type" : "object",
            "properties" : {
              "deviceName" : {
                "type" : "string",
                "example" : "BLEdevice"
              },
              "deviceToken" : {
                "type" : "string",
                "example" : "1dBfevzh0-lLVbZwx9DbyTLPyw-8F0RDq3qeUGqwinr8x3-bKMXLpfyliRSXsre5KxMn76CuChFQANoEEg=="
              },
              "expiresAt" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "refreshToken" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "385ece0c-af82-3eda-a070-d5c5dceb0591",
    "name" : "DEVICES - Delete devices using a query (application/json)",
    "request" : {
      "urlPath" : "/api/v/2/devices/q2t5tyunmtwfijvue2dtk9n6wouxppsmaxiccqax4ddghtah4u2je1188he31vcikvov5mq8zw4jf771",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "query" : {
          "equalTo" : "m33v2q3hqdgut3yixzhwzh6cml74wcq14gd"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "385ece0c-af82-3eda-a070-d5c5dceb0591",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDevices",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "7aab830b-530a-38f8-9dde-51ca6e134421",
    "name" : "DEVICES - Delete devices using a query - 200",
    "request" : {
      "urlPath" : "/api/v/2/devices/0116rheh2jhb9x",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "jflf2"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7aab830b-530a-38f8-9dde-51ca6e134421",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDevices"
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "49bc0e2b-9a78-3de2-ac18-de43006c5ffd",
    "name" : "DEVICES - Update devices using a query",
    "request" : {
      "urlPath" : "/api/v/2/devices/m7rr2zrgwdbhc1i9r0bd72wkpmp8d36t98qafeb3d6386y59jhcfnycz4a7bgmw1yp4grwx6zfg5kcuili0ns8gss4ktun2wvktzexk283x",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49bc0e2b-9a78-3de2-ac18-de43006c5ffd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDevices",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "0b87ca67-31f4-3ebd-a426-d58c0092c1cf",
    "name" : "DEVICES - Update devices using a query",
    "request" : {
      "urlPath" : "/api/v/2/devices/3ziepbwzl7hs0rl3kilaw5wgq17e",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 5677944677168256945,\n  \"DATA\" : [ { }, { }, { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b87ca67-31f4-3ebd-a426-d58c0092c1cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDevices",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DATA" : {
                "type" : "array",
                "description" : "An array containing each row returned by a query",
                "items" : {
                  "type" : "object"
                }
              },
              "TOTAL" : {
                "type" : "integer",
                "description" : "The number of rows affected by a query"
              }
            },
            "description" : "An object representing a SQL query result set."
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "32a8f084-e574-3ce9-9bf0-cf533a683a86",
    "name" : "DEVICES - Get all devices",
    "request" : {
      "urlPath" : "/api/v/2/devices/btu4x4z7ktsrjaxfbaimcong58imp7l7u",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32a8f084-e574-3ce9-9bf0-cf533a683a86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDevices",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "502a5e73-34f1-364f-ae3b-fd566d14c0ca",
    "name" : "DEVICES - Get all devices",
    "request" : {
      "urlPath" : "/api/v/2/devices/lzj3pjc7lhssvn9bowjmiradh4yigk9hbszyrrd1idmay1kqhpwnkp65kpjn5vcnmd5yhhj4lbccac9hqvcjum49bsul8bcz9uxzdrvldyh3ltom8c6zu6eh6k774qjnkvkzla41zay98w5jtg42mljx86u6vprpg9ef3h66qkvybs4qphr53379",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"device_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301 :: device_name\",\n  \"allow_key_auth\" : true,\n  \"last_active_date\" : 1574445864,\n  \"certificate\" : \"\",\n  \"name\" : \"device_name\",\n  \"description\" : \"This device is a sensor\",\n  \"system_key\" : \"c0f8e2c50bbeeafb87f5efa2eee301\",\n  \"created_date\" : 1574445666,\n  \"state\" : \"On\",\n  \"type\" : \"sensor\",\n  \"enabled\" : true,\n  \"allow_certificate_auth\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "502a5e73-34f1-364f-ae3b-fd566d14c0ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDevices",
          "schema" : {
            "type" : "object",
            "properties" : {
              "allow_certificate_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "allow_key_auth" : {
                "type" : "boolean",
                "example" : true
              },
              "certificate" : {
                "type" : "string",
                "example" : ""
              },
              "created_date" : {
                "type" : "integer",
                "example" : 1574445666
              },
              "description" : {
                "type" : "string",
                "example" : "This device is a sensor"
              },
              "device_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301 :: device_name"
              },
              "enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "last_active_date" : {
                "type" : "integer",
                "example" : 1574445864
              },
              "name" : {
                "type" : "string",
                "example" : "device_name"
              },
              "state" : {
                "type" : "string",
                "example" : "On"
              },
              "system_key" : {
                "type" : "string",
                "example" : "c0f8e2c50bbeeafb87f5efa2eee301"
              },
              "type" : {
                "type" : "string",
                "example" : "sensor"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "d2191556-f3f9-34e9-8852-ea2b999f2015",
    "name" : "USERS - Register new user - 500",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d2191556-f3f9-34e9-8852-ea2b999f2015",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegUser"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "eebb7472-028e-3069-b360-b9cc996c6e32",
    "name" : "USERS - Register new user - 401",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "eebb7472-028e-3069-b360-b9cc996c6e32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegUser"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "90d3ffd2-2127-316b-9015-d52790eed54d",
    "name" : "USERS - Register new user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90d3ffd2-2127-316b-9015-d52790eed54d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegUser",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "3a622430-041f-3828-9b14-e4ad20d95b72",
    "name" : "USERS - Register new user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/reg",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n  \"options\" : \"\",\n  \"creation_date\" : \"2019-09-11T18:41:15Z\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\",\n  \"email\" : \"cbman@clearblade.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a622430-041f-3828-9b14-e4ad20d95b72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegUser",
          "schema" : {
            "type" : "object",
            "properties" : {
              "creation_date" : {
                "type" : "string",
                "example" : "2019-09-11T18:41:15Z"
              },
              "email" : {
                "type" : "string",
                "example" : "cbman@clearblade.com"
              },
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "options" : {
                "type" : "string",
                "example" : ""
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "ce81b8dd0bf6fea6cec6d3c19774"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "3c6d80f8-abd9-366c-8a0d-23d8e5d0a3af",
    "name" : "USERS - Change user password (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c6d80f8-abd9-366c-8a0d-23d8e5d0a3af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserPass",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "e8628adc-6197-3b65-a384-10cd9aa1e0b0",
    "name" : "USERS - Change user password (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8628adc-6197-3b65-a384-10cd9aa1e0b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserPass",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "3c7d599c-167e-380b-9752-e6d58294eb6e",
    "name" : "USERS - Change user password (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c7d599c-167e-380b-9752-e6d58294eb6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserPass",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "cbf87eda-ffcb-33c0-bf94-b31f99814574",
    "name" : "USERS - Change user password - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/pass",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cbf87eda-ffcb-33c0-bf94-b31f99814574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserPass"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "ccd762e4-dd76-3f41-a506-ab6f8fdbec15",
    "name" : "USERS - Log out user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ccd762e4-dd76-3f41-a506-ab6f8fdbec15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserLogout",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "bfd14c0c-dcc9-3e08-b336-72c659753d85",
    "name" : "USERS - Log out user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfd14c0c-dcc9-3e08-b336-72c659753d85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserLogout",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "00f4d5fd-0a74-3952-b06b-08b5d6b29c73",
    "name" : "USERS - Log out user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00f4d5fd-0a74-3952-b06b-08b5d6b29c73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserLogout",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "59bb2464-7045-34b9-8ab3-d6b06d97a146",
    "name" : "USERS - Log out user - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/logout",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "59bb2464-7045-34b9-8ab3-d6b06d97a146",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserLogout"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "1da54e9c-63bb-364f-899f-501da6d1723e",
    "name" : "Allows an user with adequate permissions to delete another user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1da54e9c-63bb-364f-899f-501da6d1723e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUserAsUser",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "c84a60fb-2147-39a3-b352-5d42d04150bd",
    "name" : "Allows an user with adequate permissions to delete another user - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c84a60fb-2147-39a3-b352-5d42d04150bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUserAsUser"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "d6910476-6ab5-32e2-b682-425a97c8c860",
    "name" : "USERS - Update user info (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6910476-6ab5-32e2-b682-425a97c8c860",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "e0288b8f-bf02-3101-b222-db3eec7bad81",
    "name" : "USERS - Update user info (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0288b8f-bf02-3101-b222-db3eec7bad81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "bf05f404-d44f-317e-968d-55fdef1c0571",
    "name" : "USERS - Update user info (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf05f404-d44f-317e-968d-55fdef1c0571",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "2faee158-b756-3361-ab03-50ce07c8d630",
    "name" : "USERS - Update user info - 200",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2faee158-b756-3361-ab03-50ce07c8d630",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateUserInfo"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "7dbedd53-7863-31f0-ae80-38600b9a9f9e",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dbedd53-7863-31f0-ae80-38600b9a9f9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "bda3112f-a750-3213-99af-78e96b5b06fd",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bda3112f-a750-3213-99af-78e96b5b06fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "aabf1d02-6bd9-3b77-8a07-cbde13bd5e44",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aabf1d02-6bd9-3b77-8a07-cbde13bd5e44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "ed531c6d-7938-33a0-ab99-75364c901aeb",
    "name" : "USERS - Get user info",
    "request" : {
      "urlPath" : "/api/v/1/user/info",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n  \"creation_date\" : \"2019-09-11T18:41:15Z\",\n  \"email\" : \"cbman@clearblade.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed531c6d-7938-33a0-ab99-75364c901aeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "creation_date" : {
                "type" : "string",
                "example" : "2019-09-11T18:41:15Z"
              },
              "email" : {
                "type" : "string",
                "example" : "cbman@clearblade.com"
              },
              "user_id" : {
                "type" : "string",
                "example" : "ce81b8dd0bf6fea6cec6d3c19774"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "7ee0d3dd-3f75-3523-ba60-dbb52d9ffd2e",
    "name" : "USERS - Check user auth - 500",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7ee0d3dd-3f75-3523-ba60-dbb52d9ffd2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserCheckAuth"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "643cb66d-3823-3a87-9bbd-8481cb8364c0",
    "name" : "USERS - Check user auth - 401",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "643cb66d-3823-3a87-9bbd-8481cb8364c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserCheckAuth"
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "67028bbe-9a1c-3467-a6e5-2fa4bd87f73b",
    "name" : "USERS - Check user auth - 400",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "67028bbe-9a1c-3467-a6e5-2fa4bd87f73b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserCheckAuth"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "d4903652-9977-3e61-b4b4-81823357322f",
    "name" : "USERS - Check user auth (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/checkauth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is_authenticated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4903652-9977-3e61-b4b4-81823357322f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserCheckAuth",
          "schema" : {
            "type" : "object",
            "properties" : {
              "is_authenticated" : {
                "type" : "boolean",
                "example" : true
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "b22995fb-7ea3-33ff-90e2-8ecf00c78818",
    "name" : "USERS - Authenticate user - 500",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b22995fb-7ea3-33ff-90e2-8ecf00c78818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthUser"
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "3e25420f-6863-3a4f-9a92-b8b262bda249",
    "name" : "USERS - Authenticate user - 401",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3e25420f-6863-3a4f-9a92-b8b262bda249",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthUser"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "06abb50b-c491-39e4-a69a-8590ea6c9438",
    "name" : "USERS - Authenticate user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06abb50b-c491-39e4-a69a-8590ea6c9438",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthUser",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "96bb8082-5c2b-3d1e-84e9-e1cfa93f5cf9",
    "name" : "USERS - Authenticate user (application/json)",
    "request" : {
      "urlPath" : "/api/v/1/user/auth",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96bb8082-5c2b-3d1e-84e9-e1cfa93f5cf9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthUser",
          "schema" : {
            "type" : "object",
            "properties" : {
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "ce81b8dd0bf6fea6cec6d3c19774"
              },
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "7d788426-9fb7-362a-972b-326ce21807a9",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d788426-9fb7-362a-972b-326ce21807a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "59e68b4d-6f1c-3111-9762-2df9a038a3cd",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59e68b4d-6f1c-3111-9762-2df9a038a3cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "d61c8245-9a96-3df2-9c1f-d5c437b52ddf",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d61c8245-9a96-3df2-9c1f-d5c437b52ddf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "a5f98d69-35ff-34ed-82fe-0ec7feb93182",
    "name" : "USERS - Authenticate anonymous user",
    "request" : {
      "urlPath" : "/api/v/1/user/anon",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"user_token\" : \"jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA==\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5f98d69-35ff-34ed-82fe-0ec7feb93182",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthAnon",
          "schema" : {
            "type" : "object",
            "properties" : {
              "user_token" : {
                "type" : "string",
                "example" : "jt-w5IiOOnhuSp8hJbanB2Tluj_ShXphjAta0_6_mAcUPSbatjFRYr1m5Ojl4skSOZ3txbbkFWArnUnfNA=="
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "b89a7b88-ea5d-367d-b977-652c6239860c",
    "name" : "USERS - Get all users",
    "request" : {
      "urlPath" : "/api/v/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b89a7b88-ea5d-367d-b977-652c6239860c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUsers",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "0f244927-7a05-3c2e-81f6-49937b78579f",
    "name" : "USERS - Get all users",
    "request" : {
      "urlPath" : "/api/v/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f244927-7a05-3c2e-81f6-49937b78579f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUsers",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "501b690d-42c1-3e5b-8373-3dc6adc76211",
    "name" : "USERS - Get all users",
    "request" : {
      "urlPath" : "/api/v/1/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Total\" : 1,\n  \"Data\" : [ {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  }, {\n    \"user_id\" : \"ce81b8dd0bf6fea6cec6d3c19774\",\n    \"creation_date\" : \"2019-09-11T18:41:15Z\",\n    \"email\" : \"cbman@clearblade.com\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "501b690d-42c1-3e5b-8373-3dc6adc76211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUsers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Data" : {
                "$ref" : "#/components/schemas/getUsersData"
              },
              "Total" : {
                "type" : "integer",
                "example" : 1
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "cd666c17-5b1e-30b8-8e60-36bf6cf6c30b",
    "name" : "MESSAGING - Publish message - 200",
    "request" : {
      "urlPath" : "/api/v/1/message/qzl0i3nhpabgby59xnlaajdlzo1a8eiab2d9o77iu0kpw2b8pgtne13r33gm16wd2vemjj01e0wzpo5fs1keb15d0iq0byehztcvi0nnerymu2xdsa6uk2fvbhd5z01mulcwrsgjogbiq5cfbxgcea0de9w4ktlpvmkoe4b4lz1u26avbt578kxf2xbyv96s24e4ww/publish",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cd666c17-5b1e-30b8-8e60-36bf6cf6c30b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "PublishMessage"
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "78d3e6df-a766-3891-a68f-44a72191293c",
    "name" : "MESSAGING - Delete history - 200",
    "request" : {
      "urlPath" : "/api/v/1/message/yvun7w8x70un4yd5b19sbyv9z0uhs84kx7awmecahtutjjc7gi1kuywsopod875ftbwt7yv6g6vkd03wgdez5jqs8ocg4vss2i0q6k1zfd7s60bwsd7zg49txapyeg95",
      "method" : "DELETE",
      "queryParameters" : {
        "count" : {
          "equalTo" : "7cqobc2ng3fko18sbl7y7hdtgu01q4izoj95jl63cweb3d1id6ifped8fah11st9wcir3eq9fhoo31gx7d24l47e3h9uo2h59xe88q81xy2ly29rpl"
        },
        "topic" : {
          "equalTo" : "0ezrjz8cuisx12wj20bwyjhf1ft1tox2eb4uwnsswix4snf82cwxd0y59zc9l2z6625lmvyvipgrpfdv3gzfziwgevv04qcwlc3ns5kf04g3so0itw9uo13l512y40itq4a1g2tz0i3zyofv74y7w9bk14kisoa6xaa2t1mn58q41wuslxtiaq4qy1n53l9df66ry"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "78d3e6df-a766-3891-a68f-44a72191293c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteMessageHistory"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "cd28483a-9d95-32f9-bc79-f535ea7e5b58",
    "name" : "MESSAGING - Get history - 200",
    "request" : {
      "urlPath" : "/api/v/1/message/9xmffpfx6zar6xim7g8fzdr7anu43su88dykllesoe3mdhwodsyrbtauu9slomp5pnytdjhd314ilm0pdk5qv4rneka",
      "method" : "GET",
      "queryParameters" : {
        "count" : {
          "equalTo" : "qz5fgrbnakjahmgtefx4nmy6jaxim9cjjjv8phvkhmaaaqcr8n7sj67wkq836wwyn0a4izx4d23djfdrs7486ki0k8nhabn43ztpjiv51y1r6kw0s6jg2g0m521o4hf9d75w7tiips8s1zhqyt40rnik9"
        },
        "topic" : {
          "equalTo" : "ao6n1meifdk4grf73h1wbd1izgw5apoqt4ufi9mptpdimur6iwrxrl8642hs699qpimqeixv6mbrk4awtyijhc77dltgotwgf5qj60p3pi2cvl"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "cd28483a-9d95-32f9-bc79-f535ea7e5b58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetMessageHistory"
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "b95341e9-73c0-3b9b-91f9-95f700cc5e68",
    "name" : "DATA(id) - Get columns",
    "request" : {
      "urlPath" : "/api/v/1/data/n0ci/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b95341e9-73c0-3b9b-91f9-95f700cc5e68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetColumns",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "5707a190-4ef6-3c7e-979f-7ad12f869c23",
    "name" : "DATA(id) - Get columns",
    "request" : {
      "urlPath" : "/api/v/1/data/7gk0/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"ColumnName\" : \"item_id\",\n  \"ColumnType\" : \"int\",\n  \"PK\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5707a190-4ef6-3c7e-979f-7ad12f869c23",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetColumns",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/columnObject"
            }
          }
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "1f55a48b-186d-37b9-bc90-07cd56a53444",
    "name" : "DATA(id) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/data/6yg6",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "wc2wlv75igsflp1ud2yya79ryv43qj0kcbhhhz53kanptwk5dncsvx7m8tgslnk7ttc2xxl4jlkr37phnxppvkda1ystf9ktp4l0ix28bhbzb5u9naed1jrb9yc5o5189nuue5waoedhrzs04ghri0rsb1r1g2rop3ctzjg8x5gflthzv50jow8z"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f55a48b-186d-37b9-bc90-07cd56a53444",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "cb5c81ab-22c1-3220-b595-6c07f636690c",
    "name" : "DATA(id) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/data/67jf",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "80442d3vve7j6tvifjv9gswunbzi1e6m2g36lz3n3y2ytjpezrhxwr08z320zi7gstvbewzh0j7baudcsp9af3ql1uih9p7zx46u950z983pbiu0unyzf6qh66zlxq99prtpauheytlx2q4quryaeix0hh0p173oxlb9x7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb5c81ab-22c1-3220-b595-6c07f636690c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCollectionDataAlt",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "1386fa8e-9f01-38be-86d1-b2eb914c3764",
    "name" : "DATA(id) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/data/es25",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1386fa8e-9f01-38be-86d1-b2eb914c3764",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "178552e1-3727-3c8e-a7b5-f42e87e03049",
    "name" : "DATA(id) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/data/gly7",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "178552e1-3727-3c8e-a7b5-f42e87e03049",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCollectionDataAlt",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemID"
            }
          }
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "5cec4fa3-afda-3df4-89d0-44e3f0e9c521",
    "name" : "DATA(id) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/data/8oxu",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cec4fa3-afda-3df4-89d0-44e3f0e9c521",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "3c7240fc-9bbd-3ec5-aff4-61a6ba56c974",
    "name" : "DATA(id) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/data/65sm",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c7240fc-9bbd-3ec5-aff4-61a6ba56c974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateCollectionDataAlt",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "3c0678e7-743e-3e01-8b86-4d25986d1466",
    "name" : "DATA(id) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/data/574w",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c0678e7-743e-3e01-8b86-4d25986d1466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCollectionDataAlt",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "6aa6d145-3989-3bd7-bf03-e6f4da89ada8",
    "name" : "DATA(id) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/data/uj04",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 2,\n  \"NEXTPAGEURL\" : \"/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D\",\n  \"DATA\" : [ {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  }, {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  }, {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  }, {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  } ],\n  \"PREVPAGEURL\" : 1,\n  \"CURRENTPAGE\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6aa6d145-3989-3bd7-bf03-e6f4da89ada8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCollectionDataAlt",
          "schema" : {
            "required" : [ "CURRENTPAGE", "NEXTPAGEURL", "PREVPAGEURL", "TOTAL" ],
            "type" : "object",
            "properties" : {
              "CURRENTPAGE" : {
                "type" : "integer",
                "example" : 2
              },
              "DATA" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/dataArray"
                }
              },
              "NEXTPAGEURL" : {
                "type" : "string",
                "example" : "/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D"
              },
              "PREVPAGEURL" : {
                "type" : "integer",
                "example" : 1
              },
              "TOTAL" : {
                "type" : "integer",
                "example" : 2
              }
            },
            "description" : "Collection success response body"
          }
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "f24cf185-7a74-382a-b394-ad1eaaca99f6",
    "name" : "DATA(name) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/collection/oliopqbc3bqe1p75fd6epb1j1pudz3zc1bzdlffzrujrfggrdp9bx6arih9grbdikvuan1najcyq31d6zmxy3c0ppeini3e2yl4cao1oyxtye5x1a7l0vpzkmccak6jkgnbnjnitiy3kv6lkn1m589v46kb4wy3x029v94dhuic0n95zg/Mr.+Jayson+Mills",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "3zo5032f43nfscv"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f24cf185-7a74-382a-b394-ad1eaaca99f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "69e93e8d-06d4-3758-ba18-24bf429fe0d5",
    "name" : "DATA(name) - Delete items",
    "request" : {
      "urlPath" : "/api/v/1/collection/6yrjrp5bqbh4pc6cgxm1ocf7mtue78qdhvuqwuymi2olko7jvl52gfr/Liza+Romaguera",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "llit27aof"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69e93e8d-06d4-3758-ba18-24bf429fe0d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCollectionData",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "34e6623e-57d8-37e4-8f4b-56031dc4981b",
    "name" : "DATA(name) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/collection/6cp5xauic580fhbz1bdvb3rak9s6zh0g34j2t2amsu7cqpogzfx6fznxmeiifvrb32ba7njcw2cgwet56z5a49azoij99sabo9fvznalzlguab8hoinr1xyukrqmorawwlt/Fernando+Nienow",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34e6623e-57d8-37e4-8f4b-56031dc4981b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "36662462-4fd4-3c19-84f7-669129767e92",
    "name" : "DATA(name) - Create items",
    "request" : {
      "urlPath" : "/api/v/1/collection/mk0z6fk4icmqx3inculpdsgeh1iv8xpgk7qno6fcsfrs76pdgjt5eux4ryr/Lashanda+Hane+Jr.",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n}, {\n  \"item_id\" : \"6e0227d8-8a98-454a-951d-a109f813a397\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36662462-4fd4-3c19-84f7-669129767e92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateCollectionData",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/ItemID"
            }
          }
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "52d3b1a2-f835-3892-a975-f073c22d21b1",
    "name" : "DATA(name) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/collection/zwxkr3zjad1hbjwk66kpfu1jzwc89t9twb44uyhhm0iikvs4hwps/Joline+Feeney",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52d3b1a2-f835-3892-a975-f073c22d21b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "3fa3f79f-ed46-3dbc-bdaa-c9de597382e0",
    "name" : "DATA(name) - Update items",
    "request" : {
      "urlPath" : "/api/v/1/collection/r0xz304n6d5310bhlwf9hxop715ersdspahkprjwdmejfb7c34v3kvcnuuaez4miv0hl6wkdu15pv9eoiymr1pn7hrrrj58jxjji/Natalya+Shields",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fa3f79f-ed46-3dbc-bdaa-c9de597382e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateCollectionData",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "c5b9e78f-e5b1-3f30-8a4b-e6398968a0cc",
    "name" : "DATA(name) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/collection/xgvlv021xctvdyuj6uh238tg7suksurm1a27un7foo/Rusty+Kessler",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5b9e78f-e5b1-3f30-8a4b-e6398968a0cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "6820306c-5e48-3880-bf58-23724b2f268f",
    "name" : "DATA(name) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/collection/sacf1593olv9s3funtosv057lf6b8j6scot53zkyexix9irhs8lq92i8jz8yad0byqjtn6wmux28p0tock0wrzuuexvul7f8aelmcqi5w9k1n02c8xmpe4m3xou9htukz1kr0cpbpt0/Dr.+Kathrine+Kling",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6820306c-5e48-3880-bf58-23724b2f268f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCollectionData",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "604ca1a0-b590-352a-8ae1-d746a4ca7b64",
    "name" : "DATA(name) - Get items",
    "request" : {
      "urlPath" : "/api/v/1/collection/90w0pr8348q66hp6fllinkhti/Katharine+Senger",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 2,\n  \"NEXTPAGEURL\" : \"/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D\",\n  \"DATA\" : [ {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  }, {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  }, {\n    \"row1\" : \"row1_data\",\n    \"row2\" : \"row2_data\"\n  } ],\n  \"PREVPAGEURL\" : 1,\n  \"CURRENTPAGE\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "604ca1a0-b590-352a-8ae1-d746a4ca7b64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCollectionData",
          "schema" : {
            "required" : [ "CURRENTPAGE", "NEXTPAGEURL", "PREVPAGEURL", "TOTAL" ],
            "type" : "object",
            "properties" : {
              "CURRENTPAGE" : {
                "type" : "integer",
                "example" : 2
              },
              "DATA" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/dataArray"
                }
              },
              "NEXTPAGEURL" : {
                "type" : "string",
                "example" : "/api/v/1/data/a8eeb8db0b8aebf2d7f186d89348?query=%7B%22FILTERS%22%3A%5B%5D%2C%22PAGENUM%22%3A2%2C%22PAGESIZE%22%3A100%2C%22SELECTCOLUMNS%22%3Anull%2C%22SORT%22%3A%5B%5D%7D"
              },
              "PREVPAGEURL" : {
                "type" : "integer",
                "example" : 1
              },
              "TOTAL" : {
                "type" : "integer",
                "example" : 2
              }
            },
            "description" : "Collection success response body"
          }
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "d555099c-bfca-378b-90d2-5ab0a81435c9",
    "name" : "CODE - Call/Execute code service - 500",
    "request" : {
      "urlPath" : "/api/v/1/code/vlzzvod9uq3xa9160z722ahfxo8apk773jzjgzf9parbko0c4esfcbtz6x9ujp95ldfi0zll6ad5xoaq4rd4n/Travis+Bradtke+V",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d555099c-bfca-378b-90d2-5ab0a81435c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteService"
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "a1b07588-92ce-37b8-9f6e-9f5535f16c05",
    "name" : "CODE - Call/Execute code service - 200",
    "request" : {
      "urlPath" : "/api/v/1/code/p2pnp6zlkua3z5w7pxn60cit1a7gwlybtg9bu1ejhgjowcxk0stsvgkesvlsylgvkquwci4helu5wmzl872emfb8scripyaleuogowj8bf8le69thsaskpp7zppxwjiov2bxhzkjjm0zrwzsro6i6j42jtvsjos/Tierra+Luettgen+III",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a1b07588-92ce-37b8-9f6e-9f5535f16c05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ExecuteService"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "3b4b9744-d93a-335b-a93d-6b6f8c25ac87",
    "name" : "CODE - Retrieve information about service - 500",
    "request" : {
      "urlPath" : "/api/v/1/code/8b0dgc04jwn6gqubfzuwykipvpot0y9qj0cyy1db26bn1ma5dzfsdg4ivaw8kh1l9cbiras61z3uptn69oi0dui7ndrppruprjjjdh26q8dp0tevi/Davis+Jenkins",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3b4b9744-d93a-335b-a93d-6b6f8c25ac87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetService"
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "182eb655-ef09-36fa-a074-2b6d0cb898ee",
    "name" : "CODE - Retrieve information about service - 200",
    "request" : {
      "urlPath" : "/api/v/1/code/4bgyhle9scx86ncv7zt07mxwop02w5g9lpcns1cw6gweare7ft6ts7yfzhr0wcndtvgpjl9sn50m2godu5qhzi89fot3f94mq5o4nl5yret40nedyibwdku345ep1unzxnk0j1bx1sgoorjt6hfj18ux21rw7mc1e0sd4u8e7j3mh4/Calvin+Bailey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "182eb655-ef09-36fa-a074-2b6d0cb898ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetService"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "7d2aff73-51c8-3b20-a731-027c8411e2e9",
    "name" : "DEVELOPER - Gets the information for the platform",
    "request" : {
      "urlPath" : "/api/about",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"about\" : \"ClearBlade Platform\",\n  \"buildId\" : \"a66297bca:485\",\n  \"version\" : \"9.0.0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d2aff73-51c8-3b20-a731-027c8411e2e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "APIInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "about" : {
                "type" : "object",
                "example" : "ClearBlade Platform"
              },
              "buildId" : {
                "type" : "string",
                "example" : "a66297bca:485"
              },
              "version" : {
                "type" : "string",
                "example" : "9.0.0"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "635eb2bd-0586-36fa-8a11-50d64a3eb3ee",
    "name" : "DEPLOYMENTS - Retries sync for an asset - 500",
    "request" : {
      "urlPath" : "/admin/p6smzo6ju3g8na5hw5cld849jpygc1pvgl22hsqivdhpivl1kn4ygrl4di6p5gj3lsdxqwdp211rplp0rl4dj1ynfjacrqpxs11chwld0ka9r8bab7miromdawi2izs0tw7v6bjfu9q39vszf804n5m4zqf7jfrcdguymbyka5/sync/retry",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "635eb2bd-0586-36fa-8a11-50d64a3eb3ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RetrySync"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "2e80ae06-d719-34b4-ab53-2385ebd09690",
    "name" : "DEPLOYMENTS - Retries sync for an asset - 200",
    "request" : {
      "urlPath" : "/admin/36homq4ahct711qgb7t2r12302wau7xdtiky3wy0pbtwwiy8j9ldhwnh9xsglezqlpnmcqzfpryg4kej0u0biap6k77irgu821qb69vnnoou63x9cx8856wjzk1olpniivl94bud1/sync/retry",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2e80ae06-d719-34b4-ab53-2385ebd09690",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RetrySync"
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "86ebab05-8928-33f4-8b3d-81c309639807",
    "name" : "EDGE - Gets sync status for an edge - 400",
    "request" : {
      "urlPath" : "/admin/5kz4106o45zz0g6gtqjb9hu5zgx1qzjl5bu7h3ldn1tzo1ukbzubftabmul3ue68zvmye5f5pkw52euhasg9kl3f7ncsrugxrjzwn2k66yhyu/sync/edge/status/Kevin+Koss",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "86ebab05-8928-33f4-8b3d-81c309639807",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EdgeSyncStatus"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "d564072b-287e-325b-be9e-2483ed5951f4",
    "name" : "EDGE - Gets sync status for an edge - 200",
    "request" : {
      "urlPath" : "/admin/0tn3bvk90aefx/sync/edge/status/Charla+Schimmel",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d564072b-287e-325b-be9e-2483ed5951f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EdgeSyncStatus"
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "168545ae-bd27-3fee-a29d-83ae88974210",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment - 500",
    "request" : {
      "urlPath" : "/admin/vpb1e64q87xg7b1jenn2mp2p543kckvj378snnl4jk7qcj0ps6ffeess1mehnqjj088og3ilxqtbu81bydnw9ue7q7779i/sync/deployment/status/Shana+Heathcote",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "168545ae-bd27-3fee-a29d-83ae88974210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSyncStatus"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "104d4f0a-8014-37a9-ac41-57709c266747",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment - 401",
    "request" : {
      "urlPath" : "/admin/g569awhkxsptp4kliwcr0lpahohc59tsaurhmzxqvllzdogevgnob3zzwcpjfcdoud9vuhhnn1rkm3tvefuok2yse11j4k0amz1zxudx9trcf2nehrsgzhw8h4u7ryqs0y6jk5xpprid98qsff5ebh7d0zkftlfjfr5pf6knrovt4qxpo36ki/sync/deployment/status/Rhett+Gottlieb",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "104d4f0a-8014-37a9-ac41-57709c266747",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSyncStatus"
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "24120f41-224d-341a-a145-e7df58b8dae3",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment (application/json)",
    "request" : {
      "urlPath" : "/admin/4af4zt3u69pi83kc77rgqdl3x0zwpykzinysrz1x8b2hdcedqap5z0ekfmxeq1kmsubcol2d2ld6mp9ozj69vd/sync/deployment/status/Dean+Cartwright+I",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24120f41-224d-341a-a145-e7df58b8dae3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSyncStatus",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "a798bb34-1d3b-38ab-aadb-ff1b8d74864e",
    "name" : "DEPLOYMENTS - Gets sync status for a deployment - 200",
    "request" : {
      "urlPath" : "/admin/bzdk0kcgfnhdwntgrtod4oakadgbwic64u0i0mzy43hw69k9zf9h6si69yvnhxv4rkf9u9bxv7q9vapiuqk4kk49yll7vlf1rpwpealmm7mp3xxogi3ijyujzbmjqdr9xdxiscvc27772bmray8jtpihoqg7m5njw8k1wbntpai2kjiez/sync/deployment/status/Silvia+Kub",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a798bb34-1d3b-38ab-aadb-ff1b8d74864e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSyncStatus"
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "a27c2ae5-3b40-379e-9fb7-3574463aec3a",
    "name" : "EDGE - Gets sync status for all edges - 400",
    "request" : {
      "urlPath" : "/admin/y530g859qyec81wi3ischf6qbqy69pu/sync/alledges/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "a27c2ae5-3b40-379e-9fb7-3574463aec3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AllEdgeSyncStatus"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "4ac6518d-5024-3fd3-bd34-0bbfc843abc6",
    "name" : "EDGE - Gets sync status for all edges - 200",
    "request" : {
      "urlPath" : "/admin/ai6047snvgu3641gh5xftd56rdjs6vhzk6y8uoja8who4d353o9yyytbiijmfa5dogsznydb1vck/sync/alledges/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4ac6518d-5024-3fd3-bd34-0bbfc843abc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AllEdgeSyncStatus"
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "95b7a2cd-1703-39ad-b870-3884d7bcb675",
    "name" : "2FA - Send validation link",
    "request" : {
      "urlPath" : "/admin/validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95b7a2cd-1703-39ad-b870-3884d7bcb675",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SendValidation",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "a73cfa5b-3c87-3c25-9ec4-49bf5eaaae61",
    "name" : "2FA - Send validation link",
    "request" : {
      "urlPath" : "/admin/validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a73cfa5b-3c87-3c25-9ec4-49bf5eaaae61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SendValidation",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "b86b9de5-2d65-37d8-8f57-3e1f91108064",
    "name" : "WEBHOOKS - Delete a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/ombg3tqj7qocxz2gmxpe85qpmt5u7i1kv3fcmhktej8qcu5jiepf/Thomas+Medhurst+V",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b86b9de5-2d65-37d8-8f57-3e1f91108064",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteWebhook",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "289db391-98fa-3d14-94fd-e23ab4be7e44",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/93bjf0bxt6aiaujpxb23vgbnn152rag6b4d5ie7ec5fscwze0wk0rc61nlnye9bqfe8y3l28bkcl2adqbre5b11px1my7am1vzttj87fm5verr3jjg7ntqoz17r47ojpwgg670pfw696tzkuzzdo3788a1rycwewsxhtl0zrhd20fjtuo3yev1zsp99yvh/Santos+Walsh",
      "method" : "POST"
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "289db391-98fa-3d14-94fd-e23ab4be7e44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "56ce7f05-1d4d-3373-aee6-ff37a4988829",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/vs7g08aier41qpixilp5njmaxsqq4xji67rwyrnf7n95h3xjanijx29r6k5i2xmosh1bdw5c5zd5ci9hwtrnvmftuc2s5isz7cttrvwsrx0q5jjcc7v06lnkkasn/Ms.+Dionne+Thompson",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56ce7f05-1d4d-3373-aee6-ff37a4988829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "453d1a0d-7696-33b8-8777-9f9e747b561a",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/0akqxdfnzex3l6ajd9qdq792lva1sm652klwwfesixf629h5595/Haywood+Hermiston",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "453d1a0d-7696-33b8-8777-9f9e747b561a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "1bc218aa-d734-343f-a78c-9460f45ecded",
    "name" : "WEBHOOKS - Creates a webhook",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/0yaavbgnw53cntjvt0sel0xjiqzvlnvm8ou1jy9u0clhrkbl40udgpv8ljmsbxbr5pfd6rmn5pt0suxhldnjg/Hassan+Rippin",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bc218aa-d734-343f-a78c-9460f45ecded",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateWebhook",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "bf771b04-8aed-38e1-b4c3-da83ab94276c",
    "name" : "WEBHOOKS - Update a webhook (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/fp5cfyqbb7e2l7k8o9mncmaoywq78a4caxmbs53806pbcaeq9c2x3y321wwftywtdgnn1tmgd1oagnlk/Isidro+Welch",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf771b04-8aed-38e1-b4c3-da83ab94276c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "e4807907-a079-3add-a257-9ab7d6eb0fec",
    "name" : "WEBHOOKS - Update a webhook (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/tsjlbxqv2rvfz9kk5v3zgqmqy1nf4yg4lunti4wqeten190q8vlrs6wsx8e8lsbbh8s7cq5w4b2/Dr.+Claud+Bernhard",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4807907-a079-3add-a257-9ab7d6eb0fec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "37ea2c5b-b084-3691-9d13-d91b7d73fdfb",
    "name" : "WEBHOOKS - Update a webhook (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/yslsc4iyt2fqc03jou5wvqz73mt2juogwi2/Dusty+Mayer",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37ea2c5b-b084-3691-9d13-d91b7d73fdfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateWebhook",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "eacb5f3b-83f2-3889-9880-ef3fd11c744e",
    "name" : "WEBHOOKS - Update a webhook - 200",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/cw3nhbcdy7q82nx8szoirpkj2udrjpfyxpnp5tx1pauxowep31vqajups9c17meqiquomll4l6tpc98gghwiqeiicj6oj4wh4al18bh0zy10hpfvv31lacve7e9wzehmhizwqj131uyi8zyokxopwr33p9vwu2wnj8chw9pr8z2ytsqqzlhfslsea1r55quflr8/Tiny+Bogan",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "eacb5f3b-83f2-3889-9880-ef3fd11c744e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateWebhook"
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "1269b15d-c424-3527-bdfc-be65f8b34ec1",
    "name" : "WEBHOOKS - Returns webhooks in the system - 401",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/0ned9hwywk7bpdc7wbf8jgg9273khe3tb8vkqcoeqc27nhiee3dqr1r0v4aed8mb2ljyazrdmii11yakfirgh89zmgb5amppurd8l4qdb5l271p0iv6hvira9fhl6j01a4utjdi01ibxtuasw3u96vzdg2hxn5ou36disrocdzi",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1269b15d-c424-3527-bdfc-be65f8b34ec1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetWebhooks"
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "acfb2d02-de63-3e2d-ba79-b963e1d061d3",
    "name" : "WEBHOOKS - Returns webhooks in the system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/m6n2usu7cn7qnimocpv5nc70z6u1z77mu",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acfb2d02-de63-3e2d-ba79-b963e1d061d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetWebhooks",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "5aed391f-2c08-3a21-b7d3-655795140117",
    "name" : "WEBHOOKS - Returns webhooks in the system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/webhook/6mu5a8ii7wx2xana52k4pabbksssps9sgt4hwrrnj8pf3cxaafx52zqm2o2rh77b42m4s6gcgkidw2c8v59gh0pni08h0g3kfmdzgzsxr6eb67iv4jc87qu5fuy5vztd9v9itnjvj9ji759fbii50t4i5m74a8plpwdjn",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"system_secret\" : \"CCAFB4CF0BBABDDCE3F2F1E6C3E601\",\n  \"auth_method\" : \"http_basic_auth\",\n  \"service_name\" : \"service_example\",\n  \"name\" : \"webhook_example\",\n  \"description\" : \"Webhook to get data\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"id\" : \"f2ca33c4-8bd0-45aa-af4a-da3467b451bc\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5aed391f-2c08-3a21-b7d3-655795140117",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetWebhooks",
          "schema" : {
            "type" : "array",
            "description" : "list of webhooks and properties",
            "items" : {
              "$ref" : "#/components/schemas/getWebhook"
            }
          }
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "96fc1588-1aae-3d6e-9de4-04c4b1f0eab4",
    "name" : "DEVELOPER - Delete system - 200",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "52hg"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "96fc1588-1aae-3d6e-9de4-04c4b1f0eab4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSystem"
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "e49df42c-0c81-3b3a-9c5a-63bfa7047470",
    "name" : "DEVELOPER - Create system - 400",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "e49df42c-0c81-3b3a-9c5a-63bfa7047470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSystem"
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "aa8944fc-bdae-3d19-bba6-2e0245db93a8",
    "name" : "DEVELOPER - Create system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"token_ttl_user\" : \"432000\",\n  \"token_ttl\" : \"432000\",\n  \"auth_service\" : \"\",\n  \"Dev\" : \"92f8dbbb0bccb3fff4be5cdb601\",\n  \"appId\" : \"a6e0f8e20bbefcec789de6b8f4cf01\",\n  \"reg_service\" : \"\",\n  \"name\" : \"ExampleSystem\",\n  \"token_ttl_device\" : \"432000\",\n  \"description\" : \"Here is my new system.\",\n  \"token_ttl_anon\" : 432000,\n  \"appSecret\" : \"A6E0F8E20BDEB0C2838EF2B6D09801\",\n  \"registration\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa8944fc-bdae-3d19-bba6-2e0245db93a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSystem",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Dev" : {
                "type" : "string",
                "description" : "Developer Id for the owner of the system",
                "example" : "92f8dbbb0bccb3fff4be5cdb601"
              },
              "appId" : {
                "type" : "string",
                "description" : "system key",
                "example" : "a6e0f8e20bbefcec789de6b8f4cf01"
              },
              "appSecret" : {
                "type" : "string",
                "description" : "system secret",
                "example" : "A6E0F8E20BDEB0C2838EF2B6D09801"
              },
              "auth_service" : {
                "type" : "string",
                "description" : "Configure the system to have all authentication requests go through a specific Code Service.",
                "example" : ""
              },
              "description" : {
                "type" : "string",
                "example" : "Here is my new system."
              },
              "name" : {
                "type" : "string",
                "example" : "ExampleSystem"
              },
              "reg_service" : {
                "type" : "string",
                "description" : "Configure the system to have all registration requests go through a specific Code Service.",
                "example" : ""
              },
              "registration" : {
                "type" : "string",
                "example" : ""
              },
              "token_ttl" : {
                "type" : "string",
                "description" : "ttl for developer tokens in seconds. Min - 86400   (1 day), Max- 2592000 (30 days), Default - 432000 Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_anon" : {
                "type" : "integer",
                "description" : "ttl for anonymous tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : 432000
              },
              "token_ttl_device" : {
                "type" : "string",
                "description" : "ttl for device tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_user" : {
                "type" : "string",
                "description" : "ttl for user tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              }
            },
            "description" : "System info"
          }
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "70220821-bc9a-3adb-bdc8-5be25f702c5f",
    "name" : "DEVELOPER - Update system info - 200",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "70220821-bc9a-3adb-bdc8-5be25f702c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSystem"
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "73664782-57fd-3179-815b-6b45c5ba36af",
    "name" : "DEVELOPER - Get system info - 400",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "p2mg"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "73664782-57fd-3179-815b-6b45c5ba36af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemInfo"
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "09dcf967-b17f-3181-9df3-03c98327d86d",
    "name" : "DEVELOPER - Get system info (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/systemmanagement",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "id" : {
          "equalTo" : "qw36"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"token_ttl_user\" : \"432000\",\n  \"token_ttl\" : \"432000\",\n  \"auth_service\" : \"\",\n  \"Dev\" : \"92f8dbbb0bccb3fff4be5cdb601\",\n  \"appId\" : \"a6e0f8e20bbefcec789de6b8f4cf01\",\n  \"reg_service\" : \"\",\n  \"name\" : \"ExampleSystem\",\n  \"token_ttl_device\" : \"432000\",\n  \"description\" : \"Here is my new system.\",\n  \"token_ttl_anon\" : 432000,\n  \"appSecret\" : \"A6E0F8E20BDEB0C2838EF2B6D09801\",\n  \"registration\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09dcf967-b17f-3181-9df3-03c98327d86d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Dev" : {
                "type" : "string",
                "description" : "Developer Id for the owner of the system",
                "example" : "92f8dbbb0bccb3fff4be5cdb601"
              },
              "appId" : {
                "type" : "string",
                "description" : "system key",
                "example" : "a6e0f8e20bbefcec789de6b8f4cf01"
              },
              "appSecret" : {
                "type" : "string",
                "description" : "system secret",
                "example" : "A6E0F8E20BDEB0C2838EF2B6D09801"
              },
              "auth_service" : {
                "type" : "string",
                "description" : "Configure the system to have all authentication requests go through a specific Code Service.",
                "example" : ""
              },
              "description" : {
                "type" : "string",
                "example" : "Here is my new system."
              },
              "name" : {
                "type" : "string",
                "example" : "ExampleSystem"
              },
              "reg_service" : {
                "type" : "string",
                "description" : "Configure the system to have all registration requests go through a specific Code Service.",
                "example" : ""
              },
              "registration" : {
                "type" : "string",
                "example" : ""
              },
              "token_ttl" : {
                "type" : "string",
                "description" : "ttl for developer tokens in seconds. Min - 86400   (1 day), Max- 2592000 (30 days), Default - 432000 Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_anon" : {
                "type" : "integer",
                "description" : "ttl for anonymous tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : 432000
              },
              "token_ttl_device" : {
                "type" : "string",
                "description" : "ttl for device tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              },
              "token_ttl_user" : {
                "type" : "string",
                "description" : "ttl for user tokens in seconds. Min - 3600   (1 hour), Max- 7776000 (90 days), Default - 432000 (5 days) Infinite - -1",
                "example" : "432000"
              }
            },
            "description" : "System info"
          }
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "dfaba6bc-5f2e-3338-a0b9-bde563c811b7",
    "name" : "SESSION  - Get user session count",
    "request" : {
      "urlPath" : "/admin/v/4/session/lczdolbvcr7jq9alk3wxi7osijb83aqis9gt9m305t59jsaqaxrmnm3q20w4thfdm9k7wwjrgfyx7sctwfcvpbkm6jna8nuclr6bae6/user/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfaba6bc-5f2e-3338-a0b9-bde563c811b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserSessionCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "be5a8560-5c9a-32cc-a9ef-201685289070",
    "name" : "SESSION  - Delete user session - 401",
    "request" : {
      "urlPath" : "/admin/v/4/session/7qq272qoax6wxrbw5dvoz4klk26muohqs8995c99coo0on71bsgxe6vdf6j2yq1or91od23wqkw9uztak61n52jhcsv84qes4azi0kp66jqv8ke1iwwnp0e55il6btkc3ttwyqmaxpjty2yv7lz45r5uf4i6gbz10ldme8xozhy87isx519ct40aiq/user",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "be5a8560-5c9a-32cc-a9ef-201685289070",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUserSession"
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "4147f2a9-9b32-3cb6-b91a-b12d2a43dfc4",
    "name" : "SESSION  - Delete user session (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/nmmkhjsikwbheic3fyvxrl1z9t5lzuabty07qykwnf7k76sno8p4v674mpmuc5ca24grieqn/user",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4147f2a9-9b32-3cb6-b91a-b12d2a43dfc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUserSession",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "a1b99c3a-0b56-3e56-b204-6ad6d833263b",
    "name" : "SESSION  - Delete user session - 200",
    "request" : {
      "urlPath" : "/admin/v/4/session/n4vkmoxw08oj5mr14fkgs6u0n3wd3t1ebkofj5xgs4r2z3vj41eobq6fqf692eo7xrw41xbk44a48d1ddhwb50m7r/user",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a1b99c3a-0b56-3e56-b204-6ad6d833263b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUserSession"
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "cd64cd38-bfc9-3127-90ce-94a4e68ccad4",
    "name" : "SESSION  - Get user session info - 401",
    "request" : {
      "urlPath" : "/admin/v/4/session/p5yxhgyo3wiiq9r9urlnkl02aw6nkx1z8ga6n6nzgmjep4nm6mx6el1vwcfzao61lwilqoafpqlsz0i/user",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "cd64cd38-bfc9-3127-90ce-94a4e68ccad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserSession"
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "808b88a1-5e5a-36eb-ac48-860d5820c995",
    "name" : "SESSION  - Get user session info (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/jwtpolb0lr175o17zphh6mc21yq4/user",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "808b88a1-5e5a-36eb-ac48-860d5820c995",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserSession",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "ae93d029-646e-3785-ab10-843f20bcd52e",
    "name" : "SESSION  - Get user session info (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/2jsh7hpxkf0qart2vs9nikuzs6qtuuixg3gmx49t8op0bzso2x7zktoyb88u2qbcoexznxjlb00lijc81eg5o3krnb5ipbmdnfinq1xd1blo227gg0fwkalbor680lj2s/user",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n}, {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n}, {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n}, {\n  \"user_id\" : \"9aeeace602d2a6aaead2f62a\",\n  \"issued\" : 1587659826\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae93d029-646e-3785-ab10-843f20bcd52e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserSession",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/userSessionInfo"
            }
          }
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "09b64829-6f59-30cb-9440-405089ac9fb9",
    "name" : "SESSION  - Get device session count",
    "request" : {
      "urlPath" : "/admin/v/4/session/xclspr4esczj9m0fvzn0a06hujkyn7l6cvbouook9k45bcqgdqkcf03rj2la125lnj90rznz8nqk65p6pcqkxt9lrlw8y4fpp4pntu90nvfq2/device/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b64829-6f59-30cb-9440-405089ac9fb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDeviceSessionCount",
          "schema" : {
            "type" : "object",
            "example" : {
              "count" : 1
            }
          }
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "22316eb7-1b01-3c86-9b42-f02344774dee",
    "name" : "SESSION  - Delete device session - 401",
    "request" : {
      "urlPath" : "/admin/v/4/session/d1xt7kepkz7t2k/device",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "22316eb7-1b01-3c86-9b42-f02344774dee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeviceSession"
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "081c01f0-5201-3dca-a1e5-f05642cd7102",
    "name" : "SESSION  - Delete device session (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/session/fxow75ddcf22sie5c6cfpdo2xfs8kys5nzj3jqxgvol2m/device",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "081c01f0-5201-3dca-a1e5-f05642cd7102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeviceSession",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "7fb10215-7b15-3d1c-b78f-1c7f734855e2",
    "name" : "SESSION  - Delete device session - 200",
    "request" : {
      "urlPath" : "/admin/v/4/session/gjfy4na643blicrljcd9p6i7v4hghdqoz7yru51sr79utjz9asx0xev7bomw9u7nmbcmqsq4y8jyn7mkre6yvowzr3xsmvsaq4x6p3fqwqow9pji6iz1d6z/device",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7fb10215-7b15-3d1c-b78f-1c7f734855e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeviceSession"
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "f07a99a5-29ce-34d9-9bb5-10ad025d8c89",
    "name" : "SESSION  - Get device session info",
    "request" : {
      "urlPath" : "/admin/v/4/session/1838w5q47l6nci4o28fmdlvh8rwi444zoq56biycl42qfwr8ugovjy4xoysm1loakdfq3luhpjicrxa2l27v2/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"device_key\" : \"DEVICENAME00000\",\n  \"issued\" : 1587659826\n}, {\n  \"device_key\" : \"DEVICENAME00000\",\n  \"issued\" : 1587659826\n}, {\n  \"device_key\" : \"DEVICENAME00000\",\n  \"issued\" : 1587659826\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f07a99a5-29ce-34d9-9bb5-10ad025d8c89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDeviceSession",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/deviceSessionInfo"
            }
          }
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "9b13b52a-abc4-3027-b958-cfe6a23fcebb",
    "name" : "SHARED CACHE - Delete a shared cache - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/i1s33dp55akpha70lojfexn9a92wgrobve296yd2duh15afe/Leigh+Mann+III",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9b13b52a-abc4-3027-b958-cfe6a23fcebb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSharedCache"
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "225a97c7-0793-3c85-93e8-3670c2ee28c7",
    "name" : "SHARED CACHE - Delete a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/mbiwdzmrn10v5x9b4wvbs4f3mk7hbacb3u7mn2wlnkj6vplqt2wo1oort3xvvso6d1ejct0wl82wamkl9bqcmgvkzx2luyldnt0hvq5mptx4lp8rr2dsp2a0hm3sigiamg8cqvbp20jyz2ic3g440r0k2zbr3xjgpdr9zpyj8w9jphjz28wzhficmfsvfygz/Laverne+Dickinson",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "225a97c7-0793-3c85-93e8-3670c2ee28c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "31c58279-675f-3d8b-b135-a65bd011aeee",
    "name" : "SHARED CACHE - Delete a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/gx3a63llsbcsvlhxhcyu6tgc6ils8pek5mg157c2bshfk0l0xrk5mkkvzmb8zlv0c8gtael0g5pe0mpbgje618wytae36xr61t2kgkiavncmnfd92ap5wgq6voz2l38tu1vf9r591u7s1n524m4d/Sung+Murray+DDS",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31c58279-675f-3d8b-b135-a65bd011aeee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSharedCache",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "71051f5c-fc4f-32a8-b61e-f689bf25f574",
    "name" : "SHARED CACHE - Add a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/osi91u3thy61gb39bm9nnaprjnqfhj7whyrev0fefhhejg4ptthm1ihduha1so405yo8lmbjkm6f87f3pz4qks8xvr15vldlpfu1v91022ta124vp9m1h8xc7mkxg1esjfg7obs9cd9/Marylee+Harris",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71051f5c-fc4f-32a8-b61e-f689bf25f574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "160bf638-a51d-390c-907c-fa214b0854c6",
    "name" : "SHARED CACHE - Add a shared cache - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/u0fg7dcf8gvpm35niljgxs8u055abnzji1gt02zgcq2ohb9tl3m02h35m0o/Kaycee+Donnelly",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "160bf638-a51d-390c-907c-fa214b0854c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addSharedCache"
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "99837d71-8c81-3e6e-aec8-7c849aa296e9",
    "name" : "SHARED CACHE - Add a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/n3g0s7owl28ihnew54f64vbbg7t2dd1um3o8s4ig3vvm8qcklvre1umlz8s4ep9ls2f1z6r8pzeo8ob46y6cr854tg4nexyzhek6i9m3gqhz4fls4tydf1q0pt5dwd62lqo0/Janae+Schinner",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99837d71-8c81-3e6e-aec8-7c849aa296e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "efb2b21e-bfd0-36d3-9318-f0ee2689c30a",
    "name" : "SHARED CACHE - Add a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/14ipxtf4sqsqzkqva1p32d0w8pjdx84ftzg67193fksi7vbsclps5n9jmiysu0s5b1pgruijltgpz0k6bp7lgb4chlo95r7cblchqnfwaqt4tnueday/Mr.+Margeret+Auer",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efb2b21e-bfd0-36d3-9318-f0ee2689c30a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addSharedCache",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "673971bd-f85d-3e83-a524-744884049803",
    "name" : "SHARED CACHE - Update a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/2upwsmg6sakgvvu9jagd7b29dd2y75nw1q5jsi953gsmeevtvhl8ibl/Dong+Huel",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "673971bd-f85d-3e83-a524-744884049803",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "5f9a54eb-38d5-34d3-994c-5c147a84fa2c",
    "name" : "SHARED CACHE - Update a shared cache - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/orj49kdd58mpa083k0fvp/Autumn+Greenholt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f9a54eb-38d5-34d3-994c-5c147a84fa2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSharedCache"
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "345ce628-c81a-3d08-937a-3ff05c59a178",
    "name" : "SHARED CACHE - Update a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/j7c9rsvdx7wfiiasc10taiggiew282mvuimeerdwdfzwcwr1ht9c1xqcgqvv7lecl5tc6ivb2h23tmrngptqnhsa6r6yfjo8yy773xnl5pctcowyaolbsnbicgncncj2b0fc6jdkm89mywf536pp9vasdptbzrgcdfgnuteqdsso/Fabian+Gutkowski",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "345ce628-c81a-3d08-937a-3ff05c59a178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "9d503663-0c33-3563-b882-a6e1a068795f",
    "name" : "SHARED CACHE - Update a shared cache (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/ozqfqltxcmd2okm6gpqsqfr4db0tabxadsbju6ct85fk6elupt54m99ds62v15tnn7ktqh2sfo/Hilton+Schumm",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d503663-0c33-3563-b882-a6e1a068795f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSharedCache",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "43e72b87-fea4-308c-b18d-dabf15a32a07",
    "name" : "SHARED CACHE - Gets shared caches for a system - 401",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/8an35etxhbj2hjw7e2rqhqizels7ssm4z95d6n8ucz2am7wpalxczxa4dphrkr5nde5x5xzyjof4td4v7cv7k0ovpwbww6wcqfqbl9tgire97d2oxxc689r9nc57gxxzadoffa6g0kk6rcjxztsto",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "43e72b87-fea4-308c-b18d-dabf15a32a07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSharedCache"
        }
      }
    },
    "insertionIndex" : 317
  }, {
    "id" : "d188b3be-4b9c-3fd8-b75e-c93dd3a51491",
    "name" : "SHARED CACHE - Gets shared caches for a system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/xnhtc1mux1h0lc99x2k4c7cg4g69pb9usrmion790avgwyreu2zv8c1lkszt9jofes88yx5uia7iu4dhipavd4dy5o8wjl1eebghzvh9qoasozpgug02f66kn5",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d188b3be-4b9c-3fd8-b75e-c93dd3a51491",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSharedCache",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 318
  }, {
    "id" : "49304ecd-991d-358c-a0af-799a575fafbd",
    "name" : "SHARED CACHE - Gets shared caches for a system (application/json)",
    "request" : {
      "urlPath" : "/admin/v/4/service_caches/f7dsqv38c2o3qf6yvkavz7f6lp4ob4052rig9833b200d4lfyyo1tswrpyq55z1njx2yflbe98pjffhem",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"test_cache\",\n  \"description\" : \"Here goes an example description.\",\n  \"system_key\" : \"b4d49dd00basfdb3deb4ccbefeb0df01\",\n  \"id\" : \"54eb0787-50df-4099-b368-c68ea97f1ce2\",\n  \"ttl\" : 30\n}, {\n  \"name\" : \"test_cache\",\n  \"description\" : \"Here goes an example description.\",\n  \"system_key\" : \"b4d49dd00basfdb3deb4ccbefeb0df01\",\n  \"id\" : \"54eb0787-50df-4099-b368-c68ea97f1ce2\",\n  \"ttl\" : 30\n}, {\n  \"name\" : \"test_cache\",\n  \"description\" : \"Here goes an example description.\",\n  \"system_key\" : \"b4d49dd00basfdb3deb4ccbefeb0df01\",\n  \"id\" : \"54eb0787-50df-4099-b368-c68ea97f1ce2\",\n  \"ttl\" : 30\n}, {\n  \"name\" : \"test_cache\",\n  \"description\" : \"Here goes an example description.\",\n  \"system_key\" : \"b4d49dd00basfdb3deb4ccbefeb0df01\",\n  \"id\" : \"54eb0787-50df-4099-b368-c68ea97f1ce2\",\n  \"ttl\" : 30\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49304ecd-991d-358c-a0af-799a575fafbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSharedCache",
          "schema" : {
            "type" : "array",
            "description" : "list of caches",
            "items" : {
              "$ref" : "#/components/schemas/getCacheResp"
            }
          }
        }
      }
    },
    "insertionIndex" : 319
  }, {
    "id" : "13f05225-b65d-318b-b9db-9a85bc90c82e",
    "name" : "2FA - Update developer 2FA information.",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13f05225-b65d-318b-b9db-9a85bc90c82e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDev2FA",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 320
  }, {
    "id" : "01e526e0-f5d9-3d51-b380-8a31c39eb57b",
    "name" : "2FA - Update developer 2FA information.",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01e526e0-f5d9-3d51-b380-8a31c39eb57b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDev2FA",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 321
  }, {
    "id" : "270769e3-877b-3313-a54a-0cb8226af8ea",
    "name" : "DEVELOPER - Get dev info",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "270769e3-877b-3313-a54a-0cb8226af8ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDevInfo",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 322
  }, {
    "id" : "e1ecd33e-98c3-33a6-902c-59e1bc28f122",
    "name" : "DEVELOPER - Get dev info",
    "request" : {
      "urlPath" : "/admin/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"two_factor_enabled\" : true,\n  \"fname\" : \"FirstName\",\n  \"two_factor_method\" : \"email\",\n  \"org\" : \"CompanyName\",\n  \"last_login\" : 1551475825,\n  \"admin\" : true,\n  \"two_factor_enabled_instance\\\"\" : true,\n  \"creation_date\" : 1551475825,\n  \"userid\" : \"e291cdc70be288c3af01\",\n  \"phone_validated\" : true,\n  \"lname\" : \"LastName\",\n  \"email_validated\" : true,\n  \"phone\" : \"+15120000000\",\n  \"email\" : \"example@clearblade.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1ecd33e-98c3-33a6-902c-59e1bc28f122",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDevInfo",
          "schema" : {
            "type" : "object",
            "properties" : {
              "admin" : {
                "type" : "boolean",
                "example" : true
              },
              "creation_date" : {
                "type" : "integer",
                "example" : 1551475825
              },
              "email" : {
                "type" : "string",
                "example" : "example@clearblade.com"
              },
              "email_validated" : {
                "type" : "boolean",
                "example" : true
              },
              "fname" : {
                "type" : "string",
                "example" : "FirstName"
              },
              "last_login" : {
                "type" : "integer",
                "example" : 1551475825
              },
              "lname" : {
                "type" : "string",
                "example" : "LastName"
              },
              "org" : {
                "type" : "string",
                "example" : "CompanyName"
              },
              "phone" : {
                "type" : "string",
                "example" : "+15120000000"
              },
              "phone_validated" : {
                "type" : "boolean",
                "example" : true
              },
              "two_factor_enabled" : {
                "type" : "boolean",
                "example" : true
              },
              "two_factor_enabled_instance\"" : {
                "type" : "boolean",
                "example" : true
              },
              "two_factor_method" : {
                "type" : "string",
                "example" : "email"
              },
              "userid" : {
                "type" : "string",
                "example" : "e291cdc70be288c3af01"
              }
            },
            "description" : "User information"
          }
        }
      }
    },
    "insertionIndex" : 323
  }, {
    "id" : "d2d86a27-fe5a-362b-ab66-d4eb08700a01",
    "name" : "DEVELOPER - Get number of roles - 500",
    "request" : {
      "urlPath" : "/admin/user/tavi146ime8ry9q3hr9xdxa/roles/count",
      "method" : "GET",
      "queryParameters" : {
        "user" : {
          "equalTo" : "z0b2uq9r5qxi83emec2fqsyl1jd5peum1m010kx4swjvywv9wbtwkcqixppgxasrowu"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d2d86a27-fe5a-362b-ab66-d4eb08700a01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetRolesCount"
        }
      }
    },
    "insertionIndex" : 324
  }, {
    "id" : "ab7505b9-79cc-39a9-a8f4-b4a91e030e1e",
    "name" : "DEVELOPER - Get number of roles - 401",
    "request" : {
      "urlPath" : "/admin/user/f1snpn6s7gg0sxbjppjh1kwxx92f6vjog4cwlevakycs84m5k5a4h5nky9g24wro8m6jm6ivw58r6gk4oehobc1fdn7n30b9pfjg3t5ajbsthgfuccofogm4ay8oh6nd0r2z1/roles/count",
      "method" : "GET",
      "queryParameters" : {
        "user" : {
          "equalTo" : "89tzw0pswpx66pir24eycj0kyt21yzcett6011gz1iuefebgrt7lbqaffl470rewohfdogls62efje009a02qan6mqbsm8paacu0cdbqfxeicd2yobjmhxj52bhm86hxj84b6kmec"
        }
      }
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ab7505b9-79cc-39a9-a8f4-b4a91e030e1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetRolesCount"
        }
      }
    },
    "insertionIndex" : 325
  }, {
    "id" : "431a5248-d96a-35ab-934b-a031e1faebc4",
    "name" : "DEVELOPER - Get number of roles - 200",
    "request" : {
      "urlPath" : "/admin/user/npx3ss3ufhyfqlcf1ndte5mmbq8uyc85kyk53688yaa0bksbh/roles/count",
      "method" : "GET",
      "queryParameters" : {
        "user" : {
          "equalTo" : "ol8u9wo0o77zj7wf0ik4uvfti9s0hscdoqw4p7w8e7iuztjkgh8l1cr1jgxvwza365hbs2mx2i1m4j0j0hll5qvozt7tctw402c1m8djcho3y6ozyu3vj5vmvr89jte5kvezgdyls0nt8g6mfrviyheewg7dh35ho689eyxs"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "431a5248-d96a-35ab-934b-a031e1faebc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetRolesCount"
        }
      }
    },
    "insertionIndex" : 326
  }, {
    "id" : "a8fdc897-547f-336c-b882-80d1fe51cbb0",
    "name" : "DEVELOPER - Delete roles - 500",
    "request" : {
      "urlPath" : "/admin/user/u6zt8m9ehnpbycdmflynxdmyvn2tfzrtpnehe62prupaqrylq0emjhwmxeb2qgbxmqr4b4u0b7pspo1aiw6hkwb2gj7rmth8lb8hqa1dlgpa47spxs4leys48x4/roles",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "6vhj8xi9fn0mlk4x1n4alvmg2ua7bh2iici0rtvsvw6aazxk932jujc02siz1qdfj7f6iel0zkp5yiotvuropx21kmi7mqtniwkmpfwlkqi3godm5lepduv2gda391k75eypc00edmdb2i4dpwwdzovgv1dh0wc"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a8fdc897-547f-336c-b882-80d1fe51cbb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteRoles"
        }
      }
    },
    "insertionIndex" : 327
  }, {
    "id" : "0240b856-4e23-33c0-ae07-ce20636fcb5f",
    "name" : "DEVELOPER - Delete roles - 400",
    "request" : {
      "urlPath" : "/admin/user/hcogvv7v2fw5hz6xkxdkthb9uahbw6x1z88nhtltxw5pgna9m8i6wcebeg444xic2icph1gcmb236fg809utl06oasqa9qqbnct6upok/roles",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "bgmklp57c7x5e9p5powyi82zu1f9k2z9nq2ayvrk9ow1icpeu5imjkf232nzffk0p38tces7byqvpk95sgcpzumw6xg1mvlwr07t4ke21kzaedfifnuesh3torujna57lbw116n2rmqjj6y10sbm8yqxcb4cszwbi3qthstne58dqh62u7008qf4ntrknjayqx6bzprt"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0240b856-4e23-33c0-ae07-ce20636fcb5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteRoles"
        }
      }
    },
    "insertionIndex" : 328
  }, {
    "id" : "260801a3-1de9-33a2-9554-9b17f13bf0c8",
    "name" : "DEVELOPER - Delete roles - 200",
    "request" : {
      "urlPath" : "/admin/user/s5qwbq3v5cm3y3vq5ou8q88pu4mjnxeol6nwaqurpmzhd118pqvo3z4uo36ebmnyqihgaqlxtz71fv0nqhkqc0227gvo4r80lt91givsil9jb64phqseo33o67oedm4qg8zeoda4bzvqrqd0h8gtwkxantuz4/roles",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "r0y13zyv3cktmmyeguk98p8dk4sr7j662hkn8ad8b6xe9adrjij7621oznc5h1t4nuz2bqt8bzkdbxov"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "260801a3-1de9-33a2-9554-9b17f13bf0c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteRoles"
        }
      }
    },
    "insertionIndex" : 329
  }, {
    "id" : "bf19d277-37e3-30a0-8f8f-73d42c681b19",
    "name" : "DEVELOPER - Add new role - 500",
    "request" : {
      "urlPath" : "/admin/user/ia9u5fbuhm9mx7vjxtz4umoxru8a47d28u6tzw4el0p4f/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "bf19d277-37e3-30a0-8f8f-73d42c681b19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddRole"
        }
      }
    },
    "insertionIndex" : 330
  }, {
    "id" : "405c9ff0-f9fe-3b62-844b-f66230ab6a83",
    "name" : "DEVELOPER - Add new role - 400",
    "request" : {
      "urlPath" : "/admin/user/9t34d89zjrv405np3jdchr851g6qk7i9xjjfvyq1btxkevua0rzfm7rnztyul/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "405c9ff0-f9fe-3b62-844b-f66230ab6a83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddRole"
        }
      }
    },
    "insertionIndex" : 331
  }, {
    "id" : "4268ae75-e7f8-34f6-b599-4fe62bbf1a00",
    "name" : "DEVELOPER - Add new role - 200",
    "request" : {
      "urlPath" : "/admin/user/a9t0l29vxnaai375ftl6c/roles",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4268ae75-e7f8-34f6-b599-4fe62bbf1a00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddRole"
        }
      }
    },
    "insertionIndex" : 332
  }, {
    "id" : "9ac69d11-76e4-3383-a493-d780a5211678",
    "name" : "DEVELOPER - Changes roles settings - 500",
    "request" : {
      "urlPath" : "/admin/user/bhiwv1ek4qbf9sip7dr0d6mlbdga7w9j16hree5vkgppt40blmwnl8vay77tvpvgl8i254x3nnllyuvmv9hz7gadixqeuxkz2ut50r57tog5sqw2wn71ofxbuaquli1hlx57rw2fl6zir0aol0ggrt5akz486y1vxkg529jf42gvk05ramlu/roles",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9ac69d11-76e4-3383-a493-d780a5211678",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SettingsChanges"
        }
      }
    },
    "insertionIndex" : 333
  }, {
    "id" : "d0228b58-dadf-3c28-9132-f9057091515d",
    "name" : "DEVELOPER - Changes roles settings - 400",
    "request" : {
      "urlPath" : "/admin/user/3s2lipzigvksmyxlvj0aa3xka508kanm82ghd9gd9f59caq516s90gywo0nz68dorbqwhj2mb837wc5fxwmwbd6nh7tkll6z/roles",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "d0228b58-dadf-3c28-9132-f9057091515d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SettingsChanges"
        }
      }
    },
    "insertionIndex" : 334
  }, {
    "id" : "da0f6d59-981d-320f-8fe3-142071252660",
    "name" : "DEVELOPER - Changes roles settings - 200",
    "request" : {
      "urlPath" : "/admin/user/e52hki6i306064070qr84epf803287qjbi1ghjkcuuwpcyax0f22m440qb913kojn75y664k4z7jmf9j9kreu9t0t8qz9tegefs8634aux3u0yebnv2u2m19b42n5vbpfp4l/roles",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "da0f6d59-981d-320f-8fe3-142071252660",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SettingsChanges"
        }
      }
    },
    "insertionIndex" : 335
  }, {
    "id" : "0b8f4fb9-b814-3942-9721-debf268d18a4",
    "name" : "DEVELOPER - Get list of roles - 500",
    "request" : {
      "urlPath" : "/admin/user/19nf7ku95vlj9epq9qonxdxfkfo869h4d8b30mim6eavf63pt6em2je82qr1t8s5ijga3j0goygr4iw2k1ymjvxov1icxdnjj71g7fyjx4we0/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0b8f4fb9-b814-3942-9721-debf268d18a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetRoles"
        }
      }
    },
    "insertionIndex" : 336
  }, {
    "id" : "412024b9-acff-3660-8af0-44160d12f07e",
    "name" : "DEVELOPER - Get list of roles - 400",
    "request" : {
      "urlPath" : "/admin/user/scsfp3by42ggoaktgh5s17z5fk99p957ei0md6772uiay8j74/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "412024b9-acff-3660-8af0-44160d12f07e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetRoles"
        }
      }
    },
    "insertionIndex" : 337
  }, {
    "id" : "adb4d9fb-014c-3909-8a25-40209cf27f37",
    "name" : "DEVELOPER - Get list of roles - 200",
    "request" : {
      "urlPath" : "/admin/user/fd29cq6obc88dsbddrbgmuv9hioz3j0y4tvurn79in398r7n2makw/roles",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "adb4d9fb-014c-3909-8a25-40209cf27f37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetRoles"
        }
      }
    },
    "insertionIndex" : 338
  }, {
    "id" : "2dd0f1c0-9245-3467-b34f-8fd54e7789d2",
    "name" : "DEVELOPER - Add new column - 500",
    "request" : {
      "urlPath" : "/admin/user/w4qhnkk5ky7x4djfy50humydfb6ozcf6ysm78iuso8vuqvmczam8g5e/columns",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2dd0f1c0-9245-3467-b34f-8fd54e7789d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddColumn"
        }
      }
    },
    "insertionIndex" : 339
  }, {
    "id" : "dafe7081-7629-3751-ab0f-268ff5f6ae29",
    "name" : "DEVELOPER - Add new column - 400",
    "request" : {
      "urlPath" : "/admin/user/0ht1tx84slbhc2vm1et79k248sb27qcejxt6qhptbyrkk8ui13gs4crpnbo/columns",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "dafe7081-7629-3751-ab0f-268ff5f6ae29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddColumn"
        }
      }
    },
    "insertionIndex" : 340
  }, {
    "id" : "10336051-7016-3661-b116-36b4fbc28eff",
    "name" : "DEVELOPER - Add new column - 200",
    "request" : {
      "urlPath" : "/admin/user/9rlmwml632o41aho6d3so9p6xw6dpiph7u2h2u1tdexdksh53oezyz8bbyc2c9wa0d0h1vo5w35hwm5bqknen59qgrcumd3r6c04orsxwsuoqmmef6g81jsoganogrcinxjvwhrdhanxipcfqxrfvp5k8fnum9705/columns",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "10336051-7016-3661-b116-36b4fbc28eff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddColumn"
        }
      }
    },
    "insertionIndex" : 341
  }, {
    "id" : "ddbf2140-358b-3428-9a35-9e9e27d21ba6",
    "name" : "DEVELOPER - Get users column info. - 500",
    "request" : {
      "urlPath" : "/admin/user/hrmqp176eybdiibox6daj1li4h8hiym3ud6wrmy2kj92a3chrzs8ag5gfwt443x4x2xgx3giqfqtr12z1lzi7hmrw70bcwafs130e5d5ozrpcu3w9i3iayg2corm3xot5f2hfpwbyy2zl5geq5s0qp3s9fsogqp0m/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ddbf2140-358b-3428-9a35-9e9e27d21ba6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserColumnData"
        }
      }
    },
    "insertionIndex" : 342
  }, {
    "id" : "981412e3-9b75-3009-a18b-0e64358b4a7c",
    "name" : "DEVELOPER - Get users column info. - 400",
    "request" : {
      "urlPath" : "/admin/user/cbw1/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "981412e3-9b75-3009-a18b-0e64358b4a7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserColumnData"
        }
      }
    },
    "insertionIndex" : 343
  }, {
    "id" : "576fb7e3-942e-3106-9902-68097aae3ca4",
    "name" : "DEVELOPER - Get users column info. - 200",
    "request" : {
      "urlPath" : "/admin/user/c8ca3fob5ma1iktrqstsuc1a17d46kdyn7bucyipuxdbwfnz3zafa0e50h3cqujaqz2mjbgxsumq/columns",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "576fb7e3-942e-3106-9902-68097aae3ca4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserColumnData"
        }
      }
    },
    "insertionIndex" : 344
  }, {
    "id" : "3fbf688c-e418-3a86-905b-88a0aae9c49c",
    "name" : "DEVELOPER - Delete user - 500",
    "request" : {
      "urlPath" : "/admin/user/zuvq56q24weo3mo",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3fbf688c-e418-3a86-905b-88a0aae9c49c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 345
  }, {
    "id" : "8432762a-67b6-3130-bb9d-4ee9d2445b4e",
    "name" : "DEVELOPER - Delete user - 400",
    "request" : {
      "urlPath" : "/admin/user/qlvzlrhef7f",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "8432762a-67b6-3130-bb9d-4ee9d2445b4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 346
  }, {
    "id" : "7b3552da-b381-323b-b514-0ac953244a6e",
    "name" : "DEVELOPER - Delete user - 200",
    "request" : {
      "urlPath" : "/admin/user/n5iz5rqycvqp87p1eft6wxo467xhi0zwb8ogu68lqgsk3qveuohwnqjaimbdsk1skfuffl9vypwmt9iioqble8g573hvs0l65mygfkacnz6sgmxvtaocjdqlijffbr7niou1iba52axmjfww4no4df1",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7b3552da-b381-323b-b514-0ac953244a6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUser"
        }
      }
    },
    "insertionIndex" : 347
  }, {
    "id" : "8bbb925d-d78b-359e-af25-638ffba881cb",
    "name" : "DEVELOPER - Add user - 500",
    "request" : {
      "urlPath" : "/admin/user/2uql20civw2e5bd8i5ww8rpkh0ze14xbwyc5nc8s8ptzan5uiyn4da",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "8bbb925d-d78b-359e-af25-638ffba881cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    },
    "insertionIndex" : 348
  }, {
    "id" : "f82587ca-c9e1-39b8-b7c5-9c82bfbe4fa7",
    "name" : "DEVELOPER - Add user - 401",
    "request" : {
      "urlPath" : "/admin/user/flvxwfit1ouyyiidzgpnw09i0vi1w1vlo8bnxdpf6p1ih7z7k4jcmpw7oh91llior9zlk2cguu1vxod7ic7f6zc7tskorsvphgc2v9qep1nt0h34s8dv91xkr5udosz2c",
      "method" : "POST"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f82587ca-c9e1-39b8-b7c5-9c82bfbe4fa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    },
    "insertionIndex" : 349
  }, {
    "id" : "0c14c206-058b-33e8-bff8-a5abea0a6f26",
    "name" : "DEVELOPER - Add user - 400",
    "request" : {
      "urlPath" : "/admin/user/xe4c0hqiiv9uki18yo1zmex2027v477qfoxat0hz55b8fifrgbks4hdfown7fj57umvvh1aly4j6kert51at96zrvefrnwjhacpy5io499sr8zc45p6gijpef3qis0d3b7g4492wqri8jf3l1wwvfep",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "0c14c206-058b-33e8-bff8-a5abea0a6f26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    },
    "insertionIndex" : 350
  }, {
    "id" : "42d37736-bd96-370c-9061-28f64d59f500",
    "name" : "DEVELOPER - Add user - 200",
    "request" : {
      "urlPath" : "/admin/user/qkvam6c2fo0dunpmy9199wo5bigptv6wkhy6hsjk1jdvihcm15qrmq2pu747o8hcs5rq6j1haqpvdvceevka4g1lxupkobmtx1yu9xbptyx",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "42d37736-bd96-370c-9061-28f64d59f500",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AddUser"
        }
      }
    },
    "insertionIndex" : 351
  }, {
    "id" : "aecf655b-b480-3084-a847-f2f6811f9aa7",
    "name" : "DEVELOPER - Change user information and permissions - 500",
    "request" : {
      "urlPath" : "/admin/user/w9sj07ohpzgcayxim4unsoh7bml9ypdht84assoasl1cxn8l0nqxmt88l9k0lbuocx4bcjodm61z9mp3wjp29nyl31dvfamp3ord01w92yfk2l6bc3s6vmtuyitbk2x286vgbycgc2b34w0baaq519en01ianojl2pwhbh3owc1tmmmx",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "aecf655b-b480-3084-a847-f2f6811f9aa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserChangeUserInfo"
        }
      }
    },
    "insertionIndex" : 352
  }, {
    "id" : "bc4e3cbc-1a5c-363d-85e8-8bfb6b17ace2",
    "name" : "DEVELOPER - Change user information and permissions - 400",
    "request" : {
      "urlPath" : "/admin/user/ehscdqmrtkvx15ho4d08rql9dzarxx0erdl6aeutmzi5qthe22bn4fzl048st592q2r7r4g79f1o9778arcfu3y1kpmibz37igo3nj4cb6xjldh2zvqn",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "bc4e3cbc-1a5c-363d-85e8-8bfb6b17ace2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserChangeUserInfo"
        }
      }
    },
    "insertionIndex" : 353
  }, {
    "id" : "a44d746a-8c7a-3775-a5f0-56618aa764e1",
    "name" : "DEVELOPER - Change user information and permissions - 200",
    "request" : {
      "urlPath" : "/admin/user/gbj6a0surpukb57lkaagvpniartjr1cs7tuzxkzjazqxo6gofo6m8frvmn2vviqc3jnypotcbj1o4bx7dxt3w5oxh88n09pfg3pa2zq9dh7i",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a44d746a-8c7a-3775-a5f0-56618aa764e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UserChangeUserInfo"
        }
      }
    },
    "insertionIndex" : 354
  }, {
    "id" : "824bb92f-5f1f-32dd-bd7f-1ab58675b1e6",
    "name" : "DEVELOPER - Get list of users and information - 500",
    "request" : {
      "urlPath" : "/admin/user/5amd8j8jahq6sdpzi3biwen8tewmf5d",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "824bb92f-5f1f-32dd-bd7f-1ab58675b1e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserList"
        }
      }
    },
    "insertionIndex" : 355
  }, {
    "id" : "6e83e3b4-2198-362a-84ce-cbc038f72653",
    "name" : "DEVELOPER - Get list of users and information - 400",
    "request" : {
      "urlPath" : "/admin/user/jwtq4ba3r8xvzogkqrecsht18p00lfpz6k0tmzw8wtefm69a1mdul64mv07rxn5de0zz4ac",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "6e83e3b4-2198-362a-84ce-cbc038f72653",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserList"
        }
      }
    },
    "insertionIndex" : 356
  }, {
    "id" : "07ad0888-78b4-3ab6-9013-12b0dd07f5da",
    "name" : "DEVELOPER - Get list of users and information - 200",
    "request" : {
      "urlPath" : "/admin/user/2njc9qotkxznkp2wq41cr3f9apwx53ran1xxs31kb5z3ycrmo3zqbd2hi9w4k4nob2kwhu3rxwpqvt7xqqkz3ucbuud",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "07ad0888-78b4-3ab6-9013-12b0dd07f5da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetUserList"
        }
      }
    },
    "insertionIndex" : 357
  }, {
    "id" : "335d1581-ae6c-3e60-a0af-e69c5427e70d",
    "name" : "DEVELOPER - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/kqtdainvvjc6uia8ihdkkjeu9qwxtzs5sroyoswi6af5qod3yj6gm8ep77vsjo9w57cfj9l5s/Lyle+Schneider",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "335d1581-ae6c-3e60-a0af-e69c5427e70d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTimerHandler"
        }
      }
    },
    "insertionIndex" : 358
  }, {
    "id" : "7212b62a-83e6-3497-b929-752f4143cac3",
    "name" : "DEVELOPER - Create time handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/nhyf1emc0mxgwyu8ggidoltet6bo0ti4wyil2vfpfikutqp481gdwguevsgjkt5mfmutx6tw5ethlb2xb6phvvubqrtdl2la45stmu10m6zkgoh6mwskbtputgywv/Dr.+Landon+Bradtke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7212b62a-83e6-3497-b929-752f4143cac3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "create_timer_handler"
        }
      }
    },
    "insertionIndex" : 359
  }, {
    "id" : "13afe94f-efe6-3ed7-aa6a-90f2dc66ebaa",
    "name" : "DEVELOPER - Update timer handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/1urcaj4ifj3e2tk7v2bw0vifjav8yds6qbe8sdoyph6z0li7e6iydps46f00ay8r47i65v6lkz3kmb9rbwwl7c4u8rpyvdeoanfz254v2pp4w5owbbpt3etl9luqjkj6szxflbyltct8ax3x54du3x8qvqe45/Chastity+Kuphal",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "13afe94f-efe6-3ed7-aa6a-90f2dc66ebaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTimerHandler"
        }
      }
    },
    "insertionIndex" : 360
  }, {
    "id" : "9796eb2d-5baa-3c69-9445-546e50b311b7",
    "name" : "DEVELOPER - Get timer handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/2ahc1ko2jetgtk8kxf6u7mudwxhvrpwzigrf4cu8lnoemn1h35eersjsgy9ysy9touqsfhf0eatv87opt5ddxt4ugbwlsnc834lh2i252ybpnl8/Martin+Dickens",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9796eb2d-5baa-3c69-9445-546e50b311b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTimerHandler"
        }
      }
    },
    "insertionIndex" : 361
  }, {
    "id" : "8f8a3f76-523a-3fcd-8c20-816ecf96796f",
    "name" : "DEVELOPER - Get timer handlers - 200",
    "request" : {
      "urlPath" : "/admin/triggers/timers/54qqkuv8k3utml0rkkuzvlwh5ciwhuzkqg5rf5gjmej76s8g8uxf2ezpl7o48e6oxlut6c3s6vqtyxvdk8vqs5ux7za9wchejon9qvb82qoo9ixds9lqwt1l9jo239y5qd26imtd9kfjfs10ki6f8k8ht86xrtrlg3qmjphxq5pbpnknc",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8f8a3f76-523a-3fcd-8c20-816ecf96796f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTimerHandlers"
        }
      }
    },
    "insertionIndex" : 362
  }, {
    "id" : "9c444491-876b-3b64-a714-37650ff488c0",
    "name" : "DEVELOPER - Delete trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/iouqtlb2hohkc9lzx6di4sp2xq2lidbiw9jhsvmiig7ybxjq1h7d8tyl2zuie8pvtr7mu9iu43vsnb4rcgs9ate0h9ql6hyox759wgif54kwgxjdj63kpjssi3xgkt7t19q1h2ch756fhhs9wokvubm3mi48qt880/Stefanie+Wiza+Sr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9c444491-876b-3b64-a714-37650ff488c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteTriggerHandler"
        }
      }
    },
    "insertionIndex" : 363
  }, {
    "id" : "798a0c96-0052-3404-9e60-4424ee696ec8",
    "name" : "DEVELOPER - Create trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/m6jo2ik4csb0azdr9jf6zhpnrst04/Miss+Kenneth+Prosacco",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "798a0c96-0052-3404-9e60-4424ee696ec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateTrigger"
        }
      }
    },
    "insertionIndex" : 364
  }, {
    "id" : "38e51a1d-83ff-32d8-8a0d-7077fc5d416a",
    "name" : "DEVELOPER - Update trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/btfvk0sw7ms00jtkmfxv7xircz2p5mgdfvvm1us2h7v5wfshx2if8rpk9fyrdgnz9ymg71uk6vu4dk394ooxaohfp9rccu77yx30j1g00fv1ygxy8vu3uk97icq5lkl5y9fk4uskyb4089/Sherell+Sauer",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "38e51a1d-83ff-32d8-8a0d-7077fc5d416a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateTriggerHandler"
        }
      }
    },
    "insertionIndex" : 365
  }, {
    "id" : "45f400ba-43a2-3cf1-8ef4-77c2d4a66704",
    "name" : "DEVELOPER - Get trigger handler - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/23gxnsftrqlpqxdckpg7ktg8hyb/Emiko+Kub",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "45f400ba-43a2-3cf1-8ef4-77c2d4a66704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTriggerHandler"
        }
      }
    },
    "insertionIndex" : 366
  }, {
    "id" : "f50880da-e317-373b-b3f3-e1f51ca8b619",
    "name" : "DEVELOPER - Get trigger handlers - 200",
    "request" : {
      "urlPath" : "/admin/triggers/handlers/yufau1y0nt9jx6565w3l2jey57o8sicv7yv2nxyhoo8fjklpm7f6468i0ylqxxa9jnrxqtkqic4cfspdz9s4ds2wd8h26vk7fn3sfurbjdg5ruv9e52oqlshs4bl4tbnebhtxvlztjtes1cidvixrge2tkzefqjm0w7m5pcnzia8dqwwmu0n",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f50880da-e317-373b-b3f3-e1f51ca8b619",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTriggerHandlers"
        }
      }
    },
    "insertionIndex" : 367
  }, {
    "id" : "a3df35c1-0982-3eee-b1cb-583f9e572899",
    "name" : "DEVELOPER - Get trigger definitions - 200",
    "request" : {
      "urlPath" : "/admin/triggers/definitions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a3df35c1-0982-3eee-b1cb-583f9e572899",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetTriggers"
        }
      }
    },
    "insertionIndex" : 368
  }, {
    "id" : "589a714f-9c40-3f6b-acc6-fa2018be6794",
    "name" : "Get Systems for a developer",
    "request" : {
      "urlPath" : "/admin/systems/t65s24w1sbgbhj8pmlgkx8wxrehrz88t32azvet90ea8m6rduo8pvotj7svifxda5cqe2jq9st2ilx4mzgzwclzfa1y4nclwi27q39fil4s10dpxthf628sri06a5yle2jaryaphj09q5aobkbya",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "589a714f-9c40-3f6b-acc6-fa2018be6794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemsForDev",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 369
  }, {
    "id" : "b398f3fc-c88b-3f7c-8c78-23605c51f3df",
    "name" : "Get Systems for a developer",
    "request" : {
      "urlPath" : "/admin/systems/gu7ep9pt6k8ct50modwgn2vai9m4ia6vh78b213kyywqxtd1fs5jord1z6twfstmboa08l19sr3cemwimxqb0clzdut6lagx2iv5if3liw53ti0",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b398f3fc-c88b-3f7c-8c78-23605c51f3df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemsForDev",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/analyticItems"
            }
          }
        }
      }
    },
    "insertionIndex" : 370
  }, {
    "id" : "6897d757-5b93-3be6-9d84-2e8e2db78f87",
    "name" : "2FA - Test SMS Service",
    "request" : {
      "urlPath" : "/admin/settings/sms-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6897d757-5b93-3be6-9d84-2e8e2db78f87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TestSMS",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 371
  }, {
    "id" : "19c94e91-d4fa-33ec-ab31-a911c72bef25",
    "name" : "2FA - Test SMS Service",
    "request" : {
      "urlPath" : "/admin/settings/sms-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19c94e91-d4fa-33ec-ab31-a911c72bef25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TestSMS",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 372
  }, {
    "id" : "cc5113b7-b5d5-36d1-ae7f-13b2739d59c9",
    "name" : "2FA - Delete SMS settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc5113b7-b5d5-36d1-ae7f-13b2739d59c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSMSSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 373
  }, {
    "id" : "461c4567-93f2-3f4b-a847-c3b922909eb0",
    "name" : "2FA - Delete SMS settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "461c4567-93f2-3f4b-a847-c3b922909eb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSMSSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 374
  }, {
    "id" : "8051f812-0dd4-33c5-900e-b20bcc44b74b",
    "name" : "2FA - Create SMS Communication",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8051f812-0dd4-33c5-900e-b20bcc44b74b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSMSCommunication",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 375
  }, {
    "id" : "067fae5f-9bcb-3491-85d7-3d536bea85b4",
    "name" : "2FA - Create SMS Communication",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "067fae5f-9bcb-3491-85d7-3d536bea85b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSMSCommunication",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 376
  }, {
    "id" : "c3613f7c-8544-3502-bb74-874247aa179c",
    "name" : "2FA - Update SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3613f7c-8544-3502-bb74-874247aa179c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSMSSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 377
  }, {
    "id" : "5ac6b28a-fb7d-3b28-a221-22f792d04921",
    "name" : "2FA - Update SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ac6b28a-fb7d-3b28-a221-22f792d04921",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSMSSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 378
  }, {
    "id" : "8e040d5e-3e87-30f7-a5ad-0488ab48981a",
    "name" : "2FA - Get SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e040d5e-3e87-30f7-a5ad-0488ab48981a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SMSSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 379
  }, {
    "id" : "416ce2c9-0d10-3765-8c54-e5bb5071dc5a",
    "name" : "2FA - Get SMS Settings",
    "request" : {
      "urlPath" : "/admin/settings/sms-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"password\" : \"test\",\n  \"validation_message\" : \"Please validate your email here: $LINK\",\n  \"service_name\" : \"Twilio\",\n  \"from\" : \"+15120000000\",\n  \"two_factor_message\" : \"Please use the code to log in: $CODE\",\n  \"url\" : \"https://api.twilio.com\",\n  \"username\" : \"AC25b4eb989b9db8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "416ce2c9-0d10-3765-8c54-e5bb5071dc5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SMSSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "from" : {
                "type" : "string",
                "example" : "+15120000000"
              },
              "password" : {
                "type" : "string",
                "example" : "test"
              },
              "service_name" : {
                "type" : "string",
                "description" : "Only Twilio is supported.",
                "example" : "Twilio"
              },
              "two_factor_message" : {
                "type" : "string",
                "example" : "Please use the code to log in: $CODE"
              },
              "url" : {
                "type" : "string",
                "example" : "https://api.twilio.com"
              },
              "username" : {
                "type" : "string",
                "example" : "AC25b4eb989b9db8"
              },
              "validation_message" : {
                "type" : "string",
                "example" : "Please validate your email here: $LINK"
              }
            },
            "description" : "2FA SMS communication settings"
          }
        }
      }
    },
    "insertionIndex" : 380
  }, {
    "id" : "5198141a-c5fb-3361-a8fb-2aaea99f41cc",
    "name" : "2FA - Update Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5198141a-c5fb-3361-a8fb-2aaea99f41cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSecurity",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 381
  }, {
    "id" : "ac657884-94b2-3bee-a683-b199cb0aab52",
    "name" : "2FA - Update Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"developer_token_ttl\" : 86400,\n  \"two_factor_auth\" : {\n    \"enabled\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac657884-94b2-3bee-a683-b199cb0aab52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSecurity",
          "schema" : {
            "type" : "object",
            "properties" : {
              "developer_token_ttl" : {
                "type" : "integer",
                "example" : 86400
              },
              "two_factor_auth" : {
                "$ref" : "#/components/schemas/enabled"
              }
            },
            "description" : "Security Settings for 2FA"
          }
        }
      }
    },
    "insertionIndex" : 382
  }, {
    "id" : "72b90c80-16c0-3f59-8c81-7d889a0cdbcf",
    "name" : "2FA - View Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72b90c80-16c0-3f59-8c81-7d889a0cdbcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ViewSecurity",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 383
  }, {
    "id" : "e46c6894-1a9b-3b86-9887-eee8878b472c",
    "name" : "2FA - View Security Settings",
    "request" : {
      "urlPath" : "/admin/settings/security",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"developer_token_ttl\" : 86400,\n  \"two_factor_auth\" : {\n    \"enabled\" : true\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e46c6894-1a9b-3b86-9887-eee8878b472c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ViewSecurity",
          "schema" : {
            "type" : "object",
            "properties" : {
              "developer_token_ttl" : {
                "type" : "integer",
                "example" : 86400
              },
              "two_factor_auth" : {
                "$ref" : "#/components/schemas/enabled"
              }
            },
            "description" : "Security Settings for 2FA"
          }
        }
      }
    },
    "insertionIndex" : 384
  }, {
    "id" : "e4145542-434a-325d-90ab-b0b39cf71013",
    "name" : "2FA - Test Email Service",
    "request" : {
      "urlPath" : "/admin/settings/email-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4145542-434a-325d-90ab-b0b39cf71013",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TestEmail",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 385
  }, {
    "id" : "24258273-6da9-354c-89fd-6a802e4633d4",
    "name" : "2FA - Test Email Service",
    "request" : {
      "urlPath" : "/admin/settings/email-service/test",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24258273-6da9-354c-89fd-6a802e4633d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TestEmail",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 386
  }, {
    "id" : "dbaf169e-5bda-3395-a83d-a81c9bd31ec9",
    "name" : "2FA - Delete email settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbaf169e-5bda-3395-a83d-a81c9bd31ec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteEmailSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 387
  }, {
    "id" : "97eb4eb7-f71b-3379-bb56-aaaf996d6116",
    "name" : "2FA - Delete email settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97eb4eb7-f71b-3379-bb56-aaaf996d6116",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteEmailSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 388
  }, {
    "id" : "0e9218b6-918e-3d85-9978-4d457eea077d",
    "name" : "2FA - Create Email Communication (application/json)",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e9218b6-918e-3d85-9978-4d457eea077d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateEmailCommunication",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 389
  }, {
    "id" : "19f50469-a421-3001-92b0-7902a5c62579",
    "name" : "2FA - Create Email Communication - 200",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "19f50469-a421-3001-92b0-7902a5c62579",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateEmailCommunication"
        }
      }
    },
    "insertionIndex" : 390
  }, {
    "id" : "08800004-866a-36a7-a75a-458a9c1c5f89",
    "name" : "2FA - Update Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08800004-866a-36a7-a75a-458a9c1c5f89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateEmailSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 391
  }, {
    "id" : "990db566-2477-39f6-a280-ae064fab92dd",
    "name" : "2FA - Update Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "990db566-2477-39f6-a280-ae064fab92dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateEmailSettings",
          "schema" : {
            "required" : [ "success" ],
            "type" : "object",
            "properties" : {
              "success" : {
                "type" : "boolean",
                "description" : "Describes if the action was successfully performed or not.",
                "example" : true
              }
            },
            "description" : "Success responses"
          }
        }
      }
    },
    "insertionIndex" : 392
  }, {
    "id" : "08ff027c-826e-307d-a914-59a2705f9604",
    "name" : "2FA - Get Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"error\" : {\n    \"code\" : 400,\n    \"level\" : 1,\n    \"line\" : \"/go/src/clearblade/router/newRouter.go:336\",\n    \"detail\" : \"Invalid token\",\n    \"id\" : \"f5471393-b45e-42dc-8a13-034284d291f5\",\n    \"category\" : \"User Permissions\",\n    \"message\" : \"Bad request\",\n    \"lowLevelError\" : { }\n  },\n  \"statusCode\" : 400\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08ff027c-826e-307d-a914-59a2705f9604",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailSettings",
          "schema" : {
            "required" : [ "error", "statusCode" ],
            "type" : "object",
            "properties" : {
              "error" : {
                "$ref" : "#/components/schemas/Error"
              },
              "statusCode" : {
                "type" : "integer",
                "description" : "Error code",
                "example" : 400
              }
            },
            "description" : "Error responses"
          }
        }
      }
    },
    "insertionIndex" : 393
  }, {
    "id" : "6af6276e-419a-3121-bb92-2edb9db19ce7",
    "name" : "2FA - Get Email Settings",
    "request" : {
      "urlPath" : "/admin/settings/email-service",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryption_type\" : \"STARTTLS\",\n  \"two_factor_subject\" : \"Login code\",\n  \"password\" : \"test\",\n  \"protocol\" : \"SMTP\",\n  \"validation_message\" : \"Please validate your email here: $LINK\",\n  \"port\" : \"587\",\n  \"validation_subject\" : \"Email validation\",\n  \"host\" : \"smtp.gmail.com\",\n  \"from\" : \"example@gmail.com\",\n  \"two_factor_message\" : \"Please use the code to log in: $CODE\",\n  \"username\" : \"example@gmail.com\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6af6276e-419a-3121-bb92-2edb9db19ce7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "EmailSettings",
          "schema" : {
            "type" : "object",
            "properties" : {
              "encryption_type" : {
                "type" : "string",
                "example" : "STARTTLS"
              },
              "from" : {
                "type" : "string",
                "example" : "example@gmail.com"
              },
              "host" : {
                "type" : "string",
                "example" : "smtp.gmail.com"
              },
              "password" : {
                "type" : "string",
                "example" : "test"
              },
              "port" : {
                "type" : "string",
                "example" : "587"
              },
              "protocol" : {
                "type" : "string",
                "example" : "SMTP"
              },
              "two_factor_message" : {
                "type" : "string",
                "example" : "Please use the code to log in: $CODE"
              },
              "two_factor_subject" : {
                "type" : "string",
                "example" : "Login code"
              },
              "username" : {
                "type" : "string",
                "example" : "example@gmail.com"
              },
              "validation_message" : {
                "type" : "string",
                "example" : "Please validate your email here: $LINK"
              },
              "validation_subject" : {
                "type" : "string",
                "example" : "Email validation"
              }
            },
            "description" : "2FA email communication settings"
          }
        }
      }
    },
    "insertionIndex" : 394
  }, {
    "id" : "89173c17-60c9-3781-a2d5-183d0b41ff7f",
    "name" : "ADMIN - Change dev password (Admin) - 200",
    "request" : {
      "urlPath" : "/admin/resetpassword",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "89173c17-60c9-3781-a2d5-183d0b41ff7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ResetPassword"
        }
      }
    },
    "insertionIndex" : 395
  }, {
    "id" : "2f08e902-415f-3d5a-9196-0f117d2789f1",
    "name" : "DEVELOPER - Regen secret - 200",
    "request" : {
      "urlPath" : "/admin/regensystemsecret",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2f08e902-415f-3d5a-9196-0f117d2789f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegenSecret"
        }
      }
    },
    "insertionIndex" : 396
  }, {
    "id" : "fa4b7dd3-6679-37d3-9a9c-b5cc5159515b",
    "name" : "DEVELOPER - Register new dev - 500",
    "request" : {
      "urlPath" : "/admin/reg",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "fa4b7dd3-6679-37d3-9a9c-b5cc5159515b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegDev"
        }
      }
    },
    "insertionIndex" : 397
  }, {
    "id" : "80237df5-22a6-3b21-9874-02c41a90f48c",
    "name" : "DEVELOPER - Register new dev (application/json)",
    "request" : {
      "urlPath" : "/admin/reg",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is_two_factor\" : false,\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"a4a4a3eb0bd89fe8bbeb99f8d2be01\",\n  \"dev_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80237df5-22a6-3b21-9874-02c41a90f48c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "RegDev",
          "schema" : {
            "type" : "object",
            "properties" : {
              "dev_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4"
              },
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "is_two_factor" : {
                "type" : "boolean",
                "example" : false
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "a4a4a3eb0bd89fe8bbeb99f8d2be01"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 398
  }, {
    "id" : "1d983f41-a9f8-3570-97f2-a6ef91c3e2d9",
    "name" : "DEVELOPER - Change dev password - 200",
    "request" : {
      "urlPath" : "/admin/putpass",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1d983f41-a9f8-3570-97f2-a6ef91c3e2d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ChangeDevPassword"
        }
      }
    },
    "insertionIndex" : 399
  }, {
    "id" : "428a95c4-724b-3ae6-9f92-23534f4ded06",
    "name" : "DEVELOPER - Gets the information for a portal",
    "request" : {
      "urlPath" : "/admin/portals/grvt485nyfufgtasbtbkwzz9ot00",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n}, {\n  \"last_updated\" : \"03 Aug 20 02:33 UTC\",\n  \"name\" : \"ExamplePortal\",\n  \"namespace\" : \"\",\n  \"description\" : \"Portal Description.\",\n  \"system_key\" : \"98a6cbe60bceafcc5d8b4a33b\",\n  \"type\" : \"custom_v2\",\n  \"config\" : { }\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "428a95c4-724b-3ae6-9f92-23534f4ded06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetPortalInfo",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/portalSettings"
            }
          }
        }
      }
    },
    "insertionIndex" : 400
  }, {
    "id" : "5b7d7b7c-4685-38d7-a211-34f6874ddabc",
    "name" : "ADMIN - Get system status - 200",
    "request" : {
      "urlPath" : "/admin/platform/6nwb2isaxumfvledu7p5qeq6ifgwhtomaxf1i6um3nqrjrbgfpo9us4seb0tprdd55v0af93mmsfk6hkyvm1s9o9gykf4gerwycymow8xzbp5eaph0epvzckdb0utwzhiodputt6pbg6v3ocbd",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5b7d7b7c-4685-38d7-a211-34f6874ddabc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemStatus"
        }
      }
    },
    "insertionIndex" : 401
  }, {
    "id" : "432134bf-a2db-3903-bd94-589bcb56a376",
    "name" : "AUDIT - Get list of systems that have been updated",
    "request" : {
      "urlPath" : "/admin/platform/systems/uawlm2b186ytt9svasgxcj2t5tvbl5vny596mryp6v0sl3apzftfkqtmlp5bw7yd9l7s6hfg1ugidnfj1p4itzb1v1v4zdh6onl0pv0ksplbecp49s6h",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n}, {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "432134bf-a2db-3903-bd94-589bcb56a376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemUpdatesDev",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/analyticItems"
            }
          }
        }
      }
    },
    "insertionIndex" : 402
  }, {
    "id" : "c25d2458-3a1b-38cb-a148-42113c056018",
    "name" : "AUDIT - Get list of systems that have been updated",
    "request" : {
      "urlPath" : "/admin/platform/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"owner\" : \"example@clearblade.com\",\n  \"numAPIReqsYear\" : 2,\n  \"developers\" : \"\",\n  \"numEdges\" : 2,\n  \"numRoles\" : 2,\n  \"numRecTotal\" : 2,\n  \"numPubYear\" : 2,\n  \"numServices\" : 2,\n  \"numRecYear\" : 2,\n  \"numPub\" : 2,\n  \"numDeployments\" : 2,\n  \"numDevs\" : 2,\n  \"numLibraries\" : 2,\n  \"lastUpdated\" : 1580407664,\n  \"numDevices\" : 2,\n  \"numPubMonth\" : 2,\n  \"numAPIReqsMonth\" : 2,\n  \"name\" : \"System-Name\",\n  \"diskUsage\" : 2,\n  \"numRecMonth\" : 2,\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"disabled\" : false,\n  \"numUsers\" : 2,\n  \"numAPIReqsTotal\" : 2\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c25d2458-3a1b-38cb-a148-42113c056018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemUpdates",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/analyticItems"
            }
          }
        }
      }
    },
    "insertionIndex" : 403
  }, {
    "id" : "51fac468-ec19-337d-a53a-27b85e7e5be5",
    "name" : "ADMIN - Get developers - 200",
    "request" : {
      "urlPath" : "/admin/platform/developers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "51fac468-ec19-337d-a53a-27b85e7e5be5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDevs"
        }
      }
    },
    "insertionIndex" : 404
  }, {
    "id" : "833ff15b-8a89-3437-b6dc-ad4eceae8f0b",
    "name" : "DEVELOPER - Disable developer - 200",
    "request" : {
      "urlPath" : "/admin/platform/developer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "833ff15b-8a89-3437-b6dc-ad4eceae8f0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DisableDev"
        }
      }
    },
    "insertionIndex" : 405
  }, {
    "id" : "5d1497e0-bcc2-3ef5-95dc-bdef891df24b",
    "name" : "ADMIN - Get developer - 200",
    "request" : {
      "urlPath" : "/admin/platform/developer",
      "method" : "GET",
      "queryParameters" : {
        "developer" : {
          "equalTo" : "tf9k4kswases462bpl7udkqb121o2yy8jnb0neptz90uyjdd89nfcucq7a3i5eavwbivvgtc4ghxf5bi3s6tsp5p7i1nt7rcma7e7qp8wuxxo88ruzdhk6iwje32v8tl3dh81k0n2i2d8coyh4bzl1b0h3542ssoiyjaxt048wau3wqhgycu2e8rscj"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5d1497e0-bcc2-3ef5-95dc-bdef891df24b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDev"
        }
      }
    },
    "insertionIndex" : 406
  }, {
    "id" : "2746ef02-0f87-3034-b8cf-431eae4e32b7",
    "name" : "ADMIN - Get platform license key. - 400",
    "request" : {
      "urlPath" : "/admin/pkey",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "2746ef02-0f87-3034-b8cf-431eae4e32b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLicenseKey"
        }
      }
    },
    "insertionIndex" : 407
  }, {
    "id" : "e5f34c1c-b743-36d1-8905-c31891676fef",
    "name" : "ADMIN - Get platform license key. - 200",
    "request" : {
      "urlPath" : "/admin/pkey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e5f34c1c-b743-36d1-8905-c31891676fef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetLicenseKey"
        }
      }
    },
    "insertionIndex" : 408
  }, {
    "id" : "000d2e74-2a12-35ef-b274-14a1ab3f7f4e",
    "name" : "DEVELOPER - Log out dev - 200",
    "request" : {
      "urlPath" : "/admin/logout",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "000d2e74-2a12-35ef-b274-14a1ab3f7f4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevLogout"
        }
      }
    },
    "insertionIndex" : 409
  }, {
    "id" : "d2e62c85-bda2-3180-9a63-4b762566c237",
    "name" : "DEVELOPER - Delete edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/fh14tsnsxng8j009pm4m5iuvea1kqms4ehkb91e9874y3h07d6fpmmj6jrk9w8mfllgk24ircjkc9yakpgg23qzo34zgit5q5a01ounz6dmptbay74sbk7q5s8pw9fnmebwcc7pbyc1ycgnrk36x8l0eg8uj9c4hd0xpdf/Quintin+Torphy+I",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d2e62c85-bda2-3180-9a63-4b762566c237",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteEdge"
        }
      }
    },
    "insertionIndex" : 410
  }, {
    "id" : "c24e8715-3b75-359f-9790-d98c46c626fe",
    "name" : "DEVELOPER - Create edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/p45bokqwxv6jt6rpx5qsl5a8dbtywtvpu9c7p2a0s4tn9csylgp4zhd6uqmuvmdwrbcsdattkn9w84dsgy3e51pzq6up4f6bne98vrzz/Elmira+Hudson",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c24e8715-3b75-359f-9790-d98c46c626fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateEdge"
        }
      }
    },
    "insertionIndex" : 411
  }, {
    "id" : "c8f2be2e-e12f-3cc7-bd0e-734bf0805321",
    "name" : "DEVELOPER - Update edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/9r8mnblsg2ybdyi8xdmmqcq9zgh61933b8pfubuk5tge2sl9mdylwan6ywhq3ewll2kgz943jm2ybcifh62dd5voz8q1jrib2mycuma6dirp781xqiymb0dwcd0i4mbvr8df05t49pocezhs9ue3y0uava8wvazhtfj/Carolyn+Pfannerstill",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c8f2be2e-e12f-3cc7-bd0e-734bf0805321",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateEdge"
        }
      }
    },
    "insertionIndex" : 412
  }, {
    "id" : "e89ae6be-7d38-3a05-a547-31683d4ca183",
    "name" : "DEVELOPER - Get edge - 200",
    "request" : {
      "urlPath" : "/admin/edges/d1st8ylf08mwpu8zlak4uxtq9vz70s88jttoed2u8krb3xjql8je0azujdegh9j1qtp6s4fjkgp47snlpqsclc8jm8q7lw233sb68fx8oc9xdwu4hicn0sw07qwb9atjnp308tgzyo164dym5mhlqdv2opfxxeghtqa0t/Shiela+Wolf",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e89ae6be-7d38-3a05-a547-31683d4ca183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdge"
        }
      }
    },
    "insertionIndex" : 413
  }, {
    "id" : "bf205ef5-8810-3bac-b605-04af136c85e7",
    "name" : "DEVELOPER - Get edges for the adapter - 200",
    "request" : {
      "urlPath" : "/admin/edges/mkdrl5yz5ljuw2pa0a1zrvfp7zy04094bm8ta02bqeyb8gragp6gr7tp1ujcjkf53f85yruhe4c0rsnxo/control",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bf205ef5-8810-3bac-b605-04af136c85e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAdapterEdges"
        }
      }
    },
    "insertionIndex" : 414
  }, {
    "id" : "d7d20c0c-7bf6-3960-bc17-d072b94b1e12",
    "name" : "DEVELOPER - Get edges - 200",
    "request" : {
      "urlPath" : "/admin/edges/mk690yficy1y51npleogz5y0h60ucld6r0e2js6j2qw2j5d4x4tsu9121hrh9d360yxdohve4hsks5rm070bef9gqu6pjiecp7g174n73gei4ds8cn0yah1qj8zxudezua",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d7d20c0c-7bf6-3960-bc17-d072b94b1e12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdges"
        }
      }
    },
    "insertionIndex" : 415
  }, {
    "id" : "714249a3-6cb2-3f2f-8016-7f7584c98f8f",
    "name" : "DEVELOPER - Update edge template - 200",
    "request" : {
      "urlPath" : "/admin/edges/template/i30ri7chwjisfardkyaflbr30nelswfczl9r1c4709mednf2y3if3u4nsxmc0pnkx9fkrjdfab8rsfdaos4mq2kfxjrzvae4o03qgs543rddg770t1ftznajaz4ydm4uwshi65t4h7g2ceiep6ov6whnjr/Mac+Kling",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "714249a3-6cb2-3f2f-8016-7f7584c98f8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateEdgeTemplate"
        }
      }
    },
    "insertionIndex" : 416
  }, {
    "id" : "1ad49a9d-30e4-3425-91dd-a8b41037772c",
    "name" : "DEVELOPER - Get edge template - 200",
    "request" : {
      "urlPath" : "/admin/edges/template/yjyv3gcwmdp0fbbvuhm7p4gh63nkc6y8y4ah0iufhc6w2n9p59ydrm5yo38u1tsf43fnsyrksnkkhy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1ad49a9d-30e4-3425-91dd-a8b41037772c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetEdgeTemplate"
        }
      }
    },
    "insertionIndex" : 417
  }, {
    "id" : "320b1da1-66d5-3c67-83c4-16038980d167",
    "name" : "DEVELOPER - Delete device - 200",
    "request" : {
      "urlPath" : "/admin/devices/zbeggy46ve4xd/Avery+Jacobs",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "320b1da1-66d5-3c67-83c4-16038980d167",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSystemDevice"
        }
      }
    },
    "insertionIndex" : 418
  }, {
    "id" : "e36cb72d-9f54-3936-866d-9af1d5a9102d",
    "name" : "DEVELOPER - Create device - 200",
    "request" : {
      "urlPath" : "/admin/devices/432i75vz3zadjkpvdecbo96wvi43mshaqeb44r86z4q8u0jgayoswphjlcthzqc8f7q8xeq3ikhffduw83ct0ufzb8flgaysi8sn7k6w9kcpt60p5px2luc1favi52424wx0a5y7rcaidsndrseguawicd/Dr.+Joel+Reynolds",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e36cb72d-9f54-3936-866d-9af1d5a9102d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSystemDevice"
        }
      }
    },
    "insertionIndex" : 419
  }, {
    "id" : "6a66fa46-41ff-3c10-9059-274d3fc9e04c",
    "name" : "DEVELOPER - Update device - 200",
    "request" : {
      "urlPath" : "/admin/devices/g331re4cu18te982ugb40w1sg8zyt2do0ea866w7m77gva8xzhy8gx9d2r3c0y0rsjbrwkgwi36e088yzuru3mmya5eshamjr1c47mz239cwvigpj5k4by46/Sandy+Lynch",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6a66fa46-41ff-3c10-9059-274d3fc9e04c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSystemDevice"
        }
      }
    },
    "insertionIndex" : 420
  }, {
    "id" : "250ca5db-06d8-3e3c-b482-b33df4e3c5b4",
    "name" : "DEVELOPER - Get device - 200",
    "request" : {
      "urlPath" : "/admin/devices/ic9o2q79l9z64gunmaqciyz9j6t1koba9msdav5e7j7aoxv5od7kednrntq1fmccao21z8ktthuy7fd9y6yg8didke95tf95isiqgxk0f3hlmhaugb0s2nwd/Krystle+Bartell",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "250ca5db-06d8-3e3c-b482-b33df4e3c5b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemDevice"
        }
      }
    },
    "insertionIndex" : 421
  }, {
    "id" : "697513e7-7e4f-3433-a7d6-5bbf6007e85f",
    "name" : "DEVELOPER - Delete devices using a query - 400",
    "request" : {
      "urlPath" : "/admin/devices/h22xowjs7ak3qgx8keoiotx4af6xibllaji8q2ciayz83u0ymymaawmbprygbbmhf3jc6zxl665e49gqev4id0p6qpyn81ap",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "o3o1m44gqqlzs49u43pzlmgtuagq9l9gz3f1ojjxso5bzz5f3a8d0vjnmr4yfv0d751mock0e9izpqxf0he2rmbwom322g1x6a21b9r192093t"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "697513e7-7e4f-3433-a7d6-5bbf6007e85f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDevicesAdmin"
        }
      }
    },
    "insertionIndex" : 422
  }, {
    "id" : "fd21f88d-74db-3389-b92f-99897d8bb561",
    "name" : "DEVELOPER - Delete devices using a query - 200",
    "request" : {
      "urlPath" : "/admin/devices/spsfydrtd77gdc1t89t2ymm9v8p7eu00bdi6vx3dsw978lnufxn",
      "method" : "DELETE",
      "queryParameters" : {
        "query" : {
          "equalTo" : "h2p9x8du6ke8llhqgk4pj8aklwwgbzdxuym8bhyr048rnfk1y2mtyvjf1korv4vg62ph5f7ybarimpnieek5wn8u7wasago8a7jm3vvye1y2dk6mn1bjcdn"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fd21f88d-74db-3389-b92f-99897d8bb561",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDevicesAdmin"
        }
      }
    },
    "insertionIndex" : 423
  }, {
    "id" : "63572d55-5370-3de5-8fbe-a82140d22199",
    "name" : "DEVELOPER - Update devices using a query - 400",
    "request" : {
      "urlPath" : "/admin/devices/5qo3pp23jugsitlc5g53mdxr52c2ymrm5ixxvtuzqd9mp4f",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "63572d55-5370-3de5-8fbe-a82140d22199",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDevicesAdmin"
        }
      }
    },
    "insertionIndex" : 424
  }, {
    "id" : "4f5a4f09-d4ba-3990-92fa-cda6c4949131",
    "name" : "DEVELOPER - Update devices using a query (application/json)",
    "request" : {
      "urlPath" : "/admin/devices/wcp2qflp9wcz2tikipj8h0m43ogdqipuckry3qgi4nf54dh9p9lg8lrl09p8ldc4s2me7s4orn4ytldhaj7u4h3hz9jqds6ib8nb0e4r73s3w3yn09978q841ih0i13l5xix3vxvj3me7pc7gx6u4dgah7l6rdcb",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TOTAL\" : 6042464768648090980,\n  \"DATA\" : [ { }, { }, { }, { } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f5a4f09-d4ba-3990-92fa-cda6c4949131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateDevicesAdmin",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DATA" : {
                "type" : "array",
                "description" : "An array containing each row returned by a query",
                "items" : {
                  "type" : "object"
                }
              },
              "TOTAL" : {
                "type" : "integer",
                "description" : "The number of rows affected by a query"
              }
            },
            "description" : "An object representing a SQL query result set."
          }
        }
      }
    },
    "insertionIndex" : 425
  }, {
    "id" : "5262b9e9-c7e0-35a0-b0ff-c3be49d0bef1",
    "name" : "DEVELOPER - Get devices with or without a query - 400",
    "request" : {
      "urlPath" : "/admin/devices/l0jc3era78msiwb4uhfcbezgiuar6xzel9dkkd45rn5hnk2bmno3xva9697i9ml621o4ox3dwmhaqv09t1sfiftex24e4f86n76de2jv710qmjd1pkz0x61igwmc34w3c0kesk62u0u3sm9osoimo0wh2w9tu599178",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5262b9e9-c7e0-35a0-b0ff-c3be49d0bef1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemDevices"
        }
      }
    },
    "insertionIndex" : 426
  }, {
    "id" : "62ff9e10-d1f8-3fc5-80b1-0246220e2ae7",
    "name" : "DEVELOPER - Get devices with or without a query - 200",
    "request" : {
      "urlPath" : "/admin/devices/8iau6vjavreq4quui8zpipmkybo09c4197ag1a1vda6gi3f5rr60eypw9zsus6zpntu1p6kfdgao6ipn69fh4logy4y8ijablq6zjaah2l0doql5som8luctgqf55",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "62ff9e10-d1f8-3fc5-80b1-0246220e2ae7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemDevices"
        }
      }
    },
    "insertionIndex" : 427
  }, {
    "id" : "41be83e6-b524-3bbf-8249-b33757a1798f",
    "name" : "DEVELOPER - Delete rotating keys for a device - 200",
    "request" : {
      "urlPath" : "/admin/devices/keys/4t142x1k3dnpvkqvwv35oji6n3ukcpqjfkvs5bk631ej8s4dbuuvmmqqiwwtzgxc2oreuhg61fow9r4ewed5852fw48ina42qji92pxwcqigrb/Dr.+Verdie+Gislason",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "41be83e6-b524-3bbf-8249-b33757a1798f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteDeviceKeys"
        }
      }
    },
    "insertionIndex" : 428
  }, {
    "id" : "e353120c-e8bb-3ce1-81cb-a9e904483e98",
    "name" : "DEVICE -Creates rotating keys for a device.",
    "request" : {
      "urlPath" : "/admin/devices/keys/4hri6lcryjg/Angel+Lebsack",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : [ \"��W&\\u001A�Kw��\", \"��W&\\u001A�Kw��\", \"��W&\\u001A�Kw��\", \"��W&\\u001A�Kw��\" ],\n  \"active_key\" : \"��W&\\u001A�Kw��\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e353120c-e8bb-3ce1-81cb-a9e904483e98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateRotatingKeys",
          "schema" : {
            "type" : "object",
            "properties" : {
              "active_key" : {
                "type" : "string",
                "example" : "��W&\u001A�Kw��"
              },
              "keys" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/rotatingDeviceKeys"
                }
              }
            },
            "description" : "List of rotating keys."
          }
        }
      }
    },
    "insertionIndex" : 429
  }, {
    "id" : "a3b20465-f4da-33fc-9c20-767ade7b5fac",
    "name" : "ADMIN - Add/Remove/Change owner - 500",
    "request" : {
      "urlPath" : "/admin/developers/4qlvui5v1kndqw69rgggyp8ot0o5vzbhsj8ou4tf426zs6q7x9tnlltffg2odzkxdvny50niro0cmj5a7ucxc8tomlozoain4a4p99qp",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a3b20465-f4da-33fc-9c20-767ade7b5fac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdminOwnerChange"
        }
      }
    },
    "insertionIndex" : 430
  }, {
    "id" : "f6d1fc70-0ab5-34ad-87da-b98e288e2073",
    "name" : "ADMIN - Add/Remove/Change owner - 400",
    "request" : {
      "urlPath" : "/admin/developers/f3by8tu829kvv4hqfivefkfb6jyehfyv5ilq0aixshslsej6lnk6snp2zevkxc25s5vqakcrgcow4st0lqwsdhpwj14d2ynr3yyjfohi1cmcbfb33h71nfldm80mxc392cp4r9d1f",
      "method" : "PUT"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "f6d1fc70-0ab5-34ad-87da-b98e288e2073",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdminOwnerChange"
        }
      }
    },
    "insertionIndex" : 431
  }, {
    "id" : "bb514677-6a5c-35b7-8c6e-77510d196e7c",
    "name" : "ADMIN - Add/Remove/Change owner - 200",
    "request" : {
      "urlPath" : "/admin/developers/qjo2mxr7vqvsfhivc2g3hxmzpdyasj6j",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bb514677-6a5c-35b7-8c6e-77510d196e7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AdminOwnerChange"
        }
      }
    },
    "insertionIndex" : 432
  }, {
    "id" : "d3b2c249-5503-3b80-9877-393b76ffa2df",
    "name" : "DATABASES - Retrieves all internal and external database statuses - 200",
    "request" : {
      "urlPath" : "/admin/database/status",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d3b2c249-5503-3b80-9877-393b76ffa2df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetDatabaseStatus"
        }
      }
    },
    "insertionIndex" : 433
  }, {
    "id" : "85c2f866-4a5d-3ffa-91ee-6db0cd3662d1",
    "name" : "ADMIN - Get number of systems available - 404",
    "request" : {
      "urlPath" : "/admin/count/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "85c2f866-4a5d-3ffa-91ee-6db0cd3662d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemCount"
        }
      }
    },
    "insertionIndex" : 434
  }, {
    "id" : "706d3007-0f11-367c-8ab9-27c5ad3e3c3d",
    "name" : "ADMIN - Get number of systems available - 400",
    "request" : {
      "urlPath" : "/admin/count/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "706d3007-0f11-367c-8ab9-27c5ad3e3c3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemCount"
        }
      }
    },
    "insertionIndex" : 435
  }, {
    "id" : "ebb0db11-1b55-3a36-8553-ba86303d17dc",
    "name" : "ADMIN - Get number of systems available - 200",
    "request" : {
      "urlPath" : "/admin/count/systems",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ebb0db11-1b55-3a36-8553-ba86303d17dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystemCount"
        }
      }
    },
    "insertionIndex" : 436
  }, {
    "id" : "9bcc98c7-db67-38a3-9b0b-af8e1b0dc367",
    "name" : "ADMIN - Get number of admin developers - 400",
    "request" : {
      "urlPath" : "/admin/count/developers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "9bcc98c7-db67-38a3-9b0b-af8e1b0dc367",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAdminDevCount"
        }
      }
    },
    "insertionIndex" : 437
  }, {
    "id" : "6d40d40d-dacb-3467-a221-def9d57076e8",
    "name" : "ADMIN - Get number of admin developers - 200",
    "request" : {
      "urlPath" : "/admin/count/developers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6d40d40d-dacb-3467-a221-def9d57076e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAdminDevCount"
        }
      }
    },
    "insertionIndex" : 438
  }, {
    "id" : "b18d0f91-bdab-387f-bf9e-1208ce9f1f4b",
    "name" : "DEVELOPER - Delete collection - 200",
    "request" : {
      "urlPath" : "/admin/collectionmanagement",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "z838"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b18d0f91-bdab-387f-bf9e-1208ce9f1f4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevDeleteCollection"
        }
      }
    },
    "insertionIndex" : 439
  }, {
    "id" : "474b8b83-6809-337f-aacb-60b0f075e5bc",
    "name" : "DEVELOPER - Create collection - 200",
    "request" : {
      "urlPath" : "/admin/collectionmanagement",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "474b8b83-6809-337f-aacb-60b0f075e5bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevCreateCollection"
        }
      }
    },
    "insertionIndex" : 440
  }, {
    "id" : "5a07e75d-5edc-3e81-8a4e-f6d734bdabdb",
    "name" : "DEVELOPER - Update collection - 200",
    "request" : {
      "urlPath" : "/admin/collectionmanagement",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5a07e75d-5edc-3e81-8a4e-f6d734bdabdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevUpdateCollection"
        }
      }
    },
    "insertionIndex" : 441
  }, {
    "id" : "61f0bd14-9323-3962-aa50-700891865cce",
    "name" : "DEVELOPER - Verifies access to the system - 400",
    "request" : {
      "urlPath" : "/admin/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "61f0bd14-9323-3962-aa50-700891865cce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifyAuth"
        }
      }
    },
    "insertionIndex" : 442
  }, {
    "id" : "f3b2d97d-0452-3bbf-8944-05755a8df5ca",
    "name" : "DEVELOPER - Verifies access to the system - 200",
    "request" : {
      "urlPath" : "/admin/checkauth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f3b2d97d-0452-3bbf-8944-05755a8df5ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "VerifyAuth"
        }
      }
    },
    "insertionIndex" : 443
  }, {
    "id" : "82f8e5e7-a3aa-388a-a7a9-47b46e6238de",
    "name" : "DEVELOPER - Authenticate dev",
    "request" : {
      "urlPath" : "/admin/auth",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"is_two_factor\" : false,\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw\",\n  \"expires_at\" : 1589313683,\n  \"user_id\" : \"a4a4a3eb0bd89fe8bbeb99f8d2be01\",\n  \"dev_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82f8e5e7-a3aa-388a-a7a9-47b46e6238de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "AuthDev",
          "schema" : {
            "type" : "object",
            "properties" : {
              "dev_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YhjY2NhNS0xNjRhLTQ5ODgtYjU2MS1jYWVmNTcyNGU0NjAiLCJ1dCI6MSwidHQiOjEsImV4cCI6MTU4OTMxMzY4MywiaWF0IjoxNTg4ODgxNjgzfQ.0FK58r0wcJSQIDuDCAselAdmN-uj_CXHqJqk2mF9WB4"
              },
              "expires_at" : {
                "type" : "integer",
                "description" : "The format is UNIX timestamp. If value is -1, then no refresh token is returned",
                "example" : 1589313683
              },
              "is_two_factor" : {
                "type" : "boolean",
                "example" : false
              },
              "refresh_token" : {
                "type" : "string",
                "example" : "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOiJhNGE0YTNlYjBiZDg5ZmU4YmV4cCI6MTU4OTc0NTY4MywiaWF0IjoxNTg4ODgxNjgzfQ.K2Ji0HldYtUO0RgednnOq117cnZy-ij-C1k1a8qVMsw"
              },
              "user_id" : {
                "type" : "string",
                "example" : "a4a4a3eb0bd89fe8bbeb99f8d2be01"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 444
  }, {
    "id" : "32d16b0b-6a4c-323a-a941-e004f9744f62",
    "name" : "AUDIT - Get counts - 200",
    "request" : {
      "urlPath" : "/admin/audit/4gblbm34t6r6fhu51l87mb16loonn4yiy7peyntnzg/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "32d16b0b-6a4c-323a-a941-e004f9744f62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCountsDev"
        }
      }
    },
    "insertionIndex" : 445
  }, {
    "id" : "c7d412ad-bb5f-3223-a17c-33245bad230c",
    "name" : "AUDIT  - Get Audit Info",
    "request" : {
      "urlPath" : "/admin/audit/58rzk7eq7kvyc0euuuva0gltxt5qkk6xuijqeq4odmxrparw8pdudzcmjrzipzjjjebdcawe9xgmxetftqo5farfgpt89qi1sicwg84dxihhw6eoce7qehsqhuequafyi0lnucuyj67a0bjfdefwubhw90ivd6mofiijv10y9jr5jrwwk0ru6g",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7d412ad-bb5f-3223-a17c-33245bad230c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAuditDev",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/auditItems"
            }
          }
        }
      }
    },
    "insertionIndex" : 446
  }, {
    "id" : "47ec7403-60e5-399d-8bef-0c3aff4f974d",
    "name" : "Audit - Get counts - 200",
    "request" : {
      "urlPath" : "/admin/audit/count",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "47ec7403-60e5-399d-8bef-0c3aff4f974d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetCounts"
        }
      }
    },
    "insertionIndex" : 447
  }, {
    "id" : "1d966b7a-be6a-3125-bdbe-789e783e94a9",
    "name" : "AUDIT  - Get Audit Info",
    "request" : {
      "urlPath" : "/admin/audit",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n}, {\n  \"user_type\" : \"DEV\",\n  \"action_type\" : \"Update\",\n  \"asset_class\" : \"devices\",\n  \"changes\" : \"{\\\"last_location_update\\\":\\\"2020-01-29T20:18:18.429,\\\"last_seen_location\\\":\\\"none\\\",\\\"x_pos\\\":874.2206168192284,\\\"y_pos\\\":739.82265853589}\",\n  \"system_key\" : \"ccafb4cf0bd0dcbcadaccaf9ebba01\",\n  \"response_time\" : 4038669,\n  \"asset_id\" : \"ClearBlade-iPhone\",\n  \"id\" : 10440595,\n  \"time\" : \"2020-01-29T20:18:18.475214Z\",\n  \"email\" : \"example@clearblade.com\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d966b7a-be6a-3125-bdbe-789e783e94a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetAudit",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/auditItems"
            }
          }
        }
      }
    },
    "insertionIndex" : 448
  }, {
    "id" : "6a81a498-a1f3-3a63-a453-701a4d7a33d3",
    "name" : "DEVELOPER - Get systems - 200",
    "request" : {
      "urlPath" : "/admin/allsystems",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6a81a498-a1f3-3a63-a453-701a4d7a33d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GetSystems"
        }
      }
    },
    "insertionIndex" : 449
  }, {
    "id" : "5de3623d-f029-31e6-abf2-7ab46add492b",
    "name" : "DEVELOPER - Get collections - 400",
    "request" : {
      "urlPath" : "/admin/allcollections",
      "method" : "GET",
      "queryParameters" : {
        "appid" : {
          "equalTo" : "8801"
        }
      }
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "5de3623d-f029-31e6-abf2-7ab46add492b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevGetCollections"
        }
      }
    },
    "insertionIndex" : 450
  }, {
    "id" : "4bb6e0d7-c768-3c04-8e6a-9fc21354850a",
    "name" : "DEVELOPER - Get collections - 200",
    "request" : {
      "urlPath" : "/admin/allcollections",
      "method" : "GET",
      "queryParameters" : {
        "appid" : {
          "equalTo" : "m0ej"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4bb6e0d7-c768-3c04-8e6a-9fc21354850a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevGetCollections"
        }
      }
    },
    "insertionIndex" : 451
  }, {
    "id" : "454810ce-761e-3d0f-8a8b-c91117c1a732",
    "name" : "DEVELOPER - Get platform assets - 400",
    "request" : {
      "urlPath" : "/admin/allapps",
      "method" : "GET"
    },
    "response" : {
      "status" : 400
    },
    "uuid" : "454810ce-761e-3d0f-8a8b-c91117c1a732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevGetAssets"
        }
      }
    },
    "insertionIndex" : 452
  }, {
    "id" : "340b291f-a6e5-3c9c-b907-1fcd86abe7b8",
    "name" : "DEVELOPER - Get platform assets - 200",
    "request" : {
      "urlPath" : "/admin/allapps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "340b291f-a6e5-3c9c-b907-1fcd86abe7b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DevGetAssets"
        }
      }
    },
    "insertionIndex" : 453
  } ]
}